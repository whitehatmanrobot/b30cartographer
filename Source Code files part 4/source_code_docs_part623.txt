crosoft.VisualStudio.Debugger.Interop.METADATA_ADDRESS_LOCAL.tokMethod"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.METADATA_ADDRESS_METHOD"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.METADATA_ADDRESS_METHOD.dwOffset"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.METADATA_ADDRESS_METHOD.dwVersion"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.METADATA_ADDRESS_METHOD.tokMethod"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.METADATA_ADDRESS_PARAM"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.METADATA_ADDRESS_PARAM.dwIndex"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.METADATA_ADDRESS_PARAM.tokMethod"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.METADATA_ADDRESS_PARAM.tokParam"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.METADATA_ADDRESS_RETVAL"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.METADATA_ADDRESS_RETVAL.dwCorType"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.METADATA_ADDRESS_RETVAL.dwSigSize"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.METADATA_ADDRESS_RETVAL.rgSig"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.METADATA_ADDRESS_RETVAL.tokMethod"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.METADATA_TYPE"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.METADATA_TYPE.guidModule"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.METADATA_TYPE.tokClass"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.METADATA_TYPE.ulAppDomainID"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.MODULE_INFO"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.MODULE_INFO.dwValidFields"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.MODULE_INFO.m_addrLoadAddress"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.MODULE_INFO.m_addrPreferredLoadAddress"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.MODULE_INFO.m_bstrDebugMessage"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.MODULE_INFO.m_bstrName"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.MODULE_INFO.m_bstrUrl"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.MODULE_INFO.m_bstrUrlSymbolLocation"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.MODULE_INFO.m_bstrVersion"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.MODULE_INFO.m_dwLoadOrder"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.MODULE_INFO.m_dwModuleFlags"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.MODULE_INFO.m_dwSize"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.MODULE_INFO.m_TimeStamp"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.MODULE_SYMBOL_SEARCH_INFO"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.MODULE_SYMBOL_SEARCH_INFO.bstrVerboseSearchInfo"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.MODULE_SYMBOL_SEARCH_INFO.dwValidFields"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.NAME_MATCH"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.NAME_MATCH.nmNone">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.NAME_MATCH.nmCaseSensitive">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.NAME_MATCH.nmCaseInsensitive">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.NameMatchOptions"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.NameMatchOptions.nmNone">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.NameMatchOptions.nmCaseSensitive">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.NameMatchOptions.nmCaseInsensitive">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.NATIVE_ADDRESS"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.NATIVE_ADDRESS.unknown"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.NATIVE_EXCEPTION_INFO"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.NATIVE_EXCEPTION_INFO.ExceptionCode"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.NATIVE_EXCEPTION_INFO.ExceptionFlags"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.NATIVE_EXCEPTION_INFO.ExceptionInformation"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.NATIVE_EXCEPTION_INFO.NumberOfParameters"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.PDB_TYPE"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.PDB_TYPE.guidModule"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.PDB_TYPE.symid"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.PDB_TYPE.ulAppDomainID"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.PENDING_BP_STATE_INFO"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.PENDING_BP_STATE_INFO.Flags"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.PENDING_BP_STATE_INFO.state"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.PROCESS_INFO"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.PROCESS_INFO.bstrAttachedSessionName"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.PROCESS_INFO.bstrBaseName"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.PROCESS_INFO.bstrFileName"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.PROCESS_INFO.bstrTitle"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.PROCESS_INFO.CreationTime"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.PROCESS_INFO.dwSessionId"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.PROCESS_INFO.Fields"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.PROCESS_INFO.Flags"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.PROCESS_INFO.ProcessId"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.PROGRAM_NODE_ARRAY"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.PROGRAM_NODE_ARRAY.dwCount"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.PROGRAM_NODE_ARRAY.Members"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.PROVIDER_PROCESS_DATA"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.PROVIDER_PROCESS_DATA.Fields"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.PROVIDER_PROCESS_DATA.fIsDebuggerPresent"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.PROVIDER_PROCESS_DATA.ProgramNodes"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.RESOLVED_MODULES"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.RESOLVED_MODULES.ctResolvedModules"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.RESOLVED_MODULES.pguidResolvedModules"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.SYMBOL_SEARCH_INFO"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.SYMBOL_SEARCH_INFO.bstrPath"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.SYMBOL_SEARCH_INFO.hrHRESULT"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.TEXT_POSITION"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.TEXT_POSITION.dwColumn"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.TEXT_POSITION.dwLine"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.THREADPROPERTIES"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.THREADPROPERTIES.bstrLocation"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.THREADPROPERTIES.bstrName"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.THREADPROPERTIES.bstrPriority"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.THREADPROPERTIES.dwFields"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.THREADPROPERTIES.dwSuspendCount"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.THREADPROPERTIES.dwThreadId"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.THREADPROPERTIES.dwThreadState"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.TYPE_INFO"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.TYPE_INFO.dwKind"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.TYPE_INFO.unionmember"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.UNMANAGED_ADDRESS_PHYSICAL"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.UNMANAGED_ADDRESS_PHYSICAL.offset"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.UNMANAGED_ADDRESS_THIS_RELATIVE"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.UNMANAGED_ADDRESS_THIS_RELATIVE.dwBitLength"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.UNMANAGED_ADDRESS_THIS_RELATIVE.dwBitOffset"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.UNMANAGED_ADDRESS_THIS_RELATIVE.dwOffset"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.WRAPPED_DEBUGGER_ARRAY"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.WRAPPED_DEBUGGER_ARRAY.dwCount"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.WRAPPED_DEBUGGER_ARRAY.Members"></member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Assemblies\v2.0\Microsoft.VisualStudio.Shell.Interop.10.0.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.VisualStudio.Shell.Interop.10.0</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__DSI_FLAGS"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__DSI_FLAGS.DSI_USESHOWWINDOW">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__DSI_FLAGS.DSI_USESIZE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__DSI_FLAGS.DSI_USEPOSITION">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__DSI_FLAGS.DSI_USECOUNTCHARS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__DSI_FLAGS.DSI_USEFILLATTRIBUTE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__DSI_FLAGS.DSI_RUNFULLSCREEN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__DSI_FLAGS.DSI_FORCEONFEEDBACK">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__DSI_FLAGS.DSI_FORCEOFFFEEDBACK">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__DSI_FLAGS.DSI_USESTDHANDLES">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__DSI_FLAGS.DSI_USECREATIONFLAGS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__DSI_FLAGS.DSI_INHERITHANDLES">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__FILTERKEYSMESSAGES"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__FILTERKEYSMESSAGES.FilterKeysMessage_GotFocus">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__FILTERKEYSMESSAGES.FilterKeysMessage_LostFocus">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__FILTERKEYSMESSAGES.FilterKeysMessage_SysKeyDown">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__FILTERKEYSMESSAGES.FilterKeysMessage_KeyDown">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__FILTERKEYSMESSAGES.FilterKeysMessage_Character">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__FILTERKEYSMESSAGES.FilterKeysMessage_DragDrop">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__FILTERKEYSMESSAGES.FilterKeysMessage_TextChanged">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__FRD_FLAGS"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__FRD_FLAGS.FRDF_SUPPORTS_RETARGETING">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__FRD_FLAGS.FRDF_DEFAULT">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__FRD_OUTCOME"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__FRD_OUTCOME.FRDO_RETARGET_TO_40">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__FRD_OUTCOME.FRDO_LEAVE_UNLOADED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__FRD_OUTCOME.FRDO_GOTO_DOWNLOAD_SITE">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__GRADIENTTYPE3"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__GRADIENTTYPE3.VSGRADIENT_TOOLBOX_SELECTED_HEADING_TOP">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__GRADIENTTYPE3.VSGRADIENT_TOOLBOX_SELECTED_HEADING_BOTTOM">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__ProjectReferenceOutputValidity"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__ProjectReferenceOutputValidity.PROV_DoDefaultCheck">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__ProjectReferenceOutputValidity.PROV_OutputValid">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__ProjectReferenceOutputValidity.PROV_OutputInvalid">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__PSFFILEID4"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__PSFFILEID4.PSFFILEID_WcfServiceReferencesConfig">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__PSFFILEID4.PSFFILEID_FIRST4">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VISUALEFFECTS"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VISUALEFFECTS.VISUALEFFECTS_None">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VISUALEFFECTS.VISUALEFFECTS_Animations">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VISUALEFFECTS.VISUALEFFECTS_Gradients">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VISUALEFFECTS.VISUALEFFECTS_AllRichEffects">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VISUALEFFECTS.VISUALEFFECTS_UseHardwareAcceleration">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSADDITEMFLAGS3"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSADDITEMFLAGS3.VSADDITEM_NoOnlineTemplates">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VsApplicationDataFolder"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VsApplicationDataFolder.ApplicationDataFolder_LocalSettings">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VsApplicationDataFolder.ApplicationDataFolder_RoamingSettings">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VsApplicationDataFolder.ApplicationDataFolder_Configuration">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VsApplicationDataFolder.ApplicationDataFolder_Documents">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VsApplicationDataFolder.ApplicationDataFolder_UserExtensions">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VsApplicationDataFolder.ApplicationDataFolder_ApplicationExtensions">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSBSLFLAGS">
      <summary>Flags that determine some of the ways projects are loaded. They are passed to methods such as <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolution4.EnsureProjectIsLoaded(System.Guid@,System.UInt32)" />, <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolution4.EnsureProjectsAreLoaded(System.UInt32,System.Guid[],System.UInt32)" />, and <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolution4.EnsureSolutionIsLoaded(System.UInt32)" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSBSLFLAGS.VSBSLFLAGS_None">
      <summary>The default behavior.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSBSLFLAGS.VSBSLFLAGS_NotCancelable">
      <summary>Disable the Cancel button on the wait dialog during project load. (The Cancel button is not implemented by Visual Studio 2010.)</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSBSLFLAGS.VSBSLFLAGS_LoadBuildDependencies">
      <summary>Load all the build dependencies of the project. This includes references between projects and user-defined dependencies at the solution level. By default Visual Studio loads only the dependencies necessary for design-time features (IntelliSense, form designers, etc.).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSBSLFLAGS.VSBSLFLAGS_ExpandProjectOnLoad">
      <summary>If this project is loaded, expand it in the Solution Explorer.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSBSLFLAGS.VSBSLFLAGS_SelectProjectOnLoad">
      <summary>If this project is loaded, select it in the Solution Explorer.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSBSLFLAGS.VSBSLFLAGS_LoadAllPendingProjects">
      <summary>Force all projects to load except for F<see cref=":Microsoft.VisualStudio.Shell.Interop._VSProjectLoadPriority.PLP_ExplicitLoadOnly" /> projects. By default Visual Studio completes the loading only of <see cref="F:Microsoft.VisualStudio.Shell.Interop._VSProjectLoadPriority.PLP_DemandLoad" /> and <see cref="F:Microsoft.VisualStudio.Shell.Interop._VSProjectLoadPriority.PLP_BackgroundLoad" /> projects. This flag is valid only for <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolution4.EnsureSolutionIsLoaded(System.UInt32)" />.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSCREATENEWPROJVIADLGEXFLAGS2"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCREATENEWPROJVIADLGEXFLAGS2.VNPVDE_NOONLINETEMPLATES">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCREATENEWPROJVIADLGEXFLAGS2.VNPVDE_NORECENTTEMPLATES">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCREATENEWPROJVIADLGEXFLAGS2.VNPVDE_NOFRAMEWORKSELECTION">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCREATENEWPROJVIADLGEXFLAGS2.VNPVDE_HIDESOLUTIONNAME">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSCREATETOOLWIN2"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCREATETOOLWIN2.CTW_fDocumentLikeTool">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSDBGLAUNCHFLAGS5"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSDBGLAUNCHFLAGS5.DBGLAUNCH_PrepForDebug">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSDBGLAUNCHFLAGS5.DBGLAUNCH_TerminateOnStop">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSDBGLAUNCHFLAGS5.DBGLAUNCH_BreakOneProcess">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VsEnclosingScopes"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VsEnclosingScopes.EnclosingScopes_None">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VsEnclosingScopes.EnclosingScopes_Configuration">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VsEnclosingScopes.EnclosingScopes_UserSettings">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VsErrorType"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VsErrorType.VsErrorType_Error">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VsErrorType.VsErrorType_Warning">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSFPROPID4"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSFPROPID4.VSFPROPID_Icon">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSFPROPID4.VSFPROPID_TabImage">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSFPROPID4.VSFPROPID_Thumbnail">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSFPROPID4.VSFPROPID_NavigationInterface">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSFPROPID4.VSFPROPID_NextCloneID">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSFPROPID4.VSFPROPID4_FIRST">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSFRAMEWORKASSEMBLYTYPE"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSFRAMEWORKASSEMBLYTYPE.VSFRAMEWORKASSEMBLYTYPE_FRAMEWORK">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSFRAMEWORKASSEMBLYTYPE.VSFRAMEWORKASSEMBLYTYPE_EXTENSIONS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSFRAMEWORKASSEMBLYTYPE.VSFRAMEWORKASSEMBLYTYPE_ALL">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSFRAMEWORKCOMPATIBILITY"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSFRAMEWORKCOMPATIBILITY.VSFRAMEWORKCOMPATIBILITY_COMPATIBLE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSFRAMEWORKCOMPATIBILITY.VSFRAMEWORKCOMPATIBILITY_INCOMPATIBLEIDENTITY">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSFRAMEWORKCOMPATIBILITY.VSFRAMEWORKCOMPATIBILITY_INCOMPATIBLEVERSION">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSFRAMEWORKCOMPATIBILITY.VSFRAMEWORKCOMPATIBILITY_INCOMPATIBLEPROFILE">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID4"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID4.VSHPROPID_TargetFrameworkMoniker">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID4.VSHPROPID_ExternalItem">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID4.VSHPROPID_SupportsAspNetIntegration">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID4.VSHPROPID_DesignTimeDependencies">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID4.VSHPROPID_BuildDependencies">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID4.VSHPROPID_DescriptiveName">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID4.VSHPROPID_FIRST4">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSLITETREEOPTS2"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSLITETREEOPTS2.LT_ENABLEEXPLORERTHEME">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSPROPID4">
      <summary>Identifies property settings for a solution (in addition to <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSPROPID" />, <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSPROPID2" />, and <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSPROPID3" />).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROPID4.VSPROPID_NoFrameworkDialogState">
      <summary>Returns an integer representing the state of the project load security dialog kept between different language packages.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROPID4.VSPROPID_IsInBackgroundIdleLoadProjectBatch">
      <summary>Returns true if Visual Studio is currently loading a batch of pending projects in the background at idle. <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionLoadEvents.OnBeforeLoadProjectBatch(true)" /> has been called.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROPID4.VSPROPID_IsInSyncDemandLoadProjectBatch">
      <summary>Returns true if Visual Studio is currently loading a batch of pending projects synchronously, triggered by some user action or command invocation that requires a set of projects to be loaded. <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionLoadEvents.OnBeforeLoadProjectBatch(false)" /> has been called.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROPID4.VSPROPID_IsSolutionFullyLoaded">
      <summary>Returns true if all projects have been loaded in the background.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROPID4.VSPROPID_BaseSolutionExplorerCaption">
      <summary>Gets or sets a string representing the base caption for the Solution Explorer tool window. The default is "SolutionExplorer". The full caption is built by concatenating <see cref="F:Microsoft.VisualStudio.Shell.Interop.VSPROPID4.VSPROPID_BaseSolutionExplorerCaption" /> and <see cref="F:Microsoft.VisualStudio.Shell.Interop.VSPROPID4.VSPROPID_SolutionExplorerCaptionSuffix" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROPID4.VSPROPID_SolutionExplorerCaptionSuffix">
      <summary>Gets or sets the suffix of the caption for the Solution Explorer tool window. The default is an empty string. The full caption is built by concatenating <see cref="F:Microsoft.VisualStudio.Shell.Interop.VSPROPID4.VSPROPID_BaseSolutionExplorerCaption" /> and <see cref="F:Microsoft.VisualStudio.Shell.Interop.VSPROPID4.VSPROPID_SolutionExplorerCaptionSuffix" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROPID4.VSPROPID_SolutionExplorerCaption">
      <summary>Gets the full caption of the Solution Explorer tool window. The full caption is built by concatenating <see cref="F:Microsoft.VisualStudio.Shell.Interop.VSPROPID4.VSPROPID_BaseSolutionExplorerCaption" /> and <see cref="F:Microsoft.VisualStudio.Shell.Interop.VSPROPID4.VSPROPID_SolutionExplorerCaptionSuffix" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROPID4.VSPROPID_AddNewProjectAsSibling">
      <summary>Gets or sets a boolean: true if new projects should be added on the sibling directory of the solution, otherwise false.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROPID4.VSPROPID_ActiveSolutionLoadManager">
      <summary>Gets or sets an object representing the active Solution Load Manager. The default is null. A solution load manager is able to control how projects are loaded during the Solution Open operation. It can control whether projects are loaded immediately, loaded in the background (at idle), left to be loaded if needed, or stay unloaded. A solution load manager is expected to implement <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSolutionLoadManager" />. A common approach is to have the solution load manager package autoload for the <see cref="F:Microsoft.VisualStudio.Shell.Interop.UIContextGuids100.SolutionOpeningUIContext" />, for example [ProvideAutoLoad(UIContextGuids100.SolutionOpening)]. This property may also be set during <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionLoadEvents.OnBeforeOpenSolution" /> or during <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsPersistSolutionProps.WriteSolutionProps(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.String,Microsoft.VisualStudio.OLE.Interop.IPropertyBag)" /> for the pre-solution section.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROPID4.VSPROPID_FIRST4">
      <summary>Represents the first VSPROPID in this set.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSRESTARTTYPE"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSRESTARTTYPE.RESTART_Normal">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSRESTARTTYPE.RESTART_Elevated">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VsSettingsScope"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VsSettingsScope.SettingsScope_Configuration">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VsSettingsScope.SettingsScope_UserSettings">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VsSettingsType"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VsSettingsType.SettingsType_Invalid">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VsSettingsType.SettingsType_Int">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VsSettingsType.SettingsType_Int64">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VsSettingsType.SettingsType_String">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VsSettingsType.SettingsType_Binary">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID4"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID4.VSSPROPID_ShellInitialized">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID4.VSSPROPID_ZeroConfigProjectDir">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID4.VSSPROPID_LocalAppDataDir">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID4.VSSPROPID_LayoutIsRightToLeft">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID4.VSSPROPID_OpenFileStartDir">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID4.VSSPROPID_IsModal">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID4.VSSPROPID_MainWindowDataSource">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID4.VSSPROPID_VisualEffectsOption">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID4.VSSPROPID_VisualEffectsAllowed">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID4.VSSPROPID_IsExecutingCommand">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID4.VSSPROPID_ReuseSavedActiveDocWindow">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID4.VSSPROPID_ActivityLogPath">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID4.VSSPROPID_ConfigurationTimestampUtc">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID4.VSSPROPID_FIRST4">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_ACTIVEBORDER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_ACTIVECAPTION">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_APPWORKSPACE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_BACKGROUND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_BUTTONFACE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_BUTTONHIGHLIGHT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_BUTTONSHADOW">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_BUTTONTEXT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_CAPTIONTEXT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_GRAYTEXT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_HIGHLIGHT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_HIGHLIGHTTEXT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_INACTIVEBORDER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_INACTIVECAPTION">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_INACTIVECAPTIONTEXT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_INFOBACKGROUND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_INFOTEXT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_MENU">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_MENUTEXT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_SCROLLBAR">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_THREEDDARKSHADOW">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_THREEDFACE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_THREEDHIGHLIGHT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_THREEDLIGHTSHADOW">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_THREEDSHADOW">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_WINDOW">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_WINDOWFRAME">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_WINDOWTEXT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_AUTOHIDE_TAB_TEXT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_AUTOHIDE_TAB_BACKGROUND_BEGIN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_AUTOHIDE_TAB_BACKGROUND_END">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_AUTOHIDE_TAB_BORDER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_AUTOHIDE_TAB_MOUSEOVER_TEXT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_AUTOHIDE_TAB_MOUSEOVER_BACKGROUND_BEGIN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_AUTOHIDE_TAB_MOUSEOVER_BACKGROUND_END">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_AUTOHIDE_TAB_MOUSEOVER_BORDER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_AUTOHIDE_RESIZEGRIP">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_CLASSDESIGNER_CLASSCOMPARTMENT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_CLASSDESIGNER_CLASSHEADERBACKGROUND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_CLASSDESIGNER_COMMENTBORDER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_CLASSDESIGNER_COMMENTSHAPEBACKGROUND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_CLASSDESIGNER_COMMENTTEXT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_CLASSDESIGNER_COMPARTMENTSEPARATOR">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_CLASSDESIGNER_CONNECTIONROUTEBORDER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_CLASSDESIGNER_DEFAULTCONNECTION">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_CLASSDESIGNER_DEFAULTSHAPETITLEBACKGROUND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_CLASSDESIGNER_DEFAULTSHAPEBACKGROUND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_CLASSDESIGNER_DEFAULTSHAPEBORDER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_CLASSDESIGNER_DEFAULTSHAPESUBTITLE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_CLASSDESIGNER_DEFAULTSHAPETEXT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_CLASSDESIGNER_DEFAULTSHAPETITLE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_CLASSDESIGNER_DELEGATECOMPARTMENT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_CLASSDESIGNER_DELEGATEHEADER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_CLASSDESIGNER_DIAGRAMBACKGROUND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_CLASSDESIGNER_EMPHASISBORDER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_CLASSDESIGNER_ENUMHEADER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_CLASSDESIGNER_FIELDASSOCIATION">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_CLASSDESIGNER_GRADIENTEND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_CLASSDESIGNER_INHERITANCE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_CLASSDESIGNER_INTERFACEHEADER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_CLASSDESIGNER_INTERFACECOMPARTMENT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_CLASSDESIGNER_LASSO">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_CLASSDESIGNER_LOLLIPOP">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_CLASSDESIGNER_PROPERTYASSOCIATION">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_CLASSDESIGNER_REFERENCEDASSEMBLYBORDER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_CLASSDESIGNER_RESIZINGSHAPEBORDER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_CLASSDESIGNER_SHAPEBORDER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_CLASSDESIGNER_SHAPESHADOW">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_CLASSDESIGNER_TEMPCONNECTION">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_CLASSDESIGNER_TYPEDEF">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_CLASSDESIGNER_TYPEDEFHEADER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_CLASSDESIGNER_UNRESOLVEDTEXT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_CLASSDESIGNER_VBMODULECOMPARTMENT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_CLASSDESIGNER_VBMODULEHEADER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMBOBOX_BACKGROUND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMBOBOX_BORDER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMBOBOX_DISABLED_BACKGROUND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMBOBOX_DISABLED_BORDER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMBOBOX_DISABLED_GLYPH">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMBOBOX_GLYPH">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMBOBOX_MOUSEDOWN_BACKGROUND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMBOBOX_MOUSEDOWN_BORDER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMBOBOX_MOUSEOVER_BACKGROUND_BEGIN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMBOBOX_MOUSEOVER_BACKGROUND_MIDDLE1">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMBOBOX_MOUSEOVER_BACKGROUND_MIDDLE2">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMBOBOX_MOUSEOVER_BACKGROUND_END">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMBOBOX_MOUSEOVER_BORDER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMBOBOX_MOUSEOVER_GLYPH">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMBOBOX_POPUP_BACKGROUND_BEGIN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMBOBOX_POPUP_BACKGROUND_END">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMBOBOX_POPUP_BORDER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMMANDBAR_CHECKBOX">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMMANDBAR_MENU_BACKGROUND_GRADIENTBEGIN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMMANDBAR_MENU_BACKGROUND_GRADIENTEND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMMANDBAR_MENU_BORDER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMMANDBAR_MENU_ICONBACKGROUND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMMANDBAR_MENU_MOUSEOVER_SUBMENU_GLYPH">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMMANDBAR_MENU_SEPARATOR">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMMANDBAR_MENU_SUBMENU_GLYPH">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMMANDBAR_MOUSEDOWN_BACKGROUND_BEGIN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMMANDBAR_MOUSEDOWN_BACKGROUND_MIDDLE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMMANDBAR_MOUSEDOWN_BACKGROUND_END">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMMANDBAR_MOUSEDOWN_BORDER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMMANDBAR_MOUSEOVER_BACKGROUND_BEGIN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMMANDBAR_MOUSEOVER_BACKGROUND_MIDDLE1">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMMANDBAR_MOUSEOVER_BACKGROUND_MIDDLE2">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMMANDBAR_MOUSEOVER_BACKGROUND_END">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMMANDBAR_OPTIONS_BACKGROUND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMMANDBAR_OPTIONS_GLYPH">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMMANDBAR_OPTIONS_MOUSEDOWN_BACKGROUND_BEGIN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMMANDBAR_OPTIONS_MOUSEDOWN_BACKGROUND_MIDDLE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMMANDBAR_OPTIONS_MOUSEDOWN_BACKGROUND_END">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMMANDBAR_OPTIONS_MOUSEOVER_BACKGROUND_BEGIN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMMANDBAR_OPTIONS_MOUSEOVER_BACKGROUND_MIDDLE1">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMMANDBAR_OPTIONS_MOUSEOVER_BACKGROUND_MIDDLE2">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMMANDBAR_OPTIONS_MOUSEOVER_BACKGROUND_END">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMMANDBAR_OPTIONS_MOUSEOVER_GLYPH">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMMANDBAR_SELECTED_BORDER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMMANDBAR_TOOLBAR_BORDER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMMANDBAR_TOOLBAR_SEPARATOR">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMMANDSHELF_BACKGROUND_GRADIENTBEGIN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMMANDSHELF_BACKGROUND_GRADIENTMIDDLE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMMANDSHELF_BACKGROUND_GRADIENTEND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMMANDSHELF_HIGHLIGHT_GRADIENTBEGIN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMMANDSHELF_HIGHLIGHT_GRADIENTMIDDLE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_COMMANDSHELF_HIGHLIGHT_GRADIENTEND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_DIAGREPORT_BACKGROUND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_DIAGREPORT_SECONDARYPAGE_HEADER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_DIAGREPORT_SECONDARYPAGE_SUBTITLE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_DIAGREPORT_SECONDARYPAGE_TITLE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_DIAGREPORT_SUMMARYPAGE_HEADER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_DIAGREPORT_SUMMARYPAGE_SUBTITLE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_DIAGREPORT_SUMMARYPAGE_TITLE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_DIAGREPORT_TEXT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_DOCKTARGET_BACKGROUND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_DOCKTARGET_BORDER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_DOCKTARGET_BUTTON_BACKGROUND_BEGIN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_DOCKTARGET_BUTTON_BACKGROUND_END">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_DOCKTARGET_BUTTON_BORDER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_DOCKTARGET_GLYPH_BACKGROUND_BEGIN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_DOCKTARGET_GLYPH_BACKGROUND_END">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_DOCKTARGET_GLYPH_ARROW">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_DOCKTARGET_GLYPH_BORDER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_DROPDOWN_BACKGROUND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_DROPDOWN_BORDER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_DROPDOWN_DISABLED_BACKGROUND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_DROPDOWN_DISABLED_BORDER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_DROPDOWN_DISABLED_GLYPH">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_DROPDOWN_GLYPH">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_DROPDOWN_MOUSEDOWN_BACKGROUND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_DROPDOWN_MOUSEDOWN_BORDER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_DROPDOWN_MOUSEOVER_BACKGROUND_BEGIN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_DROPDOWN_MOUSEOVER_BACKGROUND_MIDDLE1">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_DROPDOWN_MOUSEOVER_BACKGROUND_MIDDLE2">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_DROPDOWN_MOUSEOVER_BACKGROUND_END">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_DROPDOWN_MOUSEOVER_BORDER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_DROPDOWN_MOUSEOVER_GLYPH">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_DROPDOWN_POPUP_BACKGROUND_BEGIN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_DROPDOWN_POPUP_BACKGROUND_END">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_DROPDOWN_POPUP_BORDER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_DROPSHADOW_BACKGROUND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_ENVIRONMENT_BACKGROUND_GRADIENTMIDDLE1">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_ENVIRONMENT_BACKGROUND_GRADIENTMIDDLE2">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_ENVIRONMENT_BACKGROUND_TEXTURE1">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_ENVIRONMENT_BACKGROUND_TEXTURE2">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_EXTENSIONMANAGER_STAR_HIGHLIGHT1">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_EXTENSIONMANAGER_STAR_HIGHLIGHT2">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_EXTENSIONMANAGER_STAR_INACTIVE1">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_EXTENSIONMANAGER_STAR_INACTIVE2">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_FILETAB_HOT_BORDER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_FILETAB_HOT_TEXT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_FILETAB_HOT_GLYPH">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_FILETAB_INACTIVE_GRADIENTTOP">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_FILETAB_INACTIVE_GRADIENTBOTTOM">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_FILETAB_INACTIVE_DOCUMENTBORDER_BACKGROUND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_FILETAB_INACTIVE_DOCUMENTBORDER_EDGE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_FILETAB_INACTIVE_TEXT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_FILETAB_LASTACTIVE_GRADIENTTOP">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_FILETAB_LASTACTIVE_GRADIENTMIDDLE1">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_FILETAB_LASTACTIVE_GRADIENTMIDDLE2">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_FILETAB_LASTACTIVE_GRADIENTBOTTOM">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_FILETAB_LASTACTIVE_DOCUMENTBORDER_BACKGROUND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_FILETAB_LASTACTIVE_DOCUMENTBORDER_EDGE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_FILETAB_LASTACTIVE_TEXT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_FILETAB_LASTACTIVE_GLYPH">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_FILETAB_SELECTED_GRADIENTMIDDLE1">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_FILETAB_SELECTED_GRADIENTMIDDLE2">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_NEWPROJECT_BACKGROUND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_NEWPROJECT_PROVIDER_HOVER_FOREGROUND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_NEWPROJECT_PROVIDER_HOVER_BEGIN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_NEWPROJECT_PROVIDER_HOVER_MIDDLE1">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_NEWPROJECT_PROVIDER_HOVER_MIDDLE2">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_NEWPROJECT_PROVIDER_HOVER_END">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_NEWPROJECT_PROVIDER_INACTIVE_FOREGROUND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_NEWPROJECT_PROVIDER_INACTIVE_BEGIN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_NEWPROJECT_PROVIDER_INACTIVE_END">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_NEWPROJECT_ITEM_SELECTED_BORDER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_NEWPROJECT_ITEM_SELECTED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_NEWPROJECT_ITEM_INACTIVE_BEGIN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_NEWPROJECT_ITEM_INACTIVE_END">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_NEWPROJECT_ITEM_INACTIVE_BORDER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_PAGE_CONTENTEXPANDER_CHEVRON">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_PAGE_CONTENTEXPANDER_SEPARATOR">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_PAGE_SIDEBAREXPANDER_BODY">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_PAGE_SIDEBAREXPANDER_CHEVRON">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_PAGE_SIDEBAREXPANDER_HEADER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_PAGE_SIDEBAREXPANDER_HEADER_HOVER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_PAGE_SIDEBAREXPANDER_HEADER_PRESSED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_PAGE_SIDEBAREXPANDER_SEPARATOR">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_PAGE_SIDEBAREXPANDER_TEXT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_SCROLLBAR_ARROW_BACKGROUND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_SCROLLBAR_ARROW_DISABLED_BACKGROUND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_SCROLLBAR_ARROW_MOUSEOVER_BACKGROUND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_SCROLLBAR_ARROW_PRESSED_BACKGROUND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_SCROLLBAR_BACKGROUND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_SCROLLBAR_DISABLED_BACKGROUND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_SCROLLBAR_THUMB_BACKGROUND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_SCROLLBAR_THUMB_BORDER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_SCROLLBAR_THUMB_GLYPH">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_SCROLLBAR_THUMB_MOUSEOVER_BACKGROUND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_SCROLLBAR_THUMB_PRESSED_BACKGROUND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_SEARCHBOX_BACKGROUND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_SEARCHBOX_BORDER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_SEARCHBOX_MOUSEOVER_BACKGROUND_BEGIN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_SEARCHBOX_MOUSEOVER_BACKGROUND_MIDDLE1">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_SEARCHBOX_MOUSEOVER_BACKGROUND_MIDDLE2">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_SEARCHBOX_MOUSEOVER_BACKGROUND_END">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_SEARCHBOX_MOUSEOVER_BORDER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_SEARCHBOX_PRESSED_BACKGROUND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_SEARCHBOX_PRESSED_BORDER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_STARTPAGE_BACKGROUND_GRADIENTBEGIN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_STARTPAGE_BACKGROUND_GRADIENTEND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_STARTPAGE_BUTTON_BORDER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_STARTPAGE_BUTTON_MOUSEOVER_BACKGROUND_BEGIN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_STARTPAGE_BUTTON_MOUSEOVER_BACKGROUND_END">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_STARTPAGE_BUTTON_MOUSEOVER_BACKGROUND_MIDDLE1">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_STARTPAGE_BUTTON_MOUSEOVER_BACKGROUND_MIDDLE2">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_STARTPAGE_BUTTON_PINNED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_STARTPAGE_BUTTON_PIN_DOWN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_STARTPAGE_BUTTON_PIN_HOVER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_STARTPAGE_BUTTON_UNPINNED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_STARTPAGE_BUTTONTEXT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_STARTPAGE_BUTTONTEXT_HOVER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_STARTPAGE_SELECTEDITEM_BACKGROUND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_STARTPAGE_SELECTEDITEM_STROKE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_STARTPAGE_SEPARATOR">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_STARTPAGE_TAB_BACKGROUND_BEGIN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_STARTPAGE_TAB_BACKGROUND_END">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_STARTPAGE_TAB_MOUSEOVER_BACKGROUND_BEGIN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_STARTPAGE_TAB_MOUSEOVER_BACKGROUND_END">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_STARTPAGE_TEXT_BODY">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_STARTPAGE_TEXT_BODY_SELECTED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_STARTPAGE_TEXT_BODY_UNSELECTED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_STARTPAGE_TEXT_CONTROL_LINK_SELECTED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_STARTPAGE_TEXT_CONTROL_LINK_SELECTED_HOVER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_STARTPAGE_TEXT_DATE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_STARTPAGE_TEXT_HEADING">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_STARTPAGE_TEXT_HEADING_MOUSEOVER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_STARTPAGE_TEXT_HEADING_SELECTED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_STARTPAGE_TEXT_SUBHEADING">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_STARTPAGE_TEXT_SUBHEADING_MOUSEOVER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_STARTPAGE_TEXT_SUBHEADING_SELECTED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_STARTPAGE_UNSELECTEDITEM_BACKGROUND_BEGIN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_STARTPAGE_UNSELECTEDITEM_BACKGROUND_END">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_STARTPAGE_UNSELECTEDITEM_STROKE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_STATUSBAR_TEXT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_TITLEBAR_ACTIVE_GRADIENTMIDDLE1">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_TITLEBAR_ACTIVE_GRADIENTMIDDLE2">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_TOOLBOX_SELECTED_HEADING_BEGIN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_TOOLBOX_SELECTED_HEADING_MIDDLE1">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_TOOLBOX_SELECTED_HEADING_MIDDLE2">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_TOOLBOX_SELECTED_HEADING_END">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_TOOLWINDOW_BUTTON_INACTIVE_GLYPH">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_TOOLWINDOW_BUTTON_INACTIVE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_TOOLWINDOW_BUTTON_INACTIVE_BORDER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_TOOLWINDOW_BUTTON_HOVER_INACTIVE_GLYPH">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_TOOLWINDOW_BUTTON_DOWN_INACTIVE_GLYPH">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_TOOLWINDOW_BUTTON_ACTIVE_GLYPH">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_TOOLWINDOW_BUTTON_HOVER_ACTIVE_GLYPH">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_TOOLWINDOW_BUTTON_DOWN_ACTIVE_GLYPH">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_TOOLWINDOW_CONTENTTAB_GRADIENTBEGIN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_TOOLWINDOW_CONTENTTAB_GRADIENTEND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_TOOLWINDOW_FLOATING_FRAME">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_TOOLWINDOW_TAB_MOUSEOVER_BACKGROUND_BEGIN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_TOOLWINDOW_TAB_MOUSEOVER_BACKGROUND_END">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_TOOLWINDOW_TAB_MOUSEOVER_BORDER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_TOOLWINDOW_TAB_MOUSEOVER_TEXT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_VIZSURFACE_BROWN_DARK">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_VIZSURFACE_BROWN_LIGHT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_VIZSURFACE_BROWN_MEDIUM">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_VIZSURFACE_DARKGOLD_DARK">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_VIZSURFACE_DARKGOLD_LIGHT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_VIZSURFACE_DARKGOLD_MEDIUM">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_VIZSURFACE_GOLD_DARK">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_VIZSURFACE_GOLD_LIGHT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_VIZSURFACE_GOLD_MEDIUM">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_VIZSURFACE_GREEN_DARK">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_VIZSURFACE_GREEN_LIGHT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_VIZSURFACE_GREEN_MEDIUM">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_VIZSURFACE_PLUM_DARK">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_VIZSURFACE_PLUM_LIGHT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_VIZSURFACE_PLUM_MEDIUM">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_VIZSURFACE_RED_DARK">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_VIZSURFACE_RED_LIGHT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_VIZSURFACE_RED_MEDIUM">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_VIZSURFACE_SOFTBLUE_DARK">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_VIZSURFACE_SOFTBLUE_LIGHT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_VIZSURFACE_SOFTBLUE_MEDIUM">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_VIZSURFACE_STEELBLUE_DARK">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_VIZSURFACE_STEELBLUE_LIGHT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_VIZSURFACE_STEELBLUE_MEDIUM">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_VIZSURFACE_STRONGBLUE_DARK">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_VIZSURFACE_STRONGBLUE_LIGHT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_VIZSURFACE_STRONGBLUE_MEDIUM">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX3.VSCOLOR_LASTEX3">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSTABBEDMODE"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTABBEDMODE.VSTABBEDMODE_NotTabbed">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTABBEDMODE.VSTABBEDMODE_SelectedTab">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTABBEDMODE.VSTABBEDMODE_Tabbed">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSUIACCELMODIFIERS"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSUIACCELMODIFIERS.VSAM_NONE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSUIACCELMODIFIERS.VSAM_SHIFT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSUIACCELMODIFIERS.VSAM_CONTROL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSUIACCELMODIFIERS.VSAM_ALT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSUIACCELMODIFIERS.VSAM_WINDOWS">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSUIDATAFORMAT"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSUIDATAFORMAT.VSDF_RESERVED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSUIDATAFORMAT.VSDF_INVALID">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSUIDATAFORMAT.VSDF_BUILTIN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSUIDATAFORMAT.VSDF_WIN32">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSUIDATAFORMAT.VSDF_WINFORMS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSUIDATAFORMAT.VSDF_WPF">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__WindowFrameTypeFlags"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__WindowFrameTypeFlags.WINDOWFRAMETYPE_Document">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__WindowFrameTypeFlags.WINDOWFRAMETYPE_Tool">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__WindowFrameTypeFlags.WINDOWFRAMETYPE_All">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__WindowFrameTypeFlags.WINDOWFRAMETYPE_Uninitialized">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__WindowFrameTypeFlags.WINDOWFRAMETYPE_AllStates">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._BuildSystemKindFlags2"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._BuildSystemKindFlags2.BSK_MSBUILD_VS9">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._BuildSystemKindFlags2.BSK_MSBUILD_VS10">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._NoFrameworkDialogState"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._NoFrameworkDialogState.NOFXDS_AlwaysShowDialog">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._NoFrameworkDialogState.NOFXDS_HideDialog_KeepUnloaded">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._NoFrameworkDialogState.NOFXDS_HideDialog_RetargetToFramework40">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._VSProjectLoadPriority">
      <summary>Represents the different load priorities that can be set on a project. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._VSProjectLoadPriority.PLP_DemandLoad">
      <summary>Load the project synchronously when the solution is opened. Load on the next idle point, or immediately if one of the EnsureXXXIsLoaded methods of <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSolution4" /> is called.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._VSProjectLoadPriority.PLP_BackgroundLoad">
      <summary>Load the project in the background on idle.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._VSProjectLoadPriority.PLP_LoadIfNeeded">
      <summary>Load the project only if it is needed as a dependency of another project.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._VSProjectLoadPriority.PLP_ExplicitLoadOnly">
      <summary>Keep the project unloaded, even if it is needed as a dependency of another project, until it is explicitly loaded.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._VSProjectUnloadStatus">
      <summary>Represents different reasons for unloading a project.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._VSProjectUnloadStatus.UNLOADSTATUS_UnloadedByUser">
      <summary>The user unloaded the project. The project node caption has the suffix "(unavailable)".</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._VSProjectUnloadStatus.UNLOADSTATUS_LoadPendingIfNeeded">
      <summary>The solution load manager unloaded the project with PLP_LoadIfNeeded. The project node caption has the suffix "(pending)".</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._VSProjectUnloadStatus.UNLOADSTATUS_StorageNotLoadable">
      <summary>The project was unloaded because project storage is not loadable. The project node caption has the suffix "(unavailable)".</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._VSProjectUnloadStatus.UNLOADSTATUS_StorageNotAvailable">
      <summary>The project was unloaded because project storage is not available. The project node caption has the suffix "(unavailable)". The item node caption is set to "The project file or web cannot be found."</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._VSProjectUnloadStatus.UNLOADSTATUS_UpgradeFailed">
      <summary>The project was unloaded because project migration/upgrade failed. The project node caption has the suffix "(unavailable)". The item node caption is set to "The project has not been converted."</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._VSTREEFLAGS2"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._VSTREEFLAGS2.TF_AVOIDPRECACHE">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.ILocalRegistry5"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.ILocalRegistry5.CreateAggregatedManagedInstance(System.String,System.String,System.String,System.IntPtr,System.Guid@,System.IntPtr@)">
      <param name="codeBase"></param>
      <param name="AssemblyName"></param>
      <param name="TypeName"></param>
      <param name="pUnkOuter"></param>
      <param name="riid"></param>
      <param name="ppvObj"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsAddToolboxItems"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsAddToolboxItems.AddItem(Microsoft.VisualStudio.OLE.Interop.IDataObject,Microsoft.VisualStudio.Shell.Interop.TBXITEMINFO[],System.String,System.String)">
      <param name="pDO"></param>
      <param name="ptif"></param>
      <param name="szItemID"></param>
      <param name="lpszTab"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsAddToolboxItems.AddItemWithOwningPackage(Microsoft.VisualStudio.OLE.Interop.IDataObject,Microsoft.VisualStudio.Shell.Interop.TBXITEMINFO[],System.String,System.String,System.Guid@)">
      <param name="pDO"></param>
      <param name="ptif"></param>
      <param name="szItemID"></param>
      <param name="lpszTab"></param>
      <param name="guidPkg"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsBuildManagerAccessor"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBuildManagerAccessor.BeginOneOffBuild"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBuildManagerAccessor.EndOneOffBuild"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBuildManagerAccessor.Escape(System.String,System.String@)">
      <param name="pwszUnescapedValue"></param>
      <param name="pbstrEscapedValue"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBuildManagerAccessor.GetCurrentBatchBuildId(System.UInt32@)">
      <param name="pBatchId"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBuildManagerAccessor.GetSolutionConfiguration(System.Object,System.String@)">
      <param name="punkRootProject"></param>
      <param name="pbstrXmlFragment"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBuildManagerAccessor.IsBuildInProgress"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBuildManagerAccessor.RegisterLogger(System.Int32,System.Object)">
      <param name="submissionId"></param>
      <param name="punkLogger"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBuildManagerAccessor.Unescape(System.String,System.String@)">
      <param name="pwszEscapedValue"></param>
      <param name="pbstrUnescapedValue"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBuildManagerAccessor.UnregisterLoggers(System.Int32)">
      <param name="submissionId"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsBuildPropertyStorage2"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBuildPropertyStorage2.SetPropertyValueEx(System.String,System.String,System.UInt32,System.String)">
      <param name="pszPropName"></param>
      <param name="pszPropertyGroupCondition"></param>
      <param name="storage"></param>
      <param name="pszPropValue"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsCommonMessagePumpClientEvents"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCommonMessagePumpClientEvents.OnAfterMessageProcessed(System.Boolean@)">
      <param name="pfContinue"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCommonMessagePumpClientEvents.OnHandleSignaled(System.UInt32,System.Boolean@)">
      <param name="nHandle"></param>
      <param name="pfContinue"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCommonMessagePumpClientEvents.OnTimeout(System.Boolean@)">
      <param name="pfContinue"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsCommonMessagePumpFactory"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCommonMessagePumpFactory.CreateInstance(Microsoft.VisualStudio.Shell.Interop.IVsCommonMessagePump@)">
      <param name="ppIVsCommonMessagePump"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsComponentEnumeratorFactory4"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsComponentEnumeratorFactory4.GetReferencePathsForTargetFramework(System.String,Microsoft.VisualStudio.Shell.Interop.IEnumComponents@)">
      <param name="TargetFrameworkMoniker"></param>
      <param name="ppEnumerator"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsComponentModelHost"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsComponentModelHost.GetCatalogCacheFolder(System.String@)">
      <param name="pbstrFolderPath"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsComponentModelHost.GetComponentAssemblies(System.UInt32,System.String[],System.UInt32@)">
      <param name="cAssemblies"></param>
      <param name="rgbstrAssemblyPaths"></param>
      <param name="pcActualAssemblies"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsComponentModelHost.QueryLoadComponentAssemblies(System.UInt32,System.String[],System.Boolean[])">
      <param name="cAssemblies"></param>
      <param name="prgAssemblyPaths"></param>
      <param name="rgCanLoad"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsComponentSelectorDlg4"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsComponentSelectorDlg4.ComponentSelectorDlg5(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsComponentUser,System.UInt32,System.IntPtr[],System.String,System.String,System.UInt32@,System.UInt32@,System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORTABINIT[],System.Guid@,System.String,System.String@,System.String)">
      <param name="grfFlags"></param>
      <param name="pUser"></param>
      <param name="cComponents"></param>
      <param name="rgpcsdComponents"></param>
      <param name="lpszDlgTitle"></param>
      <param name="lpszHelpTopic"></param>
      <param name="pxDlgSize"></param>
      <param name="pyDlgSize"></param>
      <param name="cTabInitializers"></param>
      <param name="rgcstiTabInitializers"></param>
      <param name="pguidStartOnThisTab"></param>
      <param name="pszBrowseFilters"></param>
      <param name="pbstrBrowseLocation"></param>
      <param name="TargetFrameworkMoniker"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsConfigureToolboxItem"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsConfigureToolboxItem.ConfigureToolboxItem(System.Object)">
      <param name="item"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsDataObjectStringMapEvents"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDataObjectStringMapEvents.OnStringMapChanged(Microsoft.VisualStudio.OLE.Interop.IDataObject,System.String)">
      <param name="pObject"></param>
      <param name="szStringMapName"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsDataObjectStringMapManager"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDataObjectStringMapManager.AdviseChanges(Microsoft.VisualStudio.OLE.Interop.IDataObject,Microsoft.VisualStudio.Shell.Interop.IVsDataObjectStringMapEvents,System.UInt32@)">
      <param name="pObject"></param>
      <param name="pStringMapEvents"></param>
      <param name="pdwCookie"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDataObjectStringMapManager.CreateStringMap(Microsoft.VisualStudio.Shell.Interop.IVsStringMap@)">
      <param name="ppStringMap"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDataObjectStringMapManager.ReadStringMap(Microsoft.VisualStudio.OLE.Interop.IDataObject,System.String,Microsoft.VisualStudio.Shell.Interop.IVsStringMap@)">
      <param name="pObject"></param>
      <param name="szStringMapName"></param>
      <param name="ppStringMap"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDataObjectStringMapManager.UnadviseChanges(System.UInt32)">
      <param name="dwCookie"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDataObjectStringMapManager.WriteStringMap(Microsoft.VisualStudio.OLE.Interop.IDataObject,System.String,System.Int32,Microsoft.VisualStudio.Shell.Interop.IVsStringMap)">
      <param name="pObject"></param>
      <param name="szStringMapName"></param>
      <param name="fOverwriteExisting"></param>
      <param name="pStringMap"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsDebugger3"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebugger3.IsProcessRecycleRequired(Microsoft.VisualStudio.Shell.Interop.VsDebugTargetProcessInfo[])">
      <param name="pProcessInfo"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebugger3.LaunchDebugTargets3(System.UInt32,Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo3[],Microsoft.VisualStudio.Shell.Interop.VsDebugTargetProcessInfo[])">
      <param name="DebugTargetCount"></param>
      <param name="pDebugTargets"></param>
      <param name="pLaunchResults"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsDebugLaunchHook"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebugLaunchHook.IsProcessRecycleRequired(Microsoft.VisualStudio.Shell.Interop.VsDebugTargetProcessInfo[])">
      <param name="pProcessInfo"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebugLaunchHook.OnLaunchDebugTargets(System.UInt32,Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo3[],Microsoft.VisualStudio.Shell.Interop.VsDebugTargetProcessInfo[])">
      <param name="DebugTargetCount"></param>
      <param name="pDebugTargets"></param>
      <param name="pLaunchResults"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebugLaunchHook.SetNextHook(Microsoft.VisualStudio.Shell.Interop.IVsDebugLaunchHook)">
      <param name="pNextHook"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsDesignerInfo"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDesignerInfo.get_DesignerTechnology(System.String@)">
      <param name="pbstrTechnology"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsDesignTimeAssemblyResolution"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDesignTimeAssemblyResolution.GetTargetFramework(System.String@)">
      <param name="ppTargetFramework"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDesignTimeAssemblyResolution.ResolveAssemblyPathInTargetFx(System.String[],System.UInt32,Microsoft.VisualStudio.Shell.Interop.VsResolvedAssemblyPath[],System.UInt32@)">
      <param name="prgAssemblySpecs"></param>
      <param name="cAssembliesToResolve"></param>
      <param name="prgResolvedAssemblyPaths"></param>
      <param name="pcResolvedAssemblyPaths"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsEditorFactoryChooser"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsEditorFactoryChooser.ChooseEditorFactory(System.String,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.IntPtr,System.Guid@,System.Guid@,System.Guid@)">
      <param name="pszMkDocument"></param>
      <param name="pHier"></param>
      <param name="itemid"></param>
      <param name="punkDocDataExisting"></param>
      <param name="rguidLogicalView"></param>
      <param name="pguidEditorTypeActual"></param>
      <param name="pguidLogicalViewActual"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsErrorItem2"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsErrorItem2.GetCustomIconIndex(System.Int32@)">
      <param name="index"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFrameworkMultiTargeting.CheckFrameworkCompatibility(System.String,System.String,System.UInt32@)">
      <param name="pwszTargetFrameworkMonikerSource"></param>
      <param name="pwszTargetFrameworkMonikerTarget"></param>
      <param name="pdwCompat"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFrameworkMultiTargeting.GetDisplayNameForTargetFx(System.String,System.String@)">
      <param name="pwszTargetFrameworkMoniker"></param>
      <param name="pbstrDisplayName"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFrameworkMultiTargeting.GetFrameworkAssemblies(System.String,System.UInt32,System.Array@)">
      <param name="pwszTargetFrameworkMoniker"></param>
      <param name="atAssemblyType"></param>
      <param name="prgAssemblyPaths"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFrameworkMultiTargeting.GetInstallableFrameworkForTargetFx(System.String,System.String@)">
      <param name="pwszTargetFrameworkMoniker"></param>
      <param name="pbstrInstallableFrameworkMoniker"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFrameworkMultiTargeting.GetSupportedFrameworks(System.Array@)">
      <param name="prgSupportedFrameworks"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFrameworkMultiTargeting.GetTargetFramework(System.String,System.String,System.String@)">
      <param name="pwszAssemblyPath"></param>
      <param name="pwszTargetFrameworkIdentifier"></param>
      <param name="pbstrTargetFrameworkMoniker"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFrameworkMultiTargeting.IsReferenceableInTargetFx(System.String,System.String,System.Boolean@)">
      <param name="pwszAssemblySpec"></param>
      <param name="pwszTargetFrameworkMoniker"></param>
      <param name="pbIsReferenceable"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFrameworkMultiTargeting.ResolveAssemblyPathsInTargetFx(System.String,System.Array,System.UInt32,Microsoft.VisualStudio.Shell.Interop.VsResolvedAssemblyPath[],System.UInt32@)">
      <param name="pwszTargetFrameworkMoniker"></param>
      <param name="prgAssemblySpecs"></param>
      <param name="cAssembliesToResolve"></param>
      <param name="prgResolvedAssemblyPaths"></param>
      <param name="pcResolvedAssemblyPaths"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsFrameworkRetargetingDlg"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFrameworkRetargetingDlg.NavigateToFrameworkDownloadUrl"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFrameworkRetargetingDlg.ShowFrameworkRetargetingDlg(System.String,System.String,System.String,System.UInt32,System.UInt32@,System.Int32@)">
      <param name="pszProjectType"></param>
      <param name="pszProjectName"></param>
      <param name="pszTargetedFrameworkMoniker"></param>
      <param name="dwFlags"></param>
      <param name="pdwOutcome"></param>
      <param name="pbDontShowAgain"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsHelpProvider"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsHelpProvider.DisplayTopic(System.Array,System.Array)">
      <param name="Keywords"></param>
      <param name="Attributes"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsLanguageServiceBuildErrorReporter"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsLanguageServiceBuildErrorReporter.ClearErrors"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsLanguageServiceBuildErrorReporter.ReportError(System.String,System.String,Microsoft.VisualStudio.Shell.Interop.VSTASKPRIORITY,System.Int32,System.Int32,System.String)">
      <param name="bstrErrorMessage"></param>
      <param name="bstrErrorId"></param>
      <param name="nPriority"></param>
      <param name="iLine"></param>
      <param name="iColumn"></param>
      <param name="bstrFileName"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsMacroRecorder"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsMacroRecorder.AddTypeLibRef(System.Guid@,System.UInt32,System.UInt32)">
      <param name="guidTypeLib"></param>
      <param name="uVerMaj"></param>
      <param name="uVerMin"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsMacroRecorder.ExecuteLine(System.String)">
      <param name="pszLine"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsMacroRecorder.GetCodeEmittedFlag(System.Int32@)">
      <param name="pfFlag"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsMacroRecorder.GetKeyWord(System.UInt32,System.String@)">
      <param name="uiKeyWordId"></param>
      <param name="pbstrKeyWord"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsMacroRecorder.GetLastEmitterId(System.Guid@)">
      <param name="pguidEmitter"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsMacroRecorder.GetRecordMode(Microsoft.VisualStudio.Shell.Interop.VSRECORDMODE[])">
      <param name="peRecordMode"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsMacroRecorder.GetStringLiteralExpression(System.String,System.String@)">
      <param name="pszStringValue"></param>
      <param name="pbstrLiteralExpression"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsMacroRecorder.IsValidIdentifier(System.String)">
      <param name="pszIdentifier"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsMacroRecorder.RecordCancel"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsMacroRecorder.RecordEnd"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsMacroRecorder.RecordLine(System.String,System.Guid@)">
      <param name="pszLine"></param>
      <param name="rguidEmitter"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsMacroRecorder.RecordPause"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsMacroRecorder.RecordResume"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsMacroRecorder.RecordStart(System.String)">
      <param name="pszReserved"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsMacroRecorder.ReplaceLine(System.String,System.Guid@)">
      <param name="pszLine"></param>
      <param name="rguidEmitter"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsMacroRecorder.SetCodeEmittedFlag(System.Int32)">
      <param name="fFlag"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsMacroRecorder.SetRecordMode(Microsoft.VisualStudio.Shell.Interop.VSRECORDMODE)">
      <param name="eRecordMode"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsMacros"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsMacros.GetMacroCommands(System.IntPtr@)">
      <param name="ppsaMacroCanonicalNames"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsOutputWindow3"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsOutputWindow3.CreatePane2(System.Guid@,System.String,System.Int32,System.Int32,System.String,System.String)"></member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsProfferCommands4">
      <summary>Adds, finds, renames, and removes commands from the user interface.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfferCommands4.AddCommandBar(System.String,System.UInt32,System.Object,System.UInt32,System.Object@)">
      <summary>Adds a command bar to the user interface.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszCmdBarName">[in] The name of the command bar.</param>
      <param name="dwType">[in] A value from the <see cref="T:EnvDTE.vsCommandBarType" /> enumeration.</param>
      <param name="pCmdBarParent">[in] The parent of the command bar. Use null for a top-level command bar.</param>
      <param name="dwIndex">[in] The index location at which to insert the new command bar on the parent.</param>
      <param name="ppCmdBar">[out] The new command bar.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfferCommands4.AddCommandBarControl(System.String,System.Object,System.UInt32,System.UInt32,System.Object@)">
      <summary>Adds a control to a command bar.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszCmdNameCanonical">[in] The fully qualified (canonical) name of the control to add.</param>
      <param name="pCmdBarParent">[in] The parent command bar.</param>
      <param name="dwIndex">[in] The index location at which to place the control.</param>
      <param name="dwCmdType">[in] A value from the <see cref="T:EnvDTE.vsCommandBarType" /> enumeration.</param>
      <param name="ppCmdBarCtrl">[out] The newly added control.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfferCommands4.AddNamedCommand(System.Guid@,System.Guid@,System.String,System.UInt32@,System.String,System.String,System.String,System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Guid[])">
      <summary>Adds a named command.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pguidPackage">[in] The package GUID. Use null for addins.</param>
      <param name="pguidCmdGroup">[in] The GUID for the group to receive the new command. Use GUID_Macro or GUID_AddIn defined in vbapkg.idl.</param>
      <param name="pszCmdNameCanonical">[in] The full name of the command.</param>
      <param name="pdwCmdId">[out] The ID for the new command.</param>
      <param name="pszCmdNameLocalized">[in] A localized version of the string. May be null.</param>
      <param name="pszBtnText">[in] The text to display on a button. Use null if the added command isn't a button.</param>
      <param name="pszCmdTooltip">[in] The ToolTip text to display. May be null.</param>
      <param name="pszSatelliteDLL">[in] The full path to a satellite DLL implementing the command. May be null.</param>
      <param name="dwBitmapResourceId">[in] The resource identifier of the icon to display for the command. Use zero (0) if there is no bitmap.</param>
      <param name="dwBitmapImageIndex">[in] The index of the bitmap within the bitmap file.</param>
      <param name="dwCmdFlagsDefault">[in] Use zero (0) for the default values to make the command active and visible.</param>
      <param name="cUIContexts">[in] The number of contexts pointed to by the <paramref name="rgguidUIContexts" /> parameter.</param>
      <param name="rgguidUIContexts">[in] An array of GUIDs for the user interface contexts indicating options for displaying the command. For more information, see the UIContext_ members of <see cref="T:Microsoft.VisualStudio.VSConstants" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfferCommands4.AddNamedCommand2(System.Guid@,System.Guid@,System.String,System.UInt32@,System.String,System.String,System.String,System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Guid[],System.UInt32)">
      <summary>Adds a named command. This version has a parameter that specifies a UI element.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pguidPackage">[in] The package GUID. Use null for addins.</param>
      <param name="pguidCmdGroup">[in] The GUID for the group to receive the new command. Use GUID_Macro or GUID_AddIn defined in vbapkg.idl.</param>
      <param name="pszCmdNameCanonical">[in] The full name of the command.</param>
      <param name="pdwCmdId">[out] The ID for the new command.</param>
      <param name="pszCmdNameLocalized">[in] A localized version of the string. May be null.</param>
      <param name="pszBtnText">[in] The text to display on a button. Use null if the added command isn't a button.</param>
      <param name="pszCmdTooltip">[in] The ToolTip text to display. May be null.</param>
      <param name="pszSatelliteDLL">[in] The full path to a satellite DLL implementing the command. May be null.</param>
      <param name="dwBitmapResourceId">[in] The resource identifier for the icon to display for the command. Use zero (0) if there is no bitmap.</param>
      <param name="dwBitmapImageIndex">[in] The index of the bitmap within the bitmap file.</param>
      <param name="dwCmdFlagsDefault">[in] Use zero (0) for the default values to make the command active and visible.</param>
      <param name="cUIContexts">[in] The number of contexts pointed to by the <paramref name="rgguidUIContexts" /> parameter.</param>
      <param name="rgguidUIContexts">[in] An array of GUIDs for the user interface contexts indicating options for displaying the command. For more information, see the UIContext_ members of <see cref="T:Microsoft.VisualStudio.VSConstants" />.</param>
      <param name="dwUIElementType">[in] Integer. A value from the <see cref="T:EnvDTE80.vsCommandControlType" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfferCommands4.AddNamedCommand3(System.Guid@,System.Guid@,System.String,System.UInt32@,System.String,System.String,System.String,System.Object,System.UInt32,System.UInt32,System.Guid[],System.UInt32)">
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pguidPackage">[in] The package GUID. Use null for addins.</param>
      <param name="pguidCmdGroup">[in] The GUID for the group to receive the new command. Use GUID_Macro or GUID_AddIn defined in vbapkg.idl.</param>
      <param name="pszCmdNameCanonical">[in] The full name of the command.</param>
      <param name="pdwCmdId">[out] The ID for the new command.</param>
      <param name="pszCmdNameLocalized">[in] A localized version of the string. May be null.</param>
      <param name="pszBtnText">[in] The text to display on a button. Use null if the added command isn't a button.</param>
      <param name="pszCmdTooltip">[in] The ToolTip text to display. May be null.</param>
      <param name="punkImage">[in] The image. This can be a <see cref="T:System.Drawing.Bitmap" />, and <see cref="T:System.Drawing.Icon" />, or an IPicture.</param>
      <param name="dwCmdFlagsDefault">[in] Use zero (0) for the default values to make the command active and visible.</param>
      <param name="cUIContexts">[in] The number of contexts pointed to by the <paramref name="rgguidUIContexts" /> parameter.</param>
      <param name="rgguidUIContexts">[in] An array of GUIDs for the user interface contexts indicating options for displaying the command. For more information, see the UIContext_ members of <see cref="T:Microsoft.VisualStudio.VSConstants" />.</param>
      <param name="dwUIElementType">[in] A value from the <see cref="T:EnvDTE80.vsCommandControlType" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfferCommands4.FindCommandBar(System.Object,System.Guid@,System.UInt32,System.Object@)">
      <summary>Find the object implementing a specific command.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pToolbarSet">[in] The toolbar set to search. Use null to search the main (default) toolbar set.</param>
      <param name="pguidCmdGroup">[in] The GUID for the command group to search. Use GUID_Macro or GUID_AddIn defined in vbapkg.idl.</param>
      <param name="dwMenuId">[in] The id of the menu item corresponding to the command.</param>
      <param name="ppdispCmdBar">[out] The object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfferCommands4.RemoveCommandBar(System.Object)">
      <summary>Removes a command bar.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pCmdBar">[in] The command bar to remove.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfferCommands4.RemoveCommandBarControl(System.Object)">
      <summary>Removes a control from a command bar.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pCmdBarCtrl">[in] The control.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfferCommands4.RemoveNamedCommand(System.String)">
      <summary>Removes a named command.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszCmdNameCanonical">[in] The canonical (fully-qualified) name of the command to remove.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfferCommands4.RenameNamedCommand(System.String,System.String,System.String)">
      <summary>Renames a named command.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszCmdNameCanonical">[in] The canonical (fully-qualified) name of the command.</param>
      <param name="pszCmdNameCanonicalNew">[in] The new canonical name.</param>
      <param name="pszCmdNameLocalizedNew">[in] The new localized canonical name. May be null.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsProject4"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProject4.AddItem(System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSADDITEMOPERATION,System.String,System.UInt32,System.String[],System.IntPtr,Microsoft.VisualStudio.Shell.Interop.VSADDRESULT[])">
      <param name="itemidLoc"></param>
      <param name="dwAddItemOperation"></param>
      <param name="pszItemName"></param>
      <param name="cFilesToOpen"></param>
      <param name="rgpszFilesToOpen"></param>
      <param name="hwndDlgOwner"></param>
      <param name="pResult"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProject4.AddItemWithSpecific(System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSADDITEMOPERATION,System.String,System.UInt32,System.String[],System.IntPtr,System.UInt32,System.Guid@,System.String,System.Guid@,Microsoft.VisualStudio.Shell.Interop.VSADDRESULT[])">
      <param name="itemidLoc"></param>
      <param name="dwAddItemOperation"></param>
      <param name="pszItemName"></param>
      <param name="cFilesToOpen"></param>
      <param name="rgpszFilesToOpen"></param>
      <param name="hwndDlgOwner"></param>
      <param name="grfEditorFlags"></param>
      <param name="rguidEditorType"></param>
      <param name="pszPhysicalView"></param>
      <param name="rguidLogicalView"></param>
      <param name="pResult"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProject4.ContainsFileEndingWith(System.String,System.Int32@)">
      <param name="pszEndingWith"></param>
      <param name="pfDoesContain"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProject4.ContainsFileWithItemType(System.String,System.Int32@)">
      <param name="pszItemType"></param>
      <param name="pfDoesContain"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProject4.GenerateUniqueItemName(System.UInt32,System.String,System.String,System.String@)">
      <param name="itemidLoc"></param>
      <param name="pszExt"></param>
      <param name="pszSuggestedRoot"></param>
      <param name="pbstrItemName"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProject4.GetFilesEndingWith(System.String,System.UInt32,System.UInt32[],System.UInt32@)">
      <param name="pszEndingWith"></param>
      <param name="celt"></param>
      <param name="rgItemids"></param>
      <param name="pcActual"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProject4.GetFilesWithItemType(System.String,System.UInt32,System.UInt32[],System.UInt32@)">
      <param name="pszItemType"></param>
      <param name="celt"></param>
      <param name="rgItemids"></param>
      <param name="pcActual"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProject4.GetItemContext(System.UInt32,Microsoft.VisualStudio.OLE.Interop.IServiceProvider@)">
      <param name="itemid"></param>
      <param name="ppSP"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProject4.GetMkDocument(System.UInt32,System.String@)">
      <param name="itemid"></param>
      <param name="pbstrMkDocument"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProject4.IsDocumentInProject(System.String,System.Int32@,Microsoft.VisualStudio.Shell.Interop.VSDOCUMENTPRIORITY[],System.UInt32@)">
      <param name="pszMkDocument"></param>
      <param name="pfFound"></param>
      <param name="pdwPriority"></param>
      <param name="pitemid"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProject4.OpenItem(System.UInt32,System.Guid@,System.IntPtr,Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame@)">
      <param name="itemid"></param>
      <param name="rguidLogicalView"></param>
      <param name="punkDocDataExisting"></param>
      <param name="ppWindowFrame"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProject4.OpenItemWithSpecific(System.UInt32,System.UInt32,System.Guid@,System.String,System.Guid@,System.IntPtr,Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame@)">
      <param name="itemid"></param>
      <param name="grfEditorFlags"></param>
      <param name="rguidEditorType"></param>
      <param name="pszPhysicalView"></param>
      <param name="rguidLogicalView"></param>
      <param name="punkDocDataExisting"></param>
      <param name="ppWindowFrame"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProject4.RemoveItem(System.UInt32,System.UInt32,System.Int32@)">
      <param name="dwReserved"></param>
      <param name="itemid"></param>
      <param name="pfResult"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProject4.ReopenItem(System.UInt32,System.Guid@,System.String,System.Guid@,System.IntPtr,Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame@)">
      <param name="itemid"></param>
      <param name="rguidEditorType"></param>
      <param name="pszPhysicalView"></param>
      <param name="rguidLogicalView"></param>
      <param name="punkDocDataExisting"></param>
      <param name="ppWindowFrame"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProject4.TransferItem(System.String,System.String,Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame)">
      <param name="pszMkDocumentOld"></param>
      <param name="pszMkDocumentNew"></param>
      <param name="punkWindowFrame"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsProjectFlavorReferences2"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProjectFlavorReferences2.QueryCheckIsProjectReferenceOutputValid(System.Object,System.String,System.UInt32@)">
      <param name="pReferencedProject"></param>
      <param name="pszReferencedProjectOutput"></param>
      <param name="pOutputValidity"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsProjectUpgradeViaFactory3"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProjectUpgradeViaFactory3.CheckProjectUpgraded(System.String,System.Boolean@,System.String[])">
      <param name="pszFileName"></param>
      <param name="pUpgradeComplete"></param>
      <param name="pbstrUpgradedProjectFileName"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsProvideTargetedToolboxItems"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProvideTargetedToolboxItems.AddNewTypesForNewFramework(System.String,System.String,Microsoft.VisualStudio.Shell.Interop.IVsAddToolboxItems)">
      <param name="szHighestExistingTFMWithSameID"></param>
      <param name="szNewTFM"></param>
      <param name="pAdder"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProvideTargetedToolboxItems.GetInstanceOfExistingTypeForNewFramework(Microsoft.VisualStudio.OLE.Interop.IDataObject,System.String,Microsoft.VisualStudio.Shell.Interop.IVsAddToolboxItems)">
      <param name="pExistingItem"></param>
      <param name="szNewTFM"></param>
      <param name="pAdder"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsRegisterDataSourceFactories"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsRegisterDataSourceFactories.GetDataSource(System.Guid@,System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsUIDataSource@)">
      <param name="guid"></param>
      <param name="dw"></param>
      <param name="ppUIDataSource"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsRegisterDataSourceFactories.RegisterDataSourceFactory(System.Guid@,Microsoft.VisualStudio.Shell.Interop.IVsDataSourceFactory)">
      <param name="guid"></param>
      <param name="pDataSourceFactory"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsRegisterUIFactories"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsRegisterUIFactories.CreateUIElement(System.Guid@,System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsUIElement@)">
      <param name="guid"></param>
      <param name="dw"></param>
      <param name="ppUIElement"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsRegisterUIFactories.RegisterUIFactory(System.Guid@,Microsoft.VisualStudio.Shell.Interop.IVsUIFactory)">
      <param name="guid"></param>
      <param name="pUIFactory"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsResourceManager2"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsResourceManager2.AnnotateIDIfNecessary(System.String,System.Guid@,System.String,System.String@)">
      <param name="szId"></param>
      <param name="guidPackage"></param>
      <param name="szDllPath"></param>
      <param name="pbstrAnnotatedId"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsResourceManager2.ParseResourceID(System.String,System.UInt32,System.String@,System.Guid@,System.String@)">
      <param name="szId"></param>
      <param name="lcid"></param>
      <param name="pbstrUnadornedId"></param>
      <param name="pguidPackage"></param>
      <param name="pbstrDllPath"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSetTargetFrameworkWorkerCallback"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSetTargetFrameworkWorkerCallback.UpdateTargetFramework(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.String,System.String)">
      <param name="pHier"></param>
      <param name="currentTargetFramework"></param>
      <param name="newTargetFramework"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSettingsManager"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsManager.GetApplicationDataFolder(System.UInt32,System.String@)">
      <param name="folder"></param>
      <param name="folderPath"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsManager.GetCollectionScopes(System.String,System.UInt32@)">
      <param name="collectionPath"></param>
      <param name="scopes"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsManager.GetCommonExtensionsSearchPaths(System.UInt32,System.String[],System.UInt32@)">
      <param name="paths"></param>
      <param name="commonExtensionsPaths"></param>
      <param name="actualPaths"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsManager.GetPropertyScopes(System.String,System.String,System.UInt32@)">
      <param name="collectionPath"></param>
      <param name="propertyName"></param>
      <param name="scopes"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsManager.GetReadOnlySettingsStore(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsSettingsStore@)">
      <param name="scope"></param>
      <param name="store"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsManager.GetWritableSettingsStore(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsWritableSettingsStore@)">
      <param name="scope"></param>
      <param name="writableStore"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsStore.CollectionExists(System.String,System.Int32@)">
      <param name="collectionPath"></param>
      <param name="pfExists"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsStore.GetBinary(System.String,System.String,System.UInt32,System.Byte[],System.UInt32[])">
      <param name="collectionPath"></param>
      <param name="propertyName"></param>
      <param name="byteLength"></param>
      <param name="pBytes"></param>
      <param name="actualByteLength"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsStore.GetBool(System.String,System.String,System.Int32@)">
      <param name="collectionPath"></param>
      <param name="propertyName"></param>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsStore.GetBoolOrDefault(System.String,System.String,System.Int32,System.Int32@)">
      <param name="collectionPath"></param>
      <param name="propertyName"></param>
      <param name="defaultValue"></param>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsStore.GetInt(System.String,System.String,System.Int32@)">
      <param name="collectionPath"></param>
      <param name="propertyName"></param>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsStore.GetInt64(System.String,System.String,System.Int64@)">
      <param name="collectionPath"></param>
      <param name="propertyName"></param>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsStore.GetInt64OrDefault(System.String,System.String,System.Int64,System.Int64@)">
      <param name="collectionPath"></param>
      <param name="propertyName"></param>
      <param name="defaultValue"></param>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsStore.GetIntOrDefault(System.String,System.String,System.Int32,System.Int32@)">
      <param name="collectionPath"></param>
      <param name="propertyName"></param>
      <param name="defaultValue"></param>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsStore.GetLastWriteTime(System.String,Microsoft.VisualStudio.Shell.Interop.SYSTEMTIME[])">
      <param name="collectionPath"></param>
      <param name="lastWriteTime"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsStore.GetPropertyCount(System.String,System.UInt32@)">
      <param name="collectionPath"></param>
      <param name="propertyCount"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsStore.GetPropertyName(System.String,System.UInt32,System.String@)">
      <param name="collectionPath"></param>
      <param name="index"></param>
      <param name="propertyName"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsStore.GetPropertyType(System.String,System.String,System.UInt32@)">
      <param name="collectionPath"></param>
      <param name="propertyName"></param>
      <param name="type"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsStore.GetString(System.String,System.String,System.String@)">
      <param name="collectionPath"></param>
      <param name="propertyName"></param>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsStore.GetStringOrDefault(System.String,System.String,System.String,System.String@)">
      <param name="collectionPath"></param>
      <param name="propertyName"></param>
      <param name="defaultValue"></param>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsStore.GetSubCollectionCount(System.String,System.UInt32@)">
      <param name="collectionPath"></param>
      <param name="subCollectionCount"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsStore.GetSubCollectionName(System.String,System.UInt32,System.String@)">
      <param name="collectionPath"></param>
      <param name="index"></param>
      <param name="subCollectionName"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsStore.GetUnsignedInt(System.String,System.String,System.UInt32@)">
      <param name="collectionPath"></param>
      <param name="propertyName"></param>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsStore.GetUnsignedInt64(System.String,System.String,System.UInt64@)">
      <param name="collectionPath"></param>
      <param name="propertyName"></param>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsStore.GetUnsignedInt64OrDefault(System.String,System.String,System.UInt64,System.UInt64@)">
      <param name="collectionPath"></param>
      <param name="propertyName"></param>
      <param name="defaultValue"></param>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsStore.GetUnsignedIntOrDefault(System.String,System.String,System.UInt32,System.UInt32@)">
      <param name="collectionPath"></param>
      <param name="propertyName"></param>
      <param name="defaultValue"></param>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsStore.PropertyExists(System.String,System.String,System.Int32@)">
      <param name="collectionPath"></param>
      <param name="propertyName"></param>
      <param name="pfExists"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsShell4"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsShell4.Restart(System.UInt32)">
      <param name="rtRestartMode"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSolution4">
      <summary>Provides methods for managed loading of the projects in a solution.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolution4.EnsureProjectIsLoaded(System.Guid@,System.UInt32)">
      <summary>Ensures that this project and all required dependencies are loaded.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="guidProject">The GUID of the project.</param>
      <param name="grfFlags">The <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSBSLFLAGS" /> that specify how the projects are to be loaded.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolution4.EnsureProjectsAreLoaded(System.UInt32,System.Guid[],System.UInt32)">
      <summary>Ensures that the specified list of projects and all required dependencies are loaded.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="cProjects">The number of projects in the array.</param>
      <param name="guidProjects">An array of the GUIDs of the projects.</param>
      <param name="grfFlags">The <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSBSLFLAGS" /> that specify how the projects are to be loaded.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolution4.EnsureSolutionIsLoaded(System.UInt32)">
      <summary>Forces the loading of the entire solution synchronously before this function returns. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="grfFlags">The <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSBSLFLAGS" /> that specify how the project is to be loaded.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolution4.IsBackgroundSolutionLoadEnabled(System.Boolean@)">
      <summary>Determines whether the background solution load feature has already been enabled (<see cref="F:Microsoft.VisualStudio.Shell.Interop.__VSPROPID4.VSPROPID_ActiveSolutionLoadManager" /> has been set).</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pfIsEnabled">[out] true if background loading is enabled, otherwise false.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolution4.ReloadProject(System.Guid@)">
      <summary>Reloads a single unloaded project without requiring any dependencies to be loaded.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code. If the project was not previously unloaded, then this method does nothing and returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_FALSE" />.</returns>
      <param name="guidProjectID">The GUID of the project</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolution4.UnloadProject(System.Guid@,System.UInt32)">
      <summary>Unloads a project and sets the reason for unloading it.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="guidProjectID">The GUID of the project</param>
      <param name="dwUnloadStatus">The <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSProjectUnloadStatus" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolution4.WriteUserOptsFile">
      <summary>Writes the solution user options file (.suo).</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSolutionBuildManager4"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionBuildManager4.UpdateProjectDependencies(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)">
      <param name="pHier"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSolutionLoadEvents">
      <summary>Implemented by clients interested in solution events. Subscribe to these events via <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolution.AdviseSolutionEvents(Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents,System.UInt32@)" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionLoadEvents.OnAfterBackgroundSolutionLoadComplete">
      <summary>Fired when the solution load process is fully complete, including all background loading of projects. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionLoadEvents.OnAfterLoadProjectBatch(System.Boolean)">
      <summary>Fired when the loading of a batch of dependent projects is complete.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="fIsBackgroundIdleBatch">true if the batch is loaded in the background, otherwise false.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionLoadEvents.OnBeforeBackgroundSolutionLoadBegins">
      <summary>Fired when background loading of projects is beginning again after the initial solution open operation has completed. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionLoadEvents.OnBeforeLoadProjectBatch(System.Boolean)">
      <summary>Fired when loading a batch of dependent projects as part of loading a solution in the background. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="fIsBackgroundIdleBatch">true if the batch is loaded in the background, otherwise false.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionLoadEvents.OnBeforeOpenSolution(System.String)">
      <summary>Fired before a solution open begins. Extenders can activate a solution load manager by setting <see cref="F:Microsoft.VisualStudio.Shell.Interop.__VSPROPID4.VSPROPID_ActiveSolutionLoadManager" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszSolutionFilename">The name of the solution file.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionLoadEvents.OnQueryBackgroundLoadProjectBatch(System.Boolean@)">
      <summary>Fired before background loading a batch of projects. Normally a background batch loads a single pending project. This is a cancelable event.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pfShouldDelayLoadToNextIdle">[out] true if other background operations should complete before starting to load the project, otherwise false.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSolutionLoadManager">
      <summary>Controls the loading of projects in a solution. Extenders can use this interface to set the load priority of projects or types of projects.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionLoadManager.OnBeforeOpenProject(System.Guid@,System.Guid@,System.String,Microsoft.VisualStudio.Shell.Interop.IVsSolutionLoadManagerSupport)">
      <summary>Fired before each project is opened. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="guidProjectID">The GUID of the individual project to be opened.</param>
      <param name="guidProjectType">The GUID of the type of project to be opened (e.g. Visual Basic or C#).</param>
      <param name="pszFileName">The name of the project file.</param>
      <param name="pSLMgrSupport">The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSolutionLoadManagerSupport" /> service. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionLoadManager.OnDisconnect">
      <summary>Called when <see cref="F:Microsoft.VisualStudio.Shell.Interop.__VSPROPID4.VSPROPID_ActiveSolutionLoadManager" /> is cleared. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSolutionLoadManagerSupport">
      <summary>Provides support for managing the way projects in a solution are loaded.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionLoadManagerSupport.GetProjectLoadPriority(System.Guid@,System.UInt32@)">
      <summary>Gets the project load priority, which determines whether the project should be kept as an unloaded project the next time the solution is opened.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="refguidProject">The GUID of the project</param>
      <param name="pLoadState">[out] The <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSProjectLoadPriority" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionLoadManagerSupport.SetProjectLoadPriority(System.Guid@,System.UInt32)">
      <summary>Sets the project load priority, which determines whether the project should be kept as an unloaded project the next time the solution is opened.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="refguidProject">The GUID of the project</param>
      <param name="loadState">The <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSProjectLoadPriority" />.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSolutionLogger"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionLogger.LogError(System.UInt32,System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String)">
      <param name="ErrorType"></param>
      <param name="pszMessage"></param>
      <param name="pszFile"></param>
      <param name="nLine"></param>
      <param name="nColumn"></param>
      <param name="pszErrorCode"></param>
      <param name="pszTaskListMessage"></param>
      <param name="pszUniqueProjectName"></param>
      <param name="pszHelpKeyword"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionLogger.LogMessage(System.String)">
      <param name="pszMessage"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsStringMap"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsStringMap.Clear"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsStringMap.EnumKeys(Microsoft.VisualStudio.OLE.Interop.IEnumString@)">
      <param name="ppEnum"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsStringMap.GetValue(System.String,System.String@)">
      <param name="szKey"></param>
      <param name="pbstrValue"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsStringMap.RemoveValue(System.String)">
      <param name="szKey"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsStringMap.SetValue(System.String,System.String)">
      <param name="szKey"></param>
      <param name="szValue"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsThreadedWaitDialog2"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsThreadedWaitDialog2.EndWaitDialog(System.Int32@)">
      <param name="pfCanceled"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsThreadedWaitDialog2.HasCanceled(System.Boolean@)">
      <param name="pfCanceled"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsThreadedWaitDialog2.StartCancelableProgressWithPercentageDialog(System.String,System.String,System.String,System.Object,System.String,System.Int32,System.Int32,System.Int32)">
      <param name="szWaitCaption"></param>
      <param name="szWaitMessage"></param>
      <param name="szProgressText"></param>
      <param name="varStatusBmpAnim"></param>
      <param name="szStatusBarText"></param>
      <param name="iDelayToShowDialog"></param>
      <param name="iTotalSteps"></param>
      <param name="iCurrentStep"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsThreadedWaitDialog2.StartCancelableWaitDialog(System.String,System.String,System.String,System.Object,System.String,System.Int32,System.Boolean)">
      <param name="szWaitCaption"></param>
      <param name="szWaitMessage"></param>
      <param name="szProgressText"></param>
      <param name="varStatusBmpAnim"></param>
      <param name="szStatusBarText"></param>
      <param name="iDelayToShowDialog"></param>
      <param name="fShowMarqueeProgress"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsThreadedWaitDialog2.StartNonCancelableProgressWithPercentageDialog(System.String,System.String,System.String,System.Object,System.String,System.Int32,System.Int32,System.Int32)">
      <param name="szWaitCaption"></param>
      <param name="szWaitMessage"></param>
      <param name="szProgressText"></param>
      <param name="varStatusBmpAnim"></param>
      <param name="szStatusBarText"></param>
      <param name="iDelayToShowDialog"></param>
      <param name="iTotalSteps"></param>
      <param name="iCurrentStep"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsThreadedWaitDialog2.UpdateProgress(System.String,System.String,System.String,System.Int32,System.Int32,System.Boolean,System.Boolean@)">
      <param name="szUpdatedWaitMessage"></param>
      <param name="szProgressText"></param>
      <param name="szStatusBarText"></param>
      <param name="iCurrentStep"></param>
      <param name="iTotalSteps"></param>
      <param name="fDisableCancel"></param>
      <param name="pfCanceled"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsToolbarTrayHost"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsToolbarTrayHost.AddToolbar(System.Guid@,System.UInt32)">
      <param name="pGuid"></param>
      <param name="dwId"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsToolbarTrayHost.Close"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsToolbarTrayHost.GetToolbarTray(Microsoft.VisualStudio.Shell.Interop.IVsUIElement@)">
      <param name="ppToolbarTray"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsToolbox5"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsToolbox5.GetItemBitmap(Microsoft.VisualStudio.OLE.Interop.IDataObject,System.IntPtr@)">
      <param name="pDataObject"></param>
      <param name="pBitmap"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsToolbox5.GetItemFlags(Microsoft.VisualStudio.OLE.Interop.IDataObject,System.UInt32@)">
      <param name="pDataObject"></param>
      <param name="pFlags"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsToolbox5.GetLastRefreshTime(System.DateTime[])">
      <param name="pTime"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsToolbox5.IsItemEnabled(Microsoft.VisualStudio.OLE.Interop.IDataObject,System.Boolean,System.Boolean@)">
      <param name="pDataObject"></param>
      <param name="fForceEvaluation"></param>
      <param name="pEnabled"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsToolboxPageChooser"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsToolboxPageChooser.GetPreferredToolboxPage(System.Guid@)">
      <param name="pguidPage"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsToolWindowToolbarHost2"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsToolWindowToolbarHost2.AddToolbar2(Microsoft.VisualStudio.Shell.Interop.VSTWT_LOCATION,System.Guid@,System.UInt32,Microsoft.VisualStudio.OLE.Interop.IDropTarget)">
      <param name="dwLoc"></param>
      <param name="pGuid"></param>
      <param name="dwId"></param>
      <param name="pDropTarget"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsTrackBatchRetargetingEvents"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTrackBatchRetargetingEvents.OnBatchRetargetingBegin"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTrackBatchRetargetingEvents.OnBatchRetargetingEnd"></member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsTrackProjectRetargeting"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTrackProjectRetargeting.AdviseTrackBatchRetargetingEvents(Microsoft.VisualStudio.Shell.Interop.IVsTrackBatchRetargetingEvents,System.UInt32@)">
      <param name="pEventSink"></param>
      <param name="pdwCookie"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTrackProjectRetargeting.AdviseTrackProjectRetargetingEvents(Microsoft.VisualStudio.Shell.Interop.IVsTrackProjectRetargetingEvents,System.UInt32@)">
      <param name="pEventSink"></param>
      <param name="pdwCookie"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTrackProjectRetargeting.BatchRetargetProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.String,System.Boolean)">
      <param name="pHier"></param>
      <param name="newTargetFramework"></param>
      <param name="unloadProjectIfErrorOrCancel"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTrackProjectRetargeting.BeginRetargetingBatch"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTrackProjectRetargeting.EndRetargetingBatch"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTrackProjectRetargeting.OnSetTargetFramework(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.String,System.String,Microsoft.VisualStudio.Shell.Interop.IVsSetTargetFrameworkWorkerCallback,System.Boolean)">
      <param name="pHier"></param>
      <param name="currentTargetFramework"></param>
      <param name="newTargetFramework"></param>
      <param name="pWorkerCallback"></param>
      <param name="ReloadProject"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTrackProjectRetargeting.UnadviseTrackBatchRetargetingEvents(System.UInt32)">
      <param name="dwCookie"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTrackProjectRetargeting.UnadviseTrackProjectRetargetingEvents(System.UInt32)">
      <param name="dwCookie"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsTrackProjectRetargetingEvents"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTrackProjectRetargetingEvents.OnRetargetingAfterChange(System.String,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.String,System.String)">
      <param name="projRef"></param>
      <param name="pAfterChangeHier"></param>
      <param name="fromTargetFramework"></param>
      <param name="toTargetFramework"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTrackProjectRetargetingEvents.OnRetargetingBeforeChange(System.String,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.String,System.String,System.Boolean@,System.String@)">
      <param name="projRef"></param>
      <param name="pBeforeChangeHier"></param>
      <param name="currentTargetFramework"></param>
      <param name="newTargetFramework"></param>
      <param name="pCanceled"></param>
      <param name="ppReasonMsg"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTrackProjectRetargetingEvents.OnRetargetingBeforeProjectSave(System.String,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.String,System.String)">
      <param name="projRef"></param>
      <param name="pBeforeChangeHier"></param>
      <param name="currentTargetFramework"></param>
      <param name="newTargetFramework"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTrackProjectRetargetingEvents.OnRetargetingCanceledChange(System.String,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.String,System.String)">
      <param name="projRef"></param>
      <param name="pBeforeChangeHier"></param>
      <param name="currentTargetFramework"></param>
      <param name="newTargetFramework"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTrackProjectRetargetingEvents.OnRetargetingFailure(System.String,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.String,System.String)">
      <param name="projRef"></param>
      <param name="pHier"></param>
      <param name="fromTargetFramework"></param>
      <param name="toTargetFramework"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIAccelerator.get_Message(Microsoft.VisualStudio.OLE.Interop.MSG[])">
      <param name="pMsg"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIAccelerator.get_Modifiers(System.UInt32@)">
      <param name="pdwModifiers"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsUIDataConverter"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIDataConverter.Convert(Microsoft.VisualStudio.Shell.Interop.IVsUIObject,Microsoft.VisualStudio.Shell.Interop.IVsUIObject@)">
      <param name="pObject"></param>
      <param name="ppConvertedObject"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIDataConverter.get_ConvertibleFormats(System.UInt32@,System.UInt32@)">
      <param name="pdwDataFormatFrom"></param>
      <param name="pdwDataFormatTo"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIDataConverter.get_Type(System.String@)">
      <param name="pTypeName"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsUIDataConverterManager"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIDataConverterManager.GetConverter(System.String,System.UInt32,System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsUIDataConverter@)">
      <param name="TypeName"></param>
      <param name="dwDataFormatFrom"></param>
      <param name="dwDataFormatTo"></param>
      <param name="ppConverter"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIDataConverterManager.GetObjectConverter(Microsoft.VisualStudio.Shell.Interop.IVsUIObject,System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsUIDataConverter@)">
      <param name="pObject"></param>
      <param name="dwDataFormatTo"></param>
      <param name="ppConverter"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIDataConverterManager.RegisterConverter(System.String,System.UInt32,System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsUIDataConverter)">
      <param name="TypeName"></param>
      <param name="dwDataFormatFrom"></param>
      <param name="dwDataFormatTo"></param>
      <param name="pConverter"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIDataConverterManager.UnregisterConverter(System.String,System.UInt32,System.UInt32)">
      <param name="TypeName"></param>
      <param name="dwDataFormatFrom"></param>
      <param name="dwDataFormatTo"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIDispatch.EnumVerbs(Microsoft.VisualStudio.Shell.Interop.IVsUIEnumDataSourceVerbs@)">
      <param name="ppEnum"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsUIEnumDataSourceVerbs"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIEnumDataSourceVerbs.Clone(Microsoft.VisualStudio.Shell.Interop.IVsUIEnumDataSourceVerbs@)">
      <param name="ppEnum"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIEnumDataSourceVerbs.Next(System.UInt32,System.String[],System.UInt32@)">
      <param name="celt"></param>
      <param name="rgelt"></param>
      <param name="pceltFetched"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIEnumDataSourceVerbs.Reset"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIEnumDataSourceVerbs.Skip(System.UInt32)">
      <param name="celt"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsUIEventSink"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIEventSink.Disconnect(Microsoft.VisualStudio.Shell.Interop.IVsUISimpleDataSource)">
      <param name="pSource"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsUIObject"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIObject.Equals(Microsoft.VisualStudio.Shell.Interop.IVsUIObject,System.Boolean@)">
      <param name="pOtherObject"></param>
      <param name="pfAreEqual"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIObject.get_Data(System.Object@)">
      <param name="pVar"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIObject.get_Format(System.UInt32@)">
      <param name="pdwDataFormat"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIObject.get_Type(System.String@)">
      <param name="pTypeName"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsUIShell4"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIShell4.CreateToolbarTray(Microsoft.VisualStudio.OLE.Interop.IOleCommandTarget,Microsoft.VisualStudio.Shell.Interop.IVsToolbarTrayHost@)">
      <param name="pCmdTarget"></param>
      <param name="ppToolbarTrayHost"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIShell4.GetWindowEnum(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IEnumWindowFrames@)">
      <param name="type"></param>
      <param name="ppEnum"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIShell4.SetupToolbar2(System.IntPtr,Microsoft.VisualStudio.Shell.Interop.IVsToolWindowToolbar,Microsoft.VisualStudio.OLE.Interop.IOleCommandTarget,Microsoft.VisualStudio.Shell.Interop.IVsToolWindowToolbarHost@)">
      <param name="hwnd"></param>
      <param name="ptwt"></param>
      <param name="pCmdTarget"></param>
      <param name="pptwth"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIShell4.SetupToolbar3(Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame,Microsoft.VisualStudio.Shell.Interop.IVsToolWindowToolbarHost@)">
      <param name="pFrame"></param>
      <param name="pptwth"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsUIWin32Bitmap"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIWin32Bitmap.BitmapContainsAlphaInfo(System.Boolean@)">
      <param name="pfHasAlpha"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIWin32Bitmap.GetHBITMAP(System.Int32@)">
      <param name="phBitmap"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsUIWin32Element"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIWin32Element.Create(System.IntPtr,System.IntPtr@)">
      <param name="parent"></param>
      <param name="pHandle"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIWin32Element.Destroy"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIWin32Element.GetHandle(System.IntPtr@)">
      <param name="pHandle"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIWin32Element.ShowModal(System.IntPtr,System.Int32@)">
      <param name="parent"></param>
      <param name="pDlgResult"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsUIWin32Icon"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIWin32Icon.GetHICON(System.Int32@)">
      <param name="phIcon"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsUIWin32ImageList"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIWin32ImageList.GetHIMAGELIST(System.Int32@)">
      <param name="phImageList"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsUIWpfElement"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIWpfElement.CreateFrameworkElement(System.Object@)">
      <param name="ppUnkElement"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIWpfElement.GetFrameworkElement(System.Object@)">
      <param name="ppUnkElement"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsUIWpfLoader"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIWpfLoader.CreateUIElement(System.String,System.String,Microsoft.VisualStudio.Shell.Interop.IVsUIElement@)">
      <param name="elementFQN"></param>
      <param name="codeBase"></param>
      <param name="ppUIElement"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIWpfLoader.CreateUIElementOfType(System.Object,Microsoft.VisualStudio.Shell.Interop.IVsUIElement@)">
      <param name="pUnkElementType"></param>
      <param name="ppUIElement"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIWpfLoader.ShowModalElement(Microsoft.VisualStudio.Shell.Interop.IVsUIElement,System.IntPtr,System.Int32@)">
      <param name="pUIElement"></param>
      <param name="hWndParent"></param>
      <param name="pResult"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsVba"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsVba.GetVbaUnk(System.Object@)">
      <param name="pUnknown"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsVba.ShowVBA"></member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame3"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame3.CreateThumbnail(System.Int32,System.Int32,System.IntPtr@)">
      <param name="width"></param>
      <param name="height"></param>
      <param name="thumbnail"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsWindowFrameSwitcher"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWindowFrameSwitcher.AddTool(System.Guid@,System.String)">
      <param name="guidTool"></param>
      <param name="switchContext"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWindowFrameSwitcher.GetActiveFrame(Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame@)">
      <param name="pFrame"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWindowFrameSwitcher.InitializeSwitcher(System.UInt32)">
      <param name="selelem"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWindowFrameSwitcher.RemoveTool(System.Guid@,System.String)">
      <param name="guidTool"></param>
      <param name="switchContext"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsWritableSettingsStore"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWritableSettingsStore.CollectionExists(System.String,System.Int32@)">
      <param name="collectionPath"></param>
      <param name="pfExists"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWritableSettingsStore.CreateCollection(System.String)">
      <param name="collectionPath"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWritableSettingsStore.DeleteCollection(System.String)">
      <param name="collectionPath"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWritableSettingsStore.DeleteProperty(System.String,System.String)">
      <param name="collectionPath"></param>
      <param name="propertyName"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWritableSettingsStore.GetBinary(System.String,System.String,System.UInt32,System.Byte[],System.UInt32[])">
      <param name="collectionPath"></param>
      <param name="propertyName"></param>
      <param name="byteLength"></param>
      <param name="pBytes"></param>
      <param name="actualByteLength"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWritableSettingsStore.GetBool(System.String,System.String,System.Int32@)">
      <param name="collectionPath"></param>
      <param name="propertyName"></param>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWritableSettingsStore.GetBoolOrDefault(System.String,System.String,System.Int32,System.Int32@)">
      <param name="collectionPath"></param>
      <param name="propertyName"></param>
      <param name="defaultValue"></param>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWritableSettingsStore.GetInt(System.String,System.String,System.Int32@)">
      <param name="collectionPath"></param>
      <param name="propertyName"></param>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWritableSettingsStore.GetInt64(System.String,System.String,System.Int64@)">
      <param name="collectionPath"></param>
      <param name="propertyName"></param>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWritableSettingsStore.GetInt64OrDefault(System.String,System.String,System.Int64,System.Int64@)">
      <param name="collectionPath"></param>
      <param name="propertyName"></param>
      <param name="defaultValue"></param>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWritableSettingsStore.GetIntOrDefault(System.String,System.String,System.Int32,System.Int32@)">
      <param name="collectionPath"></param>
      <param name="propertyName"></param>
      <param name="defaultValue"></param>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWritableSettingsStore.GetLastWriteTime(System.String,Microsoft.VisualStudio.Shell.Interop.SYSTEMTIME[])">
      <param name="collectionPath"></param>
      <param name="lastWriteTime"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWritableSettingsStore.GetPropertyCount(System.String,System.UInt32@)">
      <param name="collectionPath"></param>
      <param name="propertyCount"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWritableSettingsStore.GetPropertyName(System.String,System.UInt32,System.String@)">
      <param name="collectionPath"></param>
      <param name="index"></param>
      <param name="propertyName"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWritableSettingsStore.GetPropertyType(System.String,System.String,System.UInt32@)">
      <param name="collectionPath"></param>
      <param name="propertyName"></param>
      <param name="type"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWritableSettingsStore.GetString(System.String,System.String,System.String@)">
      <param name="collectionPath"></param>
      <param name="propertyName"></param>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWritableSettingsStore.GetStringOrDefault(System.String,System.String,System.String,System.String@)">
      <param name="collectionPath"></param>
      <param name="propertyName"></param>
      <param name="defaultValue"></param>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWritableSettingsStore.GetSubCollectionCount(System.String,System.UInt32@)">
      <param name="collectionPath"></param>
      <param name="subCollectionCount"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWritableSettingsStore.GetSubCollectionName(System.String,System.UInt32,System.String@)">
      <param name="collectionPath"></param>
      <param name="index"></param>
      <param name="subCollectionName"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWritableSettingsStore.GetUnsignedInt(System.String,System.String,System.UInt32@)">
      <param name="collectionPath"></param>
      <param name="propertyName"></param>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWritableSettingsStore.GetUnsignedInt64(System.String,System.String,System.UInt64@)">
      <param name="collectionPath"></param>
      <param name="propertyName"></param>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWritableSettingsStore.GetUnsignedInt64OrDefault(System.String,System.String,System.UInt64,System.UInt64@)">
      <param name="collectionPath"></param>
      <param name="propertyName"></param>
      <param name="defaultValue"></param>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWritableSettingsStore.GetUnsignedIntOrDefault(System.String,System.String,System.UInt32,System.UInt32@)">
      <param name="collectionPath"></param>
      <param name="propertyName"></param>
      <param name="defaultValue"></param>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWritableSettingsStore.PropertyExists(System.String,System.String,System.Int32@)">
      <param name="collectionPath"></param>
      <param name="propertyName"></param>
      <param name="pfExists"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWritableSettingsStore.SetBinary(System.String,System.String,System.UInt32,System.Byte[])">
      <param name="collectionPath"></param>
      <param name="propertyName"></param>
      <param name="byteLength"></param>
      <param name="pBytes"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWritableSettingsStore.SetBool(System.String,System.String,System.Int32)">
      <param name="collectionPath"></param>
      <param name="propertyName"></param>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWritableSettingsStore.SetInt(System.String,System.String,System.Int32)">
      <param name="collectionPath"></param>
      <param name="propertyName"></param>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWritableSettingsStore.SetInt64(System.String,System.String,System.Int64)">
      <param name="collectionPath"></param>
      <param name="propertyName"></param>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWritableSettingsStore.SetString(System.String,System.String,System.String)">
      <param name="collectionPath"></param>
      <param name="propertyName"></param>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWritableSettingsStore.SetUnsignedInt(System.String,System.String,System.UInt32)">
      <param name="collectionPath"></param>
      <param name="propertyName"></param>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWritableSettingsStore.SetUnsignedInt64(System.String,System.String,System.UInt64)">
      <param name="collectionPath"></param>
      <param name="propertyName"></param>
      <param name="value"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsBuildManagerAccessor"></member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsCommonMessagePumpFactory"></member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsComponentModelHost"></member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsDataObjectStringMapManager"></member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsDataSourceFactory"></member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsDesignTimeAssemblyResolution"></member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsFrameworkMultiTargeting"></member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsFrameworkRetargetingDlg"></member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsMacroRecorder"></member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsMacros"></member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsProfferCommands"></member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsThreadedWaitDialogFactory"></member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsTrackProjectRetargeting"></member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsUIDataConverters"></member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsUIFactory"></member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsVba"></member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.ToolboxMultitargetingFields"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolboxMultitargetingFields.AssemblyName"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolboxMultitargetingFields.Frameworks"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolboxMultitargetingFields.ItemProvider"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolboxMultitargetingFields.TypeName"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolboxMultitargetingFields.UseProjectTargetFrameworkVersionInTooltip"></member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.VsDebugStartupInfo"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugStartupInfo.cbReserved2"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugStartupInfo.dwCreationFlags"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugStartupInfo.dwFillAttribute"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugStartupInfo.dwX"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugStartupInfo.dwXCountChars"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugStartupInfo.dwXSize"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugStartupInfo.dwY"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugStartupInfo.dwYCountChars"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugStartupInfo.dwYSize"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugStartupInfo.flags"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugStartupInfo.hStdError"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugStartupInfo.hStdInput"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugStartupInfo.hStdOutput"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugStartupInfo.lpDesktop"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugStartupInfo.lpReserved"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugStartupInfo.lpReserved2"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugStartupInfo.lpTitle"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugStartupInfo.wShowWindow"></member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo3"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo3.bstrArg"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo3.bstrCurDir"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo3.bstrEnv"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo3.bstrExe"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo3.bstrOptions"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo3.bstrPortName"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo3.bstrRemoteMachine"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo3.dlo"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo3.dwDebugEngineCount"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo3.dwProcessId"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo3.fSendToOutputWindow"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo3.guidLaunchDebugEngine"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo3.guidPortSupplier"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo3.guidProcessLanguage"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo3.LaunchFlags"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo3.pDebugEngines"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo3.pStartupInfo"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo3.pUnknown"></member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetProcessInfo"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetProcessInfo.creationTime"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetProcessInfo.dwProcessId"></member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.VsMacrosGuids"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsMacrosGuids.Macro"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsMacrosGuids.MacroProject"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsMacrosGuids.ModeRecorder"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsMacrosGuids.VsVbaPackage"></member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.VSRECORDMODE"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSRECORDMODE.VSRECORDMODE_ABSOLUTE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSRECORDMODE.VSRECORDMODE_RELATIVE">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.VsResolvedAssemblyPath"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsResolvedAssemblyPath.bstrOrigAssemblySpec"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsResolvedAssemblyPath.bstrResolvedAssemblyPath"></member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.VSTREETEXTOPTIONS2"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSTREETEXTOPTIONS2.TTO_SORTTEXT2">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.WellKnownToolboxStringMaps"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.WellKnownToolboxStringMaps.MultiTargeting"></member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Assemblies\v2.0\Microsoft.VisualStudio.Shell.9.0.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.VisualStudio.Shell.9.0</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualStudio.IEventHandler">
      <summary>Provides the methods necessary to add, remove, and test for the existence of handlers in an event handler collection.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.IEventHandler.AddHandler(System.String)">
      <summary>When implemented by a derived class, adds a named handler to an event handler collection.</summary>
      <returns>
        <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" /> if the method succeeds, otherwise an error code.</returns>
      <param name="bstrEventName">The name of the handler.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.IEventHandler.GetHandledEvents">
      <summary>When implemented by a derived class, returns an enumerator over all the handlers added by successive calls to <see cref="M:Microsoft.VisualStudio.IEventHandler.AddHandler(System.String)" />.</summary>
      <returns>
        <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" /> if the method succeeds, otherwise an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.IEventHandler.HandlesEvent(System.String)">
      <summary>When implemented by a derived class, determines whether a named handler is in the event handler collection.</summary>
      <returns>true if the handler is in the underlying handler collection, otherwise false.</returns>
      <param name="bstrEventName">The name of the evaluated handler.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.IEventHandler.RemoveHandler(System.String)">
      <summary>When implemented by a derived class, removes a named handler from the collection of event handlers.</summary>
      <returns>
        <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" /> if the method succeeds, otherwise an error code.</returns>
      <param name="bstrEventName">The name of the event handler to remove.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Win32Methods">
      <summary>Imports some Win32 window management functions.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Win32Methods.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Win32Methods.IsDialogMessageA(System.IntPtr,Microsoft.VisualStudio.OLE.Interop.MSG@)">
      <summary>Determines if a message is intended for the specified dialog box, and if so processes the message.</summary>
      <returns>true if the message has been processed, otherwise false.</returns>
      <param name="hDlg">A handle to the child window.</param>
      <param name="msg">The message in question.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Win32Methods.SetParent(System.IntPtr,System.IntPtr)">
      <summary>Changes the parent window of the specified child window.</summary>
      <returns>If the function succeeds, a handle to the previous parent window, otherwise null.</returns>
      <param name="hWnd">A handle to the child window that should receive a new parent.</param>
      <param name="hWndParent">A handle to the new parent window.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.DefaultRegistryRootAttribute">
      <summary>Defines the default registry root used to register VSPackage information. This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.DefaultRegistryRootAttribute.#ctor(System.String)">
      <summary>Initializes a new <see cref="T:Microsoft.VisualStudio.Shell.DefaultRegistryRootAttribute" /> object with the given registry root.</summary>
      <param name="root">The default registry root used to register VSPackage information.</param>
      <exception cref="T:System.ArgumentNullException">The constructor throws an <see cref="T:System.ArgumentNullException" /> if the root argument is null.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.DefaultRegistryRootAttribute.Root">
      <summary>Gets the value of the default registry root for the VSPackage.</summary>
      <returns>The value of the default registry root for the VSPackage.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.DialogContainerWithToolbar">
      <summary>Use this class to implement modal forms in Visual Studio. The implementation enables the form to host a Visual Studio command bar so that it participates in standard command routing.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.DialogContainerWithToolbar.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.DialogContainerWithToolbar.#ctor(System.IServiceProvider)">
      <summary>Initializes a new instance of the class and sets the service provider.</summary>
      <param name="sp">The service provider that the window can subsequently query to retrieve Visual Studio services.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.DialogContainerWithToolbar.#ctor(System.IServiceProvider,System.Windows.Forms.Control)">
      <summary>Initializes a new instance of the class and sets the service provider and the control that is contained by the form.</summary>
      <param name="sp">The service provider that the window can subsequently query to retrieve Visual Studio services.</param>
      <param name="contained">The control that is contained by the form.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.DialogContainerWithToolbar.#ctor(System.IServiceProvider,System.Windows.Forms.Control,Microsoft.VisualStudio.OLE.Interop.IOleCommandTarget)">
      <summary>Initializes a new instance <see cref="T:Microsoft.VisualStudio.Shell.DialogContainerWithToolbar" /> with its contained control, and an <see cref="T:Microsoft.VisualStudio.OLE.Interop.IOleCommandTarget" /> implementation that is in addition to the one owned by the <see cref="T:Microsoft.VisualStudio.Shell.OleMenuCommandService" />.</summary>
      <param name="sp">The <see cref="T:System.IServiceProvider" />.</param>
      <param name="contained">The <see cref="T:System.Windows.Forms.Control" /> that is to be contained.</param>
      <param name="parentCommandTarget">The parent <see cref="T:Microsoft.VisualStudio.OLE.Interop.IOleCommandTarget" />.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.DialogContainerWithToolbar.CommandService">
      <summary>Returns the command service that is used to check the status or execute the commands on the toolbar.</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.IMenuCommandService" />.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.DialogContainerWithToolbar.Dispose(System.Boolean)">
      <summary>Explicitly called to release resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.DialogContainerWithToolbar.Microsoft#VisualStudio#Shell#Interop#IVsToolWindowToolbar#GetBorder(Microsoft.VisualStudio.OLE.Interop.RECT[])">
      <summary>Returns the border information for a tool window.</summary>
      <returns>If the method succeeds, it returns S_OK. If it fails, it returns an error code.</returns>
      <param name="rect">Pointer to the location and size of the tool window border.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.DialogContainerWithToolbar.Microsoft#VisualStudio#Shell#Interop#IVsToolWindowToolbar#SetBorderSpace(Microsoft.VisualStudio.OLE.Interop.RECT[])">
      <summary>Stores toolbar information and resizes the main pane to leave room for the command bar.</summary>
      <returns>If the method succeeds, <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK;" /> otherwise, an error code.</returns>
      <param name="rect">The new desired bounds.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.DialogContainerWithToolbar.SetSite(System.IServiceProvider)">
      <summary>Sets the site for this window.</summary>
      <param name="sp">The service provider.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.DialogContainerWithToolbar.ShowDialog">
      <summary>Shows a dialog.</summary>
      <returns>
        <see cref="T:System.Windows.Forms.DialogResult" />.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.DialogContainerWithToolbar.System#IServiceProvider#GetService(System.Type)">
      <summary>Gets the service of the specified type.</summary>
      <returns>An object that represents the requested service.</returns>
      <param name="serviceType">The type of service requested.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.DialogContainerWithToolbar.System#Windows#Forms#IMessageFilter#PreFilterMessage(System.Windows.Forms.Message@)">
      <summary>Filters mouse messages before they are dispatched.</summary>
      <returns>true if the message was filtered and not dispatched, false if it was dispatched.</returns>
      <param name="m">A message from the toolbar.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.DialogContainerWithToolbar.ToolbarHost">
      <summary>Returns the corresponding <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsToolWindowToolbarHost" />.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsToolWindowToolbarHost" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.DialogContainerWithToolbar.ToolbarID">
      <summary>Gets or sets the command ID of the toolbar that is contained in this dialog box.</summary>
      <returns>The command ID of the toolbar that is contained in this dialog box.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.DialogContainerWithToolbar.ToolbarLocation">
      <summary>Gets and sets the value of the enumeration that describes the toolbar location.</summary>
      <returns>The enumeration is defined as follows. Copy Codetypedef enum {VSTWT_LEFT, VSTWT_TOP, VSTWT_RIGHT, VSTWT_BOTTOM} VSTWT_LOCATION;
This corresponds to toolbar locations of left, top, right, and bottom.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.DialogPage.ApplyKind">
      <summary>An enumeration that describes dialog page apply behavior.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.DialogPage.ApplyKind.Apply">
      <summary>Allows the changes to be applied</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.DialogPage.ApplyKind.Cancel">
      <summary>Cancels the apply event and navigates to the page cancelling the event.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.DialogPage.ApplyKind.CancelNoNavigate">
      <summary>Cancels the apply event and returns the active page, not the page canceling the event.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.EventSinkCollection">
      <summary>Maps objects to and from event "cookies" that represent a client's registration with an event provider. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.EventSinkCollection.#ctor">
      <summary>Initializes a new instance of an <see cref="T:Microsoft.VisualStudio.Shell.EventSinkCollection" /> object.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.EventSinkCollection.Add(System.Object)">
      <summary>Adds an event and returns its cookie.</summary>
      <returns>The cookie of the added event.</returns>
      <param name="o">An object to be added to the event collection.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.EventSinkCollection.Clear">
      <summary>Removes all event cookies.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.EventSinkCollection.Count">
      <summary>Gets the total number of event cookies in the collection.</summary>
      <returns>The number of cookies in the collection.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.EventSinkCollection.Item(System.UInt32)">
      <summary>Gets or sets the specified cookie from the collection.</summary>
      <returns>The cookie.</returns>
      <param name="cookie">The cookie to get.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.EventSinkCollection.Remove(System.Object)">
      <summary>Removes the specified event cookie from the collection.</summary>
      <param name="obj">The event cookie to be removed.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.EventSinkCollection.RemoveAt(System.UInt32)">
      <summary>Removes the event cookie.</summary>
      <param name="cookie">The event cookie. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.EventSinkCollection.SetAt(System.UInt32,System.Object)">
      <summary>Updates the event associated with the given cookie.</summary>
      <param name="cookie">A cookie specifying an event.</param>
      <param name="value">The value to which the event sink is set.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.EventSinkCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Microsoft Internal Only.</summary>
      <returns>Returns an <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.IProfileManager">
      <summary>Interface implemented by classes supporting VSPackages by persisting their state information through the Visual Studio settings mechanism.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.IProfileManager.LoadSettingsFromStorage">
      <summary>Reads a VSPackage's configuration from local storage (typically the registry) and updates its state.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.IProfileManager.LoadSettingsFromXml(Microsoft.VisualStudio.Shell.Interop.IVsSettingsReader)">
      <summary>Writes a VSPackage's configuration to disk using the Visual Studio settings mechanism when the export option of an Import/Export Settings feature available on the IDE’s Tools menu is selected by a user.</summary>
      <param name="reader">[in] An <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSettingsReader" /> interface provided by the environment to the VSPackage providing read access to the Visual Studio settings file.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.IProfileManager.ResetSettings">
      <summary>Resets the user settings.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.IProfileManager.SaveSettingsToStorage">
      <summary>Writes a VSPackage's configuration to local storage (typically the registry) following state update.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.IProfileManager.SaveSettingsToXml(Microsoft.VisualStudio.Shell.Interop.IVsSettingsWriter)">
      <summary>Writes a VSPackage's configuration to disk using the Visual Studio settings mechanism when an import option of the Import/Export Settings command on the IDE’s Tools menu is selected by a user.</summary>
      <param name="writer">[in] An <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSettingsWriter" /> interface provided by the environment to the VSPackage providing write access to the Visual Studio settings file.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.MsiComponentIdAttribute">
      <summary>Defines the Windows Installer component ID. The component ID is used by the Windows Installer to indicate the installation path to the VSPackage.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.MsiComponentIdAttribute.#ctor(System.String)">
      <summary>This constructor creates a new MsiComponentIdAttribute object.</summary>
      <param name="id">The Windows Installer component ID. The MSI component registration ID is used to indicate the installation path to the component within the Windows Installer.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.MsiComponentIdAttribute.Id">
      <summary>The Id property returns a string containing the Windows Installer component registration ID.</summary>
      <returns>Returns a string containing the Windows Installer component registration ID.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.MsiTokenAttribute">
      <summary>Defines a token string for the MSI installer.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.MsiTokenAttribute.#ctor(System.String,System.String)">
      <summary>Creates an MsiTokenAttribute object.</summary>
      <param name="name">Name of the MsiTokenAttribute.</param>
      <param name="value">Value of the MsiTokenAttribute.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.MsiTokenAttribute.Name">
      <summary>Returns the MsiTokenAttribute name.</summary>
      <returns>Returns a string containing the MsiTokenAttribute name.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.MsiTokenAttribute.Value">
      <summary>Returns the MsiTokenAttribute value.</summary>
      <returns>Returns a string containing the MsiTokenAttribute value.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.OleMenuCmdEventArgs">
      <summary>The set of arguments passed to an <see cref="T:Microsoft.VisualStudio.Shell.OleMenuCommand" /> object when the <see cref="M:Microsoft.VisualStudio.Shell.OleMenuCommand.Invoke(System.Object)" /> function is called.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.OleMenuCmdEventArgs.#ctor(System.Object,System.IntPtr)">
      <summary>Initializes a new instance of <see cref="T:Microsoft.VisualStudio.Shell.OleMenuCmdEventArgs" /> the specified in and out parameters.</summary>
      <param name="inParam">The input parameters to the command function.</param>
      <param name="outParam">A pointer to the parameter returned by the function.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.OleMenuCmdEventArgs.#ctor(System.Object,System.IntPtr,Microsoft.VisualStudio.OLE.Interop.OLECMDEXECOPT)"></member>
    <member name="P:Microsoft.VisualStudio.Shell.OleMenuCmdEventArgs.InValue">
      <summary>Gets the in parameters to the command.</summary>
      <returns>The in parameters to the command.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.OleMenuCmdEventArgs.Options"></member>
    <member name="P:Microsoft.VisualStudio.Shell.OleMenuCmdEventArgs.OutValue">
      <summary>Gets a pointer to the parameter used as output by the command function.</summary>
      <returns>A pointer to the out parameter.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.OleMenuCommand">
      <summary>This class is an expansion of the <see cref="T:System.ComponentModel.Design.MenuCommand" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.OleMenuCommand.#ctor(System.EventHandler,System.ComponentModel.Design.CommandID)">
      <summary>Initializes a new instance of <see cref="T:Microsoft.VisualStudio.Shell.OleMenuCommand" /> for the specified command.</summary>
      <param name="invokeHandler">The event handler called to execute the command.</param>
      <param name="id">ID of the command.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.OleMenuCommand.#ctor(System.EventHandler,System.ComponentModel.Design.CommandID,System.String)">
      <summary>Initializes a new instance of <see cref="T:Microsoft.VisualStudio.Shell.OleMenuCommand" /> for the specified command.</summary>
      <param name="invokeHandler">The event handler called to execute the command.</param>
      <param name="id">ID of the command.</param>
      <param name="Text">The text of the command.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.OleMenuCommand.#ctor(System.EventHandler,System.EventHandler,System.ComponentModel.Design.CommandID)">
      <summary>Initializes a new instance of <see cref="T:Microsoft.VisualStudio.Shell.OleMenuCommand" /> for the specified command with the specified invocation and status handlers.</summary>
      <param name="invokeHandler">The event handler called to execute the command.</param>
      <param name="changeHandler"></param>
      <param name="id">ID of the command.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.OleMenuCommand.#ctor(System.EventHandler,System.EventHandler,System.ComponentModel.Design.CommandID,System.String)">
      <summary>Initializes a new instance of <see cref="T:Microsoft.VisualStudio.Shell.OleMenuCommand" /> for the specified command with the specified invocation and status handlers.</summary>
      <param name="invokeHandler">The event handler called to execute the command.</param>
      <param name="changeHandler"></param>
      <param name="id">ID of the command.</param>
      <param name="Text">The text of the command.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.OleMenuCommand.#ctor(System.EventHandler,System.EventHandler,System.EventHandler,System.ComponentModel.Design.CommandID)">
      <summary>Initializes a new instance of <see cref="T:Microsoft.VisualStudio.Shell.OleMenuCommand" /> for the specified command with the specified pre-QueryStatus, invocation, and status handlers.</summary>
      <param name="invokeHandler">The event handler called to execute the command.</param>
      <param name="changeHandler"></param>
      <param name="beforeQueryStatus">Event handler called when a client requests the command status.</param>
      <param name="id">ID of the command.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.OleMenuCommand.#ctor(System.EventHandler,System.EventHandler,System.EventHandler,System.ComponentModel.Design.CommandID,System.String)">
      <summary>Initializes a new instance of <see cref="T:Microsoft.VisualStudio.Shell.OleMenuCommand" /> for the specified command with the specified pre-QueryStatus, invocation, and status handlers.</summary>
      <param name="invokeHandler">The event handler called to execute the command.</param>
      <param name="changeHandler"></param>
      <param name="beforeQueryStatus">Event handler called when a client requests the command status.</param>
      <param name="id">ID of the command.</param>
      <param name="Text">The text of the command.</param>
    </member>
    <member name="E:Microsoft.VisualStudio.Shell.OleMenuCommand.BeforeQueryStatus">
      <summary>Called when a client requests the status of the command.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.OleMenuCommand.DynamicItemMatch(System.Int32)">
      <summary>Allows a dynamic item command to match the subsequent items in its list. </summary>
      <returns>true if the dynamic item found a match, otherwise false.</returns>
      <param name="cmdId">The command ID.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.OleMenuCommand.Invoke(System.Object)">
      <summary>Executes the command.</summary>
      <param name="inArg">The parameter passed to the command.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.OleMenuCommand.Invoke(System.Object,System.IntPtr)">
      <summary>Executes the command.</summary>
      <param name="inArg">The parameter passed to the command.</param>
      <param name="outArg">The parameter returned by the command.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.OleMenuCommand.Invoke(System.Object,System.IntPtr,Microsoft.VisualStudio.OLE.Interop.OLECMDEXECOPT)"></member>
    <member name="P:Microsoft.VisualStudio.Shell.OleMenuCommand.MatchedCommandId">
      <summary>Gets or sets a the command ID.</summary>
      <returns>The command ID that was most recently used to match this command.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.OleMenuCommand.OleStatus">
      <summary>Gets the OLE command status code for this menu item.</summary>
      <returns>The status flags that reflects the state of this menu item.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.OleMenuCommand.ParametersDescription">
      <summary>Gets or sets the description of the parameters of the command.</summary>
      <returns>The description of the parameters of the command.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.OleMenuCommand.Text">
      <summary>Gets or sets the text for the command.</summary>
      <returns>The text for the command.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.OleMenuCommandService">
      <summary>This class derives from the <see cref="T:System.ComponentModel.Design.MenuCommandService" /> class and implements <see cref="T:Microsoft.VisualStudio.OLE.Interop.IOleCommandTarget" />. <see cref="T:System.ComponentModel.Design.MenuCommandService" /> is the managed class used to add handlers for menu commands and to define verbs.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.OleMenuCommandService.#ctor(System.IServiceProvider)">
      <summary>Creates a new menu command service.</summary>
      <param name="serviceProvider">The service provider that this service uses to obtain other services. If the service is being used with a designer, this should be the service provider for the designer (such as the <see cref="T:System.ComponentModel.Design.DesignSurface" /> instance).</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.OleMenuCommandService.#ctor(System.IServiceProvider,Microsoft.VisualStudio.OLE.Interop.IOleCommandTarget)">
      <summary>Creates a new menu command service.</summary>
      <param name="serviceProvider">The service provider that this service uses to obtain other services. If the service is being used with a designer, this should be the service provider for the designer (such as the <see cref="T:System.ComponentModel.Design.DesignSurface" /> instance).</param>
      <param name="parentCommandTarget">Allows the service to defer command searching to a parent IOleCommandTarget if the command is not found in this object.</param>
      <exception cref="T:System.ArgumentNullException">Throws an <see cref="T:System.ArgumentNullException" /> if <paramref name="parentCommandTarget" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.OleMenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)">
      <summary>Can be used to invoke any command within Visual Studio.</summary>
      <returns>true if the invocation succeeded; otherwise, false.</returns>
      <param name="commandID">The command ID of the command to search for and execute.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.OleMenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID,System.Object)">
      <summary>Can be used to invoke any command within Visual Studio.</summary>
      <returns>true if the invocation succeeded; otherwise, false.</returns>
      <param name="commandID">The command ID of the command to search for and execute.</param>
      <param name="arg">The optional command argument.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.OleMenuCommandService.Microsoft#VisualStudio#OLE#Interop#IOleCommandTarget#Exec(System.Guid@,System.UInt32,System.UInt32,System.IntPtr,System.IntPtr)">
      <summary>Executes the selected command.</summary>
      <returns>An HRESULT code indicating the success or failure of the call.  The following HRESULTs may be returned:ValueDescription<see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />The command was successfully invoked.<see cref="F:Microsoft.VisualStudio.OLE.Interop.Constants.OLECMDERR_E_UNKNOWNGROUP" />The group guid did not match the commandID’s Guid property for any command or verb.<see cref="F:Microsoft.VisualStudio.OLE.Interop.Constants.OLECMDERR_E_NOTSUPPORTED" />The group was found, but there is no command or verb with an ID that matches.  This is also returned if the OleStatus property of a command that was found returns zero.</returns>
      <param name="guidGroup">System.Guid <paramref name="guidGroup" />. The menu group.  This implementation maps the group to CommandID.Guid.</param>
      <param name="nCmdId">System.UInt32 <paramref name="nCmdId" />. The ID code of the command.  This implementation maps nCmdId to CommandID.ID.</param>
      <param name="nCmdExcept">System.UInt32 <paramref name="nCmdExcept" />. Count of command options.  This implementation ignores this parameter.</param>
      <param name="pIn">System.Object[] <paramref name="pIn" />. Actual command options.  This implementation ignores this parameter.</param>
      <param name="vOut">System.IntPtr <paramref name="vOut" />. Output data for the command.  This implementation ignores this parameter.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.OleMenuCommandService.Microsoft#VisualStudio#OLE#Interop#IOleCommandTarget#QueryStatus(System.Guid@,System.UInt32,Microsoft.VisualStudio.OLE.Interop.OLECMD[],System.IntPtr)">
      <summary>Sets command status.</summary>
      <returns>An HRESULT code indicating the success or failure of the call.  The following HRESULTs may be returned:ValueDescription<see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />The command was successfully invoked.<see cref="F:Microsoft.VisualStudio.OLE.Interop.Constants.OLECMDERR_E_UNKNOWNGROUP" />The group guid did not match the commandID’s Guid property for any command or verb.<see cref="F:Microsoft.VisualStudio.OLE.Interop.Constants.OLECMDERR_E_NOTSUPPORTED" />The group was found, but there is no command or verb with an ID that matches.  This is also returned if the OleStatus property of a command that was found returns zero.</returns>
      <param name="guidGroup">System.Guid <paramref name="guidGroup" />. The menu group.  This implementation maps the group to CommandID.Guid.</param>
      <param name="nCmdId">System.UInt32 <paramref name="nCmdId" />. The ID code of the command.  This implementation maps nCmdId to CommandID.ID.</param>
      <param name="oleCmd">Microsoft.OLE.Interop._tagOLECMD[] <paramref name="oleCmd" />. A command structure that contains data about the status of the command.</param>
      <param name="oleText">System.IntPtr<paramref name=" oleText" />. A pointer to a text BSTR.  If the command is a verb the name of the verb will be filled in here.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.OleMenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)">
      <summary>Called by a menu command when its status has changed.</summary>
      <param name="e">Signifies that there has been a change in <see cref="T:System.Windows.Forms.Design.MenuCommands" /> (added or removed) on the related object.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.OleMenuCommandService.ParentTarget"></member>
    <member name="P:Microsoft.VisualStudio.Shell.OleMenuCommandService.ServiceProvider"></member>
    <member name="M:Microsoft.VisualStudio.Shell.OleMenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)">
      <summary>Shows the shortcut menu with the given command ID at the given location.</summary>
      <param name="menuID">A command ID representing the shortcut menu to show.</param>
      <param name="x">The horizontal position, in screen coordinates, of the top, left corner of the shortcut menu. If the shortcut menu does not fit on the screen, the operating system relocates it to fit.</param>
      <param name="y">The vertical position, in screen coordinates, of the top, left corner of the shortcut menu. If the shortcut menu does not fit on the screen, the operating system relocates it to fit.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="menuID" /> is null.</exception>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Package">
      <summary>Provides a managed implementation of the VSIP interfaces required to create a fully functional VSPackage.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Package.#ctor">
      <summary>Initializes a new instance of <see cref="T:Microsoft.VisualStudio.Shell.Package" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Package.AddOptionKey(System.String)">
      <summary>Adds a user option key name into the list of option keys.</summary>
      <param name="name">The name of the option key to add. An option key name must not have any periods in it.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.Package.ApplicationRegistryRoot">
      <summary>Gets the root registry key of the current Visual Studio registry hive.</summary>
      <returns>The root <see cref="T:Microsoft.Win32.RegistryKey" /> of the Visual Studio registry hive.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Package.CreateInstance(System.Guid@,System.Guid@,System.Type)">
      <summary>Creates the specified COM object using the Visual Studio's local registry CLSID object.</summary>
      <returns>An instance of the created object.</returns>
      <param name="clsid">The CLSID of the object to create.</param>
      <param name="iid">The interface IID the object implements.</param>
      <param name="type">The managed type of the object to return.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Package.CreateTool(System.Guid@)">
      <summary>Enables derived classes to provide an implementation if necessary.</summary>
      <returns>
        <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" /> if successful, otherwise an error code.</returns>
      <param name="persistenceSlot">The GUID of the tool window that should be created.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Package.CreateToolWindow(System.Type,System.Int32)">
      <summary>Creates a tool window of the specified type with the specified ID.</summary>
      <returns>An instance of the requested tool window.</returns>
      <param name="toolWindowType">The type of tool window to create.</param>
      <param name="id">The tool window ID. This is 0 for a single-instance tool window.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="toolWindowType" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="id" /> is less than 0.<paramref name="toolWindowType" /> is not derived from <see cref="T:Microsoft.VisualStudio.Shell.ToolWindowPane" /> type.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Package.Dispose(System.Boolean)">
      <summary>Releases the resources used by the <see cref="T:Microsoft.VisualStudio.Shell.Package" /> object.</summary>
      <param name="disposing">true if the object is being disposed, false if it is being finalized.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Package.FindToolWindow(System.Type,System.Int32,System.Boolean)">
      <summary>Gets the tool window corresponding to the specified type and ID.</summary>
      <returns>An instance of the requested tool window. If <paramref name="create" /> is false and the tool window does not exist, null is returned.</returns>
      <param name="toolWindowType">The type of tool window to create.</param>
      <param name="id">The tool window ID. This is 0 for a single-instance tool window.</param>
      <param name="create">If true, the tool window is created if it does not exist.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="toolWindowType" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="toolWindowType" /> is not derived from <see cref="T:Microsoft.VisualStudio.Shell.ToolWindowPane" />.<paramref name="toolWindowType" /> does not have a public constructor .</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Package.GetAutomationObject(System.String)">
      <summary>Gets the automation object for the VSPackage.</summary>
      <returns>An instance of the automation object, or null if no automation support is available.</returns>
      <param name="name">The name of the automation object to return. If <paramref name="name" /> is null, GetAutomationObject returns the default automation object for the VSPackage.</param>
      <exception cref="T:System.NotImplementedException">Thrown by the base implementation of GetAutomationObject.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Package.GetDialogPage(System.Type)">
      <summary>Gets the requested dialog page.</summary>
      <returns>An instance of the requested page.</returns>
      <param name="dialogPageType">The type of dialog page to retrieve.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dialogPageType" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="dialogPageType" /> is not derived from <see cref="T:Microsoft.VisualStudio.Shell.DialogPage" />.<paramref name="dialogPageType" /> does not have a public constructor.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Package.GetGlobalService(System.Type)">
      <summary>Gets a service proffered globally by Visual Studio or one of its packages. This is the same as calling GetService() on an instance of a package that proffers no services itself.</summary>
      <returns>The service being requested if available, otherwise null.</returns>
      <param name="serviceType">The type of the service requested.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Package.GetOutputPane(System.Guid,System.String)">
      <summary>Gets the requested output window.</summary>
      <returns>The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsOutputWindowPane" /> interface. Returns null in case of failure.</returns>
      <param name="page">The GUID corresponding to the pane. (See <see cref="T:Microsoft.VisualStudio.VSConstants" /> class for the GUIDs which correspond to output panes.)</param>
      <param name="caption">The caption to create if the pane does not exist.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Package.GetProviderLocale">
      <summary>Returns the locale associated with this service provider.</summary>
      <returns>Returns the locale identifier for the service provider.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Package.GetService(System.Type)">
      <summary>Gets type-based services from the VSPackage service container.</summary>
      <returns>An instance of the requested service, or null if the service could not be found.</returns>
      <param name="serviceType">The type of service to retrieve.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Package.Initialize">
      <summary>Called when the VSPackage is loaded by Visual Studio.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Package.Microsoft#VisualStudio#OLE#Interop#IOleCommandTarget#Exec(System.Guid@,System.UInt32,System.UInt32,System.IntPtr,System.IntPtr)">
      <summary>Executes a specified command or displays help for a command.</summary>
      <returns>This method returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" /> if it succeeds, otherwise an error code. If no instance of <see cref="T:Microsoft.VisualStudio.OLE.Interop.IOleCommandTarget" /> can be found, returns <see cref="F:Microsoft.VisualStudio.NativeMethods.OLECMDERR_E_NOTSUPPORTED" />.</returns>
      <param name="guidGroup">The GUID specifying the command group to which the command belongs.</param>
      <param name="nCmdId">The ID of the command.</param>
      <param name="nCmdExcept">A pointer to an <see cref="T:Microsoft.VisualStudio.OLE.Interop.OLECMDEXECOPT" /> structure specifying how the command should be executed.</param>
      <param name="pIn">A pointer to a VARIANTARG structure containing input arguments. Can be null.</param>
      <param name="vOut">A pointer to a VARIANTARG structure to receive command output. Can be null. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Package.Microsoft#VisualStudio#OLE#Interop#IOleCommandTarget#QueryStatus(System.Guid@,System.UInt32,Microsoft.VisualStudio.OLE.Interop.OLECMD[],System.IntPtr)">
      <summary>Queries the object for the status of one or more commands generated by user interface events.</summary>
      <returns>
        <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" /> if the method succeeded, otherwise an error code. This method returns <see cref="F:Microsoft.VisualStudio.NativeMethods.OLECMDERR_E_NOTSUPPORTED" /> if no instance of <see cref="T:Microsoft.VisualStudio.OLE.Interop.IOleCommandTarget" /> can be found.</returns>
      <param name="guidGroup">The GUID of the command group to which the command belongs.</param>
      <param name="nCmdId">The ID of the command.</param>
      <param name="oleCmd">An array of OLECMD structures representing the commands being queried.</param>
      <param name="oleText">A pointer to an OLECMDTXT structure in which to return name and/or status information for a single command. Can be null to indicate that the caller does not need this information. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Package.Microsoft#VisualStudio#OLE#Interop#IServiceProvider#QueryService(System.Guid@,System.Guid@,System.IntPtr@)">
      <summary>Internal IServiceProvider implementation.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />, otherwise it returns an error code.</returns>
      <param name="sid">GUID of the service.</param>
      <param name="iid">GUID of the requested interface</param>
      <param name="ppvObj">Pointer to the object requested.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Package.Microsoft#VisualStudio#Shell#Interop#IVsPackage#Close">
      <summary>Closes and disposes the package.</summary>
      <returns>If the method succeeds, <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />, otherwise an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Package.Microsoft#VisualStudio#Shell#Interop#IVsPackage#GetAutomationObject(System.String,System.Object@)">
      <summary>Gets an automation-friendly object for this package.</summary>
      <returns>If the method succeeds, <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />, otherwise an error code.</returns>
      <param name="propName">String containing the automation property name.</param>
      <param name="auto">[out] Returns the automation object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Package.Microsoft#VisualStudio#Shell#Interop#IVsPackage#GetPropertyPage(System.Guid@,Microsoft.VisualStudio.Shell.Interop.VSPROPSHEETPAGE[])">
      <summary>Proffers access to the Tools menu Options and the property pages of the Customize Toolbox dialog boxes.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />, otherwise it returns an error code.</returns>
      <param name="rguidPage">Unique identifier of the requested property page.</param>
      <param name="ppage">Specifies the property page whose values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSPROPSHEETPAGE" /> structure.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Package.Microsoft#VisualStudio#Shell#Interop#IVsPackage#QueryClose(System.Int32@)">
      <summary>Called to ask the VSPackage if the Visual Studio shell can be closed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />, otherwise it returns an error code.</returns>
      <param name="close">Set <paramref name="canClose" /> to false if you want to prevent the shell from closing</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Package.Microsoft#VisualStudio#Shell#Interop#IVsPackage#ResetDefaults(System.UInt32)">
      <summary>Resets Toolbox defaults.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />, otherwise it returns an error code.</returns>
      <param name="grfFlags">Flags whose values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSPKGRESETFLAGS" /> enumeration</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Package.Microsoft#VisualStudio#Shell#Interop#IVsPackage#SetSite(Microsoft.VisualStudio.OLE.Interop.IServiceProvider)">
      <summary>Initializes the VSPackage in the Visual Studio environment.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="sp">
        <see cref="T:Microsoft.VisualStudio.OLE.Interop.IServiceProvider" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Package.Microsoft#VisualStudio#Shell#Interop#IVsPersistSolutionOpts#LoadUserOptions(Microsoft.VisualStudio.Shell.Interop.IVsSolutionPersistence,System.UInt32)">
      <summary>Loads user options for a given solution.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pPersistance">
        <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSolutionPersistence" /> object.</param>
      <param name="options">User options whose value is taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSLOADUSEROPTS" /></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Package.Microsoft#VisualStudio#Shell#Interop#IVsPersistSolutionOpts#ReadUserOptions(Microsoft.VisualStudio.OLE.Interop.IStream,System.String)">
      <summary>Reads user options for a given solution.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pStream">
        <see cref="T:Microsoft.VisualStudio.OLE.Interop.IStream" /> object from which the VSPackage should read the user-specific options</param>
      <param name="pszKey">Name of the stream.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Package.Microsoft#VisualStudio#Shell#Interop#IVsPersistSolutionOpts#SaveUserOptions(Microsoft.VisualStudio.Shell.Interop.IVsSolutionPersistence)">
      <summary>Saves user options for a given solution.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pPersistance">
        <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSolutionPersistence" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Package.Microsoft#VisualStudio#Shell#Interop#IVsPersistSolutionOpts#WriteUserOptions(Microsoft.VisualStudio.OLE.Interop.IStream,System.String)">
      <summary>Writes user options for a given solution.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pStream">
        <see cref="T:Microsoft.VisualStudio.OLE.Interop.IStream" /> object to which the VSPackage writes the user-specific options.</param>
      <param name="pszKey">Name of the stream.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Package.Microsoft#VisualStudio#Shell#Interop#IVsToolWindowFactory#CreateToolWindow(System.Guid@,System.UInt32)">
      <summary>Creates a tool window of the specified type with the specified ID.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="toolWindowType">Type of the window to be created.</param>
      <param name="id">Instance ID</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Package.Microsoft#VisualStudio#Shell#Interop#IVsUserSettings#ExportSettings(System.String,Microsoft.VisualStudio.Shell.Interop.IVsSettingsWriter)">
      <summary>This method implements the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsUserSettings" /> Interface used to manage profiles and import/export settings to XML files.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="strPageGuid">GUID of the page.</param>
      <param name="writer">
        <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSettingsWriter" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Package.Microsoft#VisualStudio#Shell#Interop#IVsUserSettings#ImportSettings(System.String,Microsoft.VisualStudio.Shell.Interop.IVsSettingsReader,System.UInt32,System.Int32@)">
      <summary>Retrieves a VSPackage's configuration using the Visual Studio settings mechanism when a user selects the import option of the Import/Export Settings feature on the IDE’s Tools menu. This method is part of the implementation of the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsUserSettings" /> interface used to manage profiles and import/export settings to XML files.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="strPageGuid">GUID of the page.</param>
      <param name="reader">
        <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSettingsReader" /> object.</param>
      <param name="flags">Values from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__UserSettingsFlags" /> returned by the shell, specifying how the settings are to be processed.</param>
      <param name="restartRequired">true if the Visual Studio IDE must be restarted.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Package.Microsoft#VisualStudio#Shell#Interop#IVsUserSettingsMigration#MigrateSettings(Microsoft.VisualStudio.Shell.Interop.IVsSettingsReader,Microsoft.VisualStudio.Shell.Interop.IVsSettingsWriter,System.String)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Package.OnLoadOptions(System.String,System.IO.Stream)">
      <summary>Invoked by the package class when there are options to be read out of the solution file.</summary>
      <param name="key">The name of the option key to load.</param>
      <param name="stream">The stream to load the option data from.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Package.OnSaveOptions(System.String,System.IO.Stream)">
      <summary>Invoked by the <see cref="T:Microsoft.VisualStudio.Shell.Package" /> class when there are options to be saved to the solution file. </summary>
      <param name="key">The name of the option key to save.</param>
      <param name="stream">The stream to save the option data to.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Package.ParseToolboxResource(System.IO.TextReader,System.Guid)">
      <summary>Parses an embedded text resource of appropriate format for information about which items should be added to the Toolbox.</summary>
      <param name="resourceData">A text reader that provides toolbox item data in the format described in Remarks.</param>
      <param name="packageGuid">The GUID of the VSPackage.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Package.ParseToolboxResource(System.IO.TextReader,System.Resources.ResourceManager)">
      <summary>Parses an embedded text resource of appropriate format for information about which items should be added to the Toolbox.</summary>
      <param name="resourceData">A text reader that provides toolbox item data in the format described in Remarks.</param>
      <param name="localizedCategories">A resource manager that provides localized lookup names for the categories provided in the resource data. This parameter can be null, in which case the category names are directly used.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Package.QueryClose(System.Boolean@)">
      <summary>Called to ask the package if the shell can be closed.</summary>
      <returns>
        <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" /> if the method succeeded, otherwise an error code.</returns>
      <param name="canClose">[out] Returns true if the shell can be closed, otherwise false.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Package.RegisterEditorFactory(Microsoft.VisualStudio.Shell.Interop.IVsEditorFactory)">
      <summary>Registers an editor factory with Visual Studio.</summary>
      <param name="factory">The editor factory to register.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="factory" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Package.RegisterProjectFactory(Microsoft.VisualStudio.Shell.Interop.IVsProjectFactory)">
      <summary>Registers a project factory with Visual Studio.</summary>
      <param name="factory">The project factory to register.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="factory" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Package.ShowOptionPage(System.Type)">
      <summary>Displays a specified tools options page.</summary>
      <param name="optionsPageType">The options page to open. The options page is identified by the GUID of the <paramref name="optionsPageType" /> object passed in.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="optionsPageType" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Package.System#ComponentModel#Design#IServiceContainer#AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)">
      <summary>Adds the given service to the VSPackage's service container.</summary>
      <param name="serviceType">Type of service to add.</param>
      <param name="callback">
        <see cref="T:System.ComponentModel.Design.ServiceCreatorCallback" /> that can create the service. This allows a service to be declared as available, but delays creation of the object until the service is requested.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Package.System#ComponentModel#Design#IServiceContainer#AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)">
      <summary>Adds the given service to the service container by means of the specified <see cref="T:System.ComponentModel.Design.ServiceCreatorCallback" />.</summary>
      <param name="serviceType">The type of service to add.</param>
      <param name="callback">
        <see cref="T:System.ComponentModel.Design.ServiceCreatorCallback" /> that can create the service. This allows a service to be declared as available, but delays creation of the object until the service is requested.</param>
      <param name="promote">true if this service should be added to any parent service containers; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Package.System#ComponentModel#Design#IServiceContainer#AddService(System.Type,System.Object)">
      <summary>Adds the given service to the VSPackage's service container.</summary>
      <param name="serviceType">Type of service to add.</param>
      <param name="serviceInstance">Service object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Package.System#ComponentModel#Design#IServiceContainer#AddService(System.Type,System.Object,System.Boolean)">
      <summary>Adds the given service to the VSPackage's service container.</summary>
      <param name="serviceType">Type of service to add.</param>
      <param name="serviceInstance">Service object.</param>
      <param name="promote">true if this service should be added to any parent service containers; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Package.System#ComponentModel#Design#IServiceContainer#RemoveService(System.Type)">
      <summary>Removes the given service type from the service container.</summary>
      <param name="serviceType">The type of service to remove.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Package.System#ComponentModel#Design#IServiceContainer#RemoveService(System.Type,System.Boolean)">
      <summary>Removes the given service type from the service container, and optionally promotes the removal of the service to parent service containers.</summary>
      <param name="serviceType">The type of service to remove.</param>
      <param name="promote">true to promote this request to any parent service containers; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Package.System#IServiceProvider#GetService(System.Type)">
      <summary>Gets the service of the specified type.</summary>
      <returns>An object representing the requested service, or null if none can be found.</returns>
      <param name="serviceType">The type of the service to get.</param>
    </member>
    <member name="E:Microsoft.VisualStudio.Shell.Package.ToolboxInitialized">
      <summary>Event generated whenever Visual Studio initializes its Toolbox.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.Shell.Package.ToolboxUpgraded">
      <summary>Event generated whenever Visual Studio upgrades its Toolbox.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.Package.UserDataPath">
      <summary>Gets the path to user data storage for Visual Studio.</summary>
      <returns>The path to user data storage.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.Package.UserLocalDataPath">
      <summary>Gets the path to local user data storage for Visual Studio.</summary>
      <returns>The path to local user data storage.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.Package.UserRegistryRoot">
      <summary>Gets a registry key that can be used to store user data.</summary>
      <returns>A <see cref="T:Microsoft.Win32.RegistryKey" /> that can be used to store user data.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.Package.Zombied">
      <summary>Gets a value indicating whether the package in the process of shutdown.</summary>
      <returns>true if the package is in the process of shutdown, otherwise false.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.PackageUtilities">
      <summary>A set of static utilities for filenames, paths, enumeration/string conversions, images, and other functions.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.PackageUtilities.ContainsInvalidFileNameChars(System.String)">
      <summary>Determines whether or not a string contains characters that are invalid for file names or paths.</summary>
      <returns>true if the string contains invalid characters, false if the string is a valid file name or path.</returns>
      <param name="name">The file name or path.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.PackageUtilities.ConvertFromType``1(System.String,System.Globalization.CultureInfo)">
      <summary>Converts a string to an enumeration using a converter.</summary>
      <returns>The enumeration value.</returns>
      <param name="value">The string value.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> of the string.</param>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.PackageUtilities.ConvertToType``1(``0,System.Type,System.Globalization.CultureInfo)">
      <summary>Converts a string to an enumeration type.</summary>
      <returns>The enumeration type.</returns>
      <param name="value">The enumeration to which the string is to be converted.</param>
      <param name="typeToConvert">The value to convert.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> object describing the culture to use to read localized strings.</param>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.PackageUtilities.CopyUrlToLocal(System.Uri,System.String)">
      <summary>Copies the specified file to the local project directory.  </summary>
      <param name="uri">The <see cref="T:System.Uri" /> to copy.</param>
      <param name="local">The local resource to copy it to.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.PackageUtilities.CreateCAUUIDFromGuidArray(System.Guid[])">
      <summary>Creates a CAUUID from a GUID array. </summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.OLE.Interop.CAUUID" /> structure.</returns>
      <param name="guids">An array of GUIDs.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.PackageUtilities.EnsureOutputPath(System.String)">
      <summary>Creates the directories necessary for the given path.</summary>
      <param name="path">The path to create.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.PackageUtilities.GetImageList(System.IO.Stream)">
      <summary>Creates an image list from the specified stream.</summary>
      <returns>An <see cref="T:System.Windows.Forms.ImageList" /> containing a series of 16 by 16 pixel bitmaps with a magenta background color.</returns>
      <param name="imageStream">The stream from which to extract the bitmaps.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.PackageUtilities.GetImageList(System.Object)">
      <summary>Creates a list of bitmaps from the resource handle.</summary>
      <returns>An <see cref="T:System.Windows.Forms.ImageList" /> containing a series of bitmaps.</returns>
      <param name="imageListAsPointer">The handle of a resource.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.PackageUtilities.GetImageList(System.Reflection.Assembly,System.String[])">
      <summary>Creates a list of bitmaps from the specified assembly and resource names.</summary>
      <returns>An <see cref="T:System.Windows.Forms.ImageList" /> containing a series of 16 by 16 pixel bitmaps.</returns>
      <param name="assembly">The assembly from which to get the resources.</param>
      <param name="resourceNames">An array of resource names (representing bitmaps) in the assembly.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.PackageUtilities.GetIntPointerFromImage(System.Drawing.Image)">
      <summary>Gets a pointer from a bitmap image.</summary>
      <returns>An integer which serves as an <see cref="T:System.IntPtr" />.</returns>
      <param name="image">
        <see cref="T:System.Drawing.Image" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.PackageUtilities.GetPathDistance(System.Uri,System.Uri)">
      <summary>Calculates the distance between two paths.</summary>
      <returns>The relative path.</returns>
      <param name="uriBase">The base <see cref="T:System.Uri" />.</param>
      <param name="uriRelativeTo">The relative <see cref="T:System.Uri" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.PackageUtilities.GetSystemAssemblyPath">
      <summary>Gets the path of system assemblies.</summary>
      <returns>The base directory for system assemblies.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.PackageUtilities.IsFileNameInvalid(System.String)">
      <summary>Determines whether or not the specified file name is invalid.</summary>
      <returns>true if the file name is invalid, false if it is valid.</returns>
      <param name="fileName">The name of the file.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.PackageUtilities.MakeRelative(System.String,System.String)">
      <summary>Returns a path for the second file that is relative to the first.</summary>
      <returns>The relative path of the second file.</returns>
      <param name="filename">The base path.</param>
      <param name="filename2">The relative path.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.PackageUtilities.MakeRelativeIfRooted(System.String,Microsoft.VisualStudio.Shell.Url)">
      <summary>Returns a relative path if the specified file path is absolute and if it is in the same folder as the URL or in a child folder of the URL.</summary>
      <returns>The relative path to the file.</returns>
      <param name="fileName">The path to convert.</param>
      <param name="url">The base URL.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.PackageUtilities.SetStringValueFromConvertedEnum``1(``0,System.Globalization.CultureInfo)">
      <summary>Returns a string from an enumeration value.</summary>
      <returns>A string value derived from the enumeration.</returns>
      <param name="enumValue">The enumeration value.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> of the string.</param>
      <typeparam name="T"></typeparam>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.PropertyPageTypeConverterAttribute">
      <summary>The class representing the attribute describing how to convert property values on property pages in a package. Use this attribute rather than <see cref="T:System.ComponentModel.TypeConverterAttribute" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.PropertyPageTypeConverterAttribute.#ctor(System.Type)">
      <summary>Creates a new instance of the class for the specified type.</summary>
      <param name="t">The type to convert.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.PropertyPageTypeConverterAttribute.ConverterType">
      <summary>The type that is to be converted.</summary>
      <returns>
        <see cref="T:System.Type" />.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.ProvideEditorFactoryAttribute">
      <summary>This attribute declares that the VSPackage provides an editor factory.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideEditorFactoryAttribute.#ctor(System.Type,System.Int16)">
      <summary>This constructor creates a new <see cref="T:Microsoft.VisualStudio.Shell.ProvideEditorFactoryAttribute" /> object.</summary>
      <param name="factoryType">The object type that implements <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsEditorFactory" />.</param>
      <param name="nameResourceID">The resource ID in the unmanaged resource file that contains the localized name of the editor factory.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideEditorFactoryAttribute.FactoryType">
      <summary>Gets the editor factory type.</summary>
      <returns>The editor factory type.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideEditorFactoryAttribute.NameResourceID">
      <summary>Gets resource ID.</summary>
      <returns>Returns the editor factory esource ID specified in the resource file.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideEditorFactoryAttribute.Register(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
      <summary>Called to register this attribute with the given context.</summary>
      <param name="context">
        <see cref="T:Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext" />. Contains the location where the registration information should be placed, and also contains information about the editor type being registered, and path information.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideEditorFactoryAttribute.TrustLevel">
      <summary>Gets or sets the trust level for the editor.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSEDITORTRUSTLEVEL" />.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideEditorFactoryAttribute.Unregister(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
      <summary>Called to un-register this attribute with the given context.</summary>
      <param name="context">
        <see cref="T:Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext" />. Contains the location where the registration information should be placed, and also contains information about the editor type being registered, and path information.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.ProvideKeyBindingTableAttribute">
      <summary>Provides a key binding table GUID. By putting this attribute on your <see cref="T:Microsoft.VisualStudio.Shell.Package" />-derived class or class that implements <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsPackage" /> you will declare that it has the given key binding (KEYBINDINGS_SECTION – KEYBINDINGS_END) table in its Command Table Configuration (.Ctc) Files.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideKeyBindingTableAttribute.#ctor(System.String,System.Int16)">
      <summary>Initializes a new instance of <see cref="T:Microsoft.VisualStudio.Shell.ProvideKeyBindingTableAttribute" /> for the specified table and name resource ID.</summary>
      <param name="tableGuid">The GUID of the key binding table in the Command Table Configuration (.Ctc) Files.</param>
      <param name="nameResourceID">The resource ID in the unmanaged resource file that contains the localized name of the key binding table. </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideKeyBindingTableAttribute.AllowNavKeyBinding">
      <summary>Gets or sets whether the user is allowed to bind new commands to navigation keys.</summary>
      <returns>true if the user is allowed to bind new commands to navigation keys, otherwise false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideKeyBindingTableAttribute.NameResourceID">
      <summary>Gets the name resource ID.</summary>
      <returns>The name resource ID</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideKeyBindingTableAttribute.Register(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
      <summary>Called to register this attribute with the given context.</summary>
      <param name="context">A <see cref="T:Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext" /> provided by an external registration tool. The context can be used to create registry keys, log registration activity, and obtain information about the component being registered.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideKeyBindingTableAttribute.TableGuid">
      <summary>Gets the GUID of the key binding table.</summary>
      <returns>The GUID of the key binding table.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideKeyBindingTableAttribute.Unregister(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
      <summary>Removes the registration information about a VSPackage when called by an external registration tool such as regpkg.exe. For more information, see Registering VSPackages.</summary>
      <param name="context">A <see cref="T:Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext" /> provided by an external registration tool. The context can be used to create registry keys, log registration activity, and obtain information about the component being registered.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.ProvideLanguageEditorOptionPageAttribute">
      <summary>Informs Visual Studio about a language service property page.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideLanguageEditorOptionPageAttribute.#ctor(System.Type,System.String,System.String,System.String,System.String)">
      <summary>Initializes a new instance of <see cref="T:Microsoft.VisualStudio.Shell.ProvideLanguageEditorOptionPageAttribute" /> for the specified page.</summary>
      <param name="pageType">The type of the option page.</param>
      <param name="languageName">The language name.</param>
      <param name="category">The option page category.</param>
      <param name="pageName">The caption of the option page.</param>
      <param name="pageNameResourceId">The resource ID of the page.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideLanguageEditorOptionPageAttribute.LanguageName">
      <summary>Gets the name of the language.</summary>
      <returns>The name of the language. This is the same string that was passed to the class constructor.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideLanguageEditorOptionPageAttribute.PageGuid">
      <summary>Gets the GUID of the option page.</summary>
      <returns>The GUID of the option page.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideLanguageEditorOptionPageAttribute.Register(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
      <summary>Creates all the registry keys and entries as specified by the class constructor.</summary>
      <param name="context">[in] A <see cref="T:Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext" /> object used to manage registry keys.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideLanguageEditorOptionPageAttribute.Unregister(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
      <summary>Removes all of the registry keys and entries.</summary>
      <param name="context">[in] A <see cref="T:Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext" /> object used to manage registry keys.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.ProvideLanguageExtensionAttribute">
      <summary>Associates a file extension with a particular language service.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideLanguageExtensionAttribute.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.Shell.ProvideLanguageExtensionAttribute" /> attribute, using the specified language service GUID.</summary>
      <param name="languageServiceGuid">[in] A string containing the GUID of the language service.</param>
      <param name="extension">[in] A string containing the file extension to associate with the language service.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideLanguageExtensionAttribute.#ctor(System.Type,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.Shell.ProvideLanguageExtensionAttribute" /> attribute, using the type of your language service class.</summary>
      <param name="languageService">[in] The type of the language service class.</param>
      <param name="extension">[in] A string containing the file extension to associate with the language service.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideLanguageExtensionAttribute.Extension">
      <summary>Returns the associated file extension.</summary>
      <returns>Returns the string containing the file extension that was passed to the constructor of the <see cref="T:Microsoft.VisualStudio.Shell.ProvideLanguageExtensionAttribute" /> class.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideLanguageExtensionAttribute.LanguageService">
      <summary>Returns the language GUID.</summary>
      <returns>Returns a <see cref="T:System.Guid" /> object containing the GUID of the language service that was passed to the <see cref="T:Microsoft.VisualStudio.Shell.ProvideLanguageExtensionAttribute" /> class constructor.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideLanguageExtensionAttribute.Register(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
      <summary>Puts the file extension and language service GUID into the registry.</summary>
      <param name="context">[in] A <see cref="T:Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext" /> object used to create registry keys and to log progress.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideLanguageExtensionAttribute.Unregister(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
      <summary>Removes the file extension and language service GUID from the registry.</summary>
      <param name="context">[in] A <see cref="T:Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext" /> object used to remove registry keys and to log progress.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.ProvideLanguageServiceAttribute">
      <summary>Informs Visual Studio that a VSPackage provides a language service. Used with the managed package framework (MPF).</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideLanguageServiceAttribute.#ctor(System.Object,System.String,System.Int32)">
      <summary>Initializes a new instance of the Shell.ProvideLanguageServiceAttribute class.</summary>
      <param name="languageService">[in] This is either a string containing a GUID or a type representing the class that implements the language service. The language service GUID is derived from this string or type.</param>
      <param name="strLanguageName">[in] The name of the language. This name is used in the registry for registry key and entry names.</param>
      <param name="languageResourceID">[in] The resource ID for the localized version of the language name. This is used to present the language name in dialog boxes and other user interface elements.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideLanguageServiceAttribute.AutoOutlining">
      <summary>Determines if the language service supports automatic outlining.</summary>
      <returns>Returns true if the language service supports automatic outlining; otherwise, returns false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideLanguageServiceAttribute.CodeSense">
      <summary>Determines if the language service supports IntelliSense operations.</summary>
      <returns>Returns true if the language service supports IntelliSense operations; otherwise, returns false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideLanguageServiceAttribute.CodeSenseDelay">
      <summary>Determines the amount of time before a parse operation is started to support an IntelliSense operation.</summary>
      <returns>Returns the number of milliseconds delay before a parse is started.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideLanguageServiceAttribute.DebuggerLanguageExpressionEvaluator">
      <summary>Determines the expression evaluator that is used for evaluating expressions.</summary>
      <returns>Returns a string containing the GUID of an expression evaluator; otherwise, returns a null value.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideLanguageServiceAttribute.DefaultToInsertSpaces">
      <summary>Determines the default setting for the Insert spaces option in the Options dialog box for a language service.</summary>
      <returns>Returns true if the language service initially uses spaces for formatting; otherwise, returns false to indicate the language service uses tabs.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideLanguageServiceAttribute.DefaultToNonHotURLs">
      <summary>Determines the initial setting of the Enable single-click URL navigation option in the Options dialog box.</summary>
      <returns>Returns true if the Enable single-click URL navigation should be turned off; otherwise, returns false, the option is initially turned on.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideLanguageServiceAttribute.EnableAdvancedMembersOption">
      <summary>Determines whether the Hide Advanced Members option is enabled in the Options dialog box.</summary>
      <returns>Returns true if the Hide Advanced Members option is enabled; otherwise, returns false. </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideLanguageServiceAttribute.EnableAsyncCompletion">
      <summary>Determines whether the language supports background parsing.</summary>
      <returns>Returns true if background parsing is allowed; otherwise, returns false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideLanguageServiceAttribute.EnableCommenting">
      <summary>Determines whether the language service can comment and uncomment source code using a single command.</summary>
      <returns>Returns true if commenting is supported; otherwise, returns false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideLanguageServiceAttribute.EnableFormatSelection">
      <summary>Determines if the language service supports automatic formatting of the source code.</summary>
      <returns>Returns true if formatting is supported; otherwise, returns false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideLanguageServiceAttribute.EnableLineNumbers">
      <summary>Determines if the Line numbers option can be selected in the Options dialog box.</summary>
      <returns>Returns true if the Line numbers option is enabled for use; otherwise, returns false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideLanguageServiceAttribute.HideAdvancedMembersByDefault">
      <summary>Determines the initial state of the Hide Advanced Members option in the Options dialog box.</summary>
      <returns>Returns true if the Hide Advanced Members is initially selected; otherwise, returns false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideLanguageServiceAttribute.LanguageName">
      <summary>Returns the name of the language.</summary>
      <returns>Returns a string containing the name of the language. This is the same string that was passed to the class constructor.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideLanguageServiceAttribute.LanguageResourceID">
      <summary>Returns the resource ID used to obtain the localized version of the language name.</summary>
      <returns>Returns a number representing the resource ID. This is the same value that was passed to the class constructor.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideLanguageServiceAttribute.LanguageServiceSid">
      <summary>Returns the GUID of the language service.</summary>
      <returns>Returns the GUID of the language service. This is the value that was derived from the object passed to the class constructor.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideLanguageServiceAttribute.MatchBraces">
      <summary>Determines if the language service supports matching language pairs.</summary>
      <returns>Returns true if matching language pairs is supported; otherwise, returns false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideLanguageServiceAttribute.MatchBracesAtCaret">
      <summary>Determines if a language service supports matching language pairs while typing.</summary>
      <returns>Returns true if language pairs can be matched while typing; otherwise, returns false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideLanguageServiceAttribute.MaxErrorMessages">
      <summary>Determines the maximum number of errors message that a language service can report for a parsing operation.</summary>
      <returns>Returns a number indicating the maximum number of errors that can be reported.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideLanguageServiceAttribute.QuickInfo">
      <summary>Determines if the language service supports the IntelliSense Quick Info.</summary>
      <returns>Returns true if the IntelliSense Quick Info is supported; otherwise, returns false.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideLanguageServiceAttribute.Register(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
      <summary>Creates all of the registry keys and entries as specified by the class constructor.</summary>
      <param name="context">[in] A <see cref="T:Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext" /> object used to manage registry keys.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideLanguageServiceAttribute.RequestStockColors">
      <summary>Determines if the language service is using the built-in colorable items as supplied by Visual Studio.</summary>
      <returns>Returns true if the language service uses the built-in colorable items; otherwise, returns false, indicating the language service is supplying custom colorable items.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideLanguageServiceAttribute.ShowCompletion">
      <summary>Determines if the Statement completion options are enabled in the Options dialog box.</summary>
      <returns>Returns true if the Statement completion options are enabled; otherwise, returns false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideLanguageServiceAttribute.ShowDropDownOptions">
      <summary>Determines if the Navigation bar option is enabled in the Options dialog box.</summary>
      <returns>Returns true if the Navigation bar option is to be enabled; otherwise, returns false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideLanguageServiceAttribute.ShowHotURLs">
      <summary>Determines if URLs are displayed in such a way as to show they can be clicked. This option is not used.</summary>
      <returns>Returns true if URLs are to be displayed "hot" or clickable; otherwise, returns false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideLanguageServiceAttribute.ShowMatchingBrace">
      <summary>Determines if the matching language pair is shown in the status bar.</summary>
      <returns>Returns true if the matching language pair is shown in the status bar; otherwise, returns false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideLanguageServiceAttribute.ShowSmartIndent">
      <summary>Determines if the Smart Indenting option is enabled in the Options dialog box.</summary>
      <returns>Returns true if the Smart Indenting option is enabled; otherwise, returns false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideLanguageServiceAttribute.SingleCodeWindowOnly">
      <summary>Determines if the Window -&gt; New Window command is disabled for a language service.</summary>
      <returns>Returns true if the Window -&gt; New Window command is disabled; otherwise, returns false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideLanguageServiceAttribute.SupportCopyPasteOfHTML">
      <summary>Determines if the language service supports the clipboard format HTML for copy and paste operations.</summary>
      <returns>Returns true if the HTML clipboard format is supported, otherwise, returns false.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideLanguageServiceAttribute.Unregister(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
      <summary>Removes all of the registry keys and entries as specified by the class constructor.</summary>
      <param name="context">[in] A <see cref="T:Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext" /> object used to manage registry keys.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.ProvideLoadKeyAttribute">
      <summary>This attribute provides a package load key for your package.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideLoadKeyAttribute.#ctor(System.String,System.String,System.String,System.String,System.Int16)">
      <summary>Creates a new <see cref="T:Microsoft.VisualStudio.Shell.ProvideLoadKeyAttribute" />.</summary>
      <param name="minimumEdition">The minimum edition of Visual Studio on which the VSPackage is loaded. This must be the literal edition value provided by Microsoft when obtaining your Package Load Key (PLK).</param>
      <param name="productVersion">The version of the product that this VSPackage implements.</param>
      <param name="productName">Name of the product that this VSPackage delivers. Products comprised of multiple VSPackages each need their own PLK.</param>
      <param name="companyName">VSIP Partner/creator of the VSPackage. Must exactly match the name you provided to Microsoft when you registered for a PLK. <paramref name="companyName" /> is case-sensitive.</param>
      <param name="resourceId">Resource ID for VSPackage load key.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="minimumEdition, productVersion, productName " />or<paramref name=" companyName " />are null.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideLoadKeyAttribute.CompanyName">
      <summary>Returns a string containing the CompanyName.</summary>
      <returns>The name of your company.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideLoadKeyAttribute.MinimumEdition">
      <summary>The MinimumEdition property returns a string containing the minimum edition of Visual Studio needed to load your VSPackage.</summary>
      <returns>The minimum edition of Visual Studio needed to load your VSPackage.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideLoadKeyAttribute.ProductName">
      <summary>The ProductName property returns a string containing the name of your VSPackage.</summary>
      <returns>The name of your VSPackage.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideLoadKeyAttribute.ProductVersion">
      <summary>The ProductVersion attribute returns a string containing the version number of your VSPackage.</summary>
      <returns>The version number of your VSPackage.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideLoadKeyAttribute.Register(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
      <summary>Provides registration information about a VSPackage when called by an external registration tool such as regpkg.exe. For more information, see Registering VSPackages.</summary>
      <param name="context">A registration context provided by an external registration tool. The context can be used to create registry keys, log registration activity, and obtain information about the component being registered.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideLoadKeyAttribute.RegKeyName(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
      <summary>Returns the registry key name for this package's load key information.</summary>
      <returns>The Registry Key name for the load key information of the VSPackage.</returns>
      <param name="context">A registration context provided by an external registration tool. The context can be used to create registry keys, log registration activity, and obtain information about the component being registered.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideLoadKeyAttribute.ResourceId">
      <summary>Gets resource ID for the Package Load Key.</summary>
      <returns>The resource ID for the Package Load Key.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideLoadKeyAttribute.Unregister(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
      <summary>Removes the registration information about a VSPackage when called by an external registration tool such as regpkg.exe. For more information, see Registering VSPackages.</summary>
      <param name="context">A registration context provided by an external registration tool. The context can be used to create registry keys, log registration activity, and obtain information about the component being registered.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideOptionPageAttribute.ProfileMigrationType"></member>
    <member name="T:Microsoft.VisualStudio.Shell.ProvideToolboxPageAttribute">
      <summary>Registers a VSPackage as providing one or more dialog pages in the Customize Toolbox dialog page of the Visual Studio IDE.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideToolboxPageAttribute.#ctor(System.Type,System.Int16)">
      <summary>Initializes a new instance of <see cref="T:Microsoft.VisualStudio.Shell.ProvideToolboxPageAttribute" />, using the type of the class implementing the Customize Toolbox dialog page, and a resource ID.</summary>
      <param name="pageType">[in] The <see cref="T:System.Type" /> of the class implementing the Customize Toolbox dialog page. This type must derive from the <see cref="T:Microsoft.VisualStudio.Shell.DialogPage" /> class.</param>
      <param name="nameResourceID">[in] The native resource ID in a VSPackage's satellite dll containing the name for the tab hosting this Customize Toolbox dialog page.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideToolboxPageAttribute.#ctor(System.Type,System.Int16,System.Int16)">
      <summary>Initializes a new instance of <see cref="T:Microsoft.VisualStudio.Shell.ProvideToolboxPageAttribute" />, using the type of the class implementing the Customize Toolbox dialog page, a resource ID, and a page order.</summary>
      <param name="pageType">[in] The type of the class implementing the Customize Toolbox dialog page. This type must derive from the <see cref="T:Microsoft.VisualStudio.Shell.DialogPage" /> class.</param>
      <param name="nameResourceID">[in] The native resource ID in a VSPackage's satellite dll containing the name for the tab of hosting this Customize Toolbox dialog page.</param>
      <param name="pageOrder">[in] The Customize Toolbox dialog page placement in the pages of the Visual Studio Customize Toolbox Dialog. A value of 0 indicates that no order is requested. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideToolboxPageAttribute.#ctor(System.Type,System.Int16,System.Int16,System.String)">
      <summary>Initializes a new instance of <see cref="T:Microsoft.VisualStudio.Shell.ProvideToolboxPageAttribute" />, using the <see cref="T:System.Type" /> of the class implementing the Customize Toolbox dialog page, a resource ID, a page order, and a help string.</summary>
      <param name="pageType">[in] The type of the class implementing the Customize Toolbox dialog page. This type must derive from the <see cref="T:Microsoft.VisualStudio.Shell.DialogPage" /> class.</param>
      <param name="nameResourceID">[in] The native resource ID in a VSPackage's satellite dll containing the name for the tab of hosting this Customize Toolbox dialog page.</param>
      <param name="pageOrder">[in] The Customize Toolbox dialog page placement in the pages of the Visual Studio Customize Toolbox Dialog box. A value of zero indicates that no order is requested. </param>
      <param name="helpKeyword">[in] A help keyword used by the help system to find the correct help topic information.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideToolboxPageAttribute.HelpKeyword">
      <summary>Gets a help keyword associated with the Customize Toolbox dialog page.</summary>
      <returns>The help keyword used to obtain information about the Customize Toolbox dialog page.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideToolboxPageAttribute.PageOrder">
      <summary>Gets the page order requested for the Customize Toolbox dialog page</summary>
      <returns>The page order requested for the Customize Toolbox dialog page.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideToolboxPageAttribute.Register(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
      <summary>Registers the toolbox page.</summary>
      <param name="context">A <see cref="T:Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext" /> describing the location and values of the registry key.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideToolboxPageAttribute.TypeId">
      <summary>Gets the instance of the class implementing the Customize Toolbox dialog page.</summary>
      <returns>The current instance of the class implementing the Customize Toolbox dialog page.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideToolboxPageAttribute.Unregister(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
      <summary>Removes the toolbox page registry key.</summary>
      <param name="context">A <see cref="T:Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext" /> describing the location and values of the registry key.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.ProvideViewAttribute">
      <summary>This attribute declares that an editor factory class offers a particular logical view.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideViewAttribute.#ctor(Microsoft.VisualStudio.Shell.LogicalView,System.String)">
      <summary>Creates a new attribute.</summary>
      <param name="logicalView">An enumeration of the kinds of logical views available.</param>
      <param name="physicalView">The GUID of the physical view. This can be null to indicate the default physical view.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideViewAttribute.LogicalView">
      <summary>Gets the logical view in this attribute.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Shell.LogicalView" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideViewAttribute.PhysicalView">
      <summary>Returns the physical view that is mapped to the logical view.</summary>
      <returns>
        <see cref="P:Microsoft.VisualStudio.Shell.ProvideViewAttribute.PhysicalView" />.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.RegisterEditorExtensionAttribute">
      <summary>See <see cref="T:Microsoft.VisualStudio.Shell.ProvideEditorExtensionAttribute" />. Registers a file extension with a given editor factory. This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.RegisterEditorExtensionAttribute.#ctor(System.Object,System.String,System.Int32)">
      <summary>Initializes a new <see cref="T:Microsoft.VisualStudio.Shell.RegisterEditorExtensionAttribute" /> for the supplied factory type and extension.</summary>
      <param name="factoryType">One of following types:The type of the editor factory expressed as a string.The GUID of the editor factory.The type of the editor factory.</param>
      <param name="extension">The file extension to associate with the editor factory. This extension should include the prefix “.”.</param>
      <param name="priority">The priority of this editor factory. Editors with higher priority numbers are given a chance to read a file first. Upon failure, the next editor in priority order is used.</param>
      <exception cref="T:System.ArgumentNullException">This method throws an <see cref="T:System.ArgumentNullException" /> if:Factory GUID value passed in <paramref name="factoryType" /> is null.<paramref name="extension" /> is null.</exception>
      <exception cref="T:System.ArgumentException">This method throws an <see cref="T:System.ArgumentException" /> if:The factory GUID string cannot be converted to a GUID object. Extension does not begin with a “.”.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.RegisterEditorExtensionAttribute.EditorFactoryNotify">
      <summary>Gets or sets whether or not to create the EditorFactoryNotify registry key on registration.</summary>
      <returns>true if the EditorFactoryNotify registry key should be created, otherwise false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.RegisterEditorExtensionAttribute.Extension">
      <summary>Gets the file extension of the file.</summary>
      <returns>The file extension for this editor.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.RegisterEditorExtensionAttribute.Factory">
      <summary>Gets the editor factory GUID.</summary>
      <returns>The GUID of the editor factory.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.RegisterEditorExtensionAttribute.NameResourceID">
      <summary>Gets or sets the name resource ID.</summary>
      <returns>The name resource ID.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.RegisterEditorExtensionAttribute.Priority">
      <summary>Gets the priority of this extension registration.</summary>
      <returns>The priority for this editor for its file extension.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.RegisterEditorExtensionAttribute.ProjectGuid">
      <summary>Gets or sets the project GUID.</summary>
      <returns>The project GUID.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.RegisterEditorExtensionAttribute.Register(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
      <summary>Registers the editor extension.</summary>
      <param name="context">A <see cref="T:Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext" /> that describes the location and values of a registry key.</param>
      <exception cref="T:System.ArgumentNullException">This method throws an <see cref="T:System.ArgumentNullException" /> if <paramref name="context" /> is null.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.RegisterEditorExtensionAttribute.TemplateDir">
      <summary>Gets or sets the template directory.</summary>
      <returns>The template directory.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.RegisterEditorExtensionAttribute.Unregister(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
      <summary>Removes the editor extension registry key.</summary>
      <param name="context">A <see cref="T:Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext" /> that describes the location and values of a registry key.</param>
      <exception cref="T:System.ArgumentNullException">This method throws an <see cref="T:System.ArgumentNullException" /> if the <paramref name="context" /> argument is null.</exception>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.RegisterLoadKeyAttribute">
      <summary>Registers a Package load key with the VSPackage. This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.RegisterLoadKeyAttribute.#ctor(System.String,System.String,System.String,System.String,System.Int16)">
      <summary>Creates a new <see cref="T:Microsoft.VisualStudio.Shell.RegisterLoadKeyAttribute" />.</summary>
      <param name="minimumEdition">The minimum edition of Visual Studio .NET needed to load the VSPackage.</param>
      <param name="productVersion">The version number of the VSPackage.</param>
      <param name="productName">The name of the VSPackage.</param>
      <param name="companyName">The name of your company.</param>
      <param name="resourceId">The resource ID for the VSPackage load key.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="minimumEdition, productVersion, productName " />or<paramref name=" companyName " />are null.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.RegisterLoadKeyAttribute.CompanyName">
      <summary>The CompanyName property returns a string containing the name of your company.</summary>
      <returns>The name of your company.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.RegisterLoadKeyAttribute.MinimumEdition">
      <summary>The MinimumEdition property returns a string containing the minimum edition of Visual Studio needed to load your VSPackage.</summary>
      <returns>The minimum edition of Visual Studio needed to load your VSPackage.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.RegisterLoadKeyAttribute.ProductName">
      <summary>The ProductName property returns a string containing the name of your VSPackage.</summary>
      <returns>The name of your VSPackage.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.RegisterLoadKeyAttribute.ProductVersion">
      <summary>The ProductVersion attribute returns a string containing the version number of your VSPackage.</summary>
      <returns>The version number of your VSPackage.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.RegisterLoadKeyAttribute.Register(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
      <summary>Provides registration information about a VSPackage when called by an external registration tool such as regpkg.exe. For more information, see Registering VSPackages.</summary>
      <param name="context">A registration context provided by an external registration tool. The context can be used to create registry keys, log registration activity, and obtain information about the component being registered.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.RegisterLoadKeyAttribute.RegKeyName(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
      <summary>Retrieves the registry key name for the load key information of the VSPackage.</summary>
      <returns>The Registry Key name for the load key information of the VSPackage.</returns>
      <param name="context">A registration context provided by an external registration tool. The context can be used to create registry keys, log registration activity, and obtain information about the component being registered.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.RegisterLoadKeyAttribute.ResourceId">
      <summary>Gets resource ID for the Package Load Key.</summary>
      <returns>The resource ID for the Package Load Key.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.RegisterLoadKeyAttribute.Unregister(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
      <summary>Removes the registration information about a VSPackage when called by an external registration tool such as regpkg.exe. For more information, see Registering VSPackages.</summary>
      <param name="context">A registration context provided by an external registration tool. The context can be used to remove registry keys, log registration activity, and obtain information about the component being registered.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.RunningDocumentInfo">
      <summary>Represents information about a document in the <see cref="T:Microsoft.VisualStudio.Shell.RunningDocumentTable" />. It includes all the information returned by <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsRunningDocumentTable.GetDocumentInfo(System.UInt32,System.UInt32@,System.UInt32@,System.UInt32@,System.String@,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy@,System.UInt32@,System.IntPtr@)" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.RunningDocumentInfo.DocData">
      <summary>The document object in the Running Document Table (RDT).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.RunningDocumentInfo.EditLocks">
      <summary>The number of edit locks held on the document.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.RunningDocumentInfo.Flags">
      <summary>The <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSRDTFLAGS" /> set on the document.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.RunningDocumentInfo.Hierarchy">
      <summary>The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface of the hierarchy node that owns the document.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.RunningDocumentInfo.ItemId">
      <summary>The item ID of the node that holds the document.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.RunningDocumentInfo.Moniker">
      <summary>The absolute path of the document.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.RunningDocumentInfo.ReadLocks">
      <summary>The number of read locks held on the document.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Task">
      <summary>An implementation of <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsTaskItem" />, used to modify the appearance and functionality of a task in the task list.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Task.#ctor">
      <summary>Initializes a new instance of <see cref="T:Microsoft.VisualStudio.Shell.Task" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Task.#ctor(System.Exception)">
      <summary>Initializes a new instance of <see cref="T:Microsoft.VisualStudio.Shell.Task" /> for the supplied exception.</summary>
      <param name="error">The <see cref="T:System.Exception" /> used to create the task.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.Task.CanDelete">
      <summary>Gets or sets whether or not the task can be deleted.</summary>
      <returns>true if the task can be deleted, otherwise false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.Task.Category">
      <summary>Gets or sets the task's category.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Shell.TaskCategory" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.Task.Checked">
      <summary>Gets or sets whether not the task's check box is currently selected or cleared.</summary>
      <returns>true if the task is checked, otherwise false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.Task.Column">
      <summary>Gets or sets the column number within the file associated with the task.</summary>
      <returns>The column number of the task.</returns>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Task.contextNameKeyword">
      <summary>Represents the keyword for the user context. This field is constant.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.Shell.Task.Deleted">
      <summary>Handles <see cref="M:Microsoft.VisualStudio.Shell.Task.OnDeleted(System.EventArgs)" /> events.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.Task.Document">
      <summary>Gets or sets the file associated with the task.</summary>
      <returns>The name of the file.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Task.GetUserContext(Microsoft.VisualStudio.Shell.Interop.IVsUserContext@)">
      <summary>Creates a new user context.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppctx">[out] The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsUserContext" /> that has been created.</param>
    </member>
    <member name="E:Microsoft.VisualStudio.Shell.Task.Help">
      <summary>Handles <see cref="M:Microsoft.VisualStudio.Shell.Task.OnHelp(System.EventArgs)" /> events.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.Task.HelpKeyword">
      <summary>Gets or sets the Help keyword associated with the task.</summary>
      <returns>The Help keyword.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.Task.ImageIndex">
      <summary>Gets or sets the index of the image associated with the task.</summary>
      <returns>The index of the image associated with the task.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.Task.IsCheckedEditable">
      <summary>Gets or sets whether or not it is possible to edit the checked state of the task.</summary>
      <returns>true if it is possible to edit the checked state of the task, otherwise false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.Task.IsPriorityEditable">
      <summary>Gets or sets whether or not it is possible to edit the priority of a task.</summary>
      <returns>true if it is possible to edit the priority of a task, otherwise false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.Task.IsTextEditable">
      <summary>Gets or sets whether or not it is possible to edit the description of a task.</summary>
      <returns>true if it is possible to edit the description of a task, otherwise false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.Task.Line">
      <summary>Gets or sets the line number of the file associated with the task.</summary>
      <returns>The line number of the file associated with the task.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Task.Microsoft#VisualStudio#Shell#Interop#IVsTaskItem#CanDelete(System.Int32@)">
      <summary>Gets whether or not it is possible to delete the task.</summary>
      <returns>
        <see cref="F:Microsoft.VisualStudio.NativeMethods.S_OK" />.</returns>
      <param name="fdelete">[out] Returns true if it is possible to delete the task, otherwise false.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Task.Microsoft#VisualStudio#Shell#Interop#IVsTaskItem#Category(Microsoft.VisualStudio.Shell.Interop.VSTASKCATEGORY[])">
      <summary>Sets the task category.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="cat">An array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSTASKCATEGORY" /> objects.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Task.Microsoft#VisualStudio#Shell#Interop#IVsTaskItem#Column(System.Int32@)">
      <summary>Gets the column number of the file associated with the task.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code. </returns>
      <param name="col">[out] Returns the column number.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Task.Microsoft#VisualStudio#Shell#Interop#IVsTaskItem#Document(System.String@)">
      <summary>Gets the name of the file associated with the task.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="doc">[out] Returns the name of the file.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Task.Microsoft#VisualStudio#Shell#Interop#IVsTaskItem#get_Checked(System.Int32@)">
      <summary>Determines whether the task item's check box is currently selected or cleared.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="f">[out] Returns true if the check box is selected, otherwise false.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Task.Microsoft#VisualStudio#Shell#Interop#IVsTaskItem#get_Priority(Microsoft.VisualStudio.Shell.Interop.VSTASKPRIORITY[])">
      <summary>Gets the priority of the task.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pri">An array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSTASKPRIORITY" /> objects.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Task.Microsoft#VisualStudio#Shell#Interop#IVsTaskItem#get_Text(System.String@)">
      <summary>Gets the description of the task.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="text">[out] The description of the task.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Task.Microsoft#VisualStudio#Shell#Interop#IVsTaskItem#HasHelp(System.Int32@)">
      <summary>Determines whether or not the task has associated help.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="fHelp">[out] Returns true if there is help associated with the task, otherwise false.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Task.Microsoft#VisualStudio#Shell#Interop#IVsTaskItem#ImageListIndex(System.Int32@)">
      <summary>Gets the index of the image associated with the task.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[out] The index of the associated image.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Task.Microsoft#VisualStudio#Shell#Interop#IVsTaskItem#IsReadOnly(Microsoft.VisualStudio.Shell.Interop.VSTASKFIELD,System.Int32@)">
      <summary>Determines whether or not the specified task field is read-only.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="field">The <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSTASKFIELD" />.</param>
      <param name="fReadOnly">[out] Returns true if the field is read-only, otherwise false.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Task.Microsoft#VisualStudio#Shell#Interop#IVsTaskItem#Line(System.Int32@)">
      <summary>Gets the line number of the file associated with the task.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="line">[out] Returns the line number of the file.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Task.Microsoft#VisualStudio#Shell#Interop#IVsTaskItem#NavigateTo">
      <summary>Opens a file associated with a task and moves to the appropriate position in the file. </summary>
      <returns>
        <see cref="F:Microsoft.VisualStudio.NativeMethods.S_OK" />.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Task.Microsoft#VisualStudio#Shell#Interop#IVsTaskItem#NavigateToHelp">
      <summary>Opens the Help resource associated with a task.</summary>
      <returns>
        <see cref="F:Microsoft.VisualStudio.NativeMethods.S_OK" />.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Task.Microsoft#VisualStudio#Shell#Interop#IVsTaskItem#OnDeleteTask">
      <summary>Raised when a task has been deleted.</summary>
      <returns>
        <see cref="F:Microsoft.VisualStudio.NativeMethods.S_OK" />.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Task.Microsoft#VisualStudio#Shell#Interop#IVsTaskItem#OnFilterTask(System.Int32)">
      <summary>Raised when a task has been filtered into or out of a view.</summary>
      <returns>
        <see cref="F:Microsoft.VisualStudio.NativeMethods.S_OK" />.</returns>
      <param name="f">If true, the task has become visible, otherwise it has become invisible.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Task.Microsoft#VisualStudio#Shell#Interop#IVsTaskItem#put_Checked(System.Int32)">
      <summary>Sets whether a task item's check box is selected or cleared.</summary>
      <returns>
        <see cref="F:Microsoft.VisualStudio.NativeMethods.S_OK" />.</returns>
      <param name="f">true if the check box is selected, false if it is cleared.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Task.Microsoft#VisualStudio#Shell#Interop#IVsTaskItem#put_Priority(Microsoft.VisualStudio.Shell.Interop.VSTASKPRIORITY)">
      <summary>Sets the priority level of a task item. </summary>
      <returns>
        <see cref="F:Microsoft.VisualStudio.NativeMethods.S_OK" />.</returns>
      <param name="pri">The <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSTASKPRIORITY" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Task.Microsoft#VisualStudio#Shell#Interop#IVsTaskItem#put_Text(System.String)">
      <summary>Sets the description of the task.</summary>
      <returns>
        <see cref="F:Microsoft.VisualStudio.NativeMethods.S_OK" />.</returns>
      <param name="t">The description of the task.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Task.Microsoft#VisualStudio#Shell#Interop#IVsTaskItem#SubcategoryIndex(System.Int32@)">
      <summary>Gets the index of the task in the subcategory list.</summary>
      <returns>
        <see cref="F:Microsoft.VisualStudio.NativeMethods.S_OK" />.</returns>
      <param name="index">[out] Returns the index.</param>
    </member>
    <member name="E:Microsoft.VisualStudio.Shell.Task.Navigate">
      <summary>Handles <see cref="M:Microsoft.VisualStudio.Shell.Task.OnNavigate(System.EventArgs)" /> events.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Task.OnDeleted(System.EventArgs)">
      <summary>Raised when the task has been deleted.</summary>
      <param name="e">
        <see cref="T:System.EventArgs" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Task.OnHelp(System.EventArgs)">
      <summary>Raised when the user requests Help; for example by right-clicking and selecting Show Error Help.</summary>
      <param name="e">
        <see cref="T:System.EventArgs" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Task.OnNavigate(System.EventArgs)">
      <summary>Raised when the user attempts to navigate to the task's location in the file, for example by double-clicking on the task.</summary>
      <param name="e">
        <see cref="T:System.EventArgs" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Task.OnRemoved(System.EventArgs)">
      <summary>Raised when a task has been removed from the task list.</summary>
      <param name="e">
        <see cref="T:System.EventArgs" />.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.Task.Priority">
      <summary>Gets or sets the priority of a task.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Shell.TaskPriority" />.</returns>
    </member>
    <member name="E:Microsoft.VisualStudio.Shell.Task.Removed">
      <summary>Handles <see cref="M:Microsoft.VisualStudio.Shell.Task.OnRemoved(System.EventArgs)" /> events.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.Task.SubcategoryIndex">
      <summary>Gets or sets the index of the subcategory of the task.</summary>
      <returns>The index of the subcategory of a task.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.Task.Text">
      <summary>Gets or sets the description of a task.</summary>
      <returns>The description of a task.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.ToolWindowOrientation">
      <summary>This enumeration provides a number of possible tool window orientations with respect to a docking window.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.ToolWindowOrientation.none">
      <summary>No tool window orientation indicated.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.ToolWindowOrientation.Top">
      <summary>Tool window initially oriented against the top of the docking window.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.ToolWindowOrientation.Left">
      <summary>Tool window initially oriented to the left of the docking window.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.ToolWindowOrientation.Right">
      <summary>Tool window initially oriented to the right of the docking window.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.ToolWindowOrientation.Bottom">
      <summary>Tool window initially oriented against the bottom of the docking window.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.ToolWindowPane">
      <summary>A default implementation for a tool window. It can be subclassed to implement a customized tool window.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ToolWindowPane.#ctor(System.IServiceProvider)">
      <summary>Initializes an instance of this class.</summary>
      <param name="provider">The single constructor argument is a service provider that the created window can use to obtain services.  This parameter must not be nullbecause the tool window cannot add itself to the shell.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ToolWindowPane.BitmapIndex">
      <summary>Gets or sets the index of the image in the bitmap strip to use for the window frame icon.</summary>
      <returns>The index of the image to use for the window frame icon.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ToolWindowPane.BitmapResourceID">
      <summary>Gets or sets the resource ID for the bitmap strip from which to take the window frame icon.</summary>
      <returns>The resource ID for the bitmap strip.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ToolWindowPane.Caption">
      <summary>Gets or sets the caption for the tool window.</summary>
      <returns>The caption of the tool window.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ToolWindowPane.Frame">
      <summary>Gets or sets the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame" /> that hosts the ToolWindowPane.</summary>
      <returns>
        <see cref=":Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame" />.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ToolWindowPane.GetIVsWindowPane">
      <summary>Gets the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsWindowPane" /> that is associated with the tool window.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsWindowPane" />.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ToolWindowPane.OnToolBarAdded">
      <summary>Called when a toolbar is added to the tool window.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ToolWindowPane.OnToolWindowCreated">
      <summary>This method can be overridden by the derived class to execute any code that must run after the creation of <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame" />.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ToolWindowPane.Package">
      <summary>Gets or sets the package that owns the tool window.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Shell.Package" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ToolWindowPane.ToolBar">
      <summary>Gets or sets the <see cref="T:System.ComponentModel.Design.CommandID" />.</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.CommandID" /> if the tool window has a toolbar; otherwise, null.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ToolWindowPane.ToolBarLocation">
      <summary>Gets or sets the location of the toolbar in the tool window.</summary>
      <returns>A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSTWT_LOCATION" /> enumeration.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ToolWindowPane.ToolClsid">
      <summary>Gets or sets the CLSID of a tool that should be used for this tool window.</summary>
      <returns>The CLSID of the tool.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.VSRegistry">
      <summary>Provides utility functions for discovering the registry hive under which Visual Studio is currently running.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.VSRegistry.RegistryRoot(Microsoft.VisualStudio.Shell.Interop.__VsLocalRegistryType)">
      <summary>Represents the root of the registry hive under which Visual Studio is currently running, in the specified part of the registry.</summary>
      <param name="registryType">A <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VsLocalRegistryType" /> enumeration specifying the part of the registry.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.VSRegistry.RegistryRoot(Microsoft.VisualStudio.Shell.Interop.__VsLocalRegistryType,System.Boolean)">
      <summary>Represents the root of the registry hive under which Visual Studio is currently running, in the specified part of the registry.</summary>
      <param name="registryType">A <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VsLocalRegistryType" /> enumeration specifying the part of the registry.</param>
      <param name="writable">Whether or not the root is writable</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.VSRegistry.RegistryRoot(System.IServiceProvider,Microsoft.VisualStudio.Shell.Interop.__VsLocalRegistryType,System.Boolean)">
      <summary>Represents the root of the registry hive under which Visual Studio is currently running, in the specified part of the registry.</summary>
      <param name="provider">The current <see cref="T:System.IServiceProvider" />.</param>
      <param name="registryType">A <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VsLocalRegistryType" /> enumeration specifying the part of the registry.</param>
      <param name="writable">Whether or not the root is writable.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.VsShellUtilities">
      <summary>Provides static helper methods to use with the Visual Studio shell.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.VsShellUtilities.EmptyTaskList(System.IServiceProvider)">
      <summary>Empties the task list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="serviceProvider">
        <see cref="T:System.IServiceProvider" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.VsShellUtilities.GetDebugMode(System.IServiceProvider)">
      <summary>Gets the current debug mode of the shell, for example, design mode, running mode, or break mode.</summary>
      <returns>One of the <see cref="T:Microsoft.VisualStudio.Shell.Interop.DBGMODE" /> values.</returns>
      <param name="serviceProvider">
        <see cref="T:System.IServiceProvider" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.VsShellUtilities.GetHierarchy(System.IServiceProvider,System.Guid)">
      <summary>Gets the hierarchy node that is specified by the project GUID.</summary>
      <returns>The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface of the project.</returns>
      <param name="site">
        <see cref="T:System.IServiceProvider" />.</param>
      <param name="projectGuid">The GUID of the project.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.VsShellUtilities.GetMiscellaneousProject(System.IServiceProvider)">
      <summary>Gets the miscellaneous project from the current solution.</summary>
      <returns>The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProject3" /> interface of the miscellaneous project.</returns>
      <param name="provider">
        <see cref="T:System.IServiceProvider" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.VsShellUtilities.GetMiscellaneousProject(System.IServiceProvider,System.Boolean)">
      <summary>Returns the miscellaneous project in a solution.</summary>
      <returns>The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProject3" /> interface of the miscellaneous project.</returns>
      <param name="provider">
        <see cref="T:System.IServiceProvider" /> object used to retrieve the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSolution" /> object.</param>
      <param name="create">true if the project should be created; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.VsShellUtilities.GetOutputWindowPane(System.IServiceProvider,System.Guid)">
      <summary>Gets the output window pane that is specified by the GUID.</summary>
      <returns>The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsOutputWindowPane" /> interface that is specified by the GUID.</returns>
      <param name="serviceProvider">
        <see cref="T:System.IServiceProvider" />.</param>
      <param name="guidPane">The GUID of the output window pane.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.VsShellUtilities.GetProject(System.IServiceProvider,System.String)">
      <summary>Returns a project for the specified document.</summary>
      <returns>The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface of the project that contains the document.</returns>
      <param name="site">The <see cref="T:System.IServiceProvider" /> object that is used to retrieve the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSolution" /> object.</param>
      <param name="moniker">The unique identifier of the document in the project system.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.VsShellUtilities.GetRDTDocumentInfo(System.IServiceProvider,System.String,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy@,System.UInt32@,Microsoft.VisualStudio.Shell.Interop.IVsPersistDocData@,System.UInt32@)">
      <summary>Gets an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsPersistDocData" /> interface and a document cookie from the running document table for the specified document.</summary>
      <param name="site">
        <see cref="T:System.IServiceProvider" />.</param>
      <param name="documentName">The moniker of the file.</param>
      <param name="hierarchy">[out] The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface of the project that containa the document.</param>
      <param name="itemid">[out] The item ID of the document.</param>
      <param name="persistDocData">[out] The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsPersistDocData" /> interface for the document.</param>
      <param name="docCookie">[out] The identifier of the document that is held by the running document table.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.VsShellUtilities.GetRunningDocumentContents(System.IServiceProvider,System.String)">
      <summary>Gets the text of the specified file, if it exists in the running document table.</summary>
      <returns>The text of the file.</returns>
      <param name="site">
        <see cref="T:System.IServiceProvider" />.</param>
      <param name="path">The absolute path of the file.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.VsShellUtilities.GetTaskItems(System.IServiceProvider)">
      <summary>Gets a list of tasks.</summary>
      <returns>An <see cref="T:System.Collections.IList" /> of type <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsTaskItem2" /> of the task items.</returns>
      <param name="serviceProvider">
        <see cref="T:System.IServiceProvider" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.VsShellUtilities.GetTextView(Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame)">
      <summary>Gets the text view in the specified window frame.</summary>
      <returns>The text view in an <see cref="T:Microsoft.VisualStudio.TextManager.Interop.IVsTextView" /> object, or null if the window frame is a code window that is not implemented as a text view.</returns>
      <param name="windowFrame">
        <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame" /> that contains the text view.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.VsShellUtilities.GetUIHierarchyWindow(System.IServiceProvider,System.Guid)">
      <summary>Gets a window for the given GUID.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchyWindow" />.</returns>
      <param name="serviceProvider">
        <see cref="T:System.IServiceProvider" />.</param>
      <param name="guidPersistenceSlot">The GUID of the hierarchy window.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.VsShellUtilities.GetWindowObject(Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame)">
      <summary>Gets the window that exists in the specified window frame.</summary>
      <returns>The <see cref="T:EnvDTE.Window" />, if there is an object of that type in the frame; otherwise, null.</returns>
      <param name="windowFrame">The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame" /> interface for the window frame.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.VsShellUtilities.IsDocumentOpen(System.IServiceProvider,System.String,System.Guid,Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchy@,System.UInt32@,Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame@)">
      <summary>Determines whether the specified document is open.</summary>
      <returns>true if the document is open in the given logical view. If <paramref name="logicalView" /> is Guid.Empty, then this method returns true if any view is open; otherwise, false.</returns>
      <param name="provider">
        <see cref="T:System.IServiceProvider" />.</param>
      <param name="fullPath">The full path to the document.</param>
      <param name="logicalView">The GUID of the logical view.</param>
      <param name="hierarchy">[out] Returns the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchy" /> interface of the project that contains the document.</param>
      <param name="itemID">[out] Returns the item ID of the document.</param>
      <param name="windowFrame">[out] Returns the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame" /> in which the document is open.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.VsShellUtilities.IsInAutomationFunction(System.IServiceProvider)">
      <summary>Determines whether the extensibility object is currently executing an automation operation.</summary>
      <returns>true if the extensibility object is executing an automation operation; otherwise, false.</returns>
      <param name="serviceProvider">
        <see cref="T:System.IServiceProvider" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.VsShellUtilities.IsSolutionBuilding(System.IServiceProvider)">
      <summary>Determines whether the build manager is busy.</summary>
      <returns>true if the build manager is building or deploying the built application; otherwise, false.</returns>
      <param name="serviceProvider">
        <see cref="T:System.IServiceProvider" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.VsShellUtilities.IsVisualStudioInDesignMode(System.IServiceProvider)">
      <summary>Determines whether Visual Studio is in design mode (as opposed to run mode or debug mode).</summary>
      <returns>true if Visual Studio is in design mode; otherwise, false.</returns>
      <param name="serviceProvider">
        <see cref="T:System.IServiceProvider" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.VsShellUtilities.LaunchDebugger(System.IServiceProvider,Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo)">
      <summary>Starts the debugger.</summary>
      <param name="serviceProvider">
        <see cref="T:System.IServiceProvider" />.</param>
      <param name="info">A <see cref="T:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo" /> structure.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.VsShellUtilities.OpenAsMiscellaneousFile(System.IServiceProvider,System.String,System.String,System.Guid,System.String,System.Guid)">
      <summary>Opens the specified miscellaneous file in the specified editor.</summary>
      <param name="provider">
        <see cref="T:System.IServiceProvider" />.</param>
      <param name="path">The path of the file.</param>
      <param name="caption">The name of the file.</param>
      <param name="editor">The GUID of the editor in which to open the file.</param>
      <param name="physicalView">The name of the kind of window in which to open the editor.</param>
      <param name="logicalView">The logical view of the editor, for example <see cref="F:Microsoft.VisualStudio.VSConstants.LOGVIEWID_TextView" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.VsShellUtilities.OpenDocument(System.IServiceProvider,System.String)">
      <summary>Opens the specified document.</summary>
      <param name="provider">
        <see cref="T:System.IServiceProvider" />.</param>
      <param name="path">The path of the document.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.VsShellUtilities.OpenDocument(System.IServiceProvider,System.String,System.Guid,Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchy@,System.UInt32@,Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame@)">
      <summary>Opens the specified document in the specified view.</summary>
      <param name="provider">
        <see cref="T:System.IServiceProvider" />.</param>
      <param name="fullPath">The absolute path of the document.</param>
      <param name="logicalView">The GUID of the logical view in which to open the document.</param>
      <param name="hierarchy">[out] Returns the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchy" /> interface of the project that contains the document.</param>
      <param name="itemID">[out] The item ID of the document.</param>
      <param name="windowFrame">[out] Returns the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame" /> interface of the window in which the document is open.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.VsShellUtilities.OpenDocument(System.IServiceProvider,System.String,System.Guid,Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchy@,System.UInt32@,Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame@,Microsoft.VisualStudio.TextManager.Interop.IVsTextView@)">
      <summary>Opens the specified document in the specified logical view.</summary>
      <param name="provider">
        <see cref="T:System.IServiceProvider" />.</param>
      <param name="fullPath">The absolute path of the document.</param>
      <param name="logicalView">The GUID of the logical view in which to open the document.</param>
      <param name="hierarchy">[out] Returns the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchy" /> interface of the project that contains the document.</param>
      <param name="itemID">[out] The item ID of the document.</param>
      <param name="windowFrame">[out] Returns the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame" /> interface of the window in which the document is open.</param>
      <param name="view">[out] Returns the <see cref="T:Microsoft.VisualStudio.TextManager.Interop.IVsTextView" />  interface of the primary view of the window.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.VsShellUtilities.OpenDocumentWithSpecificEditor(System.IServiceProvider,System.String,System.Guid,System.Guid)">
      <summary>Opens the specified document by using the specified editor.</summary>
      <returns>The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame" /> interface of the window in which the document is opened.</returns>
      <param name="provider">
        <see cref="T:System.IServiceProvider" />.</param>
      <param name="fullPath">The absolute path of the document.</param>
      <param name="editorType">The GUID of the type of editor to use.</param>
      <param name="logicalView">The GUID of the logical view in which to open the document.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.VsShellUtilities.OpenDocumentWithSpecificEditor(System.IServiceProvider,System.String,System.Guid,System.Guid,Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchy@,System.UInt32@,Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame@)">
      <summary>Opens the specified document by using the specified editor.</summary>
      <param name="provider">
        <see cref="T:System.IServiceProvider" />.</param>
      <param name="fullPath">The absolute path of the document.</param>
      <param name="editorType">The GUID of the type of editor to use.</param>
      <param name="logicalView">The GUID of the logical view in which to open the document.</param>
      <param name="hierarchy">[out] The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchy" /> interface of the project that contains the document.</param>
      <param name="itemID">[out] The item ID of the document.</param>
      <param name="windowFrame">[out] The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame" /> interface of the window in which the document is opened.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.VsShellUtilities.PromptYesNo(System.String,System.String,Microsoft.VisualStudio.Shell.Interop.OLEMSGICON,Microsoft.VisualStudio.Shell.Interop.IVsUIShell)">
      <summary>Displays a message box that contains the specified title and prompts the user to respond (yes or no) to the specified message.</summary>
      <returns>true if the operation succeeded; otherwise, false.</returns>
      <param name="message">The message to which the user must respond.</param>
      <param name="title">The title of the message box.</param>
      <param name="icon">The <see cref="T:Microsoft.VisualStudio.Shell.Interop.OLEMSGICON" /> that defines the kind of message.</param>
      <param name="uiShell">The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsUIShell" /> interface of the shell in which to display the message box. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.VsShellUtilities.RenameDocument(System.IServiceProvider,System.String,System.String)">
      <summary>Renames the specified document.</summary>
      <param name="site">
        <see cref="T:System.IServiceProvider" />.</param>
      <param name="oldName">The current absolute path of the document.</param>
      <param name="newName">The new absolute path of the document.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.VsShellUtilities.SaveFileIfDirty(Microsoft.VisualStudio.TextManager.Interop.IVsTextView)">
      <summary>If the file is dirty, saves it in the specified text view.</summary>
      <param name="view">The <see cref="T:Microsoft.VisualStudio.TextManager.Interop.IVsTextView" /> interface of the file to be saved.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.VsShellUtilities.SaveFileIfDirty(System.IServiceProvider,System.String)">
      <summary>Saves the specified file if it is dirty.</summary>
      <param name="site">
        <see cref="T:System.IServiceProvider" />.</param>
      <param name="fullPath">The absolute path of the file.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.VsShellUtilities.ShowMessageBox(System.IServiceProvider,System.String,System.String,Microsoft.VisualStudio.Shell.Interop.OLEMSGICON,Microsoft.VisualStudio.Shell.Interop.OLEMSGBUTTON,Microsoft.VisualStudio.Shell.Interop.OLEMSGDEFBUTTON)">
      <summary>Displays a message box with the specified message.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code. </returns>
      <param name="serviceProvider">
        <see cref="T:System.IServiceProvider" />.</param>
      <param name="message">The message to display.</param>
      <param name="title">The title of the message box.</param>
      <param name="icon">The <see cref="T:Microsoft.VisualStudio.Shell.Interop.OLEMSGICON" /> value that specifies the type of message.</param>
      <param name="msgButton">The <see cref="T:Microsoft.VisualStudio.Shell.Interop.OLEMSGBUTTON" /> value that specifies the set of buttons to display.</param>
      <param name="defaultButton">The <see cref="T:Microsoft.VisualStudio.Shell.Interop.OLEMSGDEFBUTTON" /> value that specifies which button is to be the default button.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.WindowPane">
      <summary>A default implementation of a tool window pane. This class implements <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsWindowPane" />, but the implementer must provide an implementation of an object that returns an <see cref="T:System.Windows.Interop.IWin32Window" />. This class also implements <see cref="T:Microsoft.VisualStudio.OLE.Interop.IOleCommandTarget" />, maps it to <see cref="T:System.ComponentModel.Design.IMenuCommandService" /> and <see cref="T:Microsoft.VisualStudio.OLE.Interop.IObjectWithSite" />, and maps the site to services that can be queried through its protected <see cref="M:Microsoft.VisualStudio.Shell.WindowPane.GetService(System.Type)" /> method.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.WindowPane.#ctor(System.IServiceProvider)">
      <summary>Initializes a new instance of <see cref="T:Microsoft.VisualStudio.Shell.WindowPane" /> with the specified service provider.</summary>
      <param name="provider">
        <see cref="T:System.IServiceProvider" />. Should be null.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.WindowPane.Dispose">
      <summary>Disposes the window pane and its resources.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.WindowPane.Dispose(System.Boolean)">
      <summary>Disposes the resources of the window pane.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.WindowPane.GetService(System.Type)">
      <summary>Gets the service of the specified type.</summary>
      <returns>The service.</returns>
      <param name="serviceType"> The type of the service to get.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.WindowPane.Initialize">
      <summary>Initializes services after the window pane has been sited.  </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.WindowPane.Microsoft#VisualStudio#OLE#Interop#IOleCommandTarget#Exec(System.Guid@,System.UInt32,System.UInt32,System.IntPtr,System.IntPtr)">
      <summary>Executes the specified command.</summary>
      <returns>Returns <see cref="F:Microsoft.VisualStudio.OLE.Interop.OleConstants.OLECMDERR_E_NOTSUPPORTED" /> if the project manager is closed or the command is not supported. Otherwise, returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" /> or an error code if one of the executed commands returned an error code.</returns>
      <param name="guidGroup">The GUID of the command group to which the command belongs.</param>
      <param name="nCmdId">The ID of the command.</param>
      <param name="nCmdExcept">Values taken from the <see cref="T:Microsoft.VisualStudio.OLE.Interop.OLECMDEXECOPT" /> enumeration, which describe how the object should execute the command.</param>
      <param name="pIn">Pointer to a VARIANTARG structure that contains input arguments. Can be null.</param>
      <param name="vOut">Pointer to a VARIANTARG structure that contains command output. Can be null.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.WindowPane.Microsoft#VisualStudio#OLE#Interop#IOleCommandTarget#QueryStatus(System.Guid@,System.UInt32,Microsoft.VisualStudio.OLE.Interop.OLECMD[],System.IntPtr)">
      <summary>Queries the object for the status of one or more commands that are generated by user interface events.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="guidGroup">Unique identifier of the command group. All the commands that are passed in the <paramref name="prgCmds" /> array must belong to the group that is specified by <paramref name="guidCmdGroup" />.</param>
      <param name="nCmdId">The number of commands in the <paramref name="prgCmds" /> array.</param>
      <param name="oleCmd">A caller-allocated array of <see cref="T:Microsoft.VisualStudio.OLE.Interop.OLECMD" /> structures that indicate the commands for which the caller requires status information. This method fills the <paramref name="cmdf " />member of each structure with values taken from the <see cref="T:Microsoft.VisualStudio.OLE.Interop.OLECMDF" /> enumeration.</param>
      <param name="oleText">Pointer to an <see cref="T:Microsoft.VisualStudio.OLE.Interop.OLECMDTEXTF" /> structure to return a name and/or status information of a single command. Can be null to indicate that the caller does not require this information.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.WindowPane.Microsoft#VisualStudio#Shell#Interop#IVsBroadcastMessageEvents#OnBroadcastMessage(System.UInt32,System.IntPtr,System.IntPtr)">
      <summary>Raised when a message is broadcast to the window. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="msg">The broadcast message.</param>
      <param name="wParam">A word-value parameter for the message.</param>
      <param name="lParam">A long-integer parameter for the message.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.WindowPane.Microsoft#VisualStudio#Shell#Interop#IVsWindowPane#ClosePane">
      <summary>Closes the window pane.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.WindowPane.Microsoft#VisualStudio#Shell#Interop#IVsWindowPane#CreatePaneWindow(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr@)">
      <summary>Creates a window pane.</summary>
      <returns>
        <see cref="F:Microsoft.VisualStudio.NativeMethods.S_OK" />. </returns>
      <param name="hwndParent">A pointer to the parent window.</param>
      <param name="x">The absolute x ordinate.</param>
      <param name="y">The absolute y ordinate.</param>
      <param name="cx">The width of the window.</param>
      <param name="cy">The height of the window.</param>
      <param name="pane"> [out] A pointer to the new window pane.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.WindowPane.Microsoft#VisualStudio#Shell#Interop#IVsWindowPane#GetDefaultSize(Microsoft.VisualStudio.OLE.Interop.SIZE[])">
      <summary>Gets the default size of the window pane.</summary>
      <returns>When implemented by derived classes, if the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="size">An array of <see cref="T:Microsoft.VisualStudio.OLE.Interop.SIZE" /> structures.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.WindowPane.Microsoft#VisualStudio#Shell#Interop#IVsWindowPane#LoadViewState(Microsoft.VisualStudio.OLE.Interop.IStream)">
      <summary>Loads the saved view state.</summary>
      <returns>When implemented by derived classes, if the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pstream">The <see cref="T:Microsoft.VisualStudio.OLE.Interop.IStream" /> from which to load the view state.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.WindowPane.Microsoft#VisualStudio#Shell#Interop#IVsWindowPane#SaveViewState(Microsoft.VisualStudio.OLE.Interop.IStream)">
      <summary>Saves the loaded view state.</summary>
      <returns>When implemented by derived classes, if the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pstream">The <see cref="T:Microsoft.VisualStudio.OLE.Interop.IStream" /> to which to save the view state.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.WindowPane.Microsoft#VisualStudio#Shell#Interop#IVsWindowPane#SetSite(Microsoft.VisualStudio.OLE.Interop.IServiceProvider)">
      <summary>Initializes this window pane with the specified service provider.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.NativeMethods.S_OK" />.</returns>
      <param name="p">
        <see cref="T:System.IServiceProvider" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.WindowPane.Microsoft#VisualStudio#Shell#Interop#IVsWindowPane#TranslateAccelerator(Microsoft.VisualStudio.OLE.Interop.MSG[])">
      <summary>Handles the translation of navigation keys.</summary>
      <returns>If this method succeeds, it returns <see cref="F:Microsoft.VisualStudio.NativeMethods.S_OK" />; if it fails, it returns <see cref="F:Microsoft.VisualStudio.NativeMethods.E_FAIL" />.</returns>
      <param name="msg">An array of <see cref="T:Microsoft.VisualStudio.OLE.Interop.MSG" /> structures that contain the character or character combination to be translated.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.WindowPane.OnClose">
      <summary>Raised when the window is closed.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.WindowPane.OnCreate">
      <summary>Raised when the window pane is created.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.WindowPane.PreProcessMessage(System.Windows.Forms.Message@)">
      <summary>Preprocesses the messages from navigation keys.</summary>
      <returns>true if it was possible to get a control from the message's handle; otherwise, false.</returns>
      <param name="m">The <see cref="T:System.Windows.Forms.Message" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.WindowPane.System#IServiceProvider#GetService(System.Type)">
      <summary>Gets the service of the specified type.</summary>
      <returns>An object that represents the service.</returns>
      <param name="serviceType">The type of the service to get.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.WindowPane.Window">
      <summary>Gets the window that is associated with this window pane.</summary>
      <returns>
        <see cref="T:System.Windows.Forms.IWin32Window" />.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject">
      <summary>A project that is a subtype or flavor of an inner project. All methods by default delegate to the inner project. Non-default behaviors should be handled by the flavored project.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.#ctor">
      <summary>When overridden in a derived class, initializes an instance of the <see cref="T:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.AdviseHierarchyEvents(Microsoft.VisualStudio.Shell.Interop.IVsHierarchyEvents)">
      <summary>Subscribes to hierarchy events.</summary>
      <returns>A unique value, or cookie, that is needed to disable notification of hierarchy events.</returns>
      <param name="eventSink">
        <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchyEvents" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Close">
      <summary>Closes and cleans up a hierarchy once the environment determines that it is no longer used. </summary>
    </member>
    <member name="E:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.DirectoryAdded">
      <summary>Raised after a directory has been added to the project.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.DirectoryRemoved">
      <summary>Raised after a directory has been removed from the project.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.DirectoryRenamed">
      <summary>Raised after a directory in the project has been renamed.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.ExecCommand(System.UInt32,System.Guid@,System.UInt32,System.UInt32,System.IntPtr,System.IntPtr)">
      <summary>Executes a command on a specific item within a UI hierarchy window, or on the hierarchy itself. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants." /><see cref="S_OK" />. If it fails, it returns an error code.</returns>
      <param name="itemid">The identifier of the item affected by the command. For single selection, this value is the actual item ID. For multiple selections, set <paramref name="itemid" /> equal to <see cref="F:Microsoft.VisualStudio.VSConstants." /><see cref="VSITEMID_SELECTION" />.</param>
      <param name="pguidCmdGroup">Unique identifier of the command group. All the commands in <paramref name="nCmdID " />must belong to the group specified by <paramref name="pguidCmdGroup" />.</param>
      <param name="nCmdID">The command to be executed. This command must belong to the group specified with <paramref name="pguidCmdGroup" />.</param>
      <param name="nCmdexecopt">A member of the <see cref="T:Microsoft.VisualStudio.OLE.Interop.OLECMDEXECOPT" /> enumeration, describing the type of action to perform.</param>
      <param name="pvaIn">A pointer to a VARIANTARG structure containing input arguments. Can be null.</param>
      <param name="pvaOut">A pointer to a VARIANTARG structure to receive command output. Can be null.</param>
    </member>
    <member name="E:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.FileAdded">
      <summary>Raised after a file has been added to the project.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.FileRemoved">
      <summary>Raised after a file has been removed from the project.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.FileRenamed">
      <summary>Raised after a file in the project has been renamed.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.GetCanonicalName(System.UInt32,System.String@)">
      <summary>Gets the unique name associated with an item in the hierarchy. Used for workspace persistence, such as remembering window positions.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants." /><see cref="S_OK" />. If it fails, it returns an error code.</returns>
      <param name="itemId">The ID of the hierarchy item. </param>
      <param name="name">[out] The canonical name of the hierarchy item.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.GetGuidProperty(System.UInt32,System.Int32)">
      <summary>Gets properties whose values are GUIDs.</summary>
      <returns>The GUID value of the property.</returns>
      <param name="itemId">The item ID of the hierarchy node for which to get the property.</param>
      <param name="propId">The ID of the property.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.GetNestedHierarchy(System.UInt32,System.Guid@,System.IntPtr@,System.UInt32@)">
      <summary>Determines whether or not a node is a nested hierarchy.</summary>
      <returns>If <paramref name="itemid" /> is not a nested hierarchy node, this method returns <see cref="F:Microsoft.VisualStudio.VSConstants." /><see cref="E_FAIL" />. If the requested interface is not supported on the hierarchy object, <see cref="F:Microsoft.VisualStudio.VSConstants." /><see cref="E_NOINTERFACE" /> is returned. The caller would then treat this node as if it had no children. </returns>
      <param name="itemId">The item ID of the node.</param>
      <param name="guidHierarchyNested">The interface ID of the node.</param>
      <param name="hierarchyNested">[out] Returns a pointer to the node, if it is a nested hierarchy node. </param>
      <param name="itemIdNested">[out] Returns the item ID of the nested hierarchy node; this will always be <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_ROOT" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.GetProperty(System.UInt32,System.Int32,System.Object@)">
      <summary>Gets the value of a property for a given node.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="itemId">The item ID of the node.</param>
      <param name="propId">The ID of the requested property.</param>
      <param name="property">[out] The value of the property.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.GetSite">
      <summary>Gets the service provider from which to access the services.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.OLE.Interop.IServiceProvider" />.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.InitializeForOuter(System.String,System.String,System.String,System.UInt32,System.Guid@,System.Boolean@)">
      <summary>Called by the outer project subtype to have the owned inner project subtype do its initialization work. </summary>
      <param name="fileName">The name of the project file.</param>
      <param name="location">The path of the project file.</param>
      <param name="name">The name of the project.</param>
      <param name="flags">Flags from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSCREATEPROJECTFLAGS" /> enumeration.</param>
      <param name="guidProject">[ref] The interface ID of the project.</param>
      <param name="cancel">[out] Returns true if project creation was canceled.</param>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.innerOleCommandTarget">
      <summary>The <see cref="T:Microsoft.VisualStudio.OLE.Interop.IOleCommandTarget" /> interface of the inner project.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.innerVsAggregatableProject">
      <summary>The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsAggregatableProject" /> of the inner project.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.innerVsHierarchy">
      <summary>The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface of the inner project.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.innerVsUIHierarchy">
      <summary>The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchy" /> interface of the inner project.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#OLE#Interop#IOleCommandTarget#Exec(System.Guid@,System.UInt32,System.UInt32,System.IntPtr,System.IntPtr)">
      <summary>Executes a specified command or displays help for a command.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pguidCmdGroup">The ID of the command group to which the command belongs.</param>
      <param name="nCmdID">The ID of the command.</param>
      <param name="nCmdexecopt">A member of the <see cref="T:Microsoft.VisualStudio.OLE.Interop.OLECMDEXECOPT" /> enumeration, describing the type of action to take.</param>
      <param name="pvaIn">A pointer to a VARIANTARG structure containing input arguments. May be null.</param>
      <param name="pvaOut">A pointer to a VARIANTARG structure containing command output. May be null.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#OLE#Interop#IOleCommandTarget#QueryStatus(System.Guid@,System.UInt32,Microsoft.VisualStudio.OLE.Interop.OLECMD[],System.IntPtr)">
      <summary>Queries the object for the status of one or more commands.</summary>
      <returns>If the method succeeded, <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />, otherwise an error code.</returns>
      <param name="pguidCmdGroup">The GUID of the command group to which the commands belong.</param>
      <param name="cCmds">The number of commands in the command array.</param>
      <param name="prgCmds">An array of <see cref="T:Microsoft.VisualStudio.OLE.Interop.OLECMD" /> structures that contain information about the commands.</param>
      <param name="pCmdText">Pointer to an <see cref="T:Microsoft.VisualStudio.OLE.Interop.OLECMDTEXT" /> structure in which to return name and/or status information of a single command. Can be null.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsAggregatableProject#GetAggregateProjectTypeGuids(System.String@)">
      <summary>Gets the list of project type GUIDs that make up the aggregate project. This method should be delegated to the innermost project within the system of aggregated project subtypes.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="projectTypeGuids">[out] A semicolon-delimited set of project type GUIDs.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsAggregatableProject#InitializeForOuter(System.String,System.String,System.String,System.UInt32,System.Guid@,System.IntPtr@,System.Int32@)">
      <summary>Called by the outer project subtype to have the inner project subtype do its initialization work. </summary>
      <returns>If the method succeeds, <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />, otherwise an error code.</returns>
      <param name="fileName">The project file name of the project to be initialized.</param>
      <param name="location">The path of the project file. </param>
      <param name="name">The name of the project.</param>
      <param name="flags">Flags that describe how a project is to be created or opened. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSCREATEPROJFLAGS" /> enumeration.</param>
      <param name="guidProject">[ref] The interface ID of the project. It should be <see cref="F:Microsoft.VisualStudio.NativeMethods.IID_IUnknown" />.</param>
      <param name="project">[out] A pointer to the project. </param>
      <param name="canceled">[out] true if the project was canceled. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsAggregatableProject#OnAggregationComplete">
      <summary>Called to continue initialization after aggregation is complete.</summary>
      <returns>If the method succeeded, <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />, otherwise an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsAggregatableProject#SetAggregateProjectTypeGuids(System.String)">
      <summary>Updates the list of GUIDs that are persisted in the project file of the base project. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />\. If it fails, it returns an error code.</returns>
      <param name="projectTypeGuids">The GUIDs to set.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsAggregatableProject#SetInnerProject(System.Object)">
      <summary>Sets up the inner project as well as the necessary interface pointers.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="inner">The IUnknown of the inner project subtype.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsHierarchy#AdviseHierarchyEvents(Microsoft.VisualStudio.Shell.Interop.IVsHierarchyEvents,System.UInt32@)">
      <summary>Subscribes to hierarchy events.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="eventSink">The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchyEvents" /> to which to register.</param>
      <param name="cookie">[out] Returns the unique identifier used to unsubscribe for these events.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsHierarchy#Close">
      <summary>Closes and cleans up a hierarchy once the environment determines that it is no longer used. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsHierarchy#GetCanonicalName(System.UInt32,System.String@)">
      <summary>Gets a unique name for an item in the hierarchy. Used for workspace persistence, such as remembering window positions. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="itemId">The ID of the hierarchy item.</param>
      <param name="name">[out] The canonical name of the item.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsHierarchy#GetGuidProperty(System.UInt32,System.Int32,System.Guid@)">
      <summary>Gets properties whose values are GUIDs. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="itemId">The ID of the hierarchy item.</param>
      <param name="propId">The ID of the property.</param>
      <param name="guid">[out] Returns the GUID value of the property.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsHierarchy#GetNestedHierarchy(System.UInt32,System.Guid@,System.IntPtr@,System.UInt32@)">
      <summary>Determines whether or not a node is a nested hierarchy.</summary>
      <returns>If <paramref name="itemid" /> is not a nested hierarchy node, this method returns <see cref="F:Microsoft.VisualStudio.VSConstants." /><see cref="E_FAIL" />. If the requested interface is not supported on the hierarchy object, <see cref="F:Microsoft.VisualStudio.VSConstants." /><see cref="E_NOINTERFACE" /> is returned. The caller would then treat this node as if it had no children. </returns>
      <param name="itemId">The item ID of the node.</param>
      <param name="guidHierarchyNested">The interface ID of the node.</param>
      <param name="hierarchyNested">[out] Returns a pointer to the node, if it is a nested hierarchy node. </param>
      <param name="itemIdNested">[out] Returns the item ID of the nested hierarchy node; this will always be <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_ROOT" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsHierarchy#GetProperty(System.UInt32,System.Int32,System.Object@)">
      <summary>Gets properties of a given node or of the hierarchy. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="itemId">The ID of the item.</param>
      <param name="propId">The ID of the property.</param>
      <param name="property">[out] The value of the property. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsHierarchy#GetSite(Microsoft.VisualStudio.OLE.Interop.IServiceProvider@)">
      <summary>Gets the service provider from which to access the services. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="serviceProvider"> <see cref="T:Microsoft.VisualStudio.OLE.Interop.IServiceProvider" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsHierarchy#ParseCanonicalName(System.String,System.UInt32@)">
      <summary>Returns the identifier of the hierarchy item, given its canonical name. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="name">The canonical name of the item.</param>
      <param name="itemId">[out] The ID of the item.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsHierarchy#QueryClose(System.Int32@)">
      <summary>Determines whether the hierarchy can be closed. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="canClose">[out] Returns true if the hierarchy can be closed, otherwise false. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsHierarchy#SetGuidProperty(System.UInt32,System.Int32,System.Guid@)">
      <summary>Sets properties whose values are GUIDs. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="itemId">The ID of the item.</param>
      <param name="propId">The ID of the property to set.</param>
      <param name="guid">The GUID value of the property.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsHierarchy#SetProperty(System.UInt32,System.Int32,System.Object)">
      <summary>Sets properties of a specific node or of the hierarchy. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="itemId">The ID of the item.</param>
      <param name="propId">The ID of the property to set.</param>
      <param name="property">The value of the property.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsHierarchy#SetSite(Microsoft.VisualStudio.OLE.Interop.IServiceProvider)">
      <summary>Sets the service provider from which to access the services. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="serviceProvider">
        <see cref="T:Microsoft.VisualStudio.OLE.Interop.IServiceProvider" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsHierarchy#UnadviseHierarchyEvents(System.UInt32)">
      <summary>Disables client notification of hierarchy events.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="cookie">The unique identifier that was handed back with <see cref="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.AdviseHierarchyEvents(Microsoft.VisualStudio.Shell.Interop.IVsHierarchyEvents)" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsHierarchy#Unused0">
      <summary>A placeholder for a future method.</summary>
      <returns>Implementers should return <see cref="F:Microsoft.VisualStudio.VSConstants.E_NOTIMPL" />.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsHierarchy#Unused1">
      <summary>A placeholder for a future method.</summary>
      <returns>Implementers should return <see cref="F:Microsoft.VisualStudio.VSConstants.E_NOTIMPL" />.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsHierarchy#Unused2">
      <summary>A placeholder for a future method.</summary>
      <returns>Implementers should return <see cref="F:Microsoft.VisualStudio.VSConstants.E_NOTIMPL" />.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsHierarchy#Unused3">
      <summary>A placeholder for a future method.</summary>
      <returns>Implementers should return <see cref="F:Microsoft.VisualStudio.VSConstants.E_NOTIMPL" />.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsHierarchy#Unused4">
      <summary>A placeholder for a future method.</summary>
      <returns>Implementers should return <see cref="F:Microsoft.VisualStudio.VSConstants.E_NOTIMPL" />.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsTrackProjectDocumentsEvents2#OnAfterAddDirectoriesEx(System.Int32,System.Int32,Microsoft.VisualStudio.Shell.Interop.IVsProject[],System.Int32[],System.String[],Microsoft.VisualStudio.Shell.Interop.VSADDDIRECTORYFLAGS[])">
      <summary>Raised after directories have been added to a project.</summary>
      <returns>
        <see cref="F:Microsoft.VisualStudio.NativeMethods.S_OK" />.</returns>
      <param name="cProjects">The number of projects in the <paramref name="rgpProjects" /> array.</param>
      <param name="cDirectories">The number of directories to be added.</param>
      <param name="rgpProjects">An array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProject" /> objects, corresponding to the projects in the solution.</param>
      <param name="rgFirstIndices">An array of indices of the directories that were affected.</param>
      <param name="rgpszMkDocuments">An array of paths of the directories that were added.</param>
      <param name="rgFlags">An array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSADDDIRECTORYFLAGS" />. May be null.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsTrackProjectDocumentsEvents2#OnAfterAddFilesEx(System.Int32,System.Int32,Microsoft.VisualStudio.Shell.Interop.IVsProject[],System.Int32[],System.String[],Microsoft.VisualStudio.Shell.Interop.VSADDFILEFLAGS[])">
      <summary>Raised after files have been added to a project.</summary>
      <returns>
        <see cref="F:Microsoft.VisualStudio.NativeMethods.S_OK" />.</returns>
      <param name="cProjects">The number of projects in the <paramref name="rgpProjects" /> array.</param>
      <param name="cFiles">The number of files to be added.</param>
      <param name="rgpProjects">An array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProject" /> objects.</param>
      <param name="rgFirstIndices">An array of indices of the files that were affected.</param>
      <param name="rgpszMkDocuments">An array of paths of the files that were affected.</param>
      <param name="rgFlags">An array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSADDFILEFLAGS" />. May be null.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsTrackProjectDocumentsEvents2#OnAfterRemoveDirectories(System.Int32,System.Int32,Microsoft.VisualStudio.Shell.Interop.IVsProject[],System.Int32[],System.String[],Microsoft.VisualStudio.Shell.Interop.VSREMOVEDIRECTORYFLAGS[])">
      <summary>Raised after a directory was removed from the project.</summary>
      <returns>
        <see cref="F:Microsoft.VisualStudio.NativeMethods.S_OK" />.</returns>
      <param name="cProjects">The number of projects in the <paramref name="rgpProjects" /> array.</param>
      <param name="cDirectories">The number of directories affected.</param>
      <param name="rgpProjects">An array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProject" /> objects, corresponding to the projects in the solution.</param>
      <param name="rgFirstIndices">An array of indices of the directories that were affected.</param>
      <param name="rgpszMkDocuments">An array of paths of the directories that were affected. </param>
      <param name="rgFlags">An array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSREMOVEDIRECTORYFLAGS" />. May be null.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsTrackProjectDocumentsEvents2#OnAfterRemoveFiles(System.Int32,System.Int32,Microsoft.VisualStudio.Shell.Interop.IVsProject[],System.Int32[],System.String[],Microsoft.VisualStudio.Shell.Interop.VSREMOVEFILEFLAGS[])">
      <summary>Raised after files have been removed from the project.</summary>
      <returns>
        <see cref="F:Microsoft.VisualStudio.NativeMethods.S_OK" />.</returns>
      <param name="cProjects">The number of projects in the <paramref name="rgpProjects" /> array.</param>
      <param name="cFiles">The number of files that were affected.</param>
      <param name="rgpProjects">An array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProject" /> objects, corresponding to the projects in the solution.</param>
      <param name="rgFirstIndices">An array of indices of the files that were affected.</param>
      <param name="rgpszMkDocuments">An array of paths of the files that were affected.</param>
      <param name="rgFlags">An array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSREMOVEFILEFLAGS" />. May be null.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsTrackProjectDocumentsEvents2#OnAfterRenameDirectories(System.Int32,System.Int32,Microsoft.VisualStudio.Shell.Interop.IVsProject[],System.Int32[],System.String[],System.String[],Microsoft.VisualStudio.Shell.Interop.VSRENAMEDIRECTORYFLAGS[])">
      <summary>Raised after a directory has been moved or renamed.</summary>
      <returns>
        <see cref="F:Microsoft.VisualStudio.NativeMethods.S_OK" />.</returns>
      <param name="cProjects">The number of projects in the <paramref name="rgpProjects" /> array. </param>
      <param name="cDirs">The number of directories affected.</param>
      <param name="rgpProjects">An array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProject" /> objects, corresponding to the projects in the solution.</param>
      <param name="rgFirstIndices">An array of indices of the directories affected.</param>
      <param name="rgszMkOldNames">An array of the old paths of the directories.</param>
      <param name="rgszMkNewNames">An array of the new paths of the directories.</param>
      <param name="rgFlags">An array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSRENAMEDIRECTORYFLAGS" />. May be null.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsTrackProjectDocumentsEvents2#OnAfterRenameFiles(System.Int32,System.Int32,Microsoft.VisualStudio.Shell.Interop.IVsProject[],System.Int32[],System.String[],System.String[],Microsoft.VisualStudio.Shell.Interop.VSRENAMEFILEFLAGS[])">
      <summary>Raised after files have been moved or renamed.</summary>
      <returns>
        <see cref="F:Microsoft.VisualStudio.NativeMethods.S_OK" />.</returns>
      <param name="cProjects">The number of projects in the <paramref name="rgpProjects" /> array. </param>
      <param name="cFiles">The number of files affected.</param>
      <param name="rgpProjects">An array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProject" /> objects, corresponding to the projects in the solution.</param>
      <param name="rgFirstIndices">An array of the indices of the files.</param>
      <param name="rgszMkOldNames">An array of the old paths of the files.</param>
      <param name="rgszMkNewNames">An array of the new paths of the files.</param>
      <param name="rgFlags">An array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSRENAMEFILEFLAGS" />. May be null.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsTrackProjectDocumentsEvents2#OnAfterSccStatusChanged(System.Int32,System.Int32,Microsoft.VisualStudio.Shell.Interop.IVsProject[],System.Int32[],System.String[],System.UInt32[])">
      <summary>This method is called by the source code control component to inform listeners that source control status has changed. Do not call this method. </summary>
      <returns>
        <see cref="F:Microsoft.VisualStudio.NativeMethods.S_OK" />.</returns>
      <param name="cProjects">The number of projects in the <paramref name="rgpProjects" /> array.</param>
      <param name="cFiles">The number of files affected.</param>
      <param name="rgpProjects">An array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProject" /> objects, corresponding to the projects in the solution.</param>
      <param name="rgFirstIndices">An array of the indices of the files.</param>
      <param name="rgpszMkDocuments">An array of paths of the files. </param>
      <param name="rgdwSccStatus">An array of SccStatus flags. May be null.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsTrackProjectDocumentsEvents2#OnQueryAddDirectories(Microsoft.VisualStudio.Shell.Interop.IVsProject,System.Int32,System.String[],Microsoft.VisualStudio.Shell.Interop.VSQUERYADDDIRECTORYFLAGS[],Microsoft.VisualStudio.Shell.Interop.VSQUERYADDDIRECTORYRESULTS[],Microsoft.VisualStudio.Shell.Interop.VSQUERYADDDIRECTORYRESULTS[])">
      <summary>Raised by a project to determine whether directories can be added to the project. Not used.</summary>
      <returns>
        <see cref="F:Microsoft.VisualStudio.NativeMethods.S_OK" />.</returns>
      <param name="pProject">The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProject" /> affected.</param>
      <param name="cDirectories">The number of directories affected.</param>
      <param name="rgpszMkDocuments">An array of paths to the directories. </param>
      <param name="rgFlags">An array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSQUERYADDDIRECTORYFLAGS" />.</param>
      <param name="pSummaryResult">An array of summary <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSQUERYADDDIRECTORYRESULTS" /> objects, which represent a summary of the yes/no values returned.</param>
      <param name="rgResults">An array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSQUERYADDDIRECTORYRESULTS" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsTrackProjectDocumentsEvents2#OnQueryAddFiles(Microsoft.VisualStudio.Shell.Interop.IVsProject,System.Int32,System.String[],Microsoft.VisualStudio.Shell.Interop.VSQUERYADDFILEFLAGS[],Microsoft.VisualStudio.Shell.Interop.VSQUERYADDFILERESULTS[],Microsoft.VisualStudio.Shell.Interop.VSQUERYADDFILERESULTS[])">
      <summary>Raised to determine whether files can be added to the project. Not used.</summary>
      <returns>
        <see cref="F:Microsoft.VisualStudio.NativeMethods.S_OK" />.</returns>
      <param name="pProject">The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProject" /> affected.</param>
      <param name="cFiles">The number of files affected. </param>
      <param name="rgpszMkDocuments">An array of paths of the files.</param>
      <param name="rgFlags">An array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSQUERYADDFILEFLAGS" />.</param>
      <param name="pSummaryResult">An array of summary <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSQUERYADDFILERESULTS" /> objects, which represent a summary of the yes/no values returned.</param>
      <param name="rgResults">An array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSQUERYADDFILERESULTS" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsTrackProjectDocumentsEvents2#OnQueryRemoveDirectories(Microsoft.VisualStudio.Shell.Interop.IVsProject,System.Int32,System.String[],Microsoft.VisualStudio.Shell.Interop.VSQUERYREMOVEDIRECTORYFLAGS[],Microsoft.VisualStudio.Shell.Interop.VSQUERYREMOVEDIRECTORYRESULTS[],Microsoft.VisualStudio.Shell.Interop.VSQUERYREMOVEDIRECTORYRESULTS[])">
      <summary>Raised to determine whether directories can be removed from the project. Not used.</summary>
      <returns>
        <see cref="F:Microsoft.VisualStudio.NativeMethods.S_OK" />.</returns>
      <param name="pProject">The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProject" /> affected.</param>
      <param name="cDirectories">The number of directories affected.</param>
      <param name="rgpszMkDocuments">An array of paths of the directories.</param>
      <param name="rgFlags">An array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSQUERYREMOVEDIRECTORYFLAGS" />.</param>
      <param name="pSummaryResult">An array of summary <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSQUERYREMOVEDIRECTORYRESULTS" /> objects, which represent a summary of the yes/no values returned.</param>
      <param name="rgResults">An array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSQUERYREMOVEDIRECTORYRESULTS" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsTrackProjectDocumentsEvents2#OnQueryRemoveFiles(Microsoft.VisualStudio.Shell.Interop.IVsProject,System.Int32,System.String[],Microsoft.VisualStudio.Shell.Interop.VSQUERYREMOVEFILEFLAGS[],Microsoft.VisualStudio.Shell.Interop.VSQUERYREMOVEFILERESULTS[],Microsoft.VisualStudio.Shell.Interop.VSQUERYREMOVEFILERESULTS[])">
      <summary>Raised to determine whether files can be removed from the project. Not used.</summary>
      <returns>
        <see cref="F:Microsoft.VisualStudio.NativeMethods.S_OK" />.</returns>
      <param name="pProject">The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProject" /> affected. </param>
      <param name="cFiles">The number of files affected.</param>
      <param name="rgpszMkDocuments">An array of paths to the files.</param>
      <param name="rgFlags">An array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSQUERYREMOVEFILEFLAGS" />.</param>
      <param name="pSummaryResult">An array of summary <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSQUERYREMOVEFILERESULTS" /> objects, which represent a summary of the yes/no values returned.</param>
      <param name="rgResults">An array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSQUERYREMOVEFILERESULTS" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsTrackProjectDocumentsEvents2#OnQueryRenameDirectories(Microsoft.VisualStudio.Shell.Interop.IVsProject,System.Int32,System.String[],System.String[],Microsoft.VisualStudio.Shell.Interop.VSQUERYRENAMEDIRECTORYFLAGS[],Microsoft.VisualStudio.Shell.Interop.VSQUERYRENAMEDIRECTORYRESULTS[],Microsoft.VisualStudio.Shell.Interop.VSQUERYRENAMEDIRECTORYRESULTS[])">
      <summary>Raised to determine whether directories can be renamed in the project. Not used.</summary>
      <returns>
        <see cref="F:Microsoft.VisualStudio.NativeMethods.S_OK" />.</returns>
      <param name="pProject">The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProject" /> affected.</param>
      <param name="cDirs">The number of directories affected. </param>
      <param name="rgszMkOldNames">An array of the old paths of the files.</param>
      <param name="rgszMkNewNames">An array of the new paths of the files.</param>
      <param name="rgFlags">An array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSQUERYRENAMEDIRECTORYFLAGS" />.</param>
      <param name="pSummaryResult">An array of summary <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSQUERYRENAMEDIRECTORYRESULTS" /> objects, which represent a summary of the yes/no values returned.</param>
      <param name="rgResults">An array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSQUERYRENAMEFILERESULTS" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsTrackProjectDocumentsEvents2#OnQueryRenameFiles(Microsoft.VisualStudio.Shell.Interop.IVsProject,System.Int32,System.String[],System.String[],Microsoft.VisualStudio.Shell.Interop.VSQUERYRENAMEFILEFLAGS[],Microsoft.VisualStudio.Shell.Interop.VSQUERYRENAMEFILERESULTS[],Microsoft.VisualStudio.Shell.Interop.VSQUERYRENAMEFILERESULTS[])">
      <summary>Raised to determine whether files can be renamed in the project. Not used.</summary>
      <returns>
        <see cref="F:Microsoft.VisualStudio.NativeMethods.S_OK" />.</returns>
      <param name="pProject">The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProject" /> affected.</param>
      <param name="cFiles">The number of files affected.</param>
      <param name="rgszMkOldNames">An array of the old paths of the files.</param>
      <param name="rgszMkNewNames">An array of the new paths of the files.</param>
      <param name="rgFlags">An array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSQUERYRENAMEFILEFLAGS" />.</param>
      <param name="pSummaryResult">An array of summary <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSQUERYRENAMEFILERESULTS" /> objects, which represent a summary of the yes/no values returned.</param>
      <param name="rgResults">An array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSQUERYRENAMEFILERESULTS" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsUIHierarchy#AdviseHierarchyEvents(Microsoft.VisualStudio.Shell.Interop.IVsHierarchyEvents,System.UInt32@)">
      <summary>Subscribes to hierarchy events.</summary>
      <returns>The cookie. </returns>
      <param name="pEventSink">
        <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchyEvents" />.</param>
      <param name="pdwCookie">A unique value, or cookie, that is needed to disable notification of hierarchy events.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsUIHierarchy#Close">
      <summary>Closes the project and cleans up its resources once the environment determines that it is no longer used.</summary>
      <returns>
        <see cref="F:Microsoft.VisualStudio.NativeMethods.S_OK" />.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsUIHierarchy#ExecCommand(System.UInt32,System.Guid@,System.UInt32,System.UInt32,System.IntPtr,System.IntPtr)">
      <summary>Executes a command on a specific item within a UI hierarchy window, or on the hierarchy itself. </summary>
      <returns>If the method succeeded, <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />, otherwise an error code.</returns>
      <param name="itemid">The identifier of the item affected by the command. For single selection, this value is the actual item ID. For multiple selections, set <paramref name="itemid" /> equal to <see cref="F:Microsoft.VisualStudio.VSConstants." /><see cref="VSITEMID_SELECTION" />.</param>
      <param name="pguidCmdGroup">Unique identifier of the command group. All the commands in <paramref name="nCmdID " />must belong to the group specified by <paramref name="pguidCmdGroup" />.</param>
      <param name="nCmdID">The command to be executed. This command must belong to the group specified with <paramref name="pguidCmdGroup" />.</param>
      <param name="nCmdexecopt">A member of the <see cref="T:Microsoft.VisualStudio.OLE.Interop.OLECMDEXECOPT" /> enumeration, describing the type of action to perform.</param>
      <param name="pvaIn">A pointer to a VARIANTARG structure containing input arguments. Can be null.</param>
      <param name="pvaOut">A pointer to a VARIANTARG structure to receive command output. Can be null.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsUIHierarchy#GetCanonicalName(System.UInt32,System.String@)">
      <summary>Gets the unique name associated with an item in the hierarchy. Used for workspace persistence, such as remembering window positions.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants." /><see cref="S_OK" />. If it fails, it returns an error code.</returns>
      <param name="itemid">The ID of the hierarchy item. </param>
      <param name="pbstrName">[out] The canonical name of the item.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsUIHierarchy#GetGuidProperty(System.UInt32,System.Int32,System.Guid@)">
      <summary>Gets properties whose values are GUIDs.</summary>
      <returns>
        <see cref="F:Microsoft.VisualStudio.NativeMethods.S_OK" />.</returns>
      <param name="itemid">The item ID of the hierarchy node for which to get the property.</param>
      <param name="propid">The ID of the property.</param>
      <param name="pguid">[out] The GUID value.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsUIHierarchy#GetNestedHierarchy(System.UInt32,System.Guid@,System.IntPtr@,System.UInt32@)">
      <summary>Determines whether or not a node is a nested hierarchy.</summary>
      <returns>If <paramref name="itemid" /> is not a nested hierarchy node, this method returns <see cref="F:Microsoft.VisualStudio.VSConstants." /><see cref="E_FAIL" />. If the requested interface is not supported on the hierarchy object, <see cref="F:Microsoft.VisualStudio.VSConstants." /><see cref="E_NOINTERFACE" /> is returned. The caller would then treat this node as if it had no children. </returns>
      <param name="itemid">The item ID of the node.</param>
      <param name="iidHierarchyNested">The interface ID of the node.</param>
      <param name="ppHierarchyNested">[out] Returns a pointer to the node, if it is a nested hierarchy node. </param>
      <param name="pitemidNested">[out] Returns the item ID of the nested hierarchy node; this will always be <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_ROOT" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsUIHierarchy#GetProperty(System.UInt32,System.Int32,System.Object@)">
      <summary>Gets the value of a property for a given node.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="itemid">The item ID of the node.</param>
      <param name="propid">The ID of the requested property.</param>
      <param name="pvar">[out] The value of the property.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsUIHierarchy#GetSite(Microsoft.VisualStudio.OLE.Interop.IServiceProvider@)">
      <summary>Gets the service provider from which to access the services.</summary>
      <returns>
        <see cref="F:Microsoft.VisualStudio.NativeMethods.S_OK" />.</returns>
      <param name="ppSP">[out] <see cref="T:Microsoft.VisualStudio.OLE.Interop.IServiceProvider" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsUIHierarchy#ParseCanonicalName(System.String,System.UInt32@)">
      <summary>Returns the identifier of the hierarchy item, given its canonical name. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszName">The canonical name of the item.</param>
      <param name="pitemid">[out] The ID of the item.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsUIHierarchy#QueryClose(System.Int32@)">
      <summary>Determines whether the hierarchy can be closed. </summary>
      <returns>true if the hierarchy can be closed, otherwise false.</returns>
      <param name="pfCanClose">[out] Returns true if the hierarchy can be closed, otherwise false.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsUIHierarchy#QueryStatusCommand(System.UInt32,System.Guid@,System.UInt32,Microsoft.VisualStudio.OLE.Interop.OLECMD[],System.IntPtr)">
      <summary>Gets the status of the specified commands.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="itemid">The ID of the item being queried.</param>
      <param name="pguidCmdGroup">The GUID of the command group to which the commands belong.</param>
      <param name="cCmds">The number of commands in the <paramref name="prgCmds" /> array.</param>
      <param name="prgCmds">An array of command <see cref="T:Microsoft.VisualStudio.OLE.Interop.OLECMD" /> structures with information on the commands.</param>
      <param name="pCmdText">A pointer to an <see cref="T:Microsoft.VisualStudio.OLE.Interop.OLECMDTEXT" /> structure containing name and/or status information on the command.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsUIHierarchy#SetGuidProperty(System.UInt32,System.Int32,System.Guid@)">
      <summary>Sets properties whose values are GUIDs. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="itemid">The ID of the item.</param>
      <param name="propid">The ID of the property to set.</param>
      <param name="rguid">The GUID value of the property.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsUIHierarchy#SetProperty(System.UInt32,System.Int32,System.Object)">
      <summary>Sets properties of a specific node or of the hierarchy. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="itemid">The ID of the item.</param>
      <param name="propid">The ID of the property to set.</param>
      <param name="var">The value of the property.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsUIHierarchy#SetSite(Microsoft.VisualStudio.OLE.Interop.IServiceProvider)">
      <summary>Sets the service provider from which to access the services. </summary>
      <returns>
        <see cref="F:Microsoft.VisualStudio.NativeMethods.S_OK" />.</returns>
      <param name="psp">
        <see cref="T:Microsoft.VisualStudio.OLE.Interop.IServiceProvider" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsUIHierarchy#UnadviseHierarchyEvents(System.UInt32)">
      <summary>Disables client notification of hierarchy events.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwCookie">The unique identifier that was handed back with <see cref="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.AdviseHierarchyEvents(Microsoft.VisualStudio.Shell.Interop.IVsHierarchyEvents)" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsUIHierarchy#Unused0">
      <summary>A placeholder for a future method.</summary>
      <returns>Implementers should return <see cref="F:Microsoft.VisualStudio.VSConstants.E_NOTIMPL" />.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsUIHierarchy#Unused1">
      <summary>A placeholder for a future method.</summary>
      <returns>Implementers should return <see cref="F:Microsoft.VisualStudio.VSConstants.E_NOTIMPL" />.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsUIHierarchy#Unused2">
      <summary>A placeholder for a future method.</summary>
      <returns>Implementers should return <see cref="F:Microsoft.VisualStudio.VSConstants.E_NOTIMPL" />.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsUIHierarchy#Unused3">
      <summary>A placeholder for a future method.</summary>
      <returns>Implementers should return <see cref="F:Microsoft.VisualStudio.VSConstants.E_NOTIMPL" />.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Microsoft#VisualStudio#Shell#Interop#IVsUIHierarchy#Unused4">
      <summary>A placeholder for a future method.</summary>
      <returns>Implementers should return <see cref="F:Microsoft.VisualStudio.VSConstants.E_NOTIMPL" />.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.OnAggregationComplete">
      <summary>Subscribes to <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsTrackProjectDocumentsEvents2" /> events. It is not required to flavor a project but makes it easier for derived classes to subscribe to these events.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.ParseCanonicalName(System.String,System.UInt32@)">
      <summary>Returns the identifier of the hierarchy item, given its canonical name. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="name">The canonical name of the item.</param>
      <param name="itemId">[out] The ID of the item.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.QueryClose">
      <summary>Determines whether the hierarchy can be closed. </summary>
      <returns>true if the hierarchy can be closed, otherwise false.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.QueryStatusCommand(System.UInt32,System.Guid@,System.UInt32,Microsoft.VisualStudio.OLE.Interop.OLECMD[],System.IntPtr)">
      <summary>Gets the status of the specified commands.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="itemid">The ID of the item being queried.</param>
      <param name="pguidCmdGroup">The GUID of the command group to which the commands belong.</param>
      <param name="cCmds">The number of commands in the <paramref name="prgCmds" /> array.</param>
      <param name="prgCmds">An array of command <see cref="T:Microsoft.VisualStudio.OLE.Interop.OLECMD" /> structures with information on the commands.</param>
      <param name="pCmdText">A pointer to an <see cref="T:Microsoft.VisualStudio.OLE.Interop.OLECMDTEXT" /> structure containing name and/or status information on the command.</param>
    </member>
    <member name="E:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.SccStatusChanged">
      <summary>Raised after the source code control status of an item in the project has changed.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.serviceProvider">
      <summary>The service provider of the project.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.SetGuidProperty(System.UInt32,System.Int32,System.Guid@)">
      <summary>Sets properties whose values are GUIDs. </summary>
      <param name="itemId">The ID of the item.</param>
      <param name="propId">The ID of the property to set.</param>
      <param name="guid">The GUID value of the property.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.SetInnerProject(System.Object)">
      <summary>Sets up the interfaces and menu commands for the inner project. </summary>
      <param name="inner">The inner project subtype.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.SetProperty(System.UInt32,System.Int32,System.Object)">
      <summary>Sets properties of a specific node or of the hierarchy. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" /> . If it fails, it returns an error code.</returns>
      <param name="itemId">The ID of the item.</param>
      <param name="propId">The ID of the property to set.</param>
      <param name="property">The value of the property.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.System#IServiceProvider#GetService(System.Type)">
      <summary>Gets the service of the specified type.</summary>
      <returns>A service of the type specified. </returns>
      <param name="serviceType">The type of the service.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.UnadviseHierarchyEvents(System.UInt32)">
      <summary>Disables client notification of hierarchy events.</summary>
      <param name="cookie">The unique identifier that was handed back with <see cref="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.AdviseHierarchyEvents(Microsoft.VisualStudio.Shell.Interop.IVsHierarchyEvents)" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Unused0">
      <summary>A placeholder for a future method.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Unused1">
      <summary>A placeholder for a future method.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Unused2">
      <summary>A placeholder for a future method.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Unused3">
      <summary>A placeholder for a future method.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.Unused4">
      <summary>A placeholder for a future method.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.EventHandler`1">
      <summary>Represents the method that handles events that relate to files and folders of the flavored project.</summary>
      <param name="sender">The object that raises the event.</param>
      <param name="e">
        <see cref="T:Microsoft.VisualStudio.Package.Flavor.ProjectDocumentsChangeEventArgs" />.</param>
      <typeparam name="ProjectDocumentsChangeEventArgs"></typeparam>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Flavor.FlavoredProjectBase.EventHandler`1">
      <typeparam name="ProjectDocumentsChangeEventArgs"></typeparam>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Flavor.FlavoredProjectFactoryBase">
      <summary>Base class for flavored project factories.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProjectFactoryBase.#ctor">
      <summary>Initializes a new instance of <see cref="T:Microsoft.VisualStudio.Shell.Flavor.FlavoredProjectFactoryBase" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProjectFactoryBase.CanCreateProject(System.String,System.UInt32)">
      <summary>Determines whether or not the project can be created with the supplied parameters.</summary>
      <returns>true if the project file name is valid, otherwise false.</returns>
      <param name="fileName">The name of the file.</param>
      <param name="flags">Not used.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProjectFactoryBase.CreateProject(System.String,System.String,System.String,System.UInt32,System.Guid@,System.IntPtr@,System.Int32@)">
      <summary>Creates a project.</summary>
      <param name="fileName">The name of the project file.</param>
      <param name="location">The path of the project file. </param>
      <param name="name">The name of the project.</param>
      <param name="flags">Values from <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSCREATEPROJFLAGS" />.</param>
      <param name="projectGuid">The interface ID of the project.</param>
      <param name="project">[out] Returns a pointer to the project.</param>
      <param name="canceled">[out] Returns true if the operation was canceled, otherwise false.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProjectFactoryBase.Dispose(System.Boolean)">
      <summary>Disposes the service provider.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProjectFactoryBase.Initialize">
      <summary>Initializes the project factory.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProjectFactoryBase.Microsoft#VisualStudio#Shell#Flavor#IVsAggregatableProjectFactoryCorrected#GetAggregateProjectType(System.String,System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProjectFactoryBase.Microsoft#VisualStudio#Shell#Flavor#IVsAggregatableProjectFactoryCorrected#PreCreateForOuter(System.IntPtr,System.IntPtr@)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProjectFactoryBase.Microsoft#VisualStudio#Shell#Interop#IVsProjectFactory#CanCreateProject(System.String,System.UInt32,System.Int32@)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProjectFactoryBase.Microsoft#VisualStudio#Shell#Interop#IVsProjectFactory#Close"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProjectFactoryBase.Microsoft#VisualStudio#Shell#Interop#IVsProjectFactory#CreateProject(System.String,System.String,System.String,System.UInt32,System.Guid@,System.IntPtr@,System.Int32@)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProjectFactoryBase.Microsoft#VisualStudio#Shell#Interop#IVsProjectFactory#SetSite(Microsoft.VisualStudio.OLE.Interop.IServiceProvider)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProjectFactoryBase.PreCreateForOuter(System.IntPtr)">
      <summary>Creates an instance of the project. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="outerProjectIUnknown">The outermost project, or null if the outer project is being created.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProjectFactoryBase.ProjectTypeGuids(System.String)">
      <summary>Gets the set of project type GUIDs from the project file.</summary>
      <returns>When implemented by a derived class, a semicolon-delimited string containing the project type GUIDs in the project file.</returns>
      <param name="file">The project file.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.Flavor.FlavoredProjectFactoryBase.serviceProvider">
      <summary>Gets the project's service provider.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Shell.ServiceProvider" />.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Flavor.ILocalRegistryCorrected">
      <summary>Establishes a locally-registered COM object relative to the local Visual Studio registry hive.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.ILocalRegistryCorrected.CreateInstance(System.Guid,System.IntPtr,System.Guid@,System.UInt32,System.IntPtr@)">
      <summary>Creates an instance of a class listed in the local registry.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="clsid">[in] Class identifier (CLSID) of the requested object. This is the CLSID associated with the data and code that is used to create the object.</param>
      <param name="punkOuterIUnknown">[in] Pointer to the IUnknown interface of the newly created object. A value of null indicates that the object is not being created as part of an aggregate. If non-null, this is a pointer to the aggregate object's IUnknown.</param>
      <param name="riid">[in] Interface to be used to communicate with the object. For example, IID_IClassFactory.</param>
      <param name="dwFlags">[in] Flags controlling the instance creation from the <see cref="T:Microsoft.VisualStudio.OLE.Interop.CLSCTX" /> enumeration. Specifies a value of <see cref="F:Microsoft.VisualStudio.OLE.Interop.CLSCTX.CLSCTX_INPROC_SERVER" />.</param>
      <param name="ppvObj">[out] Address of pointer variable that receives the interface pointer requested in <paramref name="riid" />. Upon successful return, <paramref name="ppvObj" /> contains the requested interface pointer. Upon failure, <paramref name="ppvObj" /> contains null.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.ILocalRegistryCorrected.GetClassObjectOfClsid(System.Guid@,System.UInt32,System.IntPtr,System.Guid@,System.IntPtr@)">
      <summary>Returns the class object associated with a CLSID.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="clsid">[in] Class identifier (CLSID) of the requested object. This is the CLSID associated with the data and code that is used to create the object.</param>
      <param name="dwFlags">[in] Flags controlling the instance creation from the <see cref="T:Microsoft.VisualStudio.OLE.Interop.CLSCTX" /> enumeration. Specifies a value of <see cref="F:Microsoft.VisualStudio.OLE.Interop.CLSCTX.CLSCTX_INPROC_SERVER" />.</param>
      <param name="lpReserved">[in] Reserved.</param>
      <param name="riid">[in] Interface to be used to communicate with the object. For example, IID_IClassFactory.</param>
      <param name="ppvClassObject">[in] Address of pointer variable that receives the interface pointer requested in <paramref name="riid" />. Upon successful return, <paramref name="ppvObj" /> contains the requested interface pointer. Upon failure, <paramref name="ppvObj" /> contains null.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.ILocalRegistryCorrected.GetTypeLibOfClsid(System.Guid,Microsoft.VisualStudio.OLE.Interop.ITypeLib@)">
      <summary>Not implemented. Do not use.</summary>
      <param name="clsid">Do not use.</param>
      <param name="pptLib">Do not use.</param>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Assemblies\v2.0\Microsoft.VisualStudio.OLE.Interop.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.VisualStudio.OLE.Interop</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualStudio.OLE.Interop._OLECADVF">
      <summary>Specifies the OLE component registration advise flags.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop._OLECADVF.olecadvfModal">
      <summary>Indicates that modal state change notifications are required. Must be registered by components that manage a top-level window.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop._OLECADVF.olecadvfRedrawOff">
      <summary>Indicates that redrawOff state change notifications are required.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop._OLECADVF.olecadvfWarningsOff">
      <summary>Indicates that warningsOff state change notifications are required.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop._OLECADVF.olecadvfRecording">
      <summary>Indicates that Recording state change notifications are required.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop._OLECCONTEXT">
      <summary>Specifies the state context that is affected by an OnComponentEnterState or OnComponentExitState change.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop._OLECCONTEXT.oleccontextAll">
      <summary>Indicates that all state contexts in the state context tree are affected.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop._OLECCONTEXT.oleccontextMine">
      <summary>Indicates that the components in the state context of a component manager are affected.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop._OLECCONTEXT.oleccontextOthers">
      <summary>Indicates that all state contexts outside of the state context of a component manager are affected.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop._OLECHOSTF">
      <summary>Specifies OLE component host flags.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop._OLECHOSTF.olechostfExclusiveBorderSpace">
      <summary>Indicates that exclusive border space is required when the component is active.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop._OLECRF"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop._OLECRF.olecrfNeedIdleTime">
      <summary>Indicates that a component idle time is required.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop._OLECRF.olecrfNeedPeriodicIdleTime">
      <summary>Indicates that a component idle time of a set period of milliseconds is required.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop._OLECRF.olecrfPreTranslateKeys">
      <summary>Indicates that the component processes keyboard messages before translation.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop._OLECRF.olecrfPreTranslateAll">
      <summary>Indicates that the component processes all messages before translation.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop._OLECRF.olecrfNeedSpecActiveNotifs">
      <summary>Indicates that component notification for special activation changes is required. This notifies the component if either the ExclusiveBorderSpace mode or ExlusiveActivation mode changes.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop._OLECRF.olecrfNeedAllActiveNotifs">
      <summary>Indicates that a component notification is required for every change in the activation state.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop._OLECRF.olecrfExclusiveBorderSpace">
      <summary>Indicates that exclusive border space is required when the component is active. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop._OLECRF.olecrfExclusiveActivation">
      <summary>Indicates that the component becomes exclusively active when it is activated.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop._OLECSTATE">
      <summary>Specifies the OLE component state.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop._OLECSTATE.olecstateModal">
      <summary>Indicates that the component is in a modal state. Top-level windows are disabled.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop._OLECSTATE.olecstateRedrawOff">
      <summary>Indicates that the component is in a redrawOff state. Window repainting is disabled.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop._OLECSTATE.olecstateWarningsOff">
      <summary>Indicates that the component is in a warningsOff state. User warnings are disabled.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop._OLECSTATE.olecstateRecording">
      <summary>Indicates that the component is in a recording state.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop._OLECWINDOW">
      <summary>Represents OLE component window values. These values are passed to <see cref="M:Microsoft.VisualStudio.OLE.Interop.IOleComponent.HwndGetWindow" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop._OLECWINDOW.olecWindowFrameToplevel">
      <summary>Indicates that the caller requires a displayed dialog box that is parented by the component.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop._OLECWINDOW.olecWindowFrameOwner">
      <summary>Represents the parent window of the component, if the component has a parent window.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop._OLECWINDOW.olecWindowComponent">
      <summary>Indicates that the multiple document-interface (MDI) applications will return the MDI frame or the application frame window, but not the MDI client.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop._OLECWINDOW.olecWindowDlgOwner">
      <summary>Represents the window that owns the component.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop._OLEGAC">
      <summary>Specifies OLE GetActiveComponent values. These values are passed to <see cref="F:Microsoft.VisualStudio.OLE.Interop.IOleComponentManager.FGetActiveComponent" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop._OLEGAC.olegacActive">
      <summary>Indicates that the true active component is retrieved.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop._OLEGAC.olegacTracking">
      <summary>Indicates that the tracking component is retrieved.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop._OLEGAC.olegacTrackingOrActive">
      <summary>Indicates that the tracking component is retrieved if it exists. Otherwise, the true active component is retrieved.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop._OLEIDLEF">
      <summary>Specifies the OLE component idle flags.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop._OLEIDLEF.oleidlefPeriodic">
      <summary>Indicates high priority, non-periodic idle tasks.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop._OLEIDLEF.oleidlefNonPeriodic">
      <summary>Indicates any non-periodic idle tasks.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop._OLEIDLEF.oleidlefPriority">
      <summary>Indicates all idle tasks.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop._OLEIDLEF.oleidlefAll">
      <summary>Indicates periodic idle tasks.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop._OLELOOP">
      <summary>Specifies the reasons for pushing a message loop.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop._OLELOOP.oleloopFocusWait">
      <summary>Indicates the component is activating the host.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop._OLELOOP.oleloopDoEvents">
      <summary>Indicates the component is requesting that the host to process messages.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop._OLELOOP.oleloopDebug">
      <summary>Indicates the component has entered debug mode.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop._OLELOOP.oleloopModalForm">
      <summary>Indicates the component is displaying a modal form.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.ACTIVATEFLAGS">
      <summary>Specifies the component activation flags.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.ACTIVATEFLAGS.ACTIVATE_WINDOWLESS">
      <summary>Indicates the component will be activated as windowless.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.ADVF">
      <summary>Specifies the requested behavior when setting up an advise sink or a caching connection with an object.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.ADVF.ADVF_NODATA">
      <summary>For data advisory connections, this flag requests the data object not to send data when it calls OnDataChange.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.ADVF.ADVF_PRIMEFIRST">
      <summary>Requests that the object not wait for the data or view to change before making an initial call to OnDataChange (for data or view advisory connections) or updating the cache (for cache connections).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.ADVF.ADVF_ONLYONCE">
      <summary>Requests that the object make only one change notification or cache update before deleting the connection.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.ADVF.ADVF_DATAONSTOP">
      <summary>For data advisory connections, assures accessibility to data.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.ADVF.ADVFCACHE_NOHANDLER">
      <summary>Synonym for ADVFCACHE_FORCEBUILTIN, which is typically used.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.ADVF.ADVFCACHE_FORCEBUILTIN">
      <summary>This value is used by DLL object applications and object handlers that perform the drawing of their objects.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.ADVF.ADVFCACHE_ONSAVE">
      <summary>For cache connections, this flag updates the cached representation only when the object containing the cache is saved.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.ApplicationType"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.ApplicationType.ServerApplication">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.ApplicationType.LibraryApplication">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.APTTYPE">
      <summary>Specifies different types of apartments.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.APTTYPE.APTTYPE_CURRENT">
      <summary>Indicates that the current thread is the apartment type.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.APTTYPE.APTTYPE_STA">
      <summary>Indicates that a single-threaded apartment is the apartment type.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.APTTYPE.APTTYPE_MTA">
      <summary>Indicates that a multi-threaded apartment is the apartment type.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.APTTYPE.APTTYPE_NA">
      <summary>Indicates that a neutral apartment is the apartment type.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.APTTYPE.APTTYPE_MAINSTA">
      <summary>Indicates that the main single-threaded apartment is the apartment type.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.BIND_FLAGS">
      <summary>Specifies values that are used to control aspects of moniker binding operations.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BIND_FLAGS.BIND_MAYBOTHERUSER">
      <summary>Indicates that the caller is not interested in having the operation carried out, but only in learning whether the operation could have been carried out had this flag not been specified.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BIND_FLAGS.BIND_JUSTTESTEXISTENCE">
      <summary>Indicates that moniker implementation can interact with the end user. If not present, the moniker implementation should not interact with the user in any way.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.BIND_OPTS2">
      <summary>Contains parameters used during a moniker-binding operation.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BIND_OPTS2.cbStruct">
      <summary>Represents the size of the <see cref="T:Microsoft.VisualStudio.OLE.Interop.BIND_OPTS2" /> structure in bytes.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BIND_OPTS2.dwClassContext">
      <summary>Represents the class context that is to be used for instantiating the object.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BIND_OPTS2.dwTickCountDeadline">
      <summary>Represents the clock time in milliseconds.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BIND_OPTS2.dwTrackFlags">
      <summary>Represents a value that a moniker can use during link tracking.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BIND_OPTS2.grfFlags">
      <summary>Represents flags that control aspects of moniker binding operations.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BIND_OPTS2.grfMode">
      <summary>Represents flags that should be used when opening the file that contains the object identified by the moniker.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BIND_OPTS2.locale">
      <summary>Represents the LCID value indicating the client's preference for which locale to be used when binding an object.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BIND_OPTS2.pServerInfo">
      <summary>Allows clients to specify server information when calling IMoniker::BindToObject.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.BINDF">
      <summary>Contains values that determine how a resource should be bound to a moniker.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDF.BINDF_ASYNCHRONOUS">
      <summary>Indicates that the moniker should return immediately from <see cref="F:Microsoft.VisualStudio.OLE.Interop.IMoniker.BindToStorage" /> or <see cref="F:Microsoft.VisualStudio.OLE.Interop.IMoniker.BindToObject" />. The actual result of the bind to an object or the bind to storage arrives asynchronously.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDF.BINDF_ASYNCSTORAGE">
      <summary>Indicates that the client application calling the <see cref="F:Microsoft.VisualStudio.OLE.Interop.IMoniker.BindToStorage" /> method prefers that the storage and stream objects returned in <see cref="F:Microsoft.VisualStudio.OLE.Interop.IBindStatusCallback.OnDataAvailable" /> return E_PENDING. This occurs when the client application references data not yet available through their read methods; the default behavior blocks until the data becomes available.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDF.BINDF_NOPROGRESSIVERENDERING">
      <summary>Indicates that progressive rendering should not be allowed.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDF.BINDF_OFFLINEOPERATION">
      <summary>Indicates that the moniker should be bound to the cached version of the resource.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDF.BINDF_GETNEWESTVERSION">
      <summary>Indicates that the bind operation should retrieve the newest version of the data or object possible.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDF.BINDF_NOWRITECACHE">
      <summary>Indicates that the bind operation should not store retrieved data in the disk cache.  BINDF_PULLDATA must also be specified to turn off the cache file generation when using the <see cref="F:Microsoft.VisualStudio.OLE.Interop.IMoniker.BindToStorage" /> method.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDF.BINDF_NEEDFILE">
      <summary>Indicates that the downloaded resource must be saved in the cache or a local file.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDF.BINDF_PULLDATA">
      <summary>Indicates that the asynchronous moniker allows the client of <see cref="F:Microsoft.VisualStudio.OLE.Interop.IMoniker.BindToStorage" /> to drive the bind operation by pulling the data. Otherwise, the moniker drives the operation by pushing the data to the client..</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDF.BINDF_IGNORESECURITYPROBLEM">
      <summary>Indicates that security problems related to bad certificates and redirects between HTTP and HTTPS servers should be ignored.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDF.BINDF_RESYNCHRONIZE">
      <summary>Indicates that the resource should be resynchronized. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDF.BINDF_HYPERLINK">
      <summary>Indicates that hyperlinks are allowed.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDF.BINDF_NO_UI">
      <summary>Indicates that the bind operation should not display any user interfaces.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDF.BINDF_SILENTOPERATION">
      <summary>Indicates that the bind operation should be completed silently. No user interface or user notification should occur.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDF.BINDF_PRAGMA_NO_CACHE">
      <summary>Indicates that the resource should not be stored in the Internet cache.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDF.BINDF_GETCLASSOBJECT">
      <summary>Indicates that the class object should be retrieved. Otherwise, the class instance is retrieved.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDF.BINDF_RESERVED_1">
      <summary>Reserved. Do not use.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDF.BINDF_FREE_THREADED">
      <summary>Reserved for future use.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDF.BINDF_DIRECT_READ">
      <summary>Indicates that the client application does not need to know the exact size of the data available. The application is read directly from source.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDF.BINDF_FORMS_SUBMIT">
      <summary>Indicates that this transaction should be handled as a forms submittal.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDF.BINDF_GETFROMCACHE_IF_NET_FAIL">
      <summary>Indicates that the resource should be retrieved from the cache if the attempt to download the resource from the network fails.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDF.BINDF_FROMURLMON">
      <summary>Indicates that the binding is from a URL moniker. This value was added for Microsoft® Internet Explorer 5.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDF.BINDF_FWD_BACK">
      <summary>Indicates that the moniker should bind to the copy of the resource that is currently in the Internet cache.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDF.BINDF_PREFERDEFAULTHANDLER">
      <summary>Indicates that the Urlmon.dll searches for temporary or permanent namespace handlers before it uses the default registered handler for particular protocols. This value changes this behavior by allowing the moniker client to specify that Urlmon.dll should look for and use the default system protocol first.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDF.BINDF_ENFORCERESTRICTED">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.BINDINFO">
      <summary>Contains additional information on the requested binding operation.  The meaning of this structure is specific to the type of asynchronous moniker.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDINFO.cbSize">
      <summary>Indicates the size of the structure in bytes.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDINFO.cbstgmedData">
      <summary>Indicates the size of the data provided in the <see cref="F:Microsoft.VisualStudio.OLE.Interop.BINDINFO.stgmedData" /> member.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDINFO.dwBindVerb">
      <summary>Indicates the value from the <see cref="T:Microsoft.VisualStudio.OLE.Interop.BINDVERB" /> enumeration specifying an action to be performed during the bind operation.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDINFO.dwCodePage">
      <summary>Represents an unsigned long integer value that contains the code page used to perform the conversion.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDINFO.dwOptions">
      <summary>Reserved. Must be set to 0.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDINFO.dwOptionsFlags">
      <summary>Reserved. Must be set to 0.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDINFO.dwReserved">
      <summary>Reserved. Must be set to 0.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDINFO.grfBindInfoF">
      <summary>Indicates the flag from the <see cref="F:Microsoft.VisualStudio.OLE.Interop.BINDINFOF" /> enumeration that determines the use of URL encoding during the binding operation.  This member is specific to URL monikers.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDINFO.iid">
      <summary>Indicates the interface identifier of the IUnknown interface referred to by <see cref="F:Microsoft.VisualStudio.OLE.Interop.BINDINFO.pUnk" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDINFO.punk">
      <summary>Point to the IUnknown (COM) interface.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDINFO.securityAttributes">
      <summary>Represents the <see cref="F:Microsoft.VisualStudio.OLE.Interop.SECUTIRY_ATTRIBUTES" /> structure that contains the descriptor for the object being bound to and indicates whether the handle retrieved by specifying this structure is inheritable.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDINFO.stgmedData">
      <summary>Defines the data to be used in a PUT or POST operation specified by <see cref="F:Microsoft.VisualStudio.OLE.Interop.BINDINFO.dwBindVerb" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDINFO.szCustomVerb">
      <summary>Represents the BSTR specifying a protocol-specific custom action to be performed during the bind operation (only if <see cref="F:Microsoft.VisualStudio.OLE.Interop.BINDINFO.dwBindVerb" /> is set to BINDVERB_CUSTOM).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDINFO.szExtraInfo">
      <summary>The behavior of this field is moniker-specific. </summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.BINDINFO_OPTIONS">
      <summary>Contains the option flags used in the <see cref="T:Microsoft.VisualStudio.OLE.Interop.BINDINFO" /> structure.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDINFO_OPTIONS.BINDINFO_OPTIONS_WININETFLAG">
      <summary>Indicates that the values contained in the <see cref="F:Microsoft.VisualStudio.OLE.Interop.dwOptionFlags" /> member of the <see cref="T:Microsoft.VisualStudio.OLE.Interop.BINDINFO" /> structure are Microsoft Win32 Internet API flags.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDINFO_OPTIONS.BINDINFO_OPTIONS_ENABLE_UTF8">
      <summary>Indicates that 8-bit Unicode Transformation Format (UTF-8) encoding should be enabled.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDINFO_OPTIONS.BINDINFO_OPTIONS_DISABLE_UTF8">
      <summary>Indicates that UTF-8 encoding should be disabled.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDINFO_OPTIONS.BINDINFO_OPTIONS_USE_IE_ENCODING">
      <summary>Indicates that Microsoft Internet Explorer's default encoding scheme should be used.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDINFO_OPTIONS.BINDINFO_OPTIONS_BINDTOOBJECT">
      <summary>Indicates that the application is binding to an object.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.BINDINFOF">
      <summary>Contains values that determine the use of URL encoding during the binding operation.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDINFOF.BINDINFOF_URLENCODESTGMEDDATA">
      <summary>Use URL encoding to pass in the data provided in the <see cref="T:Microsoft.VisualStudio.OLE.Interop.szExtraInfo" /> member of the <see cref="T:Microsoft.VisualStudio.OLE.Interop.BINDINFO" /> structure. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDINFOF.BINDINFOF_URLENCODEDEXTRAINFO">
      <summary>Use URL encoding to pass in the data provided in the <see cref="F:Microsoft.VisualStudio.OLE.Interop.BINDINFO.stgmedData" /> member of the <see cref="T:Microsoft.VisualStudio.OLE.Interop.BINDINFO" /> structure for PUT and POST operations.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.BINDSPEED">
      <summary>Indicates approximately how long the caller will wait to bind to an object.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSPEED.BINDSPEED_INDEFINITE">
      <summary>The IOleItemContainer::GetObject operation must be completed in a moderate amount of time. If this flag is specified, the implementation of IOleItemContainer::GetObject should return MK_E_EXCEEEDEDDEADLINE unless the object is one of the following:</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSPEED.BINDSPEED_MODERATE">
      <summary>The caller will wait only a short time. In this case, IOleItemContainer::GetObject should return MK_E_EXCEEEDEDDEADLINE unless the object is already in the running state or is a pseudo-object.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSPEED.BINDSPEED_IMMEDIATE">
      <summary>There is no time limit on the binding operation.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.BINDSTATUS">
      <summary>Contains values that are passed to the client application's implementation of the <see cref="M:Microsoft.VisualStudio.OLE.Interop.IBindStatusCallback.OnProgress(System.UInt32,System.UInt32,System.UInt32,System.String)" /> method to indicate the progress of the bind operation.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTATUS.BINDSTATUS_FINDINGRESOURCE">
      <summary>Notifies the client application that the bind operation is finding the resource that holds the object or storage being bound to. The szStatusText parameter to the <see cref="M:Microsoft.VisualStudio.OLE.Interop.IBindStatusCallback.OnProgress(System.UInt32,System.UInt32,System.UInt32,System.String)" /> method provides the display name of the resource being searched for (for example, "www.microsoft.com").</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTATUS.BINDSTATUS_CONNECTING">
      <summary>Notifies the client application that the bind operation is connecting to the resource that holds the object or storage being bound to. The szStatusText parameter to the <see cref="M:Microsoft.VisualStudio.OLE.Interop.IBindStatusCallback.OnProgress(System.UInt32,System.UInt32,System.UInt32,System.String)" /> method provides the display name of the resource being connected to (for example, an IP address).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTATUS.BINDSTATUS_REDIRECTING">
      <summary>Notifies the client application that the bind operation has been redirected to a different data location. The szStatusText parameter to the <see cref="M:Microsoft.VisualStudio.OLE.Interop.IBindStatusCallback.OnProgress(System.UInt32,System.UInt32,System.UInt32,System.String)" /> method provides the display name of the new data location. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTATUS.BINDSTATUS_BEGINDOWNLOADDATA">
      <summary>Notifies the client application that the bind operation has begun receiving the object or storage being bound to. The szStatusText parameter to the <see cref="M:Microsoft.VisualStudio.OLE.Interop.IBindStatusCallback.OnProgress(System.UInt32,System.UInt32,System.UInt32,System.String)" /> method provides the display name of the data location.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTATUS.BINDSTATUS_DOWNLOADINGDATA">
      <summary>Notifies the client application that the bind operation continues to receive the object or storage being bound to. The szStatusText parameter to the <see cref="M:Microsoft.VisualStudio.OLE.Interop.IBindStatusCallback.OnProgress(System.UInt32,System.UInt32,System.UInt32,System.String)" /> method provides the display name of the data location.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTATUS.BINDSTATUS_ENDDOWNLOADDATA">
      <summary>Notifies the client application that the bind operation has finished receiving the object or storage being bound to. The szStatusText parameter to the <see cref="M:Microsoft.VisualStudio.OLE.Interop.IBindStatusCallback.OnProgress(System.UInt32,System.UInt32,System.UInt32,System.String)" /> method provides the display name of the data location.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTATUS.BINDSTATUS_BEGINDOWNLOADCOMPONENTS">
      <summary>Notifies the client application that the bind operation is beginning to download the component.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTATUS.BINDSTATUS_INSTALLINGCOMPONENTS">
      <summary>Notifies the client application that the bind operation is installing the component.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTATUS.BINDSTATUS_ENDDOWNLOADCOMPONENTS">
      <summary>Notifies the client application that the bind operation has finished downloading the component.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTATUS.BINDSTATUS_USINGCACHEDCOPY">
      <summary>Notifies the client application that the bind operation is retrieving the requested object or storage from a cached copy. The szStatusText parameter to the <see cref="M:Microsoft.VisualStudio.OLE.Interop.IBindStatusCallback.OnProgress(System.UInt32,System.UInt32,System.UInt32,System.String)" /> method is NULL. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTATUS.BINDSTATUS_SENDINGREQUEST">
      <summary>Notifies the client application that the bind operation is requesting the object or storage being bound to. The szStatusText parameter to the <see cref="M:Microsoft.VisualStudio.OLE.Interop.IBindStatusCallback.OnProgress(System.UInt32,System.UInt32,System.UInt32,System.String)" /> method provides the display name of the object (for example, a file name).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTATUS.BINDSTATUS_CLASSIDAVAILABLE">
      <summary>Notifies the client application that the CLSID of the resource is available.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTATUS.BINDSTATUS_MIMETYPEAVAILABLE">
      <summary>Notifies the client application that the MIME type of the resource is available. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTATUS.BINDSTATUS_CACHEFILENAMEAVAILABLE">
      <summary>Notifies the client application that the temporary or cache file name of the resource is available. The temporary file name might be returned if BINDF_NOWRITECACHE is called. The temporary file will be deleted once the storage is released.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTATUS.BINDSTATUS_BEGINSYNCOPERATION">
      <summary>Notifies the client application that a synchronous operation has started.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTATUS.BINDSTATUS_ENDSYNCOPERATION">
      <summary>Notifies the client application that the synchronous operation has completed.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTATUS.BINDSTATUS_BEGINUPLOADDATA">
      <summary>Notifies the client application that the file upload has started.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTATUS.BINDSTATUS_UPLOADINGDATA">
      <summary>Notifies the client application that the file upload is in progress.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTATUS.BINDSTATUS_ENDUPLOADDATA">
      <summary>Notifies the client application that the file upload has completed.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTATUS.BINDSTATUS_PROTOCOLCLASSID">
      <summary>Notifies the client application that the CLSID of the protocol handler being used is available.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTATUS.BINDSTATUS_ENCODING">
      <summary>Notifies the client application that the Urlmon.dll is encoding data.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTATUS.BINDSTATUS_VERIFIEDMIMETYPEAVAILABLE">
      <summary>Notifies the client application that the verified MIME type is available.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTATUS.BINDSTATUS_CLASSINSTALLLOCATION">
      <summary>Notifies the client application that the class install location is available.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTATUS.BINDSTATUS_DECODING">
      <summary>Notifies the client application that the bind operation is decoding data.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTATUS.BINDSTATUS_LOADINGMIMEHANDLER">
      <summary>Notifies the client application that a pluggable MIME handler is being loaded. This value was added for Internet Explorer 5.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTATUS.BINDSTATUS_CONTENTDISPOSITIONATTACH">
      <summary>Notifies the client application that this resource contained a Content-Disposition header that indicates that this resource is an attachment. The content of this resource should not be automatically displayed. Client applications should request permission from the user. This value was added for Internet Explorer 5. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTATUS.BINDSTATUS_FILTERREPORTMIMETYPE">
      <summary>Notifies the client application of the new MIME type of the resource. This is used by a pluggable MIME filter to report a change in the MIME type after it has processed the resource. This value was added for Internet Explorer 5.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTATUS.BINDSTATUS_CLSIDCANINSTANTIATE">
      <summary>Notifies the Urlmon.dll that this CLSID is for the class the Urlmon.dll should return to the client on a call to <see cref="M:Microsoft.VisualStudio.OLE.Interop.IMoniker.BindToObject(Microsoft.VisualStudio.OLE.Interop.IBindCtx,Microsoft.VisualStudio.OLE.Interop.IMoniker,System.Guid@,System.Object@)" />. This value was added for Internet Explorer 5.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTATUS.BINDSTATUS_IUNKNOWNAVAILABLE">
      <summary>Reports that the IUnknown (COM) interface has been released. This value was added for Internet Explorer 5.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTATUS.BINDSTATUS_DIRECTBIND">
      <summary>Reports whether or not the client application is connected directly to the pluggable protocol handler. This value was added for Internet Explorer 5.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTATUS.BINDSTATUS_RAWMIMETYPE">
      <summary>Reports the MIME type of the resource, before any code sniffing is done. This value was added for Internet Explorer 5.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTATUS.BINDSTATUS_PROXYDETECTING">
      <summary>Reports that a proxy server has been detected. This value was added for Internet Explorer 5.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTATUS.BINDSTATUS_ACCEPTRANGES">
      <summary>Reports the valid types of range requests for a resource. This value was added for Internet Explorer 5.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTATUS.BINDSTATUS_COOKIE_SENT">
      <summary>Notifies the client application that a cookie was sent with the Web request.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTATUS.BINDSTATUS_COMPACT_POLICY_RECEIVED">
      <summary>Notifies the client application that a Platform for Privacy Preferences (P3P) v1 compact policy was received.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTATUS.BINDSTATUS_COOKIE_SUPPRESSED">
      <summary>Notifies the client application that a cookie was suppressed from being sent to the Web server.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTATUS.BINDSTATUS_COOKIE_STATE_UNKNOWN">
      <summary>Notifies the client application that a cookie has been initialized. This is a default initialization state for cookie operations.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTATUS.BINDSTATUS_COOKIE_STATE_ACCEPT">
      <summary>Notifies the client application that a cookie sent by the server was accepted on the client.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTATUS.BINDSTATUS_COOKIE_STATE_REJECT">
      <summary>Notifies the client application that a cookie sent by the server was rejected based on privacy and user settings.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTATUS.BINDSTATUS_COOKIE_STATE_PROMPT">
      <summary>Notifies the client application that the user settings require a prompt before performing a cookie operation. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTATUS.BINDSTATUS_COOKIE_STATE_LEASH">
      <summary>Notifies the client application that the cookie is a leashed cookie. A leashed cookie is only sent on requests to download first-party content. When requests are made for third-party content, leashed cookies are suppressed, that is, they are not sent.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTATUS.BINDSTATUS_COOKIE_STATE_DOWNGRADE">
      <summary>Notifies the client application that the cookie is a downgraded cookie. A downgraded cookie is a persistent cookie that is deleted when the browsing session ends or the cookie expires, whichever comes first. In other words, the persistent cookie becomes a session cookie.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTATUS.BINDSTATUS_POLICY_HREF">
      <summary>Notifies the client application that the HTTP headers contain a link to the full privacy policy.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTATUS.BINDSTATUS_P3P_HEADER">
      <summary>Notifies the client application that an HTTP response from the server contains the P3P privacy header.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTATUS.BINDSTATUS_SESSION_COOKIE_RECEIVED">
      <summary>Notifies the client application that a session cookie was received. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTATUS.BINDSTATUS_PERSISTENT_COOKIE_RECEIVED">
      <summary>Notifies the client application that a persistent cookie was received.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTATUS.BINDSTATUS_SESSION_COOKIES_ALLOWED">
      <summary>Notifies the client application that session cookies are allowed.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.BINDSTRING">
      <summary>Contains the values for the bind string types available for IInternetBindInfo::GetBindString.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTRING.BINDSTRING_HEADERS">
      <summary>Retrieves the headers associated with the request.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTRING.BINDSTRING_ACCEPT_MIMES">
      <summary>Retrieves the accepted MIME types.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTRING.BINDSTRING_EXTRA_URL">
      <summary>Not currently supported.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTRING.BINDSTRING_LANGUAGE">
      <summary>Retrieves the accepted language types.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTRING.BINDSTRING_USERNAME">
      <summary>Retrieves the user name sent with the request.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTRING.BINDSTRING_PASSWORD">
      <summary>Retrieves the password sent with the request.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTRING.BINDSTRING_UA_PIXELS">
      <summary>Not currently supported.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTRING.BINDSTRING_UA_COLOR">
      <summary>Not currently supported.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTRING.BINDSTRING_OS">
      <summary>Retrieves the server's operating system.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTRING.BINDSTRING_USER_AGENT">
      <summary>Retrieves the user agent string used.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTRING.BINDSTRING_ACCEPT_ENCODINGS">
      <summary>Retrieves the accepted encoding types.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTRING.BINDSTRING_POST_COOKIE">
      <summary>Retrieves the posted cookie.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTRING.BINDSTRING_POST_DATA_MIME">
      <summary>Retrieves the MIME type of the posted data.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTRING.BINDSTRING_URL">
      <summary>Retrieves the URL.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTRING.BINDSTRING_IID">
      <summary>Retrieves the CLSID of the resource. This value was added for Microsoft Internet Explorer 5.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTRING.BINDSTRING_FLAG_BIND_TO_OBJECT">
      <summary>Retrieves a string that indicates if the protocol handler is binding to an object. This value was added for Internet Explorer 5.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDSTRING.BINDSTRING_PTR_BIND_CONTEXT">
      <summary>Retrieves the address of the IBindCtx interface. This value was added for Internet Explorer 5.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.BINDVERB">
      <summary>Contains values that specify an action, such as an HTTP request, to be performed during the binding operation.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDVERB.BINDVERB_GET">
      <summary>Indicates that an HTTP POST operation should be performed. The data to be posted should be specified in the <see cref="F:Microsoft.VisualStudio.OLE.Interop.BINDINFO.stgmedData" /> of the <see cref="T:Microsoft.VisualStudio.OLE.Interop.BINDINFO" /> structure.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDVERB.BINDVERB_POST">
      <summary>Indicates that an HTTP PUT operation should be performed. The data to put should be specified in the <see cref="F:Microsoft.VisualStudio.OLE.Interop.BINDINFO.stgmedData" /> of the <see cref="T:Microsoft.VisualStudio.OLE.Interop.BINDINFO" /> structure.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDVERB.BINDVERB_PUT">
      <summary>Indicates that a protocol-specific custom operation should be performed. The data to be used in the custom operation should be specified in the <see cref="F:Microsoft.VisualStudio.OLE.Interop.BINDINFO.stgmedData" /> of the <see cref="T:Microsoft.VisualStudio.OLE.Interop.BINDINFO" /> structure. See the <see cref="F:Microsoft.VisualStudio.OLE.Interop.BINDINFO.szCustomVerb" /> member of the <see cref="T:Microsoft.VisualStudio.OLE.Interop.BINDINFO" /> structure.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BINDVERB.BINDVERB_CUSTOM">
      <summary>Indicates that an HTTP GET operation (the default operation) should be performed. The <see cref="F:Microsoft.VisualStudio.OLE.Interop.BINDINFO.stgmedData" /> member of the <see cref="T:Microsoft.VisualStudio.OLE.Interop.BINDINFO" /> structure should be set to TYMED_NULL for the GET operation.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.BLOB">
      <summary>Contains information about a block of data.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BLOB.cbSize">
      <summary>Size of the block of data pointed to by <see cref="F:Microsoft.VisualStudio.OLE.Interop.BLOB.pBlobData" />, in bytes.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BLOB.pBlobData">
      <summary>Pointer to a block of data.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.BSCF">
      <summary>Indicates the type of data that is available when passed to the client in IBindStatusCallback::OnDataAvailable.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BSCF.BSCF_FIRSTDATANOTIFICATION">
      <summary>Identifies the first call to IBindStatusCallback::OnDataAvailable for a given bind operation.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BSCF.BSCF_INTERMEDIATEDATANOTIFICATION">
      <summary>Identifies an intermediate call to IBindStatusCallback::OnDataAvailable for a bind operation.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BSCF.BSCF_LASTDATANOTIFICATION">
      <summary>Identify the last call to IBindStatusCallback::OnDataAvailable for a bind operation.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BSCF.BSCF_DATAFULLYAVAILABLE">
      <summary>Indicates that all of the requested data is available.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BSCF.BSCF_AVAILABLEDATASIZEUNKNOWN">
      <summary>Indicates that the size of the data available is unkown.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.BSTRBLOB">
      <summary>Used by some implementations of IPropertyStorage when marshaling BSTRs on systems which don't support BSTR marshaling.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BSTRBLOB.cbSize">
      <summary>Size of the block of data pointed to by <see cref="F:Microsoft.VisualStudio.OLE.Interop.BSTRBLOB.pData" />, in bytes.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.BSTRBLOB.pData">
      <summary>Pointer to a block of data.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.CABOOL">
      <summary>Represents a counted array of BOOL types.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CABOOL.cElems">
      <summary>The size of the array pointed to by <see cref="F:Microsoft.VisualStudio.OLE.Interop.CABOOL.pElems" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CABOOL.pElems">
      <summary>A pointer to an array of BOOL types, each of which corresponds to an allowable value that a particular property can accept.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.CABSTR">
      <summary>Represents a counted array of BSTR types.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CABSTR.cElems">
      <summary>The size of the array pointed to by <see cref="F:Microsoft.VisualStudio.OLE.Interop.CABSTR.pElems" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CABSTR.pElems">
      <summary>A pointer to an array of BSTR values, each of which corresponds to an allowable value that a particular property can accept.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.CABSTRBLOB">
      <summary>Represents a counted array of BSTRBLOB types.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CABSTRBLOB.cElems">
      <summary>The size of the array pointed to by <see cref="F:Microsoft.VisualStudio.OLE.Interop.CABSTRBLOB.pElems" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CABSTRBLOB.pElems">
      <summary>A pointer to an array of BSTRBLOB types, each of which corresponds to an allowable value that a particular property can accept.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.CAC">
      <summary>Represents a counted array of CHAR types.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CAC.cElems">
      <summary>The size of the array pointed to by <see cref="F:Microsoft.VisualStudio.OLE.Interop.CABOOL.pElems" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CAC.pElems">
      <summary>A pointer to an array of CHAR types, each of which corresponds to an allowable value that a particular property can accept.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.CACLIPDATA">
      <summary>Represents a counted array of CLIPDATA types.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CACLIPDATA.cElems">
      <summary>The size of the array pointed to by <see cref="F:Microsoft.VisualStudio.OLE.Interop.CACLIPDATA.pElems" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CACLIPDATA.pElems">
      <summary>A pointer to an array of CACLIPDATA types, each of which corresponds to an allowable value that a particular property can accept.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.CACLSID">
      <summary>Represents a counted array of CLSID types.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CACLSID.cElems">
      <summary>The size of the array pointed to by <see cref="F:Microsoft.VisualStudio.OLE.Interop.CACLSID.pElems" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CACLSID.pElems">
      <summary>A pointer to an array of CLSID types, each of which corresponds to an allowable value that a particular property can accept.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.CACY">
      <summary>Represents a counted array of CY types.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CACY.cElems">
      <summary>The size of the array pointed to by <see cref="F:Microsoft.VisualStudio.OLE.Interop.CACY.pElems" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CACY.pElems">
      <summary>A pointer to an array of CY types, each of which corresponds to an allowable value that a particular property can accept.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.CADATE">
      <summary>Represents a counted array of DATE types.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CADATE.cElems">
      <summary>The size of the array pointed to by <see cref="F:Microsoft.VisualStudio.OLE.Interop.CADATE.pElems" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CADATE.pElems">
      <summary>A pointer to an array of DATE types, each of which corresponds to an allowable value that a particular property can accept.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.CADBL">
      <summary>Represents a counted array of DOUBLE types.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CADBL.cElems">
      <summary>The size of the array pointed to by <see cref="F:Microsoft.VisualStudio.OLE.Interop.CADBL.pElems" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CADBL.pElems">
      <summary>A pointer to an array of DOUBLE types, each of which corresponds to an allowable value that a particular property can accept.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.CADWORD">
      <summary>Represents a counted array of DWORD types.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CADWORD.cElems">
      <summary>The size of the array pointed to by <see cref="F:Microsoft.VisualStudio.OLE.Interop.CADWORD.pElems" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CADWORD.pElems">
      <summary>A pointer to an array of DWORD types, each of which corresponds to an allowable value that a particular property can accept.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.CAFILETIME">
      <summary>Represents a counted array of FILETIME types.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CAFILETIME.cElems">
      <summary>The size of the array pointed to by <see cref="F:Microsoft.VisualStudio.OLE.Interop.CAFILETIME.pElems" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CAFILETIME.pElems">
      <summary>A pointer to an array of FILETIME types, each of which corresponds to an allowable value that a particular property can accept.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.CAFLT">
      <summary>Represents a counted array of FLOAT types.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CAFLT.cElems">
      <summary>The size of the array pointed to by <see cref="F:Microsoft.VisualStudio.OLE.Interop.CAFLT.pElems" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CAFLT.pElems">
      <summary>A pointer to an array of FLOAT types, each of which corresponds to an allowable value that a particular property can accept.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.CAH">
      <summary>Represents a counted array of LARGE_INTEGER types.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CAH.cElems">
      <summary>The size of the array pointed to by <see cref="F:Microsoft.VisualStudio.OLE.Interop.CAH.pElems" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CAH.pElems">
      <summary>A pointer to an array of LARGE_INTEGER types, each of which corresponds to an allowable value that a particular property can accept.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.CAI">
      <summary>Represents a counted array of SHORT types.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CAI.cElems">
      <summary>The size of the array pointed to by <see cref="F:Microsoft.VisualStudio.OLE.Interop.CAI.pElems" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CAI.pElems">
      <summary>A pointer to an array of SHORT types, each of which corresponds to an allowable value that a particular property can accept.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.CAL">
      <summary>Represents a counted array of LONG types.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CAL.cElems">
      <summary>The size of the array pointed to by <see cref="F:Microsoft.VisualStudio.OLE.Interop.CAL.pElems" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CAL.pElems">
      <summary>A pointer to an array of LONG types, each of which corresponds to an allowable value that a particular property can accept.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.CALLCONV">
      <summary>Identifies the calling convention used by a method described in a METHODDATA structure.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CALLCONV.CC_FASTCALL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CALLCONV.CC_CDECL">
      <summary>Indicates that the Cdecl calling convention is used for a method.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CALLCONV.CC_MSCPASCAL">
      <summary>Indicates that the Mscpascal calling convention is used for a method.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CALLCONV.CC_PASCAL">
      <summary>Indicates that the Pascal calling convention is used for a method.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CALLCONV.CC_MACPASCAL">
      <summary>Indicates that the Macpascal calling convention is used for a method.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CALLCONV.CC_STDCALL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CALLCONV.CC_FPFASTCALL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CALLCONV.CC_SYSCALL">
      <summary>Indicates that the Syscall calling convention is used for a method.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CALLCONV.CC_MPWCDECL">
      <summary>Indicates that the Mpwcdecl calling convention is used for a method.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CALLCONV.CC_MPWPASCAL">
      <summary>Indicates that the Mpwpascal calling convention is used for a method.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CALLCONV.CC_MAX">
      <summary>Indicates the end of the <see cref="T:Microsoft.VisualStudio.OLE.Interop.CALLCONV" /> enumeration.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.CALLTYPE">
      <summary>Specifies the call types used by <see cref="M:Microsoft.VisualStudio.OLE.Interop.IMessageFilter.HandleInComingCall(System.UInt32,System.IntPtr,System.UInt32,Microsoft.VisualStudio.OLE.Interop.INTERFACEINFO[])" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CALLTYPE.CALLTYPE_TOPLEVEL">
      <summary>Indicates that a top-level call has arrived and the object is not currently waiting for a reply from a previous outgoing call. Calls of this type should always be handled.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CALLTYPE.CALLTYPE_NESTED">
      <summary>Indicates that a call has arrived bearing the same logical thread identifier as that of a previous outgoing call for which the object is still awaiting a reply. Calls of this type should always be handled.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CALLTYPE.CALLTYPE_ASYNC">
      <summary>Indicates that an asynchronous call has arrived. Calls of this type cannot be rejected. OLE always delivers calls of this type. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CALLTYPE.CALLTYPE_TOPLEVEL_CALLPENDING">
      <summary>Indicates that a new top-level call has arrived with a new logical thread identifier and the object is currently waiting for a reply from a previous outgoing call. Calls of this type may be handled or rejected.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CALLTYPE.CALLTYPE_ASYNC_CALLPENDING">
      <summary>Indicates that an asynchronous call has arrived with a new logical thread identifier and the object is currently waiting for a reply from a previous outgoing call. Calls of this type cannot be rejected.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.CALPOLESTR">
      <summary>Represents a counted array of LPOLESTR types.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CALPOLESTR.cElems">
      <summary>Size of the array pointed to by <see cref="F:Microsoft.VisualStudio.OLE.Interop.CALPOLESTR.pElems" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CALPOLESTR.pElems">
      <summary>A pointer to an array of LPOLESTR values.  Each value corresponds to an allowable value that a particular property can accept.  The caller can use these string values in user interface elements, such as drop-down list boxes.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.CALPSTR">
      <summary>Represents a counted array of LPSTR types.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CALPSTR.cElems">
      <summary>The size of the array pointed to by <see cref="F:Microsoft.VisualStudio.OLE.Interop.CALPSTR.pElems" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CALPSTR.pElems">
      <summary>A pointer to an array of LPSTR types, each of which corresponds to an allowable value that a particular property can accept.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.CALPWSTR">
      <summary>Represents a counted array of LPWSTR types.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CALPWSTR.cElems">
      <summary>The size of the array pointed to by <see cref="F:Microsoft.VisualStudio.OLE.Interop.CALPWSTR.pElems" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CALPWSTR.pElems">
      <summary>A pointer to an array of LPWSTR types, each of which corresponds to an allowable value that a particular property can accept.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.CAPROPVARIANT">
      <summary>Represents a counted array of PROPVARIANT types.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CAPROPVARIANT.cElems">
      <summary>The size of the array pointed to by <see cref="F:Microsoft.VisualStudio.OLE.Interop.CAPROPVARIANT.pElems" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CAPROPVARIANT.pElems">
      <summary>A pointer to an array of PROPVARIANT types, each of which corresponds to an allowable value that a particular property can accept.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.CASCODE">
      <summary>Represents a counted array of SCODE types.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CASCODE.cElems">
      <summary>The size of the array pointed to by <see cref="F:Microsoft.VisualStudio.OLE.Interop.CASCODE.pElems" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CASCODE.pElems">
      <summary>A pointer to an array of SCODE types, each of which corresponds to an allowable value that a particular property can accept.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.CAUB">
      <summary>Represents a counted array of UCHAR types.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CAUB.cElems">
      <summary>The size of the array pointed to by <see cref="F:Microsoft.VisualStudio.OLE.Interop.CAUB.pElems" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CAUB.pElems">
      <summary>A pointer to an array of UCHAR types, each of which corresponds to an allowable value that a particular property can accept.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.CAUH">
      <summary>Represents a counted array of ULARGE_INTEGER types.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CAUH.cElems">
      <summary>The size of the array pointed to by <see cref="F:Microsoft.VisualStudio.OLE.Interop.CAUH.pElems" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CAUH.pElems">
      <summary>A pointer to an array of ULARGE_INTEGER types, each of which corresponds to an allowable value that a particular property can accept.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.CAUI">
      <summary>Represents a counted array of USHORT types.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CAUI.cElems">
      <summary>The size of the array pointed to by <see cref="F:Microsoft.VisualStudio.OLE.Interop.CAUI.pElems" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CAUI.pElems">
      <summary>A pointer to an array of USHORT types, each of which corresponds to an allowable value that a particular property can accept.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.CAUL">
      <summary>Represents a counted array of ULONG types.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CAUL.cElems">
      <summary>The size of the array pointed to by <see cref="F:Microsoft.VisualStudio.OLE.Interop.CAUL.pElems" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CAUL.pElems">
      <summary>A pointer to an array of ULONG types, each of which corresponds to an allowable value that a particular property can accept.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.CAUUID">
      <summary>Represents a counted array of UUID or GUID types.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CAUUID.cElems">
      <summary>The size of the array pointed to by <see cref="F:Microsoft.VisualStudio.OLE.Interop.CAUUID.pElems" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CAUUID.pElems">
      <summary>A pointer to an array of UUID values, each of which specifies a CLSID of a particular property page.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.CHANGEKIND"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CHANGEKIND.CHANGEKIND_ADDMEMBER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CHANGEKIND.CHANGEKIND_DELETEMEMBER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CHANGEKIND.CHANGEKIND_SETNAMES">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CHANGEKIND.CHANGEKIND_SETDOCUMENTATION">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CHANGEKIND.CHANGEKIND_GENERAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CHANGEKIND.CHANGEKIND_INVALIDATE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CHANGEKIND.CHANGEKIND_CHANGEFAILED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CHANGEKIND.CHANGEKIND_MAX">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.CIP_STATUS">
      <summary>Contains the various application installation or file download problem statuses.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CIP_STATUS.CIP_DISK_FULL">
      <summary>Indicates that the destination can accept no more data.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CIP_STATUS.CIP_ACCESS_DENIED">
      <summary>Indicates a permissions problem.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CIP_STATUS.CIP_NEWER_VERSION_EXISTS">
      <summary>Indicates that the destination contains a newer version than the source.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CIP_STATUS.CIP_OLDER_VERSION_EXISTS">
      <summary>Indicates that the destination contains an older version than the source.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CIP_STATUS.CIP_NAME_CONFLICT">
      <summary>Indicates that the destination does not allow the naming convention used by the source. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CIP_STATUS.CIP_TRUST_VERIFICATION_COMPONENT_MISSING">
      <summary>Indicates that the destination cannot verify the source. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CIP_STATUS.CIP_EXE_SELF_REGISTERATION_TIMEOUT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CIP_STATUS.CIP_UNSAFE_TO_ABORT">
      <summary>Indicates that the installation or download should not be aborted.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CIP_STATUS.CIP_NEED_REBOOT">
      <summary>Indicates that the destination machine requires rebooting.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.CLEANLOCALSTORAGE"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CLEANLOCALSTORAGE.Flags"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CLEANLOCALSTORAGE.pInterface"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CLEANLOCALSTORAGE.pStorage"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.CLIPDATA"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CLIPDATA.cbSize"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CLIPDATA.pClipData"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CLIPDATA.ulClipFmt"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.CLSCTX">
      <summary>Represents the class context.  Used to determine what scope and type of class object to use.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CLSCTX.CLSCTX_INPROC_SERVER">
      <summary>Indicates a remote server executable, which runs on a different machine. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CLSCTX.CLSCTX_INPROC_HANDLER">
      <summary>Indicates a handler dll, which runs on the same process as the caller.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CLSCTX.CLSCTX_LOCAL_SERVER">
      <summary>Indicates a server executable, which runs on the same machine but on a different process than the caller. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CLSCTX.CLSCTX_INPROC_SERVER16">
      <summary>Indicates a 16-bit server dll, which runs on the same process as the caller.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CLSCTX.CLSCTX_REMOTE_SERVER">
      <summary>Indicates a server executable, which runs on a different machine than the caller.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CLSCTX.CLSCTX_INPROC_HANDLER16">
      <summary>Indicates a 16-bit handler dll, which runs on the same process as the caller.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CLSCTX.CLSCTX_RESERVED1">
      <summary>Reserved.  Formerly INPROC_SERVERX86.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CLSCTX.CLSCTX_RESERVED2">
      <summary>Reserved.  Formerly INPROC_HANDLERX86.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CLSCTX.CLSCTX_RESERVED3">
      <summary>Reserved.  Formerly ESERV_HANDLER.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CLSCTX.CLSCTX_RESERVED4">
      <summary>Reserved.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CLSCTX.CLSCTX_NO_CODE_DOWNLOAD">
      <summary>Indicates that code should not be allowed to be downloaded from the Directory Service (if any) or the Internet.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CLSCTX.CLSCTX_RESERVED5">
      <summary>Reserved. Formerly NO_WX86_TRANSLATION.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CLSCTX.CLSCTX_NO_CUSTOM_MARSHAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CLSCTX.CLSCTX_ENABLE_CODE_DOWNLOAD">
      <summary>Indicates that code should be allowed to be downloaded from the Directory Service (if any) or the Internet.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CLSCTX.CLSCTX_NO_FAILURE_LOG">
      <summary>Indicates that no log messages about activation failure should be written to the Event Log.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CLSCTX.CLSCTX_DISABLE_AAA">
      <summary>Indicates that activate-as-activator capability is disabled for this activation only.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CLSCTX.CLSCTX_ENABLE_AAA">
      <summary>Indicates that activate-as-activator capability is enabled for this activation only.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CLSCTX.CLSCTX_FROM_DEFAULT_CONTEXT">
      <summary>Indicates that activation should begin from the default context of the current apartment.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.COAUTHIDENTITY">
      <summary>Represents a user name and password.  A pointer to a <see cref="T:Microsoft.VisualStudio.OLE.Interop.COAUTHIDENTITY" /> structure is a member of the <see cref="T:Microsoft.VisualStudio.OLE.Interop.COAUTHINFO" /> structure, which specifies authentication settings for remote activation requests.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.COAUTHIDENTITY.Domain">
      <summary>Represents a string containing the domain or workgroup name.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.COAUTHIDENTITY.DomainLength">
      <summary>Represents the length of the <see cref="F:Microsoft.VisualStudio.OLE.Interop.COAUTHIDENTITY.Domain" /> string, without the terminating NULL.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.COAUTHIDENTITY.Flags">
      <summary>Represents values indicating that strings are ANSI (0x1) or Unicode (0x2).  This value can be SEC_WINNT_AUTH_IDENTITY_ANSI or SEC_WINNT_AUTH_IDENTITY_UNICODE.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.COAUTHIDENTITY.Password">
      <summary>Represents the string containing the user's password in the domain or workgroup.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.COAUTHIDENTITY.PasswordLength">
      <summary>Represents the length of the <see cref="F:Microsoft.VisualStudio.OLE.Interop.COAUTHIDENTITY.Password" /> string, without the terminating NULL.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.COAUTHIDENTITY.User">
      <summary>Represents a string containing the user's name.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.COAUTHIDENTITY.UserLength">
      <summary>Represents the length of the <see cref="F:Microsoft.VisualStudio.OLE.Interop.COAUTHIDENTITY.User" /> string, without the terminating NULL.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.COAUTHINFO"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.COAUTHINFO.dwAuthnLevel"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.COAUTHINFO.dwAuthnSvc"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.COAUTHINFO.dwAuthzSvc"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.COAUTHINFO.dwCapabilities"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.COAUTHINFO.dwImpersonationLevel"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.COAUTHINFO.pAuthIdentityData"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.COAUTHINFO.pwszServerPrincName"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.CONNECTDATA"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CONNECTDATA.dwCookie"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CONNECTDATA.punk"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.Constants"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.OLECMDSTATE_DISABLED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.OLECMDSTATE_UP">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.OLECMDSTATE_DOWN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.OLECMDSTATE_NINCHED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.OLECMDSTATE_INVISIBLE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.OLECONTEXT_NULLMENU">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.MSOCMDSTATE_DISABLED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.MSOCMDSTATE_UP">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.MSOCMDSTATE_DOWN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.MSOCMDSTATE_NINCHED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.MSOCMDSTATE_INVISIBLE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.OLECMDERR_E_FIRST">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.OLECMDERR_E_NOTSUPPORTED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.OLECMDERR_E_DISABLED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.OLECMDERR_E_NOHELP">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.OLECMDERR_E_CANCELED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.OLECMDERR_E_UNKNOWNGROUP">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.MSOCMDERR_E_FIRST">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.MSOCMDERR_E_NOTSUPPORTED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.MSOCMDERR_E_DISABLED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.MSOCMDERR_E_NOHELP">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.MSOCMDERR_E_CANCELED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.MSOCMDERR_E_UNKNOWNGROUP">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.MSOCMDF_SUPPORTED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.MSOCMDF_ENABLED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.MSOCMDF_LATCHED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.MSOCMDF_NINCHED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.MSOCMDTEXTF_NONE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.MSOCMDTEXTF_NAME">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.MSOCMDTEXTF_STATUS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.MSOCMDEXECOPT_DODEFAULT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.MSOCMDEXECOPT_PROMPTUSER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.MSOCMDEXECOPT_DONTPROMPTUSER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.MSOCMDEXECOPT_SHOWHELP">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.MSOCMDID_OPEN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.MSOCMDID_NEW">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.MSOCMDID_SAVE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.MSOCMDID_SAVEAS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.MSOCMDID_SAVECOPYAS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.MSOCMDID_PRINT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.MSOCMDID_PRINTPREVIEW">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.MSOCMDID_PAGESETUP">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.MSOCMDID_SPELL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.MSOCMDID_PROPERTIES">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.MSOCMDID_CUT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.MSOCMDID_COPY">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.MSOCMDID_PASTE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.MSOCMDID_PASTESPECIAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.MSOCMDID_UNDO">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.MSOCMDID_REDO">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.MSOCMDID_SELECTALL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.MSOCMDID_CLEARSELECTION">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.MSOCMDID_ZOOM">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.MSOCMDID_GETZOOMRANGE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.PROPSETHDR_OSVERSION_UNKNOWN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.Constants.CCH_MAX_PROPSTG_NAME">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.CONTROLINFO"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CONTROLINFO.cAccel"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CONTROLINFO.cb"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CONTROLINFO.dwFlags"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CONTROLINFO.haccel"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.COSERVERINFO"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.COSERVERINFO.dwReserved1"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.COSERVERINFO.dwReserved2"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.COSERVERINFO.pAuthInfo"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.COSERVERINFO.pwszName"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.CTRLINFO"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CTRLINFO.CTRLINFO_EATS_RETURN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CTRLINFO.CTRLINFO_EATS_ESCAPE">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.CUSTDATA"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CUSTDATA.cCustData"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CUSTDATA.prgCustData"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.CUSTDATAITEM"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CUSTDATAITEM.guid"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.CUSTDATAITEM.varValue"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.DATADIR"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.DATADIR.DATADIR_GET">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.DATADIR.DATADIR_SET">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.DCOM_CALL_STATE"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.DCOM_CALL_STATE.DCOM_NONE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.DCOM_CALL_STATE.DCOM_CALL_COMPLETE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.DCOM_CALL_STATE.DCOM_CALL_CANCELED">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.DESCKIND"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.DESCKIND.DESCKIND_NONE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.DESCKIND.DESCKIND_FUNCDESC">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.DESCKIND.DESCKIND_VARDESC">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.DESCKIND.DESCKIND_TYPECOMP">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.DESCKIND.DESCKIND_IMPLICITAPPOBJ">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.DESCKIND.DESCKIND_MAX">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.DISCARDCACHE"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.DISCARDCACHE.DISCARDCACHE_SAVEIFDIRTY">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.DISCARDCACHE.DISCARDCACHE_NOSAVE">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.DISPPARAMS"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.DISPPARAMS.cArgs"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.DISPPARAMS.cNamedArgs"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.DISPPARAMS.rgdispidNamedArgs"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.DISPPARAMS.rgvarg"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.DOCMISC"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.DOCMISC.DOCMISC_CANCREATEMULTIPLEVIEWS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.DOCMISC.DOCMISC_SUPPORTCOMPLEXRECTANGLES">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.DOCMISC.DOCMISC_CANTOPENEDIT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.DOCMISC.DOCMISC_NOFILESUPPORT">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.DVASPECT"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.DVASPECT.DVASPECT_CONTENT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.DVASPECT.DVASPECT_THUMBNAIL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.DVASPECT.DVASPECT_ICON">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.DVASPECT.DVASPECT_DOCPRINT">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.DVASPECT2"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.DVASPECT2.DVASPECT_OPAQUE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.DVASPECT2.DVASPECT_TRANSPARENT">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.DVASPECTINFOFLAG"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.DVASPECTINFOFLAG.DVASPECTINFOFLAG_CANOPTIMIZE">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.DVEXTENTINFO"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.DVEXTENTINFO.cb"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.DVEXTENTINFO.dwExtentMode"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.DVEXTENTINFO.sizelProposed"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.DVEXTENTMODE"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.DVEXTENTMODE.DVEXTENT_CONTENT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.DVEXTENTMODE.DVEXTENT_INTEGRAL">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.DVTARGETDEVICE"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.DVTARGETDEVICE.tdData"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.DVTARGETDEVICE.tdDeviceNameOffset"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.DVTARGETDEVICE.tdDriverNameOffset"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.DVTARGETDEVICE.tdExtDevmodeOffset"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.DVTARGETDEVICE.tdPortNameOffset"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.DVTARGETDEVICE.tdSize"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.ELEMDESC"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.ELEMDESC.PARAMDESC"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.ELEMDESC.tdesc"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.EOLE_AUTHENTICATION_CAPABILITIES"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.EOLE_AUTHENTICATION_CAPABILITIES.EOAC_NONE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.EOLE_AUTHENTICATION_CAPABILITIES.EOAC_MUTUAL_AUTH">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.EOLE_AUTHENTICATION_CAPABILITIES.EOAC_STATIC_CLOAKING">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.EOLE_AUTHENTICATION_CAPABILITIES.EOAC_DYNAMIC_CLOAKING">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.EOLE_AUTHENTICATION_CAPABILITIES.EOAC_ANY_AUTHORITY">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.EOLE_AUTHENTICATION_CAPABILITIES.EOAC_MAKE_FULLSIC">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.EOLE_AUTHENTICATION_CAPABILITIES.EOAC_DEFAULT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.EOLE_AUTHENTICATION_CAPABILITIES.EOAC_SECURE_REFS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.EOLE_AUTHENTICATION_CAPABILITIES.EOAC_ACCESS_CONTROL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.EOLE_AUTHENTICATION_CAPABILITIES.EOAC_APPID">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.EOLE_AUTHENTICATION_CAPABILITIES.EOAC_DYNAMIC">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.EOLE_AUTHENTICATION_CAPABILITIES.EOAC_REQUIRE_FULLSIC">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.EOLE_AUTHENTICATION_CAPABILITIES.EOAC_AUTO_IMPERSONATE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.EOLE_AUTHENTICATION_CAPABILITIES.EOAC_NO_CUSTOM_MARSHAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.EOLE_AUTHENTICATION_CAPABILITIES.EOAC_DISABLE_AAA">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.EXCEPINFO"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.EXCEPINFO.bstrDescription"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.EXCEPINFO.bstrHelpFile"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.EXCEPINFO.bstrSource"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.EXCEPINFO.dwHelpContext"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.EXCEPINFO.pfnDeferredFillIn"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.EXCEPINFO.pvReserved"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.EXCEPINFO.scode"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.EXCEPINFO.wCode"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.EXCEPINFO.wReserved"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.EXTCONN"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.EXTCONN.EXTCONN_STRONG">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.EXTCONN.EXTCONN_WEAK">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.EXTCONN.EXTCONN_CALLABLE">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.FILETIME"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.FILETIME.dwHighDateTime"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.FILETIME.dwLowDateTime"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.FORMATETC"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.FORMATETC.cfFormat"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.FORMATETC.dwAspect"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.FORMATETC.lindex"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.FORMATETC.ptd"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.FORMATETC.tymed"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.FUNCDESC"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.FUNCDESC.CALLCONV"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.FUNCDESC.cParams"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.FUNCDESC.cParamsOpt"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.FUNCDESC.cScodes"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.FUNCDESC.elemdescFunc"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.FUNCDESC.FUNCKIND"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.FUNCDESC.invkind"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.FUNCDESC.lprgelemdescParam"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.FUNCDESC.lprgscode"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.FUNCDESC.memid"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.FUNCDESC.oVft"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.FUNCDESC.wFuncFlags"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.FUNCFLAGS"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.FUNCFLAGS.FUNCFLAG_FRESTRICTED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.FUNCFLAGS.FUNCFLAG_FSOURCE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.FUNCFLAGS.FUNCFLAG_FBINDABLE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.FUNCFLAGS.FUNCFLAG_FREQUESTEDIT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.FUNCFLAGS.FUNCFLAG_FDISPLAYBIND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.FUNCFLAGS.FUNCFLAG_FDEFAULTBIND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.FUNCFLAGS.FUNCFLAG_FHIDDEN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.FUNCFLAGS.FUNCFLAG_FUSESGETLASTERROR">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.FUNCFLAGS.FUNCFLAG_FDEFAULTCOLLELEM">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.FUNCFLAGS.FUNCFLAG_FUIDEFAULT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.FUNCFLAGS.FUNCFLAG_FNONBROWSABLE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.FUNCFLAGS.FUNCFLAG_FREPLACEABLE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.FUNCFLAGS.FUNCFLAG_FIMMEDIATEBIND">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.FUNCKIND"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.FUNCKIND.FUNC_VIRTUAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.FUNCKIND.FUNC_PUREVIRTUAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.FUNCKIND.FUNC_NONVIRTUAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.FUNCKIND.FUNC_STATIC">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.FUNCKIND.FUNC_DISPATCH">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.GUIDKIND"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.GUIDKIND.GUIDKIND_DEFAULT_SOURCE_DISP_IID">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.HITRESULT"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.HITRESULT.HITRESULT_OUTSIDE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.HITRESULT.HITRESULT_TRANSPARENT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.HITRESULT.HITRESULT_CLOSE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.HITRESULT.HITRESULT_HIT">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IAddrExclusionControl"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IAddrExclusionControl.GetCurrentAddrExclusionList(System.Guid@,System.IntPtr@)">
      <param name="riid"></param>
      <param name="ppEnumerator"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IAddrExclusionControl.UpdateAddrExclusionList(System.Object)">
      <param name="pEnumerator"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IAddrTrackingControl"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IAddrTrackingControl.DisableCOMDynamicAddrTracking"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IAddrTrackingControl.EnableCOMDynamicAddrTracking"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IAdviseSink">
      <summary>Enables containers and other objects to receive notice of changes. Standard OLE interface. For more information, see IAdviseSink.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IAdviseSink.OnClose"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IAdviseSink.OnDataChange(Microsoft.VisualStudio.OLE.Interop.FORMATETC[],Microsoft.VisualStudio.OLE.Interop.STGMEDIUM[])">
      <param name="pFormatetc"></param>
      <param name="pStgmed"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IAdviseSink.OnRename(Microsoft.VisualStudio.OLE.Interop.IMoniker)">
      <param name="pmk"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IAdviseSink.OnSave"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IAdviseSink.OnViewChange(System.UInt32,System.Int32)">
      <param name="dwAspect"></param>
      <param name="lindex"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IAdviseSink2">
      <summary>Extends and inherits from <see cref="T:Microsoft.VisualStudio.OLE.Interop.IAdviseSink" />. Supports an additional notification. Standard OLE interface. For more information, see IAdviseSink2.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IAdviseSink2.OnClose"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IAdviseSink2.OnDataChange(Microsoft.VisualStudio.OLE.Interop.FORMATETC[],Microsoft.VisualStudio.OLE.Interop.STGMEDIUM[])">
      <param name="pFormatetc"> </param>
      <param name="pStgmed"> </param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IAdviseSink2.OnLinkSrcChange(Microsoft.VisualStudio.OLE.Interop.IMoniker)">
      <param name="pmk"> </param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IAdviseSink2.OnRename(Microsoft.VisualStudio.OLE.Interop.IMoniker)">
      <param name="pmk"> </param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IAdviseSink2.OnSave"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IAdviseSink2.OnViewChange(System.UInt32,System.Int32)">
      <param name="dwAspect"> </param>
      <param name="lindex"> </param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IAdviseSinkEx">
      <summary>Extends <see cref="T:Microsoft.VisualStudio.OLE.Interop.IAdviseSink" /> to provide notification of changes in an object's view status. Standard OLE interface. For more information, see IAdviseSinkEx.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IAdviseSinkEx.OnClose"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IAdviseSinkEx.OnDataChange(Microsoft.VisualStudio.OLE.Interop.FORMATETC[],Microsoft.VisualStudio.OLE.Interop.STGMEDIUM[])">
      <param name="pFormatetc"></param>
      <param name="pStgmed"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IAdviseSinkEx.OnRename(Microsoft.VisualStudio.OLE.Interop.IMoniker)">
      <param name="pmk"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IAdviseSinkEx.OnSave"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IAdviseSinkEx.OnViewChange(System.UInt32,System.Int32)">
      <param name="dwAspect"></param>
      <param name="lindex"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IAdviseSinkEx.OnViewStatusChange(System.UInt32)">
      <param name="dwViewStatus"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IAsyncManager">
      <summary>Monitors an asynchronous distributed COM (DCOM) call. Used as an argument in the <see cref="M:Microsoft.VisualStudio.OLE.Interop.IRpcChannelBuffer3.RegisterAsync(Microsoft.VisualStudio.OLE.Interop.RPCOLEMESSAGE[],Microsoft.VisualStudio.OLE.Interop.IAsyncManager)" /> method of the <see cref="T:Microsoft.VisualStudio.OLE.Interop.IRpcChannelBuffer3" /> interface.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IAsyncManager.CompleteCall(System.Int32)">
      <param name="Result"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IAsyncManager.GetCallContext(System.Guid@,System.IntPtr@)">
      <param name="riid"></param>
      <param name="pInterface"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IAsyncManager.GetState(System.UInt32@)">
      <param name="pulStateFlags"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IAsyncRpcChannelBuffer">
      <summary>Manages a buffer for a remote procedure call. Used for asynchronous distributed COM (DCOM) calls. For more information about remote invocation, see Standard Marshaling and Write Your Own Transport for COM Calls Leveraging the Power of Late Binding.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IAsyncRpcChannelBuffer.FreeBuffer(Microsoft.VisualStudio.OLE.Interop.RPCOLEMESSAGE[])">
      <param name="pMessage"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IAsyncRpcChannelBuffer.GetBuffer(Microsoft.VisualStudio.OLE.Interop.RPCOLEMESSAGE[],System.Guid@)">
      <param name="pMessage"></param>
      <param name="riid"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IAsyncRpcChannelBuffer.GetDestCtx(System.UInt32@,System.IntPtr@)">
      <param name="pdwDestContext"></param>
      <param name="ppvDestContext"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IAsyncRpcChannelBuffer.GetDestCtxEx(Microsoft.VisualStudio.OLE.Interop.RPCOLEMESSAGE[],System.UInt32@,System.IntPtr@)">
      <param name="pMsg"></param>
      <param name="pdwDestContext"></param>
      <param name="ppvDestContext"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IAsyncRpcChannelBuffer.GetProtocolVersion(System.UInt32@)">
      <param name="pdwVersion"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IAsyncRpcChannelBuffer.IsConnected"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IAsyncRpcChannelBuffer.Receive(Microsoft.VisualStudio.OLE.Interop.RPCOLEMESSAGE[],System.UInt32@)">
      <param name="pMsg"></param>
      <param name="pulStatus"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IAsyncRpcChannelBuffer.Send(Microsoft.VisualStudio.OLE.Interop.RPCOLEMESSAGE[],Microsoft.VisualStudio.OLE.Interop.ISynchronize,System.UInt32@)">
      <param name="pMsg"></param>
      <param name="pSync"></param>
      <param name="pulStatus"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IAsyncRpcChannelBuffer.SendReceive(Microsoft.VisualStudio.OLE.Interop.RPCOLEMESSAGE[],System.UInt32@)">
      <param name="pMessage"></param>
      <param name="pStatus"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IBindCtx">
      <summary>Accumulates information about objects bound in a particular operation but that need to be released at the end of the operation. Commonly used in operations involving moniker binding. Standard COM interface. For more information, see IBindCtx.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IBindCtx.EnumObjectParam(Microsoft.VisualStudio.OLE.Interop.IEnumString@)">
      <param name="ppEnum"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IBindCtx.GetBindOptions(Microsoft.VisualStudio.OLE.Interop.BIND_OPTS2[])">
      <param name="pbindopts"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IBindCtx.GetObjectParam(System.String,System.Object@)">
      <param name="pszKey"></param>
      <param name="ppunk"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IBindCtx.GetRunningObjectTable(Microsoft.VisualStudio.OLE.Interop.IRunningObjectTable@)">
      <param name="pprot"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IBindCtx.RegisterObjectBound(System.Object)">
      <param name="punk"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IBindCtx.RegisterObjectParam(System.String,System.Object)">
      <param name="pszKey"></param>
      <param name="punk"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IBindCtx.ReleaseBoundObjects"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IBindCtx.RevokeObjectBound(System.Object)">
      <param name="punk"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IBindCtx.RevokeObjectParam(System.String)">
      <param name="pszKey"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IBindCtx.SetBindOptions(Microsoft.VisualStudio.OLE.Interop.BIND_OPTS2[])">
      <param name="pbindopts"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IBindHost">
      <summary>Implemented by a container to enable hosted objects to do asynchronous data transfers through the container. For more information, see IBindHost and About Cooperative and Asynchronous Data Retrieval.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IBindHost.CreateMoniker(System.String,Microsoft.VisualStudio.OLE.Interop.IBindCtx,Microsoft.VisualStudio.OLE.Interop.IMoniker@,System.UInt32)">
      <param name="szName"></param>
      <param name="pbc"></param>
      <param name="ppmk"></param>
      <param name="dwReserved"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IBindHost.MonikerBindToObject(Microsoft.VisualStudio.OLE.Interop.IMoniker,Microsoft.VisualStudio.OLE.Interop.IBindCtx,Microsoft.VisualStudio.OLE.Interop.IBindStatusCallback,System.Guid@,System.Object@)">
      <param name="pmk"></param>
      <param name="pbc"></param>
      <param name="pBSC"></param>
      <param name="riid"></param>
      <param name="ppvObj"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IBindHost.MonikerBindToStorage(Microsoft.VisualStudio.OLE.Interop.IMoniker,Microsoft.VisualStudio.OLE.Interop.IBindCtx,Microsoft.VisualStudio.OLE.Interop.IBindStatusCallback,System.Guid@,System.Object@)">
      <param name="pmk"></param>
      <param name="pbc"></param>
      <param name="pBSC"></param>
      <param name="riid"></param>
      <param name="ppvObj"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IBinding">
      <summary>Enables a client program using an asynchronous moniker to control the progress of a bind operation. Used as an argument in the <see cref="M:Microsoft.VisualStudio.OLE.Interop.IBindStatusCallback.OnStartBinding(System.UInt32,Microsoft.VisualStudio.OLE.Interop.IBinding)" /> method of the <see cref="T:Microsoft.VisualStudio.OLE.Interop.IBindStatusCallback" /> interface. For more information, see IBinding and About Cooperative and Asynchronous Data Retrieval.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IBinding.Abort"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IBinding.GetBindResult(System.Guid@,System.UInt32@,System.IntPtr,System.UInt32)">
      <param name="pclsidProtocol"></param>
      <param name="pdwResult"></param>
      <param name="pszResult"></param>
      <param name="dwReserved"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IBinding.GetPriority(System.Int32@)">
      <param name="pnPriority"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IBinding.Resume"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IBinding.SetPriority(System.Int32)">
      <param name="nPriority"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IBinding.Suspend"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IBindStatusCallback">
      <summary>Provides information about and defines callback methods for monitoring an asynchronous binding operation. For more information, see About Cooperative and Asynchronous Data Retrieval and IBindStatusCallback.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IBindStatusCallback.GetBindInfo(System.UInt32@,Microsoft.VisualStudio.OLE.Interop.BINDINFO[])">
      <param name="grfBINDF"></param>
      <param name="pbindinfo"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IBindStatusCallback.GetPriority(System.Int32@)">
      <param name="pnPriority"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IBindStatusCallback.OnDataAvailable(System.UInt32,System.UInt32,Microsoft.VisualStudio.OLE.Interop.FORMATETC[],Microsoft.VisualStudio.OLE.Interop.STGMEDIUM[])">
      <param name="grfBSCF"></param>
      <param name="dwSize"></param>
      <param name="pFormatetc"></param>
      <param name="pStgmed"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IBindStatusCallback.OnLowResource(System.UInt32)">
      <param name="reserved"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IBindStatusCallback.OnObjectAvailable(System.Guid@,System.Object)">
      <param name="riid"></param>
      <param name="punk"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IBindStatusCallback.OnProgress(System.UInt32,System.UInt32,System.UInt32,System.String)">
      <param name="ulProgress"></param>
      <param name="ulProgressMax"></param>
      <param name="ulStatusCode"></param>
      <param name="szStatusText"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IBindStatusCallback.OnStartBinding(System.UInt32,Microsoft.VisualStudio.OLE.Interop.IBinding)">
      <param name="dwReserved"></param>
      <param name="pib"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IBindStatusCallback.OnStopBinding(System.Int32,System.String)">
      <param name="hresult"></param>
      <param name="szError"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IBlockingLock">
      <summary>Provides a semaphore to enable temporary exclusive access to a resource. For more information, see IBlockingLock.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IBlockingLock.Lock(System.UInt32)">
      <param name="dwTimeout"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IBlockingLock.Unlock"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.ICallFactory">
      <summary>Creates an object for processing method calls on asynchronous interfaces. For more information, see ICallFactory and Making and Processing Asynchronous Calls.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ICallFactory.CreateCall(System.Guid@,System.Object,System.Guid@,System.Object@)">
      <param name="riid"></param>
      <param name="pCtrlUnk"></param>
      <param name="riid2"></param>
      <param name="ppv"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.ICancelMethodCalls">
      <summary>Manages method call cancellation requests. For more information, see Non-Blocking Method Calls and ICancelMethodCalls.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ICancelMethodCalls.Cancel(System.UInt32)">
      <param name="ulSeconds"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ICancelMethodCalls.TestCancel"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IChannelHook">
      <summary>Provides a mechanism to intercept and modify calls when the COM engine processes the calls.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IChannelHook.ClientFillBuffer(System.Guid@,System.Guid@,System.UInt32@,System.IntPtr)">
      <param name="uExtent"></param>
      <param name="riid"></param>
      <param name="pDataSize"></param>
      <param name="pDataBuffer"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IChannelHook.ClientGetSize(System.Guid@,System.Guid@,System.UInt32@)">
      <param name="uExtent"></param>
      <param name="riid"></param>
      <param name="pDataSize"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IChannelHook.ClientNotify(System.Guid@,System.Guid@,System.UInt32,System.IntPtr,System.UInt32,System.Int32)">
      <param name="uExtent"></param>
      <param name="riid"></param>
      <param name="cbDataSize"></param>
      <param name="pDataBuffer"></param>
      <param name="lDataRep"></param>
      <param name="hrFault"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IChannelHook.ServerFillBuffer(System.Guid@,System.Guid@,System.UInt32@,System.IntPtr,System.Int32)">
      <param name="uExtent"></param>
      <param name="riid"></param>
      <param name="pDataSize"></param>
      <param name="pDataBuffer"></param>
      <param name="hrFault"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IChannelHook.ServerGetSize(System.Guid@,System.Guid@,System.Int32,System.UInt32@)">
      <param name="uExtent"></param>
      <param name="riid"></param>
      <param name="hrFault"></param>
      <param name="pDataSize"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IChannelHook.ServerNotify(System.Guid@,System.Guid@,System.UInt32,System.IntPtr,System.UInt32)">
      <param name="uExtent"></param>
      <param name="riid"></param>
      <param name="cbDataSize"></param>
      <param name="pDataBuffer"></param>
      <param name="lDataRep"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IClassActivator">
      <summary>Retrieves a class object. Not used.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IClassActivator.GetClassObject(System.Guid@,System.UInt32,System.UInt32,System.Guid@,System.IntPtr@)">
      <param name="rclsid"></param>
      <param name="dwClassContext"></param>
      <param name="locale"></param>
      <param name="riid"></param>
      <param name="ppv"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IClassFactory">
      <summary>Creates an instance of a class of a specific type. For more information, see IClassFactory.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IClassFactory.CreateInstance(System.Guid@,System.Object@)">
      <param name="riid"></param>
      <param name="ppvObject"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IClassFactory.LockServer(System.Int32)">
      <param name="fLock"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IClassFactory2">
      <summary>Creates an instance of a specified class. Supports licensing. Extends and inherits from <see cref="T:Microsoft.VisualStudio.OLE.Interop.IClassFactory" />. For more information, see IClassFactory2.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IClassFactory2.CreateInstance(System.Guid@,System.Object@)">
      <param name="riid"></param>
      <param name="ppvObject"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IClassFactory2.CreateInstanceLic(System.Guid@,System.String,System.Object@)">
      <param name="riid"></param>
      <param name="bstrKey"></param>
      <param name="ppvObj"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IClassFactory2.GetLicInfo(Microsoft.VisualStudio.OLE.Interop.LICINFO[])">
      <param name="pLicInfo"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IClassFactory2.LockServer(System.Int32)">
      <param name="fLock"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IClassFactory2.RequestLicKey(System.UInt32,System.String@)">
      <param name="dwReserved"></param>
      <param name="pBstrKey"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IClientSecurity">
      <summary>Gets or sets the security settings of an interface proxy or copies the proxy. For more information, see IClientSecurity.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IClientSecurity.CopyProxy(System.Object,System.Object@)">
      <param name="pProxy"></param>
      <param name="ppCopy"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IClientSecurity.QueryBlanket(System.Object,System.UInt32@,System.UInt32@,System.IntPtr,System.UInt32@,System.UInt32@,System.IntPtr@,System.UInt32@)">
      <param name="pProxy"></param>
      <param name="pAuthnSvc"></param>
      <param name="pAuthzSvc"></param>
      <param name="pServerPrincName"></param>
      <param name="pAuthnLevel"></param>
      <param name="pImpLevel"></param>
      <param name="pAuthInfo"></param>
      <param name="pCapabilites"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IClientSecurity.SetBlanket(System.Object,System.UInt32,System.UInt32,System.String,System.UInt32,System.UInt32,System.IntPtr,System.UInt32)">
      <param name="pProxy"></param>
      <param name="dwAuthnSvc"></param>
      <param name="dwAuthzSvc"></param>
      <param name="pServerPrincName"></param>
      <param name="dwAuthnLevel"></param>
      <param name="dwImpLevel"></param>
      <param name="pAuthInfo"></param>
      <param name="dwCapabilities"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IComThreadingInfo">
      <summary>Provides information about the caller's execution thread, including thread and apartment type. For more information, see IComThreadingInfo.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IComThreadingInfo.GetCurrentApartmentType(Microsoft.VisualStudio.OLE.Interop.APTTYPE[])">
      <param name="pAptType"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IComThreadingInfo.GetCurrentLogicalThreadId(System.Guid@)">
      <param name="pguidLogicalThreadId"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IComThreadingInfo.GetCurrentThreadType(Microsoft.VisualStudio.OLE.Interop.THDTYPE[])">
      <param name="pThreadType"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IComThreadingInfo.SetCurrentLogicalThreadId(System.Guid@)">
      <param name="rguid"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IConnectionPoint">
      <summary>Supports connection points for connectable objects. For more information, see IConnectionPoint.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IConnectionPoint.Advise(System.Object,System.UInt32@)">
      <param name="pUnkSink"></param>
      <param name="pdwCookie"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IConnectionPoint.EnumConnections(Microsoft.VisualStudio.OLE.Interop.IEnumConnections@)">
      <param name="ppEnum"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IConnectionPoint.GetConnectionInterface(System.Guid@)">
      <param name="pIID"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IConnectionPoint.GetConnectionPointContainer(Microsoft.VisualStudio.OLE.Interop.IConnectionPointContainer@)">
      <param name="ppCPC"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IConnectionPoint.Unadvise(System.UInt32)">
      <param name="dwCookie"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IConnectionPointContainer">
      <summary>Supports connection points for connectable objects. Indicates to a client that the object is connectable and provides the <see cref="T:Microsoft.VisualStudio.OLE.Interop.IConnectionPoint" /> interface. For more information, see IConnectionPointContainer.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IConnectionPointContainer.EnumConnectionPoints(Microsoft.VisualStudio.OLE.Interop.IEnumConnectionPoints@)">
      <param name="ppEnum"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IConnectionPointContainer.FindConnectionPoint(System.Guid@,Microsoft.VisualStudio.OLE.Interop.IConnectionPoint@)">
      <param name="riid"></param>
      <param name="ppCP"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IContinue">
      <summary>Indicates whether or not to continue an operation. Used with remote procedure calls.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IContinue.FContinue"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IContinueCallback">
      <summary>Provides a generic callback mechanism for interruptible processes that need to ask an object whether or not to continue. For more information, see IContinueCallback.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IContinueCallback.FContinue"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IContinueCallback.FContinuePrinting(System.Int32,System.Int32,System.String)">
      <param name="nCntPrinted"></param>
      <param name="nCurPage"></param>
      <param name="pwszPrintStatus"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IDataAdviseHolder">
      <summary>Creates and manages advisory connections between a data object and one or more advise sinks. Implements the advisory methods of <see cref="T:Microsoft.VisualStudio.OLE.Interop.IDataObject" />. For more information, see IDataAdviseHolder.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IDataAdviseHolder.Advise(Microsoft.VisualStudio.OLE.Interop.IDataObject,Microsoft.VisualStudio.OLE.Interop.FORMATETC[],System.UInt32,Microsoft.VisualStudio.OLE.Interop.IAdviseSink,System.UInt32@)">
      <param name="pDataObject"></param>
      <param name="pFetc"></param>
      <param name="ADVF"></param>
      <param name="pAdvise"></param>
      <param name="pdwConnection"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IDataAdviseHolder.EnumAdvise(Microsoft.VisualStudio.OLE.Interop.IEnumSTATDATA@)">
      <param name="ppenumAdvise"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IDataAdviseHolder.SendOnDataChange(Microsoft.VisualStudio.OLE.Interop.IDataObject,System.UInt32,System.UInt32)">
      <param name="pDataObject"></param>
      <param name="dwReserved"></param>
      <param name="ADVF"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IDataAdviseHolder.Unadvise(System.UInt32)">
      <param name="dwConnection"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IDataObject">
      <summary>Enables transfer and notification of changes in data. For more information, see IDataObject.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IDataObject.DAdvise(Microsoft.VisualStudio.OLE.Interop.FORMATETC[],System.UInt32,Microsoft.VisualStudio.OLE.Interop.IAdviseSink,System.UInt32@)">
      <param name="pFormatetc"></param>
      <param name="ADVF"></param>
      <param name="pAdvSink"></param>
      <param name="pdwConnection"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IDataObject.DUnadvise(System.UInt32)">
      <param name="dwConnection"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IDataObject.EnumDAdvise(Microsoft.VisualStudio.OLE.Interop.IEnumSTATDATA@)">
      <param name="ppenumAdvise"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IDataObject.EnumFormatEtc(System.UInt32,Microsoft.VisualStudio.OLE.Interop.IEnumFORMATETC@)">
      <param name="dwDirection"></param>
      <param name="ppenumFormatEtc"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IDataObject.GetCanonicalFormatEtc(Microsoft.VisualStudio.OLE.Interop.FORMATETC[],Microsoft.VisualStudio.OLE.Interop.FORMATETC[])">
      <param name="pformatectIn"></param>
      <param name="pformatetcOut"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IDataObject.GetData(Microsoft.VisualStudio.OLE.Interop.FORMATETC[],Microsoft.VisualStudio.OLE.Interop.STGMEDIUM[])">
      <param name="pformatetcIn"></param>
      <param name="pRemoteMedium"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IDataObject.GetDataHere(Microsoft.VisualStudio.OLE.Interop.FORMATETC[],Microsoft.VisualStudio.OLE.Interop.STGMEDIUM[])">
      <param name="pFormatetc"></param>
      <param name="pRemoteMedium"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IDataObject.QueryGetData(Microsoft.VisualStudio.OLE.Interop.FORMATETC[])">
      <param name="pFormatetc"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IDataObject.SetData(Microsoft.VisualStudio.OLE.Interop.FORMATETC[],Microsoft.VisualStudio.OLE.Interop.STGMEDIUM[],System.Int32)">
      <param name="pFormatetc"></param>
      <param name="pmedium"></param>
      <param name="fRelease"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IDirectWriterLock">
      <summary>Allows only a single writer while enabling multiple readers of a root storage object. For more information, see IDirectWriterLock and IDirectWriterLock - Compound File Implementation.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IDirectWriterLock.HaveWriteAccess"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IDirectWriterLock.ReleaseWriteAccess"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IDirectWriterLock.WaitForWriteAccess(System.UInt32)">
      <param name="dwTimeout"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IDLDESC"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.IDLDESC.dwReserved"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.IDLDESC.wIDLFlags"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IDropTarget">
      <summary>Part of implementing drag-and-drop operations. Implemented by an object that can be a target for data during a drag-and-drop operation. For more information, see IDropTarget.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IDropTarget.DragEnter(Microsoft.VisualStudio.OLE.Interop.IDataObject,System.UInt32,Microsoft.VisualStudio.OLE.Interop.POINTL,System.UInt32@)">
      <param name="pDataObj"></param>
      <param name="grfKeyState"></param>
      <param name="pt"></param>
      <param name="pdwEffect"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IDropTarget.DragLeave"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IDropTarget.DragOver(System.UInt32,Microsoft.VisualStudio.OLE.Interop.POINTL,System.UInt32@)">
      <param name="grfKeyState"></param>
      <param name="pt"></param>
      <param name="pdwEffect"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IDropTarget.Drop(Microsoft.VisualStudio.OLE.Interop.IDataObject,System.UInt32,Microsoft.VisualStudio.OLE.Interop.POINTL,System.UInt32@)">
      <param name="pDataObj"></param>
      <param name="grfKeyState"></param>
      <param name="pt"></param>
      <param name="pdwEffect"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IDummyHICONIncluder"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IDummyHICONIncluder.Dummy(System.IntPtr,System.IntPtr)">
      <param name="h1"></param>
      <param name="h2"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IEnumConnectionPoints">
      <summary>Enumerates connection points on a connectable object (implementer of <see cref="T:Microsoft.VisualStudio.OLE.Interop.IConnectionPointContainer" />). For more information, see IEnumConnectionPoints.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumConnectionPoints.Clone(Microsoft.VisualStudio.OLE.Interop.IEnumConnectionPoints@)">
      <param name="ppEnum"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumConnectionPoints.Next(System.UInt32,Microsoft.VisualStudio.OLE.Interop.IConnectionPoint[],System.UInt32@)">
      <param name="cConnections"></param>
      <param name="ppCP"></param>
      <param name="pcFetched"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumConnectionPoints.Reset"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumConnectionPoints.Skip(System.UInt32)">
      <param name="cConnections"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IEnumConnections">
      <summary>Enumerates connection points on a connectable object. <see cref="T:Microsoft.VisualStudio.OLE.Interop.IConnectionPointContainer" /> provides the <see cref="T:Microsoft.VisualStudio.OLE.Interop.IEnumConnectionPoints" /> interface; <see cref="T:Microsoft.VisualStudio.OLE.Interop.IConnectionPoint" /> provides the <see cref="T:Microsoft.VisualStudio.OLE.Interop.IEnumConnections" /> interface. For more information, see IEnumConnectionPoints and IEnumConnections.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumConnections.Clone(Microsoft.VisualStudio.OLE.Interop.IEnumConnections@)">
      <param name="ppEnum"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumConnections.Next(System.UInt32,Microsoft.VisualStudio.OLE.Interop.CONNECTDATA[],System.UInt32@)">
      <param name="cConnections"></param>
      <param name="rgcd"></param>
      <param name="pcFetched"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumConnections.Reset"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumConnections.Skip(System.UInt32)">
      <param name="cConnections"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IEnumFORMATETC">
      <summary>Enumerates an array of FORMATETC structures. This structure is a generalized clipboard format. For more information, see IEnumFORMATETC.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumFORMATETC.Clone(Microsoft.VisualStudio.OLE.Interop.IEnumFORMATETC@)">
      <param name="ppEnum"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumFORMATETC.Next(System.UInt32,Microsoft.VisualStudio.OLE.Interop.FORMATETC[],System.UInt32[])">
      <param name="celt"></param>
      <param name="rgelt"></param>
      <param name="pceltFetched"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumFORMATETC.Reset"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumFORMATETC.Skip(System.UInt32)">
      <param name="celt"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IEnumMoniker">
      <summary>Enumerates elements of a moniker, or monikers in a table of monikers. For more information, see IEnumMoniker.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumMoniker.Clone(Microsoft.VisualStudio.OLE.Interop.IEnumMoniker@)">
      <param name="ppEnum"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumMoniker.Next(System.UInt32,Microsoft.VisualStudio.OLE.Interop.IMoniker[],System.UInt32@)">
      <param name="celt"></param>
      <param name="rgelt"></param>
      <param name="pceltFetched"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumMoniker.Reset"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumMoniker.Skip(System.UInt32)">
      <param name="celt"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IEnumOleDocumentViews">
      <summary>Enumerates the views a document object supports. For more information, see IEnumOleDocumentViews.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumOleDocumentViews.Clone(Microsoft.VisualStudio.OLE.Interop.IEnumOleDocumentViews@)">
      <param name="ppEnum"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumOleDocumentViews.Next(System.UInt32,Microsoft.VisualStudio.OLE.Interop.IOleDocumentView[],System.UInt32@)">
      <param name="cViews"></param>
      <param name="rgpView"></param>
      <param name="pcFetched"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumOleDocumentViews.Reset"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumOleDocumentViews.Skip(System.UInt32)">
      <param name="cViews"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IEnumOleUndoUnits">
      <summary>Enumerates the undo units on the undo or redo stack. For more information, see IEnumOleUndoUnits.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumOleUndoUnits.Clone(Microsoft.VisualStudio.OLE.Interop.IEnumOleUndoUnits@)">
      <param name="ppEnum"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumOleUndoUnits.Next(System.UInt32,Microsoft.VisualStudio.OLE.Interop.IOleUndoUnit[],System.UInt32@)">
      <param name="celt"></param>
      <param name="rgelt"></param>
      <param name="pceltFetched"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumOleUndoUnits.Reset"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumOleUndoUnits.Skip(System.UInt32)">
      <param name="celt"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IEnumOLEVERB">
      <summary>Enumerates the verbs available for an object. For more information, see IEnumOLEVERB and OLEVERB.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumOLEVERB.Clone(Microsoft.VisualStudio.OLE.Interop.IEnumOLEVERB@)">
      <param name="ppEnum"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumOLEVERB.Next(System.UInt32,Microsoft.VisualStudio.OLE.Interop.OLEVERB[],System.UInt32@)">
      <param name="celt"></param>
      <param name="rgelt"></param>
      <param name="pceltFetched"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumOLEVERB.Reset"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumOLEVERB.Skip(System.UInt32)">
      <param name="celt"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IEnumSTATDATA">
      <summary>Enumerates an array of structures containing information about advisory connections (sinks) for a data object. For more information, see IEnumSTATDATA and STATDATA.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumSTATDATA.Clone(Microsoft.VisualStudio.OLE.Interop.IEnumSTATDATA@)">
      <param name="ppEnum"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumSTATDATA.Next(System.UInt32,Microsoft.VisualStudio.OLE.Interop.STATDATA[],System.UInt32@)">
      <param name="celt"></param>
      <param name="rgelt"></param>
      <param name="pceltFetched"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumSTATDATA.Reset"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumSTATDATA.Skip(System.UInt32)">
      <param name="celt"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IEnumSTATPROPSETSTG">
      <summary>Enumerates an array of structures containing statistical data about the property sets managed by the current <see cref="T:Microsoft.VisualStudio.OLE.Interop.IPropertySetStorage" /> instance. For more information, see IEnumSTATPROPSETSTG, IEnumSTATPROPSETSTG-Compound File Implementation, and STATPROPSETSTG.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumSTATPROPSETSTG.Clone(Microsoft.VisualStudio.OLE.Interop.IEnumSTATPROPSETSTG@)">
      <param name="ppEnum"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumSTATPROPSETSTG.Next(System.UInt32,Microsoft.VisualStudio.OLE.Interop.STATPROPSETSTG[],System.UInt32@)">
      <param name="celt"></param>
      <param name="rgelt"></param>
      <param name="pceltFetched"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumSTATPROPSETSTG.Reset"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumSTATPROPSETSTG.Skip(System.UInt32)">
      <param name="celt"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IEnumSTATPROPSTG"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumSTATPROPSTG.Clone(Microsoft.VisualStudio.OLE.Interop.IEnumSTATPROPSTG@)">
      <param name="ppEnum"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumSTATPROPSTG.Next(System.UInt32,Microsoft.VisualStudio.OLE.Interop.STATPROPSTG[],System.UInt32@)">
      <param name="celt"></param>
      <param name="rgelt"></param>
      <param name="pceltFetched"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumSTATPROPSTG.Reset"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumSTATPROPSTG.Skip(System.UInt32)">
      <param name="celt"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IEnumSTATSTG">
      <summary>Enumerates an array of structures containing statistical data about open storage, stream, or byte array objects. For more information, see IEnumSTATSTG and STATSTG.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumSTATSTG.Clone(Microsoft.VisualStudio.OLE.Interop.IEnumSTATSTG@)">
      <param name="ppEnum"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumSTATSTG.Next(System.UInt32,Microsoft.VisualStudio.OLE.Interop.STATSTG[],System.UInt32@)">
      <param name="celt"></param>
      <param name="rgelt"></param>
      <param name="pceltFetched"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumSTATSTG.Reset"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumSTATSTG.Skip(System.UInt32)">
      <param name="celt"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IEnumString">
      <summary>Enumerates a group of strings. You do not usually need to implement this interface. For more information, see IEnumString.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumString.Clone(Microsoft.VisualStudio.OLE.Interop.IEnumString@)">
      <param name="ppEnum"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumString.Next(System.UInt32,System.String[],System.UInt32@)">
      <param name="celt"></param>
      <param name="rgelt"></param>
      <param name="pceltFetched"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumString.Reset"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumString.Skip(System.UInt32)">
      <param name="celt"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IEnumUnknown">
      <summary>Enumerates objects implementing the root COM interface, IUnknown. Commonly implemented by a component containing multiple objects. For more information, see IEnumUnknown.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumUnknown.Clone(Microsoft.VisualStudio.OLE.Interop.IEnumUnknown@)">
      <param name="ppEnum"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumUnknown.Next(System.UInt32,System.Object[],System.UInt32@)">
      <param name="celt"></param>
      <param name="rgelt"></param>
      <param name="pceltFetched"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumUnknown.Reset"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IEnumUnknown.Skip(System.UInt32)">
      <param name="celt"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IErrorLog">
      <summary>Communicates detailed error information between a client and an object. For more information, see IErrorLog.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IErrorLog.AddError(System.String,Microsoft.VisualStudio.OLE.Interop.EXCEPINFO[])">
      <param name="pszPropName"></param>
      <param name="pExcepInfo"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IExternalConnection">
      <summary>Manages a server object's count of marshaled, or external, connections. Enables the object to shutdown when appropriate. For more information, see IExternalConnection.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IExternalConnection.AddConnection(System.UInt32,System.UInt32)">
      <param name="EXTCONN"></param>
      <param name="reserved"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IExternalConnection.ReleaseConnection(System.UInt32,System.UInt32,System.Int32)">
      <param name="EXTCONN"></param>
      <param name="reserved"></param>
      <param name="fLastReleaseCloses"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IFillLockBytes">
      <summary>Enables asynchronous writing to a structured storage byte array. For more information, see IFillLockBytes and How Asynchronous Binding and Storage Work.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IFillLockBytes.FillAppend(System.Byte[],System.UInt32,System.UInt32@)">
      <param name="pv"></param>
      <param name="cb"></param>
      <param name="pcbWritten"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IFillLockBytes.FillAt(Microsoft.VisualStudio.OLE.Interop.ULARGE_INTEGER,System.Byte[],System.UInt32,System.UInt32@)">
      <param name="ulOffset"></param>
      <param name="pv"></param>
      <param name="cb"></param>
      <param name="pcbWritten"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IFillLockBytes.SetFillSize(Microsoft.VisualStudio.OLE.Interop.ULARGE_INTEGER)">
      <param name="ulSize"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IFillLockBytes.Terminate(System.Int32)">
      <param name="bCanceled"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IFont">
      <summary>COM wrapper for a Windows font object. For more information, see IFont and IFont - Ole Implementation.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IFont.AddRefHfont(System.IntPtr)">
      <param name="hFont"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IFont.Clone(Microsoft.VisualStudio.OLE.Interop.IFont@)">
      <param name="ppFont"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IFont.get_Bold(System.Int32@)">
      <param name="pBold"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IFont.get_Charset(System.Int16@)">
      <param name="pCharset"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IFont.get_hFont(System.IntPtr@)">
      <param name="phFont"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IFont.get_Italic(System.Int32@)">
      <param name="pItalic"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IFont.get_Name(System.String@)">
      <param name="pName"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IFont.get_Size(System.Decimal[])">
      <param name="pSize"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IFont.get_Strikethrough(System.Int32@)">
      <param name="pStrikethrough"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IFont.get_Underline(System.Int32@)">
      <param name="pUnderline"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IFont.get_Weight(System.Int16@)">
      <param name="pWeight"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IFont.IsEqual(Microsoft.VisualStudio.OLE.Interop.IFont)">
      <param name="pFontOther"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IFont.put_Bold(System.Int32)">
      <param name="bold"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IFont.put_Charset(System.Int16)">
      <param name="charset"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IFont.put_Italic(System.Int32)">
      <param name="italic"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IFont.put_Name(System.String)">
      <param name="name"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IFont.put_Size(System.Decimal)">
      <param name="SIZE"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IFont.put_Strikethrough(System.Int32)">
      <param name="strikethrough"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IFont.put_Underline(System.Int32)">
      <param name="underline"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IFont.put_Weight(System.Int16)">
      <param name="weight"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IFont.QueryTextMetrics(Microsoft.VisualStudio.OLE.Interop.TEXTMETRICOLE[])">
      <param name="pTM"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IFont.ReleaseHfont(System.IntPtr)">
      <param name="hFont"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IFont.SetHdc(System.IntPtr)">
      <param name="hDC"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IFont.SetRatio(System.Int32,System.Int32)">
      <param name="cyLogical"></param>
      <param name="cyHimetric"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IForegroundTransfer">
      <summary>Transfers control of the foreground window to the COM server process. For more information, see IForegroundTransfer.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IForegroundTransfer.AllowForegroundTransfer(System.IntPtr)">
      <param name="lpvReserved"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IGlobalInterfaceTable">
      <summary>Enables access to an interface from any apartment in a process. For more information, see IGlobalInterfaceTable and COM Threading and Application Architecture in COM+ Applications.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IGlobalInterfaceTable.GetInterfaceFromGlobal(System.UInt32,System.Guid@,System.IntPtr@)">
      <param name="dwCookie"></param>
      <param name="riid"></param>
      <param name="ppv"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IGlobalInterfaceTable.RegisterInterfaceInGlobal(System.Object,System.Guid@,System.UInt32@)">
      <param name="punk"></param>
      <param name="riid"></param>
      <param name="pdwCookie"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IGlobalInterfaceTable.RevokeInterfaceFromGlobal(System.UInt32)">
      <param name="dwCookie"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IInternalUnknown">
      <summary>Provides access to the internal interfaces of a proxy. For more information, see IInternalUnknown.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IInternalUnknown.QueryInternalInterface(System.Guid@,System.IntPtr@)">
      <param name="riid"></param>
      <param name="ppv"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.ILayoutStorage">
      <summary>Enables an application to optimize the layout of compound files for efficient downloading across a slow link. For more information, see ILayoutStorage and StorageLayout.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ILayoutStorage.BeginMonitor"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ILayoutStorage.EndMonitor"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ILayoutStorage.LayoutScript(Microsoft.VisualStudio.OLE.Interop.StorageLayout[],System.UInt32,System.UInt32)">
      <param name="pStorageLayout"></param>
      <param name="nEntries"></param>
      <param name="glfInterleavedFlag"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ILayoutStorage.ReLayoutDocfile(System.String)">
      <param name="pwcsNewDfName"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ILayoutStorage.ReLayoutDocfileOnILockBytes(Microsoft.VisualStudio.OLE.Interop.ILockBytes)">
      <param name="pILockBytes"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.ILockBytes">
      <summary>Gives a compound file storage object's root storage access to the physical device while isolating it from the details of physical access. For more information, see ILockBytes.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ILockBytes.Flush"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ILockBytes.LockRegion(Microsoft.VisualStudio.OLE.Interop.ULARGE_INTEGER,Microsoft.VisualStudio.OLE.Interop.ULARGE_INTEGER,System.UInt32)">
      <param name="libOffset"></param>
      <param name="cb"></param>
      <param name="dwLockType"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ILockBytes.ReadAt(Microsoft.VisualStudio.OLE.Interop.ULARGE_INTEGER,System.Byte[],System.UInt32,System.UInt32@)">
      <param name="ulOffset"></param>
      <param name="pv"></param>
      <param name="cb"></param>
      <param name="pcbRead"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ILockBytes.SetSize(Microsoft.VisualStudio.OLE.Interop.ULARGE_INTEGER)">
      <param name="cb"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ILockBytes.Stat(Microsoft.VisualStudio.OLE.Interop.STATSTG[],System.UInt32)">
      <param name="pstatstg"></param>
      <param name="grfStatFlag"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ILockBytes.UnlockRegion(Microsoft.VisualStudio.OLE.Interop.ULARGE_INTEGER,Microsoft.VisualStudio.OLE.Interop.ULARGE_INTEGER,System.UInt32)">
      <param name="libOffset"></param>
      <param name="cb"></param>
      <param name="dwLockType"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ILockBytes.WriteAt(Microsoft.VisualStudio.OLE.Interop.ULARGE_INTEGER,System.Byte[],System.UInt32,System.UInt32@)">
      <param name="ulOffset"></param>
      <param name="pv"></param>
      <param name="cb"></param>
      <param name="pcbWritten"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IMalloc">
      <summary>Allocates, frees, and manages memory. In general, use an existing implementation such as that provided by the CoGetMalloc function. For more information, see IMalloc.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMalloc.Alloc(System.UInt32)">
      <param name="cb"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMalloc.DidAlloc(System.IntPtr)">
      <param name="pv"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMalloc.Free(System.IntPtr)">
      <param name="pv"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMalloc.GetSize(System.IntPtr)">
      <param name="pv"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMalloc.HeapMinimize"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMalloc.Realloc(System.IntPtr,System.UInt32)">
      <param name="pv"></param>
      <param name="cb"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IMallocSpy">
      <summary>Enables monitoring of memory allocation, detection of memory leaks, and simulation of memory failure in calls to IMalloc methods. For more information, see IMallocSpy.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMallocSpy.PostAlloc(System.IntPtr)">
      <param name="pActual"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMallocSpy.PostDidAlloc(System.IntPtr,System.Int32,System.Int32)">
      <param name="pRequest"></param>
      <param name="fSpyed"></param>
      <param name="fActual"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMallocSpy.PostFree(System.Int32)">
      <param name="fSpyed"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMallocSpy.PostGetSize(System.UInt32,System.Int32)">
      <param name="cbActual"></param>
      <param name="fSpyed"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMallocSpy.PostHeapMinimize"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMallocSpy.PostRealloc(System.IntPtr,System.Int32)">
      <param name="pActual"></param>
      <param name="fSpyed"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMallocSpy.PreAlloc(System.UInt32)">
      <param name="cbRequest"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMallocSpy.PreDidAlloc(System.IntPtr,System.Int32)">
      <param name="pRequest"></param>
      <param name="fSpyed"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMallocSpy.PreFree(System.IntPtr,System.Int32)">
      <param name="pRequest"></param>
      <param name="fSpyed"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMallocSpy.PreGetSize(System.IntPtr,System.Int32)">
      <param name="pRequest"></param>
      <param name="fSpyed"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMallocSpy.PreHeapMinimize"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMallocSpy.PreRealloc(System.IntPtr,System.UInt32,System.IntPtr@,System.Int32)">
      <param name="pRequest"></param>
      <param name="cbRequest"></param>
      <param name="ppNewRequest"></param>
      <param name="fSpyed"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IMarshal">
      <summary>Enables a COM object to define and manage the marshaling of its interface pointers. Marshaling is packaging data for transmission to another process or machine. For more information, see IMarshal and IMarshal—Default Implementation.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMarshal.DisconnectObject(System.UInt32)">
      <param name="dwReserved"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMarshal.GetMarshalSizeMax(System.Guid@,System.IntPtr,System.UInt32,System.IntPtr,System.UInt32,System.UInt32@)">
      <param name="riid"></param>
      <param name="pv"></param>
      <param name="dwDestContext"></param>
      <param name="pvDestContext"></param>
      <param name="MSHLFLAGS"></param>
      <param name="pSize"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMarshal.GetUnmarshalClass(System.Guid@,System.IntPtr,System.UInt32,System.IntPtr,System.UInt32,System.Guid@)">
      <param name="riid"></param>
      <param name="pv"></param>
      <param name="dwDestContext"></param>
      <param name="pvDestContext"></param>
      <param name="MSHLFLAGS"></param>
      <param name="pCid"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMarshal.MarshalInterface(Microsoft.VisualStudio.OLE.Interop.IStream,System.Guid@,System.IntPtr,System.UInt32,System.IntPtr,System.UInt32)">
      <param name="pstm"></param>
      <param name="riid"></param>
      <param name="pv"></param>
      <param name="dwDestContext"></param>
      <param name="pvDestContext"></param>
      <param name="MSHLFLAGS"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMarshal.ReleaseMarshalData(Microsoft.VisualStudio.OLE.Interop.IStream)">
      <param name="pstm"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMarshal.UnmarshalInterface(Microsoft.VisualStudio.OLE.Interop.IStream,System.Guid@,System.IntPtr@)">
      <param name="pstm"></param>
      <param name="riid"></param>
      <param name="ppv"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IMarshal2"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMarshal2.DisconnectObject(System.UInt32)">
      <param name="dwReserved"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMarshal2.GetMarshalSizeMax(System.Guid@,System.IntPtr,System.UInt32,System.IntPtr,System.UInt32,System.UInt32@)">
      <param name="riid"></param>
      <param name="pv"></param>
      <param name="dwDestContext"></param>
      <param name="pvDestContext"></param>
      <param name="MSHLFLAGS"></param>
      <param name="pSize"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMarshal2.GetUnmarshalClass(System.Guid@,System.IntPtr,System.UInt32,System.IntPtr,System.UInt32,System.Guid@)">
      <param name="riid"></param>
      <param name="pv"></param>
      <param name="dwDestContext"></param>
      <param name="pvDestContext"></param>
      <param name="MSHLFLAGS"></param>
      <param name="pCid"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMarshal2.MarshalInterface(Microsoft.VisualStudio.OLE.Interop.IStream,System.Guid@,System.IntPtr,System.UInt32,System.IntPtr,System.UInt32)">
      <param name="pstm"></param>
      <param name="riid"></param>
      <param name="pv"></param>
      <param name="dwDestContext"></param>
      <param name="pvDestContext"></param>
      <param name="MSHLFLAGS"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMarshal2.ReleaseMarshalData(Microsoft.VisualStudio.OLE.Interop.IStream)">
      <param name="pstm"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMarshal2.UnmarshalInterface(Microsoft.VisualStudio.OLE.Interop.IStream,System.Guid@,System.IntPtr@)">
      <param name="pstm"></param>
      <param name="riid"></param>
      <param name="ppv"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IMessageFilter">
      <summary>Enables handling of incoming and outgoing COM messages while waiting for responses from synchronous calls. You can use message filtering to prevent waiting on a synchronous call from blocking another application. For more information, see IMessageFilter.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMessageFilter.HandleInComingCall(System.UInt32,System.IntPtr,System.UInt32,Microsoft.VisualStudio.OLE.Interop.INTERFACEINFO[])">
      <param name="dwCallType"></param>
      <param name="htaskCaller"></param>
      <param name="dwTickCount"></param>
      <param name="lpInterfaceInfo"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMessageFilter.MessagePending(System.IntPtr,System.UInt32,System.UInt32)">
      <param name="htaskCallee"></param>
      <param name="dwTickCount"></param>
      <param name="dwPendingType"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMessageFilter.RetryRejectedCall(System.IntPtr,System.UInt32,System.UInt32)">
      <param name="htaskCallee"></param>
      <param name="dwTickCount"></param>
      <param name="dwRejectType"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IMoniker">
      <summary>Enables access to an object through its moniker which allows access without information about the location of the object. For more information, see IMoniker and the references to different implementations such as IMoniker—Class Moniker Implementation.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMoniker.BindToObject(Microsoft.VisualStudio.OLE.Interop.IBindCtx,Microsoft.VisualStudio.OLE.Interop.IMoniker,System.Guid@,System.Object@)">
      <param name="pbc"></param>
      <param name="pmkToLeft"></param>
      <param name="riidResult"></param>
      <param name="ppvResult"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMoniker.BindToStorage(Microsoft.VisualStudio.OLE.Interop.IBindCtx,Microsoft.VisualStudio.OLE.Interop.IMoniker,System.Guid@,System.Object@)">
      <param name="pbc"></param>
      <param name="pmkToLeft"></param>
      <param name="riid"></param>
      <param name="ppvObj"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMoniker.CommonPrefixWith(Microsoft.VisualStudio.OLE.Interop.IMoniker,Microsoft.VisualStudio.OLE.Interop.IMoniker@)">
      <param name="pmkOther"></param>
      <param name="ppmkPrefix"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMoniker.ComposeWith(Microsoft.VisualStudio.OLE.Interop.IMoniker,System.Int32,Microsoft.VisualStudio.OLE.Interop.IMoniker@)">
      <param name="pmkRight"></param>
      <param name="fOnlyIfNotGeneric"></param>
      <param name="ppmkComposite"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMoniker.Enum(System.Int32,Microsoft.VisualStudio.OLE.Interop.IEnumMoniker@)">
      <param name="fForward"></param>
      <param name="ppenumMoniker"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMoniker.GetClassID(System.Guid@)">
      <param name="pClassID"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMoniker.GetDisplayName(Microsoft.VisualStudio.OLE.Interop.IBindCtx,Microsoft.VisualStudio.OLE.Interop.IMoniker,System.String@)">
      <param name="pbc"></param>
      <param name="pmkToLeft"></param>
      <param name="ppszDisplayName"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMoniker.GetSizeMax(Microsoft.VisualStudio.OLE.Interop.ULARGE_INTEGER[])">
      <param name="pcbSize"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMoniker.GetTimeOfLastChange(Microsoft.VisualStudio.OLE.Interop.IBindCtx,Microsoft.VisualStudio.OLE.Interop.IMoniker,Microsoft.VisualStudio.OLE.Interop.FILETIME[])">
      <param name="pbc"></param>
      <param name="pmkToLeft"></param>
      <param name="pFileTime"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMoniker.Hash(System.UInt32@)">
      <param name="pdwHash"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMoniker.Inverse(Microsoft.VisualStudio.OLE.Interop.IMoniker@)">
      <param name="ppmk"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMoniker.IsDirty"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMoniker.IsEqual(Microsoft.VisualStudio.OLE.Interop.IMoniker)">
      <param name="pmkOtherMoniker"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMoniker.IsRunning(Microsoft.VisualStudio.OLE.Interop.IBindCtx,Microsoft.VisualStudio.OLE.Interop.IMoniker,Microsoft.VisualStudio.OLE.Interop.IMoniker)">
      <param name="pbc"></param>
      <param name="pmkToLeft"></param>
      <param name="pmkNewlyRunning"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMoniker.IsSystemMoniker(System.UInt32@)">
      <param name="pdwMksys"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMoniker.Load(Microsoft.VisualStudio.OLE.Interop.IStream)">
      <param name="pstm"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMoniker.ParseDisplayName(Microsoft.VisualStudio.OLE.Interop.IBindCtx,Microsoft.VisualStudio.OLE.Interop.IMoniker,System.String,System.UInt32@,Microsoft.VisualStudio.OLE.Interop.IMoniker@)">
      <param name="pbc"></param>
      <param name="pmkToLeft"></param>
      <param name="pszDisplayName"></param>
      <param name="pchEaten"></param>
      <param name="ppmkOut"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMoniker.Reduce(Microsoft.VisualStudio.OLE.Interop.IBindCtx,System.UInt32,Microsoft.VisualStudio.OLE.Interop.IMoniker@,Microsoft.VisualStudio.OLE.Interop.IMoniker@)">
      <param name="pbc"></param>
      <param name="dwReduceHowFar"></param>
      <param name="ppmkToLeft"></param>
      <param name="ppmkReduced"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMoniker.RelativePathTo(Microsoft.VisualStudio.OLE.Interop.IMoniker,Microsoft.VisualStudio.OLE.Interop.IMoniker@)">
      <param name="pmkOther"></param>
      <param name="ppmkRelPath"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMoniker.Save(Microsoft.VisualStudio.OLE.Interop.IStream,System.Int32)">
      <param name="pstm"></param>
      <param name="fClearDirty"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IMultiQI">
      <summary>Enables querying about multiple interfaces in a single call. Used to minimize the overhead of queries in remote procedure calls. For more information, see IMultiQI.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IMultiQI.QueryMultipleInterfaces(System.UInt32,Microsoft.VisualStudio.OLE.Interop.MULTI_QI[])">
      <param name="cMQIs"></param>
      <param name="pMQIs"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.INTERFACEINFO"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.INTERFACEINFO.iid"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.INTERFACEINFO.punk"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.INTERFACEINFO.wMethod"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.INVOKEKIND"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.INVOKEKIND.INVOKE_FUNC">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.INVOKEKIND.INVOKE_PROPERTYGET">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.INVOKEKIND.INVOKE_PROPERTYPUT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.INVOKEKIND.INVOKE_PROPERTYPUTREF">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IObjectWithSite">
      <summary>Provides simple communication between an object and the site in the container. For more information, see IObjectWithSite.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IObjectWithSite.GetSite(System.Guid@,System.IntPtr@)">
      <param name="riid"> </param>
      <param name="ppvSite"> </param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IObjectWithSite.SetSite(System.Object)">
      <param name="pUnkSite"> </param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IOleClientSite">
      <summary>Gives an embedded object information about resources provided by its container such as the location and extent of its display site, its moniker, and its user interface. For more information, see IOleClientSite.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleClientSite.GetContainer(Microsoft.VisualStudio.OLE.Interop.IOleContainer@)">
      <param name="ppContainer"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleClientSite.GetMoniker(System.UInt32,System.UInt32,Microsoft.VisualStudio.OLE.Interop.IMoniker@)">
      <param name="dwAssign"></param>
      <param name="dwWhichMoniker"></param>
      <param name="ppmk"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleClientSite.OnShowWindow(System.Int32)">
      <param name="fShow"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleClientSite.RequestNewObjectLayout"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleClientSite.SaveObject"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleClientSite.ShowObject"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IOleCommandTarget">
      <summary>Enables the dispatching of commands between objects and containers. For more information, see IOleCommandTarget</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleCommandTarget.Exec(System.Guid@,System.UInt32,System.UInt32,System.IntPtr,System.IntPtr)">
      <summary>Executes the specified command.</summary>
      <returns>This method returns S_OK on success. Other possible return values include the following.Return codeDescriptionOLECMDERR_E_UNKNOWNGROUPThe <paramref name="pguidCmdGroup" /> parameter is not null but does not specify a recognized command group.OLECMDERR_E_NOTSUPPORTEDThe <paramref name="nCmdID" /> parameter is not a valid command in the group identified by <paramref name="pguidCmdGroup" />.OLECMDERR_E_DISABLEDThe command identified by <paramref name="nCmdID" /> is currently disabled and cannot be executed.OLECMDERR_E_NOHELPThe caller has asked for help on the command identified by <paramref name="nCmdID" />, but no help is available.OLECMDERR_E_CANCELEDThe user canceled the execution of the command.</returns>
      <param name="pguidCmdGroup">The GUID of the command group.</param>
      <param name="nCmdID">The command ID.</param>
      <param name="nCmdexecopt">Specifies how the object should execute the command. Possible values are taken from the <see cref="T:Microsoft.VisualStudio.OLE.Interop.OLECMDEXECOPT" /> and <see cref="T:Microsoft.VisualStudio.OLE.Interop.OLECMDID_WINDOWSTATE_FLAG" /> enumerations.</param>
      <param name="pvaIn">The input arguments of the command.</param>
      <param name="pvaOut">The output arguments of the command.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleCommandTarget.QueryStatus(System.Guid@,System.UInt32,Microsoft.VisualStudio.OLE.Interop.OLECMD[],System.IntPtr)">
      <summary>Queries the object for the status of one or more commands generated by user interface events.</summary>
      <returns>This method returns S_OK on success. Other possible return values include the following.Return codeDescriptionE_FAILThe operation failed.E_UNEXPECTEDAn unexpected error has occurred.E_POINTERThe <paramref name="prgCmds" /> argument is null.OLECMDERR_E_UNKNOWNGROUPThe <paramref name="pguidCmdGroup" /> parameter is not null but does not specify a recognized command group.</returns>
      <param name="pguidCmdGroup">The GUID of the command group.</param>
      <param name="cCmds">The number of commands in <paramref name="prgCmds" />.</param>
      <param name="prgCmds">An array of <see cref="T:Microsoft.VisualStudio.OLE.Interop.OLECMD" /> structures that indicate the commands for which the caller needs status information. This method fills the <paramref name="cmdf" /> member of each structure with values taken from the <see cref="T:Microsoft.VisualStudio.OLE.Interop.OLECMDF" /> enumeration.</param>
      <param name="pCmdText">An <see cref="T:Microsoft.VisualStudio.OLE.Interop.OLECMDTEXT" /> structure in which to return name and/or status information of a single command. This parameter can be null to indicate that the caller does not need this information.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IOleComponent">
      <summary>Provides components needing idle time, such as packages that manage modeless top-level windows, with access to the message loop and other facilities. Register the interface with the component manager, <see cref="T:Microsoft.VisualStudio.OLE.Interop.IOleComponentManager" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleComponent.FContinueMessageLoop(System.UInt32,System.IntPtr,Microsoft.VisualStudio.OLE.Interop.MSG[])">
      <param name="uReason"></param>
      <param name="pvLoopData"></param>
      <param name="pMsgPeeked"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleComponent.FDoIdle(System.UInt32)">
      <param name="grfidlef"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleComponent.FPreTranslateMessage(Microsoft.VisualStudio.OLE.Interop.MSG[])">
      <param name="pMsg"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleComponent.FQueryTerminate(System.Int32)">
      <param name="fPromptUser"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleComponent.FReserved1(System.UInt32,System.UInt32,System.IntPtr,System.IntPtr)">
      <param name="dwReserved"></param>
      <param name="message"></param>
      <param name="wParam"></param>
      <param name="lParam"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleComponent.HwndGetWindow(System.UInt32,System.UInt32)">
      <param name="dwWhich"></param>
      <param name="dwReserved"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleComponent.OnActivationChange(Microsoft.VisualStudio.OLE.Interop.IOleComponent,System.Int32,Microsoft.VisualStudio.OLE.Interop.OLECRINFO[],System.Int32,Microsoft.VisualStudio.OLE.Interop.OLECHOSTINFO[],System.UInt32)">
      <param name="pic"></param>
      <param name="fSameComponent"></param>
      <param name="pcrinfo"></param>
      <param name="fHostIsActivating"></param>
      <param name="pchostinfo"></param>
      <param name="dwReserved"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleComponent.OnAppActivate(System.Int32,System.UInt32)">
      <param name="fActive"></param>
      <param name="dwOtherThreadID"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleComponent.OnEnterState(System.UInt32,System.Int32)">
      <param name="uStateID"></param>
      <param name="fEnter"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleComponent.OnLoseActivation"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleComponent.Terminate"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IOleComponentManager">
      <summary>Defines a component manager, a component that coordinates other components with its message loop for message processing and allocation of idle time. You can get an instance of the interface from the <see cref="T:Microsoft.VisualStudio.OLE.Interop.SOleComponentManager" /> (SID_SOleComponentManager) service.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleComponentManager.FContinueIdle"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleComponentManager.FCreateSubComponentManager(System.Object,System.Object,System.Guid@,System.IntPtr@)">
      <param name="piunkOuter"></param>
      <param name="piunkServProv"></param>
      <param name="riid"></param>
      <param name="ppvObj"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleComponentManager.FGetActiveComponent(System.UInt32,Microsoft.VisualStudio.OLE.Interop.IOleComponent@,Microsoft.VisualStudio.OLE.Interop.OLECRINFO[],System.UInt32)">
      <param name="dwgac"></param>
      <param name="ppic"></param>
      <param name="pcrinfo"></param>
      <param name="dwReserved"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleComponentManager.FGetParentComponentManager(Microsoft.VisualStudio.OLE.Interop.IOleComponentManager@)">
      <param name="ppicm"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleComponentManager.FInState(System.UInt32,System.IntPtr)">
      <param name="uStateID"></param>
      <param name="pvoid"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleComponentManager.FOnComponentActivate(System.UInt32)">
      <param name="dwComponentID"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleComponentManager.FOnComponentExitState(System.UInt32,System.UInt32,System.UInt32,System.UInt32,Microsoft.VisualStudio.OLE.Interop.IOleComponentManager[])">
      <param name="dwComponentID"></param>
      <param name="uStateID"></param>
      <param name="uContext"></param>
      <param name="cpicmExclude"></param>
      <param name="rgpicmExclude"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleComponentManager.FPushMessageLoop(System.UInt32,System.UInt32,System.IntPtr)">
      <param name="dwComponentID"></param>
      <param name="uReason"></param>
      <param name="pvLoopData"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleComponentManager.FRegisterComponent(Microsoft.VisualStudio.OLE.Interop.IOleComponent,Microsoft.VisualStudio.OLE.Interop.OLECRINFO[],System.UInt32@)">
      <param name="piComponent"></param>
      <param name="pcrinfo"></param>
      <param name="pdwComponentID"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleComponentManager.FReserved1(System.UInt32,System.UInt32,System.IntPtr,System.IntPtr)">
      <param name="dwReserved"></param>
      <param name="message"></param>
      <param name="wParam"></param>
      <param name="lParam"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleComponentManager.FRevokeComponent(System.UInt32)">
      <param name="dwComponentID"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleComponentManager.FSetTrackingComponent(System.UInt32,System.Int32)">
      <param name="dwComponentID"></param>
      <param name="fTrack"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleComponentManager.FUpdateComponentRegistration(System.UInt32,Microsoft.VisualStudio.OLE.Interop.OLECRINFO[])">
      <param name="dwComponentID"></param>
      <param name="pcrinfo"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleComponentManager.OnComponentEnterState(System.UInt32,System.UInt32,System.UInt32,System.UInt32,Microsoft.VisualStudio.OLE.Interop.IOleComponentManager[],System.UInt32)">
      <param name="dwComponentID"></param>
      <param name="uStateID"></param>
      <param name="uContext"></param>
      <param name="cpicmExclude"></param>
      <param name="rgpicmExclude"></param>
      <param name="dwReserved"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleComponentManager.QueryService(System.Guid@,System.Guid@,System.IntPtr@)">
      <param name="guidService"></param>
      <param name="iid"></param>
      <param name="ppvObj"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IOleContainer">
      <summary>Enumerates objects in a compound document or locks a container. For more information, see IOleContainer.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleContainer.EnumObjects(System.UInt32,Microsoft.VisualStudio.OLE.Interop.IEnumUnknown@)">
      <param name="grfFlags"></param>
      <param name="ppEnum"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleContainer.LockContainer(System.Int32)">
      <param name="fLock"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleContainer.ParseDisplayName(Microsoft.VisualStudio.OLE.Interop.IBindCtx,System.String,System.UInt32@,Microsoft.VisualStudio.OLE.Interop.IMoniker@)">
      <param name="pbc"></param>
      <param name="pszDisplayName"></param>
      <param name="pchEaten"></param>
      <param name="ppmkOut"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IOleControl">
      <summary>Supports keyboard mnemonics, properties, and events for control objects. For more information, see IOleControl.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleControl.FreezeEvents(System.Int32)">
      <param name="bFreeze"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleControl.GetControlInfo(Microsoft.VisualStudio.OLE.Interop.CONTROLINFO[])">
      <param name="pCI"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleControl.OnAmbientPropertyChange(System.Int32)">
      <param name="DISPID"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleControl.OnMnemonic(Microsoft.VisualStudio.OLE.Interop.MSG[])">
      <param name="pMsg"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IOleControlSite">
      <summary>Manages embedded controls in a container. Used by site objects. For more information, see IOleControlSite.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleControlSite.GetExtendedControl(System.Object@)">
      <param name="ppDisp"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleControlSite.LockInPlaceActive(System.Int32)">
      <param name="fLock"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleControlSite.OnControlInfoChanged"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleControlSite.OnFocus(System.Int32)">
      <param name="fGotFocus"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleControlSite.ShowPropertyFrame"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleControlSite.TransformCoords(Microsoft.VisualStudio.OLE.Interop.POINTL[],Microsoft.VisualStudio.OLE.Interop.POINTF[],System.UInt32)">
      <param name="pPtlHimetric"></param>
      <param name="pPtfContainer"></param>
      <param name="dwFlags"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleControlSite.TranslateAccelerator(Microsoft.VisualStudio.OLE.Interop.MSG[],System.UInt32)">
      <param name="pMsg"></param>
      <param name="grfModifiers"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IOleDocument">
      <summary>Creates or enumerates views and provides other information. Implemented by a document for use by a container. For more information, see IOleDocument.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleDocument.CreateView(Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSite,Microsoft.VisualStudio.OLE.Interop.IStream,System.UInt32,Microsoft.VisualStudio.OLE.Interop.IOleDocumentView@)">
      <param name="pIPSite"></param>
      <param name="pstm"></param>
      <param name="dwReserved"></param>
      <param name="ppView"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleDocument.EnumViews(Microsoft.VisualStudio.OLE.Interop.IEnumOleDocumentViews@,Microsoft.VisualStudio.OLE.Interop.IOleDocumentView@)">
      <param name="ppEnum"></param>
      <param name="ppView"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleDocument.GetDocMiscStatus(System.UInt32@)">
      <param name="pdwStatus"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IOleDocumentSite">
      <summary>Enables a document object to directly instruct its client site to activate it as a document object. Implemented by the container. For more information, see IOleDocumentSite.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleDocumentSite.ActivateMe(Microsoft.VisualStudio.OLE.Interop.IOleDocumentView)">
      <param name="pViewToActivate"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IOleDocumentView">
      <summary>Provides communication between a container and each view supported by a document object. For more information, see IOleDocumentView.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleDocumentView.ApplyViewState(Microsoft.VisualStudio.OLE.Interop.IStream)">
      <param name="pstm"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleDocumentView.Clone(Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSite,Microsoft.VisualStudio.OLE.Interop.IOleDocumentView@)">
      <param name="pIPSiteNew"></param>
      <param name="ppViewNew"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleDocumentView.CloseView(System.UInt32)">
      <param name="dwReserved"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleDocumentView.GetDocument(System.Object@)">
      <param name="ppunk"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleDocumentView.GetInPlaceSite(Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSite@)">
      <param name="ppIPSite"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleDocumentView.GetRect(Microsoft.VisualStudio.OLE.Interop.RECT[])">
      <param name="prcView"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleDocumentView.Open"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleDocumentView.SaveViewState(Microsoft.VisualStudio.OLE.Interop.IStream)">
      <param name="pstm"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleDocumentView.SetInPlaceSite(Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSite)">
      <param name="pIPSite"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleDocumentView.SetRect(Microsoft.VisualStudio.OLE.Interop.RECT[])">
      <param name="prcView"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleDocumentView.SetRectComplex(Microsoft.VisualStudio.OLE.Interop.RECT[],Microsoft.VisualStudio.OLE.Interop.RECT[],Microsoft.VisualStudio.OLE.Interop.RECT[],Microsoft.VisualStudio.OLE.Interop.RECT[])">
      <param name="prcView"></param>
      <param name="prcHScroll"></param>
      <param name="prcVScroll"></param>
      <param name="prcSizeBox"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleDocumentView.Show(System.Int32)">
      <param name="fShow"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleDocumentView.UIActivate(System.Int32)">
      <param name="fUIActivate"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceActiveObject">
      <summary>Enables a top-level container to manipulate an in-place object. For information on the COM interface, see IOleInPlaceActiveObject.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceActiveObject.ContextSensitiveHelp(System.Int32)">
      <param name="fEnterMode"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceActiveObject.EnableModeless(System.Int32)">
      <param name="fEnable"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceActiveObject.GetWindow(System.IntPtr@)">
      <param name="phwnd"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceActiveObject.OnDocWindowActivate(System.Int32)">
      <param name="fActivate"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceActiveObject.OnFrameWindowActivate(System.Int32)">
      <param name="fActivate"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceActiveObject.ResizeBorder(Microsoft.VisualStudio.OLE.Interop.RECT[],System.Guid@,Microsoft.VisualStudio.OLE.Interop.IOleInPlaceUIWindow,System.Int32)">
      <param name="prcBorder"></param>
      <param name="riid"></param>
      <param name="pUIWindow"></param>
      <param name="fFrameWindow"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceActiveObject.TranslateAccelerator(Microsoft.VisualStudio.OLE.Interop.MSG[])">
      <param name="lpmsg"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceFrame">
      <summary>Controls the container's top-level frame, including menus, keyboard responses, and dialogs. For more information, see IOleInPlaceFrame.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceFrame.ContextSensitiveHelp(System.Int32)">
      <param name="fEnterMode"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceFrame.EnableModeless(System.Int32)">
      <param name="fEnable"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceFrame.GetBorder(Microsoft.VisualStudio.OLE.Interop.RECT[])">
      <param name="lprectBorder"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceFrame.GetWindow(System.IntPtr@)">
      <param name="phwnd"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceFrame.InsertMenus(System.IntPtr,Microsoft.VisualStudio.OLE.Interop.OLEMENUGROUPWIDTHS[])">
      <param name="hmenuShared"></param>
      <param name="lpMenuWidths"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceFrame.RemoveMenus(System.IntPtr)">
      <param name="hmenuShared"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceFrame.RequestBorderSpace(Microsoft.VisualStudio.OLE.Interop.RECT[])">
      <param name="pborderwidths"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceFrame.SetActiveObject(Microsoft.VisualStudio.OLE.Interop.IOleInPlaceActiveObject,System.String)">
      <param name="pActiveObject"></param>
      <param name="pszObjName"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceFrame.SetBorderSpace(Microsoft.VisualStudio.OLE.Interop.RECT[])">
      <param name="pborderwidths"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceFrame.SetMenu(System.IntPtr,System.IntPtr,System.IntPtr)">
      <param name="hmenuShared"></param>
      <param name="HOLEMENU"></param>
      <param name="hwndActiveObject"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceFrame.SetStatusText(System.String)">
      <param name="pszStatusText"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceFrame.TranslateAccelerator(Microsoft.VisualStudio.OLE.Interop.MSG[],System.UInt16)">
      <param name="lpmsg"></param>
      <param name="wID"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceObject">
      <summary>Manages the activation, deactivation, and visibility of in-place objects. For more information, see IOleInPlaceObject.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceObject.ContextSensitiveHelp(System.Int32)">
      <param name="fEnterMode"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceObject.GetWindow(System.IntPtr@)">
      <param name="phwnd"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceObject.InPlaceDeactivate"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceObject.ReactivateAndUndo"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceObject.SetObjectRects(Microsoft.VisualStudio.OLE.Interop.RECT[],Microsoft.VisualStudio.OLE.Interop.RECT[])">
      <param name="lprcPosRect"></param>
      <param name="lprcClipRect"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceObject.UIDeactivate"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceObjectWindowless">
      <summary>Enables a windowless object to process window messages and take part in drag-and-drop operations. Extends and inherits from <see cref="T:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceObject" />. For more information, see IOleInPlaceObjectWindowless.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceObjectWindowless.ContextSensitiveHelp(System.Int32)">
      <param name="fEnterMode"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceObjectWindowless.GetDropTarget(Microsoft.VisualStudio.OLE.Interop.IDropTarget@)">
      <param name="ppDropTarget"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceObjectWindowless.GetWindow(System.IntPtr@)">
      <param name="phwnd"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceObjectWindowless.InPlaceDeactivate"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceObjectWindowless.OnWindowMessage(System.UInt32,System.IntPtr,System.IntPtr,System.Int32@)">
      <param name="MSG"></param>
      <param name="wParam"></param>
      <param name="lParam"></param>
      <param name="plResult"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceObjectWindowless.ReactivateAndUndo"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceObjectWindowless.SetObjectRects(Microsoft.VisualStudio.OLE.Interop.RECT[],Microsoft.VisualStudio.OLE.Interop.RECT[])">
      <param name="lprcPosRect"></param>
      <param name="lprcClipRect"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceObjectWindowless.UIDeactivate"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSite">
      <summary>Manages the interaction between the container and the object's in-place client site. For more information, see IOleInPlaceSite.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSite.CanInPlaceActivate"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSite.ContextSensitiveHelp(System.Int32)">
      <param name="fEnterMode"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSite.DeactivateAndUndo"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSite.DiscardUndoState"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSite.GetWindow(System.IntPtr@)">
      <param name="phwnd"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSite.GetWindowContext(Microsoft.VisualStudio.OLE.Interop.IOleInPlaceFrame@,Microsoft.VisualStudio.OLE.Interop.IOleInPlaceUIWindow@,Microsoft.VisualStudio.OLE.Interop.RECT[],Microsoft.VisualStudio.OLE.Interop.RECT[],Microsoft.VisualStudio.OLE.Interop.OLEINPLACEFRAMEINFO[])">
      <param name="ppFrame"></param>
      <param name="ppDoc"></param>
      <param name="lprcPosRect"></param>
      <param name="lprcClipRect"></param>
      <param name="lpFrameInfo"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSite.OnInPlaceActivate"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSite.OnInPlaceDeactivate"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSite.OnPosRectChange(Microsoft.VisualStudio.OLE.Interop.RECT[])">
      <param name="lprcPosRect"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSite.OnUIActivate"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSite.OnUIDeactivate(System.Int32)">
      <param name="fUndoable"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSite.Scroll(Microsoft.VisualStudio.OLE.Interop.SIZE)">
      <param name="scrollExtant"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSiteEx">
      <summary>Provides additional activation and deactivation notification methods to avoid screen flashing when activating or deactivating an object. Extends and inherits from <see cref="T:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSite" />. For more information, see IOleInPlaceSiteEx.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSiteEx.CanInPlaceActivate"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSiteEx.ContextSensitiveHelp(System.Int32)">
      <param name="fEnterMode"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSiteEx.DeactivateAndUndo"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSiteEx.DiscardUndoState"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSiteEx.GetWindow(System.IntPtr@)">
      <param name="phwnd"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSiteEx.GetWindowContext(Microsoft.VisualStudio.OLE.Interop.IOleInPlaceFrame@,Microsoft.VisualStudio.OLE.Interop.IOleInPlaceUIWindow@,Microsoft.VisualStudio.OLE.Interop.RECT[],Microsoft.VisualStudio.OLE.Interop.RECT[],Microsoft.VisualStudio.OLE.Interop.OLEINPLACEFRAMEINFO[])">
      <param name="ppFrame"></param>
      <param name="ppDoc"></param>
      <param name="lprcPosRect"></param>
      <param name="lprcClipRect"></param>
      <param name="lpFrameInfo"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSiteEx.OnInPlaceActivate"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSiteEx.OnInPlaceActivateEx(System.Int32@,System.UInt32)">
      <param name="pfNoRedraw"></param>
      <param name="dwFlags"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSiteEx.OnInPlaceDeactivate"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSiteEx.OnInPlaceDeactivateEx(System.Int32)">
      <param name="fNoRedraw"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSiteEx.OnPosRectChange(Microsoft.VisualStudio.OLE.Interop.RECT[])">
      <param name="lprcPosRect"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSiteEx.OnUIActivate"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSiteEx.OnUIDeactivate(System.Int32)">
      <param name="fUndoable"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSiteEx.RequestUIActivate"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSiteEx.Scroll(Microsoft.VisualStudio.OLE.Interop.SIZE)">
      <param name="scrollExtant"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSiteWindowless">
      <summary>Enables a windowless object to process window messages, participate in drag-and-drop operations, and draw. Extends and inherits from <see cref="T:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSiteEx" />. For more information, see IOleInPlaceSiteWindowless.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSiteWindowless.AdjustRect(Microsoft.VisualStudio.OLE.Interop.RECT[])">
      <summary>Adjusts a specified rectangle if it is entirely or partially covered by overlapping, opaque objects.</summary>
      <returns>S_OK The rectangle was adjusted successfully. Note S_OK means that the rectangle was not completely covered. S_FALSE The rectangle was adjusted successfully. Note S_FALSE means that the rectangle was completely covered. Its width and height are now NULL. </returns>
      <param name="prc">[in,out] Rectangle to adjust.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSiteWindowless.CanInPlaceActivate">
      <summary>Determines if the container can activate the object in place.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSiteWindowless.CanWindowlessActivate">
      <summary>Informs an object if its container can support it as a windowless object that can be in-place activated.</summary>
      <returns>S_OK The object can activate in place without a window.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSiteWindowless.ContextSensitiveHelp(System.Int32)">
      <summary>Controls enabling of context-sensitive help.</summary>
      <param name="fEnterMode">[in] TRUE if help mode should be entered; FALSE if it should be exited.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSiteWindowless.DeactivateAndUndo"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSiteWindowless.DiscardUndoState">
      <summary>Deactivate the object and revert to undo state.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSiteWindowless.GetCapture">
      <summary>Called by an in-place active, windowless object to determine if it still has the mouse capture or not.</summary>
      <returns>S_OK The object currently has the mouse capture. S_FALSE The object does not currently have the mouse capture. </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSiteWindowless.GetDC(Microsoft.VisualStudio.OLE.Interop.RECT[],System.UInt32,System.IntPtr@)">
      <summary>Provides an object with a handle to a device context for a screen or compatible device from its container.</summary>
      <param name="pRect">[in] Pointer to the rectangle that the object wants to redraw, in client coordinates of the containing window. If this parameter is NULL, the object's full extent is redrawn.</param>
      <param name="grfFlags">[in] A combination of values from the OLEDCFLAGS enumeration. </param>
      <param name="phDC">[out] Pointer to a returned device context. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSiteWindowless.GetFocus">
      <summary>Called by an in-place active, windowless object to determine if it still has the keyboard focus or not.</summary>
      <returns>S_OK The object currently has the keyboard focus. S_FALSE The object does not currently have the keyboard focus. </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSiteWindowless.GetWindow(System.IntPtr@)">
      <summary>Gets a window handle.</summary>
      <param name="phwnd">[out] Pointer to where to return the window handle.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSiteWindowless.GetWindowContext(Microsoft.VisualStudio.OLE.Interop.IOleInPlaceFrame@,Microsoft.VisualStudio.OLE.Interop.IOleInPlaceUIWindow@,Microsoft.VisualStudio.OLE.Interop.RECT[],Microsoft.VisualStudio.OLE.Interop.RECT[],Microsoft.VisualStudio.OLE.Interop.OLEINPLACEFRAMEINFO[])">
      <summary>Enables an in-place object to retrieve window interfaces that form at the window object hierarchy, and the position in the parent window to locate the object's in-place activation window.</summary>
      <param name="ppFrame">[out] Address of IOleInPlaceFrame* pointer variable that receives the interface pointer to the frame. If an error occurs, the implementation must set *ppFrame to NULL. </param>
      <param name="ppDoc">[out] Address of IOleInPlaceUIWindow* pointer variable that receives the interface pointer to the document window. If the document window is the same as the frame window, *ppDoc is set to NULL. In this case, the object can only use *ppFrame or border negotiation. If an error is returned, the implementation must set *ppDoc to NULL.</param>
      <param name="lprcPosRect">[out] Pointer to the rectangle containing the position of the in-place object in the client coordinates of its parent window. If an error is returned, this parameter must be set to NULL.</param>
      <param name="lprcClipRect">[out] Pointer to the outer rectangle containing the in-place object's position rectangle (PosRect). This rectangle is relative to the client area of the object's parent window. If an error is returned, this parameter must be set to NULL.</param>
      <param name="lpFrameInfo">[out] Pointer to an OLEINPLACEFRAMEINFO structure the container is to fill in with appropriate data. If an error is returned, this parameter must be set to NULL. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSiteWindowless.InvalidateRect(Microsoft.VisualStudio.OLE.Interop.RECT[],System.Int32)">
      <summary>Enables an object to invalidate a specified rectangle of its in-place image on the screen.</summary>
      <param name="pRect">[in] Rectangle to invalidate, in client coordinates of the containing window. If this parameter is NULL, the object's full extent is invalidated.</param>
      <param name="fErase">[in] Specifies whether the background within the update region is to be erased when the region is updated. If this parameter is TRUE, the background is erased. If this parameter is FALSE, the background remains unchanged. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSiteWindowless.InvalidateRgn(System.IntPtr,System.Int32)">
      <summary>Enables an object to invalidate a specified region of its in-place image on the screen.</summary>
      <param name="hRGN">[in] Region to invalidate, in client coordinates of the containing window. If this parameter is NULL, the object's full extent is invalidated. </param>
      <param name="fErase">[in] Specifies whether the background within the update region is to be erased when the region is updated. If this parameter is TRUE, the background is erased. If this parameter is FALSE, the background remains unchanged. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSiteWindowless.OnDefWindowMessage(System.UInt32,System.IntPtr,System.IntPtr,System.Int32@)">
      <summary>Invokes the default processing for all messages passed to an object.</summary>
      <returns>S_OK The container's default processing for the window message was successfully invoked. S_FALSE The container's default processing for the window message was not invoked. See Note to Implementers below. </returns>
      <param name="MSG">[in] Identifier for the window message provided to the container by Windows.</param>
      <param name="wParam">[in] Parameter for the window message provided to the container by Windows.</param>
      <param name="lParam">[in] Parameter for the window message provided to the container by Windows. </param>
      <param name="plResult">[out] Pointer to result code for the window message as defined in the Windows API. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSiteWindowless.OnInPlaceActivate"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSiteWindowless.OnInPlaceActivateEx(System.Int32@,System.UInt32)">
      <summary>Called by the embedded object to determine if it needs to redraw itself upon activation.</summary>
      <param name="pfNoRedraw">[out] Pointer to current redraw status. The status is TRUE if the object need not redraw itself upon activation; FALSE if the object needs to redraw upon activation. Windowless objects usually do not need the value returned by this parameter and may pass a NULL pointer to save the container the burden of computing this value. </param>
      <param name="dwFlags">[in] Indicates whether the object is activated as a windowless object. This parameter takes values from the ACTIVATEFLAGS enumeration. See IOleInPlaceSiteWindowless for more information on windowless objects.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSiteWindowless.OnInPlaceDeactivate">
      <summary>Notifies the container that the object is no longer active in place. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSiteWindowless.OnInPlaceDeactivateEx(System.Int32)">
      <summary>Notifies the container of whether the object needs to be redrawn upon deactivation.</summary>
      <param name="fNoRedraw">[in] If TRUE, the container need not redraw the object after completing the deactivation; if FALSE the object must be redrawn after deactivation.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSiteWindowless.OnPosRectChange(Microsoft.VisualStudio.OLE.Interop.RECT[])">
      <summary>Object's extents have changed.</summary>
      <param name="lprcPosRect">[in] Pointer to the rectangle containing the position of the in-place object in the client coordinates of its parent window. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSiteWindowless.OnUIActivate">
      <summary>Notifies the container that the object is about to be activated in place, and that the main menu will be replaced by a composite menu.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSiteWindowless.OnUIDeactivate(System.Int32)">
      <summary>Notifies the container to reinstall its user interface and take focus. </summary>
      <param name="fUndoable">[in] Specifies whether the object can undo changes. TRUE if the object can undo, FALSE if it cannot. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSiteWindowless.ReleaseDC(System.IntPtr)">
      <summary>Releases the device context previously obtained by a call to IOleInPlaceSiteWindowless::GetDC.</summary>
      <param name="hDC">[in] Specifies the device context to be released.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSiteWindowless.RequestUIActivate">
      <summary>Notifies the container that the object is about to enter the UI-active state.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSiteWindowless.Scroll(Microsoft.VisualStudio.OLE.Interop.SIZE)">
      <summary>Specifies the number of pixels by which the container is to scroll the object. </summary>
      <param name="scrollExtant">[in] Number of pixels by which to scroll in the X and Y directions. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSiteWindowless.ScrollRect(System.Int32,System.Int32,Microsoft.VisualStudio.OLE.Interop.RECT[],Microsoft.VisualStudio.OLE.Interop.RECT[])">
      <summary>Enables an object to scroll an area within its in-place active image on the screen.</summary>
      <param name="dx">[in] Amount to scroll on the x-axis. </param>
      <param name="dy">[in] Amount to scroll on the y-axis.</param>
      <param name="pRectScroll">[in] Rectangle to scroll, in client coordinates of the containing window. NULL means the full object. </param>
      <param name="pRectClip">[in] Rectangle to clip to as defined for the Windows API function. Only pixels scrolling into this rectangle are drawn. Pixels scrolling out are not. If this parameter is NULL, the rectangle is not clipped.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSiteWindowless.SetCapture(System.Int32)">
      <summary>Enables an in-place active, windowless object to capture all mouse messages.</summary>
      <returns>S_OK Mouse capture was successfully granted to the object. If called to release the mouse capture, this method must not fail. S_FALSE Mouse capture was denied to the object. </returns>
      <param name="fCapture">[in] If TRUE, the container should capture the mouse for the object. If FALSE, the container should release mouse capture for the object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceSiteWindowless.SetFocus(System.Int32)">
      <summary>Sets the keyboard focus for a UI-active, windowless object.</summary>
      <returns>S_OK Keyboard focus was successfully given to the object. If this method is called to release the focus, it should never fail. S_FALSE Keyboard focus was denied to the object. </returns>
      <param name="fFocus">[in] If TRUE, sets the keyboard focus to the calling object. If FALSE, removes the keyboard focus from the calling object, provided that the object has the focus. </param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceUIWindow">
      <summary>Negotiates border space on the document or frame window. For information, see IOleInPlaceUIWindow.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceUIWindow.ContextSensitiveHelp(System.Int32)">
      <param name="fEnterMode"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceUIWindow.GetBorder(Microsoft.VisualStudio.OLE.Interop.RECT[])">
      <param name="lprectBorder"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceUIWindow.GetWindow(System.IntPtr@)">
      <param name="phwnd"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceUIWindow.RequestBorderSpace(Microsoft.VisualStudio.OLE.Interop.RECT[])">
      <param name="pborderwidths"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceUIWindow.SetActiveObject(Microsoft.VisualStudio.OLE.Interop.IOleInPlaceActiveObject,System.String)">
      <param name="pActiveObject"></param>
      <param name="pszObjName"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleInPlaceUIWindow.SetBorderSpace(Microsoft.VisualStudio.OLE.Interop.RECT[])">
      <param name="pborderwidths"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IOleObject">
      <summary>Enables an embedded object to provide basic functionality to its container. For information, see IOleObject.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleObject.Advise(Microsoft.VisualStudio.OLE.Interop.IAdviseSink,System.UInt32@)">
      <param name="pAdvSink"></param>
      <param name="pdwConnection"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleObject.Close(System.UInt32)">
      <param name="dwSaveOption"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleObject.DoVerb(System.Int32,Microsoft.VisualStudio.OLE.Interop.MSG[],Microsoft.VisualStudio.OLE.Interop.IOleClientSite,System.Int32,System.IntPtr,Microsoft.VisualStudio.OLE.Interop.RECT[])">
      <param name="iVerb"></param>
      <param name="lpmsg"></param>
      <param name="pActiveSite"></param>
      <param name="lindex"></param>
      <param name="hWndParent"></param>
      <param name="lprcPosRect"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleObject.EnumAdvise(Microsoft.VisualStudio.OLE.Interop.IEnumSTATDATA@)">
      <param name="ppenumAdvise"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleObject.EnumVerbs(Microsoft.VisualStudio.OLE.Interop.IEnumOLEVERB@)">
      <param name="ppEnumOleVerb"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleObject.GetClientSite(Microsoft.VisualStudio.OLE.Interop.IOleClientSite@)">
      <param name="ppClientSite"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleObject.GetClipboardData(System.UInt32,Microsoft.VisualStudio.OLE.Interop.IDataObject@)">
      <param name="dwReserved"></param>
      <param name="ppDataObject"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleObject.GetExtent(System.UInt32,Microsoft.VisualStudio.OLE.Interop.SIZEL[])">
      <param name="dwDrawAspect"></param>
      <param name="pSizel"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleObject.GetMiscStatus(System.UInt32,System.UInt32@)">
      <param name="dwAspect"></param>
      <param name="pdwStatus"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleObject.GetMoniker(System.UInt32,System.UInt32,Microsoft.VisualStudio.OLE.Interop.IMoniker@)">
      <param name="dwAssign"></param>
      <param name="dwWhichMoniker"></param>
      <param name="ppmk"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleObject.GetUserClassID(System.Guid@)">
      <param name="pClsid"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleObject.GetUserType(System.UInt32,System.IntPtr)">
      <param name="dwFormOfType"></param>
      <param name="pszUserType"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleObject.InitFromData(Microsoft.VisualStudio.OLE.Interop.IDataObject,System.Int32,System.UInt32)">
      <param name="pDataObject"></param>
      <param name="fCreation"></param>
      <param name="dwReserved"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleObject.IsUpToDate"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleObject.SetClientSite(Microsoft.VisualStudio.OLE.Interop.IOleClientSite)">
      <param name="pClientSite"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleObject.SetColorScheme(Microsoft.VisualStudio.OLE.Interop.LOGPALETTE[])">
      <param name="pLogpal"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleObject.SetExtent(System.UInt32,Microsoft.VisualStudio.OLE.Interop.SIZEL[])">
      <param name="dwDrawAspect"></param>
      <param name="pSizel"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleObject.SetHostNames(System.String,System.String)">
      <param name="szContainerApp"></param>
      <param name="szContainerObj"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleObject.SetMoniker(System.UInt32,Microsoft.VisualStudio.OLE.Interop.IMoniker)">
      <param name="dwWhichMoniker"></param>
      <param name="pmk"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleObject.Unadvise(System.UInt32)">
      <param name="dwConnection"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleObject.Update"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IOleParentUndoUnit">
      <summary>Enables undo units to contain child undo units and thus to support complex undo actions. For more information, see IOleParentUndoUnit.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleParentUndoUnit.Add(Microsoft.VisualStudio.OLE.Interop.IOleUndoUnit)">
      <param name="pUU"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleParentUndoUnit.Close(Microsoft.VisualStudio.OLE.Interop.IOleParentUndoUnit,System.Int32)">
      <param name="pPUU"></param>
      <param name="fCommit"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleParentUndoUnit.Do(Microsoft.VisualStudio.OLE.Interop.IOleUndoManager)">
      <param name="pUndoManager"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleParentUndoUnit.FindUnit(Microsoft.VisualStudio.OLE.Interop.IOleUndoUnit)">
      <param name="pUU"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleParentUndoUnit.GetDescription(System.String@)">
      <param name="pBstr"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleParentUndoUnit.GetParentState(System.UInt32@)">
      <param name="pdwState"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleParentUndoUnit.GetUnitType(System.Guid@,System.Int32@)">
      <param name="pClsid"></param>
      <param name="plID"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleParentUndoUnit.OnNextAdd"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleParentUndoUnit.Open(Microsoft.VisualStudio.OLE.Interop.IOleParentUndoUnit)">
      <param name="pPUU"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IOleUndoManager">
      <summary>Enables containers to implement multi-level undo and redo operations for actions in contained controls. For more information, see IOleUndoManager.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleUndoManager.Add(Microsoft.VisualStudio.OLE.Interop.IOleUndoUnit)">
      <param name="pUU"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleUndoManager.Close(Microsoft.VisualStudio.OLE.Interop.IOleParentUndoUnit,System.Int32)">
      <param name="pPUU"></param>
      <param name="fCommit"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleUndoManager.DiscardFrom(Microsoft.VisualStudio.OLE.Interop.IOleUndoUnit)">
      <param name="pUU"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleUndoManager.Enable(System.Int32)">
      <param name="fEnable"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleUndoManager.EnumRedoable(Microsoft.VisualStudio.OLE.Interop.IEnumOleUndoUnits@)">
      <param name="ppEnum"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleUndoManager.EnumUndoable(Microsoft.VisualStudio.OLE.Interop.IEnumOleUndoUnits@)">
      <param name="ppEnum"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleUndoManager.GetLastRedoDescription(System.String@)">
      <param name="pBstr"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleUndoManager.GetLastUndoDescription(System.String@)">
      <param name="pBstr"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleUndoManager.GetOpenParentState(System.UInt32@)">
      <param name="pdwState"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleUndoManager.Open(Microsoft.VisualStudio.OLE.Interop.IOleParentUndoUnit)">
      <param name="pPUU"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleUndoManager.RedoTo(Microsoft.VisualStudio.OLE.Interop.IOleUndoUnit)">
      <param name="pUU"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleUndoManager.UndoTo(Microsoft.VisualStudio.OLE.Interop.IOleUndoUnit)">
      <param name="pUU"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IOleUndoUnit">
      <summary>Defines an undo unit, a component containing the information necessary to undo or redo a single action. For more information, see IOleUndoUnit.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleUndoUnit.Do(Microsoft.VisualStudio.OLE.Interop.IOleUndoManager)">
      <param name="pUndoManager"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleUndoUnit.GetDescription(System.String@)">
      <param name="pBstr"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleUndoUnit.GetUnitType(System.Guid@,System.Int32@)">
      <param name="pClsid"></param>
      <param name="plID"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleUndoUnit.OnNextAdd"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IOleWindow">
      <summary>Enables an application to get handles to the windows participating in in-place activation, and to enter and exit context-sensitive help mode. For more information, see IOleWindow.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleWindow.ContextSensitiveHelp(System.Int32)">
      <param name="fEnterMode"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOleWindow.GetWindow(System.IntPtr@)">
      <param name="phwnd"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IOplockStorage"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOplockStorage.CreateStorageEx(System.String,System.UInt32,System.UInt32,System.UInt32,System.Guid@,System.IntPtr@)">
      <param name="pwcsName"></param>
      <param name="grfMode"></param>
      <param name="stgfmt"></param>
      <param name="grfAttrs"></param>
      <param name="riid"></param>
      <param name="ppstgOpen"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IOplockStorage.OpenStorageEx(System.String,System.UInt32,System.UInt32,System.UInt32,System.Guid@,System.IntPtr@)">
      <param name="pwcsName"></param>
      <param name="grfMode"></param>
      <param name="stgfmt"></param>
      <param name="grfAttrs"></param>
      <param name="riid"></param>
      <param name="ppstgOpen"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IParseDisplayName">
      <summary>Translates a user-readable display name into a moniker object. For more information, see IParseDisplayName.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IParseDisplayName.ParseDisplayName(Microsoft.VisualStudio.OLE.Interop.IBindCtx,System.String,System.UInt32@,Microsoft.VisualStudio.OLE.Interop.IMoniker@)">
      <param name="pbc"></param>
      <param name="pszDisplayName"></param>
      <param name="pchEaten"></param>
      <param name="ppmkOut"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IPerPropertyBrowsing">
      <summary>Accesses the information displayed in an object's property pages. For more information, see IPerPropertyBrowsing.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPerPropertyBrowsing.GetDisplayString(System.Int32,System.String@)">
      <param name="DISPID"></param>
      <param name="pBstr"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPerPropertyBrowsing.GetPredefinedStrings(System.Int32,Microsoft.VisualStudio.OLE.Interop.CALPOLESTR[],Microsoft.VisualStudio.OLE.Interop.CADWORD[])">
      <param name="DISPID"></param>
      <param name="pCaStringsOut"></param>
      <param name="pCaCookiesOut"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPerPropertyBrowsing.GetPredefinedValue(System.Int32,System.UInt32,System.Object@)">
      <param name="DISPID"></param>
      <param name="dwCookie"></param>
      <param name="pVarOut"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPerPropertyBrowsing.MapPropertyToPage(System.Int32,System.Guid@)">
      <param name="DISPID"></param>
      <param name="pClsid"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IPersist">
      <summary>Gets the class identifier (CLSID) of an object that can be persisted (stored) in the system. For more information, see IPersist.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPersist.GetClassID(System.Guid@)">
      <param name="pClassID"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IPersistFile">
      <summary>Enables an object to be saved or loaded to a disk file. Inherits from <see cref="T:Microsoft.VisualStudio.OLE.Interop.IPersist" />. For more information, see IPersistFile.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPersistFile.GetClassID(System.Guid@)">
      <param name="pClassID"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPersistFile.GetCurFile(System.String@)">
      <param name="ppszFileName"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPersistFile.IsDirty"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPersistFile.Load(System.String,System.UInt32)">
      <param name="pszFileName"></param>
      <param name="dwMode"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPersistFile.Save(System.String,System.Int32)">
      <param name="pszFileName"></param>
      <param name="fRemember"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPersistFile.SaveCompleted(System.String)">
      <param name="pszFileName"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IPersistMemory">
      <summary>Saves and loads objects from a stream. Inherits from <see cref="T:Microsoft.VisualStudio.OLE.Interop.IPersist" />. For more information, see IPersistMemory.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPersistMemory.GetClassID(System.Guid@)">
      <param name="pClassID"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPersistMemory.GetSizeMax(System.UInt32@)">
      <param name="pcbSize"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPersistMemory.InitNew"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPersistMemory.IsDirty"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPersistMemory.Load(System.Byte[],System.UInt32)">
      <param name="pMem"></param>
      <param name="cbSize"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPersistMemory.Save(System.Byte[],System.Int32,System.UInt32)">
      <param name="pMem"></param>
      <param name="fClearDirty"></param>
      <param name="cbSize"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IPersistPropertyBag">
      <summary>Defines a property-based persistence system. Inherits from <see cref="T:Microsoft.VisualStudio.OLE.Interop.IPersist" />. For more information, see IPersistPropertyBag.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPersistPropertyBag.GetClassID(System.Guid@)">
      <param name="pClassID"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPersistPropertyBag.InitNew"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPersistPropertyBag.Load(Microsoft.VisualStudio.OLE.Interop.IPropertyBag,Microsoft.VisualStudio.OLE.Interop.IErrorLog)">
      <param name="pPropBag"></param>
      <param name="pErrorLog"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPersistPropertyBag.Save(Microsoft.VisualStudio.OLE.Interop.IPropertyBag,System.Int32,System.Int32)">
      <param name="pPropBag"></param>
      <param name="fClearDirty"></param>
      <param name="fSaveAllProperties"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IPersistPropertyBag2">
      <summary>Defines a property-based persistence system. Extends <see cref="T:Microsoft.VisualStudio.OLE.Interop.IPropertyBag" /> and inherits from <see cref="T:Microsoft.VisualStudio.OLE.Interop.IPersist" />. For more information, see IPersistPropertyBag2.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPersistPropertyBag2.GetClassID(System.Guid@)">
      <param name="pClassID"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPersistPropertyBag2.InitNew"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPersistPropertyBag2.IsDirty"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPersistPropertyBag2.Load(Microsoft.VisualStudio.OLE.Interop.IPropertyBag2,Microsoft.VisualStudio.OLE.Interop.IErrorLog)">
      <param name="pPropBag"></param>
      <param name="pErrLog"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPersistPropertyBag2.Save(Microsoft.VisualStudio.OLE.Interop.IPropertyBag2,System.Int32,System.Int32)">
      <param name="pPropBag"></param>
      <param name="fClearDirty"></param>
      <param name="fSaveAllProperties"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IPersistStorage">
      <summary>Enables a container to pass a storage object to a contained object and to save and to load the object. Inherits from <see cref="T:Microsoft.VisualStudio.OLE.Interop.IPersist" />. For more information, see IPersistStorage.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPersistStorage.GetClassID(System.Guid@)">
      <param name="pClassID"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPersistStorage.HandsOffStorage"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPersistStorage.InitNew(Microsoft.VisualStudio.OLE.Interop.IStorage)">
      <param name="pstg"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPersistStorage.IsDirty"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPersistStorage.Load(Microsoft.VisualStudio.OLE.Interop.IStorage)">
      <param name="pstg"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPersistStorage.Save(Microsoft.VisualStudio.OLE.Interop.IStorage,System.Int32)">
      <param name="pStgSave"></param>
      <param name="fSameAsLoad"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPersistStorage.SaveCompleted(Microsoft.VisualStudio.OLE.Interop.IStorage)">
      <param name="pStgNew"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IPersistStream">
      <summary>Saves and loads objects using a simple stream. Inherits from <see cref="T:Microsoft.VisualStudio.OLE.Interop.IPersist" />. For more information, see IPersistStream.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPersistStream.GetClassID(System.Guid@)">
      <param name="pClassID"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPersistStream.GetSizeMax(Microsoft.VisualStudio.OLE.Interop.ULARGE_INTEGER[])">
      <param name="pcbSize"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPersistStream.IsDirty"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPersistStream.Load(Microsoft.VisualStudio.OLE.Interop.IStream)">
      <param name="pstm"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPersistStream.Save(Microsoft.VisualStudio.OLE.Interop.IStream,System.Int32)">
      <param name="pstm"></param>
      <param name="fClearDirty"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IPersistStreamInit">
      <summary>Saves and loads objects from a stream. Replaces <see cref="T:Microsoft.VisualStudio.OLE.Interop.IPersistStream" /> and adds an initialization method. Inherits from <see cref="T:Microsoft.VisualStudio.OLE.Interop.IPersist" />. For more information, see IPersistStreamInit.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPersistStreamInit.GetClassID(System.Guid@)">
      <param name="pClassID"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPersistStreamInit.GetSizeMax(Microsoft.VisualStudio.OLE.Interop.ULARGE_INTEGER[])">
      <param name="pcbSize"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPersistStreamInit.InitNew"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPersistStreamInit.IsDirty"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPersistStreamInit.Load(Microsoft.VisualStudio.OLE.Interop.IStream)">
      <param name="pstm"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPersistStreamInit.Save(Microsoft.VisualStudio.OLE.Interop.IStream,System.Int32)">
      <param name="pstm"></param>
      <param name="fClearDirty"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IPointerInactive">
      <summary>Enables an inactive object to receive mouse and keyboard messages. For more information, see IPointerInactive.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPointerInactive.GetActivationPolicy(System.UInt32@)">
      <param name="pdwPolicy"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPointerInactive.OnInactiveMouseMove(Microsoft.VisualStudio.OLE.Interop.RECT[],System.Int32,System.Int32,System.UInt32)">
      <param name="pRectBounds"></param>
      <param name="x"></param>
      <param name="y"></param>
      <param name="grfKeyState"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPointerInactive.OnInactiveSetCursor(Microsoft.VisualStudio.OLE.Interop.RECT[],System.Int32,System.Int32,System.UInt32,System.Int32)">
      <param name="pRectBounds"></param>
      <param name="x"></param>
      <param name="y"></param>
      <param name="dwMouseMsg"></param>
      <param name="fSetAlways"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IPrint">
      <summary>Supports programmatic printing for an object. For more information, see IPrint.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPrint.GetPageInfo(System.Int32@,System.Int32@)">
      <param name="pnFirstPage"></param>
      <param name="pcPages"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPrint.Print(System.UInt32,System.IntPtr@,System.IntPtr@,Microsoft.VisualStudio.OLE.Interop.STGMEDIUM[],Microsoft.VisualStudio.OLE.Interop.IContinueCallback,System.Int32,System.Int32@,System.Int32@)">
      <param name="grfFlags"></param>
      <param name="pptd"></param>
      <param name="ppPageSet"></param>
      <param name="pstgmOptions"></param>
      <param name="pcallback"></param>
      <param name="nFirstPage"></param>
      <param name="pcPagesPrinted"></param>
      <param name="pnLastPage"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPrint.SetInitialPageNum(System.Int32)">
      <param name="nFirstPage"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IProcessInitControl">
      <summary>Enables specification of a time-out interval for initialization of a process. For more information, see IProcessInitControl.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IProcessInitControl.ResetInitializerTimeout(System.UInt32)">
      <param name="dwSecondsRemaining"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IProgressNotify">
      <summary>Enables objects to receive notice about the progress of a download. For more information, see IProgressNotify.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IProgressNotify.OnProgress(System.UInt32,System.UInt32,System.Int32,System.Int32)">
      <param name="dwProgressCurrent"></param>
      <param name="dwProgressMaximum"></param>
      <param name="fAccurate"></param>
      <param name="fOwner"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IPropertyBag">
      <summary>Sets and retrieves values for particular properties. For more information, see IPropertyBag.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertyBag.Read(System.String,System.Object@,Microsoft.VisualStudio.OLE.Interop.IErrorLog,System.UInt32,System.Object)">
      <param name="pszPropName"></param>
      <param name="pVar"></param>
      <param name="pErrorLog"></param>
      <param name="VARTYPE"></param>
      <param name="pUnkObj"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertyBag.Write(System.String,System.Object@)">
      <param name="pszPropName"></param>
      <param name="pVar"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IPropertyBag2">
      <summary>Sets and retrieves values for particular properties. Extends, but does not inherit from, <see cref="T:Microsoft.VisualStudio.OLE.Interop.IPropertyBag" />. Adds methods to retrieve type information about a property. For more information, see IPropertyBag2.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertyBag2.CountProperties(System.UInt32@)">
      <summary>The number of properties in the property bag.</summary>
      <param name="pcProperties">The number of properties.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertyBag2.GetPropertyInfo(System.UInt32,System.UInt32,Microsoft.VisualStudio.OLE.Interop.PROPBAG2[],System.UInt32@)">
      <summary>Gets information for properties in a property bag without actually getting those properties.</summary>
      <param name="iProperty">[in] The zero-based index of the first property for which information is requested.</param>
      <param name="cProperties">[in] The number of properties for which to get information. This argument specifies the number of array elements in <paramref name="pPropBag" />.</param>
      <param name="pPropBag">[out] The address of an array of <see cref="T:Microsoft.VisualStudio.OLE.Interop.PROPBAG2" /> structures that receive the information for the properties. There must be at least <paramref name="cProperties" /> elements in this array. This argument cannot be NULL.</param>
      <param name="pcProperties">[out] The number of properties for which information was retrieved. This argument cannot be NULL.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertyBag2.LoadObject(System.String,System.UInt32,System.Object,Microsoft.VisualStudio.OLE.Interop.IErrorLog)">
      <summary>Reads persistent properties from a property object.</summary>
      <param name="pstrName">[in] The name of the property.</param>
      <param name="dwHint">[in] An integer value that was retrieved by using <see cref="M:Microsoft.VisualStudio.OLE.Interop.IPropertyBag2.GetPropertyInfo(System.UInt32,System.UInt32,Microsoft.VisualStudio.OLE.Interop.PROPBAG2[],System.UInt32@)" />. This argument is optional and must be zero, if the value is not known or used.</param>
      <param name="punkObject">[in] The address of the object's <paramref name="IUnknown" /> interface. This argument cannot be NULL.</param>
      <param name="pErrLog">[in] The address of an <see cref="T:Microsoft.VisualStudio.OLE.Interop.IErrorLog" /> interface in which the property bag stores any errors that occur during the load. This argument can be NULL; in which case, the caller does not receive logging errors.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertyBag2.Read(System.UInt32,Microsoft.VisualStudio.OLE.Interop.PROPBAG2[],Microsoft.VisualStudio.OLE.Interop.IErrorLog,System.Object@,System.Int32@)">
      <summary>Reads one or more properties from the property bag.</summary>
      <param name="cProperties">[in] The number of properties to read. This argument specifies the number of elements in the arrays at <paramref name="pPropBag" />, <paramref name="pvarValue" />, and <paramref name="phrError" />.</param>
      <param name="pPropBag">[in[ An array of <see cref="T:Microsoft.VisualStudio.OLE.Interop.PROPBAG2" /> structures that specify the properties that are requested. The vt and pstrName members of these structures must be filled in before this method can be called. The dwHint member of these structures is optional. There must be at least <paramref name="cProperties" /> elements in this array. This argument cannot be NULL.</param>
      <param name="pErrLog">[in] An <see cref="T:Microsoft.VisualStudio.OLE.Interop.IErrorLog" /> interface in which the property bag stores any errors that occur during the reads. This argument can be NULL, in which case, the caller receives no logging errors.</param>
      <param name="pvarValue">[out] An array of VARIANT structures that receive the property values. The caller does not have to initialize these structures before calling <see cref="M:Microsoft.VisualStudio.OLE.Interop.IPropertyBag2.Read(System.UInt32,Microsoft.VisualStudio.OLE.Interop.PROPBAG2[],Microsoft.VisualStudio.OLE.Interop.IErrorLog,System.Object@,System.Int32@)" />. The <see cref="M:Microsoft.VisualStudio.OLE.Interop.IPropertyBag2.Read(System.UInt32,Microsoft.VisualStudio.OLE.Interop.PROPBAG2[],Microsoft.VisualStudio.OLE.Interop.IErrorLog,System.Object@,System.Int32@)" />method fills the type and value fields in these structures before it returns. There must be at least <paramref name="cProperties" /> elements in this array. The calling application is frees any allocations contained in these structures. This argument cannot be NULL.</param>
      <param name="phrError">[out] An array of HRESULT values that receives the result of each property read. There must be at least <paramref name="cProperties" /> elements in this array. This argument cannot be NULL.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertyBag2.Write(System.UInt32,Microsoft.VisualStudio.OLE.Interop.PROPBAG2[],System.Object@)">
      <summary>Saves properties into the property bag.</summary>
      <param name="cProperties">[in] The number of properties to read. This argument specifies the number of elements in the arrays at <paramref name="pPropBag" />, <paramref name="pvarValue" />, and <paramref name="phrError" />.</param>
      <param name="pPropBag">[in[ An array of <see cref="T:Microsoft.VisualStudio.OLE.Interop.PROPBAG2" /> structures that specify the properties that are requested. The vt and pstrName members of these structures must be filled in before this method can be called. The dwHint member of these structures is optional. There must be at least <paramref name="cProperties" /> elements in this array. This argument cannot be NULL.</param>
      <param name="pvarValue">[out] An array of VARIANT structures that receive the property values. The caller does not have to initialize these structures before calling <see cref="M:Microsoft.VisualStudio.OLE.Interop.IPropertyBag2.Read(System.UInt32,Microsoft.VisualStudio.OLE.Interop.PROPBAG2[],Microsoft.VisualStudio.OLE.Interop.IErrorLog,System.Object@,System.Int32@)" />. The <see cref="M:Microsoft.VisualStudio.OLE.Interop.IPropertyBag2.Read(System.UInt32,Microsoft.VisualStudio.OLE.Interop.PROPBAG2[],Microsoft.VisualStudio.OLE.Interop.IErrorLog,System.Object@,System.Int32@)" />method fills the type field and the value field in these structures before it returns. There must be at least <paramref name="cProperties" /> elements in this array. The calling application frees any allocations contained in these structures. This argument cannot be NULL.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IPropertyNotifySink">
      <summary>Enables an object to receive notification of property changes on objects that use the interface as an outgoing interface. For more information, see IPropertyNotifySink.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertyNotifySink.OnChanged(System.Int32)">
      <param name="DISPID"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertyNotifySink.OnRequestEdit(System.Int32)">
      <param name="DISPID"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IPropertyPage">
      <summary>Defines the main features of an object representing property pages. For more information, see IPropertyPage.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertyPage.Activate(System.IntPtr,Microsoft.VisualStudio.OLE.Interop.RECT[],System.Int32)">
      <param name="hWndParent"></param>
      <param name="pRect"></param>
      <param name="bModal"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertyPage.Apply"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertyPage.Deactivate"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertyPage.GetPageInfo(Microsoft.VisualStudio.OLE.Interop.PROPPAGEINFO[])">
      <param name="pPageInfo"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertyPage.Help(System.String)">
      <param name="pszHelpDir"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertyPage.IsPageDirty"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertyPage.Move(Microsoft.VisualStudio.OLE.Interop.RECT[])">
      <param name="pRect"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertyPage.SetObjects(System.UInt32,System.Object[])">
      <param name="cObjects"></param>
      <param name="ppunk"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertyPage.SetPageSite(Microsoft.VisualStudio.OLE.Interop.IPropertyPageSite)">
      <param name="pPageSite"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertyPage.Show(System.UInt32)">
      <param name="nCmdShow"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertyPage.TranslateAccelerator(Microsoft.VisualStudio.OLE.Interop.MSG[])">
      <param name="pMsg"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IPropertyPage2">
      <summary>Defines the main features of an object representing property pages. Adds support for an initial selection of a property on a page. Extends and inherits from <see cref="T:Microsoft.VisualStudio.OLE.Interop.IPropertyPage" />. For more information, see IPropertyPage2.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertyPage2.Activate(System.IntPtr,Microsoft.VisualStudio.OLE.Interop.RECT[],System.Int32)">
      <param name="hWndParent"></param>
      <param name="pRect"></param>
      <param name="bModal"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertyPage2.Apply"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertyPage2.Deactivate"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertyPage2.EditProperty(System.Int32)">
      <param name="DISPID"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertyPage2.GetPageInfo(Microsoft.VisualStudio.OLE.Interop.PROPPAGEINFO[])">
      <param name="pPageInfo"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertyPage2.Help(System.String)">
      <param name="pszHelpDir"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertyPage2.IsPageDirty"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertyPage2.Move(Microsoft.VisualStudio.OLE.Interop.RECT[])">
      <param name="pRect"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertyPage2.SetObjects(System.UInt32,System.Object[])">
      <param name="cObjects"></param>
      <param name="ppunk"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertyPage2.SetPageSite(Microsoft.VisualStudio.OLE.Interop.IPropertyPageSite)">
      <param name="pPageSite"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertyPage2.Show(System.UInt32)">
      <param name="nCmdShow"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertyPage2.TranslateAccelerator(Microsoft.VisualStudio.OLE.Interop.MSG[])">
      <param name="pMsg"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IPropertyPageSite">
      <summary>Provides the main features for a property pages site. Each property page within a property frame has a site. For more information, see IPropertyPageSite.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertyPageSite.GetLocaleID(System.UInt32@)">
      <param name="pLocaleID"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertyPageSite.GetPageContainer(System.Object@)">
      <param name="ppunk"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertyPageSite.OnStatusChange(System.UInt32)">
      <param name="dwFlags"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertyPageSite.TranslateAccelerator(Microsoft.VisualStudio.OLE.Interop.MSG[])">
      <param name="pMsg"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IPropertySetStorage">
      <summary>Creates, opens, deletes, and enumerates storage of property sets supporting the <see cref="T:Microsoft.VisualStudio.OLE.Interop.IPropertyStorage" /> interface. For more information, see IPropertySetStorage.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertySetStorage.Create(System.Guid@,System.Guid@,System.UInt32,System.UInt32,Microsoft.VisualStudio.OLE.Interop.IPropertyStorage@)">
      <param name="rfmtid"></param>
      <param name="pClsid"></param>
      <param name="grfFlags"></param>
      <param name="grfMode"></param>
      <param name="ppprstg"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertySetStorage.Delete(System.Guid@)">
      <param name="rfmtid"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertySetStorage.Enum(Microsoft.VisualStudio.OLE.Interop.IEnumSTATPROPSETSTG@)">
      <param name="ppEnum"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertySetStorage.Open(System.Guid@,System.UInt32,Microsoft.VisualStudio.OLE.Interop.IPropertyStorage@)">
      <param name="rfmtid"></param>
      <param name="grfMode"></param>
      <param name="ppprstg"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IPropertyStorage">
      <summary>Manages the persistent properties of a single property set. For more information, see IPropertyStorage and IPropertySetStorage.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertyStorage.Commit(System.UInt32)">
      <param name="grfCommitFlags"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertyStorage.DeleteMultiple(System.UInt32,Microsoft.VisualStudio.OLE.Interop.PROPSPEC[])">
      <param name="cpspec"></param>
      <param name="rgpspec"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertyStorage.DeletePropertyNames(System.UInt32,System.UInt32[])">
      <param name="cpropid"></param>
      <param name="rgpropid"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertyStorage.Enum(Microsoft.VisualStudio.OLE.Interop.IEnumSTATPROPSTG@)">
      <param name="ppEnum"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertyStorage.ReadMultiple(System.UInt32,Microsoft.VisualStudio.OLE.Interop.PROPSPEC[],Microsoft.VisualStudio.OLE.Interop.PROPVARIANT[])">
      <param name="cpspec"></param>
      <param name="rgpspec"></param>
      <param name="rgpropvar"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertyStorage.ReadPropertyNames(System.UInt32,System.UInt32[],System.String[])">
      <param name="cpropid"></param>
      <param name="rgpropid"></param>
      <param name="rglpwstrName"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertyStorage.Revert"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertyStorage.SetClass(System.Guid@)">
      <param name="clsid"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertyStorage.SetTimes(Microsoft.VisualStudio.OLE.Interop.FILETIME[],Microsoft.VisualStudio.OLE.Interop.FILETIME[],Microsoft.VisualStudio.OLE.Interop.FILETIME[])">
      <param name="pctime"></param>
      <param name="patime"></param>
      <param name="pmtime"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertyStorage.Stat(Microsoft.VisualStudio.OLE.Interop.STATPROPSETSTG[])">
      <param name="pstatpsstg"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertyStorage.WriteMultiple(System.UInt32,Microsoft.VisualStudio.OLE.Interop.PROPSPEC[],Microsoft.VisualStudio.OLE.Interop.PROPVARIANT[],System.UInt32)">
      <param name="cpspec"></param>
      <param name="rgpspec"></param>
      <param name="rgpropvar"></param>
      <param name="propidNameFirst"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPropertyStorage.WritePropertyNames(System.UInt32,System.UInt32[],System.String[])">
      <param name="cpropid"></param>
      <param name="rgpropid"></param>
      <param name="rglpwstrName"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IProvideClassInfo">
      <summary>Provides the type information (<see cref="T:Microsoft.VisualStudio.OLE.Interop.ITypeInfo" />) for a given coclass (Component Automation). For more information, see IProvideClassInfo.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IProvideClassInfo.GetClassInfo(System.Type@)">
      <param name="ppTI"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IProvideClassInfo2">
      <summary>Provides the type information (<see cref="T:Microsoft.VisualStudio.OLE.Interop.ITypeInfo" />) for a given coclass (Component Automation). Extends and inherits from <see cref="T:Microsoft.VisualStudio.OLE.Interop.IProvideClassInfo" />. Provides an easier method to get the default event set. For more information, see IProvideClassInfo.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IProvideClassInfo2.GetClassInfo(System.Type@)">
      <param name="ppTI"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IProvideClassInfo2.GetGUID(System.UInt32,System.Guid@)">
      <param name="dwGuidKind"></param>
      <param name="pGUID"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IProvideMultipleClassInfo">
      <summary>Retrieves type information from a component that may have multiple coclasses. Extends and inherits from <see cref="T:Microsoft.VisualStudio.OLE.Interop.IProvideClassInfo2" />. For more information, see IProvideMultipleClassInfo.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IProvideMultipleClassInfo.GetClassInfo(System.Type@)">
      <param name="ppTI"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IProvideMultipleClassInfo.GetGUID(System.UInt32,System.Guid@)">
      <param name="dwGuidKind"></param>
      <param name="pGUID"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IProvideMultipleClassInfo.GetInfoOfIndex(System.UInt32,System.UInt32,System.Type@,System.UInt32@,System.UInt32@,System.Guid@,System.Guid@)">
      <param name="iti"></param>
      <param name="dwFlags"></param>
      <param name="pptiCoClass"></param>
      <param name="pdwTIFlags"></param>
      <param name="pcdispidReserved"></param>
      <param name="piidPrimary"></param>
      <param name="piidSource"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IProvideMultipleClassInfo.GetMultiTypeInfoCount(System.UInt32@)">
      <param name="pcti"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IPSFactoryBuffer">
      <summary>Creates proxies and stubs for remote invocation. For more information, see IPSFactoryBuffer.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPSFactoryBuffer.CreateProxy(System.Object,System.Guid@,Microsoft.VisualStudio.OLE.Interop.IRpcProxyBuffer@,System.IntPtr@)">
      <param name="pUnkOuter"></param>
      <param name="riid"></param>
      <param name="ppProxy"></param>
      <param name="ppv"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IPSFactoryBuffer.CreateStub(System.Guid@,System.Object,Microsoft.VisualStudio.OLE.Interop.IRpcStubBuffer@)">
      <param name="riid"></param>
      <param name="pUnkServer"></param>
      <param name="ppStub"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IQuickActivate">
      <summary>Decreases the time to activate a control by combining loading and initialization into a single call. For more information, see IQuickActivate.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IQuickActivate.GetContentExtent(Microsoft.VisualStudio.OLE.Interop.SIZEL[])">
      <param name="pSizel"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IQuickActivate.QuickActivate(Microsoft.VisualStudio.OLE.Interop.QACONTAINER[],Microsoft.VisualStudio.OLE.Interop.QACONTROL[])">
      <param name="pQaContainer"></param>
      <param name="pQaControl"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IQuickActivate.SetContentExtent(Microsoft.VisualStudio.OLE.Interop.SIZEL[])">
      <param name="pSizel"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IRecordInfo">
      <summary>Describes the structure of a user-defined type (UDT) stored in a variant. For more information, see IRecordInfo Interface.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRecordInfo.GetField(System.IntPtr,System.String,System.Object@)">
      <param name="pvData"></param>
      <param name="szFieldName"></param>
      <param name="pvarField"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRecordInfo.GetFieldNames(System.UInt32@,System.String[])">
      <param name="pcNames"></param>
      <param name="rgBstrNames"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRecordInfo.GetFieldNoCopy(System.IntPtr,System.String,System.Object@,System.IntPtr@)">
      <param name="pvData"></param>
      <param name="szFieldName"></param>
      <param name="pvarField"></param>
      <param name="ppvDataCArray"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRecordInfo.GetGUID(System.Guid@)">
      <param name="pGUID"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRecordInfo.GetName(System.String@)">
      <param name="pBstrName"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRecordInfo.GetSize(System.UInt32@)">
      <param name="pcbSize"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRecordInfo.GetTypeInfo(System.Type@)">
      <param name="ppTypeInfo"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRecordInfo.IsMatchingType(Microsoft.VisualStudio.OLE.Interop.IRecordInfo)">
      <param name="pRecordInfo"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRecordInfo.PutField(System.UInt32,System.IntPtr@,System.String,System.Object@)">
      <param name="wFlags"></param>
      <param name="pvData"></param>
      <param name="szFieldName"></param>
      <param name="pvarField"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRecordInfo.PutFieldNoCopy(System.UInt32,System.IntPtr@,System.String,System.Object@)">
      <param name="wFlags"></param>
      <param name="pvData"></param>
      <param name="szFieldName"></param>
      <param name="pvarField"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRecordInfo.RecordClear(System.IntPtr)">
      <param name="pvExisting"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRecordInfo.RecordCopy(System.IntPtr,System.IntPtr@)">
      <param name="pvExisting"></param>
      <param name="pvNew"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRecordInfo.RecordCreate"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRecordInfo.RecordCreateCopy(System.IntPtr,System.IntPtr@)">
      <param name="pvSource"></param>
      <param name="ppvDest"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRecordInfo.RecordDestroy(System.IntPtr)">
      <param name="pvRecord"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRecordInfo.RecordInit(System.IntPtr@)">
      <param name="pvNew"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IReleaseMarshalBuffers"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IReleaseMarshalBuffers.ReleaseMarshalBuffer(Microsoft.VisualStudio.OLE.Interop.RPCOLEMESSAGE[],System.UInt32,System.Object)">
      <param name="pMsg"></param>
      <param name="dwFlags"></param>
      <param name="pChnl"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IRootStorage">
      <summary>Switches the underlying file of a storage object to a different file and saves the object to that file. For more information, see IRootStorage.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRootStorage.SwitchToFile(System.String)">
      <param name="pszFile"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IROTData">
      <summary>Retrieves data to enable the Running Object Table (ROT) to compare monikers. For more information, see IROTData.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IROTData.GetComparisonData(System.Byte[],System.UInt32,System.UInt32@)">
      <param name="pbData"></param>
      <param name="cbMax"></param>
      <param name="pcbData"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IRpcChannelBuffer">
      <summary>Marshals data between a COM client proxy and a COM server stub. For more information, see IRpcChannelBuffer.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRpcChannelBuffer.FreeBuffer(Microsoft.VisualStudio.OLE.Interop.RPCOLEMESSAGE[])">
      <param name="pMessage"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRpcChannelBuffer.GetBuffer(Microsoft.VisualStudio.OLE.Interop.RPCOLEMESSAGE[],System.Guid@)">
      <param name="pMessage"></param>
      <param name="riid"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRpcChannelBuffer.GetDestCtx(System.UInt32@,System.IntPtr@)">
      <param name="pdwDestContext"></param>
      <param name="ppvDestContext"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRpcChannelBuffer.IsConnected"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRpcChannelBuffer.SendReceive(Microsoft.VisualStudio.OLE.Interop.RPCOLEMESSAGE[],System.UInt32@)">
      <param name="pMessage"></param>
      <param name="pStatus"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IRpcChannelBuffer2">
      <summary>Marshals data between a COM client proxy and a COM server stub. Extends and inherits from <see cref="T:Microsoft.VisualStudio.OLE.Interop.IRpcChannelBuffer" />. Adds a method to retrieve the protocol version.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRpcChannelBuffer2.FreeBuffer(Microsoft.VisualStudio.OLE.Interop.RPCOLEMESSAGE[])">
      <param name="pMessage"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRpcChannelBuffer2.GetBuffer(Microsoft.VisualStudio.OLE.Interop.RPCOLEMESSAGE[],System.Guid@)">
      <param name="pMessage"></param>
      <param name="riid"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRpcChannelBuffer2.GetDestCtx(System.UInt32@,System.IntPtr@)">
      <param name="pdwDestContext"></param>
      <param name="ppvDestContext"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRpcChannelBuffer2.GetProtocolVersion(System.UInt32@)">
      <param name="pdwVersion"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRpcChannelBuffer2.IsConnected"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRpcChannelBuffer2.SendReceive(Microsoft.VisualStudio.OLE.Interop.RPCOLEMESSAGE[],System.UInt32@)">
      <param name="pMessage"></param>
      <param name="pStatus"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IRpcChannelBuffer3">
      <summary>Marshals data between a COM client proxy and a COM server stub. Extends and inherits from <see cref="T:Microsoft.VisualStudio.OLE.Interop.IRpcChannelBuffer2" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRpcChannelBuffer3.Cancel(Microsoft.VisualStudio.OLE.Interop.RPCOLEMESSAGE[])">
      <param name="pMsg"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRpcChannelBuffer3.FreeBuffer(Microsoft.VisualStudio.OLE.Interop.RPCOLEMESSAGE[])">
      <param name="pMessage"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRpcChannelBuffer3.GetBuffer(Microsoft.VisualStudio.OLE.Interop.RPCOLEMESSAGE[],System.Guid@)">
      <param name="pMessage"></param>
      <param name="riid"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRpcChannelBuffer3.GetCallContext(Microsoft.VisualStudio.OLE.Interop.RPCOLEMESSAGE[],System.Guid@,System.IntPtr@)">
      <param name="pMsg"></param>
      <param name="riid"></param>
      <param name="pInterface"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRpcChannelBuffer3.GetDestCtx(System.UInt32@,System.IntPtr@)">
      <param name="pdwDestContext"></param>
      <param name="ppvDestContext"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRpcChannelBuffer3.GetDestCtxEx(Microsoft.VisualStudio.OLE.Interop.RPCOLEMESSAGE[],System.UInt32@,System.IntPtr@)">
      <param name="pMsg"></param>
      <param name="pdwDestContext"></param>
      <param name="ppvDestContext"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRpcChannelBuffer3.GetProtocolVersion(System.UInt32@)">
      <param name="pdwVersion"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRpcChannelBuffer3.GetState(Microsoft.VisualStudio.OLE.Interop.RPCOLEMESSAGE[],System.UInt32@)">
      <param name="pMsg"></param>
      <param name="pState"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRpcChannelBuffer3.IsConnected"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRpcChannelBuffer3.Receive(Microsoft.VisualStudio.OLE.Interop.RPCOLEMESSAGE[],System.UInt32,System.UInt32@)">
      <param name="pMsg"></param>
      <param name="ulSize"></param>
      <param name="pulStatus"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRpcChannelBuffer3.RegisterAsync(Microsoft.VisualStudio.OLE.Interop.RPCOLEMESSAGE[],Microsoft.VisualStudio.OLE.Interop.IAsyncManager)">
      <param name="pMsg"></param>
      <param name="pAsyncMgr"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRpcChannelBuffer3.Send(Microsoft.VisualStudio.OLE.Interop.RPCOLEMESSAGE[],System.UInt32@)">
      <param name="pMsg"></param>
      <param name="pulStatus"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRpcChannelBuffer3.SendReceive(Microsoft.VisualStudio.OLE.Interop.RPCOLEMESSAGE[],System.UInt32@)">
      <param name="pMessage"></param>
      <param name="pStatus"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IRpcHelper">
      <summary>Provides helper methods for remote procedure calls. Methods provide DCOM protocol version and convert an object reference to an interface identifier.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRpcHelper.GetDCOMProtocolVersion(System.UInt32@)">
      <param name="pComVersion"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRpcHelper.GetIIDFromOBJREF(System.IntPtr,System.IntPtr@)">
      <param name="pObjRef"></param>
      <param name="pIID"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IRpcOptions">
      <summary>Sets or gets the values of properties controlling how COM handles remote procedure calls (RPC). For more information, see IRpcOptions.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRpcOptions.Query(System.Object,System.UInt32,System.UInt32@)">
      <param name="pPrx"></param>
      <param name="dwProperty"></param>
      <param name="pdwValue"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRpcOptions.Set(System.Object,System.UInt32,System.UInt32)">
      <param name="pPrx"></param>
      <param name="dwProperty"></param>
      <param name="dwValue"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IRpcProxyBuffer">
      <summary>Controls the remote procedure call (RPC) proxy used to marshal data between COM components. For more information, see IRpcProxyBuffer.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRpcProxyBuffer.Connect(Microsoft.VisualStudio.OLE.Interop.IRpcChannelBuffer)">
      <param name="pRpcChannelBuffer"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRpcProxyBuffer.Disconnect"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IRpcStubBuffer">
      <summary>Controls the remote procedure calls (RPC) stub used to marshal data between COM components. For more information, see IRpcStubBuffer.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRpcStubBuffer.Connect(System.Object)">
      <param name="pUnkServer"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRpcStubBuffer.CountRefs"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRpcStubBuffer.DebugServerQueryInterface(System.IntPtr@)">
      <param name="ppv"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRpcStubBuffer.DebugServerRelease(System.IntPtr)">
      <param name="pv"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRpcStubBuffer.Disconnect"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRpcStubBuffer.Invoke(Microsoft.VisualStudio.OLE.Interop.RPCOLEMESSAGE[],Microsoft.VisualStudio.OLE.Interop.IRpcChannelBuffer)">
      <param name="_prpcmsg"></param>
      <param name="_pRpcChannelBuffer"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRpcStubBuffer.IsIIDSupported(System.Guid@)">
      <param name="riid"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IRpcSyntaxNegotiate">
      <summary>Negotiates syntax between components in remote procedure calls (RPC). An array of <see cref="T:Microsoft.VisualStudio.OLE.Interop.RPCOLEMESSAGE" /> objects represents the syntax.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRpcSyntaxNegotiate.NegotiateSyntax(Microsoft.VisualStudio.OLE.Interop.RPCOLEMESSAGE[])">
      <param name="pMsg"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IRunnableObject">
      <summary>Enables a container to control the running of its embedded objects. For more information, see IRunnableObject.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRunnableObject.GetRunningClass(System.Guid@)">
      <param name="lpClsid"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRunnableObject.IsRunning"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRunnableObject.LockRunning(System.Int32,System.Int32)">
      <param name="fLock"></param>
      <param name="fLastUnlockCloses"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRunnableObject.Run(Microsoft.VisualStudio.OLE.Interop.IBindCtx)">
      <param name="pbc"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRunnableObject.SetContainedObject(System.Int32)">
      <param name="fContained"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IRunningObjectTable">
      <summary>Manages access to the Running Object Table (ROT), a global look-up table. You can get an instance of the interface from the <see cref="M:Microsoft.VisualStudio.OLE.Interop.IBindCtx.GetRunningObjectTable(Microsoft.VisualStudio.OLE.Interop.IRunningObjectTable@)" /> method. For more information, see IRunningObjectTable.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRunningObjectTable.EnumRunning(Microsoft.VisualStudio.OLE.Interop.IEnumMoniker@)">
      <param name="ppenumMoniker"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRunningObjectTable.GetObject(Microsoft.VisualStudio.OLE.Interop.IMoniker,System.Object@)">
      <param name="pmkObjectName"></param>
      <param name="ppunkObject"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRunningObjectTable.GetTimeOfLastChange(Microsoft.VisualStudio.OLE.Interop.IMoniker,Microsoft.VisualStudio.OLE.Interop.FILETIME[])">
      <param name="pmkObjectName"></param>
      <param name="pFileTime"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRunningObjectTable.IsRunning(Microsoft.VisualStudio.OLE.Interop.IMoniker)">
      <param name="pmkObjectName"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRunningObjectTable.NoteChangeTime(System.UInt32,Microsoft.VisualStudio.OLE.Interop.FILETIME[])">
      <param name="dwRegister"></param>
      <param name="pFileTime"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRunningObjectTable.Register(System.UInt32,System.Object,Microsoft.VisualStudio.OLE.Interop.IMoniker,System.UInt32@)">
      <param name="grfFlags"></param>
      <param name="punkObject"></param>
      <param name="pmkObjectName"></param>
      <param name="pdwRegister"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IRunningObjectTable.Revoke(System.UInt32)">
      <param name="dwRegister"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.ISequentialStream">
      <summary>Supports simple sequential access to streams. For more information, see ISequentialStream.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ISequentialStream.Read(System.Byte[],System.UInt32,System.UInt32@)">
      <param name="pv"></param>
      <param name="cb"></param>
      <param name="pcbRead"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ISequentialStream.Write(System.Byte[],System.UInt32,System.UInt32@)">
      <param name="pv"></param>
      <param name="cb"></param>
      <param name="pcbWritten"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IServerSecurity">
      <summary>Used by a server to authenticate a client and to manage impersonation of a client. For more information, see IServerSecurity.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IServerSecurity.ImpersonateClient"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IServerSecurity.IsImpersonating"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IServerSecurity.QueryBlanket(System.UInt32@,System.UInt32@,System.IntPtr,System.UInt32@,System.UInt32@,System.IntPtr@,System.UInt32@)">
      <param name="pAuthnSvc"></param>
      <param name="pAuthzSvc"></param>
      <param name="pServerPrincName"></param>
      <param name="pAuthnLevel"></param>
      <param name="pImpLevel"></param>
      <param name="pPrivs"></param>
      <param name="pCapabilities"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IServerSecurity.RevertToSelf"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IServiceProvider">
      <summary>Provides access to a service identified by a globally unique identifier (GUID). For more information, see IServiceProvider.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IServiceProvider.QueryService(System.Guid@,System.Guid@,System.IntPtr@)">
      <param name="guidService"></param>
      <param name="riid"></param>
      <param name="ppvObject"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.ISimpleFrameSite">
      <summary>Supports simple frame controls serving as containers for other controls. For more information, see ISimpleFrameSite.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ISimpleFrameSite.PostMessageFilter(System.IntPtr,System.UInt32,System.UInt32,System.Int32,System.Int32@,System.UInt32)">
      <param name="hwnd"></param>
      <param name="MSG"></param>
      <param name="wp"></param>
      <param name="lp"></param>
      <param name="plResult"></param>
      <param name="dwCookie"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ISimpleFrameSite.PreMessageFilter(System.IntPtr,System.UInt32,System.UInt32,System.Int32,System.Int32@,System.UInt32@)">
      <param name="hwnd"></param>
      <param name="MSG"></param>
      <param name="wp"></param>
      <param name="lp"></param>
      <param name="plResult"></param>
      <param name="pdwCookie"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.ISpecifyPropertyPages">
      <summary>Indicates an object supports property pages and retrieves those pages. For more information, see ISpecifyPropertyPages.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ISpecifyPropertyPages.GetPages(Microsoft.VisualStudio.OLE.Interop.CAUUID[])">
      <param name="pPages"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IStdMarshalInfo">
      <summary>Specifies the handler to use in the destination process during standard marshaling. For more information, see IStdMarshalInfo.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IStdMarshalInfo.GetClassForHandler(System.UInt32,System.IntPtr,System.Guid@)">
      <param name="dwDestContext"></param>
      <param name="pvDestContext"></param>
      <param name="pClsid"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IStorage">
      <summary>Supports creation and management of structured storage objects which enable. hierarchical storage of information within a single file. For more information, see IStorage.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IStorage.Commit(System.UInt32)">
      <param name="grfCommitFlags"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IStorage.CopyTo(System.UInt32,System.Guid[],System.IntPtr,Microsoft.VisualStudio.OLE.Interop.IStorage)">
      <param name="ciidExclude"></param>
      <param name="rgiidExclude"></param>
      <param name="snbExclude"></param>
      <param name="pstgDest"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IStorage.CreateStorage(System.String,System.UInt32,System.UInt32,System.UInt32,Microsoft.VisualStudio.OLE.Interop.IStorage@)">
      <param name="pwcsName"></param>
      <param name="grfMode"></param>
      <param name="reserved1"></param>
      <param name="reserved2"></param>
      <param name="ppstg"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IStorage.CreateStream(System.String,System.UInt32,System.UInt32,System.UInt32,Microsoft.VisualStudio.OLE.Interop.IStream@)">
      <param name="pwcsName"></param>
      <param name="grfMode"></param>
      <param name="reserved1"></param>
      <param name="reserved2"></param>
      <param name="ppstm"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IStorage.DestroyElement(System.String)">
      <param name="pwcsName"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IStorage.EnumElements(System.UInt32,System.IntPtr,System.UInt32,Microsoft.VisualStudio.OLE.Interop.IEnumSTATSTG@)">
      <param name="reserved1"></param>
      <param name="reserved2"></param>
      <param name="reserved3"></param>
      <param name="ppEnum"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IStorage.MoveElementTo(System.String,Microsoft.VisualStudio.OLE.Interop.IStorage,System.String,System.UInt32)">
      <param name="pwcsName"></param>
      <param name="pstgDest"></param>
      <param name="pwcsNewName"></param>
      <param name="grfFlags"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IStorage.OpenStorage(System.String,Microsoft.VisualStudio.OLE.Interop.IStorage,System.UInt32,System.IntPtr,System.UInt32,Microsoft.VisualStudio.OLE.Interop.IStorage@)">
      <param name="pwcsName"></param>
      <param name="pstgPriority"></param>
      <param name="grfMode"></param>
      <param name="snbExclude"></param>
      <param name="reserved"></param>
      <param name="ppstg"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IStorage.OpenStream(System.String,System.IntPtr,System.UInt32,System.UInt32,Microsoft.VisualStudio.OLE.Interop.IStream@)">
      <param name="pwcsName"></param>
      <param name="reserved1"></param>
      <param name="grfMode"></param>
      <param name="reserved2"></param>
      <param name="ppstm"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IStorage.RenameElement(System.String,System.String)">
      <param name="pwcsOldName"></param>
      <param name="pwcsNewName"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IStorage.Revert"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IStorage.SetClass(System.Guid@)">
      <param name="clsid"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IStorage.SetElementTimes(System.String,Microsoft.VisualStudio.OLE.Interop.FILETIME[],Microsoft.VisualStudio.OLE.Interop.FILETIME[],Microsoft.VisualStudio.OLE.Interop.FILETIME[])">
      <param name="pwcsName"></param>
      <param name="pctime"></param>
      <param name="patime"></param>
      <param name="pmtime"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IStorage.SetStateBits(System.UInt32,System.UInt32)">
      <param name="grfStateBits"></param>
      <param name="grfMask"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IStorage.Stat(Microsoft.VisualStudio.OLE.Interop.STATSTG[],System.UInt32)">
      <param name="pstatstg"></param>
      <param name="grfStatFlag"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IStream">
      <summary>Reads and writes data to stream objects. For more information, see IStream.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IStream.Clone(Microsoft.VisualStudio.OLE.Interop.IStream@)">
      <param name="ppstm"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IStream.Commit(System.UInt32)">
      <param name="grfCommitFlags"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IStream.CopyTo(Microsoft.VisualStudio.OLE.Interop.IStream,Microsoft.VisualStudio.OLE.Interop.ULARGE_INTEGER,Microsoft.VisualStudio.OLE.Interop.ULARGE_INTEGER[],Microsoft.VisualStudio.OLE.Interop.ULARGE_INTEGER[])">
      <param name="pstm"></param>
      <param name="cb"></param>
      <param name="pcbRead"></param>
      <param name="pcbWritten"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IStream.LockRegion(Microsoft.VisualStudio.OLE.Interop.ULARGE_INTEGER,Microsoft.VisualStudio.OLE.Interop.ULARGE_INTEGER,System.UInt32)">
      <param name="libOffset"></param>
      <param name="cb"></param>
      <param name="dwLockType"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IStream.Read(System.Byte[],System.UInt32,System.UInt32@)">
      <param name="pv"></param>
      <param name="cb"></param>
      <param name="pcbRead"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IStream.Revert"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IStream.Seek(Microsoft.VisualStudio.OLE.Interop.LARGE_INTEGER,System.UInt32,Microsoft.VisualStudio.OLE.Interop.ULARGE_INTEGER[])">
      <param name="dlibMove"></param>
      <param name="dwOrigin"></param>
      <param name="plibNewPosition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IStream.SetSize(Microsoft.VisualStudio.OLE.Interop.ULARGE_INTEGER)">
      <param name="libNewSize"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IStream.Stat(Microsoft.VisualStudio.OLE.Interop.STATSTG[],System.UInt32)">
      <param name="pstatstg"></param>
      <param name="grfStatFlag"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IStream.UnlockRegion(Microsoft.VisualStudio.OLE.Interop.ULARGE_INTEGER,Microsoft.VisualStudio.OLE.Interop.ULARGE_INTEGER,System.UInt32)">
      <param name="libOffset"></param>
      <param name="cb"></param>
      <param name="dwLockType"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IStream.Write(System.Byte[],System.UInt32,System.UInt32@)">
      <param name="pv"></param>
      <param name="cb"></param>
      <param name="pcbWritten"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.ISurrogate">
      <summary>Loads or frees a surrogate. A surrogate is an EXE file that can load DLL servers to give them the advantages of being an EXE server. For more information, see ISurrogate.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ISurrogate.FreeSurrogate"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ISurrogate.LoadDllServer(System.Guid@)">
      <param name="clsid"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.ISynchronize">
      <summary>Provides asynchronous communication between objects about events. For more information, see ISynchronize.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ISynchronize.Reset"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ISynchronize.Signal"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ISynchronize.Wait(System.UInt32,System.UInt32)">
      <param name="dwFlags"></param>
      <param name="dwMilliseconds"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.ISynchronizeContainer">
      <summary>Manages a group of synchronization objects. For more information, see ISynchronizeContainer.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ISynchronizeContainer.AddSynchronize(Microsoft.VisualStudio.OLE.Interop.ISynchronize)">
      <param name="pSync"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ISynchronizeContainer.WaitMultiple(System.UInt32,System.UInt32,Microsoft.VisualStudio.OLE.Interop.ISynchronize@)">
      <param name="dwFlags"></param>
      <param name="dwTimeout"></param>
      <param name="ppSync"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.ISynchronizeEvent">
      <summary>Assigns a Win32 event handle to a synchronization object. For more information, see ISynchronizeEvent.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ISynchronizeEvent.GetHandle(System.IntPtr@)">
      <param name="ph"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ISynchronizeEvent.SetEventHandle(System.IntPtr)">
      <param name="ph"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.ISynchronizeHandle">
      <summary>Retrieves the Win32 handle from a synchronization object. For more information, see ISynchronizeHandle.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ISynchronizeHandle.GetHandle(System.IntPtr@)">
      <param name="ph"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.ISynchronizeMutex">
      <summary>Supports a synchronization object using a mutex object. Extends and inherits from <see cref="T:Microsoft.VisualStudio.OLE.Interop.ISynchronize" />. For general information about mutex objects, see Mutex Class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ISynchronizeMutex.ReleaseMutex"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ISynchronizeMutex.Reset"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ISynchronizeMutex.Signal"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ISynchronizeMutex.Wait(System.UInt32,System.UInt32)">
      <param name="dwFlags"></param>
      <param name="dwMilliseconds"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IThumbnailExtractor"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IThumbnailExtractor.ExtractThumbnail(Microsoft.VisualStudio.OLE.Interop.IStorage,System.UInt32,System.UInt32,System.UInt32@,System.UInt32@,System.IntPtr@)">
      <param name="pstg"></param>
      <param name="ulLength"></param>
      <param name="ulHeight"></param>
      <param name="pulOutputLength"></param>
      <param name="pulOutputHeight"></param>
      <param name="phOutputBitmap"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IThumbnailExtractor.OnFileUpdated(Microsoft.VisualStudio.OLE.Interop.IStorage)">
      <param name="pstg"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.ITimeAndNoticeControl"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ITimeAndNoticeControl.SuppressChanges(System.UInt32,System.UInt32)">
      <param name="res1"></param>
      <param name="res2"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.ITypeComp">
      <summary>Provides information compilers need when binding and instantiating structures and interfaces. For more information, see ITypeComp Interface.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ITypeComp.Bind(System.String,System.UInt32,System.UInt16,System.Type@,Microsoft.VisualStudio.OLE.Interop.DESCKIND[],System.IntPtr@,System.IntPtr@,Microsoft.VisualStudio.OLE.Interop.ITypeComp@,Microsoft.VisualStudio.OLE.Interop.CLEANLOCALSTORAGE[])">
      <param name="szName"></param>
      <param name="lHashVal"></param>
      <param name="wFlags"></param>
      <param name="ppTInfo"></param>
      <param name="pDescKind"></param>
      <param name="ppFuncDesc"></param>
      <param name="ppVarDesc"></param>
      <param name="ppTypeComp"></param>
      <param name="pDummy"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ITypeComp.BindType(System.String,System.UInt32,System.Type@)">
      <param name="szName"></param>
      <param name="lHashVal"></param>
      <param name="ppTInfo"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.ITypeInfo">
      <summary>Provides information, from a type library, about an object and its capabilities. For more information, see ITypeInfo Interface.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ITypeInfo.AddressOfMember"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ITypeInfo.CreateInstance(System.Guid@,System.Object@)">
      <param name="riid"></param>
      <param name="ppvObj"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ITypeInfo.GetContainingTypeLib(Microsoft.VisualStudio.OLE.Interop.ITypeLib@,System.UInt32@)">
      <param name="ppTLib"></param>
      <param name="pIndex"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ITypeInfo.GetDllEntry(System.Int32,Microsoft.VisualStudio.OLE.Interop.INVOKEKIND,System.UInt32,System.String@,System.String@,System.UInt16@)">
      <param name="memid"></param>
      <param name="invkind"></param>
      <param name="refPtrFlags"></param>
      <param name="pBstrDllName"></param>
      <param name="pBstrName"></param>
      <param name="pwOrdinal"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ITypeInfo.GetDocumentation(System.Int32,System.UInt32,System.String@,System.String@,System.UInt32@,System.String@)">
      <param name="memid"></param>
      <param name="refPtrFlags"></param>
      <param name="pBstrName"></param>
      <param name="pBstrDocString"></param>
      <param name="pdwHelpContext"></param>
      <param name="pBstrHelpFile"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ITypeInfo.GetFuncDesc(System.UInt32,System.IntPtr@,Microsoft.VisualStudio.OLE.Interop.CLEANLOCALSTORAGE[])">
      <param name="index"></param>
      <param name="ppFuncDesc"></param>
      <param name="pDummy"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ITypeInfo.GetIDsOfNames"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ITypeInfo.GetImplTypeFlags(System.UInt32,System.Int32@)">
      <param name="index"></param>
      <param name="pImplTypeFlags"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ITypeInfo.GetMops(System.Int32,System.String@)">
      <param name="memid"></param>
      <param name="pBstrMops"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ITypeInfo.GetNames(System.Int32,System.String[],System.UInt32,System.UInt32@)">
      <param name="memid"></param>
      <param name="rgBstrNames"></param>
      <param name="cMaxNames"></param>
      <param name="pcNames"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ITypeInfo.GetRefTypeInfo(System.UInt32,System.Type@)">
      <param name="HREFTYPE"></param>
      <param name="ppTInfo"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ITypeInfo.GetRefTypeOfImplType(System.UInt32,System.UInt32@)">
      <param name="index"></param>
      <param name="pRefType"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ITypeInfo.GetTypeAttr(System.IntPtr@,Microsoft.VisualStudio.OLE.Interop.CLEANLOCALSTORAGE[])">
      <param name="ppTypeAttr"></param>
      <param name="pDummy"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ITypeInfo.GetTypeComp(Microsoft.VisualStudio.OLE.Interop.ITypeComp@)">
      <param name="ppTComp"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ITypeInfo.GetVarDesc(System.UInt32,System.IntPtr@,Microsoft.VisualStudio.OLE.Interop.CLEANLOCALSTORAGE[])">
      <param name="index"></param>
      <param name="ppVarDesc"></param>
      <param name="pDummy"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ITypeInfo.Invoke"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ITypeInfo.ReleaseFuncDesc"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ITypeInfo.ReleaseTypeAttr"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ITypeInfo.ReleaseVarDesc"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.ITypeLib">
      <summary>Provides access to the contents of a type library. For more information, see ITypeLib Interface.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ITypeLib.FindName(System.String,System.UInt32,System.Type@,System.Int32[],System.UInt16@,System.String@)">
      <param name="szNameBuf"></param>
      <param name="lHashVal"></param>
      <param name="ppTInfo"></param>
      <param name="rgMemId"></param>
      <param name="pcFound"></param>
      <param name="pBstrLibName"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ITypeLib.GetDocumentation(System.Int32,System.UInt32,System.String@,System.String@,System.UInt32@,System.String@)">
      <param name="index"></param>
      <param name="refPtrFlags"></param>
      <param name="pBstrName"></param>
      <param name="pBstrDocString"></param>
      <param name="pdwHelpContext"></param>
      <param name="pBstrHelpFile"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ITypeLib.GetLibAttr(System.IntPtr@,Microsoft.VisualStudio.OLE.Interop.CLEANLOCALSTORAGE[])">
      <param name="ppTLibAttr"></param>
      <param name="pDummy"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ITypeLib.GetTypeComp(Microsoft.VisualStudio.OLE.Interop.ITypeComp@)">
      <param name="ppTComp"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ITypeLib.GetTypeInfo(System.UInt32,System.Type@)">
      <param name="index"></param>
      <param name="ppTInfo"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ITypeLib.GetTypeInfoCount(System.UInt32@)">
      <param name="pcTInfo"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ITypeLib.GetTypeInfoOfGuid(System.Guid@,System.Type@)">
      <param name="guid"></param>
      <param name="ppTInfo"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ITypeLib.GetTypeInfoType(System.UInt32,Microsoft.VisualStudio.OLE.Interop.TYPEKIND[])">
      <param name="index"></param>
      <param name="pTKind"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ITypeLib.IsName(System.String,System.UInt32,System.Int32@,System.String@)">
      <param name="szNameBuf"></param>
      <param name="lHashVal"></param>
      <param name="pfName"></param>
      <param name="pBstrLibName"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.ITypeLib.ReleaseTLibAttr"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IUrlMon"></member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IUrlMon.AsyncGetClassBits(System.Guid@,System.String,System.String,System.UInt32,System.UInt32,System.String,Microsoft.VisualStudio.OLE.Interop.IBindCtx,System.UInt32,System.Guid@,System.UInt32)">
      <param name="rclsid"></param>
      <param name="pszTYPE"></param>
      <param name="pszExt"></param>
      <param name="dwFileVersionMS"></param>
      <param name="dwFileVersionLS"></param>
      <param name="pszCodeBase"></param>
      <param name="pbc"></param>
      <param name="dwClassContext"></param>
      <param name="riid"></param>
      <param name="Flags"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IViewObject">
      <summary>Enables an object to display itself without passing a data object to the caller. For more information, see IViewObject.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IViewObject.Draw(System.UInt32,System.Int32,System.UInt32,Microsoft.VisualStudio.OLE.Interop.DVTARGETDEVICE[],System.UInt32,System.UInt32,Microsoft.VisualStudio.OLE.Interop.RECTL[],Microsoft.VisualStudio.OLE.Interop.RECTL[],Microsoft.VisualStudio.OLE.Interop.IContinue)">
      <param name="dwDrawAspect"></param>
      <param name="lindex"></param>
      <param name="pvAspect"></param>
      <param name="ptd"></param>
      <param name="hdcTargetDev"></param>
      <param name="hdcDraw"></param>
      <param name="lprcBounds"></param>
      <param name="lprcWBounds"></param>
      <param name="pContinue"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IViewObject.Freeze(System.UInt32,System.Int32,System.UInt32,System.UInt32@)">
      <param name="dwDrawAspect"></param>
      <param name="lindex"></param>
      <param name="pvAspect"></param>
      <param name="pdwFreeze"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IViewObject.GetAdvise(System.UInt32@,System.UInt32@,Microsoft.VisualStudio.OLE.Interop.IAdviseSink@)">
      <param name="pAspects"></param>
      <param name="pAdvf"></param>
      <param name="ppAdvSink"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IViewObject.GetColorSet(System.UInt32,System.Int32,System.UInt32,Microsoft.VisualStudio.OLE.Interop.DVTARGETDEVICE[],System.UInt32,System.IntPtr@)">
      <param name="dwDrawAspect"></param>
      <param name="lindex"></param>
      <param name="pvAspect"></param>
      <param name="ptd"></param>
      <param name="hicTargetDev"></param>
      <param name="ppColorSet"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IViewObject.SetAdvise(System.UInt32,System.UInt32,Microsoft.VisualStudio.OLE.Interop.IAdviseSink)">
      <param name="aspects"></param>
      <param name="ADVF"></param>
      <param name="pAdvSink"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IViewObject.Unfreeze(System.UInt32)">
      <param name="dwFreeze"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IViewObject2">
      <summary>Enables an object to display itself without passing a data object to the caller. Also returns the size of the drawing for a given view of an object. Extends and inherits from <see cref="T:Microsoft.VisualStudio.OLE.Interop.IViewObject" />. For more information, see IViewObject2.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IViewObject2.Draw(System.UInt32,System.Int32,System.UInt32,Microsoft.VisualStudio.OLE.Interop.DVTARGETDEVICE[],System.UInt32,System.UInt32,Microsoft.VisualStudio.OLE.Interop.RECTL[],Microsoft.VisualStudio.OLE.Interop.RECTL[],Microsoft.VisualStudio.OLE.Interop.IContinue)">
      <param name="dwDrawAspect"></param>
      <param name="lindex"></param>
      <param name="pvAspect"></param>
      <param name="ptd"></param>
      <param name="hdcTargetDev"></param>
      <param name="hdcDraw"></param>
      <param name="lprcBounds"></param>
      <param name="lprcWBounds"></param>
      <param name="pContinue"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IViewObject2.Freeze(System.UInt32,System.Int32,System.UInt32,System.UInt32@)">
      <param name="dwDrawAspect"></param>
      <param name="lindex"></param>
      <param name="pvAspect"></param>
      <param name="pdwFreeze"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IViewObject2.GetAdvise(System.UInt32@,System.UInt32@,Microsoft.VisualStudio.OLE.Interop.IAdviseSink@)">
      <param name="pAspects"></param>
      <param name="pAdvf"></param>
      <param name="ppAdvSink"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IViewObject2.GetColorSet(System.UInt32,System.Int32,System.UInt32,Microsoft.VisualStudio.OLE.Interop.DVTARGETDEVICE[],System.UInt32,System.IntPtr@)">
      <param name="dwDrawAspect"></param>
      <param name="lindex"></param>
      <param name="pvAspect"></param>
      <param name="ptd"></param>
      <param name="hicTargetDev"></param>
      <param name="ppColorSet"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IViewObject2.GetExtent(System.UInt32,System.Int32,Microsoft.VisualStudio.OLE.Interop.DVTARGETDEVICE[],Microsoft.VisualStudio.OLE.Interop.SIZEL[])">
      <param name="dwDrawAspect"></param>
      <param name="lindex"></param>
      <param name="ptd"></param>
      <param name="LPSIZEL"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IViewObject2.SetAdvise(System.UInt32,System.UInt32,Microsoft.VisualStudio.OLE.Interop.IAdviseSink)">
      <param name="aspects"></param>
      <param name="ADVF"></param>
      <param name="pAdvSink"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IViewObject2.Unfreeze(System.UInt32)">
      <param name="dwFreeze"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IViewObjectEx">
      <summary>Adds better drawing, hit-testing for non-rectangular objects, and sizing to the capabilities of <see cref="T:Microsoft.VisualStudio.OLE.Interop.IViewObject2" />. For more information, see IViewObjectEx.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IViewObjectEx.Draw(System.UInt32,System.Int32,System.UInt32,Microsoft.VisualStudio.OLE.Interop.DVTARGETDEVICE[],System.UInt32,System.UInt32,Microsoft.VisualStudio.OLE.Interop.RECTL[],Microsoft.VisualStudio.OLE.Interop.RECTL[],Microsoft.VisualStudio.OLE.Interop.IContinue)">
      <param name="dwDrawAspect"></param>
      <param name="lindex"></param>
      <param name="pvAspect"></param>
      <param name="ptd"></param>
      <param name="hdcTargetDev"></param>
      <param name="hdcDraw"></param>
      <param name="lprcBounds"></param>
      <param name="lprcWBounds"></param>
      <param name="pContinue"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IViewObjectEx.Freeze(System.UInt32,System.Int32,System.UInt32,System.UInt32@)">
      <param name="dwDrawAspect"></param>
      <param name="lindex"></param>
      <param name="pvAspect"></param>
      <param name="pdwFreeze"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IViewObjectEx.GetAdvise(System.UInt32@,System.UInt32@,Microsoft.VisualStudio.OLE.Interop.IAdviseSink@)">
      <param name="pAspects"></param>
      <param name="pAdvf"></param>
      <param name="ppAdvSink"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IViewObjectEx.GetColorSet(System.UInt32,System.Int32,System.UInt32,Microsoft.VisualStudio.OLE.Interop.DVTARGETDEVICE[],System.UInt32,System.IntPtr@)">
      <param name="dwDrawAspect"></param>
      <param name="lindex"></param>
      <param name="pvAspect"></param>
      <param name="ptd"></param>
      <param name="hicTargetDev"></param>
      <param name="ppColorSet"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IViewObjectEx.GetExtent(System.UInt32,System.Int32,Microsoft.VisualStudio.OLE.Interop.DVTARGETDEVICE[],Microsoft.VisualStudio.OLE.Interop.SIZEL[])">
      <param name="dwDrawAspect"></param>
      <param name="lindex"></param>
      <param name="ptd"></param>
      <param name="LPSIZEL"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IViewObjectEx.GetNaturalExtent(System.UInt32,System.Int32,Microsoft.VisualStudio.OLE.Interop.DVTARGETDEVICE[],System.IntPtr,Microsoft.VisualStudio.OLE.Interop.DVEXTENTINFO[],Microsoft.VisualStudio.OLE.Interop.SIZEL[])">
      <param name="dwAspect"></param>
      <param name="lindex"></param>
      <param name="ptd"></param>
      <param name="hicTargetDev"></param>
      <param name="pExtentInfo"></param>
      <param name="pSizel"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IViewObjectEx.GetRect(System.UInt32,Microsoft.VisualStudio.OLE.Interop.RECTL[])">
      <param name="dwAspect"></param>
      <param name="pRect"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IViewObjectEx.GetViewStatus(System.UInt32@)">
      <param name="pdwStatus"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IViewObjectEx.QueryHitPoint(System.UInt32,Microsoft.VisualStudio.OLE.Interop.RECT[],Microsoft.VisualStudio.OLE.Interop.POINT,System.Int32,System.UInt32@)">
      <param name="dwAspect"></param>
      <param name="pRectBounds"></param>
      <param name="ptlLoc"></param>
      <param name="lCloseHint"></param>
      <param name="pHitResult"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IViewObjectEx.QueryHitRect(System.UInt32,Microsoft.VisualStudio.OLE.Interop.RECT[],Microsoft.VisualStudio.OLE.Interop.RECT[],System.Int32,System.UInt32@)">
      <param name="dwAspect"></param>
      <param name="pRectBounds"></param>
      <param name="pRectLoc"></param>
      <param name="lCloseHint"></param>
      <param name="pHitResult"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IViewObjectEx.SetAdvise(System.UInt32,System.UInt32,Microsoft.VisualStudio.OLE.Interop.IAdviseSink)">
      <param name="aspects"></param>
      <param name="ADVF"></param>
      <param name="pAdvSink"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IViewObjectEx.Unfreeze(System.UInt32)">
      <param name="dwFreeze"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.IWaitMultiple">
      <summary>Enables waiting for a group of cross-process calls.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IWaitMultiple.AddSynchronize(Microsoft.VisualStudio.OLE.Interop.ISynchronize)">
      <param name="pSync"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.OLE.Interop.IWaitMultiple.WaitMultiple(System.UInt32,Microsoft.VisualStudio.OLE.Interop.ISynchronize@)">
      <param name="timeout"></param>
      <param name="pSync"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.LARGE_INTEGER"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.LARGE_INTEGER.QuadPart"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.LIBFLAGS"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.LIBFLAGS.LIBFLAG_FRESTRICTED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.LIBFLAGS.LIBFLAG_FCONTROL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.LIBFLAGS.LIBFLAG_FHIDDEN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.LIBFLAGS.LIBFLAG_FHASDISKIMAGE">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.LICINFO"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.LICINFO.cbLicInfo"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.LICINFO.fLicVerified"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.LICINFO.fRuntimeKeyAvail"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.LOCKTYPE"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.LOCKTYPE.LOCK_WRITE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.LOCKTYPE.LOCK_EXCLUSIVE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.LOCKTYPE.LOCK_ONLYONCE">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.LOGPALETTE"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.LOGPALETTE.palNumEntries"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.LOGPALETTE.palPalEntry"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.LOGPALETTE.palVersion"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.MEMCTX"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.MEMCTX.MEMCTX_TASK">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.MEMCTX.MEMCTX_SHARED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.MEMCTX.MEMCTX_MACSYSTEM">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.MEMCTX.MEMCTX_UNKNOWN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.MEMCTX.MEMCTX_SAME">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.MKRREDUCE"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.MKRREDUCE.MKRREDUCE_ONE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.MKRREDUCE.MKRREDUCE_TOUSER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.MKRREDUCE.MKRREDUCE_THROUGHUSER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.MKRREDUCE.MKRREDUCE_ALL">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.MKSYS"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.MKSYS.MKSYS_NONE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.MKSYS.MKSYS_GENERICCOMPOSITE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.MKSYS.MKSYS_FILEMONIKER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.MKSYS.MKSYS_ANTIMONIKER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.MKSYS.MKSYS_ITEMMONIKER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.MKSYS.MKSYS_POINTERMONIKER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.MKSYS.MKSYS_CLASSMONIKER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.MKSYS.MKSYS_OBJREFMONIKER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.MKSYS.MKSYS_SESSIONMONIKER">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.MONIKERPROPERTY"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.MONIKERPROPERTY.MIMETYPEPROP">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.MONIKERPROPERTY.USE_SRC_URL">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.MSG"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.MSG.hwnd"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.MSG.lParam"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.MSG.message"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.MSG.pt"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.MSG.time"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.MSG.wParam"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.MSHCTX"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.MSHCTX.MSHCTX_LOCAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.MSHCTX.MSHCTX_NOSHAREDMEM">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.MSHCTX.MSHCTX_DIFFERENTMACHINE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.MSHCTX.MSHCTX_INPROC">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.MSHCTX.MSHCTX_CROSSCTX">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.MSHLFLAGS"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.MSHLFLAGS.MSHLFLAGS_NORMAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.MSHLFLAGS.MSHLFLAGS_TABLESTRONG">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.MSHLFLAGS.MSHLFLAGS_TABLEWEAK">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.MSHLFLAGS.MSHLFLAGS_NOPING">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.MSHLFLAGS.MSHLFLAGS_RESERVED1">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.MSHLFLAGS.MSHLFLAGS_RESERVED2">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.MSHLFLAGS.MSHLFLAGS_RESERVED3">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.MSHLFLAGS.MSHLFLAGS_RESERVED4">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.MULTI_QI"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.MULTI_QI.hr"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.MULTI_QI.pIID"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.MULTI_QI.pItf"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.OIBDG_FLAGS"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OIBDG_FLAGS.OIBDG_APARTMENTTHREADED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OIBDG_FLAGS.OIBDG_DATAONLY">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.OLECHOSTINFO"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECHOSTINFO.cbSize"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECHOSTINFO.grfchostf"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.OLECLOSE"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECLOSE.OLECLOSE_SAVEIFDIRTY">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECLOSE.OLECLOSE_NOSAVE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECLOSE.OLECLOSE_PROMPTSAVE">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.OLECMD"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMD.cmdf"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMD.cmdID"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.OLECMDEXECOPT"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDEXECOPT.OLECMDEXECOPT_DODEFAULT">
      <summary>Do the default action (either prompt or do not prompt the user).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDEXECOPT.OLECMDEXECOPT_PROMPTUSER">
      <summary>Prompt the user for input.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDEXECOPT.OLECMDEXECOPT_DONTPROMPTUSER">
      <summary>Do not prompt the user for input.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDEXECOPT.OLECMDEXECOPT_SHOWHELP">
      <summary>Show help for the corresponding command, but do not execute. </summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.OLECMDF"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDF.OLECMDF_SUPPORTED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDF.OLECMDF_ENABLED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDF.OLECMDF_LATCHED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDF.OLECMDF_NINCHED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDF.OLECMDF_INVISIBLE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDF.OLECMDF_DEFHIDEONCTXTMENU">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.OLECMDID"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_OPEN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_NEW">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_SAVE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_SAVEAS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_SAVECOPYAS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_PRINT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_PRINTPREVIEW">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_PAGESETUP">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_SPELL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_PROPERTIES">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_CUT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_COPY">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_PASTE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_PASTESPECIAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_UNDO">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_REDO">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_SELECTALL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_CLEARSELECTION">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_ZOOM">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_GETZOOMRANGE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_UPDATECOMMANDS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_REFRESH">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_STOP">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_HIDETOOLBARS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_SETPROGRESSMAX">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_SETPROGRESSPOS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_SETPROGRESSTEXT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_SETTITLE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_SETDOWNLOADSTATE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_STOPDOWNLOAD">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_ONTOOLBARACTIVATED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_FIND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_DELETE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_HTTPEQUIV">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_HTTPEQUIV_DONE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_ENABLE_INTERACTION">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_ONUNLOAD">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_PROPERTYBAG2">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_PREREFRESH">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_SHOWSCRIPTERROR">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_SHOWMESSAGE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_SHOWFIND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_SHOWPAGESETUP">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_SHOWPRINT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_CLOSE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_ALLOWUILESSSAVEAS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_DONTDOWNLOADCSS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_UPDATEPAGESTATUS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_PRINT2">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_PRINTPREVIEW2">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_SETPRINTTEMPLATE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID.OLECMDID_GETPRINTTEMPLATE">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.OLECMDID_REFRESHFLAG"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID_REFRESHFLAG.OLECMDIDF_REFRESH_NORMAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID_REFRESHFLAG.OLECMDIDF_REFRESH_IFEXPIRED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID_REFRESHFLAG.OLECMDIDF_REFRESH_CONTINUE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID_REFRESHFLAG.OLECMDIDF_REFRESH_COMPLETELY">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID_REFRESHFLAG.OLECMDIDF_REFRESH_NO_CACHE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID_REFRESHFLAG.OLECMDIDF_REFRESH_RELOAD">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID_REFRESHFLAG.OLECMDIDF_REFRESH_LEVELMASK">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID_REFRESHFLAG.OLECMDIDF_REFRESH_CLEARUSERINPUT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID_REFRESHFLAG.OLECMDIDF_REFRESH_PROMPTIFOFFLINE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDID_REFRESHFLAG.OLECMDIDF_REFRESH_THROUGHSCRIPT">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.OLECMDTEXT"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDTEXT.cmdtextf"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDTEXT.cwActual"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDTEXT.cwBuf"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDTEXT.rgwz"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.OLECMDTEXTF"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDTEXTF.OLECMDTEXTF_NONE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDTEXTF.OLECMDTEXTF_NAME">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECMDTEXTF.OLECMDTEXTF_STATUS">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.OLECONTF"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECONTF.OLECONTF_EMBEDDINGS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECONTF.OLECONTF_LINKS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECONTF.OLECONTF_OTHERS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECONTF.OLECONTF_ONLYUSER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECONTF.OLECONTF_ONLYIFRUNNING">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.OLECRINFO"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECRINFO.cbSize"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECRINFO.grfcadvf"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECRINFO.grfcrf"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLECRINFO.uIdleTimeInterval"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.OLEDCFLAGS"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLEDCFLAGS.OLEDC_NODRAW">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLEDCFLAGS.OLEDC_PAINTBKGND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLEDCFLAGS.OLEDC_OFFSCREEN">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.OLEGETMONIKER"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLEGETMONIKER.OLEGETMONIKER_ONLYIFTHERE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLEGETMONIKER.OLEGETMONIKER_FORCEASSIGN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLEGETMONIKER.OLEGETMONIKER_UNASSIGN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLEGETMONIKER.OLEGETMONIKER_TEMPFORUSER">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.OLEINPLACEFRAMEINFO"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLEINPLACEFRAMEINFO.cAccelEntries"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLEINPLACEFRAMEINFO.cb"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLEINPLACEFRAMEINFO.fMDIApp"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLEINPLACEFRAMEINFO.haccel"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLEINPLACEFRAMEINFO.hwndFrame"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.OLELINKBIND"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLELINKBIND.OLELINKBIND_EVENIFCLASSDIFF">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.OLEMENUGROUPWIDTHS"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLEMENUGROUPWIDTHS.width"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.OLEMISC">
      <summary>Constants that describe characteristics of objects.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLEMISC.OLEMISC_RECOMPOSEONRESIZE">
      <summary>When the container resizes the space allocated to displaying one of the object's presentations, the object wants to recompose the presentation. This means that on resize, the object wants to do more than scale its picture. If this bit is set, the container should force the object to the running state and call IOleObject::SetExtent with the new size.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLEMISC.OLEMISC_ONLYICONIC">
      <summary>The object has no useful content view other than its icon. From the user's perspective, the Display As Icon check box (in the Paste Special dialog box) for this object should always be checked, and should not be uncheckable. Note that such an object should still have a drawable content aspect; it will look the same as its icon view.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLEMISC.OLEMISC_INSERTNOTREPLACE">
      <summary>The object has initialized itself from the data in the container's current selection. Containers should examine this bit after calling IOleObject::InitFromData to initialize an object from the current selection. If set, the container should insert the object beside the current selection rather than replacing the current selection. If this bit is not set, the object being inserted replaces the current selection. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLEMISC.OLEMISC_STATIC">
      <summary>This object is a static object, which is an object that contains only a presentation; it contains no native data. See OleCreateStaticFromData. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLEMISC.OLEMISC_CANTLINKINSIDE">
      <summary>This object cannot be the link source that when bound to activates (runs) the object. If the object is selected and copied to the clipboard, the object's container can offer a link in a clipboard data transfer that, when bound, must connect to the outside of the object. The user would see the object selected in its container, not open for editing. Rather than doing this, the container can simply refuse to offer a link source when transferring objects with this bit set. Examples of objects that have this bit set include OLE1 objects, static objects, and links.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLEMISC.OLEMISC_CANLINKBYOLE1">
      <summary>This object can be linked to by OLE 1 containers. This bit is used in the dwStatus member of the OBJECTDESCRIPTOR structure transferred with the Object and Link Source Descriptor formats. An object can be linked to by OLE 1 containers if it is an untitled document, a file, or a selection of data within a file. Embedded objects or pseudo-objects that are contained within an embedded object cannot be linked to by OLE 1 containers (i.e., OLE 1 containers cannot link to link sources that, when bound, require more than one object server to be run.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLEMISC.OLEMISC_ISLINKOBJECT">
      <summary>This object is a link object. This bit is significant to OLE 1 and is set by the OLE 2 link object; object applications have no need to set this bit. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLEMISC.OLEMISC_INSIDEOUT">
      <summary>This object is capable of activating in-place, without requiring installation of menus and toolbars to run. Several such objects can be active concurrently. Some containers, such as forms, may choose to activate such objects automatically.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLEMISC.OLEMISC_ACTIVATEWHENVISIBLE">
      <summary>This bit is set only when OLEMISC_INSIDEOUT is set, and indicates that this object prefers to be activated whenever it is visible. Some containers may always ignore this hint.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLEMISC.OLEMISC_RENDERINGISDEVICEINDEPENDENT">
      <summary>This object does not pay any attention to target devices. Its presention data will be the same in all cases.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLEMISC.OLEMISC_INVISIBLEATRUNTIME">
      <summary>This value is used with controls. It indicates that the control has no run-time user interface, but that it should be visible at design time. For example, a timer control that fires a specific event periodically would not show itself at run time, but it needs a design-time user interface so a form designer can set the event period and other properties.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLEMISC.OLEMISC_ALWAYSRUN">
      <summary>This value is used with controls. It tells the container that this control always wants to be running. As a result, the container should call OleRun when loading or creating the object.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLEMISC.OLEMISC_ACTSLIKEBUTTON">
      <summary>This value is used with controls. It indicates that the control is buttonlike in that it understands and obeys the container's DisplayAsDefault ambient property.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLEMISC.OLEMISC_ACTSLIKELABEL">
      <summary>This value is used with controls. It marks the control as a label for whatever control comes after it in the form's ordering. Pressing a mnemonic key for a label control activates the control after it.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLEMISC.OLEMISC_NOUIACTIVATE">
      <summary>This value is used with controls. It indicates that the control has no UI active state, meaning that it requires no in-place tools, no shared menu, and no accelerators. It also means that the control never needs the focus.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLEMISC.OLEMISC_ALIGNABLE">
      <summary>This value is used with controls. It indicates that the control understands how to align itself within its display rectangle, according to alignment properties such as left, center, and right.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLEMISC.OLEMISC_SIMPLEFRAME">
      <summary>This value is used with controls. It indicates that the control is a simple grouping of other controls and does little more than pass Windows messages to the control container managing the form. Controls of this sort require the implementation of ISimpleFrameSite on the container's site.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLEMISC.OLEMISC_SETCLIENTSITEFIRST">
      <summary>This value is used with controls. It indicates that the control wants to use IOleObject::SetClientSite as its initialization function, even before a call such as IPersistStreamInit::InitNew or IPersistStorage::InitNew. This allows the control to access a container's ambient properties before loading information from persistent storage. Note that the current implementations of OleCreate, OleCreateFromData, OleCreateFromFile, OleLoad, and the default handler do not understand this value. Control containers that wish to honor this value must currently implement their own versions of these functions in order to establish the correct initialization sequence for the control.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLEMISC.OLEMISC_IMEMODE">
      <summary>Obsolete. A control that works with an Input Method Editor (IME) system component can control the state of the IME through the IMEMode property rather than using this value in the OLEMISC enumeration. You can use an IME component to enter information in Asian character sets with a regular keyboard. A Japanese IME, for example, allows you to type a word such as "sushi," on a regular keyboard and when you hit the spacebar, the IME component converts that word to appropriate kanji or proposes possible choices. The OLEMISC_IMEMODE value was previously used to mark a control as capable of controlling an IME mode system component.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLEMISC.OLEMISC_IGNOREACTIVATEWHENVISIBLE">
      <summary>For new ActiveX controls to work in an older container, the control may need to have the OLEMISC_ACTIVATEWHENVISIBLE value set. However, in a newer container that understands and uses IPointerInactive, the control does not wish to be in-place activated when it becomes visible. To allow the control to work in both kinds of containers, the control can set this value. Then, the container ignores OLEMISC_ACTIVATEWHENVISIBLE and does not in-place activate the control when it becomes visible.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLEMISC.OLEMISC_WANTSTOMENUMERGE">
      <summary>A control that can merge its menu with its container sets this value.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLEMISC.OLEMISC_SUPPORTSMULTILEVELUNDO">
      <summary>A control that supports multi-level undo sets this value.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.OLERENDER"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLERENDER.OLERENDER_NONE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLERENDER.OLERENDER_DRAW">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLERENDER.OLERENDER_FORMAT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLERENDER.OLERENDER_ASIS">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.OLEUPDATE"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLEUPDATE.OLEUPDATE_ALWAYS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLEUPDATE.OLEUPDATE_ONCALL">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.OLEVERB"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLEVERB.fuFlags"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLEVERB.grfAttribs"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLEVERB.lpszVerbName"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLEVERB.lVerb"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.OLEVERBATTRIB"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLEVERBATTRIB.OLEVERBATTRIB_NEVERDIRTIES">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLEVERBATTRIB.OLEVERBATTRIB_ONCONTAINERMENU">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.OLEWHICHMK"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLEWHICHMK.OLEWHICHMK_CONTAINER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLEWHICHMK.OLEWHICHMK_OBJREL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.OLEWHICHMK.OLEWHICHMK_OBJFULL">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.PAGERANGE"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PAGERANGE.nFromPage"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PAGERANGE.nToPage"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.PAGESET"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PAGESET.cbStruct"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PAGESET.cPageRange"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PAGESET.fEvenPages"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PAGESET.fOddPages"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PAGESET.rgPages"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.PALETTEENTRY"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PALETTEENTRY.peBlue"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PALETTEENTRY.peFlags"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PALETTEENTRY.peGreen"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PALETTEENTRY.peRed"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.PARAMDESC"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PARAMDESC.pparamdescex"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PARAMDESC.wParamFlags"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.PARAMDESCEX"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PARAMDESCEX.cBytes"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PARAMDESCEX.varDefaultValue"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.PARSEACTION"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PARSEACTION.PARSE_CANONICALIZE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PARSEACTION.PARSE_FRIENDLY">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PARSEACTION.PARSE_SECURITY_URL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PARSEACTION.PARSE_ROOTDOCUMENT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PARSEACTION.PARSE_DOCUMENT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PARSEACTION.PARSE_ANCHOR">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PARSEACTION.PARSE_ENCODE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PARSEACTION.PARSE_DECODE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PARSEACTION.PARSE_PATH_FROM_URL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PARSEACTION.PARSE_URL_FROM_PATH">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PARSEACTION.PARSE_MIME">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PARSEACTION.PARSE_SERVER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PARSEACTION.PARSE_SCHEMA">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PARSEACTION.PARSE_SITE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PARSEACTION.PARSE_DOMAIN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PARSEACTION.PARSE_LOCATION">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PARSEACTION.PARSE_SECURITY_DOMAIN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PARSEACTION.PARSE_ESCAPE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PARSEACTION.PARSE_UNESCAPE">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.PENDINGMSG"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PENDINGMSG.PENDINGMSG_CANCELCALL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PENDINGMSG.PENDINGMSG_WAITNOPROCESS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PENDINGMSG.PENDINGMSG_WAITDEFPROCESS">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.PENDINGTYPE"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PENDINGTYPE.PENDINGTYPE_TOPLEVEL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PENDINGTYPE.PENDINGTYPE_NESTED">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.PI_FLAGS"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PI_FLAGS.PI_PARSE_URL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PI_FLAGS.PI_FILTER_MODE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PI_FLAGS.PI_FORCE_ASYNC">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PI_FLAGS.PI_USE_WORKERTHREAD">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PI_FLAGS.PI_MIMEVERIFICATION">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PI_FLAGS.PI_CLSIDLOOKUP">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PI_FLAGS.PI_DATAPROGRESS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PI_FLAGS.PI_SYNCHRONOUS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PI_FLAGS.PI_APARTMENTTHREADED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PI_FLAGS.PI_CLASSINSTALL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PI_FLAGS.PI_PASSONBINDCTX">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PI_FLAGS.PI_NOMIMEHANDLER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PI_FLAGS.PI_LOADAPPDIRECT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PI_FLAGS.PD_FORCE_SWITCH">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PI_FLAGS.PI_PREFERDEFAULTHANDLER">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.PICTUREATTRIBUTES"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PICTUREATTRIBUTES.PICTURE_SCALABLE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PICTUREATTRIBUTES.PICTURE_TRANSPARENT">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.PIDMSI_STATUS_VALUE"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PIDMSI_STATUS_VALUE.PIDMSI_STATUS_NORMAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PIDMSI_STATUS_VALUE.PIDMSI_STATUS_NEW">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PIDMSI_STATUS_VALUE.PIDMSI_STATUS_PRELIM">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PIDMSI_STATUS_VALUE.PIDMSI_STATUS_DRAFT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PIDMSI_STATUS_VALUE.PIDMSI_STATUS_INPROGRESS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PIDMSI_STATUS_VALUE.PIDMSI_STATUS_EDIT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PIDMSI_STATUS_VALUE.PIDMSI_STATUS_REVIEW">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PIDMSI_STATUS_VALUE.PIDMSI_STATUS_PROOF">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PIDMSI_STATUS_VALUE.PIDMSI_STATUS_FINAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PIDMSI_STATUS_VALUE.PIDMSI_STATUS_OTHER">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.POINT"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.POINT.x"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.POINT.y"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.POINTERINACTIVE"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.POINTERINACTIVE.POINTERINACTIVE_ACTIVATEONENTRY">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.POINTERINACTIVE.POINTERINACTIVE_DEACTIVATEONLEAVE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.POINTERINACTIVE.POINTERINACTIVE_ACTIVATEONDRAG">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.POINTF"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.POINTF.x"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.POINTF.y"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.POINTL"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.POINTL.x"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.POINTL.y"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.PRINTFLAG"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PRINTFLAG.PRINTFLAG_MAYBOTHERUSER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PRINTFLAG.PRINTFLAG_PROMPTUSER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PRINTFLAG.PRINTFLAG_USERMAYCHANGEPRINTER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PRINTFLAG.PRINTFLAG_RECOMPOSETODEVICE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PRINTFLAG.PRINTFLAG_DONTACTUALLYPRINT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PRINTFLAG.PRINTFLAG_FORCEPROPERTIES">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PRINTFLAG.PRINTFLAG_PRINTTOFILE">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.PROPBAG2"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PROPBAG2.cfType"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PROPBAG2.clsid"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PROPBAG2.dwHint"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PROPBAG2.dwType"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PROPBAG2.pstrName"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PROPBAG2.vt"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.PROPBAG2_TYPE"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PROPBAG2_TYPE.PROPBAG2_TYPE_UNDEFINED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PROPBAG2_TYPE.PROPBAG2_TYPE_DATA">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PROPBAG2_TYPE.PROPBAG2_TYPE_URL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PROPBAG2_TYPE.PROPBAG2_TYPE_OBJECT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PROPBAG2_TYPE.PROPBAG2_TYPE_STREAM">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PROPBAG2_TYPE.PROPBAG2_TYPE_STORAGE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PROPBAG2_TYPE.PROPBAG2_TYPE_MONIKER">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.PROPPAGEINFO"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PROPPAGEINFO.cb"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PROPPAGEINFO.dwHelpContext"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PROPPAGEINFO.pszDocString"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PROPPAGEINFO.pszHelpFile"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PROPPAGEINFO.pszTitle"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PROPPAGEINFO.SIZE"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.PROPPAGESTATUS"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PROPPAGESTATUS.PROPPAGESTATUS_DIRTY">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PROPPAGESTATUS.PROPPAGESTATUS_VALIDATE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PROPPAGESTATUS.PROPPAGESTATUS_CLEAN">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.PROPSPEC"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PROPSPEC.ulKind"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PROPSPEC.unionmember"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.PROPVARIANT"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PROPVARIANT.unionmember"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PROPVARIANT.vt"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PROPVARIANT.wReserved1"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PROPVARIANT.wReserved2"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PROPVARIANT.wReserved3"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.PSUACTION"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PSUACTION.PSU_DEFAULT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PSUACTION.PSU_SECURITY_URL_ONLY">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.PUAF"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PUAF.PUAF_DEFAULT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PUAF.PUAF_NOUI">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PUAF.PUAF_ISFILE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PUAF.PUAF_WARN_IF_DENIED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PUAF.PUAF_FORCEUI_FOREGROUND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PUAF.PUAF_CHECK_TIFS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PUAF.PUAF_DONTCHECKBOXINDIALOG">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PUAF.PUAF_TRUSTED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PUAF.PUAF_ACCEPT_WILDCARD_SCHEME">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.PUAF.PUAF_ENFORCERESTRICTED">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.QACONTAINER"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.QACONTAINER.cbSize"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.QACONTAINER.colorBack"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.QACONTAINER.colorFore"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.QACONTAINER.dwAmbientFlags"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.QACONTAINER.dwAppearance"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.QACONTAINER.hpal"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.QACONTAINER.LCID"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.QACONTAINER.pAdviseSink"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.QACONTAINER.pBindHost"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.QACONTAINER.pClientSite"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.QACONTAINER.pFont"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.QACONTAINER.pOleControlSite"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.QACONTAINER.pPropertyNotifySink"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.QACONTAINER.pServiceProvider"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.QACONTAINER.pUndoMgr"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.QACONTAINER.pUnkEventSink"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.QACONTAINERFLAGS"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.QACONTAINERFLAGS.QACONTAINER_SHOWHATCHING">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.QACONTAINERFLAGS.QACONTAINER_SHOWGRABHANDLES">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.QACONTAINERFLAGS.QACONTAINER_USERMODE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.QACONTAINERFLAGS.QACONTAINER_DISPLAYASDEFAULT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.QACONTAINERFLAGS.QACONTAINER_UIDEAD">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.QACONTAINERFLAGS.QACONTAINER_AUTOCLIP">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.QACONTAINERFLAGS.QACONTAINER_MESSAGEREFLECT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.QACONTAINERFLAGS.QACONTAINER_SUPPORTSMNEMONICS">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.QACONTROL"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.QACONTROL.cbSize"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.QACONTROL.dwEventCookie"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.QACONTROL.dwMiscStatus"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.QACONTROL.dwPointerActivationPolicy"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.QACONTROL.dwPropNotifyCookie"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.QACONTROL.dwViewStatus"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.QUERYOPTION"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.QUERYOPTION.QUERY_EXPIRATION_DATE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.QUERYOPTION.QUERY_TIME_OF_LAST_CHANGE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.QUERYOPTION.QUERY_CONTENT_ENCODING">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.QUERYOPTION.QUERY_CONTENT_TYPE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.QUERYOPTION.QUERY_REFRESH">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.QUERYOPTION.QUERY_RECOMBINE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.QUERYOPTION.QUERY_CAN_NAVIGATE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.QUERYOPTION.QUERY_USES_NETWORK">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.QUERYOPTION.QUERY_IS_CACHED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.QUERYOPTION.QUERY_IS_INSTALLEDENTRY">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.QUERYOPTION.QUERY_IS_CACHED_OR_MAPPED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.QUERYOPTION.QUERY_USES_CACHE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.QUERYOPTION.QUERY_IS_SECURE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.QUERYOPTION.QUERY_IS_SAFE">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.READYSTATE"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.READYSTATE.READYSTATE_UNINITIALIZED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.READYSTATE.READYSTATE_LOADING">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.READYSTATE.READYSTATE_LOADED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.READYSTATE.READYSTATE_INTERACTIVE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.READYSTATE.READYSTATE_COMPLETE">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.RECT"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.RECT.bottom"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.RECT.left"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.RECT.right"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.RECT.top"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.RECTL"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.RECTL.bottom"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.RECTL.left"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.RECTL.right"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.RECTL.top"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.RPCOLEMESSAGE"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.RPCOLEMESSAGE.Buffer"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.RPCOLEMESSAGE.cbBuffer"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.RPCOLEMESSAGE.dataRepresentation"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.RPCOLEMESSAGE.iMethod"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.RPCOLEMESSAGE.reserved1"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.RPCOLEMESSAGE.reserved2"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.RPCOLEMESSAGE.rpcFlags"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.SAFEARRAY"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.SAFEARRAY.cbElements"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.SAFEARRAY.cDims"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.SAFEARRAY.cLocks"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.SAFEARRAY.fFeatures"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.SAFEARRAY.pvData"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.SAFEARRAY.rgsabound"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.SAFEARRAYBOUND"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.SAFEARRAYBOUND.cElements"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.SAFEARRAYBOUND.lLbound"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.SECURITY_ATTRIBUTES"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.SECURITY_ATTRIBUTES.bInheritHandle"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.SECURITY_ATTRIBUTES.lpSecurityDescriptor"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.SECURITY_ATTRIBUTES.nLength"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.SERVERCALL"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.SERVERCALL.SERVERCALL_ISHANDLED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.SERVERCALL.SERVERCALL_REJECTED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.SERVERCALL.SERVERCALL_RETRYLATER">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.SF_TYPE"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.SF_TYPE.SF_ERROR">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.SF_TYPE.SF_I1">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.SF_TYPE.SF_I2">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.SF_TYPE.SF_I4">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.SF_TYPE.SF_I8">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.SF_TYPE.SF_BSTR">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.SF_TYPE.SF_UNKNOWN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.SF_TYPE.SF_DISPATCH">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.SF_TYPE.SF_VARIANT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.SF_TYPE.SF_RECORD">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.SF_TYPE.SF_HAVEIID">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.ShutdownType"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.ShutdownType.IdleShutdown">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.ShutdownType.ForcedShutdown">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.SIZE"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.SIZE.cx"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.SIZE.cy"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.SIZEL"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.SIZEL.cx"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.SIZEL.cy"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.SOleComponentManager"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.STATDATA"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.STATDATA.ADVF"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.STATDATA.dwConnection"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.STATDATA.FORMATETC"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.STATDATA.pAdvSink"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.STATFLAG"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.STATFLAG.STATFLAG_DEFAULT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.STATFLAG.STATFLAG_NONAME">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.STATFLAG.STATFLAG_NOOPEN">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.STATPROPSETSTG"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.STATPROPSETSTG.atime"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.STATPROPSETSTG.clsid"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.STATPROPSETSTG.ctime"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.STATPROPSETSTG.dwOSVersion"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.STATPROPSETSTG.fmtid"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.STATPROPSETSTG.grfFlags"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.STATPROPSETSTG.mtime"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.STATPROPSTG"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.STATPROPSTG.lpwstrName"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.STATPROPSTG.PROPID"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.STATPROPSTG.vt"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.STATSTG"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.STATSTG.atime"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.STATSTG.cbSize"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.STATSTG.clsid"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.STATSTG.ctime"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.STATSTG.grfLocksSupported"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.STATSTG.grfMode"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.STATSTG.grfStateBits"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.STATSTG.mtime"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.STATSTG.pwcsName"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.STATSTG.reserved"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.STATSTG.type"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.STGC"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.STGC.STGC_DEFAULT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.STGC.STGC_OVERWRITE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.STGC.STGC_ONLYIFCURRENT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.STGC.STGC_DANGEROUSLYCOMMITMERELYTODISKCACHE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.STGC.STGC_CONSOLIDATE">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.STGMEDIUM"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.STGMEDIUM.pUnkForRelease"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.STGMEDIUM.tymed"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.STGMEDIUM.unionmember"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.STGMOVE"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.STGMOVE.STGMOVE_MOVE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.STGMOVE.STGMOVE_COPY">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.STGMOVE.STGMOVE_SHALLOWCOPY">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.STGTY"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.STGTY.STGTY_STORAGE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.STGTY.STGTY_STREAM">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.STGTY.STGTY_LOCKBYTES">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.STGTY.STGTY_PROPERTY">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.StorageLayout"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.StorageLayout.cBytes"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.StorageLayout.cOffset"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.StorageLayout.LayoutType"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.StorageLayout.pwcsElementName"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.STREAM_SEEK"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.STREAM_SEEK.STREAM_SEEK_SET">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.STREAM_SEEK.STREAM_SEEK_CUR">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.STREAM_SEEK.STREAM_SEEK_END">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.SYSKIND"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.SYSKIND.SYS_WIN16">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.SYSKIND.SYS_WIN32">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.SYSKIND.SYS_MAC">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.SYSKIND.SYS_WIN64">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.SZM_FLAGS"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.SZM_FLAGS.SZM_CREATE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.SZM_FLAGS.SZM_DELETE">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.TEXTMETRICOLE"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TEXTMETRICOLE.tmAscent"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TEXTMETRICOLE.tmAveCharWidth"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TEXTMETRICOLE.tmBreakChar"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TEXTMETRICOLE.tmCharSet"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TEXTMETRICOLE.tmDefaultChar"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TEXTMETRICOLE.tmDescent"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TEXTMETRICOLE.tmDigitizedAspectX"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TEXTMETRICOLE.tmDigitizedAspectY"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TEXTMETRICOLE.tmExternalLeading"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TEXTMETRICOLE.tmFirstChar"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TEXTMETRICOLE.tmHeight"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TEXTMETRICOLE.tmInternalLeading"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TEXTMETRICOLE.tmItalic"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TEXTMETRICOLE.tmLastChar"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TEXTMETRICOLE.tmMaxCharWidth"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TEXTMETRICOLE.tmOverhang"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TEXTMETRICOLE.tmPitchAndFamily"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TEXTMETRICOLE.tmStruckOut"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TEXTMETRICOLE.tmUnderlined"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TEXTMETRICOLE.tmWeight"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.TEXTMETRICW"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TEXTMETRICW.tmAscent"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TEXTMETRICW.tmAveCharWidth"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TEXTMETRICW.tmBreakChar"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TEXTMETRICW.tmCharSet"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TEXTMETRICW.tmDefaultChar"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TEXTMETRICW.tmDescent"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TEXTMETRICW.tmDigitizedAspectX"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TEXTMETRICW.tmDigitizedAspectY"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TEXTMETRICW.tmExternalLeading"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TEXTMETRICW.tmFirstChar"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TEXTMETRICW.tmHeight"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TEXTMETRICW.tmInternalLeading"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TEXTMETRICW.tmItalic"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TEXTMETRICW.tmLastChar"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TEXTMETRICW.tmMaxCharWidth"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TEXTMETRICW.tmOverhang"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TEXTMETRICW.tmPitchAndFamily"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TEXTMETRICW.tmStruckOut"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TEXTMETRICW.tmUnderlined"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TEXTMETRICW.tmWeight"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.THDTYPE"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.THDTYPE.THDTYPE_BLOCKMESSAGES">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.THDTYPE.THDTYPE_PROCESSMESSAGES">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.TLIBATTR"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TLIBATTR.guid"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TLIBATTR.LCID"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TLIBATTR.SYSKIND"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TLIBATTR.wLibFlags"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TLIBATTR.wMajorVerNum"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TLIBATTR.wMinorVerNum"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.TYMED"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYMED.TYMED_HGLOBAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYMED.TYMED_FILE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYMED.TYMED_ISTREAM">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYMED.TYMED_ISTORAGE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYMED.TYMED_GDI">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYMED.TYMED_MFPICT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYMED.TYMED_ENHMF">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYMED.TYMED_NULL">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.TYPEATTR"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYPEATTR.cbAlignment"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYPEATTR.cbSizeInstance"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYPEATTR.cbSizeVft"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYPEATTR.cFuncs"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYPEATTR.cImplTypes"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYPEATTR.cVars"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYPEATTR.dwReserved"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYPEATTR.guid"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYPEATTR.idldescType"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYPEATTR.LCID"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYPEATTR.lpstrSchema"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYPEATTR.memidConstructor"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYPEATTR.memidDestructor"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYPEATTR.tdescAlias"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYPEATTR.TYPEKIND"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYPEATTR.wMajorVerNum"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYPEATTR.wMinorVerNum"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYPEATTR.wTypeFlags"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.TYPEDESC"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYPEDESC.unionmember"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYPEDESC.vt"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.TYPEFLAGS"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYPEFLAGS.TYPEFLAG_FAPPOBJECT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYPEFLAGS.TYPEFLAG_FCANCREATE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYPEFLAGS.TYPEFLAG_FLICENSED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYPEFLAGS.TYPEFLAG_FPREDECLID">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYPEFLAGS.TYPEFLAG_FHIDDEN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYPEFLAGS.TYPEFLAG_FCONTROL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYPEFLAGS.TYPEFLAG_FDUAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYPEFLAGS.TYPEFLAG_FNONEXTENSIBLE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYPEFLAGS.TYPEFLAG_FOLEAUTOMATION">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYPEFLAGS.TYPEFLAG_FRESTRICTED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYPEFLAGS.TYPEFLAG_FAGGREGATABLE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYPEFLAGS.TYPEFLAG_FREPLACEABLE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYPEFLAGS.TYPEFLAG_FDISPATCHABLE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYPEFLAGS.TYPEFLAG_FREVERSEBIND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYPEFLAGS.TYPEFLAG_FPROXY">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.TYPEKIND"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYPEKIND.TKIND_ENUM">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYPEKIND.TKIND_RECORD">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYPEKIND.TKIND_MODULE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYPEKIND.TKIND_INTERFACE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYPEKIND.TKIND_DISPATCH">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYPEKIND.TKIND_COCLASS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYPEKIND.TKIND_ALIAS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYPEKIND.TKIND_UNION">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYPEKIND.TKIND_MAX">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.TYSPEC"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYSPEC.TYSPEC_CLSID">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYSPEC.TYSPEC_FILEEXT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYSPEC.TYSPEC_MIMETYPE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYSPEC.TYSPEC_FILENAME">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYSPEC.TYSPEC_PROGID">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYSPEC.TYSPEC_PACKAGENAME">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.TYSPEC.TYSPEC_OBJECTID">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.UASFLAGS"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.UASFLAGS.UAS_NORMAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.UASFLAGS.UAS_BLOCKED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.UASFLAGS.UAS_NOPARENTENABLE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.UASFLAGS.UAS_MASK">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.ULARGE_INTEGER"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.ULARGE_INTEGER.QuadPart"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.URL_ENCODING"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.URL_ENCODING.URL_ENCODING_NONE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.URL_ENCODING.URL_ENCODING_ENABLE_UTF8">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.URL_ENCODING.URL_ENCODING_DISABLE_UTF8">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.URLTEMPLATE"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.URLTEMPLATE.URLTEMPLATE_CUSTOM">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.URLTEMPLATE.URLTEMPLATE_PREDEFINED_MIN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.URLTEMPLATE.URLTEMPLATE_LOW">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.URLTEMPLATE.URLTEMPLATE_MEDLOW">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.URLTEMPLATE.URLTEMPLATE_MEDIUM">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.URLTEMPLATE.URLTEMPLATE_HIGH">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.URLTEMPLATE.URLTEMPLATE_PREDEFINED_MAX">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.URLZONE"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.URLZONE.URLZONE_PREDEFINED_MIN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.URLZONE.URLZONE_LOCAL_MACHINE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.URLZONE.URLZONE_INTRANET">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.URLZONE.URLZONE_TRUSTED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.URLZONE.URLZONE_INTERNET">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.URLZONE.URLZONE_UNTRUSTED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.URLZONE.URLZONE_PREDEFINED_MAX">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.URLZONE.URLZONE_USER_MIN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.URLZONE.URLZONE_USER_MAX">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.URLZONEREG"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.URLZONEREG.URLZONEREG_DEFAULT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.URLZONEREG.URLZONEREG_HKLM">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.URLZONEREG.URLZONEREG_HKCU">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.USERCLASSTYPE"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.USERCLASSTYPE.USERCLASSTYPE_FULL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.USERCLASSTYPE.USERCLASSTYPE_SHORT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.USERCLASSTYPE.USERCLASSTYPE_APPNAME">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.VARDESC"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.VARDESC.elemdescVar"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.VARDESC.lpstrSchema"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.VARDESC.memid"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.VARDESC.unionmember"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.VARDESC.VARKIND"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.VARDESC.wVarFlags"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.VARFLAGS"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.VARFLAGS.VARFLAG_FREADONLY">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.VARFLAGS.VARFLAG_FSOURCE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.VARFLAGS.VARFLAG_FBINDABLE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.VARFLAGS.VARFLAG_FREQUESTEDIT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.VARFLAGS.VARFLAG_FDISPLAYBIND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.VARFLAGS.VARFLAG_FDEFAULTBIND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.VARFLAGS.VARFLAG_FHIDDEN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.VARFLAGS.VARFLAG_FRESTRICTED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.VARFLAGS.VARFLAG_FDEFAULTCOLLELEM">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.VARFLAGS.VARFLAG_FUIDEFAULT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.VARFLAGS.VARFLAG_FNONBROWSABLE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.VARFLAGS.VARFLAG_FREPLACEABLE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.VARFLAGS.VARFLAG_FIMMEDIATEBIND">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.VARKIND"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.VARKIND.VAR_PERINSTANCE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.VARKIND.VAR_STATIC">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.VARKIND.VAR_CONST">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.VARKIND.VAR_DISPATCH">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.VERSIONEDSTREAM"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.VERSIONEDSTREAM.guidVersion"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.VERSIONEDSTREAM.pStream"></member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.VIEWSTATUS"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.VIEWSTATUS.VIEWSTATUS_OPAQUE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.VIEWSTATUS.VIEWSTATUS_SOLIDBKGND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.VIEWSTATUS.VIEWSTATUS_DVASPECTOPAQUE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.VIEWSTATUS.VIEWSTATUS_DVASPECTTRANSPARENT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.VIEWSTATUS.VIEWSTATUS_SURFACE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.VIEWSTATUS.VIEWSTATUS_3DSURFACE">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.XFORMCOORDS"></member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.XFORMCOORDS.XFORMCOORDS_POSITION">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.XFORMCOORDS.XFORMCOORDS_SIZE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.XFORMCOORDS.XFORMCOORDS_HIMETRICTOCONTAINER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.XFORMCOORDS.XFORMCOORDS_CONTAINERTOHIMETRIC">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.XFORMCOORDS.XFORMCOORDS_EVENTCOMPAT">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.ZAFLAGS">
      <summary>Specifies Internet zone manager access options.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.ZAFLAGS.ZAFLAGS_CUSTOM_EDIT">
      <summary>Custom edit.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.ZAFLAGS.ZAFLAGS_ADD_SITES">
      <summary>Add sites to zone.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.ZAFLAGS.ZAFLAGS_REQUIRE_VERIFICATION">
      <summary>Requires verification.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.ZAFLAGS.ZAFLAGS_INCLUDE_PROXY_OVERRIDE">
      <summary>Include proxy override (intranet only).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.ZAFLAGS.ZAFLAGS_INCLUDE_INTRANET_SITES">
      <summary>Include intranet sites</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.ZAFLAGS.ZAFLAGS_NO_UI">
      <summary>Don't display UI (used for local machines).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.ZAFLAGS.ZAFLAGS_SUPPORTS_VERIFICATION">
      <summary>Supports server verification.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.OLE.Interop.ZAFLAGS.ZAFLAGS_UNC_AS_INTRANET">
      <summary>Handle UNC address using intranet settings.</summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Assemblies\v2.0\Microsoft.VisualStudio.TextManager.Interop.10.0.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.VisualStudio.TextManager.Interop.10.0</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualStudio.TextManager.Interop.IVsFindManager"></member>
    <member name="M:Microsoft.VisualStudio.TextManager.Interop.IVsFindManager.CurrentTarget(Microsoft.VisualStudio.TextManager.Interop.IVsFindTarget@)"></member>
    <member name="T:Microsoft.VisualStudio.TextManager.Interop.IVsHiddenTextSessionEx2"></member>
    <member name="M:Microsoft.VisualStudio.TextManager.Interop.IVsHiddenTextSessionEx2.EndBatch"></member>
    <member name="M:Microsoft.VisualStudio.TextManager.Interop.IVsHiddenTextSessionEx2.StartBatch"></member>
    <member name="M:Microsoft.VisualStudio.TextManager.Interop.IVsHiddenTextSessionEx2.StartOutlining(System.Int32)"></member>
    <member name="M:Microsoft.VisualStudio.TextManager.Interop.IVsHiddenTextSessionEx2.StopOutlining"></member>
    <member name="T:Microsoft.VisualStudio.TextManager.Interop.IVsMethodTipWindow3"></member>
    <member name="M:Microsoft.VisualStudio.TextManager.Interop.IVsMethodTipWindow3.GetMethodData(Microsoft.VisualStudio.TextManager.Interop.IVsMethodData@)"></member>
    <member name="T:Microsoft.VisualStudio.TextManager.Interop.IVsSmartTagTipWindow2">
      <summary>Represents additional functionality for the <see cref="T:Microsoft.VisualStudio.TextManager.Interop.IVsSmartTagTipWindow" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TextManager.Interop.IVsSmartTagTipWindow2.GetSmartTagData(Microsoft.VisualStudio.TextManager.Interop.IVsSmartTagData@)">
      <summary>Gets the smart tag content.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pSmartTagData">The <see cref="T:Microsoft.VisualStudio.TextManager.Interop.IVsSmartTagData" />.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TextManager.Interop.IVsTextTipWindow2"></member>
    <member name="M:Microsoft.VisualStudio.TextManager.Interop.IVsTextTipWindow2.GetTextTipData(Microsoft.VisualStudio.TextManager.Interop.IVsTextTipData@)"></member>
    <member name="T:Microsoft.VisualStudio.TextManager.Interop.SVsFindManager"></member>
    <member name="T:Microsoft.VisualStudio.TextManager.Interop.TextViewInitFlags3"></member>
    <member name="F:Microsoft.VisualStudio.TextManager.Interop.TextViewInitFlags3.VIF_NO_HWND_SUPPORT">
      <summary />
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Assemblies\v2.0\Microsoft.VisualStudio.Shell.Interop.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.VisualStudio.Shell</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualStudio.VSConstants">
      <summary>Use this class to access common Visual Studio constants.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.ALL"></member>
    <member name="F:Microsoft.VisualStudio.VSConstants.BuildOrder">
      <summary>Use this legacy GUID to access a specific output pane.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.BuildOutput">
      <summary>Use this legacy GUID to access a specific output pane.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.CEF_CLONEFILE">
      <summary>An obsolete flag combined bitwise as the first parameter of the method <see cref="M:Microsoft.VisualStudio.Package.EditorFactory.CreateEditorInstance(System.UInt32,System.String,System.String,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.IntPtr,System.IntPtr@,System.IntPtr@,System.String@,System.Guid@,System.Int32@)" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.CEF_OPENASNEW">
      <summary>Combined bitwise as the first parameter of the method <see cref="M:Microsoft.VisualStudio.Package.EditorFactory.CreateEditorInstance(System.UInt32,System.String,System.String,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.IntPtr,System.IntPtr@,System.IntPtr@,System.String@,System.Guid@,System.Int32@)" />, this indicates the editor factory should perform necessary corrections.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.CEF_OPENFILE">
      <summary>Combined bitwise as the first parameter of the method <see cref="M:Microsoft.VisualStudio.Package.EditorFactory.CreateEditorInstance(System.UInt32,System.String,System.String,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.IntPtr,System.IntPtr@,System.IntPtr@,System.String@,System.Guid@,System.Int32@)" />, this flag is mutually exclusive with <see cref="F:Microsoft.VisualStudio.VSConstants.CEF_CLONEFILE" />. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.CEF_SILENT">
      <summary>Indicates the editor factory should create the editor silently. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.CLSID_ComPlusOnlyDebugEngine"></member>
    <member name="F:Microsoft.VisualStudio.VSConstants.CLSID_HtmDocData">
      <summary>The document's data is HTML format.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.CLSID_HtmedPackage">
      <summary>GUID of the HTML package.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.CLSID_HtmlLanguageService">
      <summary>GUID of the HTML language service.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.CLSID_MiscellaneousFilesProject">
      <summary>CLSID for Miscellaneous Files project.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.CLSID_SolutionItemsProject">
      <summary>Project type CLSID for Solution Items project.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.CLSID_VsCfgProviderEventsHelper">
      <summary>Provide notifications when configuration-related events are fired. Implemented by the environment.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.CLSID_VsDocOutlinePackage">
      <summary>The CLSID of the document outline package window.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.CLSID_VsEnvironmentPackage">
      <summary>The CLSID for Visual Studio Environment Package.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.CLSID_VsTaskList">
      <summary>The CLSID for Visual Studio Environment Task List.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.CLSID_VsTaskListPackage">
      <summary>The CLSID for Visual Studio Environment Task List Package.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.CLSID_VsUIHierarchyWindow">
      <summary>The CLSID for Visual Studio Environment Hierarchy Window.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.cmdidToolsOptions">
      <summary>On the Tools menu, the command for options.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.CPDN_SELCHANGED">
      <summary>Sent from a page dialog to Component Selector dialog, informs of selection change on page.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.CPDN_SELDBLCLICK">
      <summary>Sent from a page dialog to Component Selector dialog, informs of a double click on a selected item.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.CPPM_CLEARSELECTION">
      <summary>Resets and clears selection in list of available components on the Component Selector dialog.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.CPPM_GETSELECTION">
      <summary>Retrieves information about selection on the Component Selector dialog.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.CPPM_INITIALIZELIST">
      <summary>Initializes the list of available components on the Component Selector dialog.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.CPPM_INITIALIZETAB">
      <summary>Initializes a tab with <see cref="T:Microsoft.VisualStudio.Package.Variant" /> in <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORTABINIT" /> on the Component Selector dialog.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.CPPM_QUERYCANSELECT">
      <summary>Determine whether the Select button should be enabled on the Component Selector dialog.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.CPPM_SETMULTISELECT">
      <summary>Sets the multiple-selection mode on the Component Selector dialog.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.DebugOutput">
      <summary>Use this legacy GUID to access a specific output pane.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.DISP_E_ARRAYISLOCKED">
      <summary>An HRESULT that indicates that the array is currently locked.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.DISP_E_BADCALLEE">
      <summary>A COM return value.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.DISP_E_BADINDEX">
      <summary>A return value that indicates subscript out of range.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.DISP_E_BADPARAMCOUNT">
      <summary>An error return value that indicates that the number of elements provided to the method is different from the number of arguments accepted by the method.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.DISP_E_BADVARTYPE">
      <summary>One of the method arguments is not a valid variant type.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.DISP_E_BUFFERTOOSMALL">
      <summary>A return error that indicates the destination token buffer is too small.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.DISP_E_DIVBYZERO">
      <summary>A return error that indicates a divide by zero error.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.DISP_E_EXCEPTION">
      <summary>This return value indicates that the call generated an exception.  The usual implementation is to specify that an argument of the method that returned this error is a pointer to a structure that contains exception information.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.DISP_E_MEMBERNOTFOUND">
      <summary>A return value indicating that the requested member does not exist, or the call to <paramref name="Invoke" /> tried to set the value of a read-only property.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.DISP_E_NONAMEDARGS">
      <summary>A return value indicating that the invoked implementation of IDispatch does not support named arguments.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.DISP_E_NOTACOLLECTION">
      <summary>A return value indicating an unexpected argument type.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.DISP_E_OVERFLOW">
      <summary>An error that indicates that a value could not be coerced to its expected representation.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.DISP_E_PARAMNOTFOUND">
      <summary>A return value that indicates that one of the parameter DISPIDs does not correspond to a parameter on the method.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.DISP_E_PARAMNOTOPTIONAL">
      <summary>A return value that indicates that a required parameter was omitted.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.DISP_E_TYPEMISMATCH">
      <summary>A return value that indicates that one or more of the parameters could not be coerced.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.DISP_E_UNKNOWNINTERFACE">
      <summary>A return value that indicates that the interface identifier passed in <paramref name="riid" /> is not equal to IID_NULL.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.DISP_E_UNKNOWNLCID">
      <summary>A return value that indicates that the member being invoked interprets string arguments according to the Locale ID (LCID), and the LCID is not recognized.  If the LCID is not needed to interpret arguments, this error should not be returned.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.DISP_E_UNKNOWNNAME">
      <summary>A return value that indicates that one or more of the names were not known. The returned DISPIDs contain DISPID_UNKNOWN for each entry that corresponds to an unknown name.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.DocumentFrame">
      <summary>A constant referenced in selection events to describe which component of the shell has just been selected.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.E_ABORT">
      <summary>A return value that may indicate an explicit cancellation action or some process that could no longer proceed after (for instance) both undo and rollback failed.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.E_ACCESSDENIED">
      <summary>A return value that describes a general access denied error.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.E_FAIL">
      <summary>Error HRESULT for a generic failure.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.E_HANDLE">
      <summary>A return value that indicates an invalid handle.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.E_INVALIDARG">
      <summary>Error HRESULT for an invalid argument.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.E_NOINTERFACE">
      <summary>Error HRESULT for the request of a not implemented interface.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.E_NOTIMPL">
      <summary>Error HRESULT for the call to a method that is not implemented.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.E_OUTOFMEMORY">
      <summary>Error HRESULT for out of memory.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.E_PENDING">
      <summary>A return value that indicates the availability of an asynchronously accessed interface.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.E_POINTER">
      <summary>A return value that indicates that an invalid pointer, usually null, was passed as a parameter.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.E_UNEXPECTED">
      <summary>A return value that indicates that the result of the method call is outside of the error cases the client code can readily handle.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.GUID_BrowseFilePage">
      <summary>The BrowseFile page.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.GUID_BuildOutputWindowPane">
      <summary>This constant represents the GUID for the interface <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsOutputWindowPane" /> which is implemented by the shell's OutputWindow tool window.  It is used by client code to display messages in the output window.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.GUID_COMClassicPage">
      <summary>A Visual Studio component selector page GUID.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.GUID_COMPlusPage">
      <summary>A Visual Studio component selector page GUID.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.GUID_DefaultEditor">
      <summary>A common system defined editor GUID.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.GUID_ExternalEditor">
      <summary>A common editor GUID.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.GUID_HTMEDAllowExistingDocData">
      <summary>GUID used to mark a <see cref="T:Microsoft.VisualStudio.TextManager.Interop.VsTextBuffer" /> in order to tell to the HTML editor factory to accept preexisting doc data.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.GUID_HtmlEditorFactory">
      <summary>GUID of the HTML editor factory.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.GUID_ItemType_PhysicalFile">
      <summary>A GUID constant used to specify that the type is a physical file on disk or the Web.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.GUID_ItemType_PhysicalFolder">
      <summary>A GUID constant used to specify that the type is a physical folder on disk or the Web.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.GUID_ItemType_SubProject">
      <summary>A GUID constant used to specify that the type is a nested hierarchy project.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.GUID_ItemType_VirtualFolder">
      <summary>A GUID constant used to specify that the type is a non-physical folder.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.GUID_OutWindowDebugPane">
      <summary>A GUID constant used to specify the debug pane inside the output window.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.GUID_OutWindowGeneralPane">
      <summary>The GUID of the pseudo service that returns the General output pane <see cref="F:Microsoft.VisualStudio.VSConstants.SID_SVsGeneralOutputWindowPane" /> in the VS environment.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.GUID_ProjectDesignerEditor">
      <summary>The propejct designer guid.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.GUID_SolutionPage">
      <summary>A Visual Studio component selector page GUID.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.GUID_TextEditorFactory">
      <summary>GUID of the Text editor factory.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.GUID_VS_DEPTYPE_BUILD_PROJECT"></member>
    <member name="F:Microsoft.VisualStudio.VSConstants.GUID_VsNewProjectPseudoFolder">
      <summary>String resource ID for Visual Studio pseudo-folder.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.GUID_VSStandardCommandSet97">
      <summary>This GUID identifies the standard set of commands known by Visual Studio 97 (version 6).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.GUID_VsTaskListViewAll">
      <summary>The GUID for the highest abstraction task lists.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.GUID_VsTaskListViewCheckedTasks">
      <summary>The GUID for a certain flavor or task lists.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.GUID_VsTaskListViewCommentTasks">
      <summary>The GUID for a certain flavor or task lists.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.GUID_VsTaskListViewCompilerTasks">
      <summary>The GUID for a certain flavor or task lists.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.GUID_VsTaskListViewCurrentFileTasks">
      <summary>The GUID for a certain flavor or task lists.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.GUID_VsTaskListViewHTMLTasks">
      <summary>The GUID for a certain flavor or task lists.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.GUID_VsTaskListViewShortcutTasks">
      <summary>The GUID for a certain flavor or task lists.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.GUID_VsTaskListViewUncheckedTasks">
      <summary>The GUID for a certain flavor or task lists.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.GUID_VsTaskListViewUserTasks">
      <summary>The GUID for a certain flavor or task lists.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.GUID_VsUIHierarchyWindowCmds">
      <summary>A GUID that defines the command group related to the hierarchy window.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.guidCOMPLUSLibrary"></member>
    <member name="F:Microsoft.VisualStudio.VSConstants.IID_IUnknown">
      <summary>GUID of the IUnknown COM interface.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.LOGVIEWID_Code">
      <summary>
        <see cref="F:Microsoft.VisualStudio.VSConstants.GUID_VSStandardCommandSet97" />cmdidOpenWith handlers should pass this value to the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsUIShellOpenDocument.OpenStandardEditor(System.UInt32,System.String,System.Guid@,System.String,Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchy,System.UInt32,System.IntPtr,Microsoft.VisualStudio.OLE.Interop.IServiceProvider,Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame@)" /> method to get the Open With dialog, in this case on possible Code Views.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.LOGVIEWID_Debugging">
      <summary>
        <see cref="F:Microsoft.VisualStudio.VSConstants.GUID_VSStandardCommandSet97" />cmdidOpenWith handlers should pass this value to the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsUIShellOpenDocument.OpenStandardEditor(System.UInt32,System.String,System.Guid@,System.String,Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchy,System.UInt32,System.IntPtr,Microsoft.VisualStudio.OLE.Interop.IServiceProvider,Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame@)" /> method to get the Open With dialog, in this case populated with possible <see cref="F:Microsoft.VisualStudio.VSConstants.LOGVIEWID_Debugging" /> debugging views which map to the same view as <see cref="F:Microsoft.VisualStudio.VSConstants.LOGVIEWID_Code" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.LOGVIEWID_Designer">
      <summary>
        <see cref="F:Microsoft.VisualStudio.VSConstants.GUID_VSStandardCommandSet97" />cmdidOpenWith handlers should pass this value to the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsUIShellOpenDocument.OpenStandardEditor(System.UInt32,System.String,System.Guid@,System.String,Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchy,System.UInt32,System.IntPtr,Microsoft.VisualStudio.OLE.Interop.IServiceProvider,Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame@)" /> method to get the Open With dialog, in this case to View Form designer views.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.LOGVIEWID_Primary">
      <summary>
        <see cref="F:Microsoft.VisualStudio.VSConstants.GUID_VSStandardCommandSet97" />cmdidOpenWith handlers should pass this value to <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsUIShellOpenDocument.OpenStandardEditor(System.UInt32,System.String,System.Guid@,System.String,Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchy,System.UInt32,System.IntPtr,Microsoft.VisualStudio.OLE.Interop.IServiceProvider,Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame@)" /> method to get the Open With dialog, in this case the default/primary view of the editor factory.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.LOGVIEWID_TextView">
      <summary>
        <see cref="F:Microsoft.VisualStudio.VSConstants.GUID_VSStandardCommandSet97" />cmdidOpenWith handlers should pass this value to <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsUIShellOpenDocument.OpenStandardEditor(System.UInt32,System.String,System.Guid@,System.String,Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchy,System.UInt32,System.IntPtr,Microsoft.VisualStudio.OLE.Interop.IServiceProvider,Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame@)" /> method to get the Open With dialog, in this for a document or data text editor view.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.LOGVIEWID_UserChooseView">
      <summary>
        <see cref="F:Microsoft.VisualStudio.VSConstants.GUID_VSStandardCommandSet97" />cmdidOpenWith handlers should pass this value to <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsUIShellOpenDocument.OpenStandardEditor(System.UInt32,System.String,System.Guid@,System.String,Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchy,System.UInt32,System.IntPtr,Microsoft.VisualStudio.OLE.Interop.IServiceProvider,Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame@)" /> method which prompts the user to choose which user-defined view to use.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.OLE_E_ADVF">
      <summary>A legacy OLE error.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.OLE_E_ADVISENOTSUPPORTED">
      <summary>A legacy OLE error.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.OLE_E_BLANK">
      <summary>A legacy OLE error.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.OLE_E_CANT_BINDTOSOURCE">
      <summary>A legacy OLE error.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.OLE_E_CANT_GETMONIKER">
      <summary>A legacy OLE error.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.OLE_E_CANTCONVERT">
      <summary>A legacy OLE error.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.OLE_E_CLASSDIFF">
      <summary>A legacy OLE error.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.OLE_E_ENUM_NOMORE">
      <summary>A legacy OLE error.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.OLE_E_INVALIDHWND">
      <summary>A legacy OLE error.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.OLE_E_INVALIDRECT">
      <summary>A legacy OLE error.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.OLE_E_NOCACHE">
      <summary>A legacy OLE error.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.OLE_E_NOCONNECTION">
      <summary>A legacy OLE error.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.OLE_E_NOSTORAGE">
      <summary>A legacy OLE error.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.OLE_E_NOT_INPLACEACTIVE">
      <summary>A legacy OLE error.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.OLE_E_NOTRUNNING">
      <summary>A legacy OLE error.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.OLE_E_OLEVERB">
      <summary>A legacy OLE error.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.OLE_E_PROMPTSAVECANCELLED">
      <summary>The user was prompted to save but chose the Cancel button from the prompt message box.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.OLE_E_STATIC">
      <summary>The cache is for a static object and it already has a cache node.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.OLE_E_WRONGCOMPOBJ">
      <summary>The versions of COMPOBJ.DLL and OLE2.DLL on your machine are incompatible with each other.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.PropertyBrowserSID">
      <summary>Describes what component of the shell has just been selected.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.S_FALSE">
      <summary>HRESULT for false.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.S_OK">
      <summary>Generic HRESULT for success.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.SELECTED"></member>
    <member name="F:Microsoft.VisualStudio.VSConstants.SID_SUIHostCommandDispatcher">
      <summary>The name of the Visual Studio service that implements <see cref="T:Microsoft.VisualStudio.OLE.Interop.IOleCommandTarget" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.SID_SVsGeneralOutputWindowPane">
      <summary>Returns an IID_IVsOutputWindowPane interface of the General output pane in the Visual Studio environment.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.SID_SVsToolboxActiveXDataProvider">
      <summary>A Visual Studio toolbox service.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.StartupProject">
      <summary>A constant referenced in selection events to describe which component of the shell has just been selected, in this case in response to project startup.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.UICONTEXT_CodeWindow">
      <summary>Returns the GUID of the command associated with a change in UI context.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.UICONTEXT_Debugging">
      <summary>Specifies that UI context is the switch to a debugging window.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.UICONTEXT_DesignMode">
      <summary>Returns the GUID of the command associated with a change to design mode in UI context.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.UICONTEXT_Dragging">
      <summary>Returns the GUID of the command associated with the UI drag/drop operation.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.UICONTEXT_EmptySolution">
      <summary>Packages may define a command that is associated with a change in UI context.  Use UICONTEXT_EmptySolution to return the GUID of the command associated with this UI state.  In this case the UI context is an empty solution.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.UICONTEXT_FullScreenMode">
      <summary>Packages may define a command that is associated with a change in UI context.  Use UICONTEXT_FullScreenMode to return the GUID of the command associated with this UI state.  In this case the UI context is that the Full Screen command from the View menu has been selected.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.UICONTEXT_NoSolution">
      <summary>Packages may define a command that is associated with a change in UI context.  Use UICONTEXT_NoSolution to return the GUID of the command associated with this UI state.  In this case the UI context is that there is no solution.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.UICONTEXT_SolutionBuilding">
      <summary>Packages may define a command that is associated with a change in UI context.  Use UICONTEXT_SolutionBuilding to return the GUID of the command associated with this UI state.  In this case the UI context is Build solution or build project mode is in effect.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.UICONTEXT_SolutionExists">
      <summary>Packages may define a command that is associated with a change in UI context.  Use UICONTEXT_SolutionExists to return the GUID of the command associated with this UI state.  In this case the UI context is that a solution exists, though the number of projects loaded is not pertinent to this call.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.UICONTEXT_SolutionHasMultipleProjects">
      <summary>Packages may define a command that is associated with a change in UI context. Use UICONTEXT_SolutionHasMultipleProjects to return the GUID of the command associated with this UI state. In this case the UI context is that a solution exists and has multiple projects loaded.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.UICONTEXT_SolutionHasSingleProject">
      <summary>Packages may define a command that is associated with a change in UI context. Use UICONTEXT_SolutionHasMultipleProjects to return the GUID of the command associated with this UI state. In this case the UI context is that a solution exists and has a single project loaded.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.UNDO_E_CLIENTABORT">
      <summary>Error HRESULT for a client abort.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.UndoManager">
      <summary>A constant referenced in selection events to describe which component of the shell has just been selected.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.UserContext">
      <summary>A constant referenced in selection events to describe which component of the shell has just been selected.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VS_BUILDABLEPROJECTCFGOPTS_BUILD_ACTIVE_DOCUMENT_ONLY"></member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VS_BUILDABLEPROJECTCFGOPTS_BUILD_SELECTION_ONLY"></member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VS_BUILDABLEPROJECTCFGOPTS_PRIVATE"></member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VS_BUILDABLEPROJECTCFGOPTS_REBUILD"></member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VS_E_BUSY">
      <summary>A constant returned by interfaces to asynchronous behavior when the object in question in already busy.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VS_E_INCOMPATIBLEDOCDATA">
      <summary>A Visual Studio specific error HRESULT for "Incompatible document data".</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VS_E_PACKAGENOTLOADED">
      <summary>A Visual Studio specific error HRESULT that indicates "Package not loaded."</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VS_E_PROJECTALREADYEXISTS">
      <summary>A Visual Studio-specific error HRESULT that indicates that the "Project already exists."</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VS_E_PROJECTMIGRATIONFAILED">
      <summary>A Visual Studio specific error HRESULT that indicates "Project configuration failed."</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VS_E_PROJECTNOTLOADED">
      <summary>A Visual Studio-specific error HRESULT that indicates "Project not loaded."</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VS_E_SOLUTIONALREADYOPEN">
      <summary>A Visual Studio-specific error HRESULT that indicates "Solution already open."</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VS_E_SOLUTIONNOTOPEN">
      <summary>A Visual Studio-specific error HRESULT that indicates "Solution not open."</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VS_E_SPECIFYING_OUTPUT_UNSUPPORTED">
      <summary>Returned by build interfaces that have parameters for specifying an array of IVsOutput's but the implementation can only apply the method to all outputs.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VS_E_UNSUPPORTEDFORMAT">
      <summary>
        <see cref="M:Microsoft.VisualStudio.Package.EditorFactory.CreateEditorInstance(System.UInt32,System.String,System.String,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.IntPtr,System.IntPtr@,System.IntPtr@,System.String@,System.Guid@,System.Int32@)" /> returns this value if the document has a format that cannot be opened in the editor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VS_E_WIZARDBACKBUTTONPRESS">
      <summary>An HRESULT value that indicates that the user hit the back button in a Visual Studio wizard.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VS_S_PROJECTFORWARDED">
      <summary>A Visual Studio-specific error HRESULT that indicates "Project forwarded."</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VS_S_TBXMARKER">
      <summary>A Visual Studio-specific constant for a "Toolbox marker."</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSCOOKIE_NIL">
      <summary>A Visual Studio-specific constant that indicates that a cookie has not been set.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSITEMID_NIL">
      <summary>A Visual Studio item identifier that represents the absence of a project item. This value is used when there is no current selection.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSITEMID_ROOT">
      <summary>A Visual Studio item identifier that represents the root of a project hierarchy and is used to identify the entire hierarchy, as opposed to a single item.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSITEMID_SELECTION">
      <summary>A Visual Studio item identifier that represents the currently selected item or items, which can include the root of the hierarchy.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSM_ENTERMODAL">
      <summary>A Visual Studio-specific constant for broadcasting a notification message via <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsBroadcastMessageEvents.OnBroadcastMessage(System.UInt32,System.IntPtr,System.IntPtr)" /> that indicates the beginning of modality.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSM_EXITMODAL">
      <summary>A Visual Studio-specific constant for broadcasting a notification message via <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsBroadcastMessageEvents.OnBroadcastMessage(System.UInt32,System.IntPtr,System.IntPtr)" /> that indicates the end of modality.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSM_TOOLBARMETRICSCHANGE">
      <summary>A Visual Studio-specific constant for broadcasting a notification message via <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsBroadcastMessageEvents.OnBroadcastMessage(System.UInt32,System.IntPtr,System.IntPtr)" /> indicating that the command bar metrics have changed.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2K">
      <summary>GUID for the Windows 2000 command set. This is a set of standard editor commands.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.WindowFrame">
      <summary>A constant referenced in selection events to describe which component of the shell has just been selected.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID">
      <summary>These constants make some basic menu commands available to managed code.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.TYPECHAR">
      <summary> Type character</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.BACKSPACE">
      <summary>Delete Backwards; Delete the current selection, or if no selection, the previous character.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.RETURN">
      <summary>Break Line; Insert a line break at the current caret position.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.TAB">
      <summary>Insert Tab; Insert a tab character at the current caret position.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.BACKTAB">
      <summary>Tab Left; Move the caret back one tab stop.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.DELETE">
      <summary>Delete; Delete the current selection.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.LEFT">
      <summary>Char Left; Move the caret left one character.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.LEFT_EXT">
      <summary>Char Left Extend; Move the caret left one character, extending the selection..</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.RIGHT">
      <summary>Char Right; Move the caret right one character.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.RIGHT_EXT">
      <summary>Char Right Extend; Move the caret right one character, extending the selection.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.UP">
      <summary>Line Up.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.UP_EXT">
      <summary>Line Up Extend; Move the caret up one line, extending the selection.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.DOWN">
      <summary>Line Down; Move the caret down one line.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.DOWN_EXT">
      <summary>Line Down Extend; Move the caret down one line, extending the selection.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.HOME">
      <summary>Document Start; Move the caret to the start of the document.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.HOME_EXT">
      <summary>Document Start Extend; Move the caret to the start of the document, extending the selection.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.END">
      <summary>Document End; Move the caret to the end of the document.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.END_EXT">
      <summary>Document End Extend; Move the caret to the end of the document, extending the selection.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.BOL">
      <summary>Line Start; Move the caret to the start of the line.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.BOL_EXT">
      <summary>Line Start Extend; Move the caret to the start of the line, extending the selection.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.FIRSTCHAR">
      <summary>Line Start After Indentation; Move the caret to first non-white space character on the line.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.FIRSTCHAR_EXT">
      <summary>Line Start After Indentation Extend; Move the caret to first non-white space character on the line, extending the selection.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.EOL">
      <summary>Line End; Move the caret to the end of the line..</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.EOL_EXT">
      <summary>Line End Extend; Move the caret to the end of the line, extending the selection.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.LASTCHAR">
      <summary>Line Last Char; Move the caret after the last non-white space character on the line.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.LASTCHAR_EXT">
      <summary>Line Last Char Extend; Move the caret after the last non-white space character on the line, extending the selection..</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.PAGEUP">
      <summary>Page Up; Move the caret up one page.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.PAGEUP_EXT">
      <summary>Page Up Extend; Move the caret up one page, extending the selection.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.PAGEDN">
      <summary>Page Down; Move the caret down one page. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.PAGEDN_EXT">
      <summary>Page Down Extend; Move the caret down one page, extending the selection.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.TOPLINE">
      <summary>View Top; Move the caret to the top line in view.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.TOPLINE_EXT">
      <summary>View Top Extend; Move the caret to the top line in view, extending the selection.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.BOTTOMLINE">
      <summary>View Bottom; Move the caret to the last line in view.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.BOTTOMLINE_EXT">
      <summary>View Bottom Extend; Move the caret to the last line in view, extending the selection.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SCROLLUP">
      <summary>Scroll Line Up: Scroll the document up one line.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SCROLLDN">
      <summary>Scroll Line Down; Scroll the document down one line.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SCROLLPAGEUP">
      <summary>Scroll Page Up: Scroll the document up one page..</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SCROLLPAGEDN">
      <summary>Scroll Page Down: Scroll the document down one page.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SCROLLLEFT">
      <summary>Scroll Column Left; Scroll the document left one column.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SCROLLRIGHT">
      <summary>Scroll Column Right; Scroll the document right one column.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SCROLLBOTTOM">
      <summary>Scroll Line Bottom; Scroll the current line to the bottom of the view.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SCROLLCENTER">
      <summary>Scroll Line Center; Scroll the current line to the center of the view.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SCROLLTOP">
      <summary>Scroll Line Top: Scroll the current line to the top of the view.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SELECTALL">
      <summary>Select All; Select all of the document.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SELTABIFY">
      <summary>Tabify Selection: Replace spaces in the current selection with tabs.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SELUNTABIFY">
      <summary>Untabify Selection; Replace tabs in the current selection with spaces.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SELLOWCASE">
      <summary>Make Lowercase; Change the text in the current selection to all lower case.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SELUPCASE">
      <summary>Make Uppercase; Change the text in the current selection to all upper case.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SELTOGGLECASE">
      <summary>Toggle Case: Toggle the case of the text in the current selection.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SELTITLECASE">
      <summary>Capitalize; Capitalize the first letter of words in the selection.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SELSWAPANCHOR">
      <summary>Swap Anchor; Swap the anchor and end points of the current selection.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.GOTOLINE">
      <summary>Go To Line; Go to the indicated line.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.GOTOBRACE">
      <summary>Goto Brace; Move the caret forward to the matching brace.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.GOTOBRACE_EXT">
      <summary>Goto Brace Extend; Move the caret forward to the matching brace, extending the selection.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.GOBACK">
      <summary>Go Back; Go back one character.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SELECTMODE">
      <summary>Select Mode; Toggle the selection mode.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.TOGGLE_OVERTYPE_MODE">
      <summary>Overtype Mode; Toggle between insert and overtype insertion modes.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CUT">
      <summary>Cut; Cut the current selection to the clipboard.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.COPY">
      <summary>Copy; Copy the current selection to the clipboard.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.PASTE">
      <summary>Paste; Paste the selection.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CUTLINE">
      <summary>Line Cut; Cut all selected lines, or the current line if no selection, to the clipboard.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.DELETELINE">
      <summary>Delete Line; Delete all selected lines, or the current line if no selection.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.DELETEBLANKLINES">
      <summary>Delete Blank Lines; Delete all blank lines in the selection, or the current blank line if no selection.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.DELETEWHITESPACE">
      <summary>Delete Horizontal White Space; Collapse white space in the selection, or delete white space adjacent to the caret if no selection.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.DELETETOEOL">
      <summary>Delete To EOL; Delete from the caret position to the end of the line.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.DELETETOBOL">
      <summary>Delete To BOL; Delete from the caret position to the beginning of the line.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OPENLINEABOVE">
      <summary>Line Open Above; Open a new line above the current line.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OPENLINEBELOW">
      <summary>Line Open Below: Open a new line below the current line.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.INDENT">
      <summary>Increase Line Indent; Increase Indent.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.UNINDENT">
      <summary>Decrease Line Indent; Line Unindent.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.UNDO">
      <summary>Undo; Undo the last operation.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.UNDONOMOVE">
      <summary>Undo no move</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.REDO">
      <summary>Redo; Repeat the operation.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.REDONOMOVE">
      <summary> Redo without move</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.DELETEALLTEMPBOOKMARKS">
      <summary>Clear Bookmarks; Clear all unnamed bookmarks in the current document.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.TOGGLETEMPBOOKMARK">
      <summary>Toggle Bookmark; Toggle an unnamed bookmark on the current line.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.GOTONEXTBOOKMARK">
      <summary>Next Bookmark; Move the caret to the next unnamed bookmark.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.GOTOPREVBOOKMARK">
      <summary>Previous Bookmark; Move the caret to the previous unnamed bookmark.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.FIND">
      <summary>Find; Find the occurrence.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.REPLACE">
      <summary>Replace; Replace the occurrence.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.REPLACE_ALL">
      <summary>Replace All; Replace all instances of the occurrence.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.FINDNEXT">
      <summary>Find Next; Find the next occurrence</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.FINDNEXTWORD">
      <summary>Find Next Word; Find the next occurrence of word.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.FINDPREV">
      <summary>Find Prev; Find the previous occurrence </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.FINDPREVWORD">
      <summary>Find Prev Word; Find the previous occurrence of word.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.FINDAGAIN">
      <summary>Find Again; Repeat the find operation.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.TRANSPOSECHAR">
      <summary>Char Transpose: Transpose the characters on either side of the caret.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.TRANSPOSEWORD">
      <summary>Word Transpose; Transpose the words on either side of the caret.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.TRANSPOSELINE">
      <summary>Line Transpose; Transpose the current line and the line below.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SELECTCURRENTWORD">
      <summary>Select Current Word; Select the word under the caret.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.DELETEWORDRIGHT">
      <summary>Word Delete To End; Delete the word to the right of the caret.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.DELETEWORDLEFT">
      <summary>Word Delete To Start; Delete the word to the left of the caret.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.WORDPREV">
      <summary>Word Previous; Move the caret left one word.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.WORDPREV_EXT">
      <summary>Word Previous Extend; Move the caret left one word, extending the selection.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.WORDNEXT">
      <summary>Word Next; Move the caret right one word.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.WORDNEXT_EXT">
      <summary>Word Next Extend; Move the caret right one word, extending the selection.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.COMMENTBLOCK">
      <summary>Comment Block; Comment out the selected block.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.UNCOMMENTBLOCK">
      <summary>Uncomment Block; Uncomment the selected block. If the block is not commented, make no change.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SETREPEATCOUNT">
      <summary> Set repeat count</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.WIDGETMARGIN_LBTNDOWN">
      <summary> Widget Margin Left Button Down; A left button down event in the widget margin. The widget margin is used to set breakpoints or bookmarks.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SHOWCONTEXTMENU">
      <summary>Displays a context menu.  If unhandled this most editors display a default context menu without any language-specific commands.  If you want your own commands on this menu, handle the command and bring up a context menu yourself.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CANCEL">
      <summary>Selection Cancel; Cancel the current selection moving the caret to the anchor point.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.PARAMINFO">
      <summary>Parameter Info; Display Parameter Info based on the current language.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.TOGGLEVISSPACE">
      <summary>View White Space; Toggle the visibility of white space characters.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.TOGGLECARETPASTEPOS">
      <summary>Paste Moves Caret; Toggle where the caret is positioned after a paste operation.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.COMPLETEWORD">
      <summary>Complete Word; Display Word Completion based on the current language.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SHOWMEMBERLIST">
      <summary>Show Member List; Display an object Member List based on the current language.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.FIRSTNONWHITEPREV">
      <summary>Line Start After Indentation Next; Move the caret to the first non-white-space character on the previous line.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.FIRSTNONWHITENEXT">
      <summary>Line Start After Indentation Next; Move the caret to the first non-white-space character on the next line.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.HELPKEYWORD">
      <summary>Help Keyword</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.FORMATSELECTION">
      <summary>Format Selection; Format the currently selected text.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OPENURL">
      <summary>Open URL; Invoke the default browser and opens the URL under the caret.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.INSERTFILE">
      <summary>Insert File As Text; Insert a file into the current document.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.TOGGLESHORTCUT">
      <summary>Toggle Task List Shortcut; Toggle a task list shortcut on the current line.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.QUICKINFO">
      <summary>Quick Info; Display Quick Info based on the current language.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.LEFT_EXT_COL">
      <summary>Char Left Extend Column; Move the caret left one character, extending the column selection.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.RIGHT_EXT_COL">
      <summary>Char Right Extend Column; Move the caret right one character, extending the column selection.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.UP_EXT_COL">
      <summary>Line Up Extend Column; Move the caret up one line, extending the column selection.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.DOWN_EXT_COL">
      <summary>Line Down Extend Column; Move the caret down one line, extending the column selection.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.TOGGLEWORDWRAP">
      <summary>Toggle Word Wrap; Toggle Word Wrap mode.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ISEARCH">
      <summary>Incremental Search; Reverse Incremental Search.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ISEARCHBACK">
      <summary>Reverse Incremental Search.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.BOL_EXT_COL">
      <summary>Line Start Extend Column; Move the caret to the start of the line, extending the column selection.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.EOL_EXT_COL">
      <summary>Line End Extend Column; Move the caret to the end of the line, extending the column selection.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.WORDPREV_EXT_COL">
      <summary>Word Previous Extend Column; Move the caret left one word, extending the column selection.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.WORDNEXT_EXT_COL">
      <summary>Word Next Extend Column; Move the caret right one word, extending the column selection.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OUTLN_HIDE_SELECTION">
      <summary>Hide Selection; Outline Hide Selection.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OUTLN_TOGGLE_CURRENT">
      <summary>Toggle Outlining Expansion; Outline Toggle Current.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OUTLN_TOGGLE_ALL">
      <summary>Toggle All Outlining; Toggle all hidden regions.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OUTLN_STOP_HIDING_ALL">
      <summary>Stop Outlining; Outline Stop Hiding All.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OUTLN_STOP_HIDING_CURRENT">
      <summary>Stop Hiding Current; Outline Stop Hiding Current.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OUTLN_COLLAPSE_TO_DEF">
      <summary>Collapse to Definitions; Outline Collapse To Definitions.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.DOUBLECLICK">
      <summary>Double Click.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.EXTERNALLY_HANDLED_WIDGET_CLICK">
      <summary>Externally handled widget click; A mouse click event in the widget margin passed to an external handler. The widget margin is used to set breakpoints or bookmarks.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.COMMENT_BLOCK">
      <summary>Comment Block; Comment out the selected block.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.UNCOMMENT_BLOCK">
      <summary>Uncomment Selection; Uncomment the selected lines.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OPENFILE">
      <summary>Open File; Open file under caret.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.NAVIGATETOURL">
      <summary>Open URL; Invoke the default browser and opens the URL under the caret.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.HANDLEIMEMESSAGE">
      <summary>Handle IME message</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SELTOGOBACK">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.COMPLETION_HIDE_ADVANCED">
      <summary>Completion hide advanced</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.FORMATDOCUMENT">
      <summary>Format document</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OUTLN_START_AUTOHIDING">
      <summary>Start Autohiding outline</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.FINAL">
      <summary>Final</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_DECREASEFILTER">
      <summary>Editor command: Decrease filter</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_COPYTIP">
      <summary>Editor command: Copy tip</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_PASTETIP">
      <summary>Editor command: Paste tip</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_LEFTCLICK">
      <summary>Editor command: Left click</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_GOTONEXTBOOKMARKINDOC">
      <summary>Editor command: Go to next bookmark in document</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_GOTOPREVBOOKMARKINDOC">
      <summary>Editor command: Go to previous bookmark in document</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_INVOKESNIPPETFROMSHORTCUT">
      <summary>Editor command: Invoke snippet from shortcut</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.AUTOCOMPLETE">
      <summary>Auto complete</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_INVOKESNIPPETPICKER2">
      <summary>Editor command: Invoke snippet picker 2</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_DELETEALLBOOKMARKSINDOC">
      <summary>Editor command: Delete all bookmarks in document</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_CONVERTTABSTOSPACES">
      <summary>Editor command: Convert tabs to spaces</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_CONVERTSPACESTOTABS">
      <summary>Editor command: Convert spaces to tabs</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_FINAL">
      <summary>Editor command: Final</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.STOP">
      <summary>STOP command created during CTC file rationalization</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.REVERSECANCEL">
      <summary>Reverse Cancel command created during CTC file rationalization</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SLNREFRESH">
      <summary>Solution Refresh command created during CTC file rationalization</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SAVECOPYOFITEMAS">
      <summary>Save Copy of Item As command created during CTC file rationalization</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.NEWELEMENT">
      <summary>HTML editor command: New element</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.NEWATTRIBUTE">
      <summary>HTML editor command: New attribute</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.NEWCOMPLEXTYPE">
      <summary>HTML editor command: New complex type</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.NEWSIMPLETYPE">
      <summary>HTML editor command: New simple type</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.NEWGROUP">
      <summary>HTML editor command: New group</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.NEWATTRIBUTEGROUP">
      <summary>HTML editor command: New attribute group</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.NEWKEY">
      <summary>HTML editor command: New key</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.NEWRELATION">
      <summary>HTML editor command: New relation</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.EDITKEY">
      <summary>HTML editor command: Edit key</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.EDITRELATION">
      <summary>HTML editor command: Edit relation</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.MAKETYPEGLOBAL">
      <summary>HTML editor command: Make type global</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.PREVIEWDATASET">
      <summary>HTML editor command: Preview dataset</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.GENERATEDATASET">
      <summary>HTML editor command: Generate data set</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CREATESCHEMA">
      <summary>HTML editor command: Create schema</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.LAYOUTINDENT">
      <summary>HTML editor command: Layout indent</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.LAYOUTUNINDENT">
      <summary>HTML editor command: Layout unindent</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.REMOVEHANDLER">
      <summary>HTML editor command: Remove handler</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.EDITHANDLER">
      <summary>HTML editor command: Edit handler</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDHANDLER">
      <summary>HTML editor command: Add handler</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.STYLE">
      <summary>HTML editor command: Style</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.STYLEGETLIST">
      <summary>Get style list</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.FONTSTYLE">
      <summary>HTML editor command: Font style</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.FONTSTYLEGETLIST">
      <summary>HTML editor command: Get font style list</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.PASTEASHTML">
      <summary>HTML editor command: Paste as HTML</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.VIEWBORDERS">
      <summary>HTML editor command: View borders</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.VIEWDETAILS">
      <summary>HTML editor command: View details</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.EXPANDCONTROLS">
      <summary>HTML editor command: Expand controls</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.COLLAPSECONTROLS">
      <summary>HTML editor command: Collapse controls</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SHOWSCRIPTONLY">
      <summary>HTML editor command: Show script only</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.INSERTTABLE">
      <summary>HTML editor command: Insert table</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.INSERTCOLLEFT">
      <summary>HTML editor command: Insert column on the left</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.INSERTCOLRIGHT">
      <summary>HTML editor command: Insert column on the right</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.INSERTROWABOVE">
      <summary>HTML editor command: Insert row above</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.INSERTROWBELOW">
      <summary>HTML editor command: Insert row below</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.DELETETABLE">
      <summary>HTML editor command: Delete table</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.DELETECOLS">
      <summary>HTML editor command: Delete columns</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.DELETEROWS">
      <summary>HTML editor command: Delete rows</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SELECTTABLE">
      <summary>HTML editor command: Select table</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SELECTTABLECOL">
      <summary>HTML editor command: Select table column</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SELECTTABLEROW">
      <summary>HTML editor command: Select table row</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SELECTTABLECELL">
      <summary>HTML editor command: Select table cell</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.MERGECELLS">
      <summary>HTML editor command: Merge cells</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SPLITCELL">
      <summary>HTML editor command: Split cell</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.INSERTCELL">
      <summary>HTML editor command: Insert cell</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.DELETECELLS">
      <summary>HTML editor command: Delete cells</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SEAMLESSFRAME">
      <summary>HTML editor command: Seamless frame</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.VIEWFRAME">
      <summary>HTML editor command: View frame</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.DELETEFRAME">
      <summary>HTML editor command: Delete frame</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SETFRAMESOURCE">
      <summary>HTML editor command: Set frame source</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.NEWLEFTFRAME">
      <summary>HTML editor command: New left frame</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.NEWRIGHTFRAME">
      <summary>HTML editor command: New right frame</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.NEWTOPFRAME">
      <summary>HTML editor command: New top frame</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.NEWBOTTOMFRAME">
      <summary>HTML editor command: New bottom frame</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SHOWGRID">
      <summary>HTML editor command: Show grid</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SNAPTOGRID">
      <summary>HTML editor command: Snap to grid</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.BOOKMARK">
      <summary>HTML editor command: Bookmark</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.HYPERLINK">
      <summary>HTML editor command: Hyperlink</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.IMAGE">
      <summary>HTML editor command: Image</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.INSERTFORM">
      <summary>HTML editor command: Insert form</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.INSERTSPAN">
      <summary>HTML editor command: Insert span</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.DIV">
      <summary>HTML editor command: Div</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.HTMLCLIENTSCRIPTBLOCK">
      <summary>HTML editor command: HTML client script block</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.HTMLSERVERSCRIPTBLOCK">
      <summary>HTML editor command: HTML server script block</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.BULLETEDLIST">
      <summary>HTML editor command: Bulleted list</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.NUMBEREDLIST">
      <summary>HTML editor command: Numbered list</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.EDITSCRIPT">
      <summary>HTML editor command: Edit script</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.EDITCODEBEHIND">
      <summary>HTML editor command: Edit code behind</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.DOCOUTLINEHTML">
      <summary>HTML editor command: Document outline HTML</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.DOCOUTLINESCRIPT">
      <summary>HTML editor command: Document outline script</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.RUNATSERVER">
      <summary>HTML editor command: Run at server</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.WEBFORMSVERBS">
      <summary>HTML editor command: Web forms verbs</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.WEBFORMSTEMPLATES">
      <summary>HTML editor command: Web forms templates</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ENDTEMPLATE">
      <summary>HTML editor command: End template</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.EDITDEFAULTEVENT">
      <summary>HTML editor command: Edit default event</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SUPERSCRIPT">
      <summary>HTML editor command: Superscript</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SUBSCRIPT">
      <summary>HTML editor command: Subscript</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.EDITSTYLE">
      <summary>HTML editor command: Edit style</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDIMAGEHEIGHTWIDTH">
      <summary>HTML editor command: Add image height width</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.REMOVEIMAGEHEIGHTWIDTH">
      <summary>HTML editor command: Remove image height and width</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.LOCKELEMENT">
      <summary>HTML editor command: Lock element</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.VIEWSTYLEORGANIZER">
      <summary>View style organizer</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_AUTOCLOSEOVERRIDE">
      <summary>Editor and HTML editor command: ECMD Auto-close override</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.NEWANY">
      <summary>HTML editor command: New any</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.NEWANYATTRIBUTE">
      <summary>HTML editor command: New any attribute</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.DELETEKEY">
      <summary>HTML editor command: Delete key</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.AUTOARRANGE">
      <summary>HTML editor command: Auto arrange</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.VALIDATESCHEMA">
      <summary>HTML editor command: Validate schema</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.NEWFACET">
      <summary>HTML editor command: New facet</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.VALIDATEXMLDATA">
      <summary>HTML editor command: Validate XML data</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.DOCOUTLINETOGGLE">
      <summary>HTML editor command: Document outline toggle</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.VALIDATEHTMLDATA">
      <summary>HTML editor command: Validate HTML data</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.VIEWXMLSCHEMAOVERVIEW">
      <summary>HTML editor command: View XML schema overview</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SHOWDEFAULTVIEW">
      <summary>HTML editor command: Show default view</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.EXPAND_CHILDREN">
      <summary>HTML editor command: Expand children</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.COLLAPSE_CHILDREN">
      <summary>HTML editor command: Collapse children</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.TOPDOWNLAYOUT">
      <summary>HTML editor command: Top down layout</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.LEFTRIGHTLAYOUT">
      <summary>HTML editor command: Left to right layout</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.INSERTCELLRIGHT">
      <summary>HTML editor command: Insert cell on the right</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.EDITMASTER">
      <summary>HTML editor command: Edit master</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.INSERTSNIPPET">
      <summary>HTML editor command: Insert snippet</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.FORMATANDVALIDATION">
      <summary>HTML editor command: Format and validation</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.COLLAPSETAG">
      <summary>HTML editor command: Collapse tag</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SELECT_TAG">
      <summary>HTML editor command: Select tag</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SELECT_TAG_CONTENT">
      <summary>HTML editor command: Select tag content</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CHECK_ACCESSIBILITY">
      <summary>HTML editor command: Check accessibility</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.UNCOLLAPSETAG">
      <summary>HTML editor command: expand tag</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.GENERATEPAGERESOURCE">
      <summary>HTML editor command: Generate page resource</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SHOWNONVISUALCONTROLS">
      <summary>HTML editor command: Show only non-visual controls</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.RESIZECOLUMN">
      <summary>HTML editor command: Resize column</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.RESIZEROW">
      <summary>HTML editor command: Resize row</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.MAKEABSOLUTE">
      <summary>HTML editor command: Make absolute</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.MAKERELATIVE">
      <summary>HTML editor command: Make relative</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.MAKESTATIC">
      <summary>HTML editor command: Make static</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.INSERTLAYER">
      <summary>HTML editor command: Insert layer</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.UPDATEDESIGNVIEW">
      <summary>HTML editor command: Update design view</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.UPDATESOURCEVIEW">
      <summary>HTML editor command: Update source view</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.INSERTCAPTION">
      <summary>HTML editor command: Insert caption</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.DELETECAPTION">
      <summary>HTML editor command: Delete caption</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.MAKEPOSITIONNOTSET">
      <summary>HTML editor command: Make position not set</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.AUTOPOSITIONOPTIONS">
      <summary>HTML editor command: Auto position options</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.EDITIMAGE">
      <summary>HTML editor command: Edit image</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.COMPILE">
      <summary>Project command: Compile</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.PROJSETTINGS">
      <summary>Project command: Project settings</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.LINKONLY">
      <summary>Project command: Link only</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.REMOVE">
      <summary>Project command: Remove</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.PROJSTARTDEBUG">
      <summary>Project command: Project start debugging</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.PROJSTEPINTO">
      <summary>Project command: Project step into</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.UPDATEWEBREF">
      <summary>Project command: Update web reference</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDRESOURCE">
      <summary>Project command: Add resource</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.WEBDEPLOY">
      <summary>Project command: Web deployment</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDHTMLPAGE">
      <summary>Visual Basic Project command: Add HTML page</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDHTMLPAGECTX">
      <summary>Visual Basic Project command: Add HTML page control</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDMODULE">
      <summary>Visual Basic Project command: Add module</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDMODULECTX">
      <summary>Visual Basic Project command: Add module control</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDWFCFORM">
      <summary>Visual Basic Project command: Add WFC form</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDWEBFORM">
      <summary>Visual Basic Project command: Add web form</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDUSERCONTROL">
      <summary>Visual Basic Project command: Add user control</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDDHTMLPAGE">
      <summary>Visual Basic Project command: Add DHTML page</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDIMAGEGENERATOR">
      <summary>Visual Basic Project command: Add image generator</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDINHERWFCFORM">
      <summary>Visual Basic Project command: Add inherited WCF form</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDINHERCONTROL">
      <summary>Visual Basic Project command: Add inherited control</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDWEBUSERCONTROL">
      <summary>Visual Basic Project command: Add web user control</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.BUILDANDBROWSE">
      <summary>Visual Basic Project command: Build and browse</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDTBXCOMPONENT">
      <summary>Visual Basic Project command: Add tab grid component</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDWEBSERVICE">
      <summary>Visual Basic Project command: Add web service</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDVFPPAGE">
      <summary>Visual FoxPro Project command: Add Visual FoxPro page</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SETBREAKPOINT">
      <summary>Visual FoxPro Project command: Set breakpoint</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SHOWALLFILES">
      <summary>Help Workshop project command: Show all files</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDTOPROJECT">
      <summary>Help Workshop project command: Add to project</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDBLANKNODE">
      <summary>Help Workshop project command: Add blank node</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDNODEFROMFILE">
      <summary>Help Workshop project command: Add node from file</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CHANGEURLFROMFILE">
      <summary>Help Workshop project command: Change URL from file</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.EDITTOPIC">
      <summary>Help Workshop project command: Edit topic</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.EDITTITLE">
      <summary>Help Workshop project command: Edit title</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.MOVENODEUP">
      <summary>Help Workshop project command: Move node up</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.MOVENODEDOWN">
      <summary>Help Workshop project command: Move node down</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.MOVENODELEFT">
      <summary>Help Workshop project command: Move node left</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.MOVENODERIGHT">
      <summary>Help Workshop project command: Move node right</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDOUTPUT">
      <summary>Deploy project command: Add output</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDFILE">
      <summary>Deploy project command: Add file</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.MERGEMODULE">
      <summary>Deploy project command: Merge module</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDCOMPONENTS">
      <summary>Deploy project command: Add components</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.LAUNCHINSTALLER">
      <summary>Deploy project command: Launch installer</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.LAUNCHUNINSTALL">
      <summary>Deploy project command: Launch uninstall</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.LAUNCHORCA">
      <summary>Deploy project command: Launch Anchor A</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.FILESYSTEMEDITOR">
      <summary>Deploy project command: File system editor</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.REGISTRYEDITOR">
      <summary>Deploy project command: Registry editor</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.FILETYPESEDITOR">
      <summary>Deploy project command: File types editor</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.USERINTERFACEEDITOR">
      <summary>Deploy project command: User's Interface editor</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CUSTOMACTIONSEDITOR">
      <summary>Deploy project command: Custom actions editor</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.LAUNCHCONDITIONSEDITOR">
      <summary>Deploy project command: Launch conditions editor</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.EDITOR">
      <summary>Deploy project command: Editor</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.EXCLUDE">
      <summary>Deploy project command: Exclude</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.REFRESHDEPENDENCIES">
      <summary>Deploy project command: Refresh dependencies</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.VIEWOUTPUTS">
      <summary>Deploy project command: View outputs</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.VIEWDEPENDENCIES">
      <summary>Deploy project command: View dependencies</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.VIEWFILTER">
      <summary>Deploy project command: View filter</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.KEY">
      <summary>Deploy project command: Key</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.STRING">
      <summary>Deploy project command: String</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.BINARY">
      <summary>Deploy project command: Binary</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.DWORD">
      <summary>Deploy project command: DWORD</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.KEYSOLO">
      <summary>Deploy project command: Key solo</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.IMPORT">
      <summary>Deploy project command: Import</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.FOLDER">
      <summary>Deploy project command: Folder</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.PROJECTOUTPUT">
      <summary>Deploy project command: Project output</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.FILE">
      <summary>Deploy project command: File</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDMERGEMODULES">
      <summary>Deploy project command: Add merge modules</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CREATESHORTCUT">
      <summary>Deploy project command: Create shortcut</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.LARGEICONS">
      <summary>Deploy project command: Large icons</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SMALLICONS">
      <summary>Deploy project command: Small icons</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.LIST">
      <summary>Deploy project command: List</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.DETAILS">
      <summary>Deploy project command: Details</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDFILETYPE">
      <summary>Add file type</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDACTION">
      <summary>Deploy project command: Add action</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SETASDEFAULT">
      <summary>Deploy project command: Set as default</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.MOVEUP">
      <summary>Deploy project command:</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.MOVEDOWN">
      <summary>Deploy project command: Move down</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDDIALOG">
      <summary>Add dialog</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.IMPORTDIALOG">
      <summary>Deploy project command: Import dialog</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDFILESEARCH">
      <summary>Deploy project command: Add file search</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDREGISTRYSEARCH">
      <summary>Deploy project command: Add registry search</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDCOMPONENTSEARCH">
      <summary>Deploy project command: Add components search</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDLAUNCHCONDITION">
      <summary>Deploy project command: Add launch condition</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDCUSTOMACTION">
      <summary>Deploy project command: Add custom action</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OUTPUTS">
      <summary>Deploy project command: Outputs</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.DEPENDENCIES">
      <summary>Deploy project command: Dependencies</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.FILTER">
      <summary>Deploy project command: Filter</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.COMPONENTS">
      <summary>Deploy project command: Components</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ENVSTRING">
      <summary>Deploy project command: Environment string</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CREATEEMPTYSHORTCUT">
      <summary>Deploy project command: Create empty shortcut</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDFILECONDITION">
      <summary>Deploy project command: Add file condition</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDREGISTRYCONDITION">
      <summary>Deploy project command: Add registry condition</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDCOMPONENTCONDITION">
      <summary>Deploy project command: Add component condition</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDURTCONDITION">
      <summary>Deploy project command: Add URT condition</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDIISCONDITION">
      <summary>Deploy project command: Add IIS condition</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SPECIALFOLDERBASE">
      <summary>Deploy project command: Base special folder</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.USERSAPPLICATIONDATAFOLDER">
      <summary>Deploy project command: User's Application Data folder</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.COMMONFILES64FOLDER">
      <summary>Deploy project command: Common files64 folder</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.COMMONFILESFOLDER">
      <summary>Deploy project command: Common files folder</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CUSTOMFOLDER">
      <summary>Deploy project command: Custom folder</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.USERSDESKTOP">
      <summary>Deploy project command: User's Desktop</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.USERSFAVORITESFOLDER">
      <summary>Deploy project command: User's Favorites folder</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.FONTSFOLDER">
      <summary>Deploy project command: Fonts folder</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.GLOBALASSEMBLYCACHEFOLDER">
      <summary>Deploy project command: Global assembly cache folder</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.MODULERETARGETABLEFOLDER">
      <summary>Deploy project command: Re-targetable module folder</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.USERSPERSONALDATAFOLDER">
      <summary>Deploy project command: User's Personal Data folder</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.PROGRAMFILES64FOLDER">
      <summary>Deploy project command: Program Files64 folder</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.PROGRAMFILESFOLDER">
      <summary>Deploy project command: Program Files folder</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.USERSPROGRAMSMENU">
      <summary>Deploy project command: User's Programs menu</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.USERSSENDTOMENU">
      <summary>Deploy project command: User's send to menu</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SHAREDCOMPONENTSFOLDER">
      <summary>Deploy project command: Shared Components folder</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.USERSSTARTMENU">
      <summary>Deploy project command: User's start menu</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.USERSSTARTUPFOLDER">
      <summary>Deploy project command: User's startup folder</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SYSTEM64FOLDER">
      <summary>Deploy project command: System64 folder</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SYSTEMFOLDER">
      <summary>Deploy project command: System folder</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.APPLICATIONFOLDER">
      <summary>Deploy project command: Application folder</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.USERSTEMPLATEFOLDER">
      <summary>Deploy project command: User template folder</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.WEBCUSTOMFOLDER">
      <summary>Deploy project command: Custom web folder</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.WINDOWSFOLDER">
      <summary>Deploy project command: Windows folder</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SPECIALFOLDERLAST">
      <summary>Deploy project command: Last special folder</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.EXPORTEVENTS">
      <summary>Analyzer project command: Export events </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.IMPORTEVENTS">
      <summary>Analyzer project command: Import events</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.VIEWEVENT">
      <summary>Analyzer project command: View event</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.VIEWEVENTLIST">
      <summary>Analyzer project command: View event list</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.VIEWCHART">
      <summary>Analyzer project command: View chart</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.VIEWMACHINEDIAGRAM">
      <summary>Analyzer project command: View machine diagram</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.VIEWPROCESSDIAGRAM">
      <summary>Analyzer project command: View process diagram</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.VIEWSOURCEDIAGRAM">
      <summary>Analyzer project command: View source diagram</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.VIEWSTRUCTUREDIAGRAM">
      <summary>Analyzer project command: View structure diagram</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.VIEWTIMELINE">
      <summary>Analyzer project command: View timeline</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.VIEWSUMMARY">
      <summary>Analyzer project command: View summary</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.APPLYFILTER">
      <summary>Analyzer project command: Apply filter</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CLEARFILTER">
      <summary>Analyzer project command: Clear filter</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.STARTRECORDING">
      <summary>Analyzer project command: Start recording</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.STOPRECORDING">
      <summary>Analyzer project command: Stop recording</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.PAUSERECORDING">
      <summary>Analyzer project command: Pause recording</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ACTIVATEFILTER">
      <summary>Analyzer project command: Activate filter </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SHOWFIRSTEVENT">
      <summary>Analyzer project command: Show first event</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SHOWPREVIOUSEVENT">
      <summary>Analyzer project command: Show previous event</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SHOWNEXTEVENT">
      <summary>Analyzer project command: Show next event</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SHOWLASTEVENT">
      <summary>Analyzer project command: Show last event</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.REPLAYEVENTS">
      <summary>Analyzer project command: Replay events</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.STOPREPLAY">
      <summary>Analyzer project command: Stop replay</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.INCREASEPLAYBACKSPEED">
      <summary>Analyzer project command: Increase playback speed</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.DECREASEPLAYBACKSPEED">
      <summary>Analyzer project command: Decrease playback speed</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDMACHINE">
      <summary>Analyzer project command: Add machine</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDREMOVECOLUMNS">
      <summary>Analyzer project command: Add or remove columns</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SORTCOLUMNS">
      <summary>Analyzer project command: Sort columns</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SAVECOLUMNSETTINGS">
      <summary>Analyzer project command: Save column settings</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.RESETCOLUMNSETTINGS">
      <summary>Analyzer project command: Reset column settings</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SIZECOLUMNSTOFIT">
      <summary>Analyzer project command: Size columns to fit</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.AUTOSELECT">
      <summary>Analyzer project command: Auto select</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.AUTOFILTER">
      <summary>Autofilter</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.AUTOPLAYTRACK">
      <summary>Analyzer project command: Autoplay track</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.GOTOEVENT">
      <summary>Analyzer project command: Go to event</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ZOOMTOFIT">
      <summary>Analyzer project command: Zoom to fit</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDGRAPH">
      <summary>Analyzer project command: Add graph</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.REMOVEGRAPH">
      <summary>Analyzer project command: Remove graph</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CONNECTMACHINE">
      <summary>Analyzer project command: Connect machine</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.DISCONNECTMACHINE">
      <summary>Analyzer project command: Disconnect machine</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.EXPANDSELECTION">
      <summary>Analyzer project command: Expand selection</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.COLLAPSESELECTION">
      <summary>Analyzer project command: Collapse section</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDFILTER">
      <summary>Add filter</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDPREDEFINED0">
      <summary>Analyzer project command: Add predefined item 0</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDPREDEFINED1">
      <summary>Analyzer project command: Add predefined item 1</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDPREDEFINED2">
      <summary>Analyzer project command: Add predefined item 2</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDPREDEFINED3">
      <summary>Analyzer project command: Add predefined item 3</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDPREDEFINED4">
      <summary>Analyzer project command: Add predefined item 4</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDPREDEFINED5">
      <summary>Analyzer project command: Add predefined item 5</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDPREDEFINED6">
      <summary>Analyzer project command: Add predefined item 6</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDPREDEFINED7">
      <summary>Analyzer project command: Add predefined item 7</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDPREDEFINED8">
      <summary>Analyzer project command: Add predefined item 8</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.TIMELINESIZETOFIT">
      <summary>Analyzer project command: Timeline size to fit</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.FIELDVIEW">
      <summary>Crystal Reports command: Field view</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SELECTEXPERT">
      <summary>Crystal Reports command: Select expert</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.TOPNEXPERT">
      <summary>Crystal Reports command: Top N Expert</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SORTORDER">
      <summary>Crystal Reports command: Sort order</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.PROPPAGE">
      <summary>Crystal Reports command: Property page</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.HELP">
      <summary>Crystal Reports command: Help</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SAVEREPORT">
      <summary>Crystal Reports command: Save report</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.INSERTSUMMARY">
      <summary>Crystal Reports command: Insert summary</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.INSERTGROUP">
      <summary>Crystal Reports command: Insert group</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.INSERTSUBREPORT">
      <summary>Crystal Reports command: Insert subreport</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.INSERTCHART">
      <summary>Crystal Reports command: Insert chart</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.INSERTPICTURE">
      <summary>Crystal Reports command: Insert picture</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SETASSTARTPAGE">
      <summary>Common project command: Set as Start page</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.RECALCULATELINKS">
      <summary>Common project command: Recalculate links</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.WEBPERMISSIONS">
      <summary>Common project command: Web permissions</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.COMPARETOMASTER">
      <summary>Common project command: Compare to master</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.WORKOFFLINE">
      <summary>Common project command: Work offline</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SYNCHRONIZEFOLDER">
      <summary>Common project command: Synchronize folder</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SYNCHRONIZEALLFOLDERS">
      <summary>Common project command: Synchronize all folders</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.COPYPROJECT">
      <summary>Common project command: Copy project</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.IMPORTFILEFROMWEB">
      <summary>Common project command: Import file from web</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.INCLUDEINPROJECT">
      <summary>Common project command: Include in project</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.EXCLUDEFROMPROJECT">
      <summary>Common project command: Exclude from project</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.BROKENLINKSREPORT">
      <summary>Common project command: Broken links report</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDPROJECTOUTPUTS">
      <summary>Common project command: Add project outputs</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDREFERENCE">
      <summary>Common project command: Add reference</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDWEBREFERENCE">
      <summary>Common project command: Add web reference</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDWEBREFERENCECTX">
      <summary>Common project command: Add web reference control</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.UPDATEWEBREFERENCE">
      <summary>Common project command: Update web reference</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.RUNCUSTOMTOOL">
      <summary>Common project command: Run custom tool</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SETRUNTIMEVERSION">
      <summary>Common project command: Set runtime version</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.VIEWREFINOBJECTBROWSER">
      <summary>Common project command: View reference in object browser</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.PUBLISH">
      <summary>Common project command: Publish</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.PUBLISHCTX">
      <summary>Common project command: Publish control</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.STARTOPTIONS">
      <summary>Common project command: Start options</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDREFERENCECTX">
      <summary>Common project command: Add reference control</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.STARTOPTIONSCTX">
      <summary>Common project command: Start options control</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.DETACHLOCALDATAFILECTX">
      <summary>Common project command: Detach local data file control</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.DRAG_MOVE">
      <summary>Right mouse button drag move</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.DRAG_COPY">
      <summary>Right mouse button drag copy</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.DRAG_CANCEL">
      <summary>Right mouse button drag cancel</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.TESTDIALOG">
      <summary>Resource Editor command: Test dialog</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SPACEACROSS">
      <summary>Resource Editor command: Space across</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SPACEDOWN">
      <summary>Resource Editor command: Space down</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.TOGGLEGRID">
      <summary>Resource Editor command: Toggle grid</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.TOGGLEGUIDES">
      <summary>Resource Editor command: Toggle guides</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SIZETOTEXT">
      <summary>Resource Editor command: Size to text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CENTERVERT">
      <summary>Resource Editor command: Center vertically</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CENTERHORZ">
      <summary>Resource Editor command: Center horizontally</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.FLIPDIALOG">
      <summary>Resource Editor command: Flip dialog</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SETTABORDER">
      <summary>Resource Editor command: Set tab border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.BUTTONRIGHT">
      <summary>Resource Editor command: Right button</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.BUTTONBOTTOM">
      <summary>Resource Editor command: Bottom button</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.AUTOLAYOUTGROW">
      <summary>Resource Editor command: Enable auto layout grow</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.AUTOLAYOUTNORESIZE">
      <summary>Resource Editor command: Disable auto layout resize</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.AUTOLAYOUTOPTIMIZE">
      <summary>Resource Editor command: Enable auto layout optimization</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.GUIDESETTINGS">
      <summary>Resource Editor command: GUID settings</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.RESOURCEINCLUDES">
      <summary>Resource Editor command: Resource includes</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.RESOURCESYMBOLS">
      <summary>Resource Editor command: Resource symbols</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OPENBINARY">
      <summary>Resource Editor command: Open as binary file</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.RESOURCEOPEN">
      <summary>Resource Editor command: Resource open</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.RESOURCENEW">
      <summary>Resource Editor command: Resource new</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.RESOURCENEWCOPY">
      <summary>Resource Editor command: Resource copy</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.INSERT">
      <summary>Resource Editor command: Insert</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.EXPORT">
      <summary>Export</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CTLMOVELEFT">
      <summary>Resource Editor command: Move control left</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CTLMOVEDOWN">
      <summary>Resource Editor command: Move control down</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CTLMOVERIGHT">
      <summary>Resource Editor command: Move control right</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CTLMOVEUP">
      <summary>Resource Editor command: Move control up</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CTLSIZEDOWN">
      <summary>Resource Editor command: Resize control down</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CTLSIZEUP">
      <summary>Resource Editor command: Resize control up</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CTLSIZELEFT">
      <summary>Resource Editor command: Resize control left</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CTLSIZERIGHT">
      <summary>Resource Editor command: Resize control right</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.NEWACCELERATOR">
      <summary>Resource Editor command: New accelerator</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CAPTUREKEYSTROKE">
      <summary>Resource Editor command: Capture keystroke</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.INSERTACTIVEXCTL">
      <summary>Resource Editor command: Insert ActiveX control</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.INVERTCOLORS">
      <summary>Resource Editor command: Invert colors</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.FLIPHORIZONTAL">
      <summary>Resource Editor command: Flip horizontal</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.FLIPVERTICAL">
      <summary>Resource Editor command: Flip vertical</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ROTATE90">
      <summary>Resource Editor command: Rotate 90 degrees</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SHOWCOLORSWINDOW">
      <summary>Resource Editor command: Show color window</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.NEWSTRING">
      <summary>Resource Editor command: New string</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.NEWINFOBLOCK">
      <summary>Resource Editor command: New info block</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.DELETEINFOBLOCK">
      <summary>Resource Editor command: Delete info block</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADJUSTCOLORS">
      <summary>Resource Editor command: Adjust colors</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.LOADPALETTE">
      <summary>Resource Editor command: Load palette</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SAVEPALETTE">
      <summary>Resource Editor command: Save palette</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CHECKMNEMONICS">
      <summary>Resource Editor command: Check Mnemonics</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.DRAWOPAQUE">
      <summary>Resource Editor command: Draw opaque</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.TOOLBAREDITOR">
      <summary>Resource Editor command: Toolbar editor</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.GRIDSETTINGS">
      <summary>Resource Editor command: Grid settings</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.NEWDEVICEIMAGE">
      <summary>Resource Editor command: New device image</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OPENDEVICEIMAGE">
      <summary>Resource Editor command: Open device image</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.DELETEDEVICEIMAGE">
      <summary>Resource Editor command: Delete device image</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.VIEWASPOPUP">
      <summary>Resource Editor command: View as pop-up</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CHECKMENUMNEMONICS">
      <summary>Resource Editor command: Check menu mnemonics</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SHOWIMAGEGRID">
      <summary>Resource Editor command: Show image grid</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SHOWTILEGRID">
      <summary>Resource Editor command: Show tile grid</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.MAGNIFY">
      <summary>Resource Editor command: Magnify</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ResProps">
      <summary>Resource Editor command: Resource properties</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.PICKRECTANGLE">
      <summary>Resource Editor command: Pick rectangle</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.PICKREGION">
      <summary>Resource Editor command: Pick region</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.PICKCOLOR">
      <summary>Resource Editor command: Pick color</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ERASERTOOL">
      <summary>Resource Editor command: Eraser tool</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.FILLTOOL">
      <summary>Resource Editor command: Fill tool</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.PENCILTOOL">
      <summary>Resource Editor command: Pencil tool</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.BRUSHTOOL">
      <summary>Resource Editor command: Brush tool</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.AIRBRUSHTOOL">
      <summary>Resource Editor command: Airbrush tool</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.LINETOOL">
      <summary>Resource Editor command: Line tool</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CURVETOOL">
      <summary>Resource Editor command: Curve tool</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.TEXTTOOL">
      <summary>Resource Editor command: Text tool</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.RECTTOOL">
      <summary>Resource Editor command: Rectangle tool</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OUTLINERECTTOOL">
      <summary>Resource Editor command: Rectangle outline tool</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.FILLEDRECTTOOL">
      <summary>Resource Editor command: Filled rectangle tool</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ROUNDRECTTOOL">
      <summary>Resource Editor command: Round rectangle tool</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OUTLINEROUNDRECTTOOL">
      <summary>Resource Editor command: Rounded rectangle outline tool</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.FILLEDROUNDRECTTOOL">
      <summary>Resource Editor command: Filled round rectangle tool</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ELLIPSETOOL">
      <summary>Resource editor command: Ellipse tool</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OUTLINEELLIPSETOOL">
      <summary>Resource Editor command: Ellipse outline tool</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.FILLEDELLIPSETOOL">
      <summary>Resource Editor command: Filled ellipse tool</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SETHOTSPOT">
      <summary>Resource Editor command: Set hotspot</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ZOOMTOOL">
      <summary>Resource Editor command: Zoom tool</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ZOOM1X">
      <summary>Resource Editor command: Zoom factor 1</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ZOOM2X">
      <summary>Resource Editor command: Zoom factor 2</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ZOOM6X">
      <summary>Resource Editor command: Zoom factor 6</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ZOOM8X">
      <summary>Resource Editor command: Zoom factor 8</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.TRANSPARENTBCKGRND">
      <summary>Resource Editor command: Transparent background </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OPAQUEBCKGRND">
      <summary>Resource Editor command: Opaque background</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ERASERSMALL">
      <summary>Resource Editor command: Small eraser</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ERASERMEDIUM">
      <summary>Resource Editor command: Medium eraser</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ERASERLARGE">
      <summary>Resource Editor command: Large eraser</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ERASERLARGER">
      <summary>Resource Editor command: Larger eraser</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CIRCLELARGE">
      <summary>Resource Editor command: Large circle</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CIRCLEMEDIUM">
      <summary>Resource Editor command: Medium circle</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CIRCLESMALL">
      <summary>Resource Editor command: Small circle</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SQUARELARGE">
      <summary>Resource Editor command: Square large</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SQUAREMEDIUM">
      <summary>Resource Editor command: Square medium</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SQUARESMALL">
      <summary>Resource Editor command: Square small</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.LEFTDIAGLARGE">
      <summary>Resource Editor command: Left diagonal large</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.LEFTDIAGMEDIUM">
      <summary>Resource Editor command: Left diagonal medium</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.LEFTDIAGSMALL">
      <summary>Resource Editor command: Left diagonal small</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.RIGHTDIAGLARGE">
      <summary>Resource Editor command: Right diagonal large</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.RIGHTDIAGMEDIUM">
      <summary>Resource Editor command: Right diagonal medium</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.RIGHTDIAGSMALL">
      <summary>Resource Editor command: Right diagonal small</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SPLASHSMALL">
      <summary>Resource Editor command: Splash small</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SPLASHMEDIUM">
      <summary>Resource Editor command: Splash medium</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SPLASHLARGE">
      <summary>Resource Editor command: Splash large</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.LINESMALLER">
      <summary>Resource Editor command: Line smaller</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.LINESMALL">
      <summary>Resource Editor command: Line small</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.LINEMEDIUM">
      <summary>Resource Editor command: Line medium</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.LINELARGE">
      <summary>Resource Editor command: Line large</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.LINELARGER">
      <summary>Resource Editor command: Line larger</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.LARGERBRUSH">
      <summary>Resource Editor command: Larger brush</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.LARGEBRUSH">
      <summary>Resource Editor command: Large brush</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.STDBRUSH">
      <summary>Resource Editor command: Standard brush</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SMALLBRUSH">
      <summary>Resource Editor command: Small brush</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SMALLERBRUSH">
      <summary>Resource Editor command: Smaller brush</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ZOOMIN">
      <summary>Resource Editor command: Zoom in</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ZOOMOUT">
      <summary>Resource Editor command: Zoom out</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.PREVCOLOR">
      <summary>Resource Editor command: Previous color</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.PREVECOLOR">
      <summary>Resource Editor command: Previous extended palette color</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.NEXTCOLOR">
      <summary>Resource Editor command: Next color</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.NEXTECOLOR">
      <summary>Resource Editor command: Next extended palette color</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.IMG_OPTIONS">
      <summary>Resource Editor command: Image options</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.STARTWEBADMINTOOL">
      <summary>Start Web site administrator tool</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.NESTRELATEDFILES">
      <summary>Nest related files</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CANCELDRAG">
      <summary>WinForm command: Cancel drag</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.DEFAULTACTION">
      <summary>WinForm command: Default action</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CTLMOVEUPGRID">
      <summary>Resource Editor command: Move control up to grid</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CTLMOVEDOWNGRID">
      <summary>Resource Editor command: Move control down to grid</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CTLMOVELEFTGRID">
      <summary>Resource Editor command: Move control left to grit</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CTLMOVERIGHTGRID">
      <summary>Resource Editor command: Move control right to grid</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CTLSIZERIGHTGRID">
      <summary>Resource Editor command: Resize control right to grid</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CTLSIZEUPGRID">
      <summary>Resource Editor command: Resize control up to grid</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CTLSIZELEFTGRID">
      <summary>Resource Editor command: Resize control left to grid</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CTLSIZEDOWNGRID">
      <summary>Resource Editor command: Resize control down to grid</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.NEXTCTL">
      <summary>WinForms command: Next control</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.PREVCTL">
      <summary>WinForms command: Previous control</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.RENAME">
      <summary>WinForms command: Rename</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.EXTRACTMETHOD">
      <summary>WinForms command: Extract method</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ENCAPSULATEFIELD">
      <summary>WinForms command: Encapsulate field</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.EXTRACTINTERFACE">
      <summary>WinForms command: Extract interface</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.PROMOTELOCAL">
      <summary>WinForms command: Promote local</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.REMOVEPARAMETERS">
      <summary>WinForms command: Remove parameters</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.REORDERPARAMETERS">
      <summary>WinForms command: Re-order parameters</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.GENERATEMETHODSTUB">
      <summary>WinForms command: Generate method stub</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.IMPLEMENTINTERFACEIMPLICIT">
      <summary>WinForms command: Implement implicit interface</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.IMPLEMENTINTERFACEEXPLICIT">
      <summary>WinForms command: Implement explicit interface</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.IMPLEMENTABSTRACTCLASS">
      <summary>WinForms command: Implement abstract class</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SURROUNDWITH">
      <summary>WinForms command: Surround with</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.QUICKOBJECTSEARCH">
      <summary>Quick object search</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ToggleWordWrapOW">
      <summary>Toggle word wrap OW</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.GotoNextLocationOW">
      <summary>Go to next location OW</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.GotoPrevLocationOW">
      <summary>Go to previous location OW</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.BuildOnlyProject">
      <summary>Build only project</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.RebuildOnlyProject">
      <summary>Rebuild only project</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CleanOnlyProject">
      <summary>Clean only project</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SetBuildStartupsOnlyOnRun">
      <summary>Set build startups only on run</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.UnhideAll">
      <summary>Unhide all</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.HideFolder">
      <summary>Hide folder</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.UnhideFolders">
      <summary>Unhide folders</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CopyFullPathName">
      <summary>Copy full path name</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SaveFolderAsSolution">
      <summary>Save folder as solution</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ManageUserSettings">
      <summary>Manage user settings</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.NewSolutionFolder">
      <summary>New solution folder</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ClearPaneOW">
      <summary>Clear Pane OW</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.GotoErrorTagOW">
      <summary>Go to Error Tag OW</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.GotoNextErrorTagOW">
      <summary>Go to next Error Tag OW</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.GotoPrevErrorTagOW">
      <summary>Go to previous Error Tag OW</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ClearPaneFR1">
      <summary>Clear Pane FR1</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.GotoErrorTagFR1">
      <summary>Go to Error Tag FR1</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.GotoNextErrorTagFR1">
      <summary>Go to next Error Tag FR1</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.GotoPrevErrorTagFR1">
      <summary>Go to previous Error Tag FR1</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ClearPaneFR2">
      <summary>Clear Pane FR2</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.GotoErrorTagFR2">
      <summary>Go to Error Tag FR2</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.GotoNextErrorTagFR2">
      <summary>Go to next Error Tag FR2</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.GotoPrevErrorTagFR2">
      <summary>Go to previous Error Tag FR2</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OutputPaneCombo">
      <summary>Output pane combo</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OutputPaneComboList">
      <summary>Output pane combo list</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.DisableDockingChanges">
      <summary>Disable docking changes</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ToggleFloat">
      <summary>Toggle float</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ResetLayout">
      <summary>Reset layout</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.NewSolutionFolderBar">
      <summary>New solution folder bar</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.DataShortcut">
      <summary>Data shortcut</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.NextToolWindow">
      <summary>New tool window</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.PrevToolWindow">
      <summary>Previous tool window</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.BrowseToFileInExplorer">
      <summary>Browse to file in Explorer</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ShowEzMDIFileMenu">
      <summary>Show simple MDI file menu</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.PrevToolWindowNav">
      <summary>Previous tool window navigator</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.StaticAnalysisOnlyProject">
      <summary>Static analysis only project</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_RUNFXCOPSEL">
      <summary>Editor command: Run Analyzer on selection</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CloseAllButThis">
      <summary>Close all but this</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ControlGallery">
      <summary>Control gallery</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.FullScreen2">
      <summary>Full Screen 2</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.NavigateBack">
      <summary>Navigate Back</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.NavigateForward">
      <summary>Navigate Forward</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_CORRECTION_1">
      <summary>Editor command: Correction 1</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_CORRECTION_2">
      <summary>Editor command: Correction 2</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_CORRECTION_3">
      <summary>Editor command: Correction 3</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_CORRECTION_4">
      <summary>Editor command: Correction 4</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_CORRECTION_5">
      <summary>Editor command: Correction 5</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_CORRECTION_6">
      <summary>Editor command: Correction 6</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_CORRECTION_7">
      <summary>Editor command: Correction 7</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_CORRECTION_8">
      <summary>Editor command: Correction 8</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_CORRECTION_9">
      <summary>Editor command: Correction 9</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_CORRECTION_10">
      <summary>Editor command: Correction 10</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OBAddReference">
      <summary>OB add Reference</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.FindReferences">
      <summary>Find References</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CodeDefView">
      <summary>Default code view</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CodeDefViewGoToPrev">
      <summary>Default code view Go To Next</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CodeDefViewGoToNext">
      <summary>Default code view Go To Next</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CodeDefViewEditDefinition">
      <summary>Default code view editor definition</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CodeDefViewChooseEncoding">
      <summary>Choose encoding for default code view</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ViewInClassDiagram">
      <summary>View in class diagram</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_ADDDBTABLE">
      <summary>Editor command: Add database table</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_ADDDATATABLE">
      <summary>Editor command: Add data table</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_ADDFUNCTION">
      <summary>Editor command: Add function</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_ADDRELATION">
      <summary>Editor command: Add relation</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_ADDKEY">
      <summary>Editor command: Add key</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_ADDCOLUMN">
      <summary>Editor command: Add column</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_CONVERT_DBTABLE">
      <summary>Editor command: Convert database table</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_CONVERT_DATATABLE">
      <summary>Editor command: Convert data table</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_GENERATE_DATABASE">
      <summary>Editor command: Generate database</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_CONFIGURE_CONNECTIONS">
      <summary>Editor command: Configure connections</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_IMPORT_XMLSCHEMA">
      <summary>Editor command: Import XML schema</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_SYNC_WITH_DATABASE">
      <summary>Editor command: Sync with database</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_CONFIGURE">
      <summary>Editor command: Configure</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_CREATE_DATAFORM">
      <summary>Editor command: Create dataform</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_CREATE_ENUM">
      <summary>Editor command: Create enumeration</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_INSERT_FUNCTION">
      <summary>Editor command: Insert function</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_EDIT_FUNCTION">
      <summary>Editor command: Edit function</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_SET_PRIMARY_KEY">
      <summary>Editor command: Set primary key</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_INSERT_COLUMN">
      <summary>Editor command: Insert column</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_AUTO_SIZE">
      <summary>Editor command: Auto size</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_SHOW_RELATION_LABELS">
      <summary>Editor command: Show relation labels</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.VSDGenerateDataSet">
      <summary>Generate debugger dataset</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.VSDPreview">
      <summary>Debugger preview</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.VSDConfigureAdapter">
      <summary>Configure debugger adapter</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.VSDViewDatasetSchema">
      <summary>Debugger view dataset schema</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.VSDDatasetProperties">
      <summary>Debugger dataset properties</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.VSDParameterizeForm">
      <summary>Debugger parameterize form</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.VSDAddChildForm">
      <summary>Add debugger child form</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_EDITCONSTRAINT">
      <summary>Editor command: Edit constraint</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_DELETECONSTRAINT">
      <summary>Editor command: Delete constraint</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_EDITDATARELATION">
      <summary>Editor command: Edit data relation</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CloseProject">
      <summary>Close project</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ReloadCommandBars">
      <summary>Reload command bars</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SolutionPlatform">
      <summary>Solution platform</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SolutionPlatformGetList">
      <summary>Get Solution platform list</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_DATAACCESSOR">
      <summary>Editor command: Data accessor</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_ADD_DATAACCESSOR">
      <summary>Editor command: Add data accessor</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_QUERY">
      <summary>Editor command: Query</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_ADD_QUERY">
      <summary>Editor command: Add query</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_PUBLISHSELECTION">
      <summary>Editor command: Publish selection</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_PUBLISHSLNCTX">
      <summary>Editor command: Publish solution control</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowserShowCallsTo">
      <summary>Call browser show calls to</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowserShowCallsFrom">
      <summary>Call browser show calls from</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowserShowNewCallsTo">
      <summary>Call browser show new calls to</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowserShowNewCallsFrom">
      <summary>Call browser show new calls from</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser1ShowCallsTo">
      <summary>Call browser 1 show calls to</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser2ShowCallsTo">
      <summary>Call browser 2 show full names</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser3ShowCallsTo">
      <summary>Call browser 3 show full names</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser4ShowCallsTo">
      <summary>Call browser 4 show full names</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser5ShowCallsTo">
      <summary>Call browser 5 show full names</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser6ShowCallsTo">
      <summary>Call browser 6 show full names</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser7ShowCallsTo">
      <summary>Call browser 7 show full names</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser8ShowCallsTo">
      <summary>Call browser 8 show full names</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser9ShowCallsTo">
      <summary>Call browser 9 show full names</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser10ShowCallsTo">
      <summary>Call browser 10 show calls to</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser11ShowCallsTo">
      <summary>Call browser 11 show calls to</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser12ShowCallsTo">
      <summary>Call browser 12 show calls to</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser13ShowCallsTo">
      <summary>Call browser 13 show calls to</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser14ShowCallsTo">
      <summary>Call browser 14 show calls to</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser15ShowCallsTo">
      <summary>Call browser 15 show calls to</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser16ShowCallsTo">
      <summary>Call browser 16 show calls from</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser1ShowCallsFrom">
      <summary>Call browser 1 show calls from</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser2ShowCallsFrom">
      <summary>Call browser 2 show calls to</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser3ShowCallsFrom">
      <summary>Call browser 3 show calls to</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser4ShowCallsFrom">
      <summary>Call browser 4 show calls to</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser5ShowCallsFrom">
      <summary>Call browser 5 show calls to</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser6ShowCallsFrom">
      <summary>Call browser 6 show calls to</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser7ShowCallsFrom">
      <summary>Call browser 7 show calls to</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser8ShowCallsFrom">
      <summary>Call browser 8 show calls to</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser9ShowCallsFrom">
      <summary>Call browser 9 show calls to</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser10ShowCallsFrom">
      <summary>Call browser 10 show calls from</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser11ShowCallsFrom">
      <summary>Call browser 11 show calls from</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser12ShowCallsFrom">
      <summary>Call browser 12 show calls from</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser13ShowCallsFrom">
      <summary>Call browser 13 show calls from</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser14ShowCallsFrom">
      <summary>Call browser 14 show calls from</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser15ShowCallsFrom">
      <summary>Call browser 15 show calls from</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser16ShowCallsFrom">
      <summary>Call browser 16 settings</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser1ShowFullNames">
      <summary>Call browser 1 show full names</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser2ShowFullNames">
      <summary>Call browser 2 sort by access</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser3ShowFullNames">
      <summary>Call browser 3 sort by access</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser4ShowFullNames">
      <summary>Call browser 4 sort by access</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser5ShowFullNames">
      <summary>Call browser 5 sort by access</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser6ShowFullNames">
      <summary>Call browser 6 sort by access</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser7ShowFullNames">
      <summary>Call browser 7 sort by access</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser8ShowFullNames">
      <summary>Call browser 8 sort by access</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser9ShowFullNames">
      <summary>Call browser 9 sort by access</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser10ShowFullNames">
      <summary>Call browser 10 show full names</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser11ShowFullNames">
      <summary>Call browser 11 show full names</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser12ShowFullNames">
      <summary>Call browser 12 show full names</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser13ShowFullNames">
      <summary>Call browser 13 show full names</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser14ShowFullNames">
      <summary>Call browser 14 show full names</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser15ShowFullNames">
      <summary>Call browser 15 show full names</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser16ShowFullNames">
      <summary>Call browser 16 show calls to</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser1Settings">
      <summary>Call browser 1 settings</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser2Settings">
      <summary>Call browser 2 show calls from</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser3Settings">
      <summary>Call browser 3 show calls from</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser4Settings">
      <summary>Call browser 4 show calls from</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser5Settings">
      <summary>Call browser 5 show calls from</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser6Settings">
      <summary>Call browser 6 show calls from</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser7Settings">
      <summary>Call browser 7 show calls from</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser8Settings">
      <summary>Call browser 8 show calls from</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser9Settings">
      <summary>Call browser 9 show calls from</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser10Settings">
      <summary>Call browser 10 settings</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser11Settings">
      <summary>Call browser 11 settings</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser12Settings">
      <summary>Call browser 12 settings</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser13Settings">
      <summary>Call browser 13 settings</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser14Settings">
      <summary>Call browser 14 settings</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser15Settings">
      <summary>Call browser 15 settings</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser16Settings">
      <summary>Call browser 16 search combo list</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser1SortAlpha">
      <summary>Call browser 1 refresh</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser2SortAlpha">
      <summary>Call browser 2 search</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser3SortAlpha">
      <summary>Call browser 3 search</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser4SortAlpha">
      <summary>Call browser 4 search</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser5SortAlpha">
      <summary>Call browser 5 search</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser6SortAlpha">
      <summary>Call browser 6 search</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser7SortAlpha">
      <summary>Call browser 7 search</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser8SortAlpha">
      <summary>Call browser 8 search</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser9SortAlpha">
      <summary>Call browser 9 search</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser10SortAlpha">
      <summary>Call browser 10 sort alphabetically</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser11SortAlpha">
      <summary>Call browser 11 sort alphabetically</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser12SortAlpha">
      <summary>Call browser 12 sort alphabetically</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser13SortAlpha">
      <summary>Call browser 13 sort alphabetically</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser14SortAlpha">
      <summary>Call browser 14 sort alphabetically</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser15SortAlpha">
      <summary>Call browser 15 sort alphabetically</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser16SortAlpha">
      <summary>Call browser 16 sort by access</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser1SortAccess">
      <summary>Call browser 1 sort by access</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser2SortAccess">
      <summary>Call browser 2 refresh</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser3SortAccess">
      <summary>Call browser 3 refresh</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser4SortAccess">
      <summary>Call browser 4 refresh</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser5SortAccess">
      <summary>Call browser 5 refresh</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser6SortAccess">
      <summary>Call browser 6 refresh</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser7SortAccess">
      <summary>Call browser 7 refresh</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser8SortAccess">
      <summary>Call browser 8 refresh</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser9SortAccess">
      <summary>Call browser 9 refresh</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser10SortAccess">
      <summary>Call browser 10 sort by access</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser11SortAccess">
      <summary>Call browser 11 sort by access</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser12SortAccess">
      <summary>Call browser 12 sort by access</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser13SortAccess">
      <summary>Call browser 13 sort by access</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser14SortAccess">
      <summary>Call browser 14 sort by access</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser15SortAccess">
      <summary>Call browser 15 sort by access</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser16SortAccess">
      <summary>Call browser 16 show full names</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ShowCallBrowser">
      <summary>Show call browser</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser1">
      <summary>Call browser 1</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser2">
      <summary>Call browser 2 refresh</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser3">
      <summary>Call browser 3 refresh</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser4">
      <summary>Call browser 4 refresh</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser5">
      <summary>Call browser 5 refresh</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser6">
      <summary>Call browser 6 refresh</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser7">
      <summary>Call browser 7 refresh</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser8">
      <summary>Call browser 8 refresh</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser9">
      <summary>Call browser 9 refresh</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser10">
      <summary>Call browser 10</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser11">
      <summary>Call browser 11</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser12">
      <summary>Call browser 12</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser13">
      <summary>Call browser 13</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser14">
      <summary>Call browser 14</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser15">
      <summary>Call browser 15</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser16">
      <summary>Call browser 15</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser17">
      <summary>Call browser 17</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.GlobalUndo">
      <summary>Global Undo</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.GlobalRedo">
      <summary>Global Re-do</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowserShowCallsToCmd">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowserShowCallsFromCmd">
      <summary>Call browser show calls from command</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowserShowNewCallsToCmd">
      <summary>Call browser show new calls to command</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowserShowNewCallsFromCmd">
      <summary>Call browser show new calls from command</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser1Search">
      <summary>Call browser 1 search</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser2Search">
      <summary>Call browser 2 search combo</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser3Search">
      <summary>Call browser 3 search combo</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser4Search">
      <summary>Call browser 4 search combo</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser5Search">
      <summary>Call browser 5 search combo</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser6Search">
      <summary>Call browser 6 search combo</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser7Search">
      <summary>Call browser 7 search combo</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser8Search">
      <summary>Call browser 8 search combo</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser9Search">
      <summary>Call browser 9 search combo</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser10Search">
      <summary>Call browser 10 search</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser11Search">
      <summary>Call browser 11 search</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser12Search">
      <summary>Call browser 12 search</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser13Search">
      <summary>Call browser 13 search</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser14Search">
      <summary>Call browser 14 search</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser15Search">
      <summary>Call browser 15 search</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser16Search">
      <summary>Call browser 16 refresh</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser1Refresh">
      <summary>Call browser 1 refresh</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser2Refresh">
      <summary>Call browser 2 search</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser3Refresh">
      <summary>Call browser 3 search</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser4Refresh">
      <summary>Call browser 4 search</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser5Refresh">
      <summary>Call browser 5 search</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser6Refresh">
      <summary>Call browser 6 search</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser7Refresh">
      <summary>Call browser 7 search</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser8Refresh">
      <summary>Call browser 8 search</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser9Refresh">
      <summary>Call browser 9 search</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser10Refresh">
      <summary>Call browser 10 refresh</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser11Refresh">
      <summary>Call browser 11 refresh</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser12Refresh">
      <summary>Call browser 12 refresh</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser13Refresh">
      <summary>Call browser 13 refresh</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser14Refresh">
      <summary>Call browser 14 refresh</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser15Refresh">
      <summary>Call browser 15 refresh</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser16Refresh">
      <summary>Call browser 16</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser1SearchCombo">
      <summary>Call browser 1 search combo</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser2SearchCombo">
      <summary>Call browser 2 search combo list</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser3SearchCombo">
      <summary>Call browser 3 search combo list</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser4SearchCombo">
      <summary>Call browser 4 search combo list</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser5SearchCombo">
      <summary>Call browser 5 search combo list</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser6SearchCombo">
      <summary>Call browser 6 settings</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser7SearchCombo">
      <summary>Call browser 7 search combo list</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser8SearchCombo">
      <summary>Call browser 8 search combo list</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser9SearchCombo">
      <summary>Call browser 9 search combo list</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser10SearchCombo">
      <summary>Call browser 10 search combo</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser11SearchCombo">
      <summary>Call browser 11 search combo</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser12SearchCombo">
      <summary>Call browser 12 search combo</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser13SearchCombo">
      <summary>Call browser 13 search combo</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser14SearchCombo">
      <summary>Call browser 14 search combo</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser15SearchCombo">
      <summary>Call browser 15 search combo</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser16SearchCombo">
      <summary>Call browser 16 search</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.TaskListProviderCombo">
      <summary>Task list provider combo</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.TaskListProviderComboList">
      <summary>Task list provider combo list</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CreateUserTask">
      <summary>Create user task</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ErrorListShowErrors">
      <summary>Error list show errors</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ErrorListShowWarnings">
      <summary>Error list show warnings</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ErrorListShowMessages">
      <summary>Error list show messages</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.Registration">
      <summary>Registration</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser1SearchComboList">
      <summary>Call browser 1 search combo list</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser2SearchComboList">
      <summary>Call browser 2 settings</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser3SearchComboList">
      <summary>Call browser 3 settings</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser4SearchComboList">
      <summary>Call browser 4 settings</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser5SearchComboList">
      <summary>Call browser 5 settings</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser6SearchComboList">
      <summary>Call browser 6 search combo list</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser7SearchComboList">
      <summary>Call browser 7 settings</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser8SearchComboList">
      <summary>Call browser 8 settings</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser9SearchComboList">
      <summary>Call browser 9 settings</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser10SearchComboList">
      <summary>Call browser 10 search combo list</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser11SearchComboList">
      <summary>Call browser 11 search combo list</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser12SearchComboList">
      <summary>Call browser 12 search combo list</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser13SearchComboList">
      <summary>Call browser 13 search combo list</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser14SearchComboList">
      <summary>Call browser 14 search combo list</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser15SearchComboList">
      <summary>Call browser 15 search combo list</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CallBrowser16SearchComboList">
      <summary>Call browser 16 search combo</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SnippetProp">
      <summary>Snippet property</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SnippetRef">
      <summary>Snippet reference</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SnippetRepl">
      <summary>Snippet replace</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.StartPage">
      <summary>Start page</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.EditorLineFirstColumn">
      <summary>Editor line first column</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.EditorLineFirstColumnExtend">
      <summary>Editor line first column extended</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SEServerExplorer">
      <summary>SE Server Explorer</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SEDataExplorer">
      <summary>SE Data explorer</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_UPDATEMGDRES">
      <summary>Editor command: Update managed resources</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_PROJTOOLORDER">
      <summary>Editor command: Project tool order</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_PROJECTTOOLFILES">
      <summary>Editor command: Project tool files</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_OTB_PGO_INSTRUMENT">
      <summary>Editor command: Object test bench / Profile guided optimization instrument</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_OTB_PGO_OPT">
      <summary>Editor command: Object test bench / Profile guided optimization optimize</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_OTB_PGO_UPDATE">
      <summary>Editor command: Object test bench / Profile guided optimization update</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_OTB_PGO_RUNSCENARIO">
      <summary>Editor command: Object test bench / Profile guided optimization run scenario</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_TAB">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_ADDMASTERPAGE">
      <summary>Editor command: Add master page</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_ADDCONTENTPAGE">
      <summary>Editor command: Add content page</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_ADDSTYLESHEET">
      <summary>Editor command: Add stylesheet</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_SETBROWSELOCATION">
      <summary>Editor command: Set browse location</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_REFRESHFOLDER">
      <summary>Editor command: Refresh folder</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_SETBROWSELOCATIONCTX">
      <summary>Editor command: Set browse location control</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_VIEWMARKUP">
      <summary>Editor command: View markup</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_NEXTMETHOD">
      <summary>Editor command: Next method</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_PREVMETHOD">
      <summary>Editor command: Previous method</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_RENAMESYMBOL">
      <summary>Editor command: Rename symbol</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_SHOWREFERENCES">
      <summary>Editor command: Show references</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_CREATESNIPPET">
      <summary>Editor command: Create snippet</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_CREATEREPLACEMENT">
      <summary>Editor command: Create replacement</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_INSERTCOMMENT">
      <summary>Editor command: Insert comment</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_VALIDATION_TARGET">
      <summary>Editor command: Validation target</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_VALIDATION_TARGET_GET_LIST">
      <summary>Editor command: Get validation target list</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_CSS_TARGET">
      <summary>Editor command: CSS target</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ECMD_CSS_TARGET_GET_LIST">
      <summary>Editor command: Get CSS target list</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.NewDiagram">
      <summary>New diagram</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.NewTable">
      <summary>New table</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.NewDBItem">
      <summary>New database item</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.NewTrigger">
      <summary>New trigger</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.Debug">
      <summary>Debug</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.NewProcedure">
      <summary>New package procedure</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.NewQuery">
      <summary>New query</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.RefreshLocal">
      <summary>Refresh local</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.DbAddDataConnection">
      <summary>Add database data connection</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.DBDefDBRef">
      <summary>Database ref</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.RunCmd">
      <summary>Run command</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.RunOn">
      <summary>Run on</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.NewDBRef">
      <summary>New database reference</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SetAsDef">
      <summary>Set as definition</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CreateCmdFile">
      <summary>Create command file</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.Cancel">
      <summary>Cancel</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.NewDatabase">
      <summary>New database</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.NewUser">
      <summary>New user</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.NewRole">
      <summary>New role</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ChangeLogin">
      <summary>Change login</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.NewView">
      <summary>New view</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ModifyConnection">
      <summary>Modify connection</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.Disconnect">
      <summary>Disconnect</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CopyScript">
      <summary>Copy script</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.AddSCC">
      <summary>Add source control</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.RemoveSCC">
      <summary>Remove source control</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.GetLatest">
      <summary>Get latest</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CheckOut">
      <summary>Check out</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CheckIn">
      <summary>Check in</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.UndoCheckOut">
      <summary>Undo checkout </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.AddItemSCC">
      <summary>Add source control item</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.NewPackageSpec">
      <summary>New package specification</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.NewPackageBody">
      <summary>New package body</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.InsertSQL">
      <summary>Insert SQL</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.RunSelection">
      <summary>Run selection</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.UpdateScript">
      <summary>Update script</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.NewScript">
      <summary>New script</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.NewFunction">
      <summary>New function</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.NewTableFunction">
      <summary>New table function</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.NewInlineFunction">
      <summary>New inline function</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.AddDiagram">
      <summary>Add diagram</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.AddTable">
      <summary>Add table</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.AddSynonym">
      <summary>Add synonym</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.AddView">
      <summary>Add view</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.AddProcedure">
      <summary>Add procedure</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.AddFunction">
      <summary>Add function</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.AddTableFunction">
      <summary>Add table function</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.AddInlineFunction">
      <summary>Add inline function</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.AddPkgSpec">
      <summary>Add package specification</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.AddPkgBody">
      <summary>Add package body</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.AddTrigger">
      <summary>Add Trigger</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ExportData">
      <summary>Export data</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.DbnsVcsAdd">
      <summary>Database version control add</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.DbnsVcsRemove">
      <summary>Database version control remove</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.DbnsVcsCheckout">
      <summary>Database version control checkout</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.DbnsVcsUndoCheckout">
      <summary>Database version control undo checkout</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.DbnsVcsCheckin">
      <summary>Database version control checkin</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SERetrieveData">
      <summary>SE retrieve data</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SEEditTextObject">
      <summary>SE edit text object</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.DesignSQLBlock">
      <summary>Design SQL block</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.RegisterSQLInstance">
      <summary>Register SQL instance</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.UnregisterSQLInstance">
      <summary>Unregister SQL instance</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CommandWindowSaveScript">
      <summary>Command window save script</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CommandWindowRunScript">
      <summary>Command window run script</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CommandWindowCursorUp">
      <summary>Command window cursor up</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CommandWindowCursorDown">
      <summary>Command window cursor down</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CommandWindowCursorLeft">
      <summary>Command window cursor left</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CommandWindowCursorRight">
      <summary>Command window cursor right</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CommandWindowHistoryUp">
      <summary>Command window history up</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CommandWindowHistoryDown">
      <summary>Command window history down</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.VIEWCOMPONENTDESIGNER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.GOTOTYPEDEF">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SHOWSNIPPETHIGHLIGHTING">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.HIDESNIPPETHIGHLIGHTING">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDSERVICEREFERENCE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ADDSERVICEREFERENCECTX">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.UPDATESERVICEREFERENCE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CONFIGURESERVICEREFERENCE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.IMPORTICONIMAGE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.EXPORTICONIMAGE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OPENEXTERNALEDITOR">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CVShowInheritedMembers">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CVShowBaseTypes">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CVShowDerivedTypes">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CVShowHidden">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CVBack">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CVForward">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CVSearchCombo">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CVSearch">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CVSortObjectsAlpha">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CVSortObjectsType">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CVSortObjectsAccess">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CVGroupObjectsType">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CVSortMembersAlpha">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CVSortMembersType">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CVSortMembersAccess">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CVTypeBrowserSettings">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CVViewMembersAsImplementor">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CVViewMembersAsSubclass">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CVViewMembersAsUser">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CVReserved1">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CVReserved2">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CVShowProjectReferences">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CVGroupMembersType">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CVClearSearch">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CVFilterToType">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CVSortByBestMatch">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CVSearchMRUList">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CVViewOtherMembers">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CVSearchCmd">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.CVGoToSearchCmd">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OBShowInheritedMembers">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OBShowBaseTypes">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OBShowDerivedTypes">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OBShowHidden">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OBBack">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OBForward">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OBSearchCombo">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OBSearch">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OBSortObjectsAlpha">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OBSortObjectsType">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OBSortObjectsAccess">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OBGroupObjectsType">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OBSortMembersAlpha">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OBSortMembersType">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OBSortMembersAccess">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OBTypeBrowserSettings">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OBViewMembersAsImplementor">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OBViewMembersAsSubclass">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OBViewMembersAsUser">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OBNamespacesView">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OBContainersView">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OBReserved1">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OBGroupMembersType">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OBClearSearch">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OBFilterToType">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OBSortByBestMatch">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OBSearchMRUList">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OBViewOtherMembers">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OBSearchCmd">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OBGoToSearchCmd">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.OBShowExtensionMembers">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.FSRSortObjectsAlpha">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.FSRSortByBestMatch">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.Design">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.DesignOn">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.SEDesign">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID.ToggleConsumeFirstCompletionMode">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.VSConstants.VsUIHierarchyWindowCmdIds">
      <summary>An enumeration of commands that apply to events unique to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchyWindow" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VsUIHierarchyWindowCmdIds.UIHWCMDID_RightClick">
      <summary>Occurs when the user right clicks the mouse over the tree's pane.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VsUIHierarchyWindowCmdIds.UIHWCMDID_DoubleClick">
      <summary>Occurs when the user double clicks the mouse on the tree's pane.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VsUIHierarchyWindowCmdIds.UIHWCMDID_EnterKey">
      <summary>Occurs when the user hits the Enter key while the tree's pane has focus.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VsUIHierarchyWindowCmdIds.UIHWCMDID_StartLabelEdit">
      <summary>Occurs when tree node text becomes an editable entry field.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VsUIHierarchyWindowCmdIds.UIHWCMDID_CommitLabelEdit">
      <summary>Occurs when a tree node turns from an editable entry field back into static text.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VSConstants.VsUIHierarchyWindowCmdIds.UIHWCMDID_CancelLabelEdit">
      <summary>Occurs when the user hits the escape key and causes an editable tree node to turn back into static text.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.DialogPage">
      <summary>Provides a standard dialog box functionality for implementing Toolbox property sheets, ToolsOptions pages, or custom UI dialog boxes, with support for the Visual Studio automation model, Windows Forms, and state persistence by using the Visual Studio settings mechanism.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.DialogPage.#ctor">
      <summary>Initializes a new instance of <see cref="T:Microsoft.VisualStudio.Shell.DialogPage" />.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.DialogPage.AutomationObject">
      <summary>Gets the DTE automation model object for a given instance of a dialog page class.</summary>
      <returns>An instance of the automation object, or null if no automation support is available.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.DialogPage.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by a dialog page class and optionally releases the managed resources; the parent class, <see cref="T:System.ComponentModel.Component" /> supports unmanaged resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.DialogPage.LoadSettingsFromStorage">
      <summary>Called by Visual Studio to load the settings of a dialog page from local storage, generally the registry.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.DialogPage.LoadSettingsFromXml(Microsoft.VisualStudio.Shell.Interop.IVsSettingsReader)">
      <summary>Called by Visual Studio to load the settings of a dialog page from the Visual Studio settings storage on disk.</summary>
      <param name="reader">[in]An <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSettingsReader" /> interface that is provided by the environment to the VSPackage to give read access to the Visual Studio settings file.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.DialogPage.OnActivate(System.ComponentModel.CancelEventArgs)">
      <summary>Handles Windows Activate messages from the Visual Studio environment.</summary>
      <param name="e">[in] Arguments to event handler.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.DialogPage.OnApply(Microsoft.VisualStudio.Shell.DialogPage.PageApplyEventArgs)">
      <summary>Handles Apply messages from the Visual Studio environment.</summary>
      <param name="e">[in] Arguments to event handler.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.DialogPage.OnClosed(System.EventArgs)">
      <summary>Handles Close messages from the Visual Studio environment.</summary>
      <param name="e">[in] Arguments to event handler.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.DialogPage.OnDeactivate(System.ComponentModel.CancelEventArgs)">
      <summary>Handles Deactive messages from the Visual Studio environment.</summary>
      <param name="e">[in] Arguments to event handler.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.DialogPage.ResetSettings">
      <summary>Should be overridden to reset settings to their default values.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.DialogPage.SaveSettingsToStorage">
      <summary>Called by Visual Studio to store the settings of a dialog page in local storage, typically the registry.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.DialogPage.SaveSettingsToXml(Microsoft.VisualStudio.Shell.Interop.IVsSettingsWriter)">
      <summary>Called by Visual Studio to store the settings of a dialog page to the Visual Studio settings storage on disk.</summary>
      <param name="writer">[in]A <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSettingsWriter" /> interface that is provided by the environment to the VSPackage to give write access to the Visual Studio settings file.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.DialogPage.SettingsRegistryPath">
      <summary>Gets or sets the sub-key under the Visual Studio version-specific root for storing settings data for a dialog page.</summary>
      <returns>The sub-key of the Visual Studio version-specific registry tree that contain the settings for a given dialog page.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.DialogPage.Site">
      <summary>Gets or sets the site of the dialog page. Overrides the implementation inherited from <see cref="T:System.ComponentModel.Component" />.</summary>
      <returns>
        <see cref="T:System.ComponentModel.ISite" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.DialogPage.System#Windows#Forms#IWin32Window#Handle">
      <summary>Gets the handle of the window of the dialog page.</summary>
      <returns>A pointer that is the handle of an <see cref="T:System.Windows.Forms.IWin32Window" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.DialogPage.Window">
      <summary>Gets the window that is used as the user interface of the dialog page.</summary>
      <returns>An <see cref="T:System.Windows.Forms.IWin32Window" /> that provides the handle to the window that acts as the user interface for the dialog page.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.DialogPage.PageApplyEventArgs">
      <summary>Event arguments that allow the <see cref="M:Microsoft.VisualStudio.Shell.DialogPage.OnApply(Microsoft.VisualStudio.Shell.DialogPage.PageApplyEventArgs)" /> method to indicate how to handle the apply event.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.DialogPage.PageApplyEventArgs.#ctor">
      <summary>Initializes a new instance of <see cref="T:Microsoft.VisualStudio.Shell.DialogPage.PageApplyEventArgs" />.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.DialogPage.PageApplyEventArgs.ApplyBehavior">
      <summary>Gets or sets the kind of behavior that should take plan on Apply.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Shell.DialogPage.ApplyKind" />.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.ErrorListProvider">
      <summary>This task provider is used to provide tasks for the Visual Studio Error List window.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ErrorListProvider.#ctor(System.IServiceProvider)">
      <summary>Creates an ErrorListProvider object.</summary>
      <param name="provider">
        <see cref="T:Microsoft.VisualStudio.OLE.Interop.IServiceProvider" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ErrorListProvider.BringToFront">
      <summary>Activates the Error List window and makes it visible.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ErrorListProvider.Dispose(System.Boolean)">
      <summary>Activates the Error List window and makes it visible.</summary>
      <param name="disposing">Parameter is set to true if the task list can be disposed, that is, if the <see cref="T:Microsoft.VisualStudio.Shell.TaskProvider.TaskCollection" /> contains tasks.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ErrorListProvider.Finalize">
      <summary>Destructor for ErrorListProvider.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ErrorListProvider.ForceShowErrors">
      <summary>Shows the errors in the Error List window.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ErrorListProvider.Show">
      <summary>Creates a Error List tool window and shows the errors in it. </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ErrorListProvider.VsTaskList">
      <summary>Returns the service that allows VSPackage implementers to store and manage their tasks as a part of the environment's task list.</summary>
      <returns>Returns an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsTaskList" /> object.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.ErrorTask">
      <summary>Represents an error task on the Task List. This class implements <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsErrorItem" />. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ErrorTask.#ctor">
      <summary>Initializes a new instance of an <see cref="T:Microsoft.VisualStudio.Shell.ErrorTask" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ErrorTask.#ctor(System.Exception)">
      <summary>Initializes a new instance of an <see cref="T:Microsoft.VisualStudio.Shell.ErrorTask" /> for the specified error.</summary>
      <param name="error">
        <see cref="T:System.Exception" />.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ErrorTask.ErrorCategory">
      <summary>Gets or sets the error category of this task.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Shell.TaskErrorCategory" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ErrorTask.HierarchyItem">
      <summary>Gets or sets the hierarchy item associated with this task.</summary>
      <returns>The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> item associated with the task.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ErrorTask.Microsoft#VisualStudio#Shell#Interop#IVsErrorItem#GetCategory(System.UInt32@)">
      <summary>Gets the category of the error.</summary>
      <returns>
        <see cref="F:Microsoft.VisualStudio.NativeMethods.S_OK" />.</returns>
      <param name="pCategory">[out] Returns the <see cref="T:Microsoft.VisualStudio.Shell.TaskErrorCategory" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ErrorTask.Microsoft#VisualStudio#Shell#Interop#IVsErrorItem#GetHierarchy(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy@)">
      <summary>Gets the hierarchy node associated with the task.</summary>
      <returns>
        <see cref="F:Microsoft.VisualStudio.NativeMethods.S_OK" />.</returns>
      <param name="ppHier">[out] Returns the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface of the node associated with this task.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.InstalledProductRegistrationAttribute">
      <summary>Provides information for the Visual Studio splash screen and the Help About dialog box when applied to a <see cref="T:Microsoft.VisualStudio.Shell.Package" />-derived class or a class that implements <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsPackage" />. This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.InstalledProductRegistrationAttribute.#ctor(System.Boolean,System.String,System.String,System.String)">
      <summary>Initializes a new InstalledProductRegistrationAttribute instance for the specified product.</summary>
      <param name="useInterface">true if the package implements the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsInstalledProduct" /> interface to collect and display the information, otherwise false.</param>
      <param name="productName">The name of the product.</param>
      <param name="productDetails">The detailed description of the product.</param>
      <param name="productId">The product ID.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.InstalledProductRegistrationAttribute.IconResourceID">
      <summary>Gets or sets the resource ID of the icon associated with the product.</summary>
      <returns>The resource ID of the icon associated with the product.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.InstalledProductRegistrationAttribute.LanguageIndependentName">
      <summary>Gets or sets the (non-localized) name of the product.</summary>
      <returns>The (non-localized) name of the product.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.InstalledProductRegistrationAttribute.ProductDetails">
      <summary>Gets or sets the detailed description of the product.</summary>
      <returns>The detailed description of the product.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.InstalledProductRegistrationAttribute.ProductDetailsResourceID">
      <summary>Gets or sets the product details resource ID.</summary>
      <returns>The product details resource ID.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.InstalledProductRegistrationAttribute.ProductId">
      <summary>Gets or sets the product ID.</summary>
      <returns>The ID of the product.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.InstalledProductRegistrationAttribute.ProductName">
      <summary>Gets or sets the name of the product.</summary>
      <returns>The name of the product.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.InstalledProductRegistrationAttribute.ProductNameResourceID">
      <summary>Gets or sets the resource ID of the product name.</summary>
      <returns>The product name resource ID.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.InstalledProductRegistrationAttribute.Register(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
      <summary>Registers information about a VSPackage when called by an external registration tool such as regpkg.exe. </summary>
      <param name="context">A <see cref="T:Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext" /> provided by an external registration tool. The context can be used to create registry keys, log registration activity, and obtain information about the component being registered.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.InstalledProductRegistrationAttribute.Unregister(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
      <summary>Removes the registration information about a VSPackage when called by an external registration tool such as regpkg.exe. </summary>
      <param name="context">A <see cref="T:Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext" /> provided by an external registration tool. The context can be used to remove registry keys, log registration activity, and obtain information about the component being registered.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.InstalledProductRegistrationAttribute.UseInterface">
      <summary>Gets or whether the package implements the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsInstalledProduct" /> interface to display a bitmap in the splash screen and information in the About dialog box on the Help menu.</summary>
      <returns>The value is true if the product installation implements the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsInstalledProduct" /> interface and false otherwise.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.InstalledProductRegistrationAttribute.UsePackage">
      <summary>Gets or sets whether the product installation uses the package ID.</summary>
      <returns>The value is true if the product installation uses the package ID, and false otherwise.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.IResXResourceService">
      <summary>An abstraction layer that lets clients control the resx readers and writers used within Visual Studio.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.IResXResourceService.GetResXResourceReader(System.IO.TextReader,System.Boolean,System.String)">
      <summary>Returns a resx resource reader given a <paramref name="basepath" /> and name.</summary>
      <returns>
        <see cref="T:System.Resources.IResourceReader" />.</returns>
      <param name="textReader">The <see cref="T:System.IO.TextReader" /> that is wrapped by the returned <see cref="T:System.Resources.IResourceReader" />.</param>
      <param name="useResXDataNodes">If this value is true the reader returns one or more <see cref="T:System.Resources.ResXDataNode" />s instead of the object type the resource becomes at runtime in order to figure out which files the resx references</param>
      <param name="basePath">The path of the resource file.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.IResXResourceService.GetResXResourceReader(System.String,System.Boolean)">
      <summary>Returns a resx resource reader that matches a given a <paramref name="resXFullName" />.</summary>
      <returns>
        <see cref="T:System.Resources.IResourceReader" />.</returns>
      <param name="resXFullName">Creates a reader for the specified file.</param>
      <param name="useResXDataNodes">If this value is true the reader returns one or more <see cref="T:System.Resources.ResXDataNode" />s instead of the object type the resource becomes at runtime in order to figure out which files the resx references</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.IResXResourceService.GetResXResourceWriter(System.IO.TextWriter,System.String)">
      <summary>Returns a resx resource writer given a <paramref name="textWriter" /> and <paramref name="basepath" />.</summary>
      <returns>
        <see cref="T:System.Resources.IResourceWriter" />.</returns>
      <param name="textWriter">The <see cref="T:System.IO.TextWriter" /> that is wrapped by the returned <see cref="T:System.Resources.IResourceWriter" />.</param>
      <param name="basePath">The path of the resource file.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.IResXResourceService.GetResXResourceWriter(System.String)">
      <summary>Returns a resx resource writer given resXFullName.</summary>
      <returns>
        <see cref="T:System.Resources.IResourceWriter" />.</returns>
      <param name="resXFullName">Creates a reader for the specified file.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.LocalizableProperties">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Shell.LocalizableProperties" /> provides a class that supplies custom type information on localizable properties for an object.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.LocalizableProperties.#ctor">
      <summary>This default constructor creates a <see cref="T:Microsoft.VisualStudio.Shell.LocalizableProperties" /> object.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.LocalizableProperties.CreateDesignPropertyDescriptor(System.ComponentModel.PropertyDescriptor)">
      <summary>Returns a <see cref="T:Microsoft.VisualStudio.Shell.DesignPropertyDescriptor" /> wrapper on the given property descriptor.</summary>
      <returns>Returns a <see cref="T:Microsoft.VisualStudio.Shell.DesignPropertyDescriptor" />.</returns>
      <param name="p">Property descriptor.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.LocalizableProperties.GetAttributes">
      <summary>Gets a collection of attributes for this component.</summary>
      <returns>Returns a collection of attributes.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.LocalizableProperties.GetClassName">
      <summary>Returns the class name of this object.</summary>
      <returns>A string containing the class name.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.LocalizableProperties.GetComponentName">
      <summary>Returns the name of this object.</summary>
      <returns>A string containing the component name.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.LocalizableProperties.GetConverter">
      <summary>Returns a type converter for this object.</summary>
      <returns>Returns a <see cref="T:System.ComponentModel.TypeConverter" />.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.LocalizableProperties.GetDefaultEvent">
      <summary>Returns the default event for this object.</summary>
      <returns>Returns an <see cref="T:System.ComponentModel.EventDescriptor" />.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.LocalizableProperties.GetDefaultProperty">
      <summary>Gets the default property for a component.</summary>
      <returns>Returns a <see cref="T:System.ComponentModel.PropertyDescriptor" />.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.LocalizableProperties.GetEditor(System.Type)">
      <summary>Retrieves the editor for this object.</summary>
      <returns>Returns the editor object.</returns>
      <param name="editorBaseType">A <see cref="T:System.Type" /> that represents the base type of the editor you want to find. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.LocalizableProperties.GetEvents">
      <summary>Gets the collection of events for a specified component.</summary>
      <returns>An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events for this component.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.LocalizableProperties.GetEvents(System.Attribute[])">
      <summary>Gets the collection of events for a specified component using a specified array of attributes as a filter.</summary>
      <returns>An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events that match the specified attributes for this component.</returns>
      <param name="attributes">An array of type <see cref="T:System.Attribute" /> to use as a filter.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.LocalizableProperties.GetProperties">
      <summary>Gets the collection of properties.</summary>
      <returns>Returns a <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.LocalizableProperties.GetProperties(System.Attribute[])">
      <summary>Returns the properties for selected object using the attribute array as a filter.</summary>
      <returns>Returns a <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />.</returns>
      <param name="attributes">An array of type <see cref="T:System.Attribute" /> to use as a filter.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.LocalizableProperties.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary>Returns the brows-able object.</summary>
      <returns>Returns the browsable object.</returns>
      <param name="pd">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> object.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.LogicalView">
      <summary>This enumeration lists the supported logical views.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.LogicalView.Primary">
      <summary>The corresponding GUID value is 00000000-0000-0000-0000-000000000000.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.LogicalView.Any">
      <summary>The corresponding GUID value is FFFFFFFF-FFFF-FFFF-FFFF-FFFFFFFFFFFF.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.LogicalView.Debugging">
      <summary>The corresponding GUID value is 7651A700-06E5-11D1-8EBD-00A0C90F26EA.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.LogicalView.Code">
      <summary>The corresponding GUID value is 7651A701-06E5-11D1-8EBD-00A0C90F26EA.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.LogicalView.Designer">
      <summary>The corresponding GUID value is 7651A702-06E5-11D1-8EBD-00A0C90F26EA.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.LogicalView.Text">
      <summary>The corresponding GUID value is 7651A703-06E5-11D1-8EBD-00A0C90F26EA.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.LogicalView.UserChoose">
      <summary>The corresponding GUID value is 7651A704-06E5-11D1-8EBD-00A0C90F26EA.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.LogicalView.ProjectSpecific">
      <summary>The corresponding GUID value is 80A3471A-6B87-433E-A75A-9D461DE0645F.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.OleDataObject">
      <summary>Provides a managed class that implements the IOleDataObject interface.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.OleDataObject.#ctor">
      <summary>Initializes a new instance of <see cref="T:Microsoft.VisualStudio.Shell.OleDataObject" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.OleDataObject.#ctor(Microsoft.VisualStudio.OLE.Interop.IDataObject)">
      <summary>Initializes a new instance of <see cref="T:Microsoft.VisualStudio.Shell.OleDataObject" /> for the specified object implementing <see cref="T:Microsoft.VisualStudio.OLE.Interop.IDataObject" />.</summary>
      <param name="oleData">The underlying <see cref="T:Microsoft.VisualStudio.OLE.Interop.IDataObject" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.OleDataObject.#ctor(System.Runtime.InteropServices.ComTypes.IDataObject)">
      <summary>Initializes a new instance of <see cref="T:Microsoft.VisualStudio.Shell.OleDataObject" /> for the specified <see cref="T:System.Runtime.InteropServices.ComTypes.IDataObject" />.</summary>
      <param name="comData">The underlying <see cref="T:System.Runtime.InteropServices.ComTypes.IDataObject" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.OleDataObject.#ctor(System.Windows.Forms.IDataObject)">
      <summary>Initializes a new instance of <see cref="T:Microsoft.VisualStudio.Shell.OleDataObject" /> for the specified <see cref="T:System.Windows.Forms.IDataObject" />.</summary>
      <param name="winData">The underlying <see cref="T:System.Windows.Forms.IDataObject" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.OleDataObject.Microsoft#VisualStudio#OLE#Interop#IDataObject#DAdvise(Microsoft.VisualStudio.OLE.Interop.FORMATETC[],System.UInt32,Microsoft.VisualStudio.OLE.Interop.IAdviseSink,System.UInt32@)">
      <summary>Establishes a connection between the data object and a caller object implementing <see cref="T:Microsoft.VisualStudio.OLE.Interop.IAdviseSink" />.</summary>
      <returns>If the method succeeded, <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />, otherwise an error code.</returns>
      <param name="pFormatetc">Pointer to a FORMATETC structure that defines the format, target device, aspect, and medium that will be used for future notifications. For example, one sink may want to know only when the bitmap representation of the data in the data object changes. Another sink may be interested in only the metafile format of the same object. Each advise sink is notified when the data of interest changes. This data is passed back to the advise sink when notification occurs.</param>
      <param name="ADVF">DWORD that specifies a group of flags for controlling the advisory connection. Valid values are from the enumeration ADVF. However, only some of the possible ADVF values are relevant for this method.</param>
      <param name="pAdvSink">Pointer to the <see cref="T:Microsoft.VisualStudio.OLE.Interop.IAdviseSink" /> interface on the advise sink that will receive the change notification.</param>
      <param name="pdwConnection">Pointer to a DWORD token that identifies this connection. You can use this token later to delete the advisory connection (by passing it to <see cref="M:Microsoft.VisualStudio.Shell.OleDataObject.Microsoft.VisualStudio.OLE.Interop.IDataObject.DUnadvise(System.UInt32)" />. If this value is zero, the connection was not established.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.OleDataObject.Microsoft#VisualStudio#OLE#Interop#IDataObject#DUnadvise(System.UInt32)">
      <summary>Terminates an advise connection previously established through <see cref="M:Microsoft.VisualStudio.Shell.OleDataObject.Microsoft.VisualStudio.OLE.Interop.IDataObject.DAdvise(Microsoft.VisualStudio.OLE.Interop.FORMATETC[],System.UInt32,Microsoft.VisualStudio.OLE.Interop.IAdviseSink,System.UInt32@)" />.</summary>
      <param name="dwConnection">DWORD token that specifies the connection to remove. Use the value returned by <see cref="M:Microsoft.VisualStudio.Shell.OleDataObject.Microsoft.VisualStudio.OLE.Interop.IDataObject.DAdvise(Microsoft.VisualStudio.OLE.Interop.FORMATETC[],System.UInt32,Microsoft.VisualStudio.OLE.Interop.IAdviseSink,System.UInt32@)" /> when the connection was originally established.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.OleDataObject.Microsoft#VisualStudio#OLE#Interop#IDataObject#EnumDAdvise(Microsoft.VisualStudio.OLE.Interop.IEnumSTATDATA@)">
      <summary>Creates an enumerator to iterate through the current advisory connections.</summary>
      <returns>If the method succeeded, <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />, otherwise an error code.</returns>
      <param name="ppenumAdvise">Address of <see cref="T:Microsoft.VisualStudio.OLE.Interop.IEnumSTATDATA" />* pointer variable that receives the interface pointer to the new enumerator object. If the implementation sets *<paramref name="ppenumAdvise" /> to NULL, there are no connections to advise sinks at this time.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.OleDataObject.Microsoft#VisualStudio#OLE#Interop#IDataObject#EnumFormatEtc(System.UInt32,Microsoft.VisualStudio.OLE.Interop.IEnumFORMATETC@)">
      <summary>Creates an enumerator to iterate through the <see cref="T:Microsoft.VisualStudio.OLE.Interop.FORMATETC" /> structures supported by the data object.</summary>
      <returns>If the method succeeded, <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />, otherwise an error code.</returns>
      <param name="dwDirection">Direction of the data through a value from the enumeration <see cref="T:Microsoft.VisualStudio.OLE.Interop.DATADIR" />.</param>
      <param name="ppenumFormatEtc">Address of <see cref="T:Microsoft.VisualStudio.OLE.Interop.IEnumFORMATETC" />* pointer variable that receives the interface pointer to the new enumerator object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.OleDataObject.Microsoft#VisualStudio#OLE#Interop#IDataObject#GetCanonicalFormatEtc(Microsoft.VisualStudio.OLE.Interop.FORMATETC[],Microsoft.VisualStudio.OLE.Interop.FORMATETC[])">
      <summary>Retrieves a <see cref="T:Microsoft.VisualStudio.OLE.Interop.FORMATETC" /> structure that is logically equivalent to one that is more complex.</summary>
      <returns>If the method succeeded, <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />, otherwise an error code.</returns>
      <param name="pformatectIn">Pointer to the <see cref="T:Microsoft.VisualStudio.OLE.Interop.FORMATETC" /> structure that defines the format, medium, and target device that the caller would like to use to retrieve data in a subsequent call such as <see cref="M:Microsoft.VisualStudio.Shell.OleDataObject.Microsoft.VisualStudio.OLE.Interop.IDataObject.GetData(Microsoft.VisualStudio.OLE.Interop.FORMATETC[],Microsoft.VisualStudio.OLE.Interop.STGMEDIUM[])" />. The TYMED member is not significant in this case and should be ignored.</param>
      <param name="pformatetcOut">Pointer to a <see cref="T:Microsoft.VisualStudio.OLE.Interop.FORMATETC" /> structure that contains the most general information possible for a specific rendering, making it canonically equivalent to <paramref name="pFormatetcIn" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.OleDataObject.Microsoft#VisualStudio#OLE#Interop#IDataObject#GetData(Microsoft.VisualStudio.OLE.Interop.FORMATETC[],Microsoft.VisualStudio.OLE.Interop.STGMEDIUM[])">
      <summary>Transfers data from the data object to the client. The <paramref name="pformatetcIn" /> parameter must specify a storage medium type of <see cref="F:Microsoft.VisualStudio.OLE.Interop.TYMED.TYMED_MFPICT" />.</summary>
      <param name="pformatetcIn">Pointer to the <see cref="T:Microsoft.VisualStudio.OLE.Interop.FORMATETC" /> structure that defines the format, medium, and target device to use when passing the data.</param>
      <param name="pRemoteMedium">Pointer to the STGMEDIUM structure that indicates the storage medium containing the returned data through its tymed member, and the responsibility for releasing the medium through the value of its punkOuter member.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.OleDataObject.Microsoft#VisualStudio#OLE#Interop#IDataObject#GetDataHere(Microsoft.VisualStudio.OLE.Interop.FORMATETC[],Microsoft.VisualStudio.OLE.Interop.STGMEDIUM[])">
      <summary>Similar to <see cref="M:Microsoft.VisualStudio.Shell.OleDataObject.Microsoft.VisualStudio.OLE.Interop.IDataObject.GetData(Microsoft.VisualStudio.OLE.Interop.FORMATETC[],Microsoft.VisualStudio.OLE.Interop.STGMEDIUM[])" />, except the client must allocate the <see cref="T:Microsoft.VisualStudio.OLE.Interop.STGMEDIUM" /> structure.</summary>
      <param name="pFormatetc">Pointer to the <see cref="T:Microsoft.VisualStudio.OLE.Interop.FORMATETC" /> structure that defines the format, medium, and target device to use when passing the data. Only one medium can be specified in the tymed member of the FORMATETC structure. These values are valid:TYMED_STORAGETYMED_STREAMTYMED_HGLOBALTYMED_FILE</param>
      <param name="pRemoteMedium">Pointer to the <see cref="T:Microsoft.VisualStudio.OLE.Interop.STGMEDIUM" /> structure that defines the storage medium containing the data being transferred.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.OleDataObject.Microsoft#VisualStudio#OLE#Interop#IDataObject#QueryGetData(Microsoft.VisualStudio.OLE.Interop.FORMATETC[])">
      <summary>Determines whether the data object supports a particular <see cref="T:Microsoft.VisualStudio.OLE.Interop.FORMATETC" /> structure for transferring data.</summary>
      <returns>If the method succeeded, <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />, otherwise an error code.</returns>
      <param name="pFormatetc">Pointer to the <see cref="T:Microsoft.VisualStudio.OLE.Interop.FORMATETC" /> structure that defines the format, medium, and target device to use when passing the data. Only one medium can be specified in the tymed member of the FORMATETC structure. These values are valid:TYMED_STORAGETYMED_STREAMTYMED_HGLOBALTYMED_FILE</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.OleDataObject.Microsoft#VisualStudio#OLE#Interop#IDataObject#SetData(Microsoft.VisualStudio.OLE.Interop.FORMATETC[],Microsoft.VisualStudio.OLE.Interop.STGMEDIUM[],System.Int32)">
      <summary>Transfers data from the client to the data object.</summary>
      <param name="pFormatetc">Pointer to the <see cref="T:Microsoft.VisualStudio.OLE.Interop.FORMATETC" /> structure that defines the format, medium, and target device to use when passing the data. Only one medium can be specified in the <paramref name="tymed" /> member of the FORMATETC structure. These values are valid:TYMED_STORAGETYMED_STREAMTYMED_HGLOBALTYMED_FILE</param>
      <param name="pmedium">Pointer to the <see cref="T:Microsoft.VisualStudio.OLE.Interop.STGMEDIUM" /> structure that defines the storage medium containing the data being transferred. The medium must be allocated by the caller and filled in by <see cref="M:Microsoft.VisualStudio.Shell.OleDataObject.Microsoft.VisualStudio.OLE.Interop.IDataObject.GetDataHere(Microsoft.VisualStudio.OLE.Interop.FORMATETC[],Microsoft.VisualStudio.OLE.Interop.STGMEDIUM[])" />. The caller must also free the medium. The implementation of this method must always supply a value of NULL for the punkForRelease member of the STGMEDIUM structure to which this parameter points.</param>
      <param name="fRelease">If TRUE, the data object called, which implements <see cref="M:Microsoft.VisualStudio.Shell.OleDataObject.Microsoft.VisualStudio.OLE.Interop.IDataObject.SetData(Microsoft.VisualStudio.OLE.Interop.FORMATETC[],Microsoft.VisualStudio.OLE.Interop.STGMEDIUM[],System.Int32)" />, owns the storage medium after the call returns.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.ProvideAssemblyFilterAttribute">
      <summary>Describes the assemblies that the <see cref="T:Microsoft.VisualStudio.Shell.IConfigureToolboxItem" /> class supports.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideAssemblyFilterAttribute.#ctor(System.String)">
      <summary>Creates a new instance of a <see cref="T:Microsoft.VisualStudio.Shell.ProvideAssemblyFilterAttribute" /> object with the specified assembly name.</summary>
      <param name="assemblyFilter">[in] The full name of an assembly.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideAssemblyFilterAttribute.AssemblyFilter">
      <summary>Gets the full assembly specification of the filter.</summary>
      <returns>A string containing the full assembly specification of the filter.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.ProvideEditorExtensionAttribute">
      <summary>Associates a file extension to a given editor factory when applied to a class that inherits from <see cref="T:Microsoft.VisualStudio.Shell.Package" /> or implements the interface <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsPackage" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideEditorExtensionAttribute.#ctor(System.Object,System.String,System.Int32)">
      <summary>Initializes an instance of ProvideEditorExtensionAttribute.</summary>
      <param name="factoryType">One of following types:The type of the editor factory expressed as a string.The GUID of the editor factory.The type of the editor factory.</param>
      <param name="extension">The file extension to associate with the editor factory. This extension should include the prefix “.”.</param>
      <param name="priority">The priority of this editor factory. The editors with the higher priority number is given a chance to read a file first. Upon failure, the next editor in priority is used.  </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideEditorExtensionAttribute.DefaultName">
      <summary>Gets or sets the default name of the editor.</summary>
      <returns>The default name of the editor.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideEditorExtensionAttribute.EditorFactoryNotify">
      <summary>Gets or sets the value that determines whether or not the EditorFactoryNotify registry key should be created.</summary>
      <returns>true if the EditorFactoryNotify registry key should be created, otherwise false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideEditorExtensionAttribute.Extension">
      <summary>Gets the file extension associated with this editor.</summary>
      <returns>The file extension for this editor.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideEditorExtensionAttribute.Factory">
      <summary>Returns the GUID of the associated factory.</summary>
      <returns>The GUID of the editor factory.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideEditorExtensionAttribute.NameResourceID">
      <summary>Gets and sets the integer NameResourceID.</summary>
      <returns>Name resource ID.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideEditorExtensionAttribute.Priority">
      <summary>Gets the editor's priority as set in the constructor.</summary>
      <returns>The priority for this editor for its file extension.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideEditorExtensionAttribute.ProjectGuid">
      <summary>Sets and gets the GUID of the project associated with this editor.</summary>
      <returns>The project GUID.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideEditorExtensionAttribute.Register(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
      <summary>Called to register this attribute with the given context. The context contains the location where the registration information should be placed. It also contains the type being registered and path information.</summary>
      <param name="context">A registration context provided by an external registration tool. The context can be used to create registry keys, log registration activity, and obtain information about the component being registered.</param>
      <exception cref="T:System.ArgumentNullException">This method throws an <see cref="T:System.ArgumentNullException" /> if the <paramref name="context" /> argument is null.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideEditorExtensionAttribute.TemplateDir">
      <summary>Gets or sets the template directory to be used by the editor factory to retrieve its source files.</summary>
      <returns>The template directory.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideEditorExtensionAttribute.Unregister(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
      <summary>Removes the registration information about a VSPackage when called by an external registration tool such as RegPkg.exe. For more information, see Registering VSPackages.</summary>
      <param name="context">A registration context provided by an external registration tool. The context can be used to create registry keys, log registration activity, and obtain information about the component being registered.</param>
      <exception cref="T:System.ArgumentNullException">This method throws an <see cref="T:System.ArgumentNullException" /> if the <paramref name="context" /> argument is null.</exception>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.ProvideEditorLogicalViewAttribute">
      <summary>Adds a logical view to the editor created by an editor factory.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideEditorLogicalViewAttribute.#ctor(System.Object,System.String)">
      <summary>Initializes a new instance of <see cref="T:Microsoft.VisualStudio.Shell.ProvideEditorLogicalViewAttribute" /> for the specified factory type and logical view.</summary>
      <param name="factoryType">The type of factory.  This may be a type, a GUID or a string representation of a GUID</param>
      <param name="logicalViewGuid">The GUID of the logical view to register.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideEditorLogicalViewAttribute.FactoryType">
      <summary>Gets the GUID of the factory type.</summary>
      <returns>The GUID of the factory type.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideEditorLogicalViewAttribute.IsTrusted">
      <summary>Gets or sets the trust flag for this logical view. </summary>
      <returns>true if the logical view is trusted, otherwise false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideEditorLogicalViewAttribute.LogicalView">
      <summary>Gets the GUID of the logical view.</summary>
      <returns>The GUID of the logical view.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideEditorLogicalViewAttribute.Register(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
      <summary>Registers this attribute with the given context. </summary>
      <param name="context">
        <see cref="T:Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext" />. The context contains the location where the registration information should be placed. It also contains other information such as the type being registered and path information.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideEditorLogicalViewAttribute.Unregister(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
      <summary>Unregisters the logical view.</summary>
      <param name="context">
        <see cref="T:Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext" />. The context contains the location where the registration information should be placed. It also contains other information such as the type being registered and path information.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.ProvideExtenderAttribute">
      <summary>Provides an extender for Visual Studio. This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideExtenderAttribute.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of <see cref="T:Microsoft.VisualStudio.Shell.ProvideExtenderAttribute" /> for the specified extender.</summary>
      <param name="extendeeCatId">The CATID of the element to be extended.</param>
      <param name="extenderGuid">The GUID of the extender.</param>
      <param name="extenderName">The name of the extender.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideExtenderAttribute.ExtendeeCatId">
      <summary>Gets the GUID category ID of the element to be extended.</summary>
      <returns>The GUID category ID of the element to be extended.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideExtenderAttribute.Extender">
      <summary>Gets the GUID of the extender.</summary>
      <returns>The GUID of the extender.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideExtenderAttribute.ExtenderName">
      <summary>Gets the name of the extender.</summary>
      <returns>The name of the extender.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideExtenderAttribute.Register(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
      <summary>Provides registration information about a VSPackage when called by an external registration tool such as RegPkg.exe.</summary>
      <param name="context">A <see cref="T:Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext" /> provided by an external registration tool. The context can be used to create registry keys, log registration activity, and obtain information about the component being registered.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideExtenderAttribute.Unregister(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
      <summary>Removes registration information about a VSPackage when called by an external registration tool such as RegPkg.exe.</summary>
      <param name="context">A <see cref="T:Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext" /> provided by an external registration tool. The context can be used to remove registry keys, log registration activity, and obtain information about the component being registered.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.ProvideLanguageEditorToolsOptionCategoryAttribute">
      <summary>This attribute is used to declare a Tools Option category for a language.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideLanguageEditorToolsOptionCategoryAttribute.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of <see cref="T:Microsoft.VisualStudio.Shell.ProvideLanguageEditorToolsOptionCategoryAttribute" /> for the language and option category.</summary>
      <param name="languageName">The name of the language.</param>
      <param name="categoryName">The name of the category.</param>
      <param name="categoryResourceId">The resource ID of the category.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideLanguageEditorToolsOptionCategoryAttribute.Register(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
      <summary>Registers the Tools Option page.</summary>
      <param name="context">A <see cref="T:Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext" />  that describes the location of the key and its values in the registry</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideLanguageEditorToolsOptionCategoryAttribute.Unregister(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
      <summary>Unregisters the Tools Option page.</summary>
      <param name="context">A <see cref="T:Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext" /> that describes the location of the key and its values in the registry.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.ProvideObjectAttribute">
      <summary>Informs Visual Studio that the VSPackage provides an object that can be created from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.ILocalRegistry" />interface. This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideObjectAttribute.#ctor(System.Type)">
      <summary>This constructor creates a new <see cref="T:Microsoft.VisualStudio.Shell.ProvideObjectAttribute" /> object with the given object type.</summary>
      <param name="objectType">The type of object that the VSPackage can create. This type can have any scoping (public, internal, etc.) but must have a public constructor that takes no arguments.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideObjectAttribute.ObjectType">
      <summary>The ObjectType property returns the object type set in the constructor.</summary>
      <returns>Returns the object type set in the constructor.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideObjectAttribute.Register(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
      <summary>Provides registration information about a VSPackage when called by an external registration tool such as regpkg.exe. For more information, see Registering VSPackages.</summary>
      <param name="context">A registration context provided by an external registration tool. The context can be used to create registry keys, log registration activity, and obtain information about the component being registered.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideObjectAttribute.RegisterUsing">
      <summary>Gets or sets the registration method.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Shell.RegistrationMethod" />.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideObjectAttribute.Unregister(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
      <summary>Removes registration information about a VSPackage when called by an external registration tool such as regpkg.exe. For more information, see Registering VSPackages.</summary>
      <param name="context">A registration context provided by an external registration tool. The context can be used to remove registry keys, log registration activity, and obtain information about the component being registered.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.ProvideOptionDialogPageAttribute">
      <summary>The base class for all the attributes that are used to register an option page.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideOptionDialogPageAttribute.#ctor(System.Type,System.String)">
      <summary>Initializes a new instance of <see cref="T:Microsoft.VisualStudio.Shell.ProvideOptionDialogPageAttribute" /> for the specified page.</summary>
      <param name="pageType">The type of the page.</param>
      <param name="pageNameResourceId">The name resource ID of the page.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideOptionDialogPageAttribute.PageNameResourceId">
      <summary>Gets the name resource ID of the page.</summary>
      <returns>The name resource ID of the page.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideOptionDialogPageAttribute.PageType">
      <summary>Gets the type of the page.</summary>
      <returns>The type of the page.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.ProvideOptionPageAttribute">
      <summary>Apply this attribute to independent objects to allow users to configure VSPackages through a custom Tools Options page.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideOptionPageAttribute.#ctor(System.Type,System.String,System.String,System.Int16,System.Int16,System.Boolean)">
      <summary>Initializes a new instance of <see cref="T:Microsoft.VisualStudio.Shell.ProvideOptionPageAttribute" /> indicating that a particular class implements user configuration support for the VSPackage based on a Tools Options page. </summary>
      <param name="pageType">The <see cref="T:System.Type" /> of the class implementing the Tools Options page.</param>
      <param name="categoryName">The  canonical nonlocalized name of the Tools Options page category.</param>
      <param name="pageName">The canonical nonlocalized name of the Tools Options page subcategory.</param>
      <param name="categoryResourceID">The localized resource ID of the Tools Options page category. </param>
      <param name="pageNameResourceID">The localized resource ID of the Tools Options page subcategory.</param>
      <param name="supportsAutomation">If true, the Tools Options page can be accessed through the Visual Studio automation mechanism.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideOptionPageAttribute.CategoryName">
      <summary>Gets the canonical nonlocalized name of the Tools Options page's category.</summary>
      <returns>The canonical nonlocalized name of the Tools Options page category.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideOptionPageAttribute.CategoryResourceID">
      <summary>Gets the category resource ID for a Tools Options page.</summary>
      <returns>The category resource ID for the Tools Options page.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideOptionPageAttribute.NoShowAllView">
      <summary>Gets or sets whether aggregated Tools Options pages are shown.</summary>
      <returns>true if the Tools Options page is to be displayed in the default (complex) view of Tools Options pages.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideOptionPageAttribute.PageName">
      <summary>Gets the canonical nonlocalized name of the Tools Options page.</summary>
      <returns>The canonical nonlocalized name of the Tools Options page.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideOptionPageAttribute.Register(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
      <summary>Registers the Tools Options page.</summary>
      <param name="context">A <see cref="T:Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext" /> describing the location in the registry and values to be registered.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideOptionPageAttribute.SupportsAutomation">
      <summary>Gets whether a Tools Options page implementation supports automation.</summary>
      <returns>true if a Tools Options page supports the Visual Studio automation model and can be accessed through the <see cref="N:EnvDTE" /> mechanism.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideOptionPageAttribute.SupportsProfiles">
      <summary>Gets or sets whether a Tools Options page implementation uses the Visual Studio settings mechanism to persist its state.</summary>
      <returns>true if the Tools Options page implementation supports the use of Visual Studio settings to persist its state.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideOptionPageAttribute.TypeId">
      <summary>Gets the current instance of <see cref="T:Microsoft.VisualStudio.Shell.ProvideOptionPageAttribute" />.</summary>
      <returns>The current instance of <see cref="T:Microsoft.VisualStudio.Shell.ProvideOptionPageAttribute" />.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideOptionPageAttribute.Unregister(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
      <summary>Removes the Tools Options page key from the registry.</summary>
      <param name="context">A <see cref="T:Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext" /> describing the location in the registry and values to be removed.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.ProvideProjectItemAttribute">
      <summary>This attribute registers items to be included in the Add New Item dialog for the specified project type. It is placed on a VSPackage.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideProjectItemAttribute.#ctor(System.Object,System.String,System.String,System.Int32)">
      <summary>Initializes a new instance of <see cref="T:Microsoft.VisualStudio.Shell.ProvideProjectItemAttribute" /> for the item.</summary>
      <param name="projectFactoryType">The type of project factory. This can be a <see cref="T:System.Type" /> , a GUID, or the string form of the GUID.</param>
      <param name="itemCategoryName">The display name of the type of item.</param>
      <param name="templatesDir">The directory in which the templates for this project type can be found.</param>
      <param name="priority">The priority of this type (for sorting purposes).</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideProjectItemAttribute.ItemType">
      <summary>Gets the name of this type of item.</summary>
      <returns>The name of this type of item.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideProjectItemAttribute.Priority">
      <summary>Gets the sort priority of this type.</summary>
      <returns>The sort priority of this type.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideProjectItemAttribute.ProjectFactoryType">
      <summary>Gets the GUID of the type of project factory.</summary>
      <returns>The GUID of the type of project factory.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideProjectItemAttribute.Register(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
      <summary>Registers this item type.</summary>
      <param name="context">A <see cref="T:Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext" />  that describes the location and values of the registry key.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideProjectItemAttribute.TemplateDir">
      <summary>Gets the directory in which the templates for this project type are found.</summary>
      <returns>The directory in which the templates for this project type are found.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideProjectItemAttribute.Unregister(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
      <summary>Removes the registry key for this item type.</summary>
      <param name="context">A <see cref="T:Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext" />  that describes the location and values of the registry key.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.ProvideToolboxFormatAttribute">
      <summary>Apply this attribute to classes implementing VSPackages to declare that the VSPackage provides Toolbox items with the specified clipboard format and to enable drag-and-drop support in the Visual Studio Toolbox.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideToolboxFormatAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of <see cref="T:Microsoft.VisualStudio.Shell.ProvideToolboxFormatAttribute" /> for the specified format.</summary>
      <param name="format">The name of a supported format.</param>
      <exception cref="T:System.ArgumentNullException">Thrown if the <paramref name="format" /> argument is null.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideToolboxFormatAttribute.Format">
      <summary>Gets the name of a supported clipboard format.</summary>
      <returns>The name of the clipboard format.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.ProvideToolboxItemConfigurationAttribute">
      <summary>Registers a VSPackage as supplying a particular implementation of <see cref="T:Microsoft.VisualStudio.Shell.IConfigureToolboxItem" />. Used in conjunction with <see cref="T:Microsoft.VisualStudio.Shell.ProvideAssemblyFilterAttribute" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideToolboxItemConfigurationAttribute.#ctor(System.Type)">
      <summary>Initializes a new instance of <see cref="T:Microsoft.VisualStudio.Shell.ProvideToolboxItemConfigurationAttribute" />. </summary>
      <param name="objectType">[in] <see cref="T:System.Type" />.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideToolboxItemConfigurationAttribute.ObjectType">
      <summary>Gets the type of the toolbox item configuration.</summary>
      <returns>The type of the toolbox item configuration.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideToolboxItemConfigurationAttribute.Register(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
      <summary>Registers the toolbox item configuration.</summary>
      <param name="context">A <see cref="T:Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext" /> describing the location and values of the registry key.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideToolboxItemConfigurationAttribute.Unregister(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
      <summary>Removes the registry key.</summary>
      <param name="context">A <see cref="T:Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext" /> describing the location and values of the registry key.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.ProvideToolboxItemsAttribute">
      <summary>Apply this attribute to classes implementing VSPackages to declare if they offer a set of items to the Visual Studio Toolbox.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideToolboxItemsAttribute.#ctor(System.Int32)">
      <summary>Creates a new instance of <see cref="T:Microsoft.VisualStudio.Shell.ProvideToolboxItemsAttribute" /> which indicates if a class implementing a VSPackage is providing Toolbox items.</summary>
      <param name="version">The version of the Toolbox items a VSPackage supplies.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideToolboxItemsAttribute.#ctor(System.Int32,System.Boolean)">
      <summary>Initializes a new instance of <see cref="T:Microsoft.VisualStudio.Shell.ProvideToolboxItemsAttribute" /> for the specified version.</summary>
      <param name="version">The version of the items.</param>
      <param name="needsCallbackAfterReset">If true, then set the registry key that forces a <see cref="E:Microsoft.VisualStudio.Shell.Package.ToolboxInitialized" /> event after each toolbox reset.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideToolboxItemsAttribute.NeedsCallBackAfterReset">
      <summary>Gets or sets whether the <see cref="E:Microsoft.VisualStudio.Shell.Package.ToolboxInitialized" /> event should be raised after each toolbox reset.</summary>
      <returns>true if the <see cref="E:Microsoft.VisualStudio.Shell.Package.ToolboxInitialized" /> event should be raised after each toolbox reset, otherwise false.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideToolboxItemsAttribute.Register(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
      <summary>Registers a VSPackage as a Toolbox item provider for specified formats when called by an external registration tool such as regpkg.exe. For more information, see Registering VSPackages.</summary>
      <param name="context">A registration context provided by an external registration tool. The context is used to create registry keys, log registration activity, and obtain information about the component being registered.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideToolboxItemsAttribute.Unregister(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
      <summary>Reverses the changes that the <see cref="M:Microsoft.VisualStudio.Shell.ProvideToolboxItemsAttribute.Register(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)" /> method had applied to the registry.</summary>
      <param name="context">A registration context provided by an external registration tool. The context is used to create registry keys, log registration activity, and obtain information about the component being registered.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideToolboxItemsAttribute.Version">
      <summary>Property returning the version of Toolbox items a VSPackage provides.</summary>
      <returns>An integer value containing the version number of the Toolbox items a VSPackage supports.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.ProvideToolWindowAttribute">
      <summary>Notifies Visual Studio that a VSPackage owns a tool window.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideToolWindowAttribute.#ctor(System.Type)">
      <summary>Initializes a new instance of <see cref="T:Microsoft.VisualStudio.Shell.ProvideToolWindowAttribute" />.</summary>
      <param name="toolType">The type of the tool window.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideToolWindowAttribute.Height">
      <summary>Gets or sets the default height of the tool window.</summary>
      <returns>The height of the tool window.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideToolWindowAttribute.MultiInstances">
      <summary>Determines whether multiple instances of the tool window are allowed.</summary>
      <returns>true if multiple instances are allowed, otherwise false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideToolWindowAttribute.Orientation">
      <summary>Gets or sets the default orientation for the tool window relative to the window specified by the Window property.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Shell.ToolWindowOrientation" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideToolWindowAttribute.PositionX">
      <summary>Gets or sets the default horizontal value of the top left corner of the tool window.</summary>
      <returns>The horizontal value of the top left corner of the tool window.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideToolWindowAttribute.PositionY">
      <summary>Gets or sets the vertical value of the top left corner of the tool window.</summary>
      <returns>The vertical value of the top left corner of the tool window.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideToolWindowAttribute.Register(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
      <summary>Registers the tool window.</summary>
      <param name="context">A <see cref="T:Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext" /> describing the location and values of the registry key.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideToolWindowAttribute.Style">
      <summary>Gets or sets the default docking style for the tool window.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Shell.VsDockStyle" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideToolWindowAttribute.ToolType">
      <summary>Gets or sets the type of the tool window.</summary>
      <returns>The type of the tool window.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideToolWindowAttribute.Transient">
      <summary>Gets or sets whether the tool window should not be reopened when the IDE restarts.</summary>
      <returns>false if the tool window should be displayed when the IDE restarts if it was displayed when the IDE closed, otherwise true.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideToolWindowAttribute.Unregister(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
      <summary>Removes the registry key for the tool window.</summary>
      <param name="context">A <see cref="T:Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext" /> describing the location and values of the registry key.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideToolWindowAttribute.Width">
      <summary>Gets or sets the default width of the tool window.</summary>
      <returns>The default width of the tool window.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideToolWindowAttribute.Window">
      <summary>Gets or sets the GUID of the default window on which the tool window should be docked.</summary>
      <returns>The GUID of the default window on which the tool window should be docked.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.ProvideToolWindowVisibilityAttribute">
      <summary>Maps a tool window to one or more UI contexts, so that the window is displayed when the user switches to one of those contexts and is hidden when the user switches away from one of the contexts.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideToolWindowVisibilityAttribute.#ctor(System.Object,System.String)">
      <summary>Initializes a new instance of <see cref="T:Microsoft.VisualStudio.Shell.ProvideToolWindowVisibilityAttribute" /> for the specified type of the tool window and a GUID to associate with its visibility.</summary>
      <param name="toolWindow">The types of the tool window. This can be the type, the GUID, or the string value of the GUID.</param>
      <param name="commandUIGuid">The GUID of the tool window to which the automatic visibility behavior should be applied.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideToolWindowVisibilityAttribute.CommandUIGuid">
      <summary>Gets the GUID of a command associated with showing or hiding the tool window.</summary>
      <returns>The GUID of a command associated with showing or hiding the tool window.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.ProvideToolWindowVisibilityAttribute.Name">
      <summary>Gets or sets the name of the window.</summary>
      <returns>The name of the tool window.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideToolWindowVisibilityAttribute.Register(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
      <summary>Registers the tool window visibility.</summary>
      <param name="context">A <see cref="T:Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext" /> that describes the location and values of the registry key.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ProvideToolWindowVisibilityAttribute.Unregister(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
      <summary>Removes the registry key.</summary>
      <param name="context">A <see cref="T:Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext" /> that describes the location and values of the registry key.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.RegisterExtenderAttribute">
      <summary>Registers an extender with Visual Studio.  This class cannot be inherited. This class is obsolete. Please use ProvideExtenderAttribute instead.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.RegisterExtenderAttribute.#ctor(System.String,System.String,System.String)">
      <summary>This constructor creates a new <see cref="T:Microsoft.VisualStudio.Shell.RegisterExtenderAttribute" /> object.</summary>
      <param name="extendeeCatId">The CATID of the extendee.</param>
      <param name="extenderGuid">The GUID of the extender.</param>
      <param name="extenderName">The name of the extender.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.RegisterExtenderAttribute.ExtendeeCatId">
      <summary>Gets the CATID of the object to be extended.</summary>
      <returns>The CATID of the object to be extended.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.RegisterExtenderAttribute.Extender">
      <summary>Gets the GUID of the extender.</summary>
      <returns>The GUID of the extender.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.RegisterExtenderAttribute.ExtenderName">
      <summary>Gets the name of the extender.</summary>
      <returns>The name of the extender.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.RegisterExtenderAttribute.Register(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
      <summary>Provides registration information about a VSPackage when called by an external registration tool such as RegPkg.exe.</summary>
      <param name="context">A registration context provided by an external registration tool. The context can be used to create registry keys, log registration activity, and obtain information about the component being registered.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.RegisterExtenderAttribute.Unregister(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
      <summary>Removes registration information about a VSPackage when called by an external registration tool such as RegPkg.exe.</summary>
      <param name="context">A registration context provided by an external registration tool. The context can be used to remove registry keys, log registration activity, and obtain information about the component being registered.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.RegistrationAttribute">
      <summary>An abstract class for VSPackage registration. The RegistrationAttribute class allows new registration information to be added without changing the registration tools.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.RegistrationAttribute.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.RegistrationAttribute.Register(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
      <summary>Registers this VSPackage with a given context, when called by an external registration tool such as regpkg.exe. For more information, see Registering VSPackages.</summary>
      <param name="context">A registration context provided by an external registration tool. The context can be used to create registry keys, log registration activity, and obtain information about the component being registered.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.RegistrationAttribute.TypeId">
      <summary>Gets the current instance of this attribute.</summary>
      <returns>The current instance of this attribute.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.RegistrationAttribute.Unregister(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
      <summary>Removes registration information about a VSPackage when called by an external registration tool such as regpkg.exe. For more information, see Registering VSPackages. Any class deriving from the RegistrationAttribute class must implement this method.</summary>
      <param name="context">A registration context provided by an external registration tool. The context can be used to remove registry keys, log registration activity, and obtain information about the component being registered.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.RegistrationAttribute.Key">
      <summary>Provides an abstract class that represents a registration key.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.RegistrationAttribute.Key.#ctor">
      <summary>Creates a new <see cref="T:Microsoft.VisualStudio.Shell.RegistrationAttribute.Key" /> object.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.RegistrationAttribute.Key.Close">
      <summary>Closes a key after writing is complete.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.RegistrationAttribute.Key.CreateSubkey(System.String)">
      <summary>Creates a new registration key. The new key is a subkey of the current Key.</summary>
      <returns>The newly created Key.</returns>
      <param name="name">The name of the new key. This name is relative to the current key. An empty or null string sets the default value for the key.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.RegistrationAttribute.Key.SetValue(System.String,System.Object)">
      <summary>Adds a value to the current registration Key.</summary>
      <param name="valueName">The name of the value to set. If <paramref name="valueName" /> is null or an empty string, SetValue sets the default value for the current Key.</param>
      <param name="value">An object to store in the value. The object cannot be null. If the object is a numeric type that can be converted to an integer, it is stored as a DWORD registry encoding. Otherwise it is stored as a string.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.RegistrationAttribute.Key.System#IDisposable#Dispose">
      <summary>Disposes the object and its resources.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.RunningDocumentTable">
      <summary>Provides access to the Running Document Table (RDT) that tracks all currently opened documents in Visual Studio.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.RunningDocumentTable.#ctor(System.IServiceProvider)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.Package.RunningDocumentTable" /> class.</summary>
      <param name="site">[in] An <see cref="T:Microsoft.VisualStudio.OLE.Interop.IServiceProvider" /> object used to access services. This cannot be a null value.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.RunningDocumentTable.Advise(Microsoft.VisualStudio.Shell.Interop.IVsRunningDocTableEvents)">
      <summary>Enables the client to receive events about changes to the Running Document Table (RDT).</summary>
      <returns>A cookie associated with the given <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsRunningDocTableEvents" /> object. If an error occurs, this method throws an exception.</returns>
      <param name="sink">[in] An <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsRunningDocTableEvents" /> object representing an entity to be called for various running document table events.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.RunningDocumentTable.FindDocument(System.String)">
      <summary>Gets an object from the Running Document Table (RDT) that represents the document specified by the given path.</summary>
      <returns>An object that can be cast to an appropriate interface to access the document (see Remarks for details), or null if the document is not registered with Visual Studio.</returns>
      <param name="moniker">[in] Path to the desired document.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.RunningDocumentTable.FindDocument(System.String,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy@,System.UInt32@,System.UInt32@)">
      <summary>Gets an object, cookie, and owning project type from the Running Document Table (RDT) for the document specified by the given path.</summary>
      <returns>An object that can be cast to an appropriate interface to access the document (see Remarks for details). If a null value is returned, the document is not registered with Visual Studio.</returns>
      <param name="moniker">[in] Path to the desired document.</param>
      <param name="hierarchy">[out] Returns an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> object that represents the project that owns the requested document.</param>
      <param name="itemid">[out] Returns the ID of the document in the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> object. </param>
      <param name="docCookie">[out] Returns the unique value that represents the requested document in the RDT.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.RunningDocumentTable.FindDocument(System.String,System.UInt32@)">
      <summary>Gets a cookie from the Running Document Table (RDT) that represents the document specified by the given path.</summary>
      <returns>An object that can be cast to an appropriate interface to access the document (see Remarks for details), or null if the document is not registered with Visual Studio.</returns>
      <param name="moniker">[in] Path to the desired document.</param>
      <param name="docCookie">[out] Returns the unique value that represents the requested document in the RDT.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.RunningDocumentTable.GetDocumentInfo(System.UInt32)">
      <summary>Gets information about a document registered in the Running Document Table, given the identifier of the document. </summary>
      <returns>The <see cref="T:Microsoft.VisualStudio.Shell.RunningDocumentInfo" /> for the specified document.</returns>
      <param name="docCookie">The identifier of the document data object in the Running Document Table.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.RunningDocumentTable.GetEnumerator">
      <summary>Gets an enumerator of the documents in the Running Document Table.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> of type <see cref="T:Microsoft.VisualStudio.Shell.RunningDocumentInfo" />.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.RunningDocumentTable.GetHierarchyItem(System.String)">
      <summary>Gets the project that owns the specified document.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" />, otherwise null.</returns>
      <param name="moniker">[in] Path to the desired document.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.RunningDocumentTable.GetRunningDocumentContents(System.String)">
      <summary>Uses the Running Document Table (RDT) to obtain the contents of a document given the path to the document.</summary>
      <returns>The contents of the document in a string format, or null if the document is not registered with the RDT.</returns>
      <param name="path">[in] Path to the desired document.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.RunningDocumentTable.GetRunningDocumentContents(System.UInt32)">
      <summary>Uses the Running Document Table (RDT) to obtain the contents of a document given the path to the document.</summary>
      <returns>The contents of the document in a string format, or null if the document is not registered with the RDT.</returns>
      <param name="docCookie">[in] The unique value that represents the requested document in the RDT.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.RunningDocumentTable.LockDocument(Microsoft.VisualStudio.Shell.Interop._VSRDTFLAGS,System.UInt32)">
      <summary>Gets a read or edit lock on the specified document.</summary>
      <param name="lockType">Lock values from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSRDTFLAGS" /> enumeration.</param>
      <param name="cookie">The identifier of the document to lock.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.RunningDocumentTable.RegisterAndLockDocument(Microsoft.VisualStudio.Shell.Interop._VSRDTFLAGS,System.String,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.IntPtr)">
      <summary>Creates an entry in the running document table when a document is created or opened. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="lockType">Lock values from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSRDTFLAGS" /> enumeration. </param>
      <param name="mkDocument">The absolute path of the document.</param>
      <param name="hierarchy">The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface of the hierarchy element that owns the document.</param>
      <param name="itemid">The item ID of the node.</param>
      <param name="docData">[out] Returns a pointer to the IUnknown interface of the document data object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.RunningDocumentTable.RenameDocument(System.String,System.String,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32)">
      <summary>Renames a document and optionally gives ownership of the document to the specified project.</summary>
      <param name="oldName">[in] The full path representing the original name.</param>
      <param name="newName">[in] The full path representing the new name.</param>
      <param name="pIVsHierarchy">[in] An <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> object representing the project that is to take ownership of the document. Pass the value (IVsHierarchy)-1 to indicate no change in ownership is to take place</param>
      <param name="itemId">[in] This value can be <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_NIL" />, <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_ROOT" />, or <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_SELECTION" />. Pass <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_NIL" /> to indicate no change in ownership is to take place.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.RunningDocumentTable.SaveFileIfDirty(System.String)">
      <summary>Saves the specified file if it has changed since the last save.</summary>
      <returns>The path to which the file was saved. This is either the original path or a new path specified by the user.</returns>
      <param name="fullPath">[in] The full path to the document to be saved.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.RunningDocumentTable.System#Collections#IEnumerable#GetEnumerator">
      <summary>Enumerates the documents in the Running Document Table.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> of type <see cref="T:Microsoft.VisualStudio.Shell.RunningDocumentInfo" />.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.RunningDocumentTable.Unadvise(System.UInt32)">
      <summary>Indicates the client is no longer interested in receiving Running Document Table (RDT) events.</summary>
      <param name="cookie">[in] A unique value returned from the <see cref="M:Microsoft.VisualStudio.Shell.RunningDocumentTable.Advise(Microsoft.VisualStudio.Shell.Interop.IVsRunningDocTableEvents)" /> method. See Remarks.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.RunningDocumentTable.UnlockDocument(Microsoft.VisualStudio.Shell.Interop._VSRDTFLAGS,System.UInt32)">
      <summary>Releases a read or edit lock on the open document. </summary>
      <param name="lockType">Lock values from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSRDTFLAGS" /> enumeration.</param>
      <param name="cookie">The identifier of the document data in the Running Document Table.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.ServiceProvider">
      <summary>Provides a unified service provider for managed VSPackages.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ServiceProvider.#ctor(Microsoft.VisualStudio.OLE.Interop.IServiceProvider)">
      <summary>Initializes a instance with an existing <see cref="T:Microsoft.VisualStudio.OLE.Interop.IServiceProvider" /> interface.</summary>
      <param name="sp">A <see cref="T:Microsoft.VisualStudio.OLE.Interop.IServiceProvider" /> interface.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ServiceProvider.#ctor(Microsoft.VisualStudio.OLE.Interop.IServiceProvider,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.Shell.ServiceProvider" /> class with an existing <see cref="T:Microsoft.VisualStudio.OLE.Interop.IServiceProvider" /> object and optionally passes all requests to the underlying service provider.</summary>
      <param name="sp">An <see cref="T:Microsoft.VisualStudio.OLE.Interop.IServiceProvider" /> interface used to resolve services.</param>
      <param name="defaultServices">Determines if this service should respond to queries for <see cref="T:Microsoft.VisualStudio.OLE.Interop.IServiceProvider" /> and <see cref="T:Microsoft.VisualStudio.OLE.Interop.IObjectWithSite" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ServiceProvider.Dispose">
      <summary>Releases the resources used by the <see cref="T:Microsoft.VisualStudio.Shell.ServiceProvider" /> object.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ServiceProvider.GetService(System.Guid)">
      <summary>Gets the specified service from the unmanaged service provider.</summary>
      <returns>The requested service, or null if the service could not be located.</returns>
      <param name="guid">The GUID of the service to retrieve.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ServiceProvider.GetService(System.Type)">
      <summary>Gets type-based services from the unmanaged service provider.</summary>
      <returns>The requested service, or null if the service could not be located.</returns>
      <param name="serviceType">The type of service to retrieve. The GUID of this type is used to obtain the service from the native service provider.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ServiceProvider.Microsoft#VisualStudio#OLE#Interop#IObjectWithSite#GetSite(System.Guid@,System.IntPtr@)">
      <summary>Gets the current site object to resolve services.</summary>
      <param name="riid">The GUID of the requested interface.</param>
      <param name="ppv">The retrieved interface or null.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ServiceProvider.Microsoft#VisualStudio#OLE#Interop#IObjectWithSite#SetSite(System.Object)">
      <summary>Sets the site object to resolve services.</summary>
      <param name="pUnkSite">The site to be set.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.ServiceProviderHierarchy">
      <summary>A hierarchical service provider that stores <see cref="T:Microsoft.VisualStudio.OLE.Interop.IServiceProvider" /> objects in a sorted collection for an ordered retrieval. When <see cref="M:Microsoft.VisualStudio.Shell.ServiceProviderHierarchy.GetService(System.Type)" /> is called to retrieve a service, the service providers are queried in a specific order. This is useful when multiple service providers are combined, such as in the <see cref="T:Microsoft.VisualStudio.Shell.WindowPane" /> implementation.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ServiceProviderHierarchy.#ctor">
      <summary>Initializes a new instance of <see cref="T:Microsoft.VisualStudio.Shell.ServiceProviderHierarchy" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.ServiceProviderHierarchy.GetService(System.Type)">
      <summary>Gets a service of the specified type.</summary>
      <returns>The requested service, or null if the service cannot be found. This service must be cast to the required service type. </returns>
      <param name="serviceType">The type of the service.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.TaskCategory">
      <summary>Provides a set of task categories that specify the kind of task that is to be performed.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.TaskCategory.All">
      <summary>All tasks. Not a real category. It is used to allow a task list view to show all of the tasks in the task list. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.TaskCategory.BuildCompile">
      <summary>Build errors and warnings, and possibly deployment errors.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.TaskCategory.Comments">
      <summary>Tasks generated by special comments, such as "TODO," "UNDONE," or "TBD." Also used for informational messages. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.TaskCategory.CodeSense">
      <summary>Errors generated as the user types source code.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.TaskCategory.ShortCuts">
      <summary>Short cuts to code. Shortcuts are generated by the user right-clicking the editor window, and choosing Add Task List Shortcut from the pop-up menu.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.TaskCategory.User">
      <summary>User-defined tasks.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.TaskCategory.Misc">
      <summary>Miscellaneous tasks.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.TaskCategory.Html">
      <summary>Tasks which pertain to Web page development. .</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.TaskProvider.TaskCollection">
      <summary>A container for <see cref="T:Microsoft.VisualStudio.Shell.Task" /> objects.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.TaskProvider.TaskCollection.#ctor(Microsoft.VisualStudio.Shell.TaskProvider)">
      <summary>Initializes a new instance of <see cref="T:Microsoft.VisualStudio.Shell.TaskProvider.TaskCollection" /> for the supplied task provider.</summary>
      <param name="owner">The task provider that owns these tasks.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.TaskProvider.TaskCollection.Add(Microsoft.VisualStudio.Shell.Task)">
      <summary>Adds a task to the collection.</summary>
      <returns>The index of the added task.</returns>
      <param name="task">The task to add.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.TaskProvider.TaskCollection.Clear">
      <summary>Removes all the tasks from the collection.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.TaskProvider.TaskCollection.Contains(Microsoft.VisualStudio.Shell.Task)">
      <summary>Gets whether or not the task exists in the collection</summary>
      <returns>true if the task exists in the collection, otherwise false.</returns>
      <param name="task">The task for which to search.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.TaskProvider.TaskCollection.Count">
      <summary>Gets the number of tasks in the collection.</summary>
      <returns>The number of tasks in the collection.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.TaskProvider.TaskCollection.GetEnumerator">
      <summary>Gets an enumerator for the collection.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.TaskProvider.TaskCollection.IndexOf(Microsoft.VisualStudio.Shell.Task)">
      <summary>Gets the index of the specified task in the collection.</summary>
      <returns>The index of the task.</returns>
      <param name="task">The task for which to search.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.TaskProvider.TaskCollection.Insert(System.Int32,Microsoft.VisualStudio.Shell.Task)">
      <summary>Inserts a task in the collection at the specified index.</summary>
      <param name="index">The index at which to insert the task.</param>
      <param name="task">The task to insert.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.TaskProvider.TaskCollection.Item(System.Int32)">
      <summary>Gets or sets the task at the given index.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Shell.Task" />.</returns>
      <param name="index">The index of the task.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.TaskProvider.TaskCollection.Remove(Microsoft.VisualStudio.Shell.Task)">
      <summary>Removes a task from the collection.</summary>
      <param name="task">The task to remove.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.TaskProvider.TaskCollection.RemoveAt(System.Int32)">
      <summary>Removes the task at the specified index.</summary>
      <param name="index">The index at which to remove the task.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.TaskProvider.TaskCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies the collection to an array, starting at the specified index.</summary>
      <param name="array">The array to which to copy the collection.</param>
      <param name="index">The index of the array at which to start the copy.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.TaskProvider.TaskCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Gets whether or not the collection is synchronized.</summary>
      <returns>By default returns false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.TaskProvider.TaskCollection.System#Collections#ICollection#SyncRoot">
      <summary>Gets the object that can be used to synchronize access to the collection.</summary>
      <returns>By default returns the current instance of this collection.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.TaskProvider.TaskCollection.System#Collections#IList#Add(System.Object)">
      <summary>Adds the task to the collection.</summary>
      <returns>The index at which the task was added.</returns>
      <param name="obj">The task object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.TaskProvider.TaskCollection.System#Collections#IList#Clear">
      <summary>Removes all the tasks from the list.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.TaskProvider.TaskCollection.System#Collections#IList#Contains(System.Object)">
      <summary>Gets whether or not the specified task exists in the collection.</summary>
      <returns>true if the task exists in the collection, otherwise false.</returns>
      <param name="obj">The task to find.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.TaskProvider.TaskCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>Gets the index of the collection at which the specified task exists.</summary>
      <returns>The index of the collection at which the task exists.</returns>
      <param name="obj">The task to find.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.TaskProvider.TaskCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Inserts a task in the collection at the specified index.</summary>
      <param name="index">The index at which to insert the task.</param>
      <param name="obj">The task to insert.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.TaskProvider.TaskCollection.System#Collections#IList#IsFixedSize">
      <summary>Gets whether or not the collection is of a fixed size.</summary>
      <returns>By default returns false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.TaskProvider.TaskCollection.System#Collections#IList#IsReadOnly">
      <summary>Gets whether or not the collection is read-only.</summary>
      <returns>By default returns false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.TaskProvider.TaskCollection.System#Collections#IList#Item(System.Int32)">
      <summary>Gets or sets the task at the specified index.</summary>
      <returns>The specified task.</returns>
      <param name="index">The index of the collection.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.TaskProvider.TaskCollection.System#Collections#IList#Remove(System.Object)">
      <summary>Removes the specified task from the collection.</summary>
      <param name="obj">The task to be removed.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.TaskProvider.TaskCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>Removes the task from the specified index of the collection.</summary>
      <param name="index">The index at which to remove the task.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Url">
      <summary>Wraps the <see cref="T:System.Uri" /> class. Provides an unescaped version of <see cref="P:System.Uri.LocalPath" /> for file URL types and <see cref="P:System.Uri.AbsoluteUri" /> for HTTP URL types. Also returns an unescaped result from <see cref="M:System.Uri.MakeRelativeUri(System.Uri)" /> so that it can be presented to the user.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Url.#ctor(Microsoft.VisualStudio.Shell.Url,System.String)">
      <summary>Initializes a new instance of <see cref="T:Microsoft.VisualStudio.Shell.Url" /> that is based on the specified base <see cref="T:Microsoft.VisualStudio.Shell.Url" /> and relative path.</summary>
      <param name="baseUrl">The base <see cref="T:Microsoft.VisualStudio.Shell.Url" />.</param>
      <param name="relpath">The relative path.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Url.#ctor(System.String)">
      <summary>Initializes a new instance of <see cref="T:Microsoft.VisualStudio.Shell.Url" /> for the specified path.</summary>
      <param name="path">The path for which to create the URL.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.Url.AbsoluteUrl">
      <summary>Gets the absolute URL as a string.</summary>
      <returns>The string value of the absolute URL.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.Url.Directory">
      <summary>Returns the unescaped absolute URL for the parent directory that contains the file that is referenced by this URL object.</summary>
      <returns>The unescaped absolute URL of the parent directory.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Url.GetPartial(System.Int32)">
      <summary>Gets the unescaped path up to the specified index.</summary>
      <returns>The unescaped path up to the specified index of the <see cref="P:Microsoft.VisualStudio.Shell.Url.Segments" /> array.</returns>
      <param name="i">The index of the <see cref="P:Microsoft.VisualStudio.Shell.Url.Segments" /> array up to which to get the path.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Url.GetPartial(System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Url.GetRemainder(System.Int32)">
      <summary>Gets the unescaped remainder of the path, starting at the specified segment.</summary>
      <returns>The unescaped remainder of the path, starting with the specified index of the <see cref="P:Microsoft.VisualStudio.Shell.Url.Segments" /> array.</returns>
      <param name="i">The index of the <see cref="P:Microsoft.VisualStudio.Shell.Url.Segments" /> array at which to start getting the path.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.Url.IsFile">
      <summary>Determines whether the URL represents a file (as opposed to an HTTP location).</summary>
      <returns>true if the URL represents a file; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Url.JoinSegments(System.Int32,System.Int32)">
      <summary>Joins the specified segments into a path.</summary>
      <returns>The unescaped path, starting at segment <paramref name="i" /> and not including segment <paramref name="j" /> or higher.</returns>
      <param name="i">The index of the <see cref="P:Microsoft.VisualStudio.Shell.Url.Segments" /> array at which to start the path.</param>
      <param name="j">The index of the <see cref="P:Microsoft.VisualStudio.Shell.Url.Segments" /> array at which to stop adding segments to the path.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Url.MakeRelative(Microsoft.VisualStudio.Shell.Url)">
      <summary>Makes the specified <see cref="T:Microsoft.VisualStudio.Shell.Url" /> relative with respect to the current one.</summary>
      <returns>Using the current <see cref="T:Microsoft.VisualStudio.Shell.Url" /> as the base, the relative path of <paramref name="url" />.</returns>
      <param name="url">The <see cref="T:Microsoft.VisualStudio.Shell.Url" /> to make relative.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Url.Move(Microsoft.VisualStudio.Shell.Url,Microsoft.VisualStudio.Shell.Url)">
      <summary>Moves the URL from the old base to the new one.</summary>
      <returns>The new <see cref="T:Microsoft.VisualStudio.Shell.Url" />.</returns>
      <param name="oldBase">The original <see cref="T:Microsoft.VisualStudio.Shell.Url" /> base.</param>
      <param name="newBase">The new <see cref="T:Microsoft.VisualStudio.Shell.Url" /> base.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.Url.Segments">
      <summary>Gets an array of the segments of the URL.</summary>
      <returns>An array of the segments of the URL.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Url.Unescape(System.String,System.Boolean)">
      <summary>Converts an escaped string to an unescaped string.</summary>
      <returns>The unescaped string.</returns>
      <param name="escaped">The string to convert.</param>
      <param name="isFile">true if the string represents a file URL; otherwise, false.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.Url.Uri">
      <summary>Gets the URI for this URL.</summary>
      <returns>
        <see cref="T:System.Uri" />.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Flavor.FlavoredProjectFactory">
      <summary>A factory for creating flavored projects, otherwise known as project subtypes.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProjectFactory.#ctor">
      <summary>Initializes a new instance of <see cref="T:Microsoft.VisualStudio.Shell.Flavor.FlavoredProjectFactory" />. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProjectFactory.CanCreateProject(System.String,System.UInt32)">
      <summary>Determines whether or not the project can be created with the supplied parameters.</summary>
      <returns>true if the project file name is valid, otherwise false.</returns>
      <param name="fileName">The name of the file.</param>
      <param name="flags">Not used.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProjectFactory.CreateProject(System.String,System.String,System.String,System.UInt32,System.Guid@,System.IntPtr@,System.Int32@)">
      <summary>Creates a project.</summary>
      <param name="fileName">The name of the project file.</param>
      <param name="location">The path of the project file. </param>
      <param name="name">The name of the project.</param>
      <param name="flags">Values from <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSCREATEPROJFLAGS" />.</param>
      <param name="projectGuid">The interface ID of the project.</param>
      <param name="project">[out] Returns a pointer to the project.</param>
      <param name="canceled">[out] Returns true if the operation was canceled, otherwise false.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProjectFactory.Dispose(System.Boolean)">
      <summary>Disposes the service provider.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProjectFactory.Initialize">
      <summary>Initializes the project factory.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProjectFactory.Microsoft#VisualStudio#Shell#Interop#IVsAggregatableProjectFactory#GetAggregateProjectType(System.String,System.String@)">
      <summary>Gets a semicolon-delimited string of project type GUIDs.</summary>
      <returns>
        <see cref="F:Microsoft.VisualStudio.NativeMethods.S_OK" />.</returns>
      <param name="fileName">The name of the project file.</param>
      <param name="projectTypeGuid">[out] Returns the semicolon-delimited string of project type GUIDs.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProjectFactory.Microsoft#VisualStudio#Shell#Interop#IVsAggregatableProjectFactory#PreCreateForOuter(System.Object,System.Object@)">
      <summary>Creates an aggregatable inner project.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="outerProject">The outer project, or null if the outer project is to be created.</param>
      <param name="project">[out] Returns the inner project.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProjectFactory.Microsoft#VisualStudio#Shell#Interop#IVsProjectFactory#CanCreateProject(System.String,System.UInt32,System.Int32@)">
      <summary>Determines whether or not the project can be created.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="fileName">The name of the file.</param>
      <param name="flags">If used, values from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSCREATEPROJFLAGS" /> enumeration.</param>
      <param name="canCreate">[out] Returns true if the project can be created, otherwise false.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProjectFactory.Microsoft#VisualStudio#Shell#Interop#IVsProjectFactory#Close">
      <summary>Disposes this object.</summary>
      <returns>
        <see cref="F:Microsoft.VisualStudio.NativeMethods.S_OK" />.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProjectFactory.Microsoft#VisualStudio#Shell#Interop#IVsProjectFactory#CreateProject(System.String,System.String,System.String,System.UInt32,System.Guid@,System.IntPtr@,System.Int32@)">
      <summary>Creates a flavored project.</summary>
      <returns>
        <see cref="F:Microsoft.VisualStudio.NativeMethods.S_OK" />.</returns>
      <param name="fileName">The name of the project file.</param>
      <param name="location">The path of the project file. </param>
      <param name="name">The name of the project.</param>
      <param name="flags">Values from <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSCREATEPROJFLAGS" />.</param>
      <param name="projectGuid">The interface ID of the project.</param>
      <param name="project">[out] Returns a pointer to the project.</param>
      <param name="canceled">[out] Returns true if the operation was canceled, otherwise false.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProjectFactory.Microsoft#VisualStudio#Shell#Interop#IVsProjectFactory#SetSite(Microsoft.VisualStudio.OLE.Interop.IServiceProvider)">
      <summary>Initializes the project and allows the project to obtain services proffered by the environment. </summary>
      <returns>
        <see cref="F:Microsoft.VisualStudio.NativeMethods.S_OK" />.</returns>
      <param name="provider">
        <see cref="T:Microsoft.VisualStudio.OLE.Interop.IServiceProvider" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProjectFactory.PreCreateForOuter(System.Object)">
      <summary>Creates an instance of the project. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="outerProject">The outermost project, or null if the outer project is being created.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.FlavoredProjectFactory.ProjectTypeGuids(System.String)">
      <summary>Gets the set of project type GUIDs from the project file.</summary>
      <returns>When implemented by a derived class, a semicolon-delimited string containing the project type GUIDs in the project file.</returns>
      <param name="file">The project file.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.Flavor.FlavoredProjectFactory.serviceProvider">
      <summary>Gets the project's service provider.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.Shell.ServiceProvider" />.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Flavor.ProjectDocumentsChangeEventArgs">
      <summary>Contains event data for events relating to files and folders of the project subtype, for example the <see cref="E:Microsoft.VisualStudio.Shell.Flavor.FlavoredProject.FileAdded" /> event.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Flavor.ProjectDocumentsChangeEventArgs.#ctor">
      <summary>Initializes a new instance of <see cref="T:Microsoft.VisualStudio.Shell.Flavor.ProjectDocumentsChangeEventArgs" />.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.Flavor.ProjectDocumentsChangeEventArgs.MkDocument">
      <summary>Gets or sets the unique name of the project item that was changed.</summary>
      <returns>The unique name of the project item that was changed.</returns>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Assemblies\v2.0\Microsoft.VisualStudio.Shell.Interop.9.0.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.VisualStudio.Shell.Interop.9.0</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualStudio.Shell.IMenuCommandInvokeEx"></member>
    <member name="M:Microsoft.VisualStudio.Shell.IMenuCommandInvokeEx.Invoke(System.Object,System.IntPtr,Microsoft.VisualStudio.OLE.Interop.OLECMDEXECOPT)">
      <param name="inArg"></param>
      <param name="outArg"></param>
      <param name="options"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__FRAMESHOW3">
      <summary>Adds members to <see cref="T:Microsoft.VisualStudio.Shell.Interop.__FRAMESHOW" /> enumeration, which specifies the state of a window frame.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__FRAMESHOW3.FRAMESHOW_WinActivated">
      <summary>A window is activated (made visible).</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__GRADIENTTYPE2">
      <summary>Adds members to <see cref="T:Microsoft.VisualStudio.Shell.Interop.__GRADIENTTYPE" /> enumeration, specifying types of gradients that can be used as backgrounds in VSPackages.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__GRADIENTTYPE2.VSGRADIENT_FILETAB_SELECTED">
      <summary>Selected file tab.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__GRADIENTTYPE2.VSGRADIENT_FILETAB_HOT">
      <summary>Hot file tab.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__PSFFILEID3">
      <summary>Specifies Special Project Files that can be created or queried for with <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsProjectSpecialFiles.GetFile(System.Int32,System.UInt32,System.UInt32@,System.String@)" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__PSFFILEID3.PSFFILEID_AppXaml">
      <summary>Get AppXaml files.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__PSFFILEID3.PSFFILEID_FIRST3">
      <summary>Specifies the first PSFFIELDID3.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__SccStatus">
      <summary>Specifies the state of a file in the source control system.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__SccStatus.SCC_STATUS_INVALID">
      <summary>The file is in an unknown state; the status could not be obtained.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__SccStatus.SCC_STATUS_NOTCONTROLLED">
      <summary>The file is not under source control.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__SccStatus.SCC_STATUS_CONTROLLED">
      <summary>The file is under source control.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__SccStatus.SCC_STATUS_CHECKEDOUT">
      <summary>The file is checked out by the current user at the specified path on the local disk.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__SccStatus.SCC_STATUS_OUTOTHER">
      <summary>The file is checked out by another user.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__SccStatus.SCC_STATUS_OUTEXCLUSIVE">
      <summary>The file is exclusively checked out.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__SccStatus.SCC_STATUS_OUTMULTIPLE">
      <summary>The file is checked out by more than one user.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__SccStatus.SCC_STATUS_OUTOFDATE">
      <summary>The file is not the most current version.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__SccStatus.SCC_STATUS_DELETED">
      <summary>The file was deleted from the source control database.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__SccStatus.SCC_STATUS_LOCKED">
      <summary>The file is locked; no more versions are allowed.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__SccStatus.SCC_STATUS_MERGED">
      <summary>The file is merged but not yet fixed or verified.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__SccStatus.SCC_STATUS_SHARED">
      <summary>The file is shared between projects in the source control database.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__SccStatus.SCC_STATUS_PINNED">
      <summary>The file is shared and is pinned to a specific version. No more changes can be made to the file in the source control database until the file is unpinned.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__SccStatus.SCC_STATUS_MODIFIED">
      <summary>The file was modified, broken, or violated.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__SccStatus.SCC_STATUS_OUTBYUSER">
      <summary>The file is checked out by the current user.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__SccStatus.SCC_STATUS_NOMERGE">
      <summary>The file can never be merged with. It does not have to be saved before a get operation.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__SccStatus.SCC_STATUS_RESERVED_1">
      <summary>This member is not intended to be used directly from your code because this member is specific to the source control provider. Team Foundation Client and the Microsoft Source Code Control Interface use this value to indicate that the file is excluded from source control.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__SccStatus.SCC_STATUS_RESERVED_2">
      <summary>This member is not intended to be used directly from your code because this member is specific to the source control provider. Team Foundation Client uses this value to indicate that the file has a pending edit.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__SccStatus.SCC_STATUS_RESERVED_3">
      <summary>This member is not intended to be used directly from your code because this member is specific to the source control provider. Team Foundation Client uses this value to indicate that the file is located in the current workspace.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSCREATEPROJFLAGS3">
      <summary>Controls how a project is created or opened.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCREATEPROJFLAGS3.CPF_SKIP_SOLUTION_ACCESS_CHECK">
      <summary>Do not check if the containing solution is accessible.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSCREATESOLUTIONFLAGS3">
      <summary>Controls how a new solution is created.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCREATESOLUTIONFLAGS3.CSF_SKIP_SOLUTION_ACCESS_CHECK">
      <summary>Do not check if the solution folder is accessible.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSDBGLAUNCHFLAGS3">
      <summary>Specifies flags that control how the debugger is started.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSDBGLAUNCHFLAGS3.DBGLAUNCH_WaitForEvent">
      <summary>Launch the debugger when an event is fired.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSDBGLAUNCHFLAGS4"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSDBGLAUNCHFLAGS4.DBGLAUNCH_UseDefaultBrowser">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSFPROPID3">
      <summary>Provides additional members for the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSFPROPID" /> enumeration.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSFPROPID3.VSFPROPID_MDIContainerID">
      <summary>I4 ID of the container (tab) group for the MDI window.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSFPROPID3.VSFPROPID_NotifyOnActivate">
      <summary>BOOL Send FRAMESHOW_WinActivated notification when a window is activated.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSFPROPID3.VSFPROPID3_FIRST">
      <summary>The first ID.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID3">
      <summary>Adds members to <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID" /> enumeration, specifying property identifies for window, document, and tool window frames.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID3.VSHPROPID_TargetFrameworkVersion">
      <summary>UI4   Target Framework version.  High word is major version, Low word is minor version.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID3.VSHPROPID_WebReferenceSupported">
      <summary>VT_BOOL  the project support for web references.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID3.VSHPROPID_ServiceReferenceSupported">
      <summary>VT_BOOL Project support for service references.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID3.VSHPROPID_SupportsHierarchicalUpdate">
      <summary>BOOL set to TRUE to enable hierarchical update.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID3.VSHPROPID_SupportsNTierDesigner">
      <summary>BOOL set this to TRUE to enable the N-Tier designer.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID3.VSHPROPID_SupportsLinqOverDataSet">
      <summary>BOOL set  to TRUE to enable the Linq Over DataSet.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID3.VSHPROPID_ProductBrandName">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID3.VSHPROPID_RefactorExtensions">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID3.VSHPROPID_IsDefaultNamespaceRefactorNotify">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID3.VSHPROPID_FIRST3">
      <summary>The first ID.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VsLocalRegistryRootHandle">
      <summary>Represents a registry root handle.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VsLocalRegistryRootHandle.RegHandle_Invalid">
      <summary>Invalid value, used for initializing parameters.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VsLocalRegistryRootHandle.RegHandle_CurrentUser">
      <summary>HKEY_CURRENT_USER</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VsLocalRegistryRootHandle.RegHandle_LocalMachine">
      <summary>HKEY_LOCAL_MACHINE</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VsLocalRegistryType">
      <summary>Represents a registry type setting.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VsLocalRegistryType.RegType_UserSettings">
      <summary>Per-user settings.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VsLocalRegistryType.RegType_Configuration">
      <summary>Per-installation (computer-wide) settings.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VsLocalRegistryType.RegType_PrivateConfig">
      <summary>Reserved for future use.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VsLocalRegistryType.RegType_SessionSettings">
      <summary>Reserved for future use.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VsLocalRegistryType.RegType_NewUserSettings">
      <summary>Reserved for future use.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSPROPID3">
      <summary>Provides additional members for the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSPROPID" /> enumeration. Identifies property setting for a solution.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROPID3.VSPROPID_IsSavingOnClose">
      <summary>BOOLEAN: true if the solution is being saved when closing.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROPID3.VSPROPID_FIRST3">
      <summary>Specifies the first VSPROPID.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSQuerySaveFlags2">
      <summary>This enumeration is an extension of <see cref="T:Microsoft.VisualStudio.Shell.Interop.tagVSQuerySaveFlags" />, and specifies additional flags.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSQuerySaveFlags2.QSF_DetectAnyChangedFile">
      <summary>Check if any file changed.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSSLNOPENOPTIONS3">
      <summary>Provides additional members for the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSSLNOPENOPTIONS" /> enumeration.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSLNOPENOPTIONS3.SLNOPENOPT_SkipSolutionAccessCheck">
      <summary>Do not check if the folder containing the solution can be modified.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID3">
      <summary>Provides additional members for the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID" /> enumeration.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID3.VSSPROPID_CommonAppDataDir">
      <summary>Common (all users) application data directory.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID3.VSSPROPID_FIRST3">
      <summary>First item.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX2">
      <summary>Provides additional members for the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX" /> enumeration.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX2.VSCOLOR_SPLASHSCREEN_BORDER">
      <summary>Splash screen border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX2.VSCOLOR_FILETAB_SELECTED_GRADIENTTOP">
      <summary>Top of selected file tab gradient.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX2.VSCOLOR_FILETAB_SELECTED_GRADIENTBOTTOM">
      <summary>Bottom of selected file tab gradient</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX2.VSCOLOR_FILETAB_HOT_GRADIENTTOP">
      <summary>Top of hot file tab gradient</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX2.VSCOLOR_FILETAB_HOT_GRADIENTBOTTOM">
      <summary>Bottom of hot file tab gradient</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX2.VSCOLOR_FILETAB_DOCUMENTBORDER_SHADOW">
      <summary>File tab document border shadow</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX2.VSCOLOR_FILETAB_DOCUMENTBORDER_BACKGROUND">
      <summary>File tab document border background</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX2.VSCOLOR_FILETAB_DOCUMENTBORDER_HIGHLIGHT">
      <summary>File tab document border highlight</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX2.VSCOLOR_BRANDEDUI_TITLE">
      <summary>Branded UI title</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX2.VSCOLOR_BRANDEDUI_BORDER">
      <summary>Branded UI border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX2.VSCOLOR_BRANDEDUI_TEXT">
      <summary>Branded UI text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX2.VSCOLOR_BRANDEDUI_BACKGROUND">
      <summary>Branded UI background</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX2.VSCOLOR_BRANDEDUI_FILL">
      <summary>Branded UI fill</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX2.VSCOLOR_LASTEX2">
      <summary>Last enumeration item</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VsWebProxyState">
      <summary>Specifies how credentials are attached to a web proxy.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VsWebProxyState.VsWebProxyState_NoCredentials">
      <summary>Initial state</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VsWebProxyState.VsWebProxyState_DefaultCredentials">
      <summary>Default credentials attached to proxy</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VsWebProxyState.VsWebProxyState_CachedCredentials">
      <summary>Cached credentials attached to proxy</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VsWebProxyState.VsWebProxyState_PromptForCredentials">
      <summary>Prompt user for credentials</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VsWebProxyState.VsWebProxyState_Abort">
      <summary>Terminate the current operation</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._DEBUG_LAUNCH_OPERATION3">
      <summary>Provides additional members to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.DEBUG_LAUNCH_OPERATION" /> enumeration.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._DEBUG_LAUNCH_OPERATION3.DLO_LaunchBrowser">
      <summary>Lounch web browser</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._LIBCAT_HIERARCHYTYPE2">
      <summary>Provides additional members for the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIBCAT_HIERARCHYTYPE" /> enumeration.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_HIERARCHYTYPE2.LCHT_EXTENSIONMEMBERS">
      <summary>Extension members hierarchy element type</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._OLELOOP2"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._OLELOOP2.oleloopModelessFormWithHandles">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._OLELOOP2.oleloopModelessFormWithHandlesNoIdle">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._OLELOOP2.oleloopModalFormWithHandles">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._OLELOOP2.oleloopModalFormWithHandlesNoIdle">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.ENC_ACTIVE_STATEMENT"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ENC_ACTIVE_STATEMENT.ASINFO"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ENC_ACTIVE_STATEMENT.filename"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ENC_ACTIVE_STATEMENT.id"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ENC_ACTIVE_STATEMENT.methodToken"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ENC_ACTIVE_STATEMENT.posType"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ENC_ACTIVE_STATEMENT.tsPosition"></member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.ENC_BUILD_STATE"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ENC_BUILD_STATE.ENC_NOT_MODIFIED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ENC_BUILD_STATE.ENC_NONCONTINUABLE_ERRORS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ENC_BUILD_STATE.ENC_COMPILE_ERRORS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ENC_BUILD_STATE.ENC_APPLY_READY">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.ENC_EXCEPTION_SPAN"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ENC_EXCEPTION_SPAN.id"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ENC_EXCEPTION_SPAN.methodToken"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ENC_EXCEPTION_SPAN.tsPosition"></member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.ENC_REASON"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ENC_REASON.ENCReason_Precompile">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ENC_REASON.ENCReason_Rebuild">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.ENC_RETURNCODES"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ENC_RETURNCODES.S_ENC_NOT_SUPPORTED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ENC_RETURNCODES.E_STATEMENT_DELETED">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.enum_ASINFO"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.enum_ASINFO.ASINFO_NONE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.enum_ASINFO.ASINFO_LEAF">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.enum_ASINFO.ASINFO_MIDSTATEMENT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.enum_ASINFO.ASINFO_NONUSER">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.enum_ENC_BREAKSTATE_REASON"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.enum_ENC_BREAKSTATE_REASON.ENC_BREAK_NORMAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.enum_ENC_BREAKSTATE_REASON.ENC_BREAK_EXCEPTION">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.enum_POSITION_TYPE"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.enum_POSITION_TYPE.TEXT_POSITION_ACTIVE_STATEMENT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.enum_POSITION_TYPE.TEXT_POSITION_NEARBY_STATEMENT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.enum_POSITION_TYPE.TEXT_POSITION_NONE">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IEnumSystemAssemblies">
      <summary>Enumerator for system assemblies. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IEnumSystemAssemblies.Clone(Microsoft.VisualStudio.Shell.Interop.IEnumSystemAssemblies@)">
      <summary>Clones this <see cref="T:Microsoft.VisualStudio.Shell.Interop.IEnumSystemAssemblies" /> interface by creating another instance.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppIEnumComponents">Reference to the cloned interface <see cref="T:Microsoft.VisualStudio.Shell.Interop.IEnumSystemAssemblies" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IEnumSystemAssemblies.Count(System.UInt32@)">
      <summary>Gets the number of enumerated system assemblies.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pCount">The number of system assemblies.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IEnumSystemAssemblies.Next(System.UInt32,System.String[],System.UInt32@)">
      <summary>Retrieves the next system assembly.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="celt">The number of assemblies to return.</param>
      <param name="rgAssemblies">A reference to the returned assemblies.</param>
      <param name="pceltFetched">Number of system assemblies returned.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IEnumSystemAssemblies.Reset">
      <summary>Resets the collection of assemblies to the first one.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IEnumSystemAssemblies.Skip(System.UInt32)">
      <summary>Moves ahead in the list of system assemblies.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="celt">The number of assemblies to skip ahead.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IEnumTargetFrameworks">
      <summary>Enumerator for supported versions of the framework.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IEnumTargetFrameworks.Clone(Microsoft.VisualStudio.Shell.Interop.IEnumTargetFrameworks@)">
      <summary>Clones this <see cref="T:Microsoft.VisualStudio.Shell.Interop.IEnumTargetFrameworks" /> interface by creating another instance.</summary>
      <param name="ppIEnumComponents">Reference to the cloned interface <see cref="T:Microsoft.VisualStudio.Shell.Interop.IEnumTargetFrameworks" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IEnumTargetFrameworks.Count(System.UInt32@)">
      <summary>Gets the number of supported framework versions.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pCount">The number of supported versions of the framework.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IEnumTargetFrameworks.Next(System.UInt32,System.UInt32[],System.UInt32@)">
      <summary>Retrieves supported target frameworks.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="celt">The number of target framework versions.</param>
      <param name="rgFrameworks">A reference to the returned target frameworks.</param>
      <param name="pceltFetched">The number of target frameworks returned.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IEnumTargetFrameworks.Reset">
      <summary>Resets the collection of target frameworks to the first one.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IEnumTargetFrameworks.Skip(System.UInt32)">
      <summary>Moves ahead in the enumeration of target frameworks.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="celt">The number of elements to skip ahead.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IEnumVsENCRebuildableProjectCfgs"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IEnumVsENCRebuildableProjectCfgs.Clone(Microsoft.VisualStudio.Shell.Interop.IEnumVsENCRebuildableProjectCfgs@)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IEnumVsENCRebuildableProjectCfgs.GetCount(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IEnumVsENCRebuildableProjectCfgs.Next(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsENCRebuildableProjectCfg[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IEnumVsENCRebuildableProjectCfgs.Reset"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IEnumVsENCRebuildableProjectCfgs.Skip(System.UInt32)"></member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.ILocalRegistry4">
      <summary>Establishes a local registry relative to the Visual Studio registry hive. You can get an instance of the interface through the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SLocalRegistry" /> (SID_SLocalRegistry) service.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.ILocalRegistry4.GetLocalRegistryRootEx(System.UInt32,System.UInt32@,System.String@)">
      <summary>Returns the local registry root.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwRegType">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VsLocalRegistryType" /> value that specifies the registry hive.</param>
      <param name="pdwRegRootHandle">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VsLocalRegistryRootHandle" /> value that specifies the registry root handle.</param>
      <param name="pbstrRoot">[out] Pointer to a string that contains the local registry root.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.ILocalRegistry4.RegisterClassObject(System.Guid@,System.UInt32@)">
      <summary>Loads a class factory and registers it with COM.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="rclsid">The CLSID to register.</param>
      <param name="pdwCookie">Reference to the object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.ILocalRegistry4.RegisterInterface(System.Guid@)">
      <summary>Registers an interface for marshaling by using a locally registered proxy.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="riid">ID of the interface to register.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.ILocalRegistry4.RevokeClassObject(System.UInt32)">
      <summary>Revokes a registered class object.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwCookie">The class object to revoke.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IOleComponent2">
      <summary>Enables components to participate in message processing while they are waiting for handles.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IOleComponent2.FContinueMessageLoop(System.UInt32,System.IntPtr,Microsoft.VisualStudio.OLE.Interop.MSG[])">
      <param name="uReason"></param>
      <param name="pvLoopData"></param>
      <param name="pMsgPeeked"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IOleComponent2.FDoIdle(System.UInt32)">
      <param name="grfidlef"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IOleComponent2.FPreTranslateMessage(Microsoft.VisualStudio.OLE.Interop.MSG[])">
      <param name="pMsg"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IOleComponent2.FQueryTerminate(System.Int32)">
      <param name="fPromptUser"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IOleComponent2.FReserved1(System.UInt32,System.UInt32,System.IntPtr,System.IntPtr)">
      <param name="dwReserved"></param>
      <param name="message"></param>
      <param name="wParam"></param>
      <param name="lParam"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IOleComponent2.GetWaitHandlesAndTimeout(System.IntPtr[]@,System.UInt32@,System.UInt32@,System.IntPtr)">
      <summary>When overridden in a derived class, returns the time-out and the list of handles on which this component is waiting.</summary>
      <returns>An error code (HRESULT) value that indicates the status of the operation.</returns>
      <param name="aHandles">When this method returns, contains an array of object handles for which this component is waiting, passed by reference. Must return at least one and no more than 64 handles. Must not return duplicate handles.</param>
      <param name="pnHandles">When this method returns, contains the number of handles in <paramref name="aHandles" />.</param>
      <param name="pdwTimeout">When this method returns, contains the time-out in milliseconds, or 0xFFFFFFFF for an infinite time-out.</param>
      <param name="pvLoopData">The object that was passed in <paramref name="pvLoopData" /> when <see cref="M:Microsoft.VisualStudio.OLE.Interop.IOleComponentManager.FPushMessageLoop(System.UInt32,System.UInt32,System.IntPtr)" /> was called for this component.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IOleComponent2.HwndGetWindow(System.UInt32,System.UInt32)">
      <param name="dwWhich"></param>
      <param name="dwReserved"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IOleComponent2.OnActivationChange(Microsoft.VisualStudio.OLE.Interop.IOleComponent,System.Int32,Microsoft.VisualStudio.OLE.Interop.OLECRINFO[],System.Int32,Microsoft.VisualStudio.OLE.Interop.OLECHOSTINFO[],System.UInt32)">
      <param name="pic"></param>
      <param name="fSameComponent"></param>
      <param name="pcrinfo"></param>
      <param name="fHostIsActivating"></param>
      <param name="pchostinfo"></param>
      <param name="dwReserved"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IOleComponent2.OnAppActivate(System.Int32,System.UInt32)">
      <param name="fActive"></param>
      <param name="dwOtherThreadID"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IOleComponent2.OnEnterState(System.UInt32,System.Int32)">
      <param name="uStateID"></param>
      <param name="fEnter"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IOleComponent2.OnHandleSignaled(System.UInt32,System.IntPtr,System.Boolean@)">
      <summary>When overridden in a derived class, enables the component to respond to a signal on a wait handle.</summary>
      <returns>An error code (HRESULT) value that indicates the status of the operation.</returns>
      <param name="nHandle">The zero-based index of the handle that was signaled.</param>
      <param name="pvLoopData">The object that was passed in <paramref name="pvLoopData" /> when <see cref="M:Microsoft.VisualStudio.OLE.Interop.IOleComponentManager.FPushMessageLoop(System.UInt32,System.UInt32,System.IntPtr)" /> was called for this component.</param>
      <param name="pfContinue">When this method returns, contains true to have this component re-enter the message loop, or false to exit the message loop immediately.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IOleComponent2.OnLoseActivation"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IOleComponent2.OnTimeout(System.IntPtr,System.Boolean@)">
      <summary>When overridden in a derived class, enables the component to respond to a time-out on the message loop.</summary>
      <returns>An error code (HRESULT) value that indicates the status of the operation.</returns>
      <param name="pvLoopData">The object that was passed in <paramref name="pvLoopData" /> when <see cref="M:Microsoft.VisualStudio.OLE.Interop.IOleComponentManager.FPushMessageLoop(System.UInt32,System.UInt32,System.IntPtr)" /> was called for this component.</param>
      <param name="pfContinue">true to have this component re-enter the message loop; false to exit the message loop immediately.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IOleComponent2.Terminate"></member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsComponentSelectorDlg3"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsComponentSelectorDlg3.ComponentSelectorDlg3(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsComponentUser,System.String,System.String,System.Guid@,System.Guid@,System.String,System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORTABINIT[],System.String,System.String@,System.UInt32)">
      <summary>Displays Browse … Dialog and returns selected components.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="grfFlags">Component selection flags taken from the VSCOMPSELFLAGS enumerator.</param>
      <param name="pUser">Interface on which AddComponent will be called.</param>
      <param name="lpszDlgTitle">Dialog box caption (null == "Select component").</param>
      <param name="lpszHelpTopic">F1 help topic (null == "VS.ComponentPicker")</param>
      <param name="rguidShowOnlyThisTab">Tab to show exclusively.</param>
      <param name="rguidStartOnThisTab">Tab to show when the dialog opens</param>
      <param name="pszMachineName">Enumerate COM components on this computer.</param>
      <param name="cTabInitializers">Number of tab initialization structs in <paramref name="prgcstiTabInitializers" />.</param>
      <param name="prgcstiTabInitializers">Tab initialization information</param>
      <param name="pszBrowseFilters">List of filters to use in 'Browse…' dialog.</param>
      <param name="pbstrBrowseLocation">Directory (initial/return value) to start the 'Browse…' dialog in.</param>
      <param name="targetVersion">Target framework version</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsComponentSelectorDlg3.ComponentSelectorDlg4(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsComponentUser,System.UInt32,System.IntPtr[],System.String,System.String,System.UInt32@,System.UInt32@,System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORTABINIT[],System.Guid@,System.String,System.String@,System.UInt32)">
      <summary>Displays Browse … Dialog and returns selected components.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="grfFlags">Component selection flags taken from the VSCOMPSELFLAGS2 enumerator.</param>
      <param name="pUser">Interface on which AddComponent will be called.</param>
      <param name="cComponents">Number of components in the <paramref name="rgpcsdComponents" /> array.</param>
      <param name="rgpcsdComponents">Prepopulation of Selected Components. Can be null. User has the ability to remove any of these components from the list.</param>
      <param name="lpszDlgTitle">Dialog box caption (null == "Select component").</param>
      <param name="lpszHelpTopic">F1 help topic (null == "VS.ComponentPicker")</param>
      <param name="pxDlgSize">0 to use default.</param>
      <param name="pyDlgSize">0 to use default.</param>
      <param name="cTabInitializers">Number of tabs.</param>
      <param name="rgcstiTabInitializers">Show order of tabs and their initialization info.</param>
      <param name="pguidStartOnThisTab">Tab to show when the dialog starts up</param>
      <param name="pszBrowseFilters">List of filters to use in 'Browse…'.</param>
      <param name="pbstrBrowseLocation">Directory (initial/return value) to start the 'Browse…' dialog in.</param>
      <param name="targetVersion"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsEditorFactory2">
      <summary>Creates instances of document view objects and of data objects.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsEditorFactory2.RetargetCodeOrDesignerToOpen(System.String,System.Guid@,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.UInt32@,System.UInt32@,System.Guid@,System.String@,System.Guid@)">
      <summary>Re-targets the item opened by View commands.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszMkDocumentSource">Original document to open</param>
      <param name="rguidLogicalViewSource">A view specified by a <see cref="T:Microsoft.VisualStudio.Shell.Interop.LogicalViewID" />  value.</param>
      <param name="pvHier">A <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> hierarchy object.</param>
      <param name="itemidSource">A DWORD uniquely identifying the source node within a <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" />.</param>
      <param name="pitemidTarget">A DWORD uniquely identifying the target node within a <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" />.</param>
      <param name="pgrfEditorFlags">A <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSSPECIFICEDITORFLAGS" /> value specifying editor options.</param>
      <param name="pguidEditorTypeTarget">A GUID specifying the new target editor type.</param>
      <param name="pbstrPhysicalViewTarget">A string specifying the physical view target.</param>
      <param name="pguidLogicalViewTarget">A GUID specifying the logical view target.s</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsENCRebuildableProjectCfg"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsENCRebuildableProjectCfg.BelongToProject(System.String,Microsoft.VisualStudio.Shell.Interop.ENC_REASON,System.Int32)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsENCRebuildableProjectCfg.CancelENC"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsENCRebuildableProjectCfg.ENCComplete(System.Int32)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsENCRebuildableProjectCfg.ENCRebuild(System.Object,System.Object@)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsENCRebuildableProjectCfg.ENCRelink(System.Object)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsENCRebuildableProjectCfg.SetENCProjectBuildOption(System.Guid@,System.String)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsENCRebuildableProjectCfg.StartDebugging"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsENCRebuildableProjectCfg.StopDebugging"></member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsENCRebuildableProjectCfg2"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsENCRebuildableProjectCfg2.BuildForEnc(System.Object)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsENCRebuildableProjectCfg2.EncApplySucceeded(System.Int32)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsENCRebuildableProjectCfg2.EnterBreakStateOnPE(System.UInt32,Microsoft.VisualStudio.Shell.Interop.ENC_ACTIVE_STATEMENT[],System.UInt32)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsENCRebuildableProjectCfg2.ExitBreakStateOnPE"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsENCRebuildableProjectCfg2.GetCurrentActiveStatementPosition(System.UInt32,Microsoft.VisualStudio.TextManager.Interop.TextSpan[])"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsENCRebuildableProjectCfg2.GetCurrentExceptionSpanPosition(System.UInt32,Microsoft.VisualStudio.TextManager.Interop.TextSpan[])"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsENCRebuildableProjectCfg2.GetENCBuildState(Microsoft.VisualStudio.Shell.Interop.ENC_BUILD_STATE[])"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsENCRebuildableProjectCfg2.GetExceptionSpanCount(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsENCRebuildableProjectCfg2.GetExceptionSpans(System.UInt32,Microsoft.VisualStudio.Shell.Interop.ENC_EXCEPTION_SPAN[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsENCRebuildableProjectCfg2.GetPEBuildTimeStamp(Microsoft.VisualStudio.OLE.Interop.FILETIME[])"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsENCRebuildableProjectCfg2.GetPEidentity(System.Guid[],System.String[])"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsENCRebuildableProjectCfg2.StartDebuggingPE"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsENCRebuildableProjectCfg2.StopDebuggingPE"></member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsFileUpgrade2">
      <summary>Performs file upgrades for specified versions as part of a project upgrade.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFileUpgrade2.UpgradeFile(System.String,System.String,System.Int32,Microsoft.VisualStudio.Shell.Interop.IVsUpgradeLogger,System.UInt16,System.UInt16,System.UInt16,System.UInt16,System.Int32@)">
      <summary>Upgrade project with a specified file.</summary>
      <param name="bstrProjectName">[in] String containing the name of the project the file belongs to.</param>
      <param name="bstrFileName">[in] String containing the full path and name of the file to upgrade.</param>
      <param name="bNoBackup">[in] Boolean. If true, no backup file is created.</param>
      <param name="pLogger">[in] Pointer to a <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsUpgradeLogger" /> interface to use for logging upgrade actions.</param>
      <param name="oldToolsVersionMajor">[in] Major version of old tool.</param>
      <param name="oldToolsVersionMinor">[in] Minor version of old tool.</param>
      <param name="newToolsVersionMajor">[in] Major version of new tool.</param>
      <param name="newToolsVersionMinor">[in] Minor version of new tool.</param>
      <param name="pUpgradeRequired">[out] Boolean. Set to true if the upgrade succeeded.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFileUpgrade2.UpgradeFile_CheckOnly(System.String,System.String,System.Int32,Microsoft.VisualStudio.Shell.Interop.IVsUpgradeLogger,System.UInt16,System.UInt16,System.UInt16,System.UInt16,System.Int32@)">
      <summary>Check if a specified tool can be upgraded.</summary>
      <param name="bstrProjectName">[in] String containing the name of the project the file belongs to.</param>
      <param name="bstrFileName">[in] String containing the full path and name of the file to upgrade.</param>
      <param name="bNoBackup">[in] Boolean. If true, no backup file is created.</param>
      <param name="pLogger">[in] Pointer to a <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsUpgradeLogger" /> interface to use for logging upgrade actions.</param>
      <param name="oldToolsVersionMajor">[in] Major version of old tool.</param>
      <param name="oldToolsVersionMinor">[in] Minor version of old tool.</param>
      <param name="newToolsVersionMajor">[in] Major version of new tool.</param>
      <param name="newToolsVersionMinor">[in] Minor version of new tool.</param>
      <param name="pUpgradeRequired">[out] Boolean. Set to true if the upgrade is possible.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsFindSymbol2">
      <summary>Implements the search done by the FindSymbol menu command, with support for multiple frameworks. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFindSymbol2.DoSearch(System.Guid@,System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2[])">
      <summary>Performs the search.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="guidSymbolScope">[in] A GUID specifying the search scope or the GUID of a library.</param>
      <param name="dwSubID">[in] Scope subID. Must be zero unless <paramref name="guidSymbolScope" /> is GUID_VsSymbolScope_Frameworks.</param>
      <param name="pobSrch">[in] Bit flags indicating search options. Constructed using values from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSOBSEARCHOPTIONS2" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFindSymbol2.GetUserOptions(System.Guid@,System.UInt32@,Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2[])">
      <summary>Returns the search options.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pguidScope">[out] A GUID specifying the search scope.</param>
      <param name="pdwSubID">[out] Scope subID. Must be zero unless <paramref name="guidSymbolScope" /> is GUID_VsSymbolScope_Frameworks.</param>
      <param name="pobSrch">[out] Bit flags indicating search options. Constructed using values from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSOBSEARCHOPTIONS2" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFindSymbol2.SetUserOptions(System.Guid@,System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2[])">
      <summary>Sets search options.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="guidScope">[in] A GUID specifying the search scope.</param>
      <param name="dwSubID">[in] Scope subID. Must be zero unless <paramref name="guidSymbolScope" /> is GUID_VsSymbolScope_Frameworks.</param>
      <param name="pobSrch">[in] Bit flags indicating search options. Constructed using values from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSOBSEARCHOPTIONS2" /> enumeration.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsFindSymbolEvents2">
      <summary>Outgoing interface for events, such as changes in search options, related to the Find Symbol command, with support for multiple frameworks. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFindSymbolEvents2.OnUserOptionsChanged(System.Guid@,System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2[])">
      <summary>Defines the method called when user search options change.</summary>
      <param name="guidSymbolScope">[in] A GUID specifying the search scope or the GUID of a library.</param>
      <param name="dwSubID">[in] Scope subID. Must be zero unless <paramref name="guidSymbolScope" /> is GUID_VsSymbolScope_Frameworks.</param>
      <param name="pobSrch">[in] Bit flags indicating search options. Constructed using values from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSOBSEARCHOPTIONS2" /> enumeration.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsLaunchPad3"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsLaunchPad3.ExecCommandWithElevationIfRequired(System.String,System.String,System.String)"></member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsMSBuildHostObject">
      <summary>Enables the project system to communicate with MSBuild host objects.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsMSBuildHostObject.BeginBuild">
      <summary>Begins a build.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsMSBuildHostObject.Close">
      <summary>Closes a build host object.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsMSBuildHostObject.EndBuild">
      <summary>Ends a build.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsMSBuildHostObject.Init(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,Microsoft.VisualStudio.OLE.Interop.IServiceProvider)">
      <summary>Initializes a build host object.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHier">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface to the project.</param>
      <param name="pSP">[in] A <see cref="T:Microsoft.VisualStudio.OLE.Interop.IServiceProvider" /> interface to the service provider.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsMSBuildTaskFileManager">
      <summary>Enables MSBuild to use memory instead of disk files for Intellisense builds.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsMSBuildTaskFileManager.Delete(System.String)">
      <summary>Deletes a file on disk and removes it from the RDT.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code. This method returns <see cref="F:Microsoft.VisualStudio.VSConstants.E_FAIL" /> if the document is in the RDT and something else has a lock on it which cannot be removed automatically.</returns>
      <param name="wszFilename">[in] The name of the file to delete.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsMSBuildTaskFileManager.Exists(System.String,System.Int32,System.Int32@)">
      <summary>Determines if a file exists in the RDT or on disk.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="wszFilename">[in] The name of the file.</param>
      <param name="fOnlyCheckOnDisk">[in] A Boolean value. Set to true to restrict the check to files on disk.</param>
      <param name="pfExists">[out] A Boolean value. Set to true if the file exists.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsMSBuildTaskFileManager.GetFileContents(System.String,System.String@)">
      <summary>Gets the contents of a specified file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="wszFilename">[in] Name of the file to get.</param>
      <param name="pbstrFileContents">[out] The contents of the file.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsMSBuildTaskFileManager.GetFileDocData(System.String,System.IntPtr@)">
      <summary>Gets the DocData object for a file registered in the RDT.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code. If the specified file is not registered in the RDT, it returns NULL.</returns>
      <param name="wszFilename">[in] The name of the file.</param>
      <param name="ppunkDocData">[out] A pointer to the DocData object interface.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsMSBuildTaskFileManager.GetFileLastChangeTime(System.String,Microsoft.VisualStudio.OLE.Interop.FILETIME[])">
      <summary>Gets the time of the last change to a file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="wszFilename">[in] The name of the file.</param>
      <param name="pFileTime">[out] A <see cref="T:Microsoft.VisualStudio.OLE.Interop.FILETIME" /> value specifying the last change time.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsMSBuildTaskFileManager.IsRealBuildOperation(System.Int32@)">
      <summary>Determines if a build is real or for design-time Intellisense.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pfIsRealBuild">[out] A Boolean value; true if the build is a real build, otherwise 6 if the build is for design-time generation for Intellisense.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsMSBuildTaskFileManager.PutGeneratedFileContents(System.String,System.String)">
      <summary>Puts the contents of a generated file into an in-memory buffer and registers it in the RDT.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.Returns <see cref="F:Microsoft.VisualStudio.VSConstants.E_FAIL" /> if the document is in the RDT and something else has a lock on it which cannot be removed automatically.</returns>
      <param name="wszFilename"></param>
      <param name="wszFileContents"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsOutputWindowPane2">
      <summary>Writes a string to the output window, and also creates an entry in the Error List.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsOutputWindowPane2.OutputTaskItemStringEx2(System.String,Microsoft.VisualStudio.Shell.Interop.VSTASKPRIORITY,Microsoft.VisualStudio.Shell.Interop.VSTASKCATEGORY,System.String,System.Int32,System.String,System.UInt32,System.UInt32,System.String,System.String,System.String)">
      <summary>Adds a string to the Output window and a corresponding item to the error list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszOutputString">[in] Output string of the task item.</param>
      <param name="nPriority">[in] Priority of the task item whose values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSTASKPRIORITY" /> enumeration.</param>
      <param name="nCategory">[in] Category of the task item whose values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSTASKCATEGORY" /> enumeration.</param>
      <param name="pszSubcategory">[in] Subcategory of the task.</param>
      <param name="nBitmap">[in] Bitmap of the task item whose values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._vstaskbitmap" /> enumeration.</param>
      <param name="pszFileName">[in] Name of the file containing <paramref name="pszOutputString" />.</param>
      <param name="nLineNum">[in] Line number in <paramref name="pszFilename" />.</param>
      <param name="nColumn">[in] Zero-based column in <paramref name="pszFilename" />.</param>
      <param name="pszProjectUniqueName">[in] The unique name of the project for the Error List entry. May be null if no project is associated with the error.</param>
      <param name="pszTaskItemText">[in] Text of the task item.</param>
      <param name="pszLookupKwd">
        <see cref="F:Microsoft.VisualStudio.Shell.Interop.VSUSERCONTEXTATTRIBUTEUSAGE.VSUC_Usage_LookupF1" /> keyword string.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsPackage2">
      <summary>Makes properties of a VSPackage available.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPackage2.get_CanClose(System.Boolean@)">
      <summary>Specifies whether a package can be closed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pfCanClose">[out] Boolean value. true if the package does not have to block shutdown of the integrated development environment (IDE).</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsProjectFlavorUpgradeViaFactory">
      <summary>Upgrades flavored projects using a project factory.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProjectFlavorUpgradeViaFactory.OnUpgradeProjectFlavorCancelled(System.String)">
      <param name="pszFileName">The file upgrade is cancelled.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProjectFlavorUpgradeViaFactory.UpgradeProjectFlavor(System.String,Microsoft.VisualStudio.Shell.Interop.IVsUpgradeBuildPropertyStorage,System.String,System.String,Microsoft.VisualStudio.Shell.Interop.IVsUpgradeLogger,System.Int32@,System.String[],System.String[],System.Guid@)">
      <summary>Upgrades a flavored project.</summary>
      <param name="pszFileName">Name of file to upgrade.</param>
      <param name="pUpgradeBuildPropStg">Used to read and update build related properties and imports.</param>
      <param name="pszProjFileXMLFragment">Project file XML fragment.</param>
      <param name="pszUserFileXMLFragment">Project user file XML fragment.</param>
      <param name="pLogger">A <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsUpgradeLogger" /> upgrade logger.</param>
      <param name="pUpgradeRequired">Specifies upgrade is required.</param>
      <param name="pbstrUpgradedProjFileXMLFragment">XML fragment returned by the flavored project.</param>
      <param name="pbstrUpgradedUserFileXMLFragment">XML fragment returned by the flavored user project.</param>
      <param name="pguidNewProjectFactory">Pointer to the project factory.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProjectFlavorUpgradeViaFactory.UpgradeProjectFlavor_CheckOnly(System.String,Microsoft.VisualStudio.Shell.Interop.IVsUpgradeBuildPropertyStorage,System.String,System.String,Microsoft.VisualStudio.Shell.Interop.IVsUpgradeLogger,System.Int32@,System.Guid@)">
      <summary>Checks if a flavored project upgrade is possible.</summary>
      <param name="pszFileName">Name of file to upgrade.</param>
      <param name="pUpgradeBuildPropStg">Used to read and update build related properties and imports.</param>
      <param name="pszProjFileXMLFragment">Project file XML fragment.</param>
      <param name="pszUserFileXMLFragment">Project user file XML fragment.</param>
      <param name="pLogger">A <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsUpgradeLogger" /> upgrade logger.</param>
      <param name="pUpgradeRequired">Specifies upgrade is required.</param>
      <param name="pguidNewProjectFactory">Pointer to the project factory.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsProjectServerHost">
      <summary>Enables a project to start or stop its hosted server.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProjectServerHost.GetServerUrl(System.String@)">
      <summary>Gets the URL of the hosted server.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrUrl">Url of the hosted server.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProjectServerHost.IsServerRunning(System.Int32@)">
      <summary>Determines whether the hosted server is running.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="fIsRunning">True if the hosted server is currently running.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProjectServerHost.StartServer(System.String,System.UInt32@)">
      <summary>Creates a process for a hosted server.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrEnvironment">Environment in which to start the server. If not specified, the default environment is used.</param>
      <param name="pdwProcessId">The ID of the new process.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProjectServerHost.StopServer">
      <summary>Stops a hosted server</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsQueryEditQuerySave3">
      <summary>Indicates to the environment or source control package that a file is about to be changed in memory or saved.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsQueryEditQuerySave3.QuerySaveFile2(System.String,System.UInt32[],Microsoft.VisualStudio.Shell.Interop.VSQEQS_FILE_ATTRIBUTE_DATA[],System.UInt32@,System.UInt32@)">
      <summary>Notifies the environment that a file is about to be saved.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszMkDocument">[in] Path to the file (document to be saved) on the disk.</param>
      <param name="rgf">[in] Flags whose values for valid file attributes are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.tagVSQEQSFlags" /> enumeration. The default value is zero.</param>
      <param name="pFileInfo">[in] Values taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSQEQS_FILE_ATTRIBUTE_DATA" /> structure containing information about the file attributes. Can be null; is ignored if <paramref name="rgf" /> is 0.</param>
      <param name="pdwQSResult">[out] A value taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.tagVSQuerySaveResult" /> enumeration specifying the results of a QuerySave.</param>
      <param name="prgfMoreInfo">[out] A value taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.tagVSQuerySaveResultFlags" /> enumeration specifying the results of a QuerySave.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsQueryEditQuerySave3.QuerySaveFiles2(System.UInt32[],System.Int32,System.String[],System.UInt32[],Microsoft.VisualStudio.Shell.Interop.VSQEQS_FILE_ATTRIBUTE_DATA[],System.UInt32@,System.UInt32@)">
      <summary>Notifies the environment that multiple files are about to be saved.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="rgfQuerySave">[in] Flags are currently unused. The caller should always pass in the default null flag, which is zero.</param>
      <param name="cFiles">[in] File count.</param>
      <param name="rgpszMkDocuments">[in] Path to the file on the disk.</param>
      <param name="rgrgf">[in] Flags whose values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.tagVSQEQSFlags" /> enumeration for valid file attributes. Default = 0.</param>
      <param name="rgFileInfo">[in] Values taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSQEQS_FILE_ATTRIBUTE_DATA" /> structure containing information about the file attributes. Can be null; is ignored if <paramref name="rgf" /> is 0.</param>
      <param name="pdwQSResult">[out] A value taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.tagVSQuerySaveResult" /> enumeration specifying the results of a QuerySave.</param>
      <param name="prgfMoreInfo">[out] A value taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.tagVSQuerySaveResultFlags" /> enumeration specifying the results of a QuerySave.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsShell3">
      <summary>Supplies shell services in addition to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsShell" /> interface. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsShell3.IsRunningElevated(System.Boolean@)">
      <summary>Check to see if the application is running as an admin.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pElevated">True if application is running as an admin.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsShell3.RestartElevated">
      <summary>Restart the application, asking for credentials from the user if not running as administrator, or start as admin if the user has admin privileges.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSymbolicNavigationManager"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSymbolicNavigationManager.OnBeforeNavigateToSymbol(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.String,System.Int32@)">
      <param name="pHierCodeFile"></param>
      <param name="itemidCodeFile"></param>
      <param name="pszRQName"></param>
      <param name="pfNavigationHandled"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSymbolicNavigationManager.QueryNavigateToSymbol(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.String,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy@,System.UInt32@,Microsoft.VisualStudio.TextManager.Interop.TextSpan[],System.Int32@)">
      <param name="pHierCodeFile"></param>
      <param name="itemidCodeFile"></param>
      <param name="pszRQName"></param>
      <param name="ppHierToNavigate"></param>
      <param name="pitemidToNavigate"></param>
      <param name="pSpanToNavigate"></param>
      <param name="pfWouldNavigate"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSymbolicNavigationManager.RegisterSymbolicNavigationNotify(Microsoft.VisualStudio.Shell.Interop.IVsSymbolicNavigationNotify,System.UInt32@)">
      <param name="pNotify"></param>
      <param name="pdwCookie"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSymbolicNavigationManager.UnregisterSymbolicNavigationNotify(System.UInt32)">
      <param name="dwCookie"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSymbolicNavigationNotify">
      <summary>Facilitates redirection of Goto Definition on a code symbol.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSymbolicNavigationNotify.OnBeforeNavigateToSymbol(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.String,System.Int32@)">
      <summary>Determines if there is an alternate source file to navigate to for a code symbol.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHierCodeFile">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> representing the hierarchy of the code-file that the code language service would otherwise navigate to.</param>
      <param name="itemidCodeFile">[in] itemid of the code-file that the code language service would otherwise navigate to</param>
      <param name="pszRQName">[in] RQName-syntax string that identifies the symbol that is the target of the navigation</param>
      <param name="pfNavigationHandled">[out] Returns true if navigation to symbol has been handled; false if the caller should do normal navigation</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSymbolicNavigationNotify.QueryNavigateToSymbol(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.String,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy@,System.UInt32@,Microsoft.VisualStudio.TextManager.Interop.TextSpan[],System.Int32@)">
      <summary>Returns the alternate navigation target for the symbol if there is one.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHierCodeFile">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> representing the hierarchy of the code-file that the code language service would otherwise navigate to.</param>
      <param name="itemidCodeFile">[in] itemid of the code-file that the code language service would otherwise navigate to</param>
      <param name="pszRQName">[in] RQName-syntax string that identifies the symbol that is the target of the navigation</param>
      <param name="ppHierToNavigate">[out] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> representing the hierarchy of alternate navigation target that is, for the source document that generates the code file).</param>
      <param name="pitemidToNavigate">[out] itemid for the hierarchy of alternate navigation.</param>
      <param name="pSpanToNavigate">[out] A <see cref="T:Microsoft.VisualStudio.TextManager.Interop.TextSpan" /> representing the location of symbol in alternate navigation target. Set to (0,0,0,0) if the source is not a Text document.</param>
      <param name="pfWouldNavigate">[out] Returns true if alternate navigation target is returned; otherwise returns false.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsTargetFrameworkAssemblies">
      <summary>Provides base support for targeting multiple framework versions.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTargetFrameworkAssemblies.GetRequiredTargetFrameworkVersion(System.String,System.UInt32@)">
      <summary>Gets the minimum versions of the target framework required for the given assembly to run.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="szAssemblyFile">[in] Path to the assembly to check.</param>
      <param name="pTargetFrameworkVersion">[out] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.WellKnownTargetFrameworkVersions" /> value specifying the required framework version.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTargetFrameworkAssemblies.GetRequiredTargetFrameworkVersionFromDependency(System.String,System.UInt32@)">
      <summary>Gets the minimum versions of the target framework required for a given assembly to run, based on the referenced assembly closure.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="szAssemblyFile">[in] Path to the assembly to check.</param>
      <param name="pTargetFrameworkVersion">[out] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.WellKnownTargetFrameworkVersions" /> value specifying the required framework version.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTargetFrameworkAssemblies.GetSupportedFrameworks(Microsoft.VisualStudio.Shell.Interop.IEnumTargetFrameworks@)">
      <summary>Gets an enumeration of supported framework versions.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pTargetFrameworks">[out] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.IEnumTargetFrameworks" /> value specifying the supported framework version.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTargetFrameworkAssemblies.GetSystemAssemblies(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IEnumSystemAssemblies@)">
      <summary>Gets an enumeration containing the system assembly reference for a given framework version.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="targetVersion">[out] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.WellKnownTargetFrameworkVersions" /> value specifying the required framework version.</param>
      <param name="pAssemblies">[out] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.IEnumSystemAssemblies" /> value specifying the required framework version.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTargetFrameworkAssemblies.GetTargetFrameworkDescription(System.UInt32,System.String@)">
      <summary>Gets a descriptive string for a framework version.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="targetVersion">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.WellKnownTargetFrameworkVersions" /> value specifying the required framework version.</param>
      <param name="pszDescription">[out] String describing the framework version.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTargetFrameworkAssemblies.IsSystemAssembly(System.String,System.Int32@,System.UInt32@)">
      <summary>Checks if a specified assembly is a system assembly and gets its framework version.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="szAssemblyFile">[in] Path to the assembly to check.</param>
      <param name="pIsSystem">[out] True if the assembly is a system assembly.</param>
      <param name="pTargetFrameworkVersion">[out] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.IEnumTargetFrameworks" /> value specifying the supported framework version.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsToolbox4">
      <summary>Provides persistence and localization support for a Toolbox. Extends, but does not inherit from, <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsToolbox3" />. You can get an instance of the interface from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsToolbox" /> (SID_SVsToolbox) service.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsToolbox4.ExpandTab(System.String,System.Int32)">
      <param name="lpszTabID">[in] The localized name of the Toolbox tab.</param>
      <param name="fExpand">[in] Tab state.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsUIShell3">
      <summary>Extends the functionality of the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsUIShell" /> interface by providing access to additional window functionalities.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIShell3.ReportErrorInfo2(System.Int32,System.Boolean)">
      <summary>Report error information, allowing the caller to suppress the UAC dialog box.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="hr">[in] The HRESULT to display.</param>
      <param name="Suppress">[in] True to suppress display of the dialog box.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIShell3.SuppressRestart(System.Boolean)">
      <summary>Enable and disable showing the User Account Control (UAC) restart dialog box.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="Suppress">[in] True to suppress display of the dialog box.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsUpgradeBuildPropertyStorage">
      <summary>Upgrades build-related information in a project file.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUpgradeBuildPropertyStorage.AddNewImport(System.String,System.String)">
      <summary>Add a new import to a project file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszImportPath">[in] Path to the file to import.</param>
      <param name="pszImportCondition">[in] Condition to be evaluated.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUpgradeBuildPropertyStorage.GetImports(System.Array@,System.Array@)">
      <summary>Gets multiple imports from a project file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="prgImportPaths">[in] Array of paths to the files to import.</param>
      <param name="prgImportConditions">[in] Array of conditions to be evaluated.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUpgradeBuildPropertyStorage.GetPropertyValue(System.String,System.String,System.UInt32,System.String@)">
      <summary>Gets the value of a specified property from a project file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszPropName">[in] Name of the property</param>
      <param name="pszConfigName">[in] Configuration associated with the property</param>
      <param name="storage">[in] <see cref="T:Microsoft.VisualStudio.Shell.Interop._PersistStorageType" /> specifying whether the property is stored in a project or user file.</param>
      <param name="pbstrPropValue">[out] Value of the property</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUpgradeBuildPropertyStorage.RemoveImport(System.String,System.String)">
      <summary>Removes an import from a project file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszImportPath"></param>
      <param name="pszImportCondition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUpgradeBuildPropertyStorage.RemoveProperty(System.String,System.String,System.UInt32)">
      <summary>Removes a property from a project file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszPropName">[in] Name of the property</param>
      <param name="pszConfigName">[in] Configuration associated with the property</param>
      <param name="storage">[in] <see cref="T:Microsoft.VisualStudio.Shell.Interop._PersistStorageType" /> specifying whether the property is stored in a project or user file.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUpgradeBuildPropertyStorage.ReplaceImport(System.String,System.String,System.String,System.String)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUpgradeBuildPropertyStorage.SetPropertyValue(System.String,System.String,System.UInt32,System.String)">
      <summary>Sets a property value in a project file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszPropName">[in] Name of the property</param>
      <param name="pszConfigName">[in] Configuration associated with the property</param>
      <param name="storage">[in] <see cref="T:Microsoft.VisualStudio.Shell.Interop._PersistStorageType" /> specifying whether the property is stored in a project or user file.</param>
      <param name="pszPropValue">[out] Value of the property</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsUserSettingsMigration">
      <summary>Migrates user settings.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUserSettingsMigration.MigrateSettings(Microsoft.VisualStudio.Shell.Interop.IVsSettingsReader,Microsoft.VisualStudio.Shell.Interop.IVsSettingsWriter,System.String)">
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pSettingsReader">[in] <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSettingsReader" /> to access configuration information.</param>
      <param name="pSettingsWriter">[in] <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSettingsWriter" /> to write configuration information.</param>
      <param name="pszGuidCategory">Guid representing settings category.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsWebAppMigration">
      <summary>Provides methods to migrate web projects.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWebAppMigration.CanConvertToWebApp(System.String,System.Int32@,System.String@)">
      <summary>Determines if a project file can be converted to MSBuild format.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="lpszProjectPath">[in] path to the old project file.</param>
      <param name="pConverToWebApp">[out] Boolean value; true if the project can be converted.</param>
      <param name="pbstrNewProjPath">[out] Path to the new project.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWebAppMigration.ConvertProjFileToWebAppProj(System.String,System.Guid@)">
      <summary>Converts a project file to a Web Application project file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="lpszProjectPath">[in] Path to the project.</param>
      <param name="pProjectFactoryGuid">[out] GUID for the project factory.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsWebMigration"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWebMigration.GetBaseType(System.String,System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWebMigration.LoadAssembly(System.String)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWebMigration.Unload"></member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsWebMigrationService"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWebMigrationService.GetProjectSCCInfo(System.String,System.String[],System.String[],System.String[],System.String[])"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWebMigrationService.IsWebProject(System.String,System.Int32@)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWebMigrationService.MigrateWeb(Microsoft.VisualStudio.Shell.Interop.IVsProject,System.String,System.String)"></member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsWebProxy">
      <summary>Web proxy service interface.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWebProxy.PrepareWebProxy(System.String,System.UInt32,System.UInt32@,System.Int32)">
      <summary>Prepares the web proxy for a web call by attaching credentials to it.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="strWebCallUrl">[in] The URL for the web call.</param>
      <param name="oldProxyState">[in] A <see cref="Microsoft.VisualStudio.Shell.Interop.__VsWebProxyState" /> value specifying the current proxy state for the web call.</param>
      <param name="newProxyState">[out] A <see cref="Microsoft.VisualStudio.Shell.Interop.__VsWebProxyState" /> value specifying the new proxy state for the web call.</param>
      <param name="fOkToPrompt">[in] Prompt user for credentials if they are not available.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsWebService3"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWebService3.DiscoveryUrl(System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWebService3.Endpoints(System.Array@)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWebService3.GetMexWebServiceEndpoint(System.String,Microsoft.VisualStudio.Shell.Interop.IVsWebServiceEndpoint@)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWebService3.GetWebServiceEndpoint(System.String,Microsoft.VisualStudio.Shell.Interop.IVsWebServiceEndpoint@)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWebService3.MexEndpoints(System.Array@)"></member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsWebServiceEndpoint"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWebServiceEndpoint.Url(System.String@)"></member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsWebServiceProviderDebug"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWebServiceProviderDebug.GetDebugEngineFilter(Microsoft.VisualStudio.Shell.Interop.VsDebugEngineFilter[])"></member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsSymbolicNavigationManager"></member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsTargetFrameworkAssemblies">
      <summary>Passed to <see cref="M:System.IServiceProvider.GetService(System.Type)" /> to return a reference to <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsTargetFrameworkAssemblies" />.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsWebProxy">
      <summary>Passed to <see cref="M:System.IServiceProvider.GetService(System.Type)" /> to return a reference to <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsWebProxy" />.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.tagVSQuerySaveResultFlags">
      <summary>Specifies results of a QuerySave operation.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.tagVSQuerySaveResultFlags.QSR_DefaultFlag">
      <summary>Default flag.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.tagVSQuerySaveResultFlags.QSR_Reloaded">
      <summary>A file involved in the operation was checked out and a new version was retrieved from the source control database</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.tagVSQuerySaveResultFlags.QSR_Changed">
      <summary>A file involved in the operation was checked out. A new version was retrieved from the source control database and the file was reloaded in the editor or in the shell (if the file is a project or solution file).</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.VsDebugEngineFilter"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugEngineFilter.dwDebugEngineCount"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugEngineFilter.pDebugEngines"></member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.VsMSBuildTaskFileManager"></member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.VsMSBuildTaskFileManagerClass"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.VsMSBuildTaskFileManagerClass.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.VsMSBuildTaskFileManagerClass.BeginBuild"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.VsMSBuildTaskFileManagerClass.Close"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.VsMSBuildTaskFileManagerClass.Delete(System.String)">
      <param name="wszFilename"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.VsMSBuildTaskFileManagerClass.EndBuild"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.VsMSBuildTaskFileManagerClass.Exists(System.String,System.Int32,System.Int32@)">
      <param name="wszFilename"></param>
      <param name="fOnlyCheckOnDisk"></param>
      <param name="pfExists"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.VsMSBuildTaskFileManagerClass.GetFileContents(System.String,System.String@)">
      <param name="wszFilename"></param>
      <param name="pbstrFileContents"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.VsMSBuildTaskFileManagerClass.GetFileDocData(System.String,System.IntPtr@)">
      <param name="wszFilename"></param>
      <param name="ppunkDocData"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.VsMSBuildTaskFileManagerClass.GetFileLastChangeTime(System.String,Microsoft.VisualStudio.OLE.Interop.FILETIME[])">
      <param name="wszFilename"></param>
      <param name="pFileTime"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.VsMSBuildTaskFileManagerClass.Init(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,Microsoft.VisualStudio.OLE.Interop.IServiceProvider)">
      <param name="pHier"></param>
      <param name="pSP"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.VsMSBuildTaskFileManagerClass.IsRealBuildOperation(System.Int32@)">
      <param name="pfIsRealBuild"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.VsMSBuildTaskFileManagerClass.PutGeneratedFileContents(System.String,System.String)">
      <param name="wszFilename"></param>
      <param name="wszFileContents"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.VsSymbolicNavigationManager"></member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.VsSymbolicNavigationManagerClass"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.VsSymbolicNavigationManagerClass.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.VsSymbolicNavigationManagerClass.OnBeforeNavigateToSymbol(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.String,System.Int32@)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.VsSymbolicNavigationManagerClass.QueryNavigateToSymbol(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.String,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy@,System.UInt32@,Microsoft.VisualStudio.TextManager.Interop.TextSpan[],System.Int32@)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.VsSymbolicNavigationManagerClass.RegisterSymbolicNavigationNotify(Microsoft.VisualStudio.Shell.Interop.IVsSymbolicNavigationNotify,System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.VsSymbolicNavigationManagerClass.UnregisterSymbolicNavigationNotify(System.UInt32)"></member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.WellKnownTargetFrameworkVersions">
      <summary>Represents the version number of a target framework.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.WellKnownTargetFrameworkVersions.TargetFrameworkVersion_Unknown">
      <summary>Unknown version.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.WellKnownTargetFrameworkVersions.TargetFrameworkVersion_20">
      <summary>Version 2.0.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.WellKnownTargetFrameworkVersions.TargetFrameworkVersion_30">
      <summary>Version 3.0.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.WellKnownTargetFrameworkVersions.TargetFrameworkVersion_35">
      <summary>Version 3.5.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.WellKnownToolboxDataFormats">
      <summary>Represents a toolbox data format.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.WellKnownToolboxDataFormats.MinimumRequiredFrameworkVersion">
      <summary>Represents the minimum version of the framework required.</summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Assemblies\v2.0\Microsoft.VisualStudio.Shell.Interop.8.0.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.VisualStudio.Shell.Interop.8.0</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.SBindHost">
      <summary>Passed to the <see cref="M:Microsoft.VisualStudio.OLE.Interop.IServiceProvider.QueryService(System.Guid@,System.Guid@,System.IntPtr@)" /> method to return a reference to the <see cref="T:Microsoft.VisualStudio.OLE.Interop.IBindHost" /> interface.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.SContainerDispatch">
      <summary>Passed to the <see cref="M:Microsoft.VisualStudio.OLE.Interop.IServiceProvider.QueryService(System.Guid@,System.Guid@,System.IntPtr@)" /> method to return a reference to the IDispatch Interface.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.SOleUndoManager">
      <summary>Passed to the <see cref="M:Microsoft.VisualStudio.OLE.Interop.IServiceProvider.QueryService(System.Guid@,System.Guid@,System.IntPtr@)" /> method to return a reference to the <see cref="T:Microsoft.VisualStudio.OLE.Interop.IOleUndoManager" /> interface.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.IOleMenuCommand"></member>
    <member name="M:Microsoft.VisualStudio.Shell.IOleMenuCommand.DynamicItemMatch(System.Int32)">
      <param name="cmdId"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.IOleMenuCommand.Invoke(System.Object,System.IntPtr)">
      <param name="inArg"></param>
      <param name="outArg"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.IOleMenuCommand.ParametersDescription"></member>
    <member name="P:Microsoft.VisualStudio.Shell.IOleMenuCommand.Text"></member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__ACTIVITYLOG_ENTRYTYPE">
      <summary>Specifies the type of an entry in an activity log.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__ACTIVITYLOG_ENTRYTYPE.ALE_ERROR">
      <summary>Specifies an error entry.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__ACTIVITYLOG_ENTRYTYPE.ALE_WARNING">
      <summary>Specifies a warning entry.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__ACTIVITYLOG_ENTRYTYPE.ALE_INFORMATION">
      <summary>Specifies an informational entry.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__BUILDOUTOFDATEPROJECTS">
      <summary>Specifies options for rebuilding out-of-date projects.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__BUILDOUTOFDATEPROJECTS.BUILDOUTOFDATEPROJECTS_YES">
      <summary>Automatically rebuild out-of-date projects.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__BUILDOUTOFDATEPROJECTS.BUILDOUTOFDATEPROJECTS_NO">
      <summary>Do not automatically rebuild out-of-date projects.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__BUILDOUTOFDATEPROJECTS.BUILDOUTOFDATEPROJECTS_PROMPT">
      <summary>Prompt before rebuilding out-of-date projects.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__BUILDOUTOFDATEPROJECTS.BUILDOUTOFDATEPROJECTS_MAX">
      <summary>Automatically rebuild out-of-date projects if they do not exceed a specified count.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__BWI_IMAGE_POS">
      <summary>Specifies where an image is placed on a button.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__BWI_IMAGE_POS.BWI_IMAGE_POS_LEFT">
      <summary>The image is drawn to the left of the text on the button.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__BWI_IMAGE_POS.BWI_IMAGE_POS_RIGHT">
      <summary>The image is drawn to the right of the text on the button.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__BWI_IMAGE_POS.BWI_IMAGE_ONLY">
      <summary>Only the image is drawn on the button.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__COMMANDWINDOWMODE2">
      <summary>Defines additional values for the <see cref="T:Microsoft.VisualStudio.Shell.Interop.COMMANDWINDOWMODE" /> enumeration.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__COMMANDWINDOWMODE2.CWM_DEFAULT">
      <summary>Default mode (specified in user options).</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__FRAMESHOW2">
      <summary>Adds members to <see cref="T:Microsoft.VisualStudio.Shell.Interop.__FRAMESHOW" /> enumeration, which specifies the state of a window frame.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__FRAMESHOW2.FRAMESHOW_BeforeWinHidden">
      <summary>A window is about to be hidden.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__FRAMESHOW2.FRAMESHOW_AutoHideSlideEnd">
      <summary>Auto-hidden window is finished sliding into view.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__GRADIENTTYPE">
      <summary>Specifies different types of gradients that can be used as backgrounds in VSPackages.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__GRADIENTTYPE.VSGRADIENT_FILETAB">
      <summary>File Tab. Typically a vertical gradient with a light gray at the top and a medium gray at the bottom. Usually is the active tab on the Solution Explorer.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__GRADIENTTYPE.VSGRADIENT_PANEL_BACKGROUND">
      <summary>Panel Background. Typically a horizontal gradient with light gray at the left and a medium gray at the right. Usually is the background of the Visual Basic error list window.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__GRADIENTTYPE.VSGRADIENT_SHELLBACKGROUND">
      <summary>Shell background. Typically a horizontal gradient of light gray at the left to a slightly lighter gray at the right. Usually is the background of the tabs on a docked window, the color of a splitter window frame, and the auto-hide space for the Toolbox and Server Explorer panels.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__GRADIENTTYPE.VSGRADIENT_TOOLBOX_HEADING">
      <summary>Toolbox Heading. Typically a single medium gray color with no actual gradient. Usually is the background of the Toolbox heading.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__GRADIENTTYPE.VSGRADIENT_TOOLTAB">
      <summary>Tool tab. Typically a vertical gradient with a medium gray at the top and a light gray at the bottom. Usually is the background of any tab that is not selected.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__GRADIENTTYPE.VSGRADIENT_TOOLWIN_ACTIVE_TITLE_BAR">
      <summary>Tool window active title bar. Typically a vertical gradient with a light blue at the top and a medium blue at the bottom. Usually is the background of an active tool window title bar.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__GRADIENTTYPE.VSGRADIENT_TOOLWIN_INACTIVE_TITLE_BAR">
      <summary>Tool window inactive title bar. Typically a solid medium gray with no gradient. Typically seen as the background of a tool window when it is docked and does not currently have focus (undocked tool windows use standard Windows title bar colors).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__GRADIENTTYPE.VSGRADIENT_TOOLWIN_BACKGROUND">
      <summary>Tool window default background. Typically a horizontal gradient with a light gray at the left and a medium gray at the right. Usually is the background of the Toolbox.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__HANDSOFFMODE">
      <summary>Flags for HandsOn/Off functions of the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsTrackProjectDocuments3" /> interface.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__HANDSOFFMODE.HANDSOFFMODE_ReadAccess">
      <summary>Caller must have read-only access (shared read locks are OK to keep open).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__HANDSOFFMODE.HANDSOFFMODE_WriteAccess">
      <summary>Caller must have  write-only access (shared write locks are OK to keep open).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__HANDSOFFMODE.HANDSOFFMODE_DeleteAccess">
      <summary>Caller must have access to delete or rename.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__HANDSOFFMODE.HANDSOFFMODE_AsyncOperation">
      <summary>Caller must have access to the file for an extended period of time. Caller guarantees to call <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsTrackProjectDocuments3.HandsOnFiles(System.Int32,System.String[])" /> to tell parties when they can access the file. Incompatible <paramref name="AsyncOperations" /> do not nest. HandsOffFiles returns E_ACCESSDENIED if there is a pending incompatible <paramref name="AsyncOperation" />. There can be multiple nested Async <paramref name="ReadAccess" /> operations but <paramref name="WriteAccess" /> and <paramref name="DeleteAccess" /> operations cannot be nested.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__HANDSOFFMODE.HANDSOFFMODE_FullAccess">
      <summary>Caller must have  power to rename or delete the file.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__HANDSOFFMODE.HANDSOFFMODE_ReadWriteAccess">
      <summary>Caller must have both read and write.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__MENUEDITOR_TRANSACTION">
      <summary>Specifies Undo/Redo transactions.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__MENUEDITOR_TRANSACTION.MENUEDITOR_TRANSACTION_DISCARD">
      <summary>Discards the current transaction.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__MENUEDITOR_TRANSACTION.MENUEDITOR_TRANSACTION_ALL">
      <summary>Forces a reset.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__MENUEDITOR_TRANSACTION.MENUEDITOR_TRANSACTION_CUT">
      <summary>Cut transaction.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__MENUEDITOR_TRANSACTION.MENUEDITOR_TRANSACTION_PASTE">
      <summary>Paste transaction.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__MENUEDITOR_TRANSACTION.MENUEDITOR_TRANSACTION_COPY">
      <summary>Copy transaction.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__MENUEDITOR_TRANSACTION.MENUEDITOR_TRANSACTION_DELETE">
      <summary>Delete transaction.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__PREVIEWCHANGESITEMCHECKSTATE">
      <summary>Specifies the check-state of an item.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__PREVIEWCHANGESITEMCHECKSTATE.PCCS_None">
      <summary>Item doesn't have a check box channel.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__PREVIEWCHANGESITEMCHECKSTATE.PCCS_Unchecked">
      <summary>Item and all its descendants are unchecked.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__PREVIEWCHANGESITEMCHECKSTATE.PCCS_PartiallyChecked">
      <summary>Some descendants of this item are checked and others are unchecked.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__PREVIEWCHANGESITEMCHECKSTATE.PCCS_Checked">
      <summary>Item and all its descendants are checked.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__PREVIEWCHANGESWARNINGLEVEL">
      <summary>Provides preview changes warning levels.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__PREVIEWCHANGESWARNINGLEVEL.PCWL_None">
      <summary>No message</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__PREVIEWCHANGESWARNINGLEVEL.PCWL_Information">
      <summary>Informational message</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__PREVIEWCHANGESWARNINGLEVEL.PCWL_Warning">
      <summary>Warning message</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__PREVIEWCHANGESWARNINGLEVEL.PCWL_Error">
      <summary>Error message</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__PSFFILEID2">
      <summary>Adds Project Special Files members to <see cref="T:Microsoft.VisualStudio.Shell.Interop.__PSFFILEID" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__PSFFILEID2.PSFFILEID_WebSettings">
      <summary>Get WebSettings file.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__PSFFILEID2.PSFFILEID_AppManifest">
      <summary>Get AppManifest file.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__PSFFILEID2.PSFFILEID_AppDesigner">
      <summary>Get AppDesigner file.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__PSFFILEID2.PSFFILEID_AppSettings">
      <summary>Get App Settings.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__PSFFILEID2.PSFFILEID_AssemblyResource">
      <summary>Get Assembly Resource file.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__PSFFILEID2.PSFFILEID_AssemblyInfo">
      <summary>Get Assembly info.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__PSFFILEID2.PSFFILEID_FIRST2">
      <summary>Indicates the last PSFFIELDID2 defined.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__PSFFLAGS2">
      <summary>Defines additional members for <see cref="T:Microsoft.VisualStudio.Shell.Interop.__PSFFLAGS" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__PSFFLAGS2.PSFF_CheckoutIfExists">
      <summary>If the file exists, check it out of SCC.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__RUNAFTERBUILDERRORS">
      <summary>Specifies whether a target should be run after it builds with errors.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__RUNAFTERBUILDERRORS.RUNAFTERBUILDERRORS_YES">
      <summary>Run the target.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__RUNAFTERBUILDERRORS.RUNAFTERBUILDERRORS_NO">
      <summary>Do not run the target.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__RUNAFTERBUILDERRORS.RUNAFTERBUILDERRORS_PROMPT">
      <summary>Prompt whether to run the target.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__RUNAFTERBUILDERRORS.RUNAFTERBUILDERRORS_MAX">
      <summary>Run the target if the number of errors is less than a specified limit.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__SccToolsOptionsEnum">
      <summary>Options that can be viewed or updated for source control tools. Used exclusively by the methods on the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSccToolsOptions" /> interface.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__SccToolsOptionsEnum.ksctoAllowReadOnlyFilesNotUnderSccToBeEdited">
      <summary>Nonzero to allow files marked as read-only (but which are not under source control) to be edited.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__SccToolsOptionsEnum.ksctoLast">
      <summary>This value is set to the last option in the enumeration. Do not use as an option.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__SccToolsOptionsEnum.ksctoBad">
      <summary>This value indicates an unrecognized option.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__STOP_DEBUGGING_PROCESS_REASON"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__STOP_DEBUGGING_PROCESS_REASON.SDPR_DETACH">
      <summary>Process detached.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__STOP_DEBUGGING_PROCESS_REASON.SDPR_TERMINATE">
      <summary>Process terminated.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__UPDATE_REFERENCE_REASON">
      <summary>Specifies reasons for updating project to project references.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__UPDATE_REFERENCE_REASON.URR_PROJECT_OPEN">
      <summary>Specifies that a project is open. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__UPDATE_REFERENCE_REASON.URR_BUILD">
      <summary>Specifies that the project is being built. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__UPDATE_REFERENCE_REASON.URR_START_DEBUG">
      <summary>Specifies that the project is starting a debug operation. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__UPDATE_REFERENCE_REASON.URR_REFERENCEPATH_CHANGED">
      <summary>Specifies that the path to the reference has changed. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__UPDATE_REFERENCE_REASON.URR_REFERENCE_ADDED">
      <summary>Specifies that a new reference has been added. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__UPDATE_REFERENCE_REASON.URR_REFERENCE_REMOVED">
      <summary>Specifies that a reference has been removed. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__UPDATE_REFERENCE_REASON.URR_EXPLICIT_USER_ACTION">
      <summary>Specifies an explicit user action. </summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__UserSettingsFlags">
      <summary>Used by the integrated development environment (IDE) to define how imported settings are handled.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__UserSettingsFlags.USF_None">
      <summary>Specifies that a VSPackage is free to either reset settings with valid imported values, or to treat settings import as an additive or merge operation.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__UserSettingsFlags.USF_ResetOnImport">
      <summary>Specifies that a VSPackage should overwrite any existing settings with valid imported settings.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__UserSettingsFlags.USF_DisableOptimizations">
      <summary>Specifies that a VSPackage should disable optimizations.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSADDITEMFLAGS2">
      <summary>Specifies additional members of <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSADDITEMFLAGS" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSADDITEMFLAGS2.VSADDITEM_NoUserTemplateFeatures">
      <summary>Dialog does not have Standard Templates/User-defined Templates tabs or Online Template button.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSADDITEMFLAGS2.VSADDITEM_ShowOpenButtonDropDown">
      <summary>Shows drop-down menu under Open button on dialog box (default is not to have drop-down; see comment for <see cref="F:Microsoft.VisualStudio.Shell.Interop.__VSADDITEMFLAGS.VSADDITEM_NoOpenButtonDropDown" />).</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSADDNEWWEBITEMOPTIONS">
      <summary>Passed as an input parameter to the dialog box to preset these options.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSADDNEWWEBITEMOPTIONS.VSADDWEBITEM_SelectMaster">
      <summary>Set if "Select master page" is checked.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSADDNEWWEBITEMOPTIONS.VSADDWEBITEM_SeparateCodeFile">
      <summary> Set if "Separate code file" is checked.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSADDNEWWEBITEMOPTIONS.VSADDWEBITEM_SelectMasterIsValid">
      <summary>Set if the SelectMaster item is valid for the selected template.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSADDNEWWEBITEMOPTIONS.VSADDWEBITEM_SeparateCodeFileIsValid">
      <summary>Set if the SeparateCodeFile item is valid for the selected template.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSADDNEWWEBITEMOPTIONS.VSADDWEBITEM_IsValidMask">
      <summary>Masks the IsValid bits.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSASYNCHOPENPROJECTTYPE">
      <summary>Specifies how a project can be opened.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSASYNCHOPENPROJECTTYPE.AOPT_SYNCHRONOUS">
      <summary>None of the flags are set—the project can be opened only synchronously.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSASYNCHOPENPROJECTTYPE.AOPT_ASYNCHRONOUS">
      <summary>The project system supports the special "loading" state and needs only the project file to be successfully opened.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSBACKGROUNDTASKPRIORITY">
      <summary>Specifies background task priority.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSBACKGROUNDTASKPRIORITY.VSBACKGROUNDTASKPRIORITY_STANDARD">
      <summary>Standard priority.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSBACKGROUNDTASKPRIORITY.VSBACKGROUNDTASKPRIORITY_IMMEDIATE">
      <summary>Not implemented.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSBACKGROUNDTASKPRIORITY.VSBACKGROUNDTASKPRIORITY_OTHER">
      <summary>Placeholder for enum expansion.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSBLDCFGPROPID">
      <summary>Specifies property IDs for <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsBuildableProjectCfg2.GetBuildCfgProperty(System.Int32,System.Object@)" /> calls.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSBLDCFGPROPID.VSBLDCFGPROPID_LAST">
      <summary>Specifies last VSBLDCFGPROPID_.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSBLDCFGPROPID.VSBLDCFGPROPID_SupportsMTBuild">
      <summary>Specifies support for multi-target build.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSBLDCFGPROPID.VSBLDCFGPROPID_FIRST">
      <summary>Specifies first VSBLDCFGPROPID_.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSCALLBROWSERMODE">
      <summary> Specifies display options for the call browser.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCALLBROWSERMODE.CBM_CALLSTO">
      <summary>Show callers graph.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCALLBROWSERMODE.CBM_CALLSTO_NEWWINDOW">
      <summary>Show callers graph in a new window.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCALLBROWSERMODE.CBM_CALLSFROM">
      <summary>Show call graph.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCALLBROWSERMODE.CBM_CALLSFROM_NEWWINDOW">
      <summary>Show call graph in a new window.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSCFGPROPID2">
      <summary>Provides additional Property IDs for <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSCFGPROPID" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCFGPROPID2.VSCFGPROPID_HideConfigurations">
      <summary>Configurations will be hidden when this project is the active selected project in the selection context.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCFGPROPID2.VSCFGPROPID_FIRST2">
      <summary>Indicates the first VSCFGPROPID_</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSCOLORASPECT">
      <summary>Indicates if a color used in conjunction with the Visual Studio Font and Color service is a foreground or background color.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCOLORASPECT.CA_FOREGROUND">
      <summary>Indicates that a color value represents a foreground color.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCOLORASPECT.CA_BACKGROUND">
      <summary>Indicates that a color value represents a background color.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSCOLORTYPE">
      <summary>Contains the supported representation for a color values.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCOLORTYPE.CT_INVALID">
      <summary>Color value is invalid.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCOLORTYPE.CT_RAW">
      <summary>The color value is a standard 32 bit RGB color value.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCOLORTYPE.CT_COLORINDEX">
      <summary>The color value is a member of the enumeration.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCOLORTYPE.CT_SYSCOLOR">
      <summary>The color value is one used with GetSyscolor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCOLORTYPE.CT_VSCOLOR">
      <summary>The color value is a member of the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX" /> enumeration and can be used with <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsUIShell2.GetVSSysColorEx(System.Int32,System.UInt32@)" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCOLORTYPE.CT_AUTOMATIC">
      <summary>The color tracks the Visual Studio session's automatic color.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCOLORTYPE.CT_TRACK_FOREGROUND">
      <summary>The color tracks the Windows session's foreground color.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCOLORTYPE.CT_TRACK_BACKGROUND">
      <summary>The color tracks the Windows session's background color.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSCOMPENUMEXFLAGS">
      <summary>Specifies component information.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCOMPENUMEXFLAGS.VSCOMPENUM_IncludeRuntimeInfo">
      <summary>Include run-time version information (for assemblies) as a BSTR in the <paramref name="lCustom" /> field of <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORDATA" /> structure.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSCOMPSELFLAGS2">
      <summary>Provides additional members for the VSCOMPSELFLAGS enum.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCOMPSELFLAGS2.VSCOMSEL2_MultiSelectMode">
      <summary>Allows selection of multiple components.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCOMPSELFLAGS2.VSCOMSEL2_ShowSelectedList">
      <summary>List of selected components is visible. Ignored in single-select mode.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCOMPSELFLAGS2.VSCOMSEL2_ShowAllPagesOfSpecifiedTypes">
      <summary>Add pages, which are not specified in the rgcstiTabInitializers parameter of <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsComponentSelectorDlg2.ComponentSelectorDlg2(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsComponentUser,System.UInt32,System.IntPtr[],System.String,System.String,System.UInt32@,System.UInt32@,System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORTABINIT[],System.Guid@,System.String,System.String@)" />, but produce the same components (have the same <paramref name="ComponentType" /> string value in the registry).</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSCREATEEDITORFLAGS2">
      <summary>Provides additional members of <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSCREATEEDITORFLAGS" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCREATEEDITORFLAGS2.CEF_OPENSPECIFIC">
      <summary>Editor factory must open document if possible (invoked via <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsUIShellOpenDocument.OpenSpecificEditor(System.UInt32,System.String,System.Guid@,System.String,System.Guid@,System.String,Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchy,System.UInt32,System.IntPtr,Microsoft.VisualStudio.OLE.Interop.IServiceProvider,Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame@)" />).</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSCREATENEWPROJVIADLGEXFLAGS">
      <summary>Specifies new project flags for <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolution3.CreateNewProjectViaDlgEx(System.String,System.String,System.String,System.String,System.String,System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsBrowseProjectLocation)" /> calls.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCREATENEWPROJVIADLGEXFLAGS.VNPVDE_ALWAYSNEWSOLUTION">
      <summary>New solution is always created (no Add to Solution and Close Solution radio buttons).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCREATENEWPROJVIADLGEXFLAGS.VNPVDE_OVERRIDEBROWSEBUTTON">
      <summary>Browse button functionality is overridden (requires IVsBrowseProjectLocation interface).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCREATENEWPROJVIADLGEXFLAGS.VNPVDE_ALWAYSADDTOSOLUTION">
      <summary>Project is always added to solution (Add New Project dialog is used).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCREATENEWPROJVIADLGEXFLAGS.VNPVDE_ADDNESTEDTOSELECTION">
      <summary>Project is added, nested to currently selected project, if supported.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCREATENEWPROJVIADLGEXFLAGS.VNPVDE_USENEWWEBSITEDLG">
      <summary>Uses the New Web site flavor of the dialog.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSCREATEPROJFLAGS2">
      <summary>Controls how a project is created or opened. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCREATEPROJFLAGS2.CPF_DEFERREDSAVE">
      <summary>Project is "zero-impact": permanent save is performed explicitly via File.SaveAll.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCREATEPROJFLAGS2.CPF_OPEN_ASYNCHRONOUSLY">
      <summary>Project is being opened asynchronously, that is. it is possible that not all files are on disk yet.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCREATEPROJFLAGS2.CPF_OPEN_STANDALONE">
      <summary>Commands to open the project specified and not look for a solution containing the project. Valid only with <see cref="F:Microsoft.VisualStudio.Shell.Interop.__VSCREATEPROJFLAGS.CPF_OPENFILE" />.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSCREATESOLUTIONFLAGS2">
      <summary>Provides additional members for <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSCREATESOLUTIONFLAGS" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCREATESOLUTIONFLAGS2.CSF_HIDESOLUTIONNODEALWAYS">
      <summary>Don't show the solution node.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCREATESOLUTIONFLAGS2.CSF_DEFERREDSAVESOLUTION">
      <summary>Solution is "zero-impact": permanent save is performed explicitly via File.SaveAll.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSCREATEWEBBROWSER2">
      <summary>Specifies flags for creating a web browser with the methods of <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsWebBrowsingService2" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCREATEWEBBROWSER2.VSCWB_NoHistoryThisPage">
      <summary>Do not add this page to history.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCREATEWEBBROWSER2.VSCWB_NavOptionMask2">
      <summary>Use navigation settings option mask.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE">
      <summary>Specifies cursor types.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_APPSTARTING">
      <summary>Application starting cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_COLUMNSPLIT_EW">
      <summary>Horizontal column split cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_COLUMNSPLIT_NS">
      <summary>Vertical column split cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_CONTROL_COPY">
      <summary>Copy cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_CONTROL_DELETE">
      <summary>Delete cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_CONTROL_MOVE">
      <summary>Move cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_CROSS">
      <summary>Crosshairs cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_DRAGDOCUMENT_MOVE">
      <summary>Document-drag- movement cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_DRAGDOCUMENT_NOEFFECT">
      <summary>Document-not-draggable cursor</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_DRAGSCRAP_COPY">
      <summary>Drag from scrap to copy cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_DRAGSCRAP_MOVE">
      <summary>Drag from scrap to move cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_DRAGSCRAP_SCROLL">
      <summary>Scroll while dragging from scrap cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_HAND">
      <summary>Hand cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_IBEAM">
      <summary>I-beam (text) cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_ISEARCH">
      <summary>Search cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_ISEARCH_UP">
      <summary>Search up cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_MACRO_RECORD_NO">
      <summary>Macro not recording cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_NO">
      <summary>Action not allowed cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_NOMOVE_2D">
      <summary>Flat movement not possible cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_NOMOVE_HORIZ">
      <summary>No horizontal movement cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_NOMOVE_VERT">
      <summary>No vertical movement cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_PAN_EAST">
      <summary>Right pan cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_PAN_NE">
      <summary>Upper-right pan cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_PAN_NORTH">
      <summary>Pan up cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_PAN_NW">
      <summary>Upper-left pan cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_PAN_SE">
      <summary>Lower-right pan cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_PAN_SOUTH">
      <summary>Pan down cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_PAN_SW">
      <summary>Lower-right pan cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_PAN_WEST">
      <summary>Pan left cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_POINTER">
      <summary>Pointer cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_POINTER_REVERSE">
      <summary>Reverse pointer cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_SIZE_NS">
      <summary>Resize vertical cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_SIZE_EW">
      <summary>Resize horizontal cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_SIZE_NWSE">
      <summary>Resize (counterclockwise) cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_SIZE_NESW">
      <summary>Resize (clockwise) cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_SIZE_ALL">
      <summary>Resize all cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_SPLIT_EW">
      <summary>Horizontal split cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_SPLIT_NS">
      <summary>Vertical split cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_UPARROW">
      <summary>Up arrow cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_WAIT">
      <summary>Wait cursor.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSDBGLAUNCHFLAGS2">
      <summary>Adds members to VSDBGLAUNCHFLAGS.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSDBGLAUNCHFLAGS2.DBGLAUNCH_MergeEnv">
      <summary>Merge provided environment with system environment</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSDBGLAUNCHFLAGS2.DBGLAUNCH_DesignTimeExprEval">
      <summary>Launched for design-time expression evaluation.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSDBGLAUNCHFLAGS2.DBGLAUNCH_StopAtEntryPoint">
      <summary>Stops at the entrypoint (step-into).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSDBGLAUNCHFLAGS2.DBGLAUNCH_CannotDebugAlone">
      <summary>This process cannot be debugged alone—stops debugging when only processes with this flag remain.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSDESIGNER_HIDDENCODEGENERATION">
      <summary>Specifies what code goes to the hidden designer file.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSDESIGNER_HIDDENCODEGENERATION.VSDHCG_Declarations">
      <summary> Include declarations.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSDESIGNER_HIDDENCODEGENERATION.VSDHCG_InitMethods">
      <summary> Include member initialization methods.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSDESIGNER_HIDDENCODEGENERATION.VSDHCG_EventMethods">
      <summary> Include event methods.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSDIRFLAGS2">
      <summary>Provides additional members for the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSDIRFLAGS" /> enumeration.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSDIRFLAGS2.VSDIRFLAG_RequiresNewFolder">
      <summary>New folder is required—creation in an existing folder is not allowed.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSDIRFLAGS2.VSDIRFLAG_SolutionTemplate">
      <summary>Template is for a solution rather than a project.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSDIRFLAGS2.VSDIRFLAG_DeferredSaveProject">
      <summary>Project can be "zero-impact": permanent save is performed explicitly via File.SaveAll.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSDIRFLAGS2.VSDIRFLAG_DontShowNameLocInfo">
      <summary>Doesn't show the name field or the static project location info field (useful flag for webs).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSDIRFLAGS2.VSDIRFLAG_EnableMasterPage">
      <summary>Enables the master page check box (NewWebItemDlg svc).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSDIRFLAGS2.VSDIRFLAG_EnableCodeSeparation">
      <summary>Enables the use code separation check box (NewWebItemDlg svc).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSDIRFLAGS2.VSDIRFLAG_EnableLangDropdown">
      <summary>Enables the language drop-down list (NewWebItemDlg svc).</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSEDITORTRUSTLEVEL">
      <summary>Specifies trust levels for the editor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSEDITORTRUSTLEVEL.ETL_NeverTrusted">
      <summary>Editor is never trusted.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSEDITORTRUSTLEVEL.ETL_AlwaysTrusted">
      <summary> Editor is always trusted.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSEDITORTRUSTLEVEL.ETL_HasUntrustedLogicalViews">
      <summary>Some logical views are not trusted.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSEDT_STYLE">
      <summary>Used with <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsDebugger2.CreateDataTip(System.String,System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsEnhancedDataTip@)" /> calls.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSEDT_STYLE.VSEDT_Reserved1">
      <summary>Reserved for future use.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSERRORCATEGORY">
      <summary>Describes the severity of error messages.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSERRORCATEGORY.EC_ERROR">
      <summary> Error message.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSERRORCATEGORY.EC_WARNING">
      <summary> Warning message.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSERRORCATEGORY.EC_MESSAGE">
      <summary> Informational message.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSFORMATINDEX">
      <summary>Represents file format encodings.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSFORMATINDEX.VSFORMATINDEX_UTF8">
      <summary>UTF-8</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSFORMATINDEX.VSFORMATINDEX_MBCS">
      <summary>Multi-byte (such as ANSI)</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSFORMATINDEX.VSFORMATINDEX_UNICODE">
      <summary>Unicode</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSFPROPID2">
      <summary>Provides additional members for the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSFPROPID" /> enumeration.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSFPROPID2.VSFPROPID_OverrideDirtyState">
      <summary>BOOL/EMPTY. Tri-state value of dirty star (*) in window caption</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSFPROPID2.VSFPROPID_OLEDocObjectDocument">
      <summary>BOOL. Specifies whether pane is holding OLE doc object</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSFPROPID2.VSFPROPID_ParentHwnd">
      <summary>HWND parent of OwnerDocked window.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSFPROPID2.VSFPROPID_ParentFrame">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame" /> of parent container for OwnerDocked window.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSFPROPID2.VSFPROPID_ToolWindowDocCookie">
      <summary>VT_INT_PTR value for <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsRunningDocumentTable" /> (RDT) key for document associated with a tool window (eg. Code Definition Window). Setting this property enables both caption dirty indicator (*) management and the firing of <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsRunningDocTableEvents.OnBeforeDocumentWindowShow(System.UInt32,System.Int32,Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame)" /> RDT events for the tool window. It is assumed that the frame caption is set correctly, without a dirty indicator (*), before this property is set, as setting this property will cause a caption dirty indicator (*) to be added, if the document is dirty. Also, when this property is set, the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsRunningDocTableEvents.OnBeforeDocumentWindowShow(System.UInt32,System.Int32,Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame)" /> RDT event is immediately fired to indicate that a new document has been show.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSHIERITEMATTRIBUTE">
      <summary>Specifies hierarchy item attributes. Used in <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchyWindow2.SetItemAttribute(Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchy,System.UInt32,System.UInt32,System.Object)" /> calls.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHIERITEMATTRIBUTE.VSHIERITEMATTRIBUTE_Bold">
      <summary>Hierarchy item is bold.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2">
      <summary>Adds members to <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID" /> enumeration.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_PropertyPagesCLSIDList">
      <summary>BSTR. Optional. Semicolon-delimited list of clsids of the configuration-independent property pages.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_CfgPropertyPagesCLSIDList">
      <summary>BSTR. Optional. Semicolon-delimited list of cslids of the configuration-dependent property pages.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_ExtObjectCATID">
      <summary>GUID. Optional. Intrinsic Extender CATID of the ExtObject (Automation Object) for the given <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> Itemid. For VSITEMID_ROOT this corresponds to the type of the 'Project' object.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_BrowseObjectCATID">
      <summary>GUID. Optional. Intrinsic Extender CATID of the BrowseObject for the given <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> Itemid. For VSITEMID_ROOT, this corresponds to the object that is used to build the Project.Properties collection.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_CfgBrowseObjectCATID">
      <summary>GUID. Optional. Intrinsic Extender CATID of the configuration BrowseObject for the given <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> Itemid.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_AddItemTemplatesGuid">
      <summary>GUID. Optional. Alternate project type GUID to use to get add item templates.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_ChildrenEnumerated">
      <summary>BOOL. Optional. Returns true if children have been enumerated. Typically, this is of interest only for projects where enumerating children can be expensive, that is, Web projects.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_StatusBarClientText">
      <summary>BSTR. Hierarchy scoped text for Client Text field of status bar. This text is displayed while the given hierarchy is the active hierarchy. <see cref="F:Microsoft.VisualStudio.Package.Variant.VariantType.VT_EMPTY" /> clears hierarchy scoped text and resets to global text specified by the application.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_DebuggeeProcessId">
      <summary>Process ID of debugging target if known; otherwise, zero.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_IsLinkFile">
      <summary>BOOL. Optional. true if the file is a link file. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_KeepAliveDocument">
      <summary>BOOL. Optional. true if the document should be kept alive in the project regardless of opened/closed state.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_SupportsProjectDesigner">
      <summary>BOOL. Optional. true if the project uses a Project Designer Editor instead of the property page frame to change project properties.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_IntellisenseUnknown">
      <summary>IUnknown. Optional. Returns the IUnknown of the Intellisense compiler that is used by the project system.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_IsUpgradeRequired">
      <summary>BOOL. Optional. true if the item or any of its children are either already in the process of upgrading or must be upgraded.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_DesignerHiddenCodeGeneration">
      <summary>I4 indicates which code is supposed to go to the hidden designer file. Bit flag values in <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSDESIGNER_HIDDENCODEGENERATION" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_SuppressOutOfDateMessageOnBuild">
      <summary>BOOL. Optional. true if the project does not want to participate in the "this configuration is out of date" message on Build/F5.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_Container">
      <summary>BOOL. Optional. true if the item is a container (it may not be expandable, but it contains items). Support this property if your folder is not expandable but contains items that should be included in SCC operations.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_UseInnerHierarchyIconList">
      <summary>BOOL. Optional. Set this to true in the outer hierarchy if you want the icon for an inner (nested) hierarchy root to come from the inner hierarchy image list. By default, we are getting that icon from the outer hierarchy image list.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_EnableDataSourceWindow">
      <summary>BOOL. Optional. Set this to true in your hierarchy to disable the Data Source Window for this project.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_AppTitleBarTopHierarchyName">
      <summary>BSTR. Optional. Enables the hierarchy to put its top-most name (solution or server) into the Title bar of the app, such as YourName part of "YourName - Microsoft Visual Studio."</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_DebuggerSourcePaths">
      <summary>BSTR. Optional. Semi-colon delimited list of paths where the debugger looks for source.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_CategoryGuid">
      <summary>GUID to identify the family/category of this non-solution based Hierarchy (for example,  Portfolio Project Hierarchy).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_DisableApplicationSettings">
      <summary>BOOL. Optional. Set this to true in your hierarchy to disable Application Settings design time support in your project.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_ProjectDesignerEditor">
      <summary>GUID. Optional. GUID of the Project Designer Editor that the project uses to change project properties.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_PriorityPropertyPagesCLSIDList">
      <summary>BSTR. Optional. Semi-colon delimited ordered list of CLSIDs of the preferred property pages.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_NoDefaultNestedHierSorting">
      <summary>BOOL. Optional. true if the hierarchy does not want nested hierarchies sorted first and items after, and sorted alphabetically (like solution folders).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_ExcludeFromExportItemTemplate">
      <summary>BOOL. Optional. By default, is false. true if the project item cannot be exported through export item template.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_SupportedMyApplicationTypes">
      <summary>BSTR. Optional. semi-colon delimited list of application-types supported for project-systems that support My.Application. The property-page that exposes information about My.Application can use this list to determine which values are located  in the application-type drop-down menu as selectable choices for the user.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_FIRST2">
      <summary>Indicates the first property ID.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSMEINIT2">
      <summary>Provides additional members for the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSMEINIT" /> enumeration.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSMEINIT2.MD_ITEMICONSUPPORT">
      <summary>Supports icons for menu editor items.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSMEPROPID2">
      <summary>Adds additional property IDs to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSMEPROPID" /> enumeration.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSMEPROPID2.VSMEPROPID_ICON">
      <summary>Menu icon.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSMEPROPID2.VSMEPROPID_LAST2">
      <summary>Specifies the last VSMEPROPID_</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSOPENFROMSCCDLG">
      <summary>Indicates a specific kind of dialog box that is shown to the user. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSOPENFROMSCCDLG.VSOFSD_OPENSOLUTIONORPROJECT">
      <summary>Dialog box is used to open a solution or project from source control. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSOPENFROMSCCDLG.VSOFSD_ADDEXISTINGITEM">
      <summary>Dialog box is used to add an existing item to a solution or project from source control. </summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSOSEFLAGS2">
      <summary>Adds additional property IDs to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSOSEFLAGS" /> enumeration.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSOSEFLAGS2.OSE_CheckTrustLevelOfWizard">
      <summary>Check the trust level of the wizard.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSOSPEFLAGS2">
      <summary>Adds additional property IDs to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSOSPEFLAGS" /> enumeration. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSOSPEFLAGS2.OSPE_CheckTrustLevelOfWizard">
      <summary>Check trust level of the wizard.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSOVERLAYICON2">
      <summary>Provides additional members for the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOVERLAYICON" /> enumeration.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSOVERLAYICON2.OVERLAYICON_EXCLUDED">
      <summary>Overlay icon is excluded.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSOVERLAYICON2.OVERLAYICON_NOTONDISK">
      <summary>Overlay icon is not on disk.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSOVERLAYICON2.OVERLAYICON_MAXINDEX2">
      <summary>Indicates the last VSOVERLAYICON2.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSPPPID">
      <summary>Extends the property page interface to retrieve properties on the page.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPPPID.VSPPPID_FIRST">
      <summary>First item</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPPPID.VSPPPID_PAGENAME">
      <summary>Page name</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPPPID.VSPPPID_LAST">
      <summary>Last item</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSPPROJECTUPGRADEVIAFACTORYFLAGS">
      <summary>Specifies action to take with <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEventsProjectUpgrade.OnAfterUpgradeProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.String,Microsoft.VisualStudio.Shell.Interop.SYSTEMTIME,Microsoft.VisualStudio.Shell.Interop.IVsUpgradeLogger)" /> calls.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPPROJECTUPGRADEVIAFACTORYFLAGS.PUVFF_SXSBACKUP">
      <summary>Side-by-side backup supported.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPPROJECTUPGRADEVIAFACTORYFLAGS.PUVFF_COPYBACKUP">
      <summary>Xcopy style backup supported.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPPROJECTUPGRADEVIAFACTORYFLAGS.PUVFF_BACKUPSUPPORTED">
      <summary>Backup is supported. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPPROJECTUPGRADEVIAFACTORYFLAGS.PUVFF_USE_ALT_BACKUP_LOCATION">
      <summary>By default, copy backup occurs in a subfolder of the solution. There are times where this is unwanted. In those cases UpgradeProject_CheckOnly can return <paramref name="PUVFF_USE_ALT_BACKUP_LOCATION" />.  This defaults to using a subfolder under the user's default project location folder. This alternate location should be avoided if it is possible, as it presents more limitations regarding backup file name length.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSPROFILECATEGORYSECURITY">
      <summary>Specifies the current user profile security level returned with calls to <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree.GetSecurityLevel(System.UInt32@)" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROFILECATEGORYSECURITY.PCSEC_SAFE">
      <summary>The settings in this category are safe.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROFILECATEGORYSECURITY.PCSEC_THREAT_VS">
      <summary>The settings in this category could threaten the Visual Studio user experience.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROFILECATEGORYSECURITY.PCSEC_THREAT_MACHINE">
      <summary>The settings in this category could threaten the machine, or user data.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSPROFILECATEGORYSENSITIVITY">
      <summary>Specifies a sensitivity level to <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree.GetSensitivityLevel(System.UInt32@)" /> calls.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROFILECATEGORYSENSITIVITY.PCSEN_SAFE">
      <summary>The settings in this category contain no sensitive information.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROFILECATEGORYSENSITIVITY.PCSEN_PRIVACY">
      <summary>The settings in this category could compromise a user's privacy.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSPROFILEGETFILENAME">
      <summary>Specifies profile file name settings.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROFILEGETFILENAME.PGFN_EXPORT">
      <summary>Use the default export root file name.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROFILEGETFILENAME.PGFN_SAVECURRENT">
      <summary>Use the default current settings root file name.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROFILEGETFILENAME.PGFN_AUTOSAVE">
      <summary>Use the default Autosave root file name.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSPROFILELOCATIONS">
      <summary>Specifies profile file location.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROFILELOCATIONS.PFL_LocationNone">
      <summary>Used only for initialization.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROFILELOCATIONS.PFL_InstallDir">
      <summary>File resides in the installation directory.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROFILELOCATIONS.PFL_SettingsDir">
      <summary>File resides in the user's default settings directory.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROFILELOCATIONS.PFL_Other">
      <summary>Custom file that the user has browsed to. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROFILELOCATIONS.PFL_AutoSave">
      <summary>Add the current Autosave file.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROFILELOCATIONS.PFL_All">
      <summary>Custom file that the user has browsed to.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSPROFILEPATHRESOLVERFLAGS">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsPathVariableResolver" /> methods.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROFILEPATHRESOLVERFLAGS.VSPPR_None">
      <summary>Use the standard behavior.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROFILEPATHRESOLVERFLAGS.VSPPR_OnlyForProfiles">
      <summary>Copies the inparm to the outparm.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSPROFILETEAMSETTINGSCHANGEDFLAGS">
      <summary>Specifies how team profile settings have changed. Used with <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileDataManager.ReportTeamSettingsChanged(System.UInt32)" /> calls.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROFILETEAMSETTINGSCHANGEDFLAGS.PTSCF_TEAMFILE_NOCHANGE">
      <summary>The team file setting has not been touched.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROFILETEAMSETTINGSCHANGEDFLAGS.PTSCF_TEAMFILE_CHANGED">
      <summary>The team file has been changed from its previous value.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROFILETEAMSETTINGSCHANGEDFLAGS.PTSCF_TEAMFILE_SAME">
      <summary>The team file setting has been updated, but the value is the same as before.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSPROFILETEAMSETTINGSFLAGS">
      <summary>Specifies the action for <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileDataManager.CheckUpdateTeamSettings(System.UInt32)" /> calls.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROFILETEAMSETTINGSFLAGS.PTSF_CHECKFORUPDATE">
      <summary>Import from the teamsettings file if it is newer.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROFILETEAMSETTINGSFLAGS.PTSF_UPDATEALWAYS">
      <summary>Forces an import from the teamsettings file.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSPROJSLNDLGFLAGS">
      <summary>Specifies project and solution dialog flags for <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsOpenProjectOrSolutionDlg.OpenProjectOrSolutionViaDlg(System.UInt32,System.String,System.String,System.Guid@)" /> calls.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROJSLNDLGFLAGS.PSDF_OpenSolutionDialog">
      <summary>Open solution dialog.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROJSLNDLGFLAGS.PSDF_OpenProjectDialog">
      <summary>Open project dialog.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROJSLNDLGFLAGS.PSDF_AddExistingProjectDialog">
      <summary>Add existing project dialog.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROJSLNDLGFLAGS.PSDF_DefaultToAllProjectsFilter">
      <summary>Default to All Projects filter.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROJSLNDLGFLAGS.PSDF_DirectoryPicker">
      <summary>Puts the dialog in directory-picker mode. Used to open directory-based projects.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSPROPID2">
      <summary>Provides additional members for the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSPROPID" /> enumeration. Identifies property setting for a solution.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROPID2.VSPROPID_IsSolutionNodeHidden">
      <summary>BOOLEAN: true if the solution node is hidden in the integrated development environment (IDE).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROPID2.VSPROPID_DeferredSaveSolution">
      <summary>BOOLEAN: is the Solution "zero-impact" (permanent save is performed explicitly through File.SaveAll).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROPID2.VSPROPID_SimplifiedConfigurations">
      <summary>BOOLEAN: true if the solution is in simplified configuration mode.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROPID2.VSPROPID_IsSolutionClosing">
      <summary>BOOLEAN: true if a solution file being closed.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROPID2.VSPROPID_IsAProjectClosing">
      <summary>IUnknown interface for <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> of project being closed.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROPID2.VSPROPID_IsSolutionOpeningDocs">
      <summary>BOOLEAN: true if the solution re-opening the documents that were open when the solution was last closed.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROPID2.VSPROPID_IsOpenNotificationPending">
      <summary>BOOLEAN: true if the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents.OnAfterOpenSolution(System.Object,System.Int32)" /> notification is pending. This occurs when a new project is being created by using a new solution.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROPID2.VSPROPID_ProjectLoadSecurityDialogState">
      <summary>I4: State of the project load security dialog kept between different language packages.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROPID2.VSPROPID_SolutionUserFileCreatedOnThisComputer">
      <summary>BOOLEAN: true if the .suo file that accompanies the solution file was originally created on the same computer it is being opened on. See <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsPersistSolutionOpts.ReadUserOptions(Microsoft.VisualStudio.OLE.Interop.IStream,System.String)" />. Read only.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROPID2.VSPROPID_NewProjectDlgPreferredLanguage">
      <summary>BSTR: Preferred language for the New Project dialog; if there is no preferred language an empty length string is returned.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROPID2.VSPROPID_FIRST2">
      <summary>Indicates the first VSPROPID_.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSPUBLISHOPTS">
      <summary>Specifies options for <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsPublishableProjectCfg.GetPublishProperty(System.UInt32,System.Object@)" /> calls.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPUBLISHOPTS.PUBOPT_PUBLISHCONTEXT">
      <summary>Publish context</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSQueryEditFlags2">
      <summary>This enumeration is an extension of <see cref="T:Microsoft.VisualStudio.Shell.Interop.tagVSQueryEditFlags" />, and specifies additional flags.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSQueryEditFlags2.QEF_AllowUnopenedProjects">
      <summary>Allows calls to the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsQueryEditQuerySave2.QueryEditFiles(System.UInt32,System.Int32,System.String[],System.UInt32[],Microsoft.VisualStudio.Shell.Interop.VSQEQS_FILE_ATTRIBUTE_DATA[],System.UInt32@,System.UInt32@)" /> method for files of projects that are not loaded or that haven't finished loading.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSQueryEditFlags2.QEF_CheckoutLocalVersion">
      <summary>Attempts to check out local version.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSQueryEditFlags2.QEF_CheckoutLatestVersion">
      <summary>Attempts to check out latest version.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSQueryEditFlags2.QEF_DetectAnyChangedFile">
      <summary>Enables the detection of content changes for files that are not currently open in the IDE (editor buffer or project/solution file). If such changes occur, QER_Changed will be returned in <paramref name="prgfMoreInfo" />.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSRDTSAVEOPTIONS2">
      <summary>Specifies additional save options for a document in the running document table (RDT).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSRDTSAVEOPTIONS2.RDTSAVEOPT_SkipNewUnsaved">
      <summary>Activates the editor window of a document, if a save operation causes an error. Indicates that new unsaved files (created via File.New File) should be skipped.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSRDTSAVEOPTIONS2.RDTSAVEOPT_SaveAllButThis">
      <summary>The supplied document token indicates the exception and everything but it will be saved normally.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSRDTSAVEOPTIONS2.RDTSAVEOPT_FSaveAs">
      <summary>Indicates that the save is a result of a document close. Determines if Visual Studio should display a Save As dialog box.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSSAVEDEFERREDSAVEFLAGS">
      <summary>Used with <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolution3.CheckForAndSaveDeferredSaveSolution(System.Int32,System.String,System.String,System.UInt32)" /> calls.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSAVEDEFERREDSAVEFLAGS.VSDSF_HIDEADDTOSOURCECONTROL">
      <summary>Hides the Add Solution to Source Control check box in the Save dialog box.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSSCCENLISTMENTFACTORYOPTIONS">
      <summary>Options used by the enlistment choice user interface (part of the source control support).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSCCENLISTMENTFACTORYOPTIONS.VSSCC_EFO_CANBROWSEENLISTMENTPATH">
      <summary>The user should be allowed to edit the enlistment path field through the use of a browse dialog box. If this option is not specified, then the user can change the enlistment path only by manually editing the path field.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSCCENLISTMENTFACTORYOPTIONS.VSSCC_EFO_CANEDITENLISTMENTPATH">
      <summary>The user should be allowed to edit the enlistment path field manually. If this option is not set, then the field is read-only and can be changed only with a browse dialog box.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSCCENLISTMENTFACTORYOPTIONS.VSSCC_EFO_CANBROWSEDEBUGGINGPATH">
      <summary>The project supports an additional debugging path, and the user should be allowed to set the debugging path through a browse dialog box. If this option is not specified, then the user can change the debugging path only by manually editing the path field.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSCCENLISTMENTFACTORYOPTIONS.VSSCC_EFO_CANEDITDEBUGGINGPATH">
      <summary>The project supports an additional debugging path, and the user should be allowed to edit the debugging path field manually. If this option is not specified, then the debugging path is read-only and can be changed only with a browse dialog box.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSSCCPROVIDERBINDINGOPTIONS">
      <summary>Indicating whether it can deal with browsing for a source control server.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSCCPROVIDERBINDINGOPTIONS.VSSCC_PBO_CANBROWSESERVERPATH">
      <summary>The project supports a browse dialog box used to find a source control server. If this is not set, then Visual Studio relies on a default server browse dialog box.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSCCPROVIDERBINDINGOPTIONS.VSSCC_PBO_CANEDITSERVERPATH">
      <summary>The project server path can be manually edited by the user and validated.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSCCPROVIDERBINDINGOPTIONS.VSSCC_PBO_CANDISPLAYSERVERPATH">
      <summary>Shows the server path when the user is given a choice of source control servers. If not set, then the user sees only the source control package's name.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSSETTINGSCOMPLETIONSTATUS"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSETTINGSCOMPLETIONSTATUS.vsSettingsCompletionStatusNotStarted">
      <summary> </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSETTINGSCOMPLETIONSTATUS.vsSettingsCompletionStatusIncomplete">
      <summary> </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSETTINGSCOMPLETIONSTATUS.vsSettingsCompletionStatusComplete">
      <summary> </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSETTINGSCOMPLETIONSTATUS.vsSettingsCompletionStatusStateMask">
      <summary> </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSETTINGSCOMPLETIONSTATUS.vsSettingsCompletionStatusSuccess">
      <summary> </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSETTINGSCOMPLETIONSTATUS.vsSettingsCompletionStatusWarnings">
      <summary> </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSETTINGSCOMPLETIONSTATUS.vsSettingsCompletionStatusErrors">
      <summary> </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSETTINGSCOMPLETIONSTATUS.vsSettingsCompletionStatusSuccessMask">
      <summary> </summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSSETTINGSERRORTYPES"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSETTINGSERRORTYPES.vsSettingsErrorTypeSuccess">
      <summary> </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSETTINGSERRORTYPES.vsSettingsErrorTypeError">
      <summary> </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSETTINGSERRORTYPES.vsSettingsErrorTypeWarning">
      <summary> </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSETTINGSERRORTYPES.vsSettingsErrorTypeRestart">
      <summary> </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSETTINGSERRORTYPES.vsSettingsErrorTypeNotInstalled">
      <summary> </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSETTINGSERRORTYPES.vsSettingsErrorTypeMask">
      <summary> </summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSSHOWCONTEXTMENUOPTS">
      <summary>Specifies options for display of context menus.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSHOWCONTEXTMENUOPTS.VSCTXMENU_SELECTFIRSTITEM">
      <summary>Automatically select the first item.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSHOWCONTEXTMENUOPTS.VSCTXMENU_SHOWUNDERLINES">
      <summary>Show keyboard mnemonic underlines.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSHOWCONTEXTMENUOPTS.VSCTXMENU_SUPPORTSTYPEAHEAD">
      <summary>Supports typeahead, and should also be a sorted dynamic item list.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSSLNOPENOPTIONS2">
      <summary>Provides additional members for the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSSLNOPENOPTIONS" /> enumeration.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSLNOPENOPTIONS2.SLNOPENOPT_LoadingAsync">
      <summary>Loads solution asynchronously--marks nonexistent projects as "loading" rather than "unavailable."</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID2">
      <summary>Provides additional members for the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID" /> enumeration.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID2.VSSPROPID_SccProviderChanged">
      <summary>BOOLEAN: (set-only) Set to true when the SCC provider changes.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID2.VSSPROPID_MainWindowSize">
      <summary>VT_UI4, Read-only. The current size of the appid main window encoded as width in LOWORD, height in HIWORD</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID2.VSSPROPID_MainWindowPos">
      <summary>VT_UI4, Read-only. The top-left coordinate of the appid main window encoded as left in LOWORD, top=HIWORD</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID2.VSSPROPID_IsAcademic">
      <summary>Academic Edition property.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID2.VSSPROPID_IsAppThemed">
      <summary>BOOLEAN: VARIANT_TRUE if IDE is themed (using a manifest containing Microsoft.Windows.Common-Controls 6.0).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID2.VSSPROPID_VisualStudioDir">
      <summary>BSTR: full path of location of Visual Studio directory (under My Documents).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID2.VSSPROPID_VsTemplateUserZipProjectFolder">
      <summary>VT_BSTR: read-only. Full path of location for user supplied Project AddItem .vstemplate files (such as \My Documents\Visual Studio\ItemTemplates\)</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID2.VSSPROPID_VsTemplateUserZipItemFolder">
      <summary>VT_BSTR: read-only. Full path of location for user supplied New Project .vstemplate files (such as \My Documents\Visual Studio\ItemTemplates\)</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID2.VSSPROPID_InstallRootDir">
      <summary>BSTR: full path of root location of installation (for example, drive&gt;:\Program Files\Microsoft Visual Studio &lt;version&gt;\).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID2.VSSPROPID_SolutionExplorerSortingEnabled">
      <summary>VT_BOOL. Read/write. Enables/disables sorting of Solution Explorer nodes.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID2.VSSPROPID_BuildOutOfDateProjects">
      <summary>DWORD: see <see cref="T:Microsoft.VisualStudio.Shell.Interop.__BUILDOUTOFDATEPROJECTS" /> for valid values.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID2.VSSPROPID_RunAfterBuildErrors">
      <summary>DWORD, see __RUNAFTERBUILDERRORS <see cref="T:Microsoft.VisualStudio.Shell.Interop.__RUNAFTERBUILDERRORS" /> for valid values.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID2.VSSPROPID_MainWindowVisibility">
      <summary>VT_BOOL, Read-only. VARIANT_TRUE if main window is visible, VARIANT_FALSE if invisible.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID2.VSSPROPID_SKUEdition">
      <summary>Either a VSASKUEdition value or a string. VSASKUEdition if it is a standard version, or a BSTR if a custom version.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID2.VSSPROPID_SubSKUEdition">
      <summary>I4 - some combination of the bits defined in VSASubSKUEdition or zero (if none).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID2.VSSPROPID_WaitingForSecondKeyChord">
      <summary>VT_BOOL Waiting for the second key of a two-key shortcut.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID2.VSSPROPID_SqmRegistryRoot">
      <summary>BSTR, Read-only. Registry path to the root of the SQM hive used by the AppId.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID2.VSSPROPID_AutohideToolFrame">
      <summary>IVsWinodwFrame of the window that is the visible tool window in the autohide frame. Non NULL only when fully extended.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID2.VSFPROPID_ToolWindowUsesDocSelection">
      <summary>BOOL - when selected. the tool window attempts to restore active document selection.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID2.VSSPROPID_FIRST2">
      <summary>Indicates first VSSPROPID_.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX">
      <summary>Specifies a Visual Studio system color to be used with a particular visual component or use case.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_ACCENT_BORDER">
      <summary>Accent border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_ACCENT_DARK">
      <summary>Accent dark</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_ACCENT_LIGHT">
      <summary>Accent light</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_ACCENT_MEDIUM">
      <summary>Accent medium</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_ACCENT_PALE">
      <summary>Accent pale</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_COMMANDBAR_BORDER">
      <summary>Command bar border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_COMMANDBAR_DRAGHANDLE">
      <summary>Command bar drag handle</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_COMMANDBAR_DRAGHANDLE_SHADOW">
      <summary>Command bar drag handle shadow</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_COMMANDBAR_GRADIENT_BEGIN">
      <summary>Command bar gradient begin</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_COMMANDBAR_GRADIENT_END">
      <summary>Command bar gradient end</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_COMMANDBAR_GRADIENT_MIDDLE">
      <summary>Command bar gradient middle</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_COMMANDBAR_HOVER">
      <summary>Hover over command bar</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_COMMANDBAR_HOVEROVERSELECTED">
      <summary>Hover over selected command bar</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_COMMANDBAR_HOVEROVERSELECTEDICON">
      <summary>Hover over selected command bar icon</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_COMMANDBAR_HOVEROVERSELECTEDICON_BORDER">
      <summary>Command bar hover over selected icon border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_COMMANDBAR_SELECTED">
      <summary>Selected command bar</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_COMMANDBAR_SHADOW">
      <summary>Command bar shadow</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_COMMANDBAR_TEXT_ACTIVE">
      <summary>Active command bar text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_COMMANDBAR_TEXT_HOVER">
      <summary>Command bar text hover</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_COMMANDBAR_TEXT_INACTIVE">
      <summary>Inactive command bar text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_COMMANDBAR_TEXT_SELECTED">
      <summary>Command bar text selected</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_CONTROL_EDIT_HINTTEXT">
      <summary>Control edit hint text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_CONTROL_EDIT_REQUIRED_BACKGROUND">
      <summary>Control edit required field background</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_CONTROL_EDIT_REQUIRED_HINTTEXT">
      <summary>Control edit required field hint text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_CONTROL_LINK_TEXT">
      <summary>Control link text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_CONTROL_LINK_TEXT_HOVER">
      <summary>Control link hover</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_CONTROL_LINK_TEXT_PRESSED">
      <summary>Control pressed text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_CONTROL_OUTLINE">
      <summary>Control outline</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_DEBUGGER_DATATIP_ACTIVE_BACKGROUND">
      <summary>Debugger: active data tip background</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_DEBUGGER_DATATIP_ACTIVE_BORDER">
      <summary>Debugger: active data tip border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_DEBUGGER_DATATIP_ACTIVE_HIGHLIGHT">
      <summary>Debugger: active data tip highlight</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_DEBUGGER_DATATIP_ACTIVE_HIGHLIGHTTEXT">
      <summary>Debugger: active data tip highlight text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_DEBUGGER_DATATIP_ACTIVE_SEPARATOR">
      <summary>Debugger: active data tip separator</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_DEBUGGER_DATATIP_ACTIVE_TEXT">
      <summary>Debugger: active data tip text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_DEBUGGER_DATATIP_INACTIVE_BACKGROUND">
      <summary>Debugger: inactive data tip background</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_DEBUGGER_DATATIP_INACTIVE_BORDER">
      <summary>Debugger: inactive data tip border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_DEBUGGER_DATATIP_INACTIVE_HIGHLIGHT">
      <summary>Debugger: inactive data tip highlight</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_DEBUGGER_DATATIP_INACTIVE_HIGHLIGHTTEXT">
      <summary>Debugger: inactive data tip highlight text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_DEBUGGER_DATATIP_INACTIVE_SEPARATOR">
      <summary>Debugger: inactive data tip separator</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_DEBUGGER_DATATIP_INACTIVE_TEXT">
      <summary>Debugger: inactive data tip text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_DESIGNER_BACKGROUND">
      <summary>Designer background</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_DESIGNER_SELECTIONDOTS">
      <summary>Designer selection dots</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_DESIGNER_TRAY">
      <summary>Designer tray</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_DESIGNER_WATERMARK">
      <summary>Designer watermark</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_EDITOR_EXPANSION_BORDER">
      <summary>Editor expansion border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_EDITOR_EXPANSION_FILL">
      <summary>Editor expansion fill</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_EDITOR_EXPANSION_LINK">
      <summary>Editor expansion link</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_EDITOR_EXPANSION_TEXT">
      <summary>Editor expansion text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_ENVIRONMENT_BACKGROUND">
      <summary>Environment background</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_ENVIRONMENT_BACKGROUND_GRADIENTBEGIN">
      <summary>Environment gradient begin</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_ENVIRONMENT_BACKGROUND_GRADIENTEND">
      <summary>Environment gradient end</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_FILETAB_BORDER">
      <summary>File tab border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_FILETAB_CHANNELBACKGROUND">
      <summary>File tab channel background</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_FILETAB_GRADIENTDARK">
      <summary>File tab dark gradient</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_FILETAB_GRADIENTLIGHT">
      <summary>File tab light gradient</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_FILETAB_SELECTEDBACKGROUND">
      <summary>File tab selected background</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_FILETAB_SELECTEDBORDER">
      <summary>File tab selected border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_FILETAB_SELECTEDTEXT">
      <summary>File tab selected text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_FILETAB_TEXT">
      <summary>File tab text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_FORMSMARTTAG_ACTIONTAG_BORDER">
      <summary>Form smart tag action tag border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_FORMSMARTTAG_ACTIONTAG_FILL">
      <summary>Form smart tag action tag fill</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_FORMSMARTTAG_OBJECTTAG_BORDER">
      <summary>Form smart tag object tag border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_FORMSMARTTAG_OBJECTTAG_FILL">
      <summary>Form smart tag object tag fill</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_GRID_HEADING_BACKGROUND">
      <summary>Grid heading background</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_GRID_HEADING_TEXT">
      <summary>Grid heading text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_GRID_LINE">
      <summary>Grid line</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_HELP_HOWDOI_PANE_BACKGROUND">
      <summary>Help HowDoI pane background</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_HELP_HOWDOI_PANE_LINK">
      <summary>Help HowDoI pane link</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_HELP_HOWDOI_PANE_TEXT">
      <summary>Help HowDoI pane text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_HELP_HOWDOI_TASK_BACKGROUND">
      <summary>Help HowDoI task background</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_HELP_HOWDOI_TASK_LINK">
      <summary>Help HowDoI task link</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_HELP_HOWDOI_TASK_TEXT">
      <summary>Help HowDoI task text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_HELP_SEARCH_FRAME_BACKGROUND">
      <summary>Help search frame background</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_HELP_SEARCH_FRAME_TEXT">
      <summary>Help search frame text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_HELP_SEARCH_BORDER">
      <summary>Help search border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_HELP_SEARCH_FITLER_TEXT">
      <summary>Help search filter text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_HELP_SEARCH_FITLER_BACKGROUND">
      <summary>Help search filter background</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_HELP_SEARCH_FITLER_BORDER">
      <summary>Help search filter border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_HELP_SEARCH_PROVIDER_UNSELECTED_BACKGROUND">
      <summary>Help search provider unselected background</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_HELP_SEARCH_PROVIDER_UNSELECTED_TEXT">
      <summary>Help search provider unselected text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_HELP_SEARCH_PROVIDER_SELECTED_BACKGROUND">
      <summary>Help search provider selected background</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_HELP_SEARCH_PROVIDER_SELECTED_TEXT">
      <summary>Help search provider selected text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_HELP_SEARCH_PROVIDER_ICON">
      <summary>Help search provider icon</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_HELP_SEARCH_RESULT_LINK_SELECTED">
      <summary>Help search result link selected</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_HELP_SEARCH_RESULT_LINK_UNSELECTED">
      <summary>Help search result link unselected</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_HELP_SEARCH_RESULT_SELECTED_BACKGROUND">
      <summary>Help search result selected background</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_HELP_SEARCH_RESULT_SELECTED_TEXT">
      <summary>Help search result selected text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_HELP_SEARCH_BACKGROUND">
      <summary>Help search background</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_HELP_SEARCH_TEXT">
      <summary>Help search text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_HELP_SEARCH_PANEL_RULES">
      <summary>Help search panel rules</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_MDICLIENT_BORDER">
      <summary>MDI client border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PANEL_BORDER">
      <summary>Panel border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PANEL_GRADIENTDARK">
      <summary>Panel gradient dark</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PANEL_GRADIENTLIGHT">
      <summary>Panel gradient light</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PANEL_HOVEROVERCLOSE_BORDER">
      <summary>Panel hover over close border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PANEL_HOVEROVERCLOSE_FILL">
      <summary>Panel hover over close fill</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PANEL_HYPERLINK">
      <summary>Panel hyperlink</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PANEL_HYPERLINK_HOVER">
      <summary>Panel hyperlink hover</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PANEL_HYPERLINK_PRESSED">
      <summary>Panel hyperlink pressed</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PANEL_SEPARATOR">
      <summary>Panel separator</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PANEL_SUBGROUPSEPARATOR">
      <summary>Panel subgroup separator</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PANEL_TEXT">
      <summary>Panel text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PANEL_TITLEBAR">
      <summary>Panel title bar</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PANEL_TITLEBAR_TEXT">
      <summary>Panel title bar text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PANEL_TITLEBAR_UNSELECTED">
      <summary>Panel title bar unselected</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PROJECTDESIGNER_BACKGROUND_GRADIENTBEGIN">
      <summary>Project designer background gradient begin</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PROJECTDESIGNER_BACKGROUND_GRADIENTEND">
      <summary>Project designer background gradient end</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PROJECTDESIGNER_BORDER_OUTSIDE">
      <summary>Project designer border outside</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PROJECTDESIGNER_BORDER_INSIDE">
      <summary>Project designer border inside</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PROJECTDESIGNER_CONTENTS_BACKGROUND">
      <summary>Project designer contents background</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PROJECTDESIGNER_TAB_BACKGROUND_GRADIENTBEGIN">
      <summary>Project designer tab background gradient begin</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PROJECTDESIGNER_TAB_BACKGROUND_GRADIENTEND">
      <summary>Project designer tab background gradient end</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PROJECTDESIGNER_TAB_SELECTED_INSIDEBORDER">
      <summary>Project designer tab selected inside border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PROJECTDESIGNER_TAB_SELECTED_BORDER">
      <summary>Project designer tab selected border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PROJECTDESIGNER_TAB_SELECTED_HIGHLIGHT1">
      <summary>Project designer tab selected highlight1</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PROJECTDESIGNER_TAB_SELECTED_HIGHLIGHT2">
      <summary>Project designer tab selected highlight2</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PROJECTDESIGNER_TAB_SELECTED_BACKGROUND">
      <summary>Project designer tab selected background</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PROJECTDESIGNER_TAB_SEP_BOTTOM_GRADIENTBEGIN">
      <summary>Project designer tab separator bottom gradient begin</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PROJECTDESIGNER_TAB_SEP_BOTTOM_GRADIENTEND">
      <summary>Project designer tab separator bottom gradient end</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PROJECTDESIGNER_TAB_SEP_TOP_GRADIENTBEGIN">
      <summary>Project designer tab separator top gradient begin</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PROJECTDESIGNER_TAB_SEP_TOP_GRADIENTEND">
      <summary>Project designer tab separator top gradient end</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_SCREENTIP_BORDER">
      <summary>Screentip border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_SCREENTIP_BACKGROUND">
      <summary>Screentip background</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_SCREENTIP_TEXT">
      <summary>Screentip text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_SIDEBAR_BACKGROUND">
      <summary>Sidebar background</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_SIDEBAR_GRADIENTDARK">
      <summary>Sidebar gradient dark</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_SIDEBAR_GRADIENTLIGHT">
      <summary>Sidebar gradient light</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_SIDEBAR_TEXT">
      <summary>Sidebar text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_SMARTTAG_BORDER">
      <summary>Smart tag border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_SMARTTAG_FILL">
      <summary>Smart tag fill</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_SMARTTAG_HOVER_BORDER">
      <summary>Smart tag hover border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_SMARTTAG_HOVER_FILL">
      <summary>Smart tag hover fill</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_SMARTTAG_HOVER_TEXT">
      <summary>Smart tag hover text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_SMARTTAG_TEXT">
      <summary>Smart tag text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_SNAPLINES">
      <summary>Snaplines</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_SNAPLINES_PADDING">
      <summary>Snaplines padding</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_SNAPLINES_TEXTBASELINE">
      <summary>Snaplines text baseline</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_SORT_BACKGROUND">
      <summary>Sort background</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_SORT_TEXT">
      <summary>Sort text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TASKLIST_GRIDLINES">
      <summary>Task list grid lines</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TITLEBAR_ACTIVE">
      <summary>Title bar active</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TITLEBAR_ACTIVE_GRADIENTBEGIN">
      <summary>Title bar active gradient begin</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TITLEBAR_ACTIVE_GRADIENTEND">
      <summary>Title bar active gradient end</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TITLEBAR_ACTIVE_TEXT">
      <summary>Title bar active text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TITLEBAR_INACTIVE">
      <summary>Title bar inactive</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TITLEBAR_INACTIVE_GRADIENTBEGIN">
      <summary>Title bar inactive gradient begin</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TITLEBAR_INACTIVE_GRADIENTEND">
      <summary>Title bar inactive gradient end</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TITLEBAR_INACTIVE_TEXT">
      <summary>Title bar inactive text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TOOLBOX_BACKGROUND">
      <summary>Toolbox background</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TOOLBOX_DIVIDER">
      <summary>Toolbox divider</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TOOLBOX_GRADIENTDARK">
      <summary>Toolbox gradient dark</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TOOLBOX_GRADIENTLIGHT">
      <summary>Toolbox gradient light</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TOOLBOX_HEADINGACCENT">
      <summary>Toolbox heading accent</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TOOLBOX_HEADINGBEGIN">
      <summary>Toolbox heading begin</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TOOLBOX_HEADINGEND">
      <summary>Toolbox heading end</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TOOLBOX_ICON_HIGHLIGHT">
      <summary>Toolbox icon highlight</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TOOLBOX_ICON_SHADOW">
      <summary>Toolbox icon shadow</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TOOLWINDOW_BACKGROUND">
      <summary>Tool window background</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TOOLWINDOW_BORDER">
      <summary>Tool window border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TOOLWINDOW_BUTTON_DOWN">
      <summary>Tool window button down</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TOOLWINDOW_BUTTON_DOWN_BORDER">
      <summary>Tool window button down border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TOOLWINDOW_BUTTON_HOVER_ACTIVE">
      <summary>Tool window button hover active</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TOOLWINDOW_BUTTON_HOVER_ACTIVE_BORDER">
      <summary>Tool window  button hover active border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TOOLWINDOW_BUTTON_HOVER_INACTIVE">
      <summary>Tool window button hover inactive</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TOOLWINDOW_BUTTON_HOVER_INACTIVE_BORDER">
      <summary>Tool window button hover inactive border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TOOLWINDOW_TEXT">
      <summary>Tool window text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TOOLWINDOW_TAB_SELECTEDTAB">
      <summary>Tool window selected tab</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TOOLWINDOW_TAB_BORDER">
      <summary>Tool window tab border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TOOLWINDOW_TAB_GRADIENTBEGIN">
      <summary>Tool window tab gradient begin</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TOOLWINDOW_TAB_GRADIENTEND">
      <summary>Tool window tab gradient end</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TOOLWINDOW_TAB_TEXT">
      <summary>Tool window tab text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TOOLWINDOW_TAB_SELECTEDTEXT">
      <summary>Tool window tab selected text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_WIZARD_ORIENTATIONPANEL_BACKGROUND">
      <summary>Wizard orientation panel background</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_WIZARD_ORIENTATIONPANEL_TEXT">
      <summary>Wizard orientation panel text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_LASTEX">
      <summary>Lastex</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSTASKLISTSELECTIONSCROLLPOS"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTASKLISTSELECTIONSCROLLPOS.TSSP_NOSCROLL">
      <summary> </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTASKLISTSELECTIONSCROLLPOS.TSSP_CENTERCARET">
      <summary> </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTASKLISTSELECTIONSCROLLPOS.TSSP_CARETATTOP">
      <summary> </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTASKLISTSELECTIONSCROLLPOS.TSSP_CARETATBOTTOM">
      <summary> </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTASKLISTSELECTIONSCROLLPOS.TSSP_MINSCROLL">
      <summary> </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTASKLISTSELECTIONSCROLLPOS.TSSP_SHOWALL">
      <summary> </summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSTASKLISTSELECTIONTYPE"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTASKLISTSELECTIONTYPE.TST_REPLACESEL">
      <summary> </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTASKLISTSELECTIONTYPE.TST_EXTENDSEL">
      <summary> </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTASKLISTSELECTIONTYPE.TST_ADDTOSEL">
      <summary> </summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSTASKPROVIDERFLAGS">
      <summary>Task provider flags returned by <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskProvider3.GetProviderFlags(System.UInt32@)" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTASKPROVIDERFLAGS.TPF_ALWAYSVISIBLE">
      <summary>Provider is always visible in drop-down list even if it has no tasks.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTASKPROVIDERFLAGS.TPF_NOAUTOROUTING">
      <summary>Does not automatically route this provider's tasks to predefined buckets based on their categories.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSTASKVALUEFLAGS">
      <summary>Task Value flags returned by <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskItem3.GetColumnValue(System.Int32,System.UInt32@,System.UInt32@,System.Object@,System.String@)" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTASKVALUEFLAGS.TVF_EDITABLE">
      <summary>This value can be changed by the user.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTASKVALUEFLAGS.TVF_ENUM">
      <summary>The value is not arbitrary, but may only be one of a limited set of strings provided by the task item.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTASKVALUEFLAGS.TVF_BINARY_STATE">
      <summary>An enum with only two possible states. The user can switch the state by a UI action similar to selecting a check box.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTASKVALUEFLAGS.TVF_HORZ_RIGHT">
      <summary>The value is aligned against the right edge of the column.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTASKVALUEFLAGS.TVF_HORZ_CENTER">
      <summary>The value is horizontally centered in the column.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTASKVALUEFLAGS.TVF_STRIKETHROUGH">
      <summary>The value is drawn with a strikethrough font style.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTASKVALUEFLAGS.TVF_FILENAME">
      <summary>This textual value will be treated as a file name.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSTASKVALUETYPE"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTASKVALUETYPE.TVT_NULL">
      <summary> </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTASKVALUETYPE.TVT_TEXT">
      <summary> </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTASKVALUETYPE.TVT_LINKTEXT">
      <summary> </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTASKVALUETYPE.TVT_BASE10">
      <summary> </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTASKVALUETYPE.TVT_IMAGE">
      <summary> </summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSTRANSACCELEXFLAGS">
      <summary>Flags for <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsFilterKeys2.TranslateAcceleratorEx(Microsoft.VisualStudio.OLE.Interop.MSG[],System.UInt32,System.UInt32,System.Guid[],System.Guid@,System.UInt32@,System.Int32@,System.Int32@)" /> calls.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTRANSACCELEXFLAGS.VSTAEXF_Default">
      <summary>The <paramref name="rgrguidKeyBindingScopes" /> are pre-pended to currently active key binding scopes then command is fired.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTRANSACCELEXFLAGS.VSTAEXF_NoFireCommand">
      <summary>Do not fire the command through command routing.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTRANSACCELEXFLAGS.VSTAEXF_IgnoreActiveKBScopes">
      <summary>The <paramref name="rgrguidKeyBindingScopes" /> are used INSTEAD of currently active key binding scopes.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTRANSACCELEXFLAGS.VSTAEXF_UseTextEditorKBScope">
      <summary>Translate keys using TextEditor key bindings. Equivalent to passing CMDUIGUID_TextEditor, CMDSETID_StandardCommandSet97, and guidKeyDupe for scopes and the <see cref="F:Microsoft.VisualStudio.Shell.Interop.__VSTRANSACCELEXFLAGS.VSTAEXF_IgnoreActiveKBScopes" /> flag.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTRANSACCELEXFLAGS.VSTAEXF_UseGlobalKBScope">
      <summary>Translate keys using Global key bindings. Equivalent to passing CMDSETID_StandardCommandSet97 and guidKeyDupe for scopes and the <see cref="F:Microsoft.VisualStudio.Shell.Interop.__VSTRANSACCELEXFLAGS.VSTAEXF_IgnoreActiveKBScopes" /> flag.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTRANSACCELEXFLAGS.VSTAEXF_AllowModalState">
      <summary>By default this function cannot be called when the shell is in a modal state, since command routing is inherently dangerous. However if you must access this in a modal state, specify this flag, but keep in mind that many commands will cause unpredictable behavior if fired.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSTWDFLAGS"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTWDFLAGS.VSTWDFLAGS_NOFLAGS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTWDFLAGS.VSTWDFLAGS_CANCELLABLE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTWDFLAGS.VSTWDFLAGS_TOPMOST">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSUL_ERRORLEVEL">
      <summary>Indicates error levels for the upgrade logger.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSUL_ERRORLEVEL.VSUL_INFORMATIONAL">
      <summary>Informational message</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSUL_ERRORLEVEL.VSUL_WARNING">
      <summary>Warning message</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSUL_ERRORLEVEL.VSUL_ERROR">
      <summary>Error message</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSUL_ERRORLEVEL.VSUL_STATUSMSG">
      <summary>Status message</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSUL_ERRORLEVEL.VSUL_PROJECT_HYPERLINK">
      <summary>Project hyperlink</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSWIZARDTRUSTLEVEL">
      <summary>Specifies wizard trust levels</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSWIZARDTRUSTLEVEL.WTL_Trusted">
      <summary>Trusted</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSWIZARDTRUSTLEVEL.WTL_Untrusted">
      <summary>Untrusted</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSWIZARDTRUSTLEVEL.WTL_Unspecified">
      <summary>Unspecified</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__XMLMEMBERDATA_OPTIONS"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__XMLMEMBERDATA_OPTIONS.XMLMEMBERDATA_OPTIONS_NONE">
      <summary> </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__XMLMEMBERDATA_OPTIONS.XMLMEMBERDATA_OPTIONS_PRESERVE_NEWLINES">
      <summary> </summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__XMLMEMBERDATA_TAGTYPE">
      <summary>Specifies tag types for XML member data elements.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__XMLMEMBERDATA_TAGTYPE.XMLMEMBERDATA_TAGTYPE_CREF">
      <summary>Code reference tag type.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._BROWSE_COMPONENT_SET_OPTIONS">
      <summary>Specifies <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsBrowseComponentSet" /> list options to modify behavior provided by a library.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._BROWSE_COMPONENT_SET_OPTIONS.BCSO_NO_REMOVE">
      <summary>Delete not available. <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.CanDelete(System.UInt32,System.Int32@)" /> will always return FALSE.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._BROWSE_COMPONENT_SET_OPTIONS.BCSO_NO_RENAME">
      <summary>Rename not available. <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.CanDelete(System.UInt32,System.Int32@)" /> will always return FALSE.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._BROWSE_COMPONENT_SET_OPTIONS.BCSO_NO_DRAG_DROP">
      <summary>Drag and drop not available. <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.QueryDragDrop(System.UInt32,Microsoft.VisualStudio.OLE.Interop.IDataObject,System.UInt32,System.UInt32@)" /> will always return FALSE</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._BROWSE_COMPONENT_SET_OPTIONS.BCSO_PROJECT_REFERENCES">
      <summary>
        <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetCategoryField2(System.UInt32,System.Int32,System.UInt32@)" /> will return <see cref="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_PHYSICALCONTAINERTYPE.LCPT_PROJECTREFERENCE" /> for the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIBCAT_PHYSICALCONTAINERTYPE" /> category. This is needed to show/hide project references class view functionality.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._BROWSE_COMPONENT_SET_TYPE">
      <summary>Specifies settings for browse component types.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._BROWSE_COMPONENT_SET_TYPE.BCST_EXCLUDE_LIBRARIES">
      <summary>Exclude libraries.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._BROWSE_COMPONENT_SET_TYPE.BCST_INCLUDE_LIBRARIES">
      <summary>Include libraries.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._BuildSystemKindFlags"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._BuildSystemKindFlags.BSK_MSBUILD">
      <summary> </summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._DEBUG_LAUNCH_OPERATION2">
      <summary>Provides additional members to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.DEBUG_LAUNCH_OPERATION" /> enumeration.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._DEBUG_LAUNCH_OPERATION2.DLO_AttachToHostingProcess">
      <summary>Attach to a hosting process.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._DEBUG_LAUNCH_OPERATION2.DLO_StartDebuggingHostingProcess">
      <summary>Start debugging.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._LAUNCHPAD_FLAGS2">
      <summary>Determines whether command line tool and batch file output is treated as Unicode.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LAUNCHPAD_FLAGS2.LPF_TreatOutputAsUnicode">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._LIB_CATEGORY2">
      <summary>Provides additional members to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.LIB_CATEGORY" /> enumeration. Defines Library Manager List Element Categories (for use in Symbol Provider List Element Attribute Domains).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIB_CATEGORY2.LC_NIL">
      <summary>= 0. No category.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIB_CATEGORY2.LC_PHYSICALCONTAINERTYPE">
      <summary>Physical container element type.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIB_CATEGORY2.LC_HIERARCHYTYPE">
      <summary>Hierarchy element type.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIB_CATEGORY2.LC_MEMBERINHERITANCE">
      <summary>Member inheritance.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIB_CATEGORY2.LC_SEARCHMATCHTYPE">
      <summary>Search match type. Supported by the object model, but libraries are not required to implement this.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIB_CATEGORY2.LC_Last2">
      <summary>Indicates last LIB_CATEGORY_ member.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._LIB_FLAGS2">
      <summary>Provides additional members for the LIB_FLAG enumeration. Enumerates the library flags returned from I<see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsLibrary2.GetLibFlags2(System.UInt32@)" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIB_FLAGS2.LF_SUPPORTSPROJECTREFERENCES">
      <summary>Supports exposing project references.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIB_FLAGS2.LF_SUPPORTSFILTERING">
      <summary>Supports filtering (<see cref="F:Microsoft.VisualStudio.Shell.Interop._VSOBSEARCHOPTIONS2.VSOBSO_FILTERING" /> flag in <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2" />).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIB_FLAGS2.LF_SUPPORTSFILTERINGWITHEXPANSION">
      <summary>Library supports search with expansion (<see cref="F:Microsoft.VisualStudio.Shell.Interop._VSOBSEARCHOPTIONS2.VSOBSO_EXPANDCHILDREN" /> flag in <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2" />); implies LF_SUPPORTSFILTERING.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIB_FLAGS2.LF_SUPPORTSCALLBROWSER">
      <summary>Supports Call Browser Calls To or Calls From.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIB_FLAGS2.LF_SUPPORTSLISTREFERENCES">
      <summary>Can find symbol usages (<see cref="F:Microsoft.VisualStudio.Shell.Interop._VSOBSEARCHOPTIONS2.VSOBSO_LISTREFERENCES" /> flag in <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2" />).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIB_FLAGS2.LF_SUPPORTSALWAYSUPDATE">
      <summary>Supports Always update (even for Find symbol results).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIB_FLAGS2.LF_SUPPORTSBASETYPES">
      <summary>Supports exposing base types.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIB_FLAGS2.LF_SUPPORTSDERIVEDTYPES">
      <summary>Supports exposing derived types.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIB_FLAGS2.LF_SUPPORTSINHERITEDMEMBERS">
      <summary>Supports exposing inherited members.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIB_FLAGS2.LF_SUPPORTSPRIVATEMEMBERS">
      <summary>Supports exposing private members.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIB_FLAGS2.LF_SUPPORTSCLASSDESIGNER">
      <summary>Supports Class designer.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIB_FLAGS2.LF_SHOWFULLNAMESINFINDSYMBOLRESULTS">
      <summary>Requests to show fully qualified names in find symbol results.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._LIB_LISTCAPABILITIES2">
      <summary>Library list flags returned from <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetCapabilities2(System.UInt32@)" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIB_LISTCAPABILITIES2.LLC_ALLOWELEMENTSEARCH">
      <summary>Allows search starting at given element for <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetList2(System.UInt32,System.UInt32,System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2[],Microsoft.VisualStudio.Shell.Interop.IVsObjectList2@)" />.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._LIB_LISTTYPE2">
      <summary>Provides additional members to the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_LISTTYPE" /> enumeration.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIB_LISTTYPE2.LLT_NIL">
      <summary>NIL; 0</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIB_LISTTYPE2.LLT_MEMBERHIERARCHY">
      <summary>Member hierarchy list type (object browser places lists of this type in the member pane).</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._LIBCAT_CLASSTYPE2">
      <summary>Provides additional members for the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIBCAT_CLASSTYPE" /> enumeration.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_CLASSTYPE2.LCCT_TEMPLATE">
      <summary>Specifies a template class.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_CLASSTYPE2.LCCT_GENERIC">
      <summary>Specifies a generic class.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_CLASSTYPE2.LCCT_ITERATOR">
      <summary>Specifies an iterator class.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._LIBCAT_HIERARCHYTYPE">
      <summary>Specifies the hierarchy element type.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_HIERARCHYTYPE.LCHT_UNKNOWN">
      <summary>Unknown (Generic) hierarchy element type.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_HIERARCHYTYPE.LCHT_FOLDER">
      <summary>Folder hierarchy element type.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_HIERARCHYTYPE.LCHT_BASESANDINTERFACES">
      <summary>Bases and Interfaces hierarchy element type.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_HIERARCHYTYPE.LCHT_PROJECTREFERENCES">
      <summary>Project References hierarchy element type.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_HIERARCHYTYPE.LCHT_DERIVEDTYPES">
      <summary>Derived Types hierarchy element type.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_HIERARCHYTYPE.LCHT_INFO">
      <summary>Info hierarchy element type.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._LIBCAT_MEMBERINHERITANCE">
      <summary>Specifies inheritance options for libcat members.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_MEMBERINHERITANCE.LCMI_IMMEDIATE">
      <summary>Immediate member of class (type).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_MEMBERINHERITANCE.LCMI_OVERRIDABLE">
      <summary>Overridable (virtual), but not overridden member of parent class (type).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_MEMBERINHERITANCE.LCMI_OVERRIDEREQUIRED">
      <summary>Override-required (pure virtual), but not overridden, member of parent class (type).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_MEMBERINHERITANCE.LCMI_OVERRIDDEN">
      <summary>Overridden (virtual or pure virtual) member of parent class (type).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_MEMBERINHERITANCE.LCMI_NOTOVERRIDABLE">
      <summary>Not overridable member of parent class (type).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_MEMBERINHERITANCE.LCMI_INHERITED">
      <summary>Inherited member of class (type).</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._LIBCAT_MEMBERTYPE2">
      <summary>Provides additional members to the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIBCAT_MEMBERTYPE" /> enumeration.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_MEMBERTYPE2.LCMT_TEMPLATE">
      <summary>Indicates template method.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_MEMBERTYPE2.LCMT_GENERIC">
      <summary>Indicates generic method.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._LIBCAT_PHYSICALCONTAINERTYPE">
      <summary>Specifies the type of a physical container.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_PHYSICALCONTAINERTYPE.LCPT_GLOBAL">
      <summary>Specifies a global physical container.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_PHYSICALCONTAINERTYPE.LCPT_PROJECTREFERENCE">
      <summary>Specifies a project reference physical container.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_PHYSICALCONTAINERTYPE.LCPT_PROJECT">
      <summary>Specifies a project physical container.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._LIBCAT_SEARCHMATCHTYPE">
      <summary>Specifies library manager search match types.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_SEARCHMATCHTYPE.LSMT_WHOLEWORD">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_SEARCHMATCHTYPE.LSMT_WHOLEWORD_NO_CASE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_SEARCHMATCHTYPE.LSMT_LEAF_WHOLEWORD">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_SEARCHMATCHTYPE.LSMT_LEAF_WHOLEWORD_NO_CASE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_SEARCHMATCHTYPE.LSMT_PART_WHOLEWORD">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_SEARCHMATCHTYPE.LSMT_PART_WHOLEWORD_NO_CASE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_SEARCHMATCHTYPE.LSMT_PRESTRING">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_SEARCHMATCHTYPE.LSMT_PRESTRING_NO_CASE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_SEARCHMATCHTYPE.LSMT_LEAF_PRESTRING">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_SEARCHMATCHTYPE.LSMT_LEAF_PRESTRING_NO_CASE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_SEARCHMATCHTYPE.LSMT_PART_PRESTRING">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_SEARCHMATCHTYPE.LSMT_PART_PRESTRING_NO_CASE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_SEARCHMATCHTYPE.LSMT_SUBSTRING">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_SEARCHMATCHTYPE.LSMT_SUBSTRING_NO_CASE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_SEARCHMATCHTYPE.LSMT_NO_MATCH">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._PersistStorageType">
      <summary>Specifies the persistent location for <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsBuildPropertyStorage" /> and <see cref="T:Microsoft.VisualStudio.Shell.Interop.IPersistXMLFragment" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._PersistStorageType.PST_PROJECT_FILE">
      <summary>Specifies storage file type to project file.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._PersistStorageType.PST_USER_FILE">
      <summary>Specifies storage file type to user file.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._ProjectLoadSecurityDialogState"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._ProjectLoadSecurityDialogState.PLSDS_ShowAgain">
      <summary> </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._ProjectLoadSecurityDialogState.PLSDS_DontShowAgainBrowse">
      <summary> </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._ProjectLoadSecurityDialogState.PLSDS_DontShowAgainFullLoad">
      <summary> </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._ProjectLoadSecurityDialogState.PLSDS_DontShowAgainUnload">
      <summary> </summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._SqlAddNewReferenceFlags">
      <summary>Specifies flags to invoke new references.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._SqlAddNewReferenceFlags.SqlAddNewReferenceFlags_DownloadSelected">
      <summary>Selected references that should be downloaded to local cache before caller's <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsComponentUser.AddComponent(Microsoft.VisualStudio.Shell.Interop.VSADDCOMPOPERATION,System.UInt32,System.IntPtr[],System.IntPtr,Microsoft.VisualStudio.Shell.Interop.VSADDCOMPRESULT[])" /> call.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._SqlReferenceUpdateAction">
      <summary>Specifies SQL Reference Update service actions.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._SqlReferenceUpdateAction.SqlReferenceUpdateAction_None">
      <summary>No action.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._SqlReferenceUpdateAction.SqlReferenceUpdateAction_Delete">
      <summary>Delete action.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._SqlReferenceUpdateAction.SqlReferenceUpdateAction_Update">
      <summary>Update action.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._SqlReferenceUpdateFlags">
      <summary>Specifies how SQL references are updated.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._SqlReferenceUpdateFlags.SqlReferenceUpdateFlags_ForceUpdate">
      <summary>Force updates</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._VSOBJLISTELEMPROPID">
      <summary>Specifies object list element properties in <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetProperty(System.UInt32,System.Int32,System.Object@)" /> calls.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._VSOBJLISTELEMPROPID.VSOBJLISTELEMPROPID_FIRST">
      <summary>Denotes the first VSOBJLISTELEMPROPID_.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._VSOBJLISTELEMPROPID.VSOBJLISTELEMPROPID_HELPKEYWORD">
      <summary>Specifies the objects help key word.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._VSOBJLISTELEMPROPID.VSOBJLISTELEMPROPID_COMPONENTPATH">
      <summary>Specifies the component path.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._VSOBJLISTELEMPROPID.VSOBJLISTELEMPROPID_CODEDEFVIEWCONTEXT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._VSOBJLISTELEMPROPID.VSOBJLISTELEMPROPID_SUPPORTSCALLSTO">
      <summary>Indicates the "SupportsCallsTo" property.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._VSOBJLISTELEMPROPID.VSOBJLISTELEMPROPID_SUPPORTSCALLSFROM">
      <summary>Indicates the "SupportsCallsFrom" property.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._VSOBJLISTELEMPROPID.VSOBJLISTELEMPROPID_FULLNAME">
      <summary>Specifies the objects full name.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._VSOBJLISTELEMPROPID.VSOBJLISTELEMPROPID_LEAFNAME">
      <summary>Specifies the objects leaf name.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._VSOBJLISTELEMPROPID.VSOBJLISTELEMPROPID_NAME_FOR_RENAME">
      <summary>Specifies a name for renaming the object.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._VSOBJLISTELEMPROPID.VSOBJLISTELEMPROPID_LAST">
      <summary>Denotes the last VSOBJLISTELEMPROPID_</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._VSOBSEARCHOPTIONS2">
      <summary>Provides additional members to the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSOBSEARCHOPTIONS" /> enumeration.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._VSOBSEARCHOPTIONS2.VSOBSO_FILTERING">
      <summary>Specifies filter in class view and the object browser.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._VSOBSEARCHOPTIONS2.VSOBSO_EXPANDCHILDREN">
      <summary>Used with VSOBSO_FILTERING if a library supports <see cref="F:Microsoft.VisualStudio.Shell.Interop._LIB_FLAGS2.LF_SUPPORTSFILTERINGWITHEXPANSION" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._VSOBSEARCHOPTIONS2.VSOBSO_CALLSTO">
      <summary>Obtains calls to symbol specified in <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._VSOBSEARCHOPTIONS2.VSOBSO_CALLSFROM">
      <summary>Obtains calls from symbol specified in <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._VSOBSEARCHOPTIONS2.VSOBSO_LISTREFERENCES">
      <summary>Specifies that search results should contain references as children.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._VSRDTFLAGS2"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._VSRDTFLAGS2.RDT_Lock_WeakEditLock">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._VSRDTFLAGS2.RDT_LOCKUNLOCKMASK">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.BLDGETFLAGS"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BLDGETFLAGS.BLDGETOPT_FAUTOMAPGUID">
      <summary>Interpret the <paramref name="rguidBuilder" /> parameter of <see cref="M:Microsoft.VisualStudio.Shell.Interop.IBuilderWizardManager.GetBuilder(System.Guid@,System.UInt32,System.IntPtr,System.Object@,System.IntPtr@,System.Guid@,System.Object@)" /> as a component category ID (CATID). When you set this flag, <see cref="T:Microsoft.VisualStudio.Shell.Interop.IBuilderWizardManager" /> makes first call <see cref="M:Microsoft.VisualStudio.Shell.Interop.IBuilderWizardManager.MapBuilderCATIDToCLSID(System.Guid@,System.UInt32,System.IntPtr,System.Guid@)" /> before it determines which builder <see cref="IDispatch" /> to return. Do not set this flag if you are use a builder CLSID.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BLDGETFLAGS.BLDGETOPT_FAUTOMAPENABLEPROMPT">
      <summary>Used only if you set BLDGETOPT_FAUTOMAPGUID. Provides a user prompt to select the builder. If this flag is set, then BLDGETOPT_FAUTOMAPPROMPTALWAYS determines whether or not to prompt the user. Not setting this flag is the same as passing BLDPROMPTOPT_PROMPTNEVER to MapBuilderCATIDToCLSID. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BLDGETFLAGS.BLDGETOPT_FAUTOMAPPROMPTALWAYS">
      <summary>Used only if you set both BLDGETOPT_FAUTOMAPGUID and BLDGETOPT_FAUTOMAPENABLEPROMPT. When you set this flag, it always causes a user prompt to choose the builder. If you don't set this flag, then the user is prompted only if there is more than one registered builder for a category and the category has no default registered builder.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BLDGETFLAGS.BLDGETOPT_FOBJECTBUILDER">
      <summary>Requested builder is an Object Builder. An Object Builder is a builder invoked after it inserts a new OLE object or control in a container.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BLDGETFLAGS.BLDGETOPT_FNOINTRINSICS">
      <summary>Build without intrinsics.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.BLDPROMPTOPT"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BLDPROMPTOPT.BLDPROMPTOPT_PROMPTIFMULTIPLE">
      <summary> Prompt the user if there is no default and there is more than one registered builder.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BLDPROMPTOPT.BLDPROMPTOPT_PROMPTALWAYS">
      <summary> Always prompt the user.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BLDPROMPTOPT.BLDPROMPTOPT_PROMPTNEVER">
      <summary> Never prompt the user. Use the default builder if there is one. Otherwise, use the first registered builder.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.BrowseLibraryGuids80">
      <summary>Provides a list of GUIDs that are used to identify browse library attributes.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BrowseLibraryGuids80.Assembly">
      <summary>Specifies an assembly in a browse container.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BrowseLibraryGuids80.BSC">
      <summary>Specifies a .bsc file in a browse container.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BrowseLibraryGuids80.CSharp">
      <summary>Specifies a C# file in a browse container.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BrowseLibraryGuids80.Folder">
      <summary>Specifies a folder in a browse container.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BrowseLibraryGuids80.ResourceView">
      <summary>Specifies a resource view in a browse container.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BrowseLibraryGuids80.TypeLib">
      <summary>Specifies a type library in a browse container.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BrowseLibraryGuids80.VB">
      <summary>Specifies a Visual Basic file in a browse container.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BrowseLibraryGuids80.VC">
      <summary>Specifies a C++ file in a browse container.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BrowseLibraryGuids80.VJSharp">
      <summary>Specifies a J# file in a browse container.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.BuildableProjectCfgOpts"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BuildableProjectCfgOpts.Rebuild">
      <summary> </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BuildableProjectCfgOpts.BuildSelectionOnly">
      <summary> </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BuildableProjectCfgOpts.BuildActiveDocumentOnly">
      <summary> </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BuildableProjectCfgOpts.Private">
      <summary> </summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.BuildOutputGroup">
      <summary>Represents a build output group.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BuildOutputGroup.Built">
      <summary>Represents built files in an output group.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BuildOutputGroup.ContentFiles">
      <summary>Represents content files in an output group.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BuildOutputGroup.Documentation">
      <summary>Represents documentation files in an output group.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BuildOutputGroup.LocalizedResourceDlls">
      <summary>Represents localized resource DLLs in an output group.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BuildOutputGroup.SourceFiles">
      <summary>Represents source code files in an output group.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BuildOutputGroup.Symbols">
      <summary>Represents a list of symbols in an output group.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.ComponentSelectorGuids80">
      <summary>Provides a list of GUIDs that are used to identify component selector items.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ComponentSelectorGuids80.BrowseFilesPage">
      <summary>Specifies a file browser page in the component selector.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ComponentSelectorGuids80.COMClassicPage">
      <summary>Specifies a COM component selector page.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ComponentSelectorGuids80.COMPlusPage">
      <summary>Specifies a COM+ component selector page.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ComponentSelectorGuids80.MRUPage">
      <summary>Specifies a most-recently-used item selector page.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ComponentSelectorGuids80.SolutionPage">
      <summary>Specifies a solution selector page.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.CTLBLDTYPE"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.CTLBLDTYPE.CTLBLDTYPE_FSTDPROPBUILDER">
      <summary> </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.CTLBLDTYPE.CTLBLDTYPE_FINTERNALBUILDER">
      <summary> </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.CTLBLDTYPE.CTLBLDTYPE_FEDITSOBJDIRECTLY">
      <summary> </summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.DTECatID">
      <summary>Provides a list of GUIDs that are used to identify DTE categories.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.DTECatID.Document">
      <summary>Specifies a document.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.DTECatID.GenericProject">
      <summary>Specifies a project.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.DTECatID.MiscFilesProject">
      <summary>Specifies a project file.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.DTECatID.MiscFilesProjectItem">
      <summary>Specifies a project file.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.DTECatID.Solution">
      <summary>Specifies a solution.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.DTECatID.SolutionBrowseObject">
      <summary>Specifies a solution browse object.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.FontsAndColorsCategory">
      <summary>Defines target groups for which font and color options are specified.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.FontsAndColorsCategory.CommandWindow">
      <summary>Indicates font and color settings for the Command window.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.FontsAndColorsCategory.DialogsAndToolWindows">
      <summary>Indicates font and color settings for the Dialog and Tool window.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.FontsAndColorsCategory.FindResults">
      <summary>Indicates font and color settings for the Find Results window.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.FontsAndColorsCategory.ImmediateWindow">
      <summary>Indicates font and color settings for the Immediate window.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.FontsAndColorsCategory.Outputwindow">
      <summary>Indicates font and color settings for the Output window</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.FontsAndColorsCategory.Printer">
      <summary>Indicates font and color settings for printing.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.FontsAndColorsCategory.StatementCompletion">
      <summary>Indicates font and color settings for statement completion lists.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.FontsAndColorsCategory.SystemWindow">
      <summary>Indicates font and color settings for the System window.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.FontsAndColorsCategory.TextEditor">
      <summary>Indicates font and color settings for text editing.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.FontsAndColorsCategory.TextOutputToolWindows">
      <summary>Indicates font and color settings for the text output tool windows.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.FontsAndColorsCategory.Tooltip">
      <summary>Indicates font and color settings for tooltips.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.HOSTPROPID"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.HOSTPROPID.HOSTPROPID_PROJECTNAME">
      <summary> </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.HOSTPROPID.HOSTPROPID_HIERARCHY">
      <summary> </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.HOSTPROPID.HOSTPROPID_RELURL">
      <summary> </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.HOSTPROPID.HOSTPROPID_INTELLISENSECACHE_FILENAME">
      <summary> </summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IBuilderWizardManager">
      <summary>Retrieves and manages builders for specific properties and components. A builder generates code for an item.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IBuilderWizardManager.DoesBuilderExist(System.Guid@)">
      <summary>Verifies existence of a builder given a builder CLSID, or component category identifier (CATID) such as CATID_PropertyBuilder.</summary>
      <returns>Returns S_OK if a builder exists.Returns S_FALSE if it does not exist it </returns>
      <param name="rguidBuilder"> [in] A CLSID or CATID for a builder.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IBuilderWizardManager.EnableModeless(System.Int32)">
      <summary>Sets builder dialogs to modeless or modal.</summary>
      <returns>Returns S_OK. This method does not fail.</returns>
      <param name="fEnable">[in] true to enable modeless dialogs; false otherwise.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IBuilderWizardManager.GetBuilder(System.Guid@,System.UInt32,System.IntPtr,System.Object@,System.IntPtr@,System.Guid@,System.Object@)">
      <summary>Requests a builder by CLSID or component category ID (CATID).</summary>
      <returns>S_OK if the builder interface is successfully returned.S_FALSE if the dialog UI is canceled.E_NOINTERFACE if the builder is not supported.An error HRESULT from CoCreatInstance if the builder automation server could not be instantiated.</returns>
      <param name="rguidBuilder"> [in] The CLSID or CATID of the builder. You can use a CATID only if you specify BLDGETOPT_AUTOMAPGUID as part of <paramref name="grfGetOpt" />.</param>
      <param name="grfGetOpt"> [in] Options as bit flags. Values are from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.BLDGETFLAGS" /> enumeration.</param>
      <param name="hwndPromptOwner"> [in] Optional owner HWND for all dialogs if the user needs to choose which builder to run. Used only if you specify both BLDGETOPT_FAUTOMAPGUID and BLDGETOPT_FAUTOMAPENABLEPROMPT as part of <paramref name="grfGetOpt" />. </param>
      <param name="ppdispApp">[out] The IDispatch of the application the caller can pass to the invoke call on the builder. The caller must call release for this interface. You can use NULL if this IBuilderWizardManager does not have an IDispatch or the caller is not interested in getting the application IDispatch. </param>
      <param name="pwndBuilderOwner"> [out] Calculated HWND the caller should use as the owner HWND for invoking the builder. May be NULL if the caller is not interested in the calculated hwnd. Set to the HWND of the application main frame window if hwndPromptOwner is NULL. then *phwndBuilderOwner will be set to the hwnd of Application main frame window. Set to hwndPromptOwner if hwndPromptOwner is not NULL. This is the case when invoking the builder from within another modal dialog.</param>
      <param name="riidBuilder"> [in] Interface the client wants from the builder OLE server. The client needs to know the interface to ask for based on the type of builder wanted.</param>
      <param name="ppunkBuilder"> [out] IUnknown interface pointer of the builder.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IBuilderWizardManager.MapBuilderCATIDToCLSID(System.Guid@,System.UInt32,System.IntPtr,System.Guid@)">
      <summary>Returns the CLSID of a specific builder given a component category ID (CATID).</summary>
      <returns>S_OK if the CATID maps to a builder.S_FALSE if there is no builder for the CATID.</returns>
      <param name="rguidBuilder"> [in] The CATID of a builder.If the GUID is a CLSID of a specific builder and <see cref="T:Microsoft.VisualStudio.Shell.Interop.IBuilderWizardManager" /> supports this builder, this method returns S_OK and sets <paramref name="pclsidBuilder" /> to <paramref name="rguidBuilder" />.</param>
      <param name="dwPromptOpt"> [in] Bit flags controlling whether there is a user prompt to choose the builder. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.BLDPROMPTOPT" /> enumeration.</param>
      <param name="hwndPromptOwner"> [in] Owner HWND for all dialogs and windows. May be NULL. If NULL, IBuilderWizardManager uses the HWND for the application frame window.NoteThis method may bring up a modal dialog asking the user to choose the builder to use.</param>
      <param name="pclsidBuilder">[out] The CLSID of a specific builder.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IBuilderWizardManager.MapObjectToBuilderCLSID(System.Guid@,System.UInt32,System.IntPtr,System.Guid@)">
      <summary>Returns the CLSID of a builder for an OLE object given the object's CLSID.</summary>
      <returns>S_OK if the CLSID maps to a builder.S_FALSE if there is no builder for the CLSID.</returns>
      <param name="rclsidObject"> [in] CLSID of the object</param>
      <param name="dwPromptOpt"> [in] Bit flags controlling whether there is a user prompt to choose the builder. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.BLDPROMPTOPT" /> enumeration.</param>
      <param name="hwndPromptOwner">[in] Owner HWND for all dialogs and windows. May be NULL. If NULL, IBuilderWizardManager uses the HWND for the application frame window.NoteThis method may bring up a modal dialog asking the user to choose the builder to use.</param>
      <param name="pclsidBuilder"> [out] The CLSID of a specific builder.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IDirAutoCompleteList">
      <summary>Marks a directory list as supporting auto completion. Auto completion displays matching subdirectories as you enter characters.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IDirList">
      <summary>Manages the appearance and actions of a displayed directory list.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IDirList.Add(System.String)">
      <summary>Adds a string to a directory list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrItem"> [in] A string to add to the directory listing.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IDirList.get_Count(System.Int32@)">
      <summary>Gets the number of items in the directory list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="nItems"> [out] The number of items in the directory list.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IDirList.get_Description(System.String@)">
      <summary>Returns the description of the directory list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrDescription"> [out] String containing the description of the directory list.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IDirList.get_HWND(System.Int32@)">
      <summary>Returns the HWND of the directory list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="phwnd"> [out] The HWND of the directory list.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IDirList.get_Title(System.String@)">
      <summary>Get the title of the directory list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrTitle"> [out] String containing the title of the directory list.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IDirList.index(System.Int32,System.String@)">
      <summary>Retrieves an item, by position, from the directory list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="nItem"> [in] Index (position) of the item to return.</param>
      <param name="pbstrItem"> [out] String containing the directory item.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IDirList.put_Description(System.String)">
      <summary>Changes the description of the directory list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrDescription"> [in] String containing the new description.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IDirList.put_ShowCheck(System.Boolean)">
      <summary>Show or hide the checkbox next to each item in the list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bShow"> true to show the checkboxes; false to hide them.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IDirList.put_ShowTitle(System.Boolean)">
      <summary>Show or hide the title of the directory list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bShow"> true to show the title; false to hide it.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IDirList.put_Title(System.String)">
      <summary>Change the title of the directory list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrTitle"> String containing the new title for the directory list.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IDirList.Reset">
      <summary>Go back to the default values for the directory list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IDirListEvents">
      <summary>Specifies the event handler for a displayed directory list. This is the outgoing interface for the directory list's implementation of <see cref="T:Microsoft.VisualStudio.OLE.Interop.IConnectionPoint" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IDirListEvents.OnChange">
      <summary>Event handler for a directory list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IDirListSite">
      <summary>Maintains the interface pointer to the parent object managing the directory list.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IDirListSite.SetSite(System.Object)">
      <summary>Sets the site, the container for the directory list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="__MIDL_0011"> Pointer to the IUnknown interface of the object containing the directory list.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IDiscoveryClientResult">
      <summary>A single result from a Web service discovery search. Member of a <see cref="T:Microsoft.VisualStudio.Shell.Interop.IDiscoveryClientResultCollection" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IDiscoveryClientResult.GetFileName(System.String@)">
      <summary>Returns the filename of the discovery document.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrFilename">[out] Pointer to a string containing the filename of the document.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IDiscoveryClientResult.GetReferenceTypeName(System.String@)">
      <summary>Returns the type of a referenced document in a Web discovery document.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrReferenceTypeName">[out] String containing the type of reference made in the document.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IDiscoveryClientResult.GetUrl(System.String@)">
      <summary>Returns the URL of the referenced document in the discovery document.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrUrl">[out] Pointer to the string containing the URL of the document referenced in the discovery document.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IDiscoveryClientResultCollection">
      <summary>A collection of results, <see cref="T:Microsoft.VisualStudio.Shell.Interop.IDiscoveryClientResult" /> interfaces, from a Web service discovery search.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IDiscoveryClientResultCollection.GetResult(System.Int32,Microsoft.VisualStudio.Shell.Interop.IDiscoveryClientResult@)">
      <summary>Returns a single Web discovery result.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pIndex">[in] Index of the discovery result to return.</param>
      <param name="ppIDiscoveryClientResult">[out] The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IDiscoveryClientResult" /> interface of the discovery result.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IDiscoveryClientResultCollection.GetResultCount(System.Int32@)">
      <summary>Returns the number of results in the collection of discovery results.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pCount">[out] The number of discovery results in the collection.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IDiscoveryResult2">
      <summary>Downloads the results of an XML Web service discovery session.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IDiscoveryResult2.DownloadServiceDocument(System.String,System.String,Microsoft.VisualStudio.Shell.Interop.IDiscoveryClientResultCollection@)">
      <summary>Updates an output parameter with a pointer to a pointer to a Client Discovery Result Collection Object containing the results of a Web Service Discovery Session</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrDestinationPath">[in] String containing the destination path to the folder where the files are to be stored.</param>
      <param name="bstrDiscomapFileName">[in] String containing the destination path to the discomap file.</param>
      <param name="ppIDiscoveryClientResultCollection">[out] Pointer to a pointer to a <see cref="T:Microsoft.VisualStudio.Shell.Interop.IDiscoveryClientResultCollection" />.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IEnumWebServices">
      <summary>Enumerator for the Web services offered by a Web site or a project. You can get an instance of the interface using the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsWebServiceProvider.WebServices(Microsoft.VisualStudio.Shell.Interop.IEnumWebServices@)" /> method of the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsWebServiceProvider" /> interface.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IEnumWebServices.Clone(Microsoft.VisualStudio.Shell.Interop.IEnumWebServices@)">
      <summary>Clones this <see cref="T:Microsoft.VisualStudio.Shell.Interop.IEnumWebServices" /> interface by creating another instance.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppEnum">[out] Reference to the cloned <see cref="T:Microsoft.VisualStudio.Shell.Interop.IEnumWebServices" /> interface.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IEnumWebServices.Next(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsWebService[],System.UInt32@)">
      <summary>Retrieves the next group of Web service interfaces (<see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsWebService" />).</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="celt">[in] Number of Web service interfaces to return, or zero to indicate a request for all of the objects.</param>
      <param name="rgelt">[out] An array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsWebService" /> objects. Contains <paramref name="pceltFetched" /> objects.</param>
      <param name="pceltFetched">[out] Actual number of interfaces retrieved.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IEnumWebServices.Reset">
      <summary>Returns the enumerator to its initial state.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IEnumWebServices.Skip(System.UInt32)">
      <summary>Skip over a specified number of Web service interfaces.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="celt">[in] The number of interfaces to skip.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IErrorInfo">
      <summary>Communicates detailed contextual error information.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IErrorInfo.GetDescription(System.String@)">
      <summary>Returns a string describing the error.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrDescription">[out] Pointer to string describing the error.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IErrorInfo.GetGuid(System.Guid@)">
      <summary>Returns the GUID of the interface defining the error.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pGuid">[out] The GUID of the interface.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IErrorInfo.GetHelpContext(System.UInt32@)">
      <summary>Retrieves the Help context for the error.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pdwHelpContext">[out] Pointer to the Help context ID.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IErrorInfo.GetHelpFile(System.String@)">
      <summary>Returns the path of the Help file for information about the error.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pBstrHelpFile">[out] Pointer to a string containing the path to the Help file.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IErrorInfo.GetSource(System.String@)">
      <summary>Returns the programmatic identifier (ProgID) for the class or application returning the error.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pBstrSource">[out] Pointer to a string containing the programmatic identifier.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.INTELLIPROJSTATUS"></member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.INTELLIPROJSTATUS.INTELLIPROJSTATUS_LOADING">
      <summary> </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.INTELLIPROJSTATUS.INTELLIPROJSTATUS_LOADCOMPLETE">
      <summary> </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.INTELLIPROJSTATUS.INTELLIPROJSTATUS_CLOSE">
      <summary> </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.INTELLIPROJSTATUS.INTELLIPROJSTATUS_REFRESH">
      <summary> </summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IPerPropertyBrowsing2">
      <summary>Maps properties to their builders and executes the builders. A builder returns a value or values for a given property. An example of a builder is the style builder for a cascading stylesheet.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IPerPropertyBrowsing2.ExecuteBuilder(System.Int32,System.Guid@,System.Object,System.IntPtr,System.Object@)">
      <summary>Executes the builder for a given property and returns the value from the builder.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dispid"> [in] The dispatch ID of the property.</param>
      <param name="rguidBuilder"> [in] The GUID of the builder for the property.</param>
      <param name="pdispApp"> [in] Pointer to the dispatch interface (IDispatch) of the builder.</param>
      <param name="hwndBuilderOwner"> [in] HWND of the owner of the window the builder runs in.</param>
      <param name="pvarValue"> [in, out] Pointer to a variant containing an initial value and the returned value of the property.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IPerPropertyBrowsing2.MapPropertyToBuilder(System.Int32,System.Guid@,System.UInt32@)">
      <summary>Maps the dispatch ID of a property to a builder for the property.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dispid"> [in] The dispatch ID of the property.</param>
      <param name="pguidBuilder"> [out] Pointer to the GUID for the property's builder.</param>
      <param name="pdwType"> [out] Pointer to a value indicating the builder type (Type).</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IPersistXMLFragment">
      <summary>Used to persist non-build related data in free-form XML.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IPersistXMLFragment.InitNew(System.Guid@,System.UInt32)">
      <summary>Initializes the project extension properties and other build-independent data.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="guidFlavor">[in] Specifies the GUID of the project subtype.</param>
      <param name="storage">[in] Specifies the storage type used for persisting files. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._PersistStorageType" /> enumeration. The file type is either project file (.vsproj or .vbproj) or user file (.vsproj.user or .vbproj.user).</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IPersistXMLFragment.IsFragmentDirty(System.UInt32,System.Int32@)">
      <summary>Determines whether an XML fragment has changed since it was last saved to its current file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="storage">[in] Storage type of the file in which the XML is persisted. Values are taken from <see cref="T:Microsoft.VisualStudio.Shell.Interop._PersistStorageType" /> enumeration.</param>
      <param name="pfDirty">[out] true if the XML fragment changed.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IPersistXMLFragment.Load(System.Guid@,System.UInt32,System.String)">
      <summary>The project opens and reads the XML fragment and the project subtype GUID from a specified file type.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="guidFlavor">[in] GUID of the project subtype.</param>
      <param name="storage">[in] File storage type. Values are taken from <see cref="T:Microsoft.VisualStudio.Shell.Interop._PersistStorageType" /> enumeration. The file type is either project file (.vsproj or .vbproj) or user file (.vsproj.user or .vbproj.user).</param>
      <param name="pszXMLFragment">[in] String containing the XML fragment.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IPersistXMLFragment.Save(System.Guid@,System.UInt32,System.String@,System.Int32)">
      <summary>Base project system directs the project subtype to build the project subtype XML information and save it in the project or user file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="guidFlavor">[in] Project subtype GUID.</param>
      <param name="storage">[in] Storage type for the file. Values taken from <see cref="T:Microsoft.VisualStudio.Shell.Interop._PersistStorageType" /> enumeration. The file type is either project file (.vsproj or .vbproj) or user file (.vsproj.user or .vbproj.user).</param>
      <param name="pbstrXMLFragment">[out] Pointer to the path of the new document containing the XML fragment.</param>
      <param name="fClearDirty">[in] Indicates whether to clear the dirty flag after the save is complete. If true, the flag should be cleared. If false, the flag should be left unchanged.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IPreferPropertyPagesWithTreeControl">
      <summary>Causes the Property Page to display a tree control instead of tabs.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IPropertyPageUndoString">
      <summary>Used by controls to provide an undo string for their property page settings.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IPropertyPageUndoString.GetUndoString(System.String@)">
      <summary>Returns the string to use for undoing a property setting.</summary>
      <param name="ppszUndo"> [out] On return, contains an OLE string (LPOLESTR) containing the undo string. </param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IProvideAltHTML">
      <summary>Used by a Web control to provide Alt property text and to indicate whether or not the text is editable.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IProvideAltHTML.GetAltHTML(System.String@)">
      <summary>Returns the Alt property text.</summary>
      <param name="pstrAltHTML"> [out, retval] Pointer to the string containing the Alt property text.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IProvideAltHTML.IsAltHTMLEditable(System.SByte@)">
      <summary>Indicates whether or not the Alt text is editable.</summary>
      <param name="pfIsEditable"> [out, retval] Pointer to a Boolean—true if you can edit the Alt text.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IProvidePropertyBuilder">
      <summary>Managers a builder, code that constructs the value for a property. This often takes the form of a dialog displayed by clicking an ellipsis button on the property page.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IProvidePropertyBuilder.ExecuteBuilder(System.Int32,System.String,System.Object,System.Int32,System.Object@,System.Boolean@)">
      <summary>Run the builder for a given property.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dispid"> [in] The dispatch ID of the property.</param>
      <param name="bstrGuidBldr"> [in] The GUID of the builder for the property.</param>
      <param name="pdispApp"> [in] Pointer to the dispatch interface (IDispatch) of the builder.</param>
      <param name="hwndBldrOwner"> [in] HWND of the owner of the window the builder runs in.</param>
      <param name="pvarValue"> [in, out] Pointer to a variant containing an initial value and the returned value of the property.</param>
      <param name="pfRetVal"> [out] Pointer to a Boolean indicating success (true) or failure of the builder.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IProvidePropertyBuilder.MapPropertyToBuilder(System.Int32,System.Int32@,System.String@,System.Boolean@)">
      <summary>Maps the dispatch ID of a property to a builder for the property.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dispid"> [in] The dispatch ID of the property.</param>
      <param name="pdwCtlBldType"> [in, out] Pointer to a value indicating the builder type (Type).</param>
      <param name="pbstrGuidBldr"> [in, out] Pointer to the GUID for the property's builder.</param>
      <param name="pfRetVal"> [out] Pointer to a Boolean indicating success (true) or failure of the builder.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IProvideRuntimeHTML">
      <summary>Used by an ActiveX control to provide an HTML string to its container at runtime.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IProvideRuntimeHTML.GetRuntimeHTML(System.String@)">
      <summary>Provides a runtime string of HTML from an ActiveX control.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pstrRuntimeHTML">  [out] Pointer to a string containing HTML generated by the control.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsActivityLog">
      <summary>Adds events to the IDE Activity Log. Use the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsActivityLog" /> (SID_SVsActivityLog) service to get an instance of the interface.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsActivityLog.LogEntry(System.UInt32,System.String,System.String)">
      <summary>Makes a log entry specifying the log type, the package name, and the event text.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="actType">[in] Type of log entry, a value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__ACTIVITYLOG_ENTRYTYPE" /> enumeration.</param>
      <param name="pszSource">[in] Pointer to a string containing the name of the package or component making the call.</param>
      <param name="pszDescription">[in] Pointer to a string describing the event.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsActivityLog.LogEntryGuid(System.UInt32,System.String,System.String,System.Guid)">
      <summary>Makes a log entry specifying entry type, package name, event text, and GUID to store in the event record.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="actType">[in] Type of log entry, a value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__ACTIVITYLOG_ENTRYTYPE" /> enumeration.</param>
      <param name="pszSource">[in] Pointer to a string containing the name of the package or component making the call.</param>
      <param name="pszDescription">[in] Pointer to a string describing the event.</param>
      <param name="guid">[in] A GUID to include in the event record.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsActivityLog.LogEntryGuidHr(System.UInt32,System.String,System.String,System.Guid,System.Int32)">
      <summary>Makes a log entry specifying entry type, package name, event text, a GUID to store in the event record, and an HRESULT to store in the event record.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="actType">[in] Type of log entry, a value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__ACTIVITYLOG_ENTRYTYPE" /> enumeration.</param>
      <param name="pszSource">[in] Pointer to a string containing the name of the package or component making the call.</param>
      <param name="pszDescription">[in] Pointer to a string describing the event.</param>
      <param name="guid">[in] A GUID to include in the event record.</param>
      <param name="hr">[in] An HRESULT to include in the event record.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsActivityLog.LogEntryGuidHrPath(System.UInt32,System.String,System.String,System.Guid,System.Int32,System.String)">
      <summary>Makes a log entry specifying entry type, package name, the event text, a GUID to store in the event record, an HRESULT to store in the event record and a full file path to store in the event record.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="actType">[in] Type of log entry, a value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__ACTIVITYLOG_ENTRYTYPE" /> enumeration.</param>
      <param name="pszSource">[in] Pointer to a string containing the name of the package or component making the call.</param>
      <param name="pszDescription">[in] Pointer to a string describing the event.</param>
      <param name="guid">[in] A GUID to include in the event record.</param>
      <param name="hr">[in] An HRESULT to include in the event record.</param>
      <param name="pszPath">[in] A string containing a full file path to include in the event record.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsActivityLog.LogEntryGuidPath(System.UInt32,System.String,System.String,System.Guid,System.String)">
      <summary>Makes a log entry specifying entry type, package name, event text, a GUID to store in the event record, and a full file path to store in the event record.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="actType">[in] Type of log entry, a value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__ACTIVITYLOG_ENTRYTYPE" /> enumeration.</param>
      <param name="pszSource">[in] Pointer to a string containing the name of the package or component making the call.</param>
      <param name="pszDescription">[in] Pointer to a string describing the event.</param>
      <param name="guid">[in] A GUID to include in the event record.</param>
      <param name="pszPath">[in] A string containing a full file path to include in the event record.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsActivityLog.LogEntryHr(System.UInt32,System.String,System.String,System.Int32)">
      <summary>Makes a log entry specifying entry type, package name, event text, and an HRESULT to store in the event record.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="actType">[in] Type of log entry, a value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__ACTIVITYLOG_ENTRYTYPE" /> enumeration.</param>
      <param name="pszSource">[in] Pointer to a string containing the name of the package or component making the call.</param>
      <param name="pszDescription">[in] Pointer to a string describing the event.</param>
      <param name="hr">[in] An HRESULT to include in the event record.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsActivityLog.LogEntryHrPath(System.UInt32,System.String,System.String,System.Int32,System.String)">
      <summary>Makes a log entry specifying entry type, package name, event text, an HRESULT to store in the event record, and a full file path to store in the event record.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="actType">[in] Type of log entry, a value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__ACTIVITYLOG_ENTRYTYPE" /> enumeration.</param>
      <param name="pszSource">[in] Pointer to a string containing the name of the package or component making the call.</param>
      <param name="pszDescription">[in] Pointer to a string describing the event.</param>
      <param name="hr">[in] An HRESULT to include in the event record.</param>
      <param name="pszPath">[in] A string containing a full file path to include in the event record.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsActivityLog.LogEntryPath(System.UInt32,System.String,System.String,System.String)">
      <summary>Makes a log entry specifying entry type, package name, event text, and a full file path to store in the event record.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="actType">[in] Type of log entry, a value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__ACTIVITYLOG_ENTRYTYPE" /> enumeration.</param>
      <param name="pszSource">[in] Pointer to a string containing the name of the package or component making the call.</param>
      <param name="pszDescription">[in] Pointer to a string describing the event.</param>
      <param name="pszPath">[in] A string containing a full file path to include in the event record.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsAddNewWebProjectItemDlg">
      <summary>Displays the AddItem dialog with a listview control and specific Web-related controls. Use in Web project implementations. You can get an instance of the interface from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsAddProjectItemDlg" /> (SID_SVsAddProjectItemDlg) service.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsAddNewWebProjectItemDlg.AddNewWebProjectItemDlg(System.UInt32,System.Guid@,Microsoft.VisualStudio.Shell.Interop.IVsProject,System.String,System.String,System.String,System.String,System.UInt32)">
      <summary>Displays an Add Item dialog in a web project implementation.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="itemidLoc">[in] Hierarchy tem to add the dialog to. A VSITEMID uniquely identifies a node within an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" />.</param>
      <param name="rguidProject">[in] The GUID of project.</param>
      <param name="pProject">[in] The project's <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProject" /> interface.</param>
      <param name="pszDlgTitle">[in] Dialog box caption (can be null).</param>
      <param name="lpszHelpTopic">[in] Name of help topic to use for the dialog.</param>
      <param name="lpszLanguage">[in] Directory (language) to select by default.</param>
      <param name="lpszSelect">[in] Item to select.</param>
      <param name="options">[in] Options to set on the dialog box. Bit array using flag values from <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSADDNEWWEBITEMOPTIONS" />.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsAggregatableProject">
      <summary>Implemented by a project that supports adding project subtypes through aggregation.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsAggregatableProject.GetAggregateProjectTypeGuids(System.String@)">
      <summary>Gets the list of project type GUIDs that make up the aggregate project. This method should be delegated to the innermost project within the system of aggregated project subtypes.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrProjTypeGuids">[out, retval] Pointer to a string containing the project type GUIDs.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsAggregatableProject.InitializeForOuter(System.String,System.String,System.String,System.UInt32,System.Guid@,System.IntPtr@,System.Int32@)">
      <summary>Called by the owner, the outer project subtype, to have the owned project, the inner project subtype, to do its initialization work.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszFilename">[in] Project file name of the project to be initialized.</param>
      <param name="pszLocation">[out] Location of the initialized project file.</param>
      <param name="pszName">[in] Pointer to a null-terminated string containing the name.</param>
      <param name="grfCreateFlags">[in] Controls how a project is created or opened. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSCREATEPROJFLAGS" /> enumeration.</param>
      <param name="iidProject">[in] Identifier of the interface of the returned <paramref name="ppvProject" />.</param>
      <param name="ppvProject">[out, iid_is(iidProject)] Pointer to the interface specified by <paramref name="iidProject" />.</param>
      <param name="pfCanceled">[out] Pointer to a flag where true indicates canceled.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsAggregatableProject.OnAggregationComplete">
      <summary>Indicates that aggregation is complete.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsAggregatableProject.SetAggregateProjectTypeGuids(System.String)">
      <summary>This method updates the list of GUIDs that are persisted in the project file of the base project.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="lpstrProjTypeGuids">String containing the project type GUIDs.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsAggregatableProject.SetInnerProject(System.Object)">
      <summary>This method is used to pass in the pointer to the inner IUnknown of the project subtype that is being aggregated.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="punkInner">[in] Pointer to the IUnknown of the inner project subtype.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsAggregatableProjectFactory">
      <summary>Creates a project type that supports aggregation.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsAggregatableProjectFactory.GetAggregateProjectType(System.String,System.String@)">
      <summary>Returns a string containing a list of project type GUIDs to aggregate to create an instance of this project. It should return at least one GUID—the project type GUID for itself. This method is expected to get the list of GUIDs from the specified file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszFilename">[in] The name of the project file containing the list of project type GUIDs.</param>
      <param name="pbstrProjTypeGuid">[out] Pointer to a string containing a semi-colon delimited list of the project type GUIDs, ordered from outer to the inner project subtype.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsAggregatableProjectFactory.PreCreateForOuter(System.Object,System.Object@)">
      <summary>Called by the owner or outer project subtype so that the owned or inner project subtype can create a version of itself that can be aggregated.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="punkOuter">[in] Pointer to the outer IUnknown interface.</param>
      <param name="ppunkProject">[out] Pointer to the inner or owned project subtype IUnknown interface.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsAssemblyNameUnification">
      <summary>Returns the name of the unified assembly based on the simple and full names the loader uses, and the .NET framework assemblies list (FrameworkList.xml). Use the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsAssemblyNameUnification" /> (SID_SvsAssemblyNameUnification) service to get an instance of the interface.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsAssemblyNameUnification.GetUnifiedAssemblyName(System.String,System.String,System.String,System.String@)">
      <summary>Returns the name of the unified assembly.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="wszFrameworkDirectory">[in] String containing the directory of the .NET Framework assemblies list, Framework.xml.</param>
      <param name="wszSimpleAssemblyName">[in] String containing the simple assembly name.</param>
      <param name="wszFullAssemblyName">[in] String containing the full assembly name.</param>
      <param name="pbstrUnifiedAssemblyName">[out] String containing the unified assembly name.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsAsynchOpenFromScc">
      <summary>This interface supports asynchronous loading of projects from source control.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsAsynchOpenFromScc.IsLoadingContent(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.Int32@)">
      <summary>This method determines if loading is complete for a solution or project being loaded asynchronously.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHierarchy">[in] The solution or project hierarchy to check loading for.</param>
      <param name="pfIsLoading">[out] Returns nonzero (TRUE) if the hierarchy's contents are still being loaded from source control. Otherwise, returns zero (FALSE), indicating that loading is complete.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsAsynchOpenFromScc.LoadProject(System.String)">
      <summary>This method begins loading the specified project asynchronously.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="lpszProjectPath">[in] Physical path to the project to be loaded from source control.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsAsynchOpenFromScc.LoadProjectAsynchronously(System.String,System.Int32@)">
      <summary>This method determines whether a specified project must be loaded asynchronously.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="lpszProjectPath">[in] Physical path to the specified project.</param>
      <param name="pReturnValue">[out] Returns nonzero (true) if the project must be loaded asynchronously. Otherwise, returns zero (false) if the project can be loaded synchronously.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsAsynchOpenFromSccProjectEvents">
      <summary>Provides progress information during asynchronous loading of a project or solution from source control.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsAsynchOpenFromSccProjectEvents.OnFilesDownloaded(System.Int32,System.String[])">
      <summary>Called during an asynchronous load to indicate one or more files have been downloaded.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.If an error is returned, the source control package may cancel the load process if it so chooses (typically, if this method returns an error, something catastrophic has happened and the load should probably not continue).</returns>
      <param name="cFiles">[in] Number of file names that are in the <paramref name="rgpszFullPaths" /> array. This value should always be greater than 0.</param>
      <param name="rgpszFullPaths">[in] Array of physical paths of files that have been successfully loaded so far.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsAsynchOpenFromSccProjectEvents.OnLoadComplete">
      <summary>Called when an asynchronous load is done.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.A source control package does not typically expect this method to return an error code, since there is nothing the source control package can do about the error once the load is complete.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsAsynchOpenFromSccProjectEvents.OnLoadFailed">
      <summary>Called when downloading of project content fails.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsBrowseComponentSet">
      <summary>Provides the data contained in the browse component set.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBrowseComponentSet.CreateNavInfo(System.Guid@,Microsoft.VisualStudio.Shell.Interop.SYMBOL_DESCRIPTION_NODE[],System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsNavInfo@)">
      <summary>Creates <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo" /> for a symbol defined in the <paramref name="rgSymbolNodes" /> array of symbols.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="guidLib">[in]The <see cref="T:System.Guid" /> that identifies the registered library. For more information, see vsshell80.idl, VS Browse Libraries.</param>
      <param name="rgSymbolNodes">[in] An array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.SYMBOL_DESCRIPTION_NODE" /> objects describing each node in the tree.</param>
      <param name="ulcNodes">[in] The number of objects in the <paramref name="rgSymbolNodes" /> array.</param>
      <param name="ppNavInfo">The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo" /> that represents the navigation information of a symbol in the hierarchical tree of symbols.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBrowseComponentSet.get_ChildListOptions(System.UInt32@)">
      <summary>Returns the options for the child list of a symbol. The list is described by the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2" /> interface.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pdwOptions">One value or a combination of <see cref="T:Microsoft.VisualStudio.Shell.Interop._BROWSE_COMPONENT_SET_OPTIONS" /> values.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBrowseComponentSet.get_ComponentsListOptions(System.UInt32@)">
      <summary>Returns the options for the list of components.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pdwOptions">One value or a combination of <see cref="T:Microsoft.VisualStudio.Shell.Interop._BROWSE_COMPONENT_SET_OPTIONS" /> values.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBrowseComponentSet.GetList2(System.UInt32,System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2[],Microsoft.VisualStudio.Shell.Interop.IVsObjectList2,Microsoft.VisualStudio.Shell.Interop.IVsObjectList2@)">
      <summary>Returns the requested list of symbols.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ListType">[in] One of the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_LISTTYPE2" /> values.</param>
      <param name="flags">[in] One of the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_LISTFLAGS" /> values.</param>
      <param name="pobSrch">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2" /> that describes the search criteria.</param>
      <param name="pExtraListToCombineWith">A <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2" /> list of symbols that is a part of the resulting <paramref name="ppIVsObjectList2 " />list.</param>
      <param name="ppIVsObjectList2">[out]Returns a <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2" /> list of requested items.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBrowseComponentSet.GetSupportedCategoryFields2(System.Int32,System.UInt32@)">
      <summary>Returns the category values supported by the component set for a specified category.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="Category">A category type that the component set supports. One value or a combination of the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_CATEGORY2" /> values.</param>
      <param name="pgrfCatField">[out] A category field. See Remarks for possible values.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBrowseComponentSet.put_ChildListOptions(System.UInt32)">
      <summary>Set the options for the child <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2" /> list of a symbol in the hierarchical tree of symbols.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwOptions">One value or a combination of <see cref="T:Microsoft.VisualStudio.Shell.Interop._BROWSE_COMPONENT_SET_OPTIONS" /> values.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBrowseComponentSet.put_ComponentsListOptions(System.UInt32)">
      <summary>Sets the options for the list of components.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwOptions">One value or a combination of <see cref="T:Microsoft.VisualStudio.Shell.Interop._BROWSE_COMPONENT_SET_OPTIONS" /> values.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBrowseComponentSet.UpdateCounter(System.UInt32@)">
      <summary>Returns the current state of the library counter. Indicates that the library contents have changed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pCurUpdate">The current state of the update counter.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsBrowseContainersList">
      <summary>Provides information about a container in a list of containers or finds the container of a component.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBrowseContainersList.FindContainer(Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORDATA[],System.UInt32@)">
      <summary>Finds a container of a component.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pData">[in]  Pointer to a <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORDATA" /> structure describing the component. </param>
      <param name="pulIndex">[out]  Index of the container in an array of components.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBrowseContainersList.GetContainerData(System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORDATA[])">
      <summary>Provides data about a component found using <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsBrowseContainersList.FindContainer(Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORDATA[],System.UInt32@)" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ulIndex">[in]  Index of the container returned by <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsBrowseContainersList.FindContainer(Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORDATA[],System.UInt32@)" />.</param>
      <param name="pData">[out]  A <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORDATA" /> structure describing the component.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsBrowseObject">
      <summary>Allows the retrieval of the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> object or the VSITEMID given the project configuration browse object.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBrowseObject.GetProjectItem(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy@,System.UInt32@)">
      <summary>Maps back to the hierarchy or project item object corresponding to the browse object.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHier">[out] Pointer to the hierarchy object.</param>
      <param name="pItemid">[out] Pointer to the project item. </param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsBrowseProjectLocation">
      <summary>Displays a dialog to find the location for a new project.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBrowseProjectLocation.BrowseProjectLocation(System.String,System.String@)">
      <summary>Presents a browse dialog box for finding the location of a new project.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszStartDirectory"> [in] String containing the starting directory.</param>
      <param name="pbstrProjectLocation"> [out] String containing the full path to the chosen location.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsBuildableProjectCfg2">
      <summary>Provides information about a project's build configuration and executes the build.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBuildableProjectCfg2.GetBuildCfgProperty(System.Int32,System.Object@)">
      <summary>Retrieve the value of a given build configuration property.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="propid">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSBLDCFGPROPID" /> enumeration value designating the property value to return.</param>
      <param name="pvar">[out] Pointer to a variant containing the property value.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBuildableProjectCfg2.StartBuildEx(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsOutputWindowPane,System.UInt32)">
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwBuildId">[in] Integer value identifying the build.</param>
      <param name="pIVsOutputWindowPane">[in] Pointer to an IVsOutputWindowPane interface for the output window.</param>
      <param name="dwOptions">[in] Bit flags indicating build options. Dependent on the specific implementation.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsBuildMacroInfo">
      <summary>Enables macro evaluation by retrieving, from the project, the string associated with a macro name.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBuildMacroInfo.GetBuildMacroValue(System.String,System.String@)">
      <summary>Retrieves the value or body of a macro based on the macro's name.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrBuildMacroName">[in] String containing the name of the macro.</param>
      <param name="pbstrBuildMacroValue">[out] String containing the value or body of the macro.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsBuildPropertyStorage">
      <summary>Gets and sets MSBuild properties in the project file.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBuildPropertyStorage.GetItemAttribute(System.UInt32,System.String,System.String@)">
      <summary>Retrieves the value of an attribute for a hierarchy item identified by VSITEMID.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="item">[in] The VSITEMID for the element.</param>
      <param name="pszAttributeName">[in] String containing the name of the attribute.</param>
      <param name="pbstrAttributeValue">[out] String containing the value of the attribute.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBuildPropertyStorage.GetPropertyValue(System.String,System.String,System.UInt32,System.String@)">
      <summary>Gets an MSBuild property value.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszPropName">[in] Name of the build property.</param>
      <param name="pszConfigName">[in] Name of the build configuration.</param>
      <param name="storage">[in] Storage type for file persistence. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._PersistStorageType" /> enumeration.</param>
      <param name="pbstrPropValue">[out, retval] Specifies the value of the MSBuild property object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBuildPropertyStorage.RemoveProperty(System.String,System.String,System.UInt32)">
      <summary>Used by a project subtype to remove an MSBuild property.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszPropName">[in] Name of the build property to remove.</param>
      <param name="pszConfigName">[in] Name of the build configuration.</param>
      <param name="storage">[in] Storage type for file persistence. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._PersistStorageType" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBuildPropertyStorage.SetItemAttribute(System.UInt32,System.String,System.String)">
      <summary>Sets the value of an attribute for a hierarchy item identified by VSITEMID.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="item">[in] The VSITEMID for the element.</param>
      <param name="pszAttributeName">[in] String containing the name of the attribute.</param>
      <param name="pszAttributeValue">[in] String containing the value of the attribute.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBuildPropertyStorage.SetPropertyValue(System.String,System.String,System.UInt32,System.String)">
      <summary>Used by a project subtype to set an MSBuild property value.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszPropName">[in] Name of the build property.</param>
      <param name="pszConfigName">[in] Name of the build configuration.</param>
      <param name="storage">[in] Storage type for file persistence. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._PersistStorageType" /> enumeration.</param>
      <param name="pszPropValue">[in] Specifies the MSBuild property value.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsCallBrowser">
      <summary>Manipulates the Call Browser for debugging. You can get an instance of this interface from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsCallBrowser" /> (SID_SVsCallBrowser) service. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCallBrowser.CanCreateNewInstance(System.Int32@)">
      <summary>Returns true if you can create a new instance of the Call Browser.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pfOK">[out] Boolean. Set to true if you can create a new instance of the CallBrowser.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCallBrowser.SetRootAtNavInfo(System.Int32,Microsoft.VisualStudio.Shell.Interop.IVsNavInfo)">
      <summary>Sets the root of the displayed calls to a given navigation point.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="cbMode">[in] Browser mode to use. A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSCALLBROWSERMODE" /> enumeration.</param>
      <param name="pNavInfo">[in] The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo" /> interface containing the information to use.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCallBrowser.SetRootAtSymbol(System.Int32,System.Guid@,Microsoft.VisualStudio.Shell.Interop.SYMBOL_DESCRIPTION_NODE[],System.UInt32)">
      <summary>Displays the contents of a library in the Call Browser.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="cbMode">[in] Browser mode to use. A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSCALLBROWSERMODE" /> enumeration.</param>
      <param name="guidLib">[in] The GUID of the library to use.</param>
      <param name="rgSymbolNodes">[in] An array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.SYMBOL_DESCRIPTION_NODE" /> structures containing the nodes to use in the browser.</param>
      <param name="ulcNodes">[in] Number of nodes returned—the length of <paramref name="rgSymbolNodes" />.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsCfgBrowseObject">
      <summary>Returns the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsCfg" /> object given the project configuration browse object.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCfgBrowseObject.GetCfg(Microsoft.VisualStudio.Shell.Interop.IVsCfg@)">
      <summary>Maps back to the configuration corresponding to the browse object.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppCfg">[out] Pointer to the configuration object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCfgBrowseObject.GetProjectItem(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy@,System.UInt32@)">
      <summary>Maps back to the hierarchy or project item object corresponding to the browse object.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHier">[out] Pointer to the hierarchy object.</param>
      <param name="pItemid">[out] Pointer to the project item. </param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsCodeDefView">
      <summary>Manipulates the Code Definition View window. You can get an instance of the interface from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsCodeDefView" /> (SID_SVsCodeDefView) service.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCodeDefView.ForceIdleProcessing">
      <summary>Forces idle time processing in a VsPackage.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCodeDefView.GetRefreshDelay(System.UInt32@)">
      <summary>Gets the value of the refresh delay.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pcMilliseconds">[out] Current value for the refresh delay, in milliseconds.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCodeDefView.HideWindow">
      <summary>Hides the Code Definition tool window</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCodeDefView.IsCodeDefView(Microsoft.VisualStudio.TextManager.Interop.IVsTextView,System.Int32@)">
      <summary>Check whether a given IVsTextView is owned by the Code Definition tool window.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pIVsTextView">[in] A <see cref="T:Microsoft.VisualStudio.TextManager.Interop.IVsTextView" /> interface to the view.</param>
      <param name="pfIsCodeDefView">[out] true if the view is owned by the Code Definition tool window; otherwise false.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCodeDefView.IsVisible">
      <summary>Indicates whether the Code Definition tool window is visible or hidden.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCodeDefView.SetContext(Microsoft.VisualStudio.Shell.Interop.IVsCodeDefViewContext)">
      <summary>Sets the context of the CodeDefinition tool window.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pIVsCodeDefViewContext">[in] Pointer to the context <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsCodeDefViewContext" /> interface) to use.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCodeDefView.ShowWindow">
      <summary>Shows the CodeDefinition tool window.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsCodeDefViewContext">
      <summary>Sets the context for displaying the Code Definition tool window. The context includes things such as file name, and line and column numbers.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCodeDefViewContext.GetCol(System.UInt32,System.UInt32@)">
      <summary>Retrieves the column position of an item based on its index in a list of context items.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="iItem">[in] Index of the context item.</param>
      <param name="piCol">[out] Column position of the item in the CodeDefinition tool window.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCodeDefViewContext.GetCount(System.UInt32@)">
      <summary>Returns a count of the context items.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pcItems">The number of context items in the project. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCodeDefViewContext.GetFileName(System.UInt32,System.String@)">
      <summary>Retrieves the file for an item based on its index in a list of context items.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="iItem">[in] Index of the context item. </param>
      <param name="pbstrFilename">[out] String containing the file name for the item.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCodeDefViewContext.GetLine(System.UInt32,System.UInt32@)">
      <summary>Retrieves the line position of an item based on its index in a list of context items.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="iItem">[in] Index of the context item.</param>
      <param name="piLine">[out] Line number of the item in the Code Definition tool window. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCodeDefViewContext.GetSymbolName(System.UInt32,System.String@)">
      <summary>Retrieves the symbol name of an item based on its index in a list of context items.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="iItem">[in] Index of the context item.</param>
      <param name="pbstrSymbolName">[out] String containing the name of the symbol.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsCombinedBrowseComponentSet">
      <summary>Combines multiple component sets. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCombinedBrowseComponentSet.AddSet(Microsoft.VisualStudio.Shell.Interop.IVsSimpleBrowseComponentSet)">
      <summary>Adds a new component set.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pSet">The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSimpleBrowseComponentSet" /> that represents the added set. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCombinedBrowseComponentSet.CreateNavInfo(System.Guid@,Microsoft.VisualStudio.Shell.Interop.SYMBOL_DESCRIPTION_NODE[],System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsNavInfo@)">
      <summary>Creates <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo" /> for a symbol defined in the <paramref name="rgSymbolNodes" /> array of symbols.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="guidLib">[in]The <see cref="T:System.Guid" /> that identifies the registered library. For more information, see vsshell80.idl, VS Browse Libraries.</param>
      <param name="rgSymbolNodes">[in] An array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.SYMBOL_DESCRIPTION_NODE" /> objects describing each node in the tree.</param>
      <param name="ulcNodes">[in] The number of objects in the <paramref name="rgSymbolNodes" /> array.</param>
      <param name="ppNavInfo">The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo" /> that represents the navigation information of a symbol in the hierarchical tree of symbols.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCombinedBrowseComponentSet.get_ChildListOptions(System.UInt32@)">
      <summary>Returns the options for the child list of a symbol. The list is described by the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2" /> interface.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pdwOptions">One value or a combination of <see cref="T:Microsoft.VisualStudio.Shell.Interop._BROWSE_COMPONENT_SET_OPTIONS" /> values.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCombinedBrowseComponentSet.get_ComponentsListOptions(System.UInt32@)">
      <summary>Returns the options for the list of components.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pdwOptions">One value or a combination of <see cref="T:Microsoft.VisualStudio.Shell.Interop._BROWSE_COMPONENT_SET_OPTIONS" /> values.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCombinedBrowseComponentSet.GetList2(System.UInt32,System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2[],Microsoft.VisualStudio.Shell.Interop.IVsObjectList2,Microsoft.VisualStudio.Shell.Interop.IVsObjectList2@)">
      <summary>Returns the requested list of symbols.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ListType">[in] One of the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_LISTTYPE2" /> values.</param>
      <param name="flags">[in] One of the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_LISTFLAGS" /> values.</param>
      <param name="pobSrch">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2" /> that describes the search criteria.</param>
      <param name="pExtraListToCombineWith">A <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2" /> list of symbols that is a part of the resulting <paramref name="ppIVsObjectList2 " />list.</param>
      <param name="ppIVsObjectList2">[out]Returns a <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2" /> list of requested items.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCombinedBrowseComponentSet.GetSetAt(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsSimpleBrowseComponentSet@)">
      <summary>Identifies a set in the combined component set.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ulIndex">The zero-based index identifying the set in the array of component sets.</param>
      <param name="ppSet">The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSimpleBrowseComponentSet" /> that represents the requested set.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCombinedBrowseComponentSet.GetSetCount(System.UInt32@)">
      <summary>Returns the number of the sets in the combined set.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pulCount">The number of the sets in the combined set. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCombinedBrowseComponentSet.GetSupportedCategoryFields2(System.Int32,System.UInt32@)">
      <summary>Returns the category values supported by the combined component set for a specified category.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="Category">A category type that the combined component set supports. One value or a combination of the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_CATEGORY2" /> values.</param>
      <param name="pgrfCatField">[out] A category field. See Remarks for possible values.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCombinedBrowseComponentSet.put_ChildListOptions(System.UInt32)">
      <summary>Sets the options for the child <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2" /> list of a symbol in the hierarchical tree of symbols.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwOptions">One value or a combination of <see cref="T:Microsoft.VisualStudio.Shell.Interop._BROWSE_COMPONENT_SET_OPTIONS" /> values.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCombinedBrowseComponentSet.put_ComponentsListOptions(System.UInt32)">
      <summary>Sets the options for the list of components.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwOptions">One value or a combination of <see cref="T:Microsoft.VisualStudio.Shell.Interop._BROWSE_COMPONENT_SET_OPTIONS" /> values.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCombinedBrowseComponentSet.RemoveAllSets">
      <summary>Removes all sets from the combined component set.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCombinedBrowseComponentSet.RemoveOwnerSets(System.Object)">
      <summary>Removes the sets identified by the owner.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pOwner">An object that implements <see cref="T:VSLangProj.VSProject" />. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCombinedBrowseComponentSet.RemoveSetAt(System.UInt32)">
      <summary>Removes a set from the combined component set. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ulIndex">The zero-based index identifying the set in the array of component sets.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCombinedBrowseComponentSet.UpdateCounter(System.UInt32@)">
      <summary>Returns the current state of the combined component set counter. Indicates that the set contents have changed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pCurUpdate">The current state of the update counter.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsCommandWindow2">
      <summary>Sets the mode of the Command Window. You can get an instance of this interface from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsCommandWindow" /> (SID_SVsCommandWindow) service.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCommandWindow2.SetMode(System.UInt32)">
      <summary>Sets the mode of the Command Window tool window. Implemented by the environment.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="mode">[in] A value of type COMMANDWINDOWMODE indicating whether the command window should be set to immediate or command mode.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsCommandWindowsCollection">
      <summary>Manipulates windows in the commandwindows list that Visual Studio maintains. You can get an instance of the interface from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsCommandWindowsCollection" /> (SID_SVsCommandWindowsCollection) service.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCommandWindowsCollection.Close(System.UInt32)">
      <summary>Closes the specified command window.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="uCookie">[in] A cookie, returned by <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsCommandWindowsCollection.Create(System.UInt32,System.UInt32,System.Int32,System.UInt32@)" />, specifying the window to close.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCommandWindowsCollection.CloseAllCommandWindows">
      <summary>Closes all command windows.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCommandWindowsCollection.Create(System.UInt32,System.UInt32,System.Int32,System.UInt32@)">
      <summary>Creates a new command window in the specified mode.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="mode">[in] A value of type <see cref="T:Microsoft.VisualStudio.Shell.Interop.__COMMANDWINDOWMODE2" /> indicating the mode, immediate or command, in which to open the window.</param>
      <param name="dwToolWindowId">[in] An identifier for the window. Use -1 to have the service choose the ID.</param>
      <param name="fShow">[in] Specifies if the command window should be visible when opened or created. </param>
      <param name="puCookie">[out] A cookie for the command window. Use when closing the window with <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsCommandWindowsCollection.Close(System.UInt32)" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCommandWindowsCollection.GetCommandWindowFromCookie(System.UInt32,System.Object@)">
      <summary>Retrieves a command window interface for the specified cookie.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="uCookie">[in] A cookie, returned by <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsCommandWindowsCollection.Create(System.UInt32,System.UInt32,System.Int32,System.UInt32@)" />, specifying the window.</param>
      <param name="ppunkCmdWindow">[out] A pointer to a pointer to the IUnknown interface for the command window.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCommandWindowsCollection.GetCommandWindowFromMode(System.UInt32,System.Object@)">
      <summary>Retrieves a command window interface for the specified mode.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="mode">[in] A value of type <see cref="T:Microsoft.VisualStudio.Shell.Interop.__COMMANDWINDOWMODE2" />.</param>
      <param name="ppunkCmdWindow">[out] A pointer to a pointer to the IUnknown interface for the command window.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCommandWindowsCollection.IsOutputWaiting(System.UInt32)">
      <summary>Determines if there is output to render for the specified window.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code. If the window is not in the CWM_SYSTEM mode, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_FALSE" />. For more information about CWM_SYSTEM, see <see cref="T:Microsoft.VisualStudio.Shell.Interop.COMMANDWINDOWMODE" />.</returns>
      <param name="uCookie">[in] A cookie, returned by <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsCommandWindowsCollection.Create(System.UInt32,System.UInt32,System.Int32,System.UInt32@)" />, specifying the window.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCommandWindowsCollection.OpenExistingOrCreateNewCommandWindow(System.UInt32,System.Int32,System.UInt32@)">
      <summary>Opens an existing command window or creates a new one.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="mode">[in] A value of type <see cref="T:Microsoft.VisualStudio.Shell.Interop.__COMMANDWINDOWMODE2" />.</param>
      <param name="fShow">[in] Specifies if the command window should be visible when opened or created. </param>
      <param name="puCookie">[out] A cookie for the command window. Use when closing the window with <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsCommandWindowsCollection.Close(System.UInt32)" />.and in other methods of this interface.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCommandWindowsCollection.SetRunningCommandWindowCommand(System.UInt32,System.Int32)">
      <summary>Indicates whether a command window is running (or not running) a command.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code. </returns>
      <param name="uCookie">[in] A cookie, returned by <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsCommandWindowsCollection.Create(System.UInt32,System.UInt32,System.Int32,System.UInt32@)" />, specifying the window.</param>
      <param name="fCmdWin">[in] A Boolean value—true indicates the command window is running a command; false indicates no command is currently running.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsComponentEnumeratorFactory3">
      <summary>Provides an enumerator for components, assembly paths, or a list of directories containing references. You can get an instance of the interface from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SCompEnumService" /> (SID_SCompEnumService) service. This interface extends the functionality of IVsComponentEnumeratorFactory2 by creating an enumerator that also returns runtime information. It does not, however, inherit from IVsComponentEnumeratorFactory2.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsComponentEnumeratorFactory3.GetComponentsOfPathEx(System.String,System.Int32,System.Int32,System.UInt32,System.String,Microsoft.VisualStudio.Shell.Interop.IEnumComponents@)">
      <summary>Provides an enumerator for all of the components in a package.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrMachineName"> [in] Reserved, must be null.</param>
      <param name="lEnumType">  [in] Long integer containing the enumeration type. The value for this is from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.CompEnum" /> enumeration.</param>
      <param name="bForceRefresh"> [in] Reserved, must be false.</param>
      <param name="grfFlags"> [in] Bit flags. Values taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSCOMPENUMEXFLAGS" /> enumeration.</param>
      <param name="bstrPath"> [in] String containing the path to the components.</param>
      <param name="pEnumerator"> [out] Pointer to an enumerator object. This returns the list of components. The list can be either COM-components, Visual Studio assemblies, or a list of directories in which Visual Studio looks for references. The type of components listed is determined by <paramref name="lEnumType" />.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsComponentSelectorDlg2">
      <summary>Manages references to components of various types within the project.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsComponentSelectorDlg2.ComponentSelectorDlg2(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsComponentUser,System.UInt32,System.IntPtr[],System.String,System.String,System.UInt32@,System.UInt32@,System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORTABINIT[],System.Guid@,System.String,System.String@)">
      <summary>Displays Select Component Dialog and returns selected components.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="grfFlags">[in] Component selection flags taken from the VSCOMPSELFLAGS2 enumerator.</param>
      <param name="pUser">[in] Interface on which AddComponent will be called.</param>
      <param name="cComponents">[in] Number of components in the <paramref name="rgpcsdComponents" /> array.</param>
      <param name="rgpcsdComponents">[in] Prepopulation of Selected Components. Can be NULL. User has the ability to remove any of these components from the list.</param>
      <param name="lpszDlgTitle">[in] Dialog box caption (null == "Select component").</param>
      <param name="lpszHelpTopic">[in] F1 help topic (null == "VS.ComponentPicker")</param>
      <param name="pxDlgSize">[in,out] 0 to use default.</param>
      <param name="pyDlgSize">[in,out] 0 to use default.</param>
      <param name="cTabInitializers">[in] Number of tabs.</param>
      <param name="rgcstiTabInitializers">[in] Show order of tabs and their initialization info.</param>
      <param name="pguidStartOnThisTab">[in,out] Tab to show when the dialog starts up</param>
      <param name="pszBrowseFilters">[in] List of filters to use in 'Browse...' dialog</param>
      <param name="pbstrBrowseLocation">[in,out]Directory (initial/return value) to start the 'Browse...' dialog in</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsConfigurationManagerDlg">
      <summary>Displays the Configuration Manager dialog box. You can get an instance of the interface from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsConfigurationManagerDlg" /> (SID_SVsConfigurationManagerDlg) service.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsConfigurationManagerDlg.ShowConfigurationManagerDlg">
      <summary>Shows the ConfigurationManager dialog box.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsContextualIntellisenseFilter">
      <summary>Filters Intellisense items to control whether or not Intellisense help appears. You can get an instance of the interface from the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsContextualIntellisenseFilterProvider.GetFilter(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,Microsoft.VisualStudio.Shell.Interop.IVsContextualIntellisenseFilter@)" /> method of the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsContextualIntellisenseFilterProvider" /> interface.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsContextualIntellisenseFilter.Close">
      <summary>Ends Intellisense filtering.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsContextualIntellisenseFilter.Initialize(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)">
      <summary>Initializes the filter to use a particular hierarchy.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHierarchy"> [in] Pointer to the IVsHierarchy interface to filter against.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsContextualIntellisenseFilter.IsMemberVisible(System.String,System.Int32@)">
      <summary>Indicates whether or not the member is visible.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="szMemberSignature"> [in] String containing the full name of the member to check.</param>
      <param name="pfVisible"> [out] Pointer to a Boolean. Set to true if the member is visible.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsContextualIntellisenseFilter.IsTypeVisible(System.String,System.Int32@)">
      <summary>Indicates whether or not the type is visible.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code. </returns>
      <param name="szTypeName"> [in] String containing the full name of the type to check.</param>
      <param name="pfVisible"> [out] Pointer to a Boolean. Set to true if the member is visible.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsContextualIntellisenseFilterProvider">
      <summary>Provides a filter for Intellisense items based on project hierarchy information. You can get in instance of the interface from the Device Configuration (DevCfg).</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsContextualIntellisenseFilterProvider.GetFilter(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,Microsoft.VisualStudio.Shell.Interop.IVsContextualIntellisenseFilter@)">
      <summary>Returns an Intellisense filter for a given projec hierarchy.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHierarchy"> [in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface to use in configuring the Intellisense filter.</param>
      <param name="ppFilter"> [out] Pointer to an Intellisense filter, an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsContextualIntellisenseFilter" /> interface.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsCoTaskMemFreeMyStrings">
      <summary>Used in association with certain other interfaces to indicate that strings returned from those interfaces should be freed by the caller.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsCreateAggregateProject">
      <summary>Called by a project type that supports aggregation.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCreateAggregateProject.CreateAggregateProject(System.String,System.String,System.String,System.String,System.UInt32,System.Guid@,System.IntPtr@)">
      <summary>This method is implemented by the environment to create an aggregate project, which in turn creates a system of aggregate vsiptecflavors.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszProjectTypeGuids">[in] List of GUIDs in a string that specifies all the project types to aggregate together to create a single project. This is an ordered list from the outer-most vsiptecflavors to the inner-most vsiptecflavors.</param>
      <param name="pszFilename">[in] Pointer to a null-terminated string containing the project filename.</param>
      <param name="pszLocation">[in] Pointer to the path specifying the location for the new aggregate project.</param>
      <param name="pszName">[in] Pointer to the new aggregate project name. This parameter is used only when <see cref="F:Microsoft.VisualStudio.Shell.Interop.__VSCREATEPROJFLAGS.CPF_CLONEFILE" /> is specified for the <paramref name="grfCreateFlags" /> parameter; otherwise it is null.</param>
      <param name="grfCreateFlags">[in] Controls how a project is created or opened. Values are taken from <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSCREATEPROJFLAGS" /> and <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSCREATEPROJFLAGS2" />.</param>
      <param name="iidProject">[in] Interface identifier of the returned <paramref name="ppvProject" />. This value can be iid_NULL to specify no return</param>
      <param name="ppvProject">[out, iid_is(iidProject)] Pointer to the newly created aggregated project.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsDataEnvironment">
      <summary>Provides an interface to data services, such as database connections. You can use the interface to support Web services browsing.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDataEnvironment.Dispose">
      <summary>Provides a method for implementers to execute code before the interface is released.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDataEnvironment.Initialize(Microsoft.VisualStudio.OLE.Interop.IServiceProvider)">
      <summary>Initialize the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDataEnvironment" /> interface with a specific <see cref="T:Microsoft.VisualStudio.OLE.Interop.IServiceProvider" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pServiceProvider">  Pointer to an <see cref="T:Microsoft.VisualStudio.OLE.Interop.IServiceProvider" /> to use in initializing the interface.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg2">
      <summary>Supports Debug Launch (F5 command). Extends <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg" /> to provide a method call (<see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg2.OnBeforeDebugLaunch(System.UInt32)" />) before launching the debugger.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg2.DebugLaunch(System.UInt32)">
      <summary>Starts the debugger. Inherited from <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="grfLaunch"> [in] Flags that determine the conditions under which to start the debugger. For valid <paramref name="grfLaunch" /> values, see <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSDBGLAUNCHFLAGS" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg2.EnumOutputs(Microsoft.VisualStudio.Shell.Interop.IVsEnumOutputs@)">
      <summary>Obsolete method. Do not use. Inherited from <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppIVsEnumOutputs"> Do not use.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg2.get_BuildableProjectCfg(Microsoft.VisualStudio.Shell.Interop.IVsBuildableProjectCfg@)">
      <summary>Provides access to a configuration's <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsBuildableProjectCfg" /> interface to use to manage the build process. Inherited from <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppIVsBuildableProjectCfg"> [out] Pointer to the configuration's <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsBuildableProjectCfg" /> interface.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg2.get_CanonicalName(System.String@)">
      <summary>Returns a configuration's canonical name. Inherited from <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrCanonicalName"> [out] Pointer to the canonical name of the configuration such as Debug or Release.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg2.get_DisplayName(System.String@)">
      <summary>Returns a string that describes the configuration and can be displayed in the environment's UI. Inherited from <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrDisplayName"> [out] Pointer to a string containing the configuration's display name.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg2.get_IsDebugOnly(System.Int32@)">
      <summary>Obsolete method. Do not use. Inherited from <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pfIsDebugOnly"> Do not use.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg2.get_IsPackaged(System.Int32@)">
      <summary>Obsolete method. Do not use. Inherited from <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pfIsPackaged"> Do not use.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg2.get_IsReleaseOnly(System.Int32@)">
      <summary>Obsolete method. Do not use. Inherited from <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pfIsReleaseOnly"> Do not use.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg2.get_IsSpecifyingOutputSupported(System.Int32@)">
      <summary>Obsolete method. Do not use. Inherited from <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pfIsSpecifyingOutputSupported"> Do not use.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg2.get_Platform(System.Guid@)">
      <summary>Obsolete method. Do not use. Inherited from <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pguidPlatform"> Do not use.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg2.get_ProjectCfgProvider(Microsoft.VisualStudio.Shell.Interop.IVsProjectCfgProvider@)">
      <summary>Obsolete method. Do not use. Inherited from <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppIVsProjectCfgProvider"> Do not use.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg2.get_RootURL(System.String@)">
      <summary>Returns a configuration's root URL for its output items. Inherited from <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrRootURL"> [out] Pointer to the root URL for the configuration's output items.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg2.get_TargetCodePage(System.UInt32@)">
      <summary>Obsolete method. Do not use. Inherited from <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="puiTargetCodePage"> Do not use.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg2.get_UpdateSequenceNumber(Microsoft.VisualStudio.OLE.Interop.ULARGE_INTEGER[])">
      <summary>Obsolete method. Do not use. Inherited from <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="puliUSN"> Do not use.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg2.OnBeforeDebugLaunch(System.UInt32)">
      <summary>Provides a method the implementer can use to perform necessary actions before the actual launch of the debugger.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="grfLaunch"> [in] Flags determining how to start the debugger. For valid <paramref name="grfLaunch" /> values, see <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSDBGLAUNCHFLAGS" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg2.OpenOutput(System.String,Microsoft.VisualStudio.Shell.Interop.IVsOutput@)">
      <summary>Obsolete method. Do not use. Inherited from <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="szOutputCanonicalName"> Do not use.</param>
      <param name="ppIVsOutput"> Do not use.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg2.QueryDebugLaunch(System.UInt32,System.Int32@)">
      <summary>Determines whether the debugger can be launched, given the state of the launch flags. Inherited from <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="grfLaunch"> [in] Flags that determine the conditions under which to launch the debugger. For valid <paramref name="grfLaunch" /> values, see <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSDBGLAUNCHFLAGS" />.</param>
      <param name="pfCanLaunch"> [out] Pointer to a flag that is set to true if the debugger can be launched and false otherwise.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsDebugger2">
      <summary>Provides additional access to the debugger. You can get an instance of this interface from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsShellDebugger" /> (SID_SVsShellDebugger) service. This interface extends <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDebugger" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebugger2.ConfirmStopDebugging(System.String)">
      <summary>Displays a dialog and message to confirm the user wants to stop debugging.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszMessage">[in] String containing the message to display in the dialog.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebugger2.CreateDataTip(System.String,System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsEnhancedDataTip@)">
      <summary>Creates an enhanced data tip object.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrExpression">[in] String containing the data tip.</param>
      <param name="dwStyle">[in] Reserved.</param>
      <param name="ppDataTip">[out] Pointer to the new <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsEnhancedDataTip" /> interface.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebugger2.EnumDebugEngines(Microsoft.VisualStudio.TextManager.Interop.IVsEnumGUID@)">
      <summary>Returns an enumerator for the active debugging engines. The enumerator provides the GUIDs for the engines.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppEnum">[out] Pointer to the enumerator interface, <see cref="T:Microsoft.VisualStudio.TextManager.Interop.IVsEnumGUID" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebugger2.GetConsoleHandlesForProcess(System.UInt32,System.UInt64@,System.UInt64@,System.UInt64@)">
      <summary>Provides the standard console handles for the debugger so that another process can redirect its standard handles to the debug window.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwPid">[in] The identifier for the host process.</param>
      <param name="pdwStdInput">[out] Handle to the debugger's standard input.</param>
      <param name="pdwStdOutput">[out] Handle to the debugger's standard output.</param>
      <param name="pdwStdError">[out] Handle to the debugger's standard error.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebugger2.GetEngineName(System.Guid@,System.String@)">
      <summary>Given the GUID of a debugging engine, returns the name of the engine. Use this method with <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsDebugger2.EnumDebugEngines(Microsoft.VisualStudio.TextManager.Interop.IVsEnumGUID@)" /> to retrieve the names of all active debugging engines.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="guidEngine">[in] The GUID of the debugging engine.</param>
      <param name="pbstrName">[out] A string containing the name of the debugging engine.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebugger2.GetInternalDebugMode(Microsoft.VisualStudio.Shell.Interop.DBGMODE[])">
      <summary>Gets the internal debugger mode.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pdbgmode">[out] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.DBGMODE" /> value specifying the debugger mode.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebugger2.GetOutputHandleForProcess(System.UInt32,System.UInt64@)">
      <summary>Gets an output handle for a process.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwPid">[in] Process ID of the application.</param>
      <param name="pOutputHandle">[out] Handle to the output device.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebugger2.GetSymbolPath(System.String@,System.String@)">
      <summary>Gets the current symbol path and cache settings.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrSymbolPath">[out] The current symbol path.</param>
      <param name="pbstrSymbolCachePath">[out] The current symbol cache path.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebugger2.GetUseQuickConsoleOptionSetting(System.Int32@)">
      <summary>Gets options settings for Use Quick Console.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pfValue">[out] A boolean value; true if Use Quick Console is enabled.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebugger2.InsertBreakpointByName(System.Guid@,System.String,System.Int32)">
      <summary>Inserts a breakpoint at a named location in the program, such as a function name.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="guidLanguage">[in] The GUID for the language service such as SID_SVisualBasicLangService.</param>
      <param name="pszCodeLocationText">[in] String containing the name of the location to set the breakpoint.</param>
      <param name="bUseIntellisense">[in] Boolean value specifying whether to use Intellisense when resolving the breakpoint name.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebugger2.IsEngineCompatible(System.Guid@,System.UInt32,System.Guid[])">
      <summary>Checks the compatibility of a debugging engine with other debugging engines.</summary>
      <returns>Returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" /> if the debugging engine (guidEngine) is compatible with all of the engines in pEngineGUIDs,. Otherwise, the method returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_FALSE" />.</returns>
      <param name="guidEngine">[in] The GUID of the engine tested for compatibility.</param>
      <param name="EngineCount">[in] Number of GUIDs in the array pEngineGUIDs.</param>
      <param name="pEngineGUIDs">[in] An array of GUIDs of debugging engines.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebugger2.LaunchDebugTargets2(System.UInt32,System.IntPtr)">
      <summary>Launches or attaches to the specified processes under the control of the debugger.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="DebugTargetCount">[in] Number of targets to launch (specifies the number of <see cref="T:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo2" /> structures pointed to by <paramref name="pDebugTargets" />).</param>
      <param name="pDebugTargets">[in, out] Array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo2" /> structures describing the programs to launch or attach to.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebugger2.ShowSource(System.Object,System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.VisualStudio.TextManager.Interop.IVsTextView@)">
      <summary>Displays a source file in the IDE. Takes as arguments a pointer to an IUnknown interface that can be queried for IDebugDocumentContext2 and display options.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pUnkDebugDocContext">[in] Pointer to an IUnknown interface on an object implementing IDebugDocumentContext2.</param>
      <param name="fMakeActive">[in] Boolean. If true, makes the source file window the active window.</param>
      <param name="fAlwaysMoveCaret">[in] Boolean. If true, move the caret to the position indicated by the document context through the IDebugDocumentContext2::GetStatementRange method of the IDebugDocumentContext2 interface.</param>
      <param name="fPromptToFindSource">[in] Boolean. If true, prompt the user if the file is not found.</param>
      <param name="fIgnoreIfNotFound">[in] Boolean. If true, do not try to find the file in the future if it is not found now.</param>
      <param name="ppTextView">[out] Pointer to a <see cref="T:Microsoft.VisualStudio.TextManager.Interop.IVsTextView" /> interface representing the opened source view. May be null.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebugger2.ToggleUseQuickConsoleOption(System.Int32)">
      <summary>Sets the Use Quick Console option.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="fOnOff">[in] A boolean value; true to enable Use Quick Console.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsDebugProcessNotify">
      <summary>Provides notice that the debugger is about to stop. Used as the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo2" /> argument in the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsDebugger2.LaunchDebugTargets2(System.UInt32,System.IntPtr)" /> method of the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDebugger2" /> interface.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebugProcessNotify.BeforeStopDebuggingProcess(System.UInt32)">
      <summary>Provides notification and the reason for stopping the debugger before actually stopping the debug process.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="Reason">[In] The reason for stopping the debugging process—a value of type STOP_DEBUGGING_PROCESS_REASON</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsDefaultToolboxTabState">
      <summary>Determines the default state, expanded or unexpanded, of a tab in the Toolbox. An optional interface for implementers of <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsToolboxUser" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDefaultToolboxTabState.GetDefaultTabExpansion(System.String,System.Int32@)">
      <summary>Gets the default state of a given tab.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszTabID"> [In] A pointer to a string containing a unique ID specifying a tab.</param>
      <param name="pfExpanded"> [out] A Boolean value, true if the tab is expanded.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsDeferredDocView">
      <summary>Defers providing an actual document view until after loading and registering the document data in the Running Document Table (RDT). This allows the package to examine the document and decide what kind of view to provide.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDeferredDocView.get_CmdUIGuid(System.Guid@)">
      <summary>Retrieves the GUID for the pane or editor factory for later use when you create the view.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pGuidCmdId">[out] Pointer to a GUID for the deferred view. Usually the GUID for the pane. Used as an argument to <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsUIShell.CreateDocumentWindow(System.UInt32,System.String,Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchy,System.UInt32,System.IntPtr,System.IntPtr,System.Guid@,System.String,System.Guid@,Microsoft.VisualStudio.OLE.Interop.IServiceProvider,System.String,System.String,System.Int32[],Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame@)" /> when you create the view.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDeferredDocView.get_DocView(System.IntPtr@)">
      <summary>Provides the document view to the document window.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppUnkDocView">[out] Pointer to the IUnknown interface of the document view. Used as an argument to <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsUIShell.CreateDocumentWindow(System.UInt32,System.String,Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchy,System.UInt32,System.IntPtr,System.IntPtr,System.Guid@,System.String,System.Guid@,Microsoft.VisualStudio.OLE.Interop.IServiceProvider,System.String,System.String,System.Int32[],Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame@)" />.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsDeferredSaveProject">
      <summary>Delays permanently saving a project until the user saves it with SaveAll. Creates the effect of keeping the project in memory. The package uses a generated name for the project, and temporary files at a temporary location. Limits the solution to one project.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDeferredSaveProject.SaveProjectToLocation(System.String)">
      <summary>Tells the project to save itself and all its contents to the specified location on disk.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszProjectFilename">[in] A pointer to a string containing the full path and project filename.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsDeployableProjectCfg2">
      <summary>Used to support output about deployment during project deployment. Extends and inherits from <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDeployableProjectCfg" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDeployableProjectCfg2.AdviseDeployStatusCallback(Microsoft.VisualStudio.Shell.Interop.IVsDeployStatusCallback,System.UInt32@)">
      <summary>Establishes a callback for deployment status. Returns a cookie to save and use in the corresponding unadvise method.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pIVsDeployStatusCallback"> [in] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDeployStatusCallback" /> to use for calling back to report deployment status.</param>
      <param name="pdwCookie"> [out] A VSCOOKIE representing this callback. Used in the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsDeployableProjectCfg2.UnadviseDeployStatusCallback(System.UInt32)" /> method.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDeployableProjectCfg2.Commit(System.UInt32)">
      <summary>Method to call if all deployments succeed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwReserved">  Reserved. Do not use.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDeployableProjectCfg2.QueryStartDeploy(System.UInt32,System.Int32[],System.Int32[])">
      <summary>Checks for whether or not you can deploy a project with a given set of options.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwOptions"> [in] Bit flags specifying deployment options. Unused.</param>
      <param name="pfSupported"> [out] Optional. Pointer to a Boolean. Set to true if deployment supported. Specify null if not using.</param>
      <param name="pfReady"> [out] Optional. Pointer to a Boolean. Set to true if the project is ready to deploy. Specify null if not using.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDeployableProjectCfg2.QueryStatusDeploy(System.Int32@)">
      <summary>Call to find out if deployment is done.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pfDeployDone"> [out] Pointer to a Boolean. Set to true if deployment complete.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDeployableProjectCfg2.Rollback(System.UInt32)">
      <summary>Method to call if any deployment fails.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwReserved"> Bit flags representing options. Unused.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDeployableProjectCfg2.StartCleanDeploy(Microsoft.VisualStudio.Shell.Interop.IVsOutputWindowPane,System.UInt32)">
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pIVsOutputWindowPane"></param>
      <param name="dwOptions"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDeployableProjectCfg2.StartDeploy(Microsoft.VisualStudio.Shell.Interop.IVsOutputWindowPane,System.UInt32)">
      <summary>Begins deployment.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pIVsOutputWindowPane"> [in] Pointer to a <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsOutputWindowPane" /> to use when reporting progress.</param>
      <param name="dwOptions"> [in] Bit flag options for the deployment. Defined by the implementation.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDeployableProjectCfg2.StopDeploy(System.Int32)">
      <summary>Halts the deployment.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="fSync"> [in] Boolean. Implementation dependent.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDeployableProjectCfg2.UnadviseDeployStatusCallback(System.UInt32)">
      <summary>Disconnects the callback established by <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsDeployableProjectCfg2.AdviseDeployStatusCallback(Microsoft.VisualStudio.Shell.Interop.IVsDeployStatusCallback,System.UInt32@)" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwCookie"> [in] VSCOOKIE returned by <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsDeployableProjectCfg2.AdviseDeployStatusCallback(Microsoft.VisualStudio.Shell.Interop.IVsDeployStatusCallback,System.UInt32@)" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDeployableProjectCfg2.WaitDeploy(System.UInt32,System.Int32)">
      <summary>Obsolete method. Do not use.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwMilliseconds"> Do not use.</param>
      <param name="fTickWhenMessageQNotEmpty"> Do not use.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsDeployDependency2">
      <summary>Retrieves the dependency property values by name.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDeployDependency2.get_Property(System.String,System.Object@)">
      <summary>Gets the value of a dependency property.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code. </returns>
      <param name="szProperty">[in] String containing the name of the property.</param>
      <param name="pvar">[out] Pointer to a variant containing the property value.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsDetermineWizardTrust">
      <summary>Defines events for a wizard as well as methods providing status information. You can get an instance of the interface from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsDetermineWizardTrust" /> (SID_SVsDetermineWizardTrust) service.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDetermineWizardTrust.GetRunningWizardTemplateName(System.String@)">
      <param name="pbstrRunningTemplate"> </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDetermineWizardTrust.GetWizardTrustLevel(System.UInt32@)">
      <param name="pdwWizardTrustLevel"> </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDetermineWizardTrust.IsWizardRunning(System.Int32@)">
      <param name="pfWizardRunning"> </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDetermineWizardTrust.OnWizardCompleted"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDetermineWizardTrust.OnWizardInitiated(System.String,System.Guid@)">
      <param name="pszTemplateFilename"> </param>
      <param name="guidProjectType"> </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDetermineWizardTrust.SetWizardTrustLevel(System.UInt32)">
      <param name="dwWizardTrustLevel"> </param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsDocOutlineProvider2">
      <summary>Enables changing the shell's translation of accelerator keys.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDocOutlineProvider2.TranslateAccelerator(Microsoft.VisualStudio.OLE.Interop.MSG[])">
      <summary>Processes a Windows message related to accelerator keys.</summary>
      <returns>When implementing, return S_OK if the message was processed and requires no further translation; otherwise, return S_FALSE if you want the shell to translate the message.</returns>
      <param name="lpMsg"> [in] Pointer to the Windows message to process.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsEnhancedDataTip">
      <summary>Enables customization of DataTips in the debugger.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsEnhancedDataTip.GetBaseWindowHandle(System.IntPtr@)">
      <summary>Gets the base window handle for the data tip.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="phwnd">[out] Pointer to the Window handle, an HWND value.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsEnhancedDataTip.IsErrorTip(System.Int32@)">
      <summary>Tests whether the DataTip is for an error.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbIsError">[out] Boolean. Set to true if this is an error DataTip.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsEnhancedDataTip.IsOpen(System.Int32@)">
      <summary>Tests whether or not the DataTip window is visible.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbIsOpen">[out] Boolean. Set to true if the DataTip window is visible.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsEnhancedDataTip.SetExpression(System.String)">
      <summary>Sets the expression displayed in the DataTip.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrExpression">[in] String containing the expression to display in the DataTip.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsEnhancedDataTip.Show(System.IntPtr,Microsoft.VisualStudio.OLE.Interop.POINT[],Microsoft.VisualStudio.OLE.Interop.RECT[])">
      <summary>Displays the enhanced DataTip.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="hwndOwner">[in] The handle of the Window (HWND) in which to display the DataTip.</param>
      <param name="pptTopLeft">[in] Pointer to a POINT structure indicating the location of the top left corner of the DataTip.</param>
      <param name="pHotRect">[in] Pointer to a RECT structure marking the hot area of the DataTip—the area where a mouse-click will be responded to.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsEnumCryptoProviderContainers">
      <summary>Provides an enumerator for all of the key containers in a cryptography provider. A key container is part of a key database containing all of the key pairs for a given user. Returned by the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsStrongNameKeys.EnumContainers(System.String,Microsoft.VisualStudio.Shell.Interop.IVsEnumCryptoProviderContainers@)" /> method of the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsStrongNameKeys" /> interface.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsEnumCryptoProviderContainers.Next(System.UInt32,System.String[],System.UInt32@)">
      <summary>Returns the next one or more key containers.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="celt">[in] The number of containers to fetch in this call.</param>
      <param name="pbstrContainers">[out] Array of strings containing the names of the key containers. Array length is the value pointed to by pceltFetched.</param>
      <param name="pceltFetched">[out] Number of key containers returned. May be less than celt.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsEnumCryptoProviderContainers.Reset">
      <summary>Returns the enumerator to its initial state.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsEnumCryptoProviders">
      <summary>Provides an enumerator to list cryptographic service providers. Returned by the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsStrongNameKeys.EnumProviders(Microsoft.VisualStudio.Shell.Interop.IVsEnumCryptoProviders@)" /> method of the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsStrongNameKeys" /> interface.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsEnumCryptoProviders.Next(System.UInt32,System.String[],System.UInt32@)">
      <param name="celt"></param>
      <param name="pbstrProviders"></param>
      <param name="pceltFetched"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsEnumCryptoProviders.Reset"></member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsEnumLibraries2">
      <summary>Enumerates symbol libraries. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsEnumLibraries2.Clone(Microsoft.VisualStudio.Shell.Interop.IVsEnumLibraries2@)">
      <summary>Creates another enumerator that contains the same enumeration state as the current one.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppEnum">[out] The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsEnumLibraries2" /> that represents a new cloned enumerator set to the same state as the current enumerator.If the method is unsuccessful, the value of <paramref name="ppEnum" /> is undefined.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsEnumLibraries2.Next(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsLibrary2[],System.UInt32@)">
      <summary>Retrieves a specified number of libraries in the enumeration sequence.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="celt">[in] The number of elements being requested.</param>
      <param name="rgelt">[out] An array of type <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsLibrary2" /> that contains requested libraries.</param>
      <param name="pceltFetched">[out, optional] The number of elements supplied in <paramref name="rgelt" />. Caller can pass in null if <paramref name="celt" /> is one.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsEnumLibraries2.Reset">
      <summary>Resets the enumeration sequence to the beginning.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsEnumLibraries2.Skip(System.UInt32)">
      <summary>Skips over a specified number of libraries in the enumeration sequence.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="celt">[in] The number of libraries to be skipped.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsEnumNavInfoNodes">
      <summary>Enumerates node items represented by the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo" /> interface.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsEnumNavInfoNodes.Clone(Microsoft.VisualStudio.Shell.Interop.IVsEnumNavInfoNodes@)">
      <summary>Creates another enumerator that contains the same enumeration state as the current one.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppEnum">[out] The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsEnumNavInfoNodes" /> that represents a new cloned enumerator set to the same state as the current enumerator.If the method is unsuccessful, the value of <paramref name="ppEnum" /> is undefined.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsEnumNavInfoNodes.Next(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsNavInfoNode[],System.UInt32@)">
      <summary>Retrieves a specified number of node items in the enumeration sequence.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="celt">[in] The number of elements being requested.</param>
      <param name="rgelt">[out] An array of type <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfoNode" /> that contains requested node items.</param>
      <param name="pceltFetched">[out, optional] The number of elements supplied in <paramref name="rgelt" />. Caller can pass in null if <paramref name="celt" /> is one.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsEnumNavInfoNodes.Reset">
      <summary>Resets the enumeration sequence to the beginning of the sequence.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsEnumNavInfoNodes.Skip(System.UInt32)">
      <summary>Skips over a specified number of node items in the enumeration sequence.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="celt">[in] The number of node items to be skipped.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsEnumSelectedSymbols">
      <summary>Enumerator for groups of selected symbols. The enumerator returns an array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSelectedSymbol" /> interfaces.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsEnumSelectedSymbols.Clone(Microsoft.VisualStudio.Shell.Interop.IVsEnumSelectedSymbols@)">
      <summary>Creates a clone of the interface.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppIVsEnumSelectedSymbols">[out] Pointer to the cloned <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsEnumSelectedSymbols" /> interface.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsEnumSelectedSymbols.Next(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsSelectedSymbol[],System.UInt32@)">
      <summary>Returns the next one or more selected symbols represented by <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSelectedSymbol" /> interfaces.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="celt">[in] The number of symbols to fetch in this call.</param>
      <param name="rgpIVsSelectedSymbol">[out] Array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSelectedSymbol" /> interfaces. Length of the array is the value pointed to by pceltFetched.</param>
      <param name="pceltFetched">[out] Number of items returned. May be less than celt.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsEnumSelectedSymbols.Reset">
      <summary>Returns the enumerator to its initial state.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsEnumSelectedSymbols.Skip(System.UInt32)">
      <summary>Skips a given number of items.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="celt">[in] Number of selected symbols to skip.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsErrorItem">
      <summary>Provides information about an error item. The information includes the hierarchy the error belongs to as well as whether it is an error, a warning, or a message.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsErrorItem.GetCategory(System.UInt32@)">
      <summary>Returns the category of the error.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pCategory">[out] A VSERRORCATEGORY value, a value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSERRORCATEGORY" /> enumeration, specifying an error, warning, or informational message.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsErrorItem.GetHierarchy(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy@)">
      <summary>Provides the hierarchy for the item if the error involves a project hierarchy item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppProject">[out] Pointer to a <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface providing hierarchy information about the error.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsErrorList">
      <summary>Manipulates the BuildErrorList window. You can get an instance of this interface from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsErrorList" /> (SID_SVsErrorList) service. The <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsErrorList" /> service also provides <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsTaskList" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsErrorList.BringToFront">
      <summary>Activates the window and makes it visible.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code. </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsErrorList.ForceShowErrors">
      <summary>Forces errors to appear in the list. Leaves warnings and informational messages alone.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3">
      <summary>Not intended for use directly from your code. Implements many of the features supporting extensibility, including initiating various events. Combines the older <see cref="T:EnvDTE.IVsExtensibility" /> and <see cref="T:EnvDTE80.IVsExtensibility2" /> interfaces that were not usable from managed code into an interface usable from managed code.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.EnterAutomationFunction"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.ExitAutomationFunction"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.FireCodeModelEvent3(System.Int32,System.Object,System.Object,System.Int32)">
      <param name="dispid"></param>
      <param name="pParent"></param>
      <param name="pElement"></param>
      <param name="changeKind"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.FireMacroReset"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.FireProjectItemsEvent_ItemAdded(System.Object)">
      <param name="ProjectItem"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.FireProjectItemsEvent_ItemRemoved(System.Object)">
      <param name="ProjectItem"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.FireProjectItemsEvent_ItemRenamed(System.Object,System.String)">
      <param name="ProjectItem"></param>
      <param name="OldName"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.FireProjectsEvent_ItemAdded(System.Object)">
      <param name="Project"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.FireProjectsEvent_ItemRemoved(System.Object)">
      <param name="Project"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.FireProjectsEvent_ItemRenamed(System.Object,System.String)">
      <param name="Project"></param>
      <param name="OldName"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.GetConfigMgr(System.Object,System.UInt32,System.Object@)">
      <param name="pIVsProject"></param>
      <param name="itemid"></param>
      <param name="ppCfgMgr"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.GetDocumentFromDocCookie(System.Int32,System.Object@)">
      <param name="lDocCookie"></param>
      <param name="ppDoc"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.GetGlobalsObject(System.Object,System.Object@)">
      <param name="ExtractFrom"></param>
      <param name="ppGlobals"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.GetLockCount(System.Int32@)">
      <param name="pCount"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.GetProperties(System.Object,System.Object,System.Object@)">
      <param name="pParent"></param>
      <param name="pdispPropObj"></param>
      <param name="ppProperties"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.GetSuppressUI(System.Boolean@)">
      <param name="pOut"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.GetUserControl(System.Boolean@)">
      <param name="fUserControl"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.IsFireCodeModelEventNeeded(System.Boolean@)">
      <param name="vbNeeded"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.IsInAutomationFunction(System.Int32@)">
      <param name="pfInAutoFunc"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.IsMethodDisabled(System.Guid@,System.Int32)">
      <param name="pGuid"></param>
      <param name="dispid"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.LockServer(System.Boolean)">
      <param name="__MIDL_0010"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.RunWizardFile(System.String,System.Int32,System.Array@,System.Int32@)">
      <param name="bstrWizFilename"></param>
      <param name="hwndOwner"></param>
      <param name="vContextParams"></param>
      <param name="pResult"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.RunWizardFileEx(System.String,System.Int32,System.Array@,System.Array@,System.Int32@)">
      <param name="bstrWizFilename"></param>
      <param name="hwndOwner"></param>
      <param name="vContextParams"></param>
      <param name="vCustomParams"></param>
      <param name="pResult"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.SetSuppressUI(System.Boolean)">
      <param name="In"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.SetUserControl(System.Boolean)">
      <param name="fUserControl"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.SetUserControlUnlatched(System.Boolean)">
      <param name="fUserControl"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.TestForShutdown(System.Boolean@)">
      <param name="fShutdown"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsFileUpgrade">
      <summary>Performs file upgrades as part of a project upgrade.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFileUpgrade.UpgradeFile(System.String,System.String,System.Int32,Microsoft.VisualStudio.Shell.Interop.IVsUpgradeLogger,System.Int32@)">
      <summary>Upgrades a single file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrProjectName">[in] String containing the name of the project the file belongs to.</param>
      <param name="bstrFileName">[in] String containing the full path and name of the file to upgrade.</param>
      <param name="bNoBackup">[in] Boolean. If true, no backup file is created.</param>
      <param name="pLogger">[in] Pointer to a <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsUpgradeLogger" /> interface to use for logging upgrade actions.</param>
      <param name="pUpgradeRequired">[out] Boolean. Set to true if the upgrade succeeded.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFileUpgrade.UpgradeFile_CheckOnly(System.String,System.String,System.Int32,Microsoft.VisualStudio.Shell.Interop.IVsUpgradeLogger,System.Int32@)">
      <summary>Checks if a file requires upgrading but does not perform the upgrade.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrProjectName">[in] String containing the name of the project the file belongs to.</param>
      <param name="bstrFileName">[in] String containing the full path and name of the file proposed for upgrade.</param>
      <param name="bNoBackup">[in] Boolean. If true, no backup file would be created.</param>
      <param name="pLogger">[in] Pointer to a <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsUpgradeLogger" /> interface to use for logging upgrade actions.</param>
      <param name="pUpgradeRequired">[out] Boolean. Set to true if the file requires upgrading.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsFilterKeys2">
      <summary>Controls the binding between keys and commands. You can get an instance of this interface from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsFilterKeys" /> (SID_SVsFilterKeys) service. Extends, but does not inherit from, <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsFilterKeys" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFilterKeys2.TranslateAcceleratorEx(Microsoft.VisualStudio.OLE.Interop.MSG[],System.UInt32,System.UInt32,System.Guid[],System.Guid@,System.UInt32@,System.Int32@,System.Int32@)">
      <summary>Takes a Windows message, translates it into a command, and, optionally, executes the command.</summary>
      <returns>If the message does or will translate to a command, the method returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />, fills the pguidCmd and pdwCmd parameters with the command's GUID and ID, and sets fCmdTranslated to true. If the message does not or will not translate to a command, the method returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_FALSE" />, sets the GUID and ID parameters to zero, and sets fCmdTranslated to false.</returns>
      <param name="pMsg">[in] Pointer to the Windows message.</param>
      <param name="dwFlags">[in] Bit flags to determine whether or not to perform default actions, to execute the command, and the key bindings to use. Values formed from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSTRANSACCELEXFLAGS" /> enumeration.</param>
      <param name="cKeyBindingScopes">[in] Number of key binding scopes to check. Length of the rgguidKeyBindingScopes array.</param>
      <param name="rgguidKeyBindingScopes">[in] Array of GUIDs of the key binding scopes to use such as CMDUIGUID_TextEditor to use the current text editor key bindings.</param>
      <param name="pguidCmd">[out] Pointer to the GUID of the corresponding command.</param>
      <param name="pdwCmd">[out] Pointer to the identifier of the command.</param>
      <param name="fCmdTranslated">[out] Boolean. Set to true if the message will translate to a command.</param>
      <param name="pfKeyComboStartsChord">[out] Boolean. Set to true if the key is the start of a multi-key sequence (chord).</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsFilterNewProjectDlg">
      <summary>Provides filtering for items in the New Project dialog box. Implemented by components wanting to filter.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFilterNewProjectDlg.FilterListItemByLocalizedName(System.String,System.Int32@)">
      <summary>Filters items by localized name.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszLocalizedName">[in] Pointer to a string containing the name to test for filtering.</param>
      <param name="pfFilter">[out] Pointer to a Boolean. Set to true if the item should be filtered.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFilterNewProjectDlg.FilterListItemByTemplateFile(System.String,System.Int32@)">
      <summary>Filters list items by template file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code. </returns>
      <param name="pszTemplateFile">[in] Pointer to a string containing the name to test for filtering.</param>
      <param name="pfFilter">[out] Pointer to a Boolean. Set to true if the item should be filtered.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFilterNewProjectDlg.FilterTreeItemByLocalizedName(System.String,System.Int32@)">
      <summary>Filters tree items by localized name.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code. </returns>
      <param name="pszLocalizedName">[in] Pointer to a string containing the name to test for filtering.</param>
      <param name="pfFilter">[out] Pointer to a Boolean. Set to true if the item should be filtered.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFilterNewProjectDlg.FilterTreeItemByTemplateDir(System.String,System.Int32@)">
      <summary>Filters tree items by template directory name.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszTemplateDir">[in] Pointer to a string containing the name to test for filtering.</param>
      <param name="pfFilter">[out] Pointer to a Boolean. Set to true if the item should be filtered.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsFindSymbol">
      <summary>Implements the search done by the FindSymbol menu command. You can get an instance of this interface from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsObjectSearch" /> (SID_SVsObjectSearch) service.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFindSymbol.DoSearch(System.Guid@,Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2[])">
      <summary>Performs the search.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="guidSymbolScope">[in] A GUID specifying the search scope or the GUID of a library.</param>
      <param name="pobSrch">[in] Bit flags indicating search options. Constructed using values from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSOBSEARCHOPTIONS2" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFindSymbol.GetUserOptions(System.Guid@,Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2[])">
      <summary>Returns the search options.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pguidScope">[out] A GUID specifying the search scope.</param>
      <param name="pobSrch">[out] Bit flags indicating search options. Constructed using values from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSOBSEARCHOPTIONS2" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFindSymbol.SetUserOptions(System.Guid@,Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2[])">
      <summary>Sets search options.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="guidScope">[in] A GUID specifying the search scope or the GUID of a library.</param>
      <param name="pobSrch">[in] Bit flags indicating search options. Constructed using values from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSOBSEARCHOPTIONS2" /> enumeration.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsFindSymbolEvents">
      <summary>Outgoing interface for events, such as changes in search options, related to the Find Symbol command. The client implements the interface and advises the server. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFindSymbolEvents.OnUserOptionsChanged(System.Guid@,Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2[])">
      <summary>Defines the method called when user search options change.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="guidSymbolScope">[in] The new scope GUID or library GUID.</param>
      <param name="pobSrch">[in] The new search options. Bit flags constructed using values from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSOBSEARCHOPTIONS2" /> enumeration.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsFireSolutionEvents2">
      <summary>Fires the same events (<see cref="P:EnvDTE80.Events2.SolutionEvents" />) a solution normally fires. Enables a project that nests subprojects to fire these events. Extends, but does not inherit from, <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsFireSolutionEvents" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFireSolutionEvents2.FireOnAfterAsynchOpenProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.Int32)">
      <summary>Fires a solution event, <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents4.OnAfterAsynchOpenProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.Int32)" />, after asynchronously opening a project in a nested project.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHierarchy">[In] Pointer to the IVsHierarchy interface of the project being loaded.</param>
      <param name="fAdded">[In] Boolean. Set to true if the project is added to the solution after opening the solution. Set to false if the project is added to the solution while the solution is being opened.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFireSolutionEvents2.FireOnAfterChangeProjectParent(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)">
      <summary>Fires a solution event, <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents4.OnAfterChangeProjectParent(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)" />, after the parent project of a child project changes.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHierarchy">[In] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface of the new parent project.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFireSolutionEvents2.FireOnAfterRenameProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)">
      <summary>Fires a solution event, <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents4.OnAfterRenameProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)" />, after renaming a project in the project hierarchy.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHierarchy">[In] Pointer to the renamed project's <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFireSolutionEvents2.FireOnQueryChangeProjectParent(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)">
      <summary>Fires a solution event, <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents4.OnQueryChangeProjectParent(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.Int32@)" />, indicating a query about changing the parent of the project.</summary>
      <returns>Returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_FALSE" /> if the callee vetoes the operation. Otherwise, returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />.</returns>
      <param name="pHierarchy">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface of the child project.</param>
      <param name="pNewParentHier">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface of the new parent project.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorCacheManager">
      <summary>Controls the caching of font and color settings.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorCacheManager.CheckCache(System.Guid@,System.Int32@)">
      <summary>Determines if a given Category's state is cached and current.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="rguidCategory">[in] Specifies the GUID of the Category of Display Items whose caching state is being checked</param>
      <param name="pfHasData">[out] Flag indicating if a Category's default Fonts and Colors cache state. If <paramref name="pfHasData" /> is true, the Category's state is current and cached.If <paramref name="pfHasData" /> is false, the Category's state is not cached.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorCacheManager.CheckCacheable(System.Guid@,System.Int32@)">
      <summary>Determines if a given Category's state can be cached.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="rguidCategory">[in] Specifies the GUID of the Category of Display Items whose caching state is being checked.</param>
      <param name="pfCacheable">[out] Flag indicating if a Category's default Fonts and Colors state can be cached.If <paramref name="pfHasData" /> is true, the Category's state can be cached.If <paramref name="pfHasData" /> is false, the Category's state cannot be cached.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorCacheManager.ClearAllCaches">
      <summary>Clears all Categories' state information from the Fonts and Colors cache.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorCacheManager.ClearCache(System.Guid@)">
      <summary>Clears a given Category's state information from the Fonts and Colors cache.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="rguidCategory">[in] Specifies the GUID of the Category of Display Items whose cached information is to be cleared.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorCacheManager.RefreshCache(System.Guid@)">
      <summary>Force the Visual Studio environment to update cached Fonts and Colors information with the current state data of a given Category.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="rguidCategory">[in] Specifies the GUID of the Category of Display Items whose cached information is to be updated.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorStorage2">
      <summary>Allows a VSPackage to manage registry font and color entries.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorStorage2.RevertAllItemsToDefault">
      <summary>Revert all registry font and color entries to default values.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorStorage2.RevertFontToDefault">
      <summary>Revert all registry font entries to default values.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorStorage2.RevertItemToDefault(System.String)">
      <summary>Revert the indicated registry font or color entry to its default value.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="szName">[in] Null-terminated string containing the non-localized name of the font or color registry entry.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorUtilities">
      <summary>Provides tools for working with the input and output data used by the methods of the Visual Studio Font and Color mechanism.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorUtilities.CopyFontInfo(Microsoft.VisualStudio.Shell.Interop.FontInfo[],Microsoft.VisualStudio.Shell.Interop.FontInfo[])">
      <summary>Copies font information from one <see cref="T:Microsoft.VisualStudio.Shell.Interop.FontInfo" /> object into another.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pDest">[in,out] A valid, initialized <see cref="T:Microsoft.VisualStudio.Shell.Interop.FontInfo" /> object into which data from <paramref name="pSource" />, will be copied.</param>
      <param name="pSource">[in] The <see cref="T:Microsoft.VisualStudio.Shell.Interop.FontInfo" /> object from which data will be copied.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorUtilities.CopyItemInfo(Microsoft.VisualStudio.Shell.Interop.AllColorableItemInfo[],Microsoft.VisualStudio.Shell.Interop.AllColorableItemInfo[])">
      <summary>Copies information contained in one <see cref="T:Microsoft.VisualStudio.Shell.Interop.AllColorableItemInfo" /> object to another <see cref="T:Microsoft.VisualStudio.Shell.Interop.AllColorableItemInfo" /> object.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pDest">[in] A valid, initialized <see cref="T:Microsoft.VisualStudio.Shell.Interop.AllColorableItemInfo" /> object into which data from <paramref name="pSource" />, will be copied.</param>
      <param name="pSource">[in,out] The <see cref="T:Microsoft.VisualStudio.Shell.Interop.AllColorableItemInfo" /> object from which data will be copied.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorUtilities.EncodeAutomaticColor(System.UInt32@)">
      <summary>Returns the current value of the Visual Studio session automatic color as an RGB (COLORREF) value.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pcrResult">[out] A COLORREF representation corresponding to the Visual Studio automatic color.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorUtilities.EncodeIndexedColor(Microsoft.VisualStudio.TextManager.Interop.COLORINDEX,System.UInt32@)">
      <summary>Translates a member of the <see cref="T:Microsoft.VisualStudio.TextManager.Interop.COLORINDEX" /> enumeration into its RGB (COLORREF) color value equivalent.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="idx">[in] A valid member of the <see cref="T:Microsoft.VisualStudio.TextManager.Interop.COLORINDEX" /> enumeration</param>
      <param name="pcrResult">[out] A COLORREF equivalent to the <see cref="T:Microsoft.VisualStudio.TextManager.Interop.COLORINDEX" /> supplied.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorUtilities.EncodeInvalidColor(System.UInt32@)">
      <summary>Returns a RGB (COLORREF) color value corresponding to the system defined invalid color.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pcrResult">[out] A COLORREF used to indicate an invalid color selection.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorUtilities.EncodeSysColor(System.Int32,System.UInt32@)">
      <summary>Returns a RGB (COLORREF) color value corresponding to a specified system color component.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="iSysColor">[in] Valid system color component value.</param>
      <param name="pcrResult">[out] An RGB (COLORREF) representation of the specified system component color. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorUtilities.EncodeTrackedItem(System.Int32,System.Int32,System.UInt32@)">
      <summary>Returns a RGB (COLORREF) color value corresponding to a color tracked in the Visual Studio environment.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="iItemToTrack">[in] An index indicating a visual component whose color must be tracked.</param>
      <param name="aspect">[in] A member of the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSCOLORASPECT" /> enumeration.</param>
      <param name="pcrResult">[out] A COLORREF representation corresponding to the color of the aspect of the tracked visual component.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorUtilities.EncodeVSColor(System.Int32,System.UInt32@)">
      <summary>Returns the COLORREF equivalent of a <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX" /> color. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code. </returns>
      <param name="vsColor">[in] A valid member of the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX" /> enumeration.</param>
      <param name="pcrResult">[out] A COLORREF representation of the color of the  system component specified by the <paramref name="vsColor" /> parameter.     </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorUtilities.FreeFontInfo(Microsoft.VisualStudio.Shell.Interop.FontInfo[])">
      <summary>Free all data in a contained <see cref="T:Microsoft.VisualStudio.Shell.Interop.FontInfo" /> object.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pInfo">[in,out] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.FontInfo" /> whose data is to be freed.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorUtilities.FreeItemInfo(Microsoft.VisualStudio.Shell.Interop.AllColorableItemInfo[])">
      <summary>Free all data in a contained <see cref="T:Microsoft.VisualStudio.Shell.Interop.AllColorableItemInfo" /> object</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pInfo">[in,out] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.AllColorableItemInfo" /> whose data is to be freed.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorUtilities.GetColorType(System.UInt32,System.Int32@)">
      <summary>Obtain the type of color representation in a COLORREF.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="crSource">[in] A COLORREF representation of color value.</param>
      <param name="pctType">[out] An integer representing the color type of <paramref name="crSource" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorUtilities.GetEncodedIndex(System.UInt32,Microsoft.VisualStudio.TextManager.Interop.COLORINDEX[])">
      <summary>Obtain a valid member of the <see cref="T:Microsoft.VisualStudio.TextManager.Interop.COLORINDEX" /> enumeration corresponding to a supplied COLORREF.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="crSource">[in] A COLORREF representation of color value.</param>
      <param name="pIdx">[out] A valid member of the <see cref="T:Microsoft.VisualStudio.TextManager.Interop.COLORINDEX" /> enumeration corresponding <paramref name="crSource" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorUtilities.GetEncodedSysColor(System.UInt32,System.Int32@)">
      <summary>Obtain a System Color service index corresponding to a supplied COLORREF.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="crSource">[in] A COLORREF representation of color value.</param>
      <param name="piSysColor">[out] The System Color Service index corresponding the <paramref name="crSource" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorUtilities.GetEncodedVSColor(System.UInt32,System.Int32@)">
      <summary>Obtain a valid member of the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX" /> enumeration corresponding to a supplied COLORREF.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="crSource">[in] A COLORREF representation of color value.</param>
      <param name="pVSColor">[out] A valid member of the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX" /> enumeration corresponding <paramref name="crSource" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorUtilities.GetRGBOfEncodedColor(System.UInt32,System.UInt32,System.Guid@,System.UInt32@)">
      <summary>Obtain the RGB value of a created tracking or indexed COLORREF representation of a color.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="crSource">[in] A COLORREF representation of color value.</param>
      <param name="crAutoColor">[in] A COLORREF representation of color value.</param>
      <param name="rguidCategory">[in] The <see cref="T:System.GUID" /> identifying the Category whose color values are to be obtained.</param>
      <param name="pcrResult">[out] A COLORREF representation of color value containing the returned RGB value.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorUtilities.GetRGBOfIndex(Microsoft.VisualStudio.TextManager.Interop.COLORINDEX,System.UInt32@)">
      <summary>Obtain the RGB value corresponding to a valid member of the <see cref="T:Microsoft.VisualStudio.TextManager.Interop.COLORINDEX" /> enumeration.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="idx">[out] A valid member of the <see cref="T:Microsoft.VisualStudio.TextManager.Interop.COLORINDEX" /> enumeration corresponding <paramref name="crSource" />.</param>
      <param name="pcrResult">[out] A COLORREF representation of color value containing the returned RGB value.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorUtilities.GetRGBOfItem(Microsoft.VisualStudio.Shell.Interop.AllColorableItemInfo[],System.Guid@,System.UInt32@,System.UInt32@)">
      <summary>Obtain the RGB (COLORREF) values of the foreground and background color of a Font and Color Category from an instance of <see cref="T:Microsoft.VisualStudio.Shell.Interop.AllColorableItemInfo" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pInfo">[in] An instance of <see cref="T:Microsoft.VisualStudio.Shell.Interop.AllColorableItemInfo" />. containing the Font and Color information for a given Category.</param>
      <param name="rguidCategory">[in] The <see cref="T:System.GUID" /> identifying the Category whose color values are to be obtained.</param>
      <param name="pcrForeground">[out] A COLORREF representation of foreground color value.</param>
      <param name="pcrBackground">[out] A COLORREF representation of background color value.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorUtilities.GetTrackedItemIndex(System.UInt32,System.Int32@,System.Int32@)">
      <summary>Obtain the index of a tracked color as represented by a COLORREF and a member of the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSCOLORASPECT" /> indicated if the color was used in the foreground or background.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="crSource">[in] A COLORREF representation of color value.</param>
      <param name="pAspect">[out] A valid member of the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSCOLORASPECT" /> indicating if the value of <paramref name="crSource" /> is a foreground or background color.</param>
      <param name="piItem">The index of the item being tracked.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorUtilities.InitFontInfo(Microsoft.VisualStudio.Shell.Interop.FontInfo[])">
      <summary>Initializes a <see cref="T:Microsoft.VisualStudio.Shell.Interop.FontInfo" /> object to a default state.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pInfo">[in,out] The <see cref="T:Microsoft.VisualStudio.Shell.Interop.FontInfo" /> object to be initialized.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorUtilities.InitItemInfo(Microsoft.VisualStudio.Shell.Interop.AllColorableItemInfo[])">
      <summary>Initializes an <see cref="T:Microsoft.VisualStudio.Shell.Interop.AllColorableItemInfo" /> object to a default state.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pInfo">[in,out] The <see cref="T:Microsoft.VisualStudio.Shell.Interop.AllColorableItemInfo" /> object to be initialized.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsGlobals2">
      <summary>Loads and saves values global to the solution. Replaces <see cref="T:EnvDTE.IVsGlobals" /> that cannot be used in managed code.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsGlobals2.Empty">
      <summary>Clears all global solution values.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsGlobals2.Load">
      <summary>Loads global solution values. Triggers a call to the <see cref="M:EnvDTE.IVsGlobalsCallback.ReadData(EnvDTE.Globals)" /> method of the <see cref="T:EnvDTE.IVsGlobalsCallback" /> interface.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsGlobals2.Save">
      <summary>Saves global solution values. Triggers a call to the <see cref="M:EnvDTE.IVsGlobalsCallback.WriteVariablesToData(System.String,System.Object@)" /> method of the <see cref="T:EnvDTE.IVsGlobalsCallback" /> interface.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsGlobalsCallback2">
      <summary>Performs the save and load operations for the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsGlobals2" /> interface.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsGlobalsCallback2.CanModifySource">
      <summary>Indicates whether or not you can change the source file corresponding to the globals.</summary>
      <returns>Returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" /> if the globals file is editable. Otherwise, for example if the file is checked into source control and cannot be checked out, returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_FALSE" />.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsGlobalsCallback2.ClearVariables">
      <summary>Removes all globals.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsGlobalsCallback2.GetParent(System.Object@)">
      <summary>Gets the parent of the object implementing IVsGlobalsCallBack2.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppOut">[out] Pointer to the <see cref="T:IDispatch" /> interface of the interface's parent object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsGlobalsCallback2.ReadData(System.Object)">
      <summary>Takes names and values from an object and stores them as globals.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pGlobals">[in] Pointer to the IUnknown interface of the object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsGlobalsCallback2.VariableChanged">
      <summary>Provides notification of changes to global solution variables.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsGlobalsCallback2.WriteVariablesToData(System.String,System.Object@)">
      <summary>Writes the name and value of a solution global. How and where the method writes the name and value pair is implementation dependent.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pVariableName">[in] Pointer to a string containing the variable's name.</param>
      <param name="varData">[in] Pointer to a VARIANT containing the variable's value.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsGradient">
      <summary>Enables a VSPackage to paint specified UI elements with the proper gradient.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsGradient.DrawGradient(System.IntPtr,System.IntPtr,Microsoft.VisualStudio.OLE.Interop.RECT[],Microsoft.VisualStudio.OLE.Interop.RECT[])">
      <summary>Draws a given gradient at a specified location.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="hwnd">[in] Handle of a window containing the region to be painted with a gradient.</param>
      <param name="hdc">[in] Handle of the device context used in drawing the gradient.</param>
      <param name="gradientRect">[in] The gradient rectangle or containing region, defining the full extent and geometry over which the gradient could be applied.</param>
      <param name="sliceRect">[in] The slice rectangle, defining the region over which a gradient is actually painted.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsGradient.GetGradientVector(System.Int32,System.UInt32[])">
      <summary>Returns an array of colors used to create a brush for a given gradient.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="cVector">[in] Size of the <paramref name="rgVector" /> array to be returned.</param>
      <param name="rgVector">[out] An array of <paramref name="cVector" /> RGB values that define a gradient.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsHasRelatedSaveItems">
      <summary>Enables the saving of additional items. Implemented by clients that want additional items to appear in the Save Changes dialog, or that want particular items saved at the same time as other items.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsHasRelatedSaveItems.GetRelatedSaveTreeItems(Microsoft.VisualStudio.Shell.Interop.VSSAVETREEITEM,System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSSAVETREEITEM[],System.UInt32@)">
      <summary>Gets the number of related items to save, or returns a list of related items to save.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="saveItem">[in] Pointer to a <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSSAVETREEITEM" /> structure containing information about the item to check for related items.</param>
      <param name="celt">[in] Zero or the number of items in rgSaveTreeItems. See Remarks.</param>
      <param name="rgSaveTreeItems">[in, out] Pointer to an array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSSAVETREEITEM" /> structures containing information about related items to save.</param>
      <param name="pcActual">[out] Pointer to an integer that is the number of related items to save or the number of elements in rgSaveTreeItems.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchyDeleteHandler2">
      <summary>Deletes one or more items in a solution hierarchy. The interface extends, but does not inherit from, <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchyDeleteHandler" />. Needed only if you want your package to use its own deletion prompt. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsHierarchyDeleteHandler2.ShowMultiSelDeleteOrRemoveMessage(System.UInt32,System.UInt32,System.UInt32[],System.Int32@)">
      <summary>Displays the multiple selection delete or remove message.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwDelItemOp">[in] A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSDELETEITEMOPERATION" /> enumeration.</param>
      <param name="cDelItems">[in] Number of items in <paramref name="rgDelItems" /></param>
      <param name="rgDelItems">[in] Array of VSITEMID values indicating items to delete from the project.</param>
      <param name="pfCancelOperation">[out] If true cancels the entire delete or remove operations.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsHierarchyDeleteHandler2.ShowSpecificDeleteRemoveMessage(System.UInt32,System.UInt32,System.UInt32[],System.Int32@,System.UInt32@)">
      <summary>Shows a specific delete or remove message.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwDelItemOps">[in] A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSDELETEITEMOPERATION" /> enumeration.</param>
      <param name="cDelItems">[in]The number of items in <paramref name="rgDelItems" /></param>
      <param name="rgDelItems">[in] Array of VSITEMID values indicating items to delete from the project.</param>
      <param name="pfShowStandardMessage">[out] Set to true if the shell is to ignore <paramref name="pdwDelItemOp" /> and shows the standard message.</param>
      <param name="pdwDelItemOp">[out] Set to <see cref="F:Microsoft.VisualStudio.Shell.Interop.__VSDELETEITEMOPERATION.DELITEMOP_DeleteFromStorage" /> or <see cref="F:Microsoft.VisualStudio.Shell.Interop.__VSDELETEITEMOPERATION.DELITEMOP_RemoveFromProject" /> if delete or remove allowed.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchyRefactorNotify">
      <summary>Notifies the hierarchy of refactoring operations.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsHierarchyRefactorNotify.OnAddParams(System.UInt32,System.String,System.UInt32,System.UInt32[],System.String[],System.String[])">
      <summary>Called after a method had parameters added.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="itemid">The VSITEMID that identifies the affected file.</param>
      <param name="lpszRQName">The method that has parameters added.</param>
      <param name="cParams">The number of parameters added.</param>
      <param name="rgszParamIndexes">The indexes of the new parameters.</param>
      <param name="rgszRQTypeNames">The types of the new parameters.</param>
      <param name="rgszParamNames">The names of the new parameters.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsHierarchyRefactorNotify.OnBeforeAddParams(System.UInt32,System.String,System.UInt32,System.UInt32[],System.String[],System.String[],System.Int32)">
      <summary>Called when a method is about to have parameters added.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="itemid">The VSITEMID that identifies the affected file.</param>
      <param name="lpszRQName">The method that has parameters added.</param>
      <param name="cParams">The number of added parameters.</param>
      <param name="rgszParamIndexes">The indexes of added parameters.</param>
      <param name="rgszRQTypeNames">The types of added parameters.</param>
      <param name="rgszParamNames">The names of added parameters.</param>
      <param name="promptContinueOnFail">true to prompt the user to continue the add operation if one or more IVsRefactorNotify implementers fails; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsHierarchyRefactorNotify.OnBeforeGlobalSymbolRenamed(System.UInt32,System.UInt32[],System.UInt32,System.String[],System.String,System.Int32)">
      <summary>Called when a symbol is about to be renamed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="cItemsAffected">The number of files affected by the rename.</param>
      <param name="rgItemsAffected">An array of VSITEMIDs that identifies the files that will be affected.</param>
      <param name="cRQNames">The number of renamed symbols. The number can be greater than one, if an overloaded symbol is renamed.</param>
      <param name="rglpszRQName">The name of the symbol before rename.</param>
      <param name="lpszNewName">The name of the symbol after the rename. </param>
      <param name="promptContinueOnFail">true to prompt the user to continue the rename operation if one or more IVsRefactorNotify implementers fails; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsHierarchyRefactorNotify.OnBeforeRemoveParams(System.UInt32,System.String,System.UInt32,System.UInt32[],System.Int32)">
      <summary>Called when a method is about to have parameters removed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="itemid">The VSITEMID that identifies the affected file.</param>
      <param name="lpszRQName">The method that has parameters removed.</param>
      <param name="cParamIndexes">The number of parameters removed.</param>
      <param name="rgParamIndexes">The indexes of removed parameters.</param>
      <param name="promptContinueOnFail">true to prompt the user to continue the remove operation if one or more IVsRefactorNotify implementers fails; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsHierarchyRefactorNotify.OnBeforeReorderParams(System.UInt32,System.String,System.UInt32,System.UInt32[],System.Int32)">
      <summary>Called when a method is about to have parameters reordered.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="itemid">The VSITEMID that identifies the affected file.</param>
      <param name="lpszRQName">The method that has parameters reordered.</param>
      <param name="cParamIndexes">The number of parameters reordered.</param>
      <param name="rgParamIndexes">An array of parameter indexes. The index defines the position of the parameter after reordering. The value at the index defines the position of the parameter before reordering.</param>
      <param name="promptContinueOnFail">true to prompt the user to continue the reorder operation if one or more IVsRefactorNotify implementers fails; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsHierarchyRefactorNotify.OnGlobalSymbolRenamed(System.UInt32,System.UInt32[],System.UInt32,System.String[],System.String)">
      <summary>Called after a symbol is renamed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="cItemsAffected">The number of files affected by the rename.</param>
      <param name="rgItemsAffected">An array of VSITEMIDs that identifies the affected files. </param>
      <param name="cRQNames">The number of the renamed symbols. The number can be greater than one if an overloaded symbol is renamed.</param>
      <param name="rglpszRQName">The name of the symbol before rename.</param>
      <param name="lpszNewName">The name of the symbol after the rename.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsHierarchyRefactorNotify.OnRemoveParams(System.UInt32,System.String,System.UInt32,System.UInt32[])">
      <summary>Called after a method had parameters removed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="itemid">The VSITEMID that identifies the affected file.</param>
      <param name="lpszRQName">The method that has parameters removed.</param>
      <param name="cParamIndexes">The number of parameters removed.</param>
      <param name="rgParamIndexes">An array of parameter indexes where each value indicates the index of the parameter that was removed.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsHierarchyRefactorNotify.OnReorderParams(System.UInt32,System.String,System.UInt32,System.UInt32[])">
      <summary>Called after a method had parameters reordered.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="itemid">The VSITEMID that identifies the affected file.</param>
      <param name="lpszRQName">The method that has parameters reordered.</param>
      <param name="cParamIndexes">The number of parameters reordered.</param>
      <param name="rgParamIndexes">An array of parameter indexes. The index defines the position of the parameter after reordering. The value at the index defines the position of the parameter before reordering.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsImageButton">
      <summary>Draws an image on a button created by your VSPackage.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsImageButton.Draw(Microsoft.VisualStudio.Shell.Interop.VSDRAWITEMSTRUCT[],System.Int32)">
      <summary>Draws an ImageButton for your VSPackage.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pDrawItemStruct">[in] Provides the information in a <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSDRAWITEMSTRUCT" /> structure that IVsImageButton.Draw needs to drawthe owner-drawn control or menu item.</param>
      <param name="fHot">[in] When true, the button changes appearance when the mouse pointer is over the button.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseEngine">
      <summary>Enables a project hierarchy node to load or unload files as part of support for IntelliSense. Loading and unloading generates events that may change what IntelliSense displays. You can get an instance of the interface from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsIntellisenseEngine" /> (SID_SVsIntelliSenseEngine) service.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseEngine.Load">
      <summary>Ensures the Intellisense engine is loaded. Called by C# refactoring.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseEngine.SupportsLoad">
      <summary>Indicates whether or not a file supports a Load method. Used by C# refactoring.</summary>
      <returns>Returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" /> if supported. Otherwise, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.E_FAIL" />.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseEngine.Unload">
      <summary>Ensures the Intellisense engine is unloaded. Called by C# refactoring.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject">
      <summary>Provides IntelliSense support for a project. Used with <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectHost" /> and intended for use with contained languages.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject.AddAssemblyReference(System.String)">
      <summary>Adds an assembly reference to the project.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrAbsPath">[in] String containing the full path to the assembly.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject.AddFile(System.String,System.UInt32)">
      <summary>Adds a file to the project.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrAbsPath">[in] A string containing the full path of the file.</param>
      <param name="itemid">[in] The item identifier (VSITEMID) of the file to add.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject.AddP2PReference(System.Object)">
      <summary>Adds a reference to an object on a peer-to-peer network.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pUnk">[in] Pointer to the IUnknown interface of the object referenced.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject.Close">
      <summary>Releases any resources or interfaces held by the implementation of <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject.GetCodeDomProviderName(System.String@)">
      <summary>Retrieves the name of the code compiler or code generator (code DOM provider).</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrProvider">[out] Pointer to a string containing the name of the code DOM provider.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject.GetCompilerReference(System.Object@)">
      <summary>Retrieves a pointer to the IUnknown interface of the compiler for the project.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppCompilerReference">[out] Pointer to the IUnknown interface of the compiler for the project.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject.GetContainedLanguageFactory(Microsoft.VisualStudio.TextManager.Interop.IVsContainedLanguageFactory@)">
      <summary>Returns a pointer to the <see cref="T:Microsoft.VisualStudio.TextManager.Interop.IVsContainedLanguageFactory" /> interface for the project.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppContainedLanguageFactory">[out] Pointer to the <see cref="T:Microsoft.VisualStudio.TextManager.Interop.IVsContainedLanguageFactory" /> interface.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject.GetExternalErrorReporter(Microsoft.VisualStudio.TextManager.Interop.IVsReportExternalErrors@)">
      <summary>Retrieves the project's external error reporter, a pointer to an <see cref="T:Microsoft.VisualStudio.TextManager.Interop.IVsReportExternalErrors" /> interface.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppErrorReporter">[out] A pointer to a <see cref="T:Microsoft.VisualStudio.TextManager.Interop.IVsReportExternalErrors" /> interface.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject.GetFileCodeModel(System.Object,System.Object,System.Object@)">
      <summary>Retrieves the code model for a file specified by project and item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pProj">[in] Pointer to the IUnknown interface of the project.</param>
      <param name="pProjectItem">[in] Pointer to the IUnknown interface of the project item.</param>
      <param name="ppCodeModel">[out] Pointer to the IUnknown of the code model.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject.GetProjectCodeModel(System.Object,System.Object@)">
      <summary>Retrieves the code model for the project.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pProj">[in] Pointer to the IUnknown interface of the project.</param>
      <param name="ppCodeModel">[out] Pointer to the IUnknown of the code model.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject.Init(Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectHost)">
      <summary>Initializes an Intellisense project.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHost">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectHost" /> interface of the hierarchy node containing the project.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject.IsCompilableFile(System.String)">
      <summary>Indicates whether or not a file can be compiled, based on its extension.</summary>
      <returns>Returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" /> if the file can be compiled, <see cref="F:Microsoft.VisualStudio.VSConstants.S_FALSE" /> otherwise.</returns>
      <param name="bstrFileName">[in] String containing the file name.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject.IsSupportedP2PReference(System.Object)">
      <summary>Indicates whether or not a peer-to-peer network reference to an object is supported.</summary>
      <returns>Returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" /> if the object can be referenced.</returns>
      <param name="pUnk">[in] Pointer to the IUnknown interface of the referenced object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject.IsWebFileRequiredByProject(System.Int32@)">
      <summary>Indicates whether or not an Intellisense project can include Web files. Visual Basic projects cannot, Visual C# projects can.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbReq">[out] Boolean. Set to true if the Web files can be added to the Intellisense project.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject.RefreshCompilerOptions">
      <summary>Refreshes the compiler options using settings from the host.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject.RemoveAssemblyReference(System.String)">
      <summary>Removes a reference to an assembly.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrAbsPath">[in] String containing the complete path to the assembly.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject.RemoveFile(System.String,System.UInt32)">
      <summary>Removes a file from the project.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrAbsPath">[in] String containing the complete path to the file.</param>
      <param name="itemid">[in] The item identifier (VSITEMID) of the file.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject.RemoveP2PReference(System.Object)">
      <summary>Removes a reference to an object over a peer-to-peer network.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pUnk">[in] Pointer to the IUnknown interface of the object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject.RenameFile(System.String,System.String,System.UInt32)">
      <summary>Renames a file in the project.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrAbsPath">[in] String containing the full path and name of the file.</param>
      <param name="bstrNewAbsPath">[in] String containing the full path and new name of the file.</param>
      <param name="itemid">[in] The file's item identifier (VSITEMID).</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject.ResumePostedNotifications">
      <summary>Enables posting of compiler messages.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject.StartIntellisenseEngine">
      <summary>Start the Intellisense engine.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject.StopIntellisenseEngine">
      <summary>Stop the Intellisense engine.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject.SuspendPostedNotifications">
      <summary>Stops posting of compiler messages.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject.WaitForIntellisenseReady">
      <summary>Wait until the Intellisense engine is ready.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectEventSink">
      <summary>Defines the event functions for an Intellisense project. (<see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject" />).</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectEventSink.OnCodeFileChange(System.String,System.String)">
      <summary>Called when the source code file changes.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszOldCodeFile">Path to the old code file.</param>
      <param name="pszNewCodeFile">Path to the new code file.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectEventSink.OnConfigChange">
      <summary>Called when the configuration file changes.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectEventSink.OnReferenceChange(System.UInt32,System.String)">
      <summary>Called when a reference in the project changes.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwChangeType">[in] A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.REFERENCECHANGETYPE" /> enumeration.</param>
      <param name="pszAssemblyPath">[in] String that contains the full path to the referenced assembly.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectEventSink.OnStatusChange(System.UInt32)">
      <summary>Method called when the status of the project changes.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwStatus">[in] A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.INTELLIPROJSTATUS" /> enumeration.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectHost">
      <summary>Enables a project hierarchy node to provide information about nested IntelliSense projects (projects implementing <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject" />) to display in IntelliSense tooltips. Used with contained languages. You can get an instance of this interface from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsIntellisenseProjectHost" /> (SID_SVsIntellisenseProjectHost) service.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectHost.CreateFileCodeModel(System.String,System.Object@)">
      <summary>Retrieves the code model for a given file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszFilename">[in] String containing the name of the file.</param>
      <param name="ppCodeModel">[out] Pointer to the IUnknown interface of an instance of the code model.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectHost.GetCompilerOptions(System.String@)">
      <summary>Retrieves the current compiler options.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrOptions">[out] Pointer to a string containing the current compiler options.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectHost.GetHostProperty(System.UInt32,System.Object@)">
      <summary>Retrieves the string value of a host property.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwPropID">[in] A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.HOSTPROPID" /> enumeration such as <see cref="F:Microsoft.VisualStudio.Shell.Interop.HOSTPROPID.HOSTPROPID_PROJECTNAME" />.</param>
      <param name="pvar">[out] Pointer to a variant containing the property value.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectHost.GetOutputAssembly(System.String@)">
      <summary>Returns the name of the output assembly.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrOutputAssembly">[out] Pointer to a string containing the name of the assembly.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectManager">
      <summary>Enables a project hierarchy node to notify listeners of events that change what appears in IntelliSense tooltips, as well as retrieving particular project information. You can get an instance of the interface from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsIntellisenseProjectManager" /> (SID_SVsIntellisenseProjectManager) service. Used with contained languages.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectManager.AdviseIntellisenseProjectEvents(Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectEventSink,System.UInt32@)">
      <summary>Registers an event sink to receive load status of an IntelliSense project.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pSink"> [In] Pointer to an implementation of <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectEventSink" />.</param>
      <param name="pdwCookie"> [out] Pointer to an object of type VSCOOKIE. Used in the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectManager.UnadviseIntellisenseProjectEvents(System.UInt32)" /> method when unregistering the event sink.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectManager.CloseIntellisenseProject">
      <summary>Called by editors to explicitly close an Intellisense project.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectManager.CompleteIntellisenseProjectLoad">
      <summary>Called by editors when an Intellisense project is loading and the editor needs to ensure that loading is complete so that it can complete an action.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectManager.GetContainedLanguageFactory(System.String,Microsoft.VisualStudio.TextManager.Interop.IVsContainedLanguageFactory@)">
      <summary>Obtains the contained language factory for a given language.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrLanguage">[in] String containing the name of the language.</param>
      <param name="ppContainedLanguageFactory">[out] Pointer to an <see cref="T:Microsoft.VisualStudio.TextManager.Interop.IVsContainedLanguageFactory" /> interface.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectManager.OnEditorReady">
      <summary>Called by editors when they are ready. Use this method to delay generating compiler parameters to allow the project to refresh references.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectManager.UnadviseIntellisenseProjectEvents(System.UInt32)">
      <summary>Disconnects an event sink. The inverse of <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectManager.AdviseIntellisenseProjectEvents(Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectEventSink,System.UInt32@)" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwCookie">[in]  The VSCOOKIE value returned by <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectManager.AdviseIntellisenseProjectEvents(Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectEventSink,System.UInt32@)" /> when you registered the event sink.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsItemTypeResolutionService">
      <summary>Makes the connections among referenced projects and assemblies to provide type information to a project node.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsItemTypeResolutionService.InitializeReferences(System.Object)">
      <summary>Initializes the list of assembly references using the <see cref="P:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies" /> property of the <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> object.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="punkCompilerParameters">[In] Pointer to a <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsItemTypeResolutionService.ReferenceAdded(System.String)">
      <summary>Called by the project system when you add a new assembly reference.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszReference">[in] Pointer to a string containing the full path and name of the reference.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsItemTypeResolutionService.ReferenceChanged(System.String)">
      <summary>Called by the project system when you remove a reference.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszReference">[in] Pointer to a string containing the full path and name of the reference.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsItemTypeResolutionService.ReferenceRemoved(System.String)">
      <summary>Called by the project system when a reference changes.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszReference">[in] Pointer to a string containing the full path and name of the reference.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsItemTypeResolutionService.Reset">
      <summary>Resets the service.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsItemTypeResolutionService.SetSite(System.Object)">
      <summary>Sets the site for the type resolution service.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="punkVsItemTypeResolutionSite">[in] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsItemTypeResolutionSite" /> interface.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsItemTypeResolutionSite">
      <summary>Provides callback methods for <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsItemTypeResolutionService" /> to track references and assemblies.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsItemTypeResolutionSite.AddReference(System.String)">
      <summary>Adds a reference to the project.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrReferencePath">[in] String containing the reference to add.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsItemTypeResolutionSite.IsCodeDirectoryAssembly(System.String,System.Int32@)">
      <summary>Tests whether or not a reference is to a code assembly.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrAssembly">[in] String containing the assembly path and name.</param>
      <param name="pfIsCodeAssembly">[out] Pointer to a Boolean value. Set to true if the reference is to a code assembly; false otherwise.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsItemTypeResolutionSite.WaitForReferencesReady">
      <summary>Ensures any pending compiler parameter generation concerning references is complete.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsLaunchPad2">
      <summary>Executes a command with output displayed to an output pane in the Visual Studio IDE. Similar to <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsLaunchPad" /> but <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsLaunchPad2.ExecCommandEx(System.String,System.String,System.String,System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsOutputWindowPane,System.UInt32,System.UInt32,System.String,Microsoft.VisualStudio.Shell.Interop.IVsLaunchPadEvents,Microsoft.VisualStudio.Shell.Interop.IVsLaunchPadOutputParser,System.UInt32[],System.String[])" /> method allows the parsed output string to be in a non-standard format. Executes a command with output displayed to an output pane in the Visual Studio IDE. Similar to <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsLaunchPad" />, but <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsLaunchPad2.ExecCommandEx(System.String,System.String,System.String,System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsOutputWindowPane,System.UInt32,System.UInt32,System.String,Microsoft.VisualStudio.Shell.Interop.IVsLaunchPadEvents,Microsoft.VisualStudio.Shell.Interop.IVsLaunchPadOutputParser,System.UInt32[],System.String[])" /> method allows the parsed output string to be in a non-standard format.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsLaunchPad2.ExecCommandEx(System.String,System.String,System.String,System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsOutputWindowPane,System.UInt32,System.UInt32,System.String,Microsoft.VisualStudio.Shell.Interop.IVsLaunchPadEvents,Microsoft.VisualStudio.Shell.Interop.IVsLaunchPadOutputParser,System.UInt32[],System.String[])">
      <summary>Executes a command with output displayed to an output pane in the IDE and parses the output string in a specified format.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszApplicationName">[in] Application name that is passed to CreateProcess by the environment.</param>
      <param name="pszCommandLine">[in] Command line string that is passed to CreateProcess by the environment.</param>
      <param name="pszWorkingDir">[in] Working directory that is passed to CreateProcess by the environment. Can be null.</param>
      <param name="lpf">[in] Launch pad flags. All existing values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LAUNCHPAD_FLAGS" /> enumeration and all the new values are from <see cref="T:Microsoft.VisualStudio.Shell.Interop._LAUNCHPAD_FLAGS2" /> enumeration</param>
      <param name="pOutputWindowPane">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsOutputWindowPane" /> interface created by <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsOutputWindow.CreatePane(System.Guid@,System.String,System.Int32,System.Int32)" />.</param>
      <param name="nTaskItemCategory">[in] Task item category, if <paramref name="lpf" /> is set to <see cref="F:Microsoft.VisualStudio.Shell.Interop._LAUNCHPAD_FLAGS.LPF_PipeStdoutToTaskList" />. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSTASKCATEGORY" /> enumeration.</param>
      <param name="nTaskItemBitmap">[in] Task item bitmap, if <paramref name="lpf" /> is set to <see cref="F:Microsoft.VisualStudio.Shell.Interop._LAUNCHPAD_FLAGS.LPF_PipeStdoutToTaskList" />.</param>
      <param name="pszTaskListSubcategory">[in] Task list subcategory, if <paramref name="lpf" /> is set to <see cref="F:Microsoft.VisualStudio.Shell.Interop._LAUNCHPAD_FLAGS.LPF_PipeStdoutToTaskList" />.</param>
      <param name="pVsLaunchPadEvents">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsLaunchPadEvents" /> interface</param>
      <param name="pOutputParser">[in] Callback for parsing of information from output (may be null).</param>
      <param name="pdwProcessExitCode">[out] Value returned by process.</param>
      <param name="pbstrOutput">[out] All output that was generated. Can be null.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsLaunchPadOutputParser">
      <summary>Parses tool output lines for task list item or navigation information. Implemented by callers of the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsLaunchPad2.ExecCommandEx(System.String,System.String,System.String,System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsOutputWindowPane,System.UInt32,System.UInt32,System.String,Microsoft.VisualStudio.Shell.Interop.IVsLaunchPadEvents,Microsoft.VisualStudio.Shell.Interop.IVsLaunchPadOutputParser,System.UInt32[],System.String[])" /> method of the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsLaunchPad2" /> interface.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsLaunchPadOutputParser.ParseOutputStringForInfo(System.String,System.String[],System.UInt32[],System.UInt32[],System.String[],System.String[])">
      <summary>Calls ParseOutputStringForInfo to the launch pad If task item text is returned, the launch pad creates a task list item by using the information it returned. If only filename and line number information is returned, the launch pad adds the line to the output window and uses the filename and line number as the navigation information for the output line.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszOutputString">[in] One line of output text.</param>
      <param name="pbstrFilename">[out] Fully qualified file name for task list item (may be null).</param>
      <param name="pnLineNum">[out] File line number for task list item (may be null).</param>
      <param name="pnPriority">[out] Priority for task list item (may be null).</param>
      <param name="pbstrTaskItemText">[out] Description text for task list item (may be null).</param>
      <param name="pbstrHelpKeyword">[out] Help keyword for task list item (may be null).</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsLibrary2">
      <summary>Describes the library and is used by the Object Manager to access pertinent symbols.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsLibrary2.AddBrowseContainer(Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORDATA[],System.UInt32@,System.String[])">
      <summary>Adds a browse container to be browsed by the library.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pcdComponent">[in] Specifies attributes that identify the added component.</param>
      <param name="pgrfOptions">[in, out] Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_ADDREMOVEOPTIONS" /> enumeration.</param>
      <param name="pbstrComponentAdded">[out, optional] pointer to a <paramref name="bstr" /> containing the text to display for the added component.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsLibrary2.CreateNavInfo(Microsoft.VisualStudio.Shell.Interop.SYMBOL_DESCRIPTION_NODE[],System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsNavInfo@)">
      <summary>Reserved for future use.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="rgSymbolNodes">[in] An array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.SYMBOL_DESCRIPTION_NODE" /> objects describing each node in the tree.</param>
      <param name="ulcNodes">[in] The number of objects in the <paramref name="rgSymbolNodes" /> array.</param>
      <param name="ppNavInfo">[out] Returns an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo" /> object representing the navigation information for all nodes in the tree.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsLibrary2.GetBrowseContainersForHierarchy(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSBROWSECONTAINER[],System.UInt32[])">
      <summary>Returns an array of Browse Containers that correspond to the given <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHierarchy">[in] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface.</param>
      <param name="celt">[in] The number of elements in the <paramref name="rgBrowseContainers" /> array.</param>
      <param name="rgBrowseContainers">[in, out] On input, null. On output, an array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSBROWSECONTAINER" /> structures.</param>
      <param name="pcActual">[out] The actual number of containers returned in <paramref name="rgBrowseContainers" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsLibrary2.GetGuid(System.IntPtr@)">
      <summary>Returns a pointer to the GUID of the library.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppguidLib">[out] Pointer to the GUID of the current library.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsLibrary2.GetLibFlags2(System.UInt32@)">
      <summary>Returns flags associated with the library.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pgrfFlags">[out] Pointer to a flag indicating which flags apply to the current library.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsLibrary2.GetLibList(Microsoft.VisualStudio.Shell.Interop.LIB_PERSISTTYPE,Microsoft.VisualStudio.Shell.Interop.IVsLiteTreeList@)">
      <summary>Returns the list of browse containers currently being browsed by the library as an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsLiteTreeList" /> interface.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="lptType">[in] Specifies type of library to return. For a list of <paramref name="lptType" /> values, see <see cref="T:Microsoft.VisualStudio.Shell.Interop.LIB_PERSISTTYPE" />.</param>
      <param name="ppList">[out] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsLiteTreeList" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsLibrary2.GetList2(System.UInt32,System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2[],Microsoft.VisualStudio.Shell.Interop.IVsObjectList2@)">
      <summary>Returns the requested list of symbols as an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsObjectList" /> interface.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ListType">[in] Specifies list type. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_LISTTYPE2" /> enumeration.</param>
      <param name="flags">[in] Specifies flags. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_LISTFLAGS" /> enumeration.</param>
      <param name="pobSrch">[in] Specifies a pointer to a <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2" /> structure.</param>
      <param name="ppIVsObjectList2">[out] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsObjectList" /> interface.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsLibrary2.GetSeparatorString(System.IntPtr)">
      <summary>Returns the string used to separate symbols for this type of Browse Container.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszSeparator">[out] Pointer to a null-terminated string containing the language specific scope operator.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsLibrary2.GetSupportedCategoryFields2(System.Int32,System.UInt32@)">
      <summary>Returns the category values supported by the library for a specified category.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="Category">[in] Specifies a library's category type. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_CATEGORY2" /> enumeration.</param>
      <param name="pgrfCatField">[out] Pointer to a category field object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsLibrary2.LoadState(Microsoft.VisualStudio.OLE.Interop.IStream,Microsoft.VisualStudio.Shell.Interop.LIB_PERSISTTYPE)">
      <summary>Asks the library to load its persisted global Browse Containers.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pIStream">[in] Pointer to an <see cref="T:Microsoft.VisualStudio.OLE.Interop.IStream" /> interface.</param>
      <param name="lptType">[in] Specifies the persisted type of the library. Always <see cref="F:Microsoft.VisualStudio.Shell.Interop.LIB_PERSISTTYPE.LPT_GLOBAL" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsLibrary2.RemoveBrowseContainer(System.UInt32,System.String)">
      <summary>Removes a Browse Container being browsed by the library.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwReserved">[in] Reserved. Set this parameter to null.</param>
      <param name="pszLibName">[in] Pointer to a null-terminated string containing the library name.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsLibrary2.SaveState(Microsoft.VisualStudio.OLE.Interop.IStream,Microsoft.VisualStudio.Shell.Interop.LIB_PERSISTTYPE)">
      <summary>Asks the library to save its persisted global Browse Containers.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pIStream">[in] Pointer to an <see cref="T:Microsoft.VisualStudio.OLE.Interop.IStream" /> interface.</param>
      <param name="lptType">[in] Specifies the persisted type of the library. Always <see cref="F:Microsoft.VisualStudio.Shell.Interop.LIB_PERSISTTYPE.LPT_GLOBAL" /> from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.LIB_PERSISTTYPE" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsLibrary2.UpdateCounter(System.UInt32@)">
      <summary>Returns the current change counter for the library and is used to indicate that the library contents have changed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pCurUpdate">[out] Returns the current update counter.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsLibrary2Ex">
      <summary>Enables libraries to provide different ObjectBrowser information when profiles change, or references are added or removed. Extends, but does not inherit from, <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsLibrary2" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsLibrary2Ex.DoIdle">
      <summary>Give idle time to the library.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsLibrary2Ex.GetNavInfoContainerData(Microsoft.VisualStudio.Shell.Interop.IVsNavInfo,Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORDATA[])">
      <summary>Gets information about the container of an object specified by an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo" /> interface.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pNavInfo">[in] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo" /> interface of the contained object.</param>
      <param name="pcsdComponent">[out] Pointer to a <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORDATA" /> providing information about the container.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsLibrary2Ex.ProfileSettingsChanged">
      <summary>Tells the library that profile settings have changed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsLibrary2Ex.SetContainerAsUnchanging(Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORDATA[],System.Int32)">
      <summary>Gives the library a suggestion that the physical is unchanging.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pcsdComponent">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORDATA" /> of the container.</param>
      <param name="fUnchanging">[in] Boolean. Set to true to indicate the container is unchanging.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVSMDTypeResolutionService">
      <summary>Makes an instance of <see cref="T:System.ComponentModel.Design.ITypeResolutionService" /> available that you can use in native (unmanaged) code. You can get an instance of the interface through the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IWebApplicationCtxSvc.GetItemContext(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,Microsoft.VisualStudio.OLE.Interop.IServiceProvider@)" /> method of the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProject" /> interface. You can also obtain the interface through the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVSMDTypeResolutionService" /> (SID_SVSMDTypeResoluionService) service.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVSMDTypeResolutionService.TypeResolutionService(System.Object@)">
      <param name="ppTrs"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsMenuEditorTransactionEvents">
      <summary>Enables treating a group of menu editor actions as a transaction. Used by the form designer to support undoing actions.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsMenuEditorTransactionEvents.BeginTransaction(System.UInt32)">
      <summary>Marks the beginning of a transaction for an editor event.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="trans">[in] The menu editor action represented by the transaction. A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__MENUEDITOR_TRANSACTION" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsMenuEditorTransactionEvents.EndTransaction(System.UInt32)">
      <summary>Marks the end of a transaction for an editor event.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code. </returns>
      <param name="trans">[in] The menu editor action represented by the transaction. A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__MENUEDITOR_TRANSACTION" /> enumeration.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsMonitorSelection2">
      <summary>Provides information about an empty context (when nothing is selected) and supports implementation of custom selection identifiers. Extends, but does not inherit from, <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsMonitorSelection" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsMonitorSelection2.GetElementID(System.Guid@,System.UInt32@)">
      <param name="rguidElement"></param>
      <param name="pElementId"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsMonitorSelection2.GetEmptySelectionContext(Microsoft.VisualStudio.Shell.Interop.IVsTrackSelectionEx@)">
      <param name="ppEmptySelCtxt"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsNavigationTool">
      <summary>Replaces <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsClassView" /> and IVsObjectBrowser.to manipulate the ClassView and ObjectBrowser.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsNavigationTool.GetSelectedSymbols(Microsoft.VisualStudio.Shell.Interop.IVsSelectedSymbols@)">
      <summary>Get the symbols selected in the object or class browser.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppIVsSelectedSymbols">[out] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSelectedSymbols" /> interface providing access to the selected symbols.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsNavigationTool.NavigateToNavInfo(Microsoft.VisualStudio.Shell.Interop.IVsNavInfo)">
      <summary>Tells the class or object browser to navigate to a particular item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pNavInfo">[in] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo" /> interface indicating the item to which to navigate. You can get navigation information from the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetNavInfo(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsNavInfo@)" /> method of IVsObjectList2.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsNavigationTool.NavigateToSymbol(System.Guid@,Microsoft.VisualStudio.Shell.Interop.SYMBOL_DESCRIPTION_NODE[],System.UInt32)">
      <summary>Tells the class or object browser to navigate to items in a library.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="guidLib">[in] The GUID of the library containing the symbol.</param>
      <param name="rgSymbolNodes">[in] An array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.SYMBOL_DESCRIPTION_NODE" /> structures describing the symbols.</param>
      <param name="ulcNodes">[in] Number of elements in rgSymbolNodes.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo">
      <summary>Identifies a symbol in the hierarchical tree of symbols. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo.EnumCanonicalNodes(Microsoft.VisualStudio.Shell.Interop.IVsEnumNavInfoNodes@)">
      <summary>Defines a collection of nodes contained in the canonical path of the symbol.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppEnum">[out] The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsEnumNavInfoNodes" />. Identifies the collection of nodes in the canonical path of the symbol.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo.EnumPresentationNodes(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsEnumNavInfoNodes@)">
      <summary>Defines a collection of nodes contained in the presentation path of the symbol.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwFlags">[in] One of the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_LISTFLAGS" /> values. Specifies a symbol-browsing tool, such as Class View, Object Browser, or Call Browser (only available in C++).</param>
      <param name="ppEnum">[out] The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsEnumNavInfoNodes" />. Identifies the collection of nodes in the presentation path of the symbol.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo.GetLibGuid(System.Guid@)">
      <summary>Identifies the symbol library. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pGuid">[out] A <see cref="T:System.Guid" /> identifying the library.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo.GetSymbolType(System.UInt32@)">
      <summary>Identifies the type of the symbol. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pdwType">[out] One of the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_LISTTYPE2" /> values. </param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfoNode">
      <summary>Identifies a node in the path of the symbol.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsNavInfoNode.get_Name(System.String@)">
      <summary>Gets the name of the node.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrName">[out] The name of the node. The name must be unique. It can be different from the displayed name. If the node is renamed, the new name is returned. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsNavInfoNode.get_Type(System.UInt32@)">
      <summary>Gets the type of the node.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pllt">[out] One of the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_LISTTYPE2" /> values.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsObjectBrowserDescription3">
      <summary>Provides a means for entering Object Browser description text.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectBrowserDescription3.AddDescriptionText3(System.String,Microsoft.VisualStudio.Shell.Interop.VSOBDESCRIPTIONSECTION,Microsoft.VisualStudio.Shell.Interop.IVsNavInfo)">
      <summary>Adds elements of description text to the Object Browser.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pText">[in] Pointer to the text string that contains the description text to add.</param>
      <param name="obdSect">[in] Identifies which element of the description text is to be filled in by <paramref name="pText" />. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBDESCRIPTIONSECTION" /> enumeration.</param>
      <param name="pHyperJump">[in] Specifies a <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBJECTINFO" /> structure containing navigation information to a source file containing the referenced object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectBrowserDescription3.ClearDescriptionText">
      <summary>Clears the Object Browser description text.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2">
      <summary>Provides information about symbols in a list that is part of an overall organization in the tree view (<see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsLiteTree" />) of the code browsing tools.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.CanDelete(System.UInt32,System.Int32@)">
      <summary>Returns a flag indicating if the given list item can be deleted.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="pfOK">[out] Pointer to a flag indicating whether the item can be deleted.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.CanGoToSource(System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSOBJGOTOSRCTYPE,System.Int32@)">
      <summary>Returns a flag indicating if navigation to the given list item's source is supported.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="SrcType">[in] Specifies the source type. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBJGOTOSRCTYPE" /> enumeration.</param>
      <param name="pfOK">[out] Pointer to a flag indicating whether navigation is supported.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.CanRename(System.UInt32,System.String,System.Int32@)">
      <summary>Returns a flag indicating if the given list item can be renamed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="pszNewName">[in] Pointer to a null-terminated string containing the new name.</param>
      <param name="pfOK">[out] Pointer to a flag indicating whether an item can be renamed.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.CountSourceItems(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy@,System.UInt32@,System.UInt32@)">
      <summary>Returns the hierarchy and the number of ItemIDs corresponding to source files for the given list item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="ppHier">[out] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface.</param>
      <param name="pItemid">[out] Specifies the <paramref name="itemid" /> of an item within the hierarchy. Values are described in VSITEMID.</param>
      <param name="pcItems">[out] Pointer to the count of items.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.DoDelete(System.UInt32,System.UInt32)">
      <summary>Asks the given list item to do the delete operation.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item to delete.</param>
      <param name="grfFlags">[in] Values taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSOBJOPFLAGS" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.DoDragDrop(System.UInt32,Microsoft.VisualStudio.OLE.Interop.IDataObject,System.UInt32,System.UInt32@)">
      <summary>Asks the given list item to handle a drag-and-drop operation.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="pDataObject">[in] Pointer to an IDataObject being dropped.</param>
      <param name="grfKeyState">[in] Current state of the keyboard and the mouse modifier keys.</param>
      <param name="pdwEffect">[in, out] On input, the effect being requested. On output, the effect that your object list allows.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.DoRename(System.UInt32,System.String,System.UInt32)">
      <summary>Asks the given list item to do the rename operation.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="pszNewName">[in] Pointer to a null-terminated string containing the new name.</param>
      <param name="grfFlags">[in] Flag indicating that Index is part of a multi-select. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSOBJOPFLAGS" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.EnumClipboardFormats(System.UInt32,System.UInt32,System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSOBJCLIPFORMAT[],System.UInt32[])">
      <summary>Asks the given list item to enumerate its supported clipboard formats.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="grfFlags">[in] Specifies multi-selection. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSOBJCFFLAGS" /> enumeration.</param>
      <param name="celt">[in] Specifies the element count of <paramref name="rgcfFormats" />.</param>
      <param name="rgcfFormats">[in, out] Specifies an array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBJCLIPFORMAT" /> structures defining the formats supported.</param>
      <param name="pcActual">[out] Pointer to a count of formats in the <paramref name="rgcfformats" /> array actually returned.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.FillDescription(System.UInt32,System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsObjectBrowserDescription2)">
      <summary>Asks the list item to provide description text to be used in the object browser.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="grfOptions">[in] Specifies description options. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSOBJDESCOPTIONS" /> enumeration</param>
      <param name="pobDesc">[in] Specifies a <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsObjectBrowserDescription2" /> interface.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.FillDescription2(System.UInt32,System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsObjectBrowserDescription3)">
      <summary>Asks the list item to provide description text to be used in the object browser.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="grfOptions">[in] Specifies description options. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSOBJDESCOPTIONS" /> enumeration.</param>
      <param name="pobDesc">[in] Specifies a <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsObjectBrowserDescription3" /> interface.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetBrowseObject(System.UInt32,System.Object@)">
      <summary>Returns a pointer to the property browse IDispatch for the given list item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index"></param>
      <param name="ppdispBrowseObj">[out] Pointer to an IDispatch object that is used to populate the Properties window.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetCapabilities2(System.UInt32@)">
      <summary>Returns an object list's capabilities.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pgrfCapabilities">[out] Specifies an object list's capabilities. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_LISTCAPABILITIES" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetCategoryField2(System.UInt32,System.Int32,System.UInt32@)">
      <summary>Returns the value for the specified category for the given list item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="Category">[in] Specifies the category of interest. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.LIB_CATEGORY" /> enumeration.</param>
      <param name="pfCatField">[out] Pointer to a variable holding the value returned.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetClipboardFormat(System.UInt32,System.UInt32,Microsoft.VisualStudio.OLE.Interop.FORMATETC[],Microsoft.VisualStudio.OLE.Interop.STGMEDIUM[])">
      <summary>Asks the given list item to renders a specific clipboard format that it supports.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="grfFlags">[in] Specifies multi-selection. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSOBJCFFLAGS" /> enumeration.</param>
      <param name="pFormatetc">[in] Pointer to a <see cref="T:Microsoft.VisualStudio.OLE.Interop.FORMATETC" /> structure containing clipboard format information.</param>
      <param name="pMedium">[in] Pointer to a <see cref="T:Microsoft.VisualStudio.OLE.Interop.STGMEDIUM" /> structure indicating the data transfer medium.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetContextMenu(System.UInt32,System.Guid@,System.Int32@,Microsoft.VisualStudio.OLE.Interop.IOleCommandTarget@)">
      <summary>Allows the list to provide a different context menu and IOleCommandTarget for the given list item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="pclsidActive">[out] Specifies the CLSID of the menu group containing your menu.</param>
      <param name="pnMenuId">[out] Pointer to an integer containing the menu id.</param>
      <param name="ppCmdTrgtActive">[out] Pointer to the list's or the library's IOleCommandTarget interface.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetDisplayData(System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSTREEDISPLAYDATA[])">
      <summary>Retrieves data to draw the requested tree list item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the node of interest.</param>
      <param name="pData">[out] Pointer to a <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSTREEDISPLAYDATA" /> structure containing the display data.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetExpandable(System.UInt32,System.Int32@)">
      <summary>Method information not provided. Return <see cref="F:Microsoft.VisualStudio.VSConstants.E_NOTIMPL" />.</summary>
      <param name="index">Do not use.</param>
      <param name="pfExpandable">Do not use.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetExpandable3(System.UInt32,System.UInt32,System.Int32@)">
      <summary>Returns a flag indicating whether the given list item is expandable.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="ListTypeExcluded">[in] Specifies the list types to be excluded. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_LISTTYPE" /> enumeration. This is primarily to remove LLT_MEMBERS from consideration in object browser, where they are shown in a separate pane.</param>
      <param name="pfExpandable">[out] Pointer to a flag indicating expandability.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetExpandedList(System.UInt32,System.Int32@,Microsoft.VisualStudio.Shell.Interop.IVsLiteTreeList@)">
      <summary>Expands a tree list node.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the child node of the current tree list to be expanded.</param>
      <param name="pfCanRecurse">[out] Pointer to a flag indicating that the tree list can recurse.</param>
      <param name="pptlNode">[out] Pointer to the selected node's <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsLiteTreeList" /> interface.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetExtendedClipboardVariant(System.UInt32,System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSOBJCLIPFORMAT[],System.Object@)">
      <summary>Asks the given list item to renders a specific clipboard format as a variant.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="grfFlags">[in] Specifies multi-selection. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSOBJCFFLAGS" /> enumeration.</param>
      <param name="pcfFormat">[in] Specifies a <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBJCLIPFORMAT" /> structure defining the format requested.</param>
      <param name="pvarFormat">[out] Specifies a pointer to a variant where you render the data. The environment frees the variant when it is done with it.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetFlags(System.UInt32@)">
      <summary>Returns the attributes of the current tree list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pFlags">[out] Pointer to a variable indicating attributes of the current tree list. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSTREEFLAGS" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetItemCount(System.UInt32@)">
      <summary>Returns the number of items in the current tree list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pCount">[out] Pointer to the count of the tree list items.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetList2(System.UInt32,System.UInt32,System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2[],Microsoft.VisualStudio.Shell.Interop.IVsObjectList2@)">
      <summary>Returns a child <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2" /> for the specified category.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="ListType">[in] Specifies the type of list being requested. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_LISTTYPE" /> enumeration.</param>
      <param name="flags">[in] Specifies the flags that control the request for object list information. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_LISTFLAGS" /> enumeration.</param>
      <param name="pobSrch">[in] Unused. Should be ignored.</param>
      <param name="ppIVsObjectList2">[out] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2" /> interface of the returned child list.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetListChanges(System.UInt32@,Microsoft.VisualStudio.Shell.Interop.VSTREELISTITEMCHANGE[])">
      <summary>Returns changes that have occurred in a tree list. For future use only. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pcChanges">[in, out] On input, the size of the <paramref name="prgListChanges" /> array. On output, pointer to a count of changes.</param>
      <param name="prgListChanges">[in] Pointer to an array that receives any changes that have been made to the list.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetMultipleSourceItems(System.UInt32,System.UInt32,System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSITEMSELECTION[])">
      <summary>Returns the ItemID corresponding to source files for the given list item if more than one.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="grfGSI">[in] Flag providing information about how the selected items should be returned. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSGSIFLAGS" /> enumeration.</param>
      <param name="cItems">[in] The number of items returned in <paramref name="rgItemSel" />.</param>
      <param name="rgItemSel">[out] Array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSITEMSELECTION" /> structures that contain an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> pointer and item identifier for each selected item.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetNavigationInfo2(System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSOBNAVIGATIONINFO3[])">
      <summary>Fills the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBNAVIGATIONINFO2" /> structure for the given list item allowing the list to navigate back to it through <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.LocateNavigationInfo2(Microsoft.VisualStudio.Shell.Interop.VSOBNAVIGATIONINFO3[],Microsoft.VisualStudio.Shell.Interop.VSOBNAVNAMEINFONODE2[],System.Int32,System.Int32@,System.UInt32@)" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="pobNav">[in, out] Specifies navigation information. Values are placed in a <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBNAVIGATIONINFO2" /> structure.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetNavInfo(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsNavInfo@)">
      <summary>Reserved for future use.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] The index of the item for which to get navigation information.</param>
      <param name="ppNavInfo">[out] Returns an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo" /> object that contains the requested information.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetNavInfoNode(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsNavInfoNode@)">
      <summary>Reserved for future use.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] The index of the item for which to get navigation information.</param>
      <param name="ppNavInfoNode">[out] Returns an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfoNode" /> object that contains the requested information.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetProperty(System.UInt32,System.Int32,System.Object@)">
      <summary>Returns the specified property for the specified list item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] The index of the item for which to get a property.</param>
      <param name="propid">[in] A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSOBJLISTELEMPROPID" /> enumeration specifying the property to get.</param>
      <param name="pvar">[out] Returns a VARIANT object containing the requested value.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetSourceContext(System.UInt32,System.IntPtr,System.UInt32@)">
      <summary>Returns a source filename and line number for the given list item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="pszFilename">[out] Pointer to a null-terminated string containing the file name. You must allocate this buffer and free it on the list's final Release, but you can reuse this buffer for multiple calls to this method.</param>
      <param name="pulLineNum">[out] Specifies a line number.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetText(System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSTREETEXTOPTIONS,System.String@)">
      <summary>Returns a pointer to the text representations for the requested tree list item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the zero based index of the item of interest.</param>
      <param name="tto">[in] Specifies the text type being requested. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSTREETEXTOPTIONS" /> enumeration.</param>
      <param name="ppszText">[out] Pointer to a text string from the specified tree list item. Implementers must allocate this string and keep the pointer valid as per the remarks below.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetTipText(System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSTREETOOLTIPTYPE,System.String@)">
      <summary>Returns a pointer to the tool tip text for the requested tree list item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the node of interest.</param>
      <param name="eTipType">[in] Specifies the type of tool tip text. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSTREETOOLTIPTYPE" /> enumeration.</param>
      <param name="ppszText">[out] Pointer to a text string containing the tree list item's tip text.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetUserContext(System.UInt32,System.Object@)">
      <summary>Returns the user context object for the given list item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="ppunkUserCtx">[out] Pointer to a context bag returned as an IUnknown interface.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GoToSource(System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSOBJGOTOSRCTYPE)">
      <summary>Navigates to the source for the given list item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="SrcType">[in] Specifies the source type. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBJGOTOSRCTYPE" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.LocateExpandedList(Microsoft.VisualStudio.Shell.Interop.IVsLiteTreeList,System.UInt32@)">
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ExpandedList">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsLiteTreeList" /> interface that specifies an expanded list.</param>
      <param name="iIndex">[out] Pointer to an integer containing the index of the specified tree list.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.LocateNavigationInfo2(Microsoft.VisualStudio.Shell.Interop.VSOBNAVIGATIONINFO3[],Microsoft.VisualStudio.Shell.Interop.VSOBNAVNAMEINFONODE2[],System.Int32,System.Int32@,System.UInt32@)">
      <summary>Returns the index of the list item corresponding to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBNAVIGATIONINFO2" /> structure.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pobNav">[in] Specifies navigation information. Values are in a <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBNAVIGATIONINFO2" /> structure.</param>
      <param name="pobName">[in] Specifies the name of the node of interest. Values are in a <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBNAVNAMEINFONODE" /> structure.</param>
      <param name="fDontUpdate">[in] Flag indicating that no update should be made.</param>
      <param name="pfMatchedName">[out] Pointer to a flag indicating a matched name was found.</param>
      <param name="pIndex">[out] Pointer to the index of the located item.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.LocateNavInfoNode(Microsoft.VisualStudio.Shell.Interop.IVsNavInfoNode,System.UInt32@)">
      <summary>Reserved for future use.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pNavInfoNode">[in] An <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfoNode" /> object representing the navigation information for a node.</param>
      <param name="pulIndex">[out] Returns the index of the list item that corresponds to the specified navigation node.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.OnClose(Microsoft.VisualStudio.Shell.Interop.VSTREECLOSEACTIONS[])">
      <summary>Notifies the current tree list that it is being closed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ptca">[out] Specifies to the tree view the action to take when closing this tree list. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSTREECLOSEACTIONS" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.QueryDragDrop(System.UInt32,Microsoft.VisualStudio.OLE.Interop.IDataObject,System.UInt32,System.UInt32@)">
      <summary>Returns a flag indicating whether the given list item supports a drag-and-drop operation.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="pDataObject">[in] Pointer to an IDataObject being dropped.</param>
      <param name="grfKeyState">[in] Current state of the keyboard and the mouse modifier keys.</param>
      <param name="pdwEffect">[in, out] On input, the effect being requested. On output, the effect that your object list allows.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.ShowHelp(System.UInt32)">
      <summary>Allows the list to display help for the given list item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.ToggleState(System.UInt32,System.UInt32@)">
      <summary>Tells the requested tree item to toggle its checked state if it has check boxes.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the tree list item of interest.</param>
      <param name="ptscr">[out] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSTREESTATECHANGEREFRESH" /> value.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.UpdateCounter(System.UInt32@,System.UInt32@)">
      <summary>Returns the current change counter for the tree list, and is used to indicate that the list contents have changed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pCurUpdate">[out] Pointer to the update counter of the current tree list.</param>
      <param name="pgrfChanges">[out] Specifies changes that have occurred. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSTREEITEMCHANGESMASK" /> enumeration.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsObjectManager2">
      <summary>Used by a VSPackage to register and unregister the symbol libraries with the Visual Studio object manager and create component sets that can be browsed. To obtain a reference to the Visual Studio object manager, call global service provider which is passed to you by the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsPackage.SetSite(Microsoft.VisualStudio.OLE.Interop.IServiceProvider)" /> method. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectManager2.CreateCombinedBrowseComponentSet(Microsoft.VisualStudio.Shell.Interop.IVsCombinedBrowseComponentSet@)">
      <summary>Creates an empty component set which cam be manually populated with the components from simple sets and removes duplicate components. The component set can be used by a library to present project references in the Object Browser.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppCombinedSet">The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsCombinedBrowseComponentSet" /> represents an empty component set, which can be populated with the symbols used in the Visual Studio symbol browsing tool such as Class View and Object Browser.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectManager2.CreateProjectReferenceSet(System.Object,Microsoft.VisualStudio.Shell.Interop.IVsSimpleBrowseComponentSet@)">
      <summary>Creates a simple component set which is automatically populated and synchronized with Visual Studio project references. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pProject">An object that implements <see cref="T:VSLangProj.VSProject" />.</param>
      <param name="ppSet">A component set populated with Visual Studio project references.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectManager2.CreateSimpleBrowseComponentSet(System.UInt32,System.Guid[],System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsSimpleBrowseComponentSet@)">
      <summary>Creates an empty component set which can be manually populated with components that can be browsed. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="Type">One of the <see cref="T:Microsoft.VisualStudio.Shell.Interop._BROWSE_COMPONENT_SET_TYPE" /> values. </param>
      <param name="rgguidLibs">An array of <see cref="T:System.Guid" /> guids that identify the symbol libraries If <paramref name="Type" /> is set to <see cref="F:Microsoft.VisualStudio.Shell.Interop._BROWSE_COMPONENT_SET_TYPE.BCST_INCLUDE_LIBRARIES" />, the component set uses the libraries specified in the guid array to browse the components added to the set. The <paramref name="rgguidLibs" /> cannot be a null in this case.If <paramref name="Type" /> is set to <see cref="F:Microsoft.VisualStudio.Shell.Interop._BROWSE_COMPONENT_SET_TYPE.BCST_EXCLUDE_LIBRARIES" />, the component set excludes the libraries specified in the guid array from browsing the components added to the set. If the <paramref name="rgguidLibs" /> is null, the set does not exclude any libraries.</param>
      <param name="ulcLibs">Number of elements in the guid array.</param>
      <param name="ppSet">An empty set that can be populated with components that can be browsed. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectManager2.EnumLibraries(Microsoft.VisualStudio.Shell.Interop.IVsEnumLibraries2@)">
      <summary>Retrieves a list of all symbol libraries currently registered with the Visual Studio object manager.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppEnum">[out] The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsEnumLibraries2" /> that represents an enumeration of all currently registered symbol libraries.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectManager2.FindLibrary(System.Guid@,Microsoft.VisualStudio.Shell.Interop.IVsLibrary2@)">
      <summary>Finds a specific symbol library registered with the with the Visual Studio object manager.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="guidLibrary">[in] The <see cref="T:System.Guid" /> that identifies the registered library. For more information, see vsshell80.idl, VS Browse Libraries section. </param>
      <param name="ppLib">[out] The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsLibrary2" /> that represents requested library. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectManager2.GetListAndIndex(Microsoft.VisualStudio.Shell.Interop.IVsNavInfo,System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsObjectList2@,System.UInt32@)">
      <summary>Finds an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2" /> and an index of a symbol defined by <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pNavInfo">The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo" /> that identifies a symbol in the hierarchical tree of symbols.</param>
      <param name="dwFlags">A single value or a combination of the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_LISTFLAGS" /> values. Specifies a symbol browsing tool, such as Class View or Object Browser</param>
      <param name="ppList">The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2" /> that provides information about the symbol.</param>
      <param name="pIndex">The position of the symbol in the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2" /> zero-based list. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectManager2.ParseDataObject(Microsoft.VisualStudio.OLE.Interop.IDataObject,Microsoft.VisualStudio.Shell.Interop.IVsSelectedSymbols@)">
      <summary>Parses the data object created by Class View during drag-drop or copy operations.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pIDataObject">The IDataObject:IUnknown that contains row data provided by Class View from drag-drop or copy operations. </param>
      <param name="ppSymbols">The symbols currently selected in Class View or Object Browser tools.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectManager2.RegisterLibrary(Microsoft.VisualStudio.Shell.Interop.IVsLibrary2,System.UInt32@)">
      <summary>Registers a symbol library with the Visual Studio object manager.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pLib">[in] The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsLibrary2" /> that represents a library registered with the object manager.</param>
      <param name="pdwCookie">[out] The Cookie that identifies the registered library.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectManager2.RegisterSimpleLibrary(Microsoft.VisualStudio.Shell.Interop.IVsSimpleLibrary2,System.UInt32@)">
      <summary>Registers a managed code symbol library with the Visual Studio object manager.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pLib">[in] The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSimpleLibrary2" /> that represents a managed code library.</param>
      <param name="pdwCookie">[out]The cookie that identifies the registered library.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectManager2.UnregisterLibrary(System.UInt32)">
      <summary>Unregisters a symbol library.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwCookie">[in] The cookie that identifies the library. The cookie is assigned during the library registration.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsOpenProjectOrSolutionDlg">
      <summary>Opens a Solution or Project using the standard open dialog boxes.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsOpenProjectOrSolutionDlg.OpenProjectOrSolutionViaDlg(System.UInt32,System.String,System.String,System.Guid@)">
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code. </returns>
      <param name="grfProjSlnDlgFlags">[in] </param>
      <param name="pwzStartDirectory">[in] Start directory.</param>
      <param name="pwzDialogTitle">[in] Dialog box title. Leave null for default title.</param>
      <param name="rguidProjectType">[in] Specifies the project type to use with <see cref="F:Microsoft.VisualStudio.Shell.Interop.__VSPROJSLNDLGFLAGS.PSDF_DirectoryPicker" />.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsOutputGroup2">
      <summary>Allows projects to group outputs according to usage.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsOutputGroup2.get_CanonicalName(System.String@)">
      <summary>Returns the canonical name of the output group.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrCanonicalName">[out] Pointer to the canonical name of the output group.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsOutputGroup2.get_DeployDependencies(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsDeployDependency[],System.UInt32[])">
      <summary>Provides access to one or more deployment dependencies.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="celt">[in] Number of requested deployment dependencies.</param>
      <param name="rgpdpd">[in, out] On input, pointer to an interface array of size <paramref name="celt" />. On output, pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDeployDependency" /> interface array that contains either the number of interfaces specified by <paramref name="celt" /> or the number available.</param>
      <param name="pcActual">[out, optional] Pointer to the actual number of dependencies returned in <paramref name="pgpdpd" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsOutputGroup2.get_Description(System.String@)">
      <summary>Returns the description of an output group.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrDescription">[out] Pointer to the description of an output group.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsOutputGroup2.get_DisplayName(System.String@)">
      <summary>Returns the display name of the output group.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrDisplayName">[out] Pointer to the display name.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsOutputGroup2.get_KeyOutput(System.String@)">
      <summary>Returns the canonical name of the key output group.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrCanonicalName">[out] Pointer to the canonical name of the key output group.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsOutputGroup2.get_KeyOutputObject(Microsoft.VisualStudio.Shell.Interop.IVsOutput2@)">
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppKeyOutput">[out] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsOutput2" /> interface.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsOutputGroup2.get_Outputs(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsOutput2[],System.UInt32[])">
      <summary>Returns an array of pointers to <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsOutput2" /> interfaces providing access to a configuration's output items.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="celt">[in] Number of output items requested.</param>
      <param name="rgpcfg">[in, out] On input, a pointer to an array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsOutput2" /> interfaces for the requested output items. On output, an array containing the number of entries specified by <paramref name="celt" />.</param>
      <param name="pcActual">[out, optional] Pointer to the number of actual outputs.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsOutputGroup2.get_ProjectCfg(Microsoft.VisualStudio.Shell.Interop.IVsProjectCfg2@)">
      <summary>Returns a pointer to the configuration's <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProjectCfg2" /> interface.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppIVsProjectCfg2">[out] Back pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProjectCfg2" /> interface for the requested project configuration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsOutputGroup2.get_Property(System.String,System.Object@)">
      <summary>Gets the value of a property.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszProperty">[in] The name of the property to get.</param>
      <param name="pvar">[out] Pointer to the value of the property.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsOutputWindow2">
      <summary>Provides information about the active pane in of the OutputWindow. Extends, but does not inherit from, <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsOutputWindow" />. Implemented by the environment. You can get an instance of the interface by querying <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsOutputWindow" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsOutputWindow2.GetActivePaneGUID(System.Guid@)">
      <summary>Returns the GUID of the active pane.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pguidPane">[out] Pointer to the GUID of the active pane. Set to GUID_NULL if there is no active pane.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsPackageDynamicToolOwnerEx">
      <summary>Enables dynamic control of ToolWindow visibility. Extends, but does not inherit from, <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsPackageDynamicToolOwner" />. This interface can control how many instances are shown.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPackageDynamicToolOwnerEx.QueryShowTool(System.Guid@,System.UInt32,System.Int32@)">
      <summary>Enables the Package to dynamically control whether to show or hide the tool window. The environment calls this method when the user switches which window view set (or mode) is active, e.g. Design, Debugging, FullScreen, and so on.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="rguidPersistenceSlot">[in] The GUID of the window.</param>
      <param name="dwId">[in] The window identifier.</param>
      <param name="pfShowTool">[out] Pointer to a Boolean value. Set to true if the tool window is Active. Otherwise set to false.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsParentProject2">
      <summary>Creates nested projects. You can get an instance of the interface by querying an instance of <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsParentProject2.AddNestedSolution(System.UInt32,System.UInt32,System.String)">
      <summary>Enables addition of the contents of a solution, in the same that it's done through the user interface, to a project (for example, a solution folder).</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="itemidLoc">[In] The item ID (VSITEMID) of the item to add.</param>
      <param name="grfOpenOpts">[In] Bit flags specifying solution file options. Constructed using values from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSSLNOPENOPTIONS" /> enumeration.</param>
      <param name="pszFilename">[In] Pointer to a string containing the filename.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsParentProject2.CreateNestedProject(System.UInt32,System.Guid@,System.String,System.String,System.String,System.UInt32,System.Guid@,System.Guid@,System.IntPtr@)">
      <summary>Creates and adds a solution to a project.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="itemidLoc">[in] The item id (VSITEMID) of the item to add.</param>
      <param name="rguidProjectType">[in] The GUID of the project to add.</param>
      <param name="lpszMoniker">[in] String containing the moniker of the project item.</param>
      <param name="lpszLocation">[in] String containing the full path to the project.</param>
      <param name="lpszName">[in] String containing project name.</param>
      <param name="grfCreateFlags">[in] Bit flags specifying creation options for the project. Constructed using values from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSCREATEPROJFLAGS" /> enumeration.</param>
      <param name="rguidProjectID">[in] The IID of the interface to create. Use <see cref="F:Microsoft.VisualStudio.VSConstants.IID_IUnknown" /> for a generic <see cref="T:IUnknown" /> interface. You can also use <see cref="F:Microsoft.TeamFoundation.Common.VsConstants.IID_IVsHierarchy" /> to get back a hierarchy interface.</param>
      <param name="iidProject">[in] The item id (VSITEMID) of the item to add.</param>
      <param name="ppProject">[out] Pointer to the created interface for the project.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsParseCommandLine2">
      <summary>Parses command line arguments for implementers of <see cref="T:Microsoft.VisualStudio.OLE.Interop.IOleCommandTarget" />. Extends but does not inherit from <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsParseCommandLine" />. Adds a method to support auto completion. You can get an instance of the interface from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsParseCommandLine" /> (SID_SVsParseCommandLine) service.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsParseCommandLine2.GetACParamOrSwitch(System.Int32@,System.Int32@,System.Int32@,System.String@,System.String@)">
      <summary>Retrieves an auto completion command line item or switch.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="piACIndex">[out] Pointer to an index indicating whether or not there is an auto completion item. Set to PCL_AUTO_COMMANDS if there are auto completion items.</param>
      <param name="piACStart">[out] Pointer to the beginning of the auto completion item in the command line buffer.</param>
      <param name="pcchACLength">[out] Pointer to the length of the auto completion item.</param>
      <param name="pbstrCurSwitch">[out] Pointer to a string containing the current switch.</param>
      <param name="pbstrACParam">[out] Pointer to a string containing the current auto completion parameter.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsPathVariableResolver">
      <summary>Encodes or decodes file paths using Visual Studio-specific variables for common path elements. This supports storing file paths in a machine independent format with the vssettings files. You can get an instance of the interface from the SVsPathVariableResolver (SID_SVsPathVariableResolver) service.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPathVariableResolver.EncodePath(System.String,System.UInt32,System.String@)">
      <summary>Encodes a file path by replacing the installation directory and the user application data directory with the strings %VS_INSTALL_DIRECTORY% and %USER_APPDATA% respectively.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="strPath">[in] String containing the path to encode.</param>
      <param name="dwFlags">[in] Encoding option flag. A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSPROFILEPATHRESOLVERFLAGS" /> enumeration.</param>
      <param name="pbstrEncodedPath">[out] A pointer to a string containing the encoded path.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPathVariableResolver.ResolvePath(System.String,System.UInt32,System.String@)">
      <summary>Resolves (decodes) a file path encoded with <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsPathVariableResolver.EncodePath(System.String,System.UInt32,System.String@)" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="strEncodedPath">[in] String containing the encoded path. </param>
      <param name="dwFlags">[in] Encoding option flag. A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSPROFILEPATHRESOLVERFLAGS" /> enumeration.</param>
      <param name="pbstrPath">[out] Pointer to a string containing the resolved path.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsPersistDocData3">
      <summary>Tells the data document (object implementing <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsPersistDocData" />) whether or not to release its storage for closing or reloading. Extends, but does not inherit from, <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsPersistDocData" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPersistDocData3.HandsOffDocDataStorage">
      <summary>Tells the data document (object implementing <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsPersistDocData" />) to release any hold it has on its storage (i.e. release any file system locks on its file).</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code. </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPersistDocData3.HandsOnDocDataStorage">
      <summary>Enables the data document to place locks on its storage.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsPersistSolutionProps2">
      <summary>Supports saving solution properties in a solution (.sln) file by providing a method called when solution loading fails. Implemented by the package. Extends but does not inherit from <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsPersistSolutionProps" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPersistSolutionProps2.OnSolutionLoadFailure(System.String)">
      <summary>Method for the package to call when a solution fails to load.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszKey">[in] Pointer to a string containing the key used when creating the solution.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesEngine">
      <summary>Enables previewing before applying changes made by a given engine. Implemented by the refactoring engine.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesEngine.ApplyChanges">
      <summary>Applies changes.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesEngine.GetConfirmation(System.String@)">
      <summary>Gets the dialog confirmation text.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrConfirmation">[out] The text of the dialog confirmation.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesEngine.GetDescription(System.String@)">
      <summary>Gets the dialog description text.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrDescription">[out]</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesEngine.GetHelpContext(System.String@)">
      <summary>Gets the dialog help context.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code. </returns>
      <param name="pbstrHelpContext">[out] The dialog help context.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesEngine.GetRootChangesList(System.Object@)">
      <summary>Gets the root changes list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code. </returns>
      <param name="ppIUnknownPreviewChangesList">[out] Interface to the root changes list.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesEngine.GetTextViewDescription(System.String@)">
      <summary>Gets the dialog text view description.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code. </returns>
      <param name="pbstrTextViewDescription">[out] The text view description.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesEngine.GetTitle(System.String@)">
      <summary>Gets the dialog title text.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code. </returns>
      <param name="pbstrTitle">[out] Title text of the dialog.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesEngine.GetWarning(System.String@,System.Int32@)">
      <summary>Gets the dialog warning text and level.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code. </returns>
      <param name="pbstrWarning">[out] The warning text.</param>
      <param name="ppcwlWarningLevel">[out] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.__PREVIEWCHANGESWARNINGLEVEL" /> value specifying the warning level.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesList">
      <summary>Represents a list of items in the changes tree of the Preview Changes tool window. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesList.GetDisplayData(System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSTREEDISPLAYDATA[])">
      <summary>Returns display data for the specified item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index"></param>
      <param name="pData">[in, out] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSTREEDISPLAYDATA" /> structure that is filled in with the requested data.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesList.GetExpandable(System.UInt32,System.Int32@)">
      <summary>Determines if the specified item can be expanded.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index"></param>
      <param name="pfExpandable">[out] Returns nonzero (TRUE) if the item can be expanded; otherwise, returns zero (FALSE).</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesList.GetExpandedList(System.UInt32,System.Int32@,Microsoft.VisualStudio.Shell.Interop.IVsLiteTreeList@)">
      <summary>Returns the child list of the specified item that has been expanded in the tree view.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index"></param>
      <param name="pfCanRecurse">[out] Returns nonzero (TRUE) if the child list can be recursively called to access its children; otherwise, returns zero (FALSE).</param>
      <param name="pptlNode">[out] Returns an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsLiteTreeList" /> object that contains the requested children elements.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesList.GetFlags(System.UInt32@)">
      <summary>Returns a set of flags the describes the preview list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pFlags">[out] Returns a combination of values from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSTREEFLAGS" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesList.GetItemCount(System.UInt32@)">
      <summary>Returns the number of items in the preview list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pCount">[out] Returns the number of items in the preview list.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesList.GetListChanges(System.UInt32@,Microsoft.VisualStudio.Shell.Interop.VSTREELISTITEMCHANGE[])">
      <summary>Returns a list of changes made to the items in the preview list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pcChanges">[in, out] If <paramref name="prgListChanges" /> parameter is a null value, this parameter returns the number of changes in the list. If <paramref name="prgListChanges" /> is not a null value, this parameter specifies the number of changes to return.</param>
      <param name="prgListChanges">[in, out] An array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSTREELISTITEMCHANGE" /> structures that describe the change of each item in the preview list. This parameter can be a null value, in which case the number of changes available is returned in the <paramref name="pcChanges" /> parameter.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesList.GetText(System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSTREETEXTOPTIONS,System.String@)">
      <summary>Returns the specified text for the specified item in the preview list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index"></param>
      <param name="tto"></param>
      <param name="ppszText">[out] Returns a string containing the requested text.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesList.GetTipText(System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSTREETOOLTIPTYPE,System.String@)">
      <summary>Returns the ToolTip text for the specified item in the preview list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index"></param>
      <param name="eTipType">[in] A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSTREETOOLTIPTYPE" /> enumeration specifying the kind of ToolTip text to return.</param>
      <param name="ppszText">[out] Returns a string containing the ToolTip text.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesList.LocateExpandedList(Microsoft.VisualStudio.Shell.Interop.IVsLiteTreeList,System.UInt32@)">
      <summary>Given a child list, locate its parent item in the preview list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ExpandedList">[in] An <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsLiteTreeList" /> object that contains the child list.</param>
      <param name="iIndex">[out] Returns the index of the item that is the parent of the child list.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesList.OnClose(Microsoft.VisualStudio.Shell.Interop.VSTREECLOSEACTIONS[])">
      <summary>Called when this preview list is closed (unexpanded).</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ptca"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesList.OnRequestSource(System.UInt32,System.Object)">
      <summary>Loads the source for the specified preview item and displays it in the given text view.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index"></param>
      <param name="pIUnknownTextView">[in] An IUnknown object that represents the text view. This is typically an <see cref="T:Microsoft.VisualStudio.TextManager.Interop.IVsTextView" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesList.ToggleState(System.UInt32,System.UInt32@)">
      <summary>Toggles the checked state of the specified item in the preview list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index"></param>
      <param name="ptscr"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesList.UpdateCounter(System.UInt32@,System.UInt32@)">
      <summary>Updates the current change counter and returns whether any changes have been made to the preview list and if so, what kind of changes.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pCurUpdate">[out] Returns the current update counter.</param>
      <param name="pgrfChanges">[out] Returns a combination of values from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSTREEITEMCHANGESMASK" /> enumeration specifying what kind of changes have been made since the last time this method was called.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesService">
      <summary>Displays the PreviewChanges dialog box used in refactoring code. You can get an instance of the interface from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsPreviewChangesService" /> (SID_SVsPreviewChangesService) service.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesService.PreviewChanges(Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesEngine)">
      <summary>Preview the refactoring changes by displaying the Preview Changes dialog.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pIVsPreviewChangesEngine">[In] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesEngine" /> interface.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsPrioritizedSolutionEvents">
      <summary>Defines high priority event methods for a solution.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPrioritizedSolutionEvents.PrioritizedOnAfterAsynchOpenProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.Int32)">
      <summary>Defines a method called after the asynchronous opening of a project and before <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents4.OnAfterAsynchOpenProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.Int32)" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code. </returns>
      <param name="pHierarchy">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface of the project.</param>
      <param name="fAdded">[in] Boolean. Set to true if the open added the project.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPrioritizedSolutionEvents.PrioritizedOnAfterChangeProjectParent(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)">
      <summary>Defines a method called after the parent of a project changes and before <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents4.OnAfterChangeProjectParent(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHierarchy">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface of the project.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPrioritizedSolutionEvents.PrioritizedOnAfterCloseSolution(System.Object)">
      <summary>Defines a method called after a solution closes and before <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents2.OnAfterCloseSolution(System.Object)" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pUnkReserved">[in] Reserved for future use.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPrioritizedSolutionEvents.PrioritizedOnAfterClosingChildren(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)">
      <summary>Defines a method called after closing the children of a project and before <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents3.OnAfterClosingChildren(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHierarchy">[in] Pointer to the IVsHierarchy interface for the project.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPrioritizedSolutionEvents.PrioritizedOnAfterLoadProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)">
      <summary>Defines a method called after loading a project but before <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents.OnAfterLoadProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pStubHierarchy">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface of the placeholder hierarchy for the unloaded project.</param>
      <param name="pRealHierarchy">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface of the project that was loaded.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPrioritizedSolutionEvents.PrioritizedOnAfterMergeSolution(System.Object)">
      <summary>Defines a method called after merging solutions but before <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents2.OnAfterMergeSolution(System.Object)" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pUnkReserved">[in] Reserved for future use.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPrioritizedSolutionEvents.PrioritizedOnAfterOpeningChildren(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)">
      <summary>Defines a method called after opening children of the project but before calling <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents3.OnAfterOpeningChildren(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHierarchy">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface of the project.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPrioritizedSolutionEvents.PrioritizedOnAfterOpenProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.Int32)">
      <summary>Defines a method called after opening a project but before calling <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents.OnAfterOpenProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.Int32)" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHierarchy">[in] Pointer to the IVsHierarchy interface of the project.</param>
      <param name="fAdded">[in] Boolean. Set to true if the project was added to the solution.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPrioritizedSolutionEvents.PrioritizedOnAfterOpenSolution(System.Object,System.Int32)">
      <summary>Defines a method called after opening a solution but before <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents.OnAfterOpenSolution(System.Object,System.Int32)" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pUnkReserved">[in] Reserved for future use.</param>
      <param name="fNewSolution">[in] Boolean. Set to true if this is a new solution.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPrioritizedSolutionEvents.PrioritizedOnAfterRenameProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)">
      <summary>Defines a method called after renaming a project and before calling <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolution.OnAfterRenameProject(Microsoft.VisualStudio.Shell.Interop.IVsProject,System.String,System.String,System.UInt32)" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHierarchy">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface of the project.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPrioritizedSolutionEvents.PrioritizedOnBeforeCloseProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.Int32)">
      <summary>Defines a method called after <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents.OnBeforeCloseProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.Int32)" /> and before closing a project.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHierarchy">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface of the project.</param>
      <param name="fRemoved">[in] Boolean. Set to true if the project was removed from the solution.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPrioritizedSolutionEvents.PrioritizedOnBeforeCloseSolution(System.Object)">
      <summary>Defines a method called after <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents.OnBeforeCloseSolution(System.Object)" /> and before closing the solution.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pUnkReserved">[in] Reserved for future use.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPrioritizedSolutionEvents.PrioritizedOnBeforeClosingChildren(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)">
      <summary>Defines a method called after <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents3.OnBeforeClosingChildren(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)" /> and before closing the children of a project.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHierarchy">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface of the project.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPrioritizedSolutionEvents.PrioritizedOnBeforeOpeningChildren(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)">
      <summary>Defines a method called after <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents3.OnBeforeOpeningChildren(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)" /> but before opening the children of a project.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHierarchy">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface of the project.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPrioritizedSolutionEvents.PrioritizedOnBeforeUnloadProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)">
      <summary>Defines a method called after <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents.OnBeforeUnloadProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)" /> but before unloading the project.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pRealHierarchy">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface of the project that was loaded.</param>
      <param name="pStubHierarchy">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface of the placeholder hierarchy for the unloaded project.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsProfferCommands3">
      <summary>Adds, finds, renames, and removes commands from the user interface.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfferCommands3.AddCommandBar(System.String,System.UInt32,System.Object,System.UInt32,System.Object@)">
      <summary>Adds a command bar to the user interface.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszCmdBarName">[in] The name of the command bar.</param>
      <param name="dwType">[in] A value from the <see cref="T:EnvDTE.vsCommandBarType" /> enumeration.</param>
      <param name="pCmdBarParent">[in] The parent of the command bar. Use null for a top-level command bar.</param>
      <param name="dwIndex">[in] Location (index) in which to insert the new command bar on the parent.</param>
      <param name="ppCmdBar">[out] The new command bar.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfferCommands3.AddCommandBarControl(System.String,System.Object,System.UInt32,System.UInt32,System.Object@)">
      <summary>Adds a control to a command bar.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszCmdNameCanonical">[in] The fully-qualified (canonical) name of the control to add.</param>
      <param name="pCmdBarParent">[in] The parent command bar.</param>
      <param name="dwIndex">[in] The index of the position to place the control.</param>
      <param name="dwCmdType">[in] A value from the <see cref="T:EnvDTE.vsCommandBarType" /> enumeration.</param>
      <param name="ppCmdBarCtrl">[out] The new control.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfferCommands3.AddNamedCommand(System.Guid@,System.Guid@,System.String,System.UInt32@,System.String,System.String,System.String,System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Guid[])">
      <summary>Adds a named command.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pguidPackage">[in] The package GUID. Use null for addins.</param>
      <param name="pguidCmdGroup">[in] The GUID for the group to receive the new command. Use GUID_Macro or GUID_AddIn defined in vbapkg.idl.</param>
      <param name="pszCmdNameCanonical">[in] The full name of the command.</param>
      <param name="pdwCmdId">[outThe ID for the new command.</param>
      <param name="pszCmdNameLocalized">[in] A localized version of the string. May be null.</param>
      <param name="pszBtnText">[in] The text to display on a button. Use null if the added command isn't a button.</param>
      <param name="pszCmdTooltip">[in] The ToolTip text to display. May be null.</param>
      <param name="pszSatelliteDLL">[in] The full path to a satellite DLL implementing the command. May be null.</param>
      <param name="dwBitmapResourceId">[in] The resource identifier for the icon to display for the command. Use zero (0) if there is no bitmap.</param>
      <param name="dwBitmapImageIndex">[in] The index of the bitmap within the bitmap file.</param>
      <param name="dwCmdFlagsDefault">[in] Use zero (0) for the default values to make the command active and visible.</param>
      <param name="cUIContexts">[in] The number of contexts pointed to by the <paramref name="rgguidUIContexts" /> parameter.</param>
      <param name="rgguidUIContexts">[in] An array of GUIDs for the user interface contexts indicating options for displaying the command. For more information, see the UIContext_ members of <see cref="T:Microsoft.VisualStudio.VSConstants" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfferCommands3.AddNamedCommand2(System.Guid@,System.Guid@,System.String,System.UInt32@,System.String,System.String,System.String,System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Guid[],System.UInt32)">
      <summary>Adds a named command. This version has a parameter that specifies a UI element.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pguidPackage">[in] The package GUID. Use null for addins.</param>
      <param name="pguidCmdGroup">[in] The GUID for the group to receive the new command. Use GUID_Macro or GUID_AddIn defined in vbapkg.idl.</param>
      <param name="pszCmdNameCanonical">[in] The full name of the command.</param>
      <param name="pdwCmdId">[outThe ID for the new command.</param>
      <param name="pszCmdNameLocalized">[in] A localized version of the string. May be null.</param>
      <param name="pszBtnText">[in] The text to display on a button. Use null if the added command isn't a button.</param>
      <param name="pszCmdTooltip">[in] The ToolTip text to display. May be null.</param>
      <param name="pszSatelliteDLL">[in] The full path to a satellite DLL implementing the command. May be null.</param>
      <param name="dwBitmapResourceId">[in] The resource identifier for the icon to display for the command. Use zero (0) if there is no bitmap.</param>
      <param name="dwBitmapImageIndex">[in] The index of the bitmap within the bitmap file.</param>
      <param name="dwCmdFlagsDefault">[in] Use zero (0) for the default values to make the command active and visible.</param>
      <param name="cUIContexts">[in] The number of contexts pointed to by the <paramref name="rgguidUIContexts" /> parameter.</param>
      <param name="rgguidUIContexts">[in] An array of GUIDs for the user interface contexts indicating options for displaying the command. For more information, see the UIContext_ members of <see cref="T:Microsoft.VisualStudio.VSConstants" />.</param>
      <param name="dwUIElementType">[in] Integer. A value from the <see cref="T:EnvDTE80.vsCommandControlType" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfferCommands3.FindCommandBar(System.Object,System.Guid@,System.UInt32,System.Object@)">
      <summary>Find the object implementing a specific command.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pToolbarSet">[in] The toolbar set to search. Use null to search the main (default) toolbar set.</param>
      <param name="pguidCmdGroup">[in] The GUID for the command group to search. Use GUID_Macro or GUID_AddIn defined in vbapkg.idl.</param>
      <param name="dwMenuId">[in] The id of the menu item corresponding to the command.</param>
      <param name="ppdispCmdBar">[out] The object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfferCommands3.RemoveCommandBar(System.Object)">
      <summary>Removes a command bar.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pCmdBar">[in] The command bar to remove.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfferCommands3.RemoveCommandBarControl(System.Object)">
      <summary>Remove a control from a command bar.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pCmdBarCtrl">[in] The control.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfferCommands3.RemoveNamedCommand(System.String)">
      <summary>Removes a named command.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszCmdNameCanonical">[in] The canonical (fully-qualified) name of the command to remove.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfferCommands3.RenameNamedCommand(System.String,System.String,System.String)">
      <summary>Renames a named command.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszCmdNameCanonical">[in] The canonical (fully-qualified) name of the command.</param>
      <param name="pszCmdNameCanonicalNew">[in] The new canonical name.</param>
      <param name="pszCmdNameLocalizedNew">[in] The new localized canonical name. May be null.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsProfileDataManager">
      <summary>Provides access to the profile manager and to programmatic control of settings. You can get an instance of the interface from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsProfileDataManager" /> (SID_SVsProfileDataManager) service.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileDataManager.AutoSaveAllSettings(Microsoft.VisualStudio.Shell.Interop.IVsSettingsErrorInformation@)">
      <summary>Saves, and then at intervals automatically saves, settings.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppsettingsErrorInformation">[out] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSettingsErrorInformation" /> interface reporting any errors. Set to null if there are no errors.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileDataManager.CheckUpdateTeamSettings(System.UInt32)">
      <summary>Checks and, if necessary, updates team profile settings.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwFlags">[in] A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSPROFILETEAMSETTINGSFLAGS" /> enumeration indicating whether to check for an update or always to update.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileDataManager.ExportAllSettings(System.String,Microsoft.VisualStudio.Shell.Interop.IVsSettingsErrorInformation@)">
      <summary>Exports all settings to a file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrFilePath">[in] String containing the path and name of the file to use for saving the settings.</param>
      <param name="ppsettingsErrorInformation">[out] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSettingsErrorInformation" /> interface reporting any errors. Set to null if there are no errors.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileDataManager.ExportSettings(System.String,Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree,Microsoft.VisualStudio.Shell.Interop.IVsSettingsErrorInformation@)">
      <summary>Export settings to a file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrFilePath">[in] String containing the path and name of the file to use for exporting settings.</param>
      <param name="pSettingsTree">[in] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree" /> interface containing the profile settings information. Retrieved by <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileDataManager.GetSettingsForExport(Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree@)" />.</param>
      <param name="ppsettingsErrorInformation">[out] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSettingsErrorInformation" /> interface reporting any errors. Set to null if there are no errors.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileDataManager.GetDefaultSettingsLocation(System.String@)">
      <summary>Retrieves the location for the default settings file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrSettingsLocation">[out] Pointer to a string containing the full path to the default settings file.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileDataManager.GetSettingsFileExtension(System.String@)">
      <summary>Retrieves the extension of the settings file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrSettingsFileExtension">[out] Pointer to a string containing the extension of the settings file.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileDataManager.GetSettingsFiles(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsFileCollection@)">
      <summary>Retrieves one or more settings files.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="fileLocations">[in] Bit flags indicating which locations to check for settings files. Constructed from values in the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSPROFILELOCATIONS" /> enumeration.</param>
      <param name="ppCollection">[out] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsFileCollection" /> interface for the retrieved settings files.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileDataManager.GetSettingsForExport(Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree@)">
      <summary>Retrieves the settings information in a form ready for export.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppSettingsTree">[out] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree" /> interface containing the settings information.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileDataManager.GetUniqueExportFileName(System.UInt32,System.String@)">
      <summary>Retrieves a unique filename to use when saving Settings.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="flags">[in] Bit flags. Constructed using values from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSPROFILEGETFILENAME" /> enumeration.</param>
      <param name="pbstrExportFile">[out] Pointer to a string containing the path and name of the file.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileDataManager.ImportSettings(Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree,Microsoft.VisualStudio.Shell.Interop.IVsSettingsErrorInformation@)">
      <summary>Import settings from an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pSettingsTree">[in] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree" /> interface containing the profile settings information.</param>
      <param name="ppsettingsErrorInformation">[out] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSettingsErrorInformation" /> interface reporting any errors. Set to null if there are no errors.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileDataManager.LastResetPoint(System.String@)">
      <summary>Returns the path and name of the file most recently used to reset profile settings information. This is either the default settings file or the file the user most recently used to save settings.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrResetFilename">[out] Pointer to a string containing the path and filename of the file most recently used when resetting profile settings.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileDataManager.ReportTeamSettingsChanged(System.UInt32)">
      <summary>Determines which team settings changes are reported.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwFlags">[in] Bit flags indicating which changes to report. Constructed from values in the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSPROFILETEAMSETTINGSCHANGEDFLAGS" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileDataManager.ResetSettings(Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsFileInfo,Microsoft.VisualStudio.Shell.Interop.IVsSettingsErrorInformation@)">
      <summary>Resets settings values.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pFileInfo">[in] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsFileInfo" /> interface containing information about the settings file.</param>
      <param name="ppsettingsErrorInformation">[out] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSettingsErrorInformation" /> interface reporting any errors. Set to null if there are no errors.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileDataManager.ShowProfilesUI">
      <summary>Displays the UI for profile settings.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsFileCollection"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsFileCollection.AddBrowseFile(System.String,Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsFileInfo@)">
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrFilePath">[in]</param>
      <param name="ppFileInfo">[out]Adds a file to the file collection.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsFileCollection.GetCount(System.Int32@)">
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pCount">[out]</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsFileCollection.GetSettingsFile(System.Int32,Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsFileInfo@)">
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index"></param>
      <param name="ppFileInfo">[out]</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsFileInfo"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsFileInfo.GetDescription(System.String@)">
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrDescription">[out]</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsFileInfo.GetFileLocation(System.UInt32@)">
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pfileLocation">[out]</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsFileInfo.GetFilePath(System.String@)">
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrFilePath">[out]</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsFileInfo.GetFriendlyName(System.String@)">
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrFriendlyName">[out]</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsFileInfo.GetSettingsForImport(Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree@)">
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppSettingsTree">[out]</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree.AddChildTree(Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree)">
      <summary>Adds a specified tree as a child tree.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pChildTree">[in] Adds the given tree as a child tree.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree.FindChildTree(System.String,Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree@)">
      <summary>Finds a child tree.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrNameSearch">[in] The name of the tree to find.</param>
      <param name="ppChildTree">[out] An <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree" /> interface to the child tree.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree.GetAlternatePath(System.String@)">
      <summary>Gets the name of the parent node for a node's placeholder node.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrAlternatePath">[out] The name of the parent node for this node's placeholder node.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree.GetCategory(System.String@)">
      <summary>Gets the category of a tree.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrCategory">[out] The category of the tree.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree.GetChild(System.Int32,Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree@)">
      <summary>Gets a child tree.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[out] The location of the child tree.</param>
      <param name="ppChildTree">[out] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree" /> interface to the child tree.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree.GetChildCount(System.Int32@)">
      <summary>Gets the number of children.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pCount">[out] The number of children.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree.GetDescription(System.String@)">
      <summary>Gets the description of a node.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrDescription">[out] The description of the node.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree.GetDisplayName(System.String@)">
      <summary>Gets the display name of a node.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrName">[out] The name of the node.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree.GetEnabled(System.Int32@)">
      <summary>Specifies whether the tree is enabled.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pfEnabled">[out] A BOOL value; true if the tree is enabled.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree.GetEnabledChildCount(System.Int32@)">
      <summary>Gets the number of enabled child nodes.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pCount">[out] The number of child nodes.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree.GetFullPath(System.String@)">
      <summary>Gets the full path of a node.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrFullPath">[out] The full path of the node.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree.GetIsAutomationPropBased(System.Int32@)">
      <summary>Determines if automation is property based.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pfAutoProp">[out] A BOOL value; true if automation is property-based.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree.GetIsPlaceholder(System.Int32@)">
      <summary>Determines if the node is a placeholder.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pfPlaceholder">[out] Determines whether this is a placeholder node.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree.GetNameForID(System.String@)">
      <summary>Gets the name of a node for identification.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrNameForID">[out] The name of the node.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree.GetPackage(System.String@)">
      <summary>Gets the package associated with the tree.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrPackage">[out] path to the package.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree.GetRegisteredName(System.String@)">
      <summary>Gets the registered name of the node.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrRegisteredName">[out] The registered node.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree.GetRepresentedNode(Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree@)">
      <summary>Determines whether a placeholder node has a represented node.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppRepresentedNode">[out] Indicates that a placeholder node has a represented node.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree.GetSecurityLevel(System.UInt32@)">
      <summary>Gets the security level of a node.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pSecurityLevel">[out] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSPROFILECATEGORYSECURITY" /> value specifying the security level.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree.GetSensitivityLevel(System.UInt32@)">
      <summary>The sensitivity level of a node.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pSensitivityLevel">[out] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSPROFILECATEGORYSENSITIVITY" /> specifying the sensitivity level.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree.GetVisible(System.Int32@)">
      <summary>Determines if a placeholder node is visible.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pfVisible">[out] BOOL; true if the placeholder nodes are invisible.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree.RevisePlacements(Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree,Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree,System.String)">
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pTreeRoot">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree" /> interface to the tree root.</param>
      <param name="pTreeRootBasis">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree" /> interface to the tree rood basis.</param>
      <param name="bstrCurrentParent">[in] If this tree has an alternate root specified, then adds self as a child in that tree.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree.SetEnabled(System.Int32,System.Int32)">
      <summary>Specifies if a node is enabled.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="fEnabled">[in] BOOL; true if the node is enabled.</param>
      <param name="fIncludeChildren">[in] BOOL; true if the node and it's children are enabled.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsProfilesManagerUI">
      <summary>Internal interface to allow communication between native and managed code.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfilesManagerUI.ShowProfilesUI(Microsoft.VisualStudio.Shell.Interop.IVsProfileDataManager)"></member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsProjectBuildSystem">
      <summary>Provides access to the MSBuild system objects. Enables putting the build system into batch mode to control commitment of changes. You get an implementation of the interface when you create a VSPackage.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProjectBuildSystem.BuildTarget(System.String,System.Boolean@)">
      <summary>Sets the build target.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszTargetName">[in] Pointer to a string containing the target name.</param>
      <param name="pbSuccess">[out] Pointer to a Boolean. Set to true if setting the target succeeds. Otherwise set to false.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProjectBuildSystem.CancelBatchEdit">
      <summary>Cancels an MSBuild batch edit.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProjectBuildSystem.EndBatchEdit">
      <summary>Ends a batch operation and commits the changes.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProjectBuildSystem.GetBuildSystemKind(System.UInt32@)">
      <summary>Returns the type or kind of build system.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pBuildSystemKind">[out] Pointer to an integer indicating the type of build system. For MSBuild, this value is <see cref="F:Microsoft.VisualStudio.Shell.Interop._BuildSystemKindFlags.BSK_MSBUILD" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProjectBuildSystem.SetHostObject(System.String,System.String,System.Object)">
      <summary>Sets the object used to communicate between MSBuild and the host IDE.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszTargetName">[in] Pointer to a string containing the name of the build target.</param>
      <param name="pszTaskName">[in] Pointer to a string containing the name of the task for MSBuild to perform.</param>
      <param name="punkHostObject">[in] Pointer to the <see cref="T:IUnknown" /> interface of the host object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProjectBuildSystem.StartBatchEdit">
      <summary>Starts a batch operation with MSBuild.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsProjectDataConnection">
      <summary>Provides a data connection for the debugger. Used when stepping through a SQL document.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProjectDataConnection.GetProjectSqlConnection(System.Object@)">
      <summary>Gets the SQL connection for the project.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pConnection">[out] Pointer to the <see cref="T:IUnknown" /> interface of the object representing the SQL connection.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsProjectDebugTargetProvider">
      <summary>Gets information about a debug target, a file launched in the debugger. Implemented in projects that want to control launching of the debugger. You must register your implementation using <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsRegisterProjectDebugTargetProvider" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProjectDebugTargetProvider.SupplyDebugTarget(System.String@,System.String@)">
      <summary>Gets information about a debug target if the current debug target is appropriate.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrTarget">[out] Pointer to a string containing the name of the target.</param>
      <param name="pbstrCommandLine">[out] Pointer to a string containing arguments for the provider.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsProjectFactory2">
      <summary>Provides a method indicating whether the environment can open the project asynchronously. Extends, but does not inherit from, <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProjectFactory" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProjectFactory2.GetAsynchOpenProjectType(System.UInt32@)">
      <summary>Returns the asynchronous open type that the project supports.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pType">[out]</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsProjectFlavorCfg">
      <summary>The project subtype configuration object implements IVsProjectFlavorCfg to give the project subtype access to various configuration interfaces.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProjectFlavorCfg.Close">
      <summary>Closes the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProjectFlavorCfg" /> object.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProjectFlavorCfg.get_CfgType(System.Guid@,System.IntPtr@)">
      <summary>Provides access to a configuration interfaces such as <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsBuildableProjectCfg2" /> or <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="iidCfg">[in] Interface identifier of the <paramref name="ppCfg" /> to access.</param>
      <param name="ppCfg">[out, iid_is(iidCfg)] Pointer to the configuration interface identified by <paramref name="iidCfg" />.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsProjectFlavorCfgOutputGroups">
      <summary>Gives a project subtype access to the content of the project output group. IVsProjectFlavorCfgOutputGroups interface also allows the project subtype to influence the project's ability to group outputs according to usage.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProjectFlavorCfgOutputGroups.CustomizeOutputGroup(Microsoft.VisualStudio.Shell.Interop.IVsOutputGroup,Microsoft.VisualStudio.Shell.Interop.IVsOutputGroup@)">
      <summary>Gives the base project access to <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProjectFlavorCfgOutputGroups" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pIn">[in] Pointer to the base projects <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsOutputGroup" /> object.</param>
      <param name="pOut">[out] <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsOutputGroup" /> object of the project subtype.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsProjectFlavorCfgProvider">
      <summary>Functions as the factory for the project subtype's configuration objects.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProjectFlavorCfgProvider.CreateProjectFlavorCfg(Microsoft.VisualStudio.Shell.Interop.IVsCfg,Microsoft.VisualStudio.Shell.Interop.IVsProjectFlavorCfg@)">
      <summary>Allows the base project to ask the project subtype to create an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProjectFlavorCfg" /> object corresponding to each one of its (project subtype's) configuration objects.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pBaseProjectCfg">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsCfg" /> object of the base project.</param>
      <param name="ppFlavorCfg">[out] The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProjectFlavorCfg" /> object of the project subtype.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsProjectFlavorReferences">
      <summary>Gives a project subtype (flavor) control over references and of being referenced.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProjectFlavorReferences.QueryAddProjectReference(System.Object,System.Int32@)">
      <summary>Called before adding a reference to a flavored project. Allows the project to reject a reference.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pReferencedProject">[in] Pointer to the <see cref="T:IUnknown" /> interface of the referenced project (project to be added).</param>
      <param name="pbCanAdd">[out] Boolean. Set to true if the project can be added; false otherwise.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProjectFlavorReferences.QueryCanBeReferenced(System.Object,System.Int32@)">
      <summary>Called before another project attempts to make a reference to this flavored project. The project can refuse being referenced.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pReferencingProject">[in] Pointer to the <see cref="T:IUnknown" /> interface of the project wanting to reference this project.</param>
      <param name="pbAllowReferenced">[out] Pointer to a Boolean. Set to true if the other project can reference this project. Otherwise, set to false.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProjectFlavorReferences.QueryRefreshReferences(System.UInt32,System.Int32@)">
      <summary>Called before updating a project reference. This flavored project may advise against updating the references.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="Reason">[in] Integer indicating the reason for updating references. A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__UPDATE_REFERENCE_REASON" /> enumeration.</param>
      <param name="pbUpdate">[out] Pointer to a Boolean. Set to true if this project advises (favors) updating references. Otherwise, set to false.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsProjectUpgradeViaFactory">
      <summary>Upgrade the project using the project factory. Used by the solution before opening the project. This interface must be available through querying the project factory.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProjectUpgradeViaFactory.GetSccInfo(System.String,System.String@,System.String@,System.String@,System.String@)">
      <summary>Gets source code control information.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrProjectFileName">[in] Name of the project file.</param>
      <param name="pbstrSccProjectName">[out] Name of the source control project.</param>
      <param name="pbstrSccAuxPath">[out] Auxiliary path to the source control depot.</param>
      <param name="pbstrSccLocalPath">[out] Local path to the source control depot.</param>
      <param name="pbstrProvider">[out] Source control provider.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProjectUpgradeViaFactory.UpgradeProject(System.String,System.UInt32,System.String,System.String@,Microsoft.VisualStudio.Shell.Interop.IVsUpgradeLogger,System.Int32@,System.Guid@)">
      <summary>Upgrades a project.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrFileName">[in] Project file of project to update.</param>
      <param name="fUpgradeFlag">[out] Upgrade types specified by the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSPPROJECTUPGRADEVIAFACTORYFLAGS" /> enumeration. Only one may be specified.</param>
      <param name="bstrCopyLocation">[in] Location of the copy upgrade, or the backup copy location.</param>
      <param name="pbstrUpgradedFullyQualifiedFileName">[out] Copy upgrade will have a different path - others may change the project name.</param>
      <param name="pLogger">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsUpgradeLogger" /> interface to the upgrade logger.</param>
      <param name="pUpgradeRequired">[out] true if the project needs upgrading. false if the project is already up-to-date.</param>
      <param name="pguidNewProjectFactory">[out] If a different project factory is used to create the upgraded project, the GUID should be returned here.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProjectUpgradeViaFactory.UpgradeProject_CheckOnly(System.String,Microsoft.VisualStudio.Shell.Interop.IVsUpgradeLogger,System.Int32@,System.Guid@,System.UInt32@)">
      <summary>Checks to see if a project needs to be upgraded.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrFileName">[in] Project file of project to update.</param>
      <param name="pLogger">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsUpgradeLogger" /> interface to the upgrade logger.</param>
      <param name="pUpgradeRequired">[out] true if the project needs upgrading. false if the project is already up-to-date.</param>
      <param name="pguidNewProjectFactory">[out] If a different project factory is used to create the upgraded project, the GUID should be returned here.</param>
      <param name="pUpgradeProjectCapabilityFlags">[in] Upgrade types specified by the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSPPROJECTUPGRADEVIAFACTORYFLAGS" /> enumeration. Only one may be specified.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsProjectUpgradeViaFactory2">
      <summary>Extends, but does not inherit from, <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProjectUpgradeViaFactory" /> by providing a method to call on cancellation of the project upgrade.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProjectUpgradeViaFactory2.OnUpgradeProjectCancelled(System.String)">
      <summary>Cleans up cached items associated with the given project file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrFileName">[in] String containing the project file name.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsPropertyPage2">
      <summary>Provides for getting and setting property values on the property page. Extends, but does not inherit from, <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsPropertyPage" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPropertyPage2.GetProperty(System.UInt32,System.Object@)">
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="propid">[in]</param>
      <param name="pvar">[out]</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPropertyPage2.SetProperty(System.UInt32,System.Object)">
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="propid">[in]</param>
      <param name="var">[in]</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsProvideUserContext2">
      <summary>Enables an object to provide a user context and a priority. Extends, but does not inherit from, <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProvideUserContext" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProvideUserContext2.GetUserContextEx(Microsoft.VisualStudio.Shell.Interop.IVsUserContext@,System.Int32@)">
      <summary>Gets a user context and priority for an object.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppctx">[out] Pointer to the IVsUserContext interface.</param>
      <param name="iPriority">[out] Integer. The priority.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsPublishableProjectCfg">
      <summary>Enables a project to control its publication. Publication includes such things as moving the project to a file server or a Web site.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPublishableProjectCfg.AdvisePublishStatusCallback(Microsoft.VisualStudio.Shell.Interop.IVsPublishableProjectStatusCallback,System.UInt32@)">
      <summary>Establishes a callback for publishing status.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pIVsPublishStatusCallback">[in] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsPublishableProjectStatusCallback" /> interface.</param>
      <param name="pdwCookie">[out] Integer. A VSCOOKIE representing the added callback. Used in <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsPublishableProjectCfg.UnadvisePublishStatusCallback(System.UInt32)" /> to identify the callback.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPublishableProjectCfg.GetPublishProperty(System.UInt32,System.Object@)">
      <summary>Retrieves the value of a publish property by property type.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="propid">[in] Integer. The type of property to retrieve. A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSPUBLISHOPTS" /> enumeration.</param>
      <param name="pvar">[out] Pointer to a variant containing the property value.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPublishableProjectCfg.QueryStartPublish(System.UInt32,System.Int32[],System.Int32[])">
      <summary>Queries whether the project supports publishing and whether or not the project is ready for publishing.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwOptions">[in] Integer. Bit flags specifying query options. Left to the implementer.</param>
      <param name="pfSupported">[out] Optional. Boolean. Set to true if publishing is supported. Otherwise, false.</param>
      <param name="pfReady">[out] Optional. Boolean. Set to true if the project is ready for publishing. Otherwise, false.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPublishableProjectCfg.QueryStatusPublish(System.Int32@)">
      <summary>Queries about the status of an ongoing publishing operation.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pfPublishDone">[out] Pointer to a Boolean. Set to true if the publishing is done, false otherwise.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPublishableProjectCfg.ShowPublishPrompt(System.Int32@)">
      <summary>Displays a prompt to ask whether or not a publishing operation should be done.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pfContinue">[out] Boolean. Set to true if the publishing should continue.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPublishableProjectCfg.StartPublish(Microsoft.VisualStudio.Shell.Interop.IVsOutputWindowPane,System.UInt32)">
      <summary>Begins publishing.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pIVsOutputWindowPane">[in] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsOutputWindowPane" /> to use for output.</param>
      <param name="dwOptions">[in] Integer. Specifies publishing options. Implementation dependant.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPublishableProjectCfg.StopPublish(System.Int32)">
      <summary>Halts a publishing operation.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="fSync">[in] Boolean. Use true if the publishing operation is synchronous. Otherwise, use false.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPublishableProjectCfg.UnadvisePublishStatusCallback(System.UInt32)">
      <summary>Unregisters a callback used for monitoring publishing status.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwCookie">[in] Integer. The VSCOOKIE from the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsPublishableProjectCfg.AdvisePublishStatusCallback(Microsoft.VisualStudio.Shell.Interop.IVsPublishableProjectStatusCallback,System.UInt32@)" /> call that registered the callback interface.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsPublishableProjectStatusCallback">
      <summary>Defines methods for controlling and reporting on publication of a project. Implemented by the environment.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPublishableProjectStatusCallback.PublishBegin(System.Int32@)">
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pfContinue">[in, out]</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPublishableProjectStatusCallback.PublishEnd(System.Int32)">
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="fSuccess">[in]</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPublishableProjectStatusCallback.Tick(System.Int32@)">
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pfContinue">[in, out]</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsQueryDebuggableProjectCfg">
      <summary>Responds to queries about how the project would launch the debugger. An optional interface implemented on the project configuration object by projects that can be start projects.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsQueryDebuggableProjectCfg.QueryDebugTargets(System.UInt32,System.UInt32,Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo2[],System.UInt32[])">
      <summary>Returns information about a project's debugging targets.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="grfLaunch">[in] Integer containing bit flags representing options for launching the debugger. Constructed from values in the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSDBGLAUNCHFLAGS" /> enumeration.</param>
      <param name="cTargets">[in] Integer. The maximum number of debug targets—the length of the rgDebugTargetInfo array.</param>
      <param name="rgDebugTargetInfo">[out] Array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo2" /> structures representing debug targets.</param>
      <param name="pcActual">[out] Pointer to an integer. The number of debug targets found and returned in rgDebugTargetInfo.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsRefactorNotify">
      <summary>Notifies code generators about the occurrence of refactoring operations.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsRefactorNotify.OnAddParams(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.String,System.UInt32,System.UInt32[],System.String[],System.String[])">
      <summary>Called after a method had the parameters added.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHier">A hierarchy of the designer-owned item associated with the file that the language service changed.</param>
      <param name="itemid">The VSITEMID of the designer-owned item associated with the file that the language service changed.</param>
      <param name="lpszRQName">A method that has parameters added.</param>
      <param name="cParams">The number of parameters added.</param>
      <param name="rgszParamIndexes">The indexes of the new parameters.</param>
      <param name="rgszRQTypeNames">The types of the new parameters.</param>
      <param name="rgszParamNames">The names of the new parameters.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsRefactorNotify.OnBeforeAddParams(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.String,System.UInt32,System.UInt32[],System.String[],System.String[],System.Array@)">
      <summary>Called when a method is about to have the parameters added.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHier">A hierarchy of the designer-owned item associated with the file that the language service changed.</param>
      <param name="itemid">The VSITEMID of the designer-owned item associated with the file that the language service is about to change.</param>
      <param name="lpszRQName">A method that has parameters added.</param>
      <param name="cParams">The number of parameters added.</param>
      <param name="rgszParamIndexes">The indexes of the new parameters.</param>
      <param name="rgszRQTypeNames">The types of the new parameters.</param>
      <param name="rgszParamNames">The names of the new parameters.</param>
      <param name="prgAdditionalCheckoutVSITEMIDs">An array of VSITEMIDs to be checked out during the add parameter operation, if the IVsRefactorNotify implementer needs to modify additional files as a part of the refactoring operation. Implementers must return the VSITEMID of the designer-owned item, if that file is modified during the refactoring operation.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsRefactorNotify.OnBeforeGlobalSymbolRenamed(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.UInt32,System.String[],System.String,System.Array@)">
      <summary>Called when a symbol is about to be renamed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHier">The hierarchy of the designer-owned item associated with the file that the language service changed. </param>
      <param name="itemid">The VSITEMID of the designer-owned item associated with the file that the language service changed.</param>
      <param name="cRQNames">The number of the renamed symbols. The number can be greater than one if an overloaded symbol is renamed. </param>
      <param name="rglpszRQName">A name of the symbol before the rename.</param>
      <param name="lpszNewName">A name of the symbol after the rename.</param>
      <param name="prgAdditionalCheckoutVSITEMIDs">An array of VSITEMIDs to be checked out during the rename operation, if the IVsRefactorNotify implementer must modify additional files as a part of the refactoring operation. Implementers must return the VSITEMID of the designer-owned item, if that file is modified during the refactoring operation.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsRefactorNotify.OnBeforeRemoveParams(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.String,System.UInt32,System.UInt32[],System.Array@)">
      <summary>Called when a method is about to have the parameters removed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHier">A hierarchy of the designer-owned item associated with the file that the language service changed.</param>
      <param name="itemid">The VSITEMID of the designer-owned item associated with the file that the language service changed.</param>
      <param name="lpszRQName">A method that has parameters removed.</param>
      <param name="cParamIndexes">The number of parameters removed.</param>
      <param name="rgParamIndexes">An array of parameter indexes where each value indicates the index of the parameter being removed.</param>
      <param name="prgAdditionalCheckoutVSITEMIDs">An array of VSITEMIDs to be checked out during the remove parameter operation, if the IVsRefactorNotify implementer must modify additional files as a part of the refactoring operation. Implementers must return the VSITEMID of the designer-owned item, if that file is modified during the refactoring operation.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsRefactorNotify.OnBeforeReorderParams(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.String,System.UInt32,System.UInt32[],System.Array@)">
      <summary>Called when a method is about to have the parameters reordered.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHier">A hierarchy of the designer-owned item associated with the file that the language service changed.</param>
      <param name="itemid">The VSITEMID of the designer-owned item associated with the file that the language service changed.</param>
      <param name="lpszRQName">A method that has parameters reordered.</param>
      <param name="cParamIndexes">The number of parameters reordered.</param>
      <param name="rgParamIndexes">An array of parameter indexes. The index indicates the position of the parameter after reordering. The value at the index indicates the position of the parameter before reordering.</param>
      <param name="prgAdditionalCheckoutVSITEMIDs">An array of VSITEMIDs to be checked out during the reorder parameters operation, if the IVsRefactorNotify implementer must modify additional files as a part of the refactoring operation. Implementers must return the VSITEMID of the designer-owned item, if that file is modified during the refactoring operation.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsRefactorNotify.OnGlobalSymbolRenamed(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.UInt32,System.String[],System.String)">
      <summary>Called after a symbol is renamed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHier">A hierarchy of the designer-owned item associated with the file that the language service changed.</param>
      <param name="itemid">The VSITEMID of the designer-owned item associated with the file that the language service changed.</param>
      <param name="cRQNames">The number of the renamed symbols. The number can be greater than one, if an overloaded symbol is renamed.</param>
      <param name="rglpszRQName">A name of the symbol before the rename.</param>
      <param name="lpszNewName">A name of the symbol after the rename.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsRefactorNotify.OnRemoveParams(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.String,System.UInt32,System.UInt32[])">
      <summary>Called after a method had the parameters removed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHier">A hierarchy of the designer-owned item associated with the file that the language service changed.</param>
      <param name="itemid">The VSITEMID of the designer-owned item associated with the file that the language service changed.</param>
      <param name="lpszRQName">A method that has parameters removed.</param>
      <param name="cParamIndexes">The number of parameters removed.</param>
      <param name="rgParamIndexes">An array of parameter indexes where each value indicates the index of the removed parameter.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsRefactorNotify.OnReorderParams(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.String,System.UInt32,System.UInt32[])">
      <summary>Called after a method had the parameters reordered.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHier">A hierarchy of the designer-owned item associated with the file that the language service changed.</param>
      <param name="itemid">The VSITEMID of the designer-owned item associated with the file that the language service changed.</param>
      <param name="lpszRQName">A method that has parameters reordered.</param>
      <param name="cParamIndexes">The number of parameters reordered.</param>
      <param name="rgParamIndexes">An array of parameter indexes. The index indicates the position of the parameter after reordering. The value at the index indicates the position of the parameter before reordering.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsRegisterNewDialogFilters">
      <summary>Installs custom filters for the AddNewProject or AddNewItem dialogs. You can get an instance of the interface from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsRegisterNewDialogFilters" /> (SID_SVsRegisterNewDialogFilters) service.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsRegisterNewDialogFilters.RegisterAddNewItemDialogFilter(Microsoft.VisualStudio.Shell.Interop.IVsFilterAddProjectItemDlg,System.UInt32@)">
      <summary>Registers a filter for the AddNewItem dialog.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pFilter">[in] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsFilterAddProjectItemDlg" /> interface representing the filter to register.</param>
      <param name="pdwFilterCookie">[out] Pointer to an integer containing a VSCOOKIE uniquely identifying the filter just registered. Needed for the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsRegisterNewDialogFilters.UnregisterAddNewItemDialogFilter(System.UInt32)" /> method.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsRegisterNewDialogFilters.RegisterNewProjectDialogFilter(Microsoft.VisualStudio.Shell.Interop.IVsFilterNewProjectDlg,System.UInt32@)">
      <summary>Registers a new filter for the AddNewProject dialog.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pFilter">[in] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsFilterNewProjectDlg" /> interface representing the filter to register.</param>
      <param name="pdwFilterCookie">[out] Pointer to an integer containing a VSCOOKIE uniquely identifying the filter just registered. Needed for the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsRegisterNewDialogFilters.UnregisterNewProjectDialogFilter(System.UInt32)" /> method.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsRegisterNewDialogFilters.UnregisterAddNewItemDialogFilter(System.UInt32)">
      <summary>Unregisters a filter for the AddNewItem dialog.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwFilterCookie">[in] Pointer to an integer containing a VSCOOKIE uniquely identifying the filter. From the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsRegisterNewDialogFilters.RegisterAddNewItemDialogFilter(Microsoft.VisualStudio.Shell.Interop.IVsFilterAddProjectItemDlg,System.UInt32@)" /> method call.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsRegisterNewDialogFilters.UnregisterNewProjectDialogFilter(System.UInt32)">
      <summary>Unregisters a filter for the AddNewProject dialog.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwFilterCookie">[in] Pointer to an integer containing a VSCOOKIE uniquely identifying the filter. From the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsRegisterNewDialogFilters.RegisterNewProjectDialogFilter(Microsoft.VisualStudio.Shell.Interop.IVsFilterNewProjectDlg,System.UInt32@)" /> method call.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsRegisterProjectDebugTargetProvider">
      <summary>Maintains a linked list of debug target providers (<see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProjectDebugTargetProvider" />). You can get an instance of the interface from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsRegisterDebugTargetProvider" /> (SID_SVsRegisterProjectDebugTargetProvider) service.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsRegisterProjectDebugTargetProvider.AddDebugTargetProvider(Microsoft.VisualStudio.Shell.Interop.IVsProjectDebugTargetProvider,Microsoft.VisualStudio.Shell.Interop.IVsProjectDebugTargetProvider@)">
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pNewDbgTrgtProvider">[in]</param>
      <param name="ppNextDbgTrgtProvider">[out]</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsRegisterProjectDebugTargetProvider.RemoveDebugTargetProvider(Microsoft.VisualStudio.Shell.Interop.IVsProjectDebugTargetProvider)">
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pDbgTrgtProvider">[in]</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsRegisterScciProvider">
      <summary>This interface is used to register the source control package with Visual Studio.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsRegisterScciProvider.RegisterSourceControlProvider(System.Guid)">
      <summary>This method is called by the source control package when the package is loaded.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="guidProviderService">[in] GUID of the source control provider.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsResourceManager">
      <summary>Loads managed and unmanaged resources from Satellite DLLs.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsResourceManager.GetSatelliteAssemblyPath(System.String,System.Int32,System.String@)">
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="assemblyPath">Path to the assembly where the resource is to be loaded.</param>
      <param name="lcid">A LCID value specifying the culture for which the resource is valid. Supplying a value of 0 will select the LCID that the user selected when the application was started.</param>
      <param name="pbstrPath">Path to the satellite assembly.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsResourceManager.LoadResourceBitmap(System.Guid@,System.Int32,System.String,System.IntPtr@)">
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="guidPackage">Guid of the package into which the resource will be loaded.</param>
      <param name="culture">A LCID value specifying the culture for which the resource is valid. Supplying a value of 0 will select the LCID that the user selected when the application was started.</param>
      <param name="pszResourceName">The name of the resource.</param>
      <param name="hbmpValue">Pointer to the resource.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsResourceManager.LoadResourceBitmap2(System.String,System.Int32,System.String,System.IntPtr@)">
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszAssemblyPath">Path to the assembly where the resource is to be loaded.</param>
      <param name="culture">A LCID value specifying the culture for which the resource is valid. Supplying a value of 0 will select the LCID that the user selected when the application was started.</param>
      <param name="szResourceName">The name of the resource.</param>
      <param name="hbmpValue">Pointer to the resource.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsResourceManager.LoadResourceBlob(System.Guid@,System.Int32,System.String,System.IntPtr@,System.Int32@)">
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="guidPackage">Guid of the package into which the resource will be loaded.</param>
      <param name="culture">A LCID value specifying the culture for which the resource is valid. Supplying a value of 0 will select the LCID that the user selected when the application was started.</param>
      <param name="pszResourceName">The name of the resource.</param>
      <param name="pBytes">Size in bytes of the blob.</param>
      <param name="lAllocated">Bytes allocated for the blob.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsResourceManager.LoadResourceBlob2(System.String,System.Int32,System.String,System.IntPtr@,System.Int32@)">
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszAssemblyPath">Path to the assembly where the resource is to be loaded.</param>
      <param name="culture">A LCID value specifying the culture for which the resource is valid. Supplying a value of 0 will select the LCID that the user selected when the application was started.</param>
      <param name="pszResourceName">The name of the resource.</param>
      <param name="pBytes">Size in bytes of the blob.</param>
      <param name="lAllocated">Number of bytes allocated for the blob.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsResourceManager.LoadResourceIcon(System.Guid@,System.Int32,System.String,System.Int32,System.Int32,System.IntPtr@)">
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="guidPackage">Guid of the package into which the resource will be loaded.</param>
      <param name="culture">A LCID value specifying the culture for which the resource is valid. Supplying a value of 0 will select the LCID that the user selected when the application was started.</param>
      <param name="pszResourceName">The name of the resource.</param>
      <param name="cx">Width of the icon.</param>
      <param name="cy">Height of the icon.</param>
      <param name="hicoValue">Pointer to the resource.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsResourceManager.LoadResourceIcon2(System.String,System.Int32,System.String,System.Int32,System.Int32,System.IntPtr@)">
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszAssemblyPath">Path to the assembly where the resource is to be loaded.</param>
      <param name="culture">A LCID value specifying the culture for which the resource is valid. Supplying a value of 0 will select the LCID that the user selected when the application was started.</param>
      <param name="pszResourceName">The name of the resource.</param>
      <param name="cx">Width of the icon.</param>
      <param name="cy">Height of the icon.</param>
      <param name="hicoValue">Pointer to the resource.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsResourceManager.LoadResourceString(System.Guid@,System.Int32,System.String,System.String@)">
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="guidPackage">Guid of the package into which the string will be loaded.</param>
      <param name="culture">A LCID value specifying the culture for which the string is valid. Supplying a value of 0 will select the LCID that the user selected when the application was started.</param>
      <param name="pszResourceName">The name of the resource.</param>
      <param name="pbstrValue">Pointer to the resource.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsResourceManager.LoadResourceString2(System.String,System.Int32,System.String,System.String@)">
      <summary>Loads a resource string.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszAssemblyPath">Path to the assembly where the resource is to be loaded.</param>
      <param name="culture">A LCID value specifying the culture for which the string is valid. Supplying a value of 0 will select the LCID that the user selected when the application was started.</param>
      <param name="pszResourceName">The name of the resource.</param>
      <param name="pbstrValue">Pointer to the resource.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsRunningDocTableEvents4">
      <summary>Implements methods that fire in response to changes to documents in the Running Document Table (RDT).</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsRunningDocTableEvents4.OnAfterLastDocumentUnlock(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.String,System.Int32)">
      <summary>Fired after the last document in the Running Document Table (RDT) is unlocked.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHier">[in] The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> object that owns the document about to be locked.</param>
      <param name="itemid">[in] The item ID in the hierarchy. This is a unique identifier or it can be one of the following values: <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_NIL" />, <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_ROOT" />, or <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_SELECTION" />.</param>
      <param name="pszMkDocument">[in] The path to the document about to be locked.</param>
      <param name="fClosedWithoutSaving">[in] true if the document was closed without saving; otherwise false.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsRunningDocTableEvents4.OnAfterSaveAll">
      <summary>Fired after a Save All command is executed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsRunningDocTableEvents4.OnBeforeFirstDocumentLock(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.String)"></member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsRunningDocumentTable2">
      <summary>Represents the running document table (RDT) and provides additional functionality beyond the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsRunningDocumentTable" /> interface.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsRunningDocumentTable2.CloseDocuments(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32)">
      <summary>Closes one or more documents.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="grfSaveOptions">[in] Flags from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__FRAMECLOSE" /> enumeration.</param>
      <param name="pHierarchy">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> object whose documents are to be closed. See Remarks.</param>
      <param name="docCookie">[in] An abstract value representing the document to be closed. See Remarks.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsRunningDocumentTable2.FindAndLockDocumentEx(System.UInt32,System.String,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy@,System.UInt32@,System.IntPtr@,System.UInt32@)">
      <summary>Locates a document in the RDT using the document file name, then obtains a read or edit lock on that document.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="grfRDTLockType">[in] Flags whose values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSRDTFLAGS" /> enumeration.</param>
      <param name="pszMkDocument">[in] Path to the located document.</param>
      <param name="pHierPreferred">[out, optional] Returns preferred the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface for the located document.</param>
      <param name="itemidPreferred">[out, optional] Returns an item identifier of the located document. This is a unique identifier or it can be one of the following values: <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_NIL" />, <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_ROOT" />, or <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_SELECTION" />.</param>
      <param name="ppHierActual">[out, optional] Returns the actual <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface for the located document.</param>
      <param name="pitemidActual">[out, optional] Returns an item identifier of the located document. This is a unique identifier or it can be one of the following values: <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_NIL" />, <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_ROOT" />, or <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_SELECTION" />.</param>
      <param name="ppunkDocDataActual">[out, optional] Returns the <see cref="T:IUnknown" /> interface.</param>
      <param name="pdwCookie">[out, optional] Returns an abstract value for the document.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsRunningDocumentTable2.FindOrRegisterAndLockDocument(System.UInt32,System.String,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.IntPtr,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy@,System.UInt32@,System.IntPtr@,System.UInt32@)">
      <summary>Adds a lock to a registered or unregistered document.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="grfRDTLockType">[in] Flags whose values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSRDTFLAGS" /> enumeration.</param>
      <param name="pszMkDocument">[in] Path to the located document.</param>
      <param name="pHierPreferred">[out, optional] Returns preferred the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface for the located document.</param>
      <param name="itemidPreferred">[out, optional] Returns an item identifier of the located document. This is a unique identifier or it can be one of the following values: <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_NIL" />, <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_ROOT" />, or <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_SELECTION" />.</param>
      <param name="punkDocData">[out, optional] Returns the <see cref="T:IUnknown" /> interface.</param>
      <param name="ppHierActual">[out, optional] Returns the actual <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface for the located document.</param>
      <param name="pitemidActual">[out, optional] Returns an item identifier of the located document. This is a unique identifier or it can be one of the following values: <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_NIL" />, <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_ROOT" />, or <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_SELECTION" />.</param>
      <param name="ppunkDocDataActual">[out, optional] Returns the <see cref="T:IUnknown" /> interface.</param>
      <param name="pdwCookie">[out, optional] Returns an abstract value for the document.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsRunningDocumentTable2.QueryCloseRunningDocument(System.String,System.Int32@)">
      <summary>Closes the specified document, with possible confirmation, if it is open in an incompatible editor.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszMkDocument">[in] The path to the document to close.</param>
      <param name="pfFoundAndClosed">[out] Returns non-zero (TRUE) if the document was found and closed; otherwise, returns zero (FALSE). See Remarks.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSccAddWebProjectFromSourceControl">
      <summary>This interface adds a Web-based project to the current solution from source control.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccAddWebProjectFromSourceControl.AddWebProjectFromSourceControl(System.String,System.String,System.String,System.String,System.String)">
      <summary>Adds the specified Web-based project to the current solution, storing it at the specified location.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrLocalPath">[in] The local path where the Web-based project will be stored.</param>
      <param name="bstrDatabasePath">[in] The location of the project in the source control.</param>
      <param name="bstrAuxiliarPath">[in] An additional path that can be used to locate the project in source control.</param>
      <param name="bstrProviderName">[in] A string identifying the source code control provider.</param>
      <param name="bstrDebuggingPath">[in] A path to be used when the project is opened with the solution and if the project will be opened as a "localhost" Web project.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccAddWebProjectFromSourceControl.BrowseForServerLocation(System.String@,System.String@,System.String@,System.String@,System.String@)">
      <summary>Presents a dialog box to the user to browse for a source control server location.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. The method returns <see cref="F:Microsoft.VisualStudio.VSConstants.E_FAIL" /> if the user cancels the dialog box. Otherwise, the method returns an error code.</returns>
      <param name="pbstrLocationDescription">[out] Returns a user-friendly description of the returned path (for example, "Project &lt;MyProject&gt; from database &lt;GemSS&gt;").</param>
      <param name="pbstrLocalPath">[out] Returns a suggested local path where the project will be stored. The user can override this string.</param>
      <param name="pbstrDatabasePath">[out] Returns the location of the database (this will not be shown to the user). This value is passed directly to the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSccAddWebProjectFromSourceControl.AddWebProjectFromSourceControl(System.String,System.String,System.String,System.String,System.String)" /> method.</param>
      <param name="pbstrAuxiliarPath">[out] Returns an additional path if the source control package requires it. This is passed directly to the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSccAddWebProjectFromSourceControl.AddWebProjectFromSourceControl(System.String,System.String,System.String,System.String,System.String)" /> method.</param>
      <param name="pbstrProviderName">[out] Returns a string identifying the source control package being used. This string is passed directly to the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSccAddWebProjectFromSourceControl.AddWebProjectFromSourceControl(System.String,System.String,System.String,System.String,System.String)" /> method.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccAddWebProjectFromSourceControl.IsAddWebProjectSupported(System.Boolean@)">
      <summary>Determines whether the addition of a Web-based project to the current solution directly from source control is supported.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If <see cref="F:Microsoft.VisualStudio.VSConstants.E_FAIL" /> is returned, there is no active source control package or the current source control package does not support this functionality. If this method fails, it returns an error code.</returns>
      <param name="pfResult">[out] Returns true (nonzero) if the addition of a Web-based project from source control is supported; otherwise, returns false (zero).</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSccControlNewSolution">
      <summary>Adds a newly created solution automatically to source control.  .</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccControlNewSolution.AddNewSolutionToSourceControl">
      <summary>Adds the current solution to source control.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccControlNewSolution.GetDisplayStringForAction(System.String@)">
      <summary>Retrieves the text to be displayed with the "Add to Source Control" check box in the New Projects dialog box.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrActionName">[out] Returns the text to be used for the "Add to Source Control" check box.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSccEnlistmentPathTranslation">
      <summary>Used by the solution to translate project paths.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccEnlistmentPathTranslation.TranslateEnlistmentPathToProjectPath(System.String,System.String@)">
      <summary>Translates a physical project path to a (possibly) virtual project path.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="lpszEnlistmentPath">[in] The physical path (either the local path or the enlistment UNC path) to be translated.</param>
      <param name="pbstrProjectPath">[out] The (possibly) virtual project path.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccEnlistmentPathTranslation.TranslateProjectPathToEnlistmentPath(System.String,System.String@,System.String@)">
      <summary>Translates a possibly virtual project path to a local path and an enlistment physical path.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="lpszProjectPath">[in] The project's (possibly) virtual path as obtained from the solution file.</param>
      <param name="pbstrEnlistmentPath">[out] The local path used by the solution for loading and saving the project.</param>
      <param name="pbstrEnlistmentPathUNC">[out] The path used by the source control system for managing the enlistment ("\\drive\path", "[drive]:\path", "file://server/path").</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSccGlyphs">
      <summary>Allows full customization of source control glyphs.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccGlyphs.GetCustomGlyphList(System.UInt32,System.UInt32@)">
      <summary>Called by the IDE to get a custom glyph image list for source control status.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="BaseIndex">[in] Value to add when returning glyph index.</param>
      <param name="pdwImageListHandle">[out] Handle to the custom image list.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSccManagerTooltip">
      <summary>This interface provides access to source control data to construct the ToolTip text in Solution Explorer.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccManagerTooltip.GetGlyphTipText(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.String@)">
      <summary>Provides ToolTip text based on the source control data for a specific node in the project's hierarchy Solution Explorer.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="phierHierarchy">[in] Owner hierarchy of node (null if it is a solution).</param>
      <param name="itemidNode">[in] The ID of the node for which the ToolTip is requested.</param>
      <param name="pbstrTooltipText">[out] ToolTip text.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSccOpenFromSourceControl">
      <summary>Adds items to an enlistment directly from source code control. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccOpenFromSourceControl.AddItemFromSourceControl(Microsoft.VisualStudio.Shell.Interop.IVsProject,System.UInt32,System.UInt32,System.String[],System.IntPtr,System.UInt32,System.Guid@,System.String,System.Guid@,Microsoft.VisualStudio.Shell.Interop.VSADDRESULT[])">
      <summary>Adds the specified item or items to the specified project directly from source control.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pProject">[in] <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProject" /> interface for the project to add the items to.NoteT:Microsoft.VisualStudio.Shell.Interop.IVsProject is an old interface that is not used directly. Instead, query the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProject3" /> interface for the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProject" /> interface and pass that in.</param>
      <param name="itemidLoc">[in] A value indicating where in the project hierarchy to add the items. This is a unique identifier for a project or folder item or one of the following values: <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_NIL" />, <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_ROOT" />, or <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_SELECTION" />.</param>
      <param name="cFilesToAdd">[in] Number of files specified in <paramref name="rgpszFilesToAdd" /> array.</param>
      <param name="rgpszFilesToAdd">[in] Array of files names to add to the project from source control.</param>
      <param name="hwndDlgOwner">[in] Handle to the parent of the dialog box that will be used.</param>
      <param name="grfEditorFlags">[in] A combination of flags from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSSPECIFICEDITORFLAGS" /> enumeration.</param>
      <param name="rguidEditorType">[in] GUID that specifies the type of editor being used.</param>
      <param name="pszPhysicalView">[in] Name of the physical view being used.</param>
      <param name="rguidLogicalView">[in] GUID that identifies the logical view.</param>
      <param name="pResult">[out] Returns a <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSADDRESULT" /> code indicating the overall status of the add process.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccOpenFromSourceControl.AddProjectFromSourceControl(System.String)">
      <summary>Adds the specified project to the current solution directly from source control.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszProjectStoreUrl">[in] The URL of the project in the source control to be added to the current solution (for example, msss://server/…/MyProject.proj).</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccOpenFromSourceControl.GetNamespaceExtensionInformation(System.Int32,System.String@,System.String@,System.String@)">
      <summary>Retrieves the source control Namespace Extension (NSE) information for use in Open dialog boxes..</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.E_NOTIMPL" /> or an error code.</returns>
      <param name="vsofsdDlg">[in] A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSOPENFROMSCCDLG" /> enumeration specifying the type of dialog box that will be opened.</param>
      <param name="pbstrNamespaceGUID">[out] Returns the GUID (in string form) of the NSE allowing the dialog boxes to explore the NSE space.</param>
      <param name="pbstrTrayDisplayName">[out] Returns the display name of the NSE (which can appear in the Places section of the Window border of the dialog boxes).</param>
      <param name="pbstrProtocolPrefix">[out] Returns the NSE protocol prefix (for example, "msss://").</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccOpenFromSourceControl.OpenSolutionFromSourceControl(System.String)">
      <summary>Opens the specified solution directly from source control, creating a local copy as necessary.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszSolutionStoreUrl">[in] The URL of the solution in source control to be opened (for example, msss://server/.../MySolution.sln).</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSccProjectEnlistmentChoice">
      <summary>Indicates the choices a user will be given by a project when a project is retrieved from source control, otherwise known as enlisting in a project.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccProjectEnlistmentChoice.GetEnlistmentChoice(Microsoft.VisualStudio.Shell.Interop.VSSCCENLISTMENTCHOICE[])">
      <summary>Determines whether an enlistment choice should be given to the user each time a project is checked out from source control.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pvscecEnlistmentChoice">[out] Returns a value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSSCCENLISTMENTCHOICE" /> enumeration indicating whether an enlistment choice is required, optional, or not supported.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSccProjectEnlistmentFactory">
      <summary>Provides a browse dialog box in which the user can select where a project under source control is to be saved. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccProjectEnlistmentFactory.BrowseEnlistment(System.String,System.String,System.String@,System.String@)">
      <summary>Displays a browse dialog box allowing the user to change the enlistment choice.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. It returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_FALSE" /> if the browse dialog box was canceled. If it fails, this method returns an error code.</returns>
      <param name="lpszProjectPath">[in] The original project path.</param>
      <param name="lpszInitialEnlistment">[in] The user's latest edited version of the enlistment choice.</param>
      <param name="pbstrChosenEnlistment">[out] Returns the (possibly) new enlistment choice as chosen by the user.</param>
      <param name="pbstrChosenEnlistmentUNC">[out] Returns the enlistment choice as a fully qualified path (UNC-style, [drive:]\path, or file://path).</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccProjectEnlistmentFactory.GetDefaultEnlistment(System.String,System.String@,System.String@)">
      <summary>Retrieves the suggested enlistment path based on the specified project path. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="lpszProjectPath">[in] The project's path as read from the solution file (this is the name the project is known as to the solution).</param>
      <param name="pbstrDefaultEnlistment">[out] Returns the suggested enlistment destination. If there is no suggestion, then this will be a null value.</param>
      <param name="pbstrDefaultEnlistmentUNC">[out] Returns the suggested enlistment destination as a fully qualified path (UNC-style, [drive:]\path, or file://path).</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccProjectEnlistmentFactory.GetEnlistmentFactoryOptions(System.UInt32@)">
      <summary>Retrieves the options that control the enlistment choice selection.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pvscefoOptions">[out] Returns a combination of <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSSCCENLISTMENTFACTORYOPTIONS" /> enumeration values.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccProjectEnlistmentFactory.OnAfterEnlistmentCreate(System.String,System.String,System.String)">
      <summary>Called by the environment after an enlistment has been completely created.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code (a typical error is <see cref="F:Microsoft.VisualStudio.VSConstants.E_NOTIMPL" />).</returns>
      <param name="lpszProjectPath">[in] The original project path.</param>
      <param name="lpszEnlistment">[in] The enlistment choice used to create the enlistment.</param>
      <param name="lpszEnlistmentUNC">[in] The enlistment choice as a fully qualified path (UNC-style, [drive:]\path, or file://path).</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccProjectEnlistmentFactory.OnBeforeEnlistmentCreate(System.String,System.String,System.String)">
      <summary>Allows the project to do any special operations before the enlistment is actually created.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.NoteIf this method returns an error code, the enlistment will not be created.</returns>
      <param name="lpszProjectPath">[in] The original project path.</param>
      <param name="lpszEnlistment">[in] The enlistment path to be used.</param>
      <param name="lpszEnlistmentUNC">[in] The enlistment path as a fully qualified path (UNC-style, [drive:]\path, or file://path).</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccProjectEnlistmentFactory.ValidateEnlistmentEdit(System.Int32,System.String,System.String,System.String@,System.Int32@)">
      <summary>Validates an enlistment choice made by the user. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="fQuick">[in] Nonzero (true) if the validation should be fast (this allows the validation to be used during editing and to not slow down for things like network access).</param>
      <param name="lpszProjectPath">[in] The original project path. This is the name by which the project is known to the solution.</param>
      <param name="lpszChosenEnlistment">[in] The user's edited enlistment choice.</param>
      <param name="pbstrChosenEnlistmentUNC">[out] Returns the edited enlistment choice as a full path (UNC-style, [drive:]\path, or file://path).</param>
      <param name="pfValidEnlistment">[out] Returns true (nonzero) if the enlistment choice is valid; returns false (0) if not valid.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSccProjectProviderBinding">
      <summary>Allows a project type to force the choice of a particular source control package.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccProjectProviderBinding.BrowseServerPath(System.String,System.String@)">
      <summary>Displays a browse dialog box so that the user can browse for a source control server location.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. It returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_FALSE" /> if the browse dialog box was canceled. If it fails, this method returns an error code (a typical error code is <see cref="F:Microsoft.VisualStudio.VSConstants.E_NOTIMPL" />, indicating that the method is not supported although the rest of the interface may be).</returns>
      <param name="lpszServerPath">[in] The server path to start from (based on the user's latest edits).</param>
      <param name="pbstrNewServerPath">[out] Returns the new enlistment path (local system path).</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccProjectProviderBinding.GetProviderBinding(Microsoft.VisualStudio.Shell.Interop.VSSCCPROVIDERBINDING[])">
      <summary>Determines if this project requires a specific source control package or if the project should be put under source control.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pvscpbBinding">[out] Returns a value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSSCCPROVIDERBINDINGOPTIONS" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccProjectProviderBinding.GetProviderBindingOptions(System.UInt32@)">
      <summary>Retrieves the flags that control editing of the source control server path.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pvscpboOptions">[out] Returns a combination of values from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSSCCPROVIDERBINDINGOPTIONS" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccProjectProviderBinding.GetProviderService(System.Guid@)">
      <summary>This method retrieves the service ID (SID) of a service object that will be used to instantiate a source control package.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pguidService">[out] Returns the service GUID (SID) of a service object that will be used to instantiate a source control package.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccProjectProviderBinding.GetProviderSession(System.Object@)">
      <summary>Returns a session object for a Version API (VAPI)-style source control package.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="punkSession">[out] A session object to be used with a VAPI-style source control package.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccProjectProviderBinding.TranslateEnlistmentPath(System.String,System.Int32@,System.String@)">
      <summary>Translates an enlistment path into a displayable path. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code. A typical error can be <see cref="F:Microsoft.VisualStudio.VSConstants.E_NOTIMPL" /> if the project does not use dual paths.</returns>
      <param name="lpszPath">[in] The enlistment path (a local path) to be translated.</param>
      <param name="pfAlternateIsDisplay">[out] Returns true (nonzero) if the alternate path is the preferred path for display; otherwise, returns false (0) if the path supplied as <paramref name="lpszPath" /> is preferred for display.</param>
      <param name="pbstrAlternatePath">[out] Returns an alternate path that can be used for display if <paramref name="pfAlternatedIsDisplay" /> is true.NoteThe alternate path should never be empty: if an alternate path is not needed, then this method should return the original path as the alternate path.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccProjectProviderBinding.ValidateServerPathEdit(System.Int32,System.String,System.Int32@)">
      <summary>Determines if the given source control server path is valid.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="fQuick">[in] Nonzero (true) if the validation should be fast (this allows the validation to be used during editing and does not slow it down for things like network access).</param>
      <param name="lpszServerPath">[in] The server path to be validated.</param>
      <param name="pfValidServer">[out] Returns nonzero (true) if the path is valid; otherwise, returns zero (false).</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSccProvider">
      <summary>Toggles the current activity status of the provider.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccProvider.AnyItemsUnderSourceControl(System.Int32@)">
      <summary>Determines if any item in the solution are under source control.</summary>
      <returns>The method returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />.</returns>
      <param name="pfResult">[out] Returns non-zero (TRUE) if there is at least one item under source control; otherwise, returns zero (FALSE).</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccProvider.SetActive">
      <summary>Called by environment to mark a particular source control package as active.</summary>
      <returns>The method returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccProvider.SetInactive">
      <summary>Called by environment to mark a particular source control package as inactive.</summary>
      <returns>The method returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSccToolsOptions">
      <summary>Retrieves and updates various options associated with source control.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccToolsOptions.GetSccToolsOption(Microsoft.VisualStudio.Shell.Interop.SccToolsOptionsEnum,System.Object@)">
      <summary>Retrieves the value associated with the specified source control option.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="sctoOptionToBeSet">[in] A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__SccToolsOptionsEnum" /> enumeration.</param>
      <param name="pvarValueToGet">[out] Returns the value associated with the specified option.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccToolsOptions.SetSccToolsOption(Microsoft.VisualStudio.Shell.Interop.SccToolsOptionsEnum,System.Object)">
      <summary>This method sets a specified source control option to the specified value.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="sctoOptionToBeSet">[in] A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__SccToolsOptionsEnum" /> enumeration.</param>
      <param name="varValueToBeSet">[in] The value to set on the option (typically, this will be nonzero for true and zero for false, but other values are possible depending on the option). See the individual options in SccToolsOptionsEnum for the appropriate values to use.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSccVirtualFolders">
      <summary>Gets a list of virtual folders within a project.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccVirtualFolders.GetVirtualFolders(System.UInt32,Microsoft.VisualStudio.OLE.Interop.CALPOLESTR[])">
      <summary>This method retrieves a list of virtual folders that appear under a specified node in a project hierarchy.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="itemid">[in] A node type in a project hierarchy. This is a unique identifier for a project or folder item or one of the following values: <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_NIL" />, <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_ROOT" />, or <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_SELECTION" />.</param>
      <param name="pCaStringsOut">[in, out] The pre-allocated <see cref="T:Microsoft.VisualStudio.OLE.Interop.CALPOLESTR" /> structure is filled with an array of virtual folder names that appear under the node specified by <paramref name="itemid" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccVirtualFolders.IsItemChildOfVirtualFolder(System.String,System.Boolean@)">
      <summary>This method determines if a specified item is a child of any virtual folder.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszItemName">[in] The name of the child item.</param>
      <param name="pfResult">[out] Returns true if the item is a file or subfolder of any virtual folder. Otherwise, it returns false.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSelectedSymbol">
      <summary>Provides the name and navigation information (library name, and so on) for a single symbol. An element in an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSelectedSymbols" /> collection.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSelectedSymbol.GetName(System.String@)">
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrName">[out]</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSelectedSymbol.GetNavInfo(Microsoft.VisualStudio.Shell.Interop.IVsNavInfo@)">
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code. </returns>
      <param name="ppNavInfo">[out]</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSelectedSymbols">
      <summary>A collection of <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSelectedSymbol" /> interfaces that provide name and navigation information about symbols in a selection. You can get an instance of this interface from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsClassView" /> (SID_SVsClassView) service or <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsObjBrowser" /> (SID_SVsObjBrowser) service for class view or the object browser.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSelectedSymbols.EnumSelectedSymbols(Microsoft.VisualStudio.Shell.Interop.IVsEnumSelectedSymbols@)">
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code. </returns>
      <param name="ppIVsEnumSelectedSymbols">[out]</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSelectedSymbols.GetCount(System.UInt32@)">
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pcItems">[out]</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSelectedSymbols.GetItem(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsSelectedSymbol@)">
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="iItem">[in]</param>
      <param name="ppIVsSelectedSymbol">[out]</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSelectedSymbols.GetItemTypes(System.UInt32@)">
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pgrfTypes">[out]</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSettingsErrorInformation"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsErrorInformation.GetCompletionStatus(System.UInt32@)">
      <param name="pdwCompletionStatus"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsErrorInformation.GetErrorCount(System.Int32@)">
      <param name="pnErrors"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsErrorInformation.GetErrorInfo(System.Int32,System.UInt32@,System.String@)">
      <param name="nErrorIndex"></param>
      <param name="pdwErrorType"></param>
      <param name="pbstrError"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSettingsReader">
      <summary>Provides read access to configuration information stored in the Visual Studio settings file.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsReader.ReadCategoryVersion(System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
      <param name="pnMajor"> </param>
      <param name="pnMinor"> </param>
      <param name="pnBuild"> </param>
      <param name="pnRevision"> </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsReader.ReadFileVersion(System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
      <param name="pnMajor"> </param>
      <param name="pnMinor"> </param>
      <param name="pnBuild"> </param>
      <param name="pnRevision"> </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsReader.ReadSettingAttribute(System.String,System.String,System.String@)">
      <param name="pszSettingName">[in]</param>
      <param name="pszAttributeName">[in]</param>
      <param name="pbstrSettingValue">[out]</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsReader.ReadSettingBoolean(System.String,System.Int32@)">
      <summary>Returns the value of a Boolean object stored in the Visual Studio settings file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszSettingName">[in] String uniquely identifying the data element to be retrieved.</param>
      <param name="pfSettingValue">[out] Boolean value retrieved from the specified data element of the Visual Studio settings file.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsReader.ReadSettingBytes(System.String,System.Byte@,System.Int32@,System.Int32)">
      <summary>Returns the values of an array stored in the Visual Studio settings file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszSettingName">[in] String uniquely identifying the data element to be retrieved.</param>
      <param name="pSettingValue">[in, out] Buffer to receive byte data retrieved from the specified data element of the Visual Studio settings file.</param>
      <param name="plDataLength">[out] Number of byte values returned.</param>
      <param name="lDataMax">[in] Maximum number of bytes to be returned. If size of the stored data is greater than <paramref name="lDataMax" />, an error is returned.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsReader.ReadSettingLong(System.String,System.Int32@)">
      <summary>Returns the value of a Long object stored in the Visual Studio settings file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszSettingName">[in] String uniquely identifying the data element to be retrieved.</param>
      <param name="plSettingValue">[out] Long (32-bit integer) value retrieved from the specified data element of the Visual Studio settings file.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsReader.ReadSettingString(System.String,System.String@)">
      <summary>Returns the value of a String object stored in the Visual Studio settings file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszSettingName">[in] String uniquely identifying the data element to be retrieved.</param>
      <param name="pbstrSettingValue">[out] String retrieved from the specified data element of the Visual Studio settings file.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsReader.ReadSettingXml(System.String,System.Object@)">
      <param name="pszSettingName"> </param>
      <param name="ppIXMLDOMNode"> </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsReader.ReadSettingXmlAsString(System.String,System.String@)">
      <param name="pszSettingName"> </param>
      <param name="pbstrXML"> </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsReader.ReportError(System.String,System.UInt32)">
      <param name="pszError"> </param>
      <param name="dwErrorType"> </param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSettingsWriter">
      <summary>Provides VSPackages a mechanism for storing configuration information in the Visual Studio settings file.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsWriter.ReportError(System.String,System.UInt32)">
      <param name="pszError"> </param>
      <param name="dwErrorType"> </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsWriter.WriteCategoryVersion(System.Int32,System.Int32,System.Int32,System.Int32)">
      <param name="nMajor"> </param>
      <param name="nMinor"> </param>
      <param name="nBuild"> </param>
      <param name="nRevision"> </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsWriter.WriteSettingAttribute(System.String,System.String,System.String)">
      <summary>This method supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszSettingName"> </param>
      <param name="pszAttributeName"> </param>
      <param name="pszSettingValue"> </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsWriter.WriteSettingBoolean(System.String,System.Int32)">
      <summary>Stores the value of a Boolean object in the Visual Studio settings file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszSettingName">[in] String uniquely identifying the data element to be stored.</param>
      <param name="fSettingValue">[in] Boolean value to be stored as the specified data element of the Visual Studio settings file.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsWriter.WriteSettingBytes(System.String,System.Byte[],System.Int32)">
      <param name="pszSettingName"> </param>
      <param name="pSettingValue"> </param>
      <param name="lDataLength"> </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsWriter.WriteSettingLong(System.String,System.Int32)">
      <summary>Stores the value of a Long object in the Visual Studio settings file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszSettingName">[in] String uniquely identifying the data element to be stored</param>
      <param name="lSettingValue">[in] Long (32-bit Integer) value to be stored as the specified data element of the Visual Studio settings file.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsWriter.WriteSettingString(System.String,System.String)">
      <summary>Stores a string value in the Visual Studio settings file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszSettingName">[in] String uniquely identifying the data element to be stored</param>
      <param name="pszSettingValue">[in] String to be stored as the specified data element of the Visual Studio settings file.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsWriter.WriteSettingXml(System.Object)">
      <param name="pIXMLDOMNode"> </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsWriter.WriteSettingXmlFromString(System.String)">
      <param name="szXML"> </param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsShell2">
      <summary>Supplies shell services in addition to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsShell" /> interface. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsShell2.LoadPackageStringWithLCID(System.Guid@,System.UInt32,System.UInt32,System.String@)">
      <summary>Loads a localized string resource from a VSPackage satellite DLL.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="guidPackage">[in] GUID of the VSPackage whose satellite DLL contains the string resource.</param>
      <param name="resid">[in] Specifies a resource ID of the string.</param>
      <param name="lcid">[in] Specifies the locale ID, LCID. For example, LCID = 1033 for English.</param>
      <param name="pbstrOut">[out] Pointer to the requested string.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSimpleBrowseComponentSet">
      <summary>Populates the component set with browsable components, such as Visual Studio projects, external .NET Framework components and type (.tlb) libraries. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleBrowseComponentSet.AddComponent(System.Guid@,Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORDATA[],Microsoft.VisualStudio.Shell.Interop.IVsNavInfo@,Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORDATA[])">
      <summary>Adds a component to a component set.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="guidLib">[in]The <see cref="T:System.Guid" /> that identifies the registered library.</param>
      <param name="pcsdComponent">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORDATA" /> value specifying the attributes of component to find.</param>
      <param name="ppRealLibNavInfo">[out] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo" /> interface of the found components.</param>
      <param name="pcsdAddedComponent">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORDATA" /> value specifying the attributes of the added component.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleBrowseComponentSet.CreateNavInfo(System.Guid@,Microsoft.VisualStudio.Shell.Interop.SYMBOL_DESCRIPTION_NODE[],System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsNavInfo@)">
      <summary>Creates <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo" /> for a symbol defined in the <paramref name="rgSymbolNodes" /> array of symbols.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="guidLib">[in]The <see cref="T:System.Guid" /> that identifies the registered library. For more information, see vsshell80.idl, VS Browse Libraries.</param>
      <param name="rgSymbolNodes">[in] An array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.SYMBOL_DESCRIPTION_NODE" /> objects describing each node in the tree.</param>
      <param name="ulcNodes">[in] The number of objects in the <paramref name="rgSymbolNodes" /> array.</param>
      <param name="ppNavInfo">The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo" /> that represents the navigation information of a symbol in the hierarchical tree of symbols.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleBrowseComponentSet.FindComponent(System.Guid@,Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORDATA[],Microsoft.VisualStudio.Shell.Interop.IVsNavInfo@,Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORDATA[])">
      <summary>Finds a component in the component set.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="guidLib">[in]The <see cref="T:System.Guid" /> that identifies the registered library. Can be GUID_NULL.</param>
      <param name="pcsdComponent">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORDATA" /> value specifying the attributes of component to find.</param>
      <param name="ppRealLibNavInfo">[out] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo" /> interface of the found components.</param>
      <param name="pcsdExistingComponent">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORDATA" /> value specifying the attributes of the found component.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleBrowseComponentSet.get_ChildListOptions(System.UInt32@)">
      <summary>Returns the options for the child list of a symbol. The list is described by the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2" /> interface.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pdwOptions">One value or a combination of <see cref="T:Microsoft.VisualStudio.Shell.Interop._BROWSE_COMPONENT_SET_OPTIONS" /> values.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleBrowseComponentSet.get_ComponentsListOptions(System.UInt32@)">
      <summary>Returns the options for the list of components.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pdwOptions">One value or a combination of <see cref="T:Microsoft.VisualStudio.Shell.Interop._BROWSE_COMPONENT_SET_OPTIONS" /> values.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleBrowseComponentSet.get_Owner(System.Object@)">
      <summary>Identifies the component set by the owner.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppOwner">An object that implements <see cref="T:VSLangProj.VSProject" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleBrowseComponentSet.get_RootNavInfo(Microsoft.VisualStudio.Shell.Interop.IVsNavInfo@)">
      <summary>Provides the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo" /> for the root node of the component set.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pRootNavInfo">The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo" /> that represents the navigation information for the root node of the component set.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleBrowseComponentSet.GetList2(System.UInt32,System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2[],Microsoft.VisualStudio.Shell.Interop.IVsObjectList2,Microsoft.VisualStudio.Shell.Interop.IVsObjectList2@)">
      <summary>Returns the requested list of symbols.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ListType">[in] One of the <see cref="Microsoft.VisualStudio.Shell.Interop._LIB_LISTTYPE2" /> values.</param>
      <param name="flags">[in] One of the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_LISTFLAGS" /> values.</param>
      <param name="pobSrch">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2" /> that describes the search criteria.</param>
      <param name="pExtraListToCombineWith">A <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2" /> list of symbols that is a part of the resulting <paramref name="ppIVsObjectList2 " />list.</param>
      <param name="ppIVsObjectList2">[out]Returns a <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2" /> list of requested items.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleBrowseComponentSet.GetSupportedCategoryFields2(System.Int32,System.UInt32@)">
      <summary>Returns the category values supported by the component set for a specified category.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="Category">A category type that the component set supports. One value or a combination of the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_CATEGORY2" /> values.</param>
      <param name="pgrfCatField">[out] A category field. See Remarks for possible values.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleBrowseComponentSet.put_ChildListOptions(System.UInt32)">
      <summary>Sets the options for the child <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2" /> list of a symbol in the hierarchical tree of symbols.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwOptions">One value or a combination of <see cref="T:Microsoft.VisualStudio.Shell.Interop._BROWSE_COMPONENT_SET_OPTIONS" /> values.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleBrowseComponentSet.put_ComponentsListOptions(System.UInt32)">
      <summary>Sets the options for the list of components.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwOptions">One value or a combination of <see cref="T:Microsoft.VisualStudio.Shell.Interop._BROWSE_COMPONENT_SET_OPTIONS" /> values.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleBrowseComponentSet.put_Owner(System.Object)">
      <summary>Sets the owner for the component set.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pOwner">An object that implements <see cref="T:VSLangProj.VSProject" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleBrowseComponentSet.put_RootNavInfo(Microsoft.VisualStudio.Shell.Interop.IVsNavInfo)">
      <summary>Sets the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo" /> for the root node of the component set.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pRootNavInfo">The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo" /> that represents the navigation information for the root node of the component set.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleBrowseComponentSet.RemoveAllComponents">
      <summary>Removes all components from the component set.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleBrowseComponentSet.RemoveComponent(Microsoft.VisualStudio.Shell.Interop.IVsNavInfo)">
      <summary>Removes a component from the component set.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pRealLibNavInfo">The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo" /> that represents the navigation information that does not include the root node navigation information. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleBrowseComponentSet.UpdateCounter(System.UInt32@)">
      <summary>Returns the current state of the set counter. Indicates that the set contents have changed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pCurUpdate">The current state of the update counter.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSimpleLibrary2">
      <summary>A simplified version of the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsLibrary2" /> interface.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleLibrary2.AddBrowseContainer(Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORDATA[],System.UInt32@,System.String@)">
      <summary>Adds a browse container to be browsed by the library.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pcdComponent">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORDATA" /> object which specifies attributes that identify the added component.</param>
      <param name="pgrfOptions">[in, out] Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_ADDREMOVEOPTIONS" /> enumeration.</param>
      <param name="pbstrComponentAdded">[out] Returns a string containing the text to display for the added component.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleLibrary2.CreateNavInfo(Microsoft.VisualStudio.Shell.Interop.SYMBOL_DESCRIPTION_NODE[],System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsNavInfo@)">
      <summary>Reserved for future use.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="rgSymbolNodes">[in] An array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.SYMBOL_DESCRIPTION_NODE" /> objects describing each node in the tree.</param>
      <param name="ulcNodes">[in] The number of objects in the <paramref name="rgSymbolNodes" /> array.</param>
      <param name="ppNavInfo">[out] Returns an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo" /> object representing the navigation information for all nodes in the tree.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleLibrary2.GetBrowseContainersForHierarchy(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSBROWSECONTAINER[],System.UInt32[])">
      <summary>Returns an array of Browse Containers that correspond to the given <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHierarchy">[in] An <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> object representing the hierarchy.</param>
      <param name="celt">[in] The number of elements in the <paramref name="rgBrowseContainers" /> array.</param>
      <param name="rgBrowseContainers">[in, out] On input, null. On output, an array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSBROWSECONTAINER" /> structures.</param>
      <param name="pcActual">[out] The actual number of containers that were returned in <paramref name="rgBrowseContainers" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleLibrary2.GetGuid(System.Guid@)">
      <summary>Returns the GUID of the library.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pguidLib">[out] Returns the GUID that identifies this library.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleLibrary2.GetLibFlags2(System.UInt32@)">
      <summary>Returns flags associated with the library.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pgrfFlags">[out] Returns a combination of flags from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_FLAGS2" /> enumeration that apply to the current library.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleLibrary2.GetList2(System.UInt32,System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2[],Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2@)">
      <summary>Returns the requested list of symbols as an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2" /> interface.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ListType">[in] Specifies list type. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_LISTTYPE2" /> enumeration.</param>
      <param name="flags">[in] Specifies flags. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_LISTFLAGS" /> enumeration.</param>
      <param name="pobSrch">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2" /> structure describing the search criteria.</param>
      <param name="ppIVsSimpleObjectList2">[out]Returns an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2" /> object that contains the list of requested items.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleLibrary2.GetSeparatorStringWithOwnership(System.String@)">
      <summary>Returns the string used to separate symbols for this type of Browse Container.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrSeparator">[out] Returns a string containing the language specific scope operator.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleLibrary2.GetSupportedCategoryFields2(System.Int32,System.UInt32@)">
      <summary>Returns the category values supported by the library for a specified category.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="Category">[in] Specifies a library's category type. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_CATEGORY2" /> enumeration. </param>
      <param name="pgrfCatField">[out] Pointer to a category field object. See Remarks for possible values.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleLibrary2.LoadState(Microsoft.VisualStudio.OLE.Interop.IStream,Microsoft.VisualStudio.Shell.Interop.LIB_PERSISTTYPE)">
      <summary>Asks the library to load its persisted global Browse Containers.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pIStream">[in] An <see cref="T:Microsoft.VisualStudio.OLE.Interop.IStream" /> object to read from.</param>
      <param name="lptType">[in] Specifies the persisted type of the library. Always <see cref="F:Microsoft.VisualStudio.Shell.Interop.LIB_PERSISTTYPE.LPT_GLOBAL" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleLibrary2.RemoveBrowseContainer(System.UInt32,System.String)">
      <summary>Removes a Browse Container being browsed by the library.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwReserved">[in] Reserved. Set this parameter to null.</param>
      <param name="pszLibName">[in] A string containing the library name.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleLibrary2.SaveState(Microsoft.VisualStudio.OLE.Interop.IStream,Microsoft.VisualStudio.Shell.Interop.LIB_PERSISTTYPE)">
      <summary>Asks the library to save its persisted global Browse Containers.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pIStream">[in] An <see cref="T:Microsoft.VisualStudio.OLE.Interop.IStream" /> object to write to.</param>
      <param name="lptType">[in] Specifies the persisted type of the library. Always <see cref="F:Microsoft.VisualStudio.Shell.Interop.LIB_PERSISTTYPE.LPT_GLOBAL" /> from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.LIB_PERSISTTYPE" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleLibrary2.UpdateCounter(System.UInt32@)">
      <summary>Returns the current change counter for the library and is used to indicate that the library contents have changed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pCurUpdate">[out] Returns the current update counter.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2">
      <summary>A simplified version of the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2" /> interface.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.CanDelete(System.UInt32,System.Int32@)">
      <summary>Returns a flag indicating if the given list item can be deleted.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="pfOK">[out] Pointer to a flag indicating whether the item can be deleted.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.CanGoToSource(System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSOBJGOTOSRCTYPE,System.Int32@)">
      <summary>Returns a flag indicating if navigation to the given list item's source is supported.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="SrcType">[in] Specifies the source type. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBJGOTOSRCTYPE" /> enumeration.</param>
      <param name="pfOK">[out] Pointer to a flag indicating whether navigation is supported.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.CanRename(System.UInt32,System.String,System.Int32@)">
      <summary>Returns a flag indicating if the given list item can be renamed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="pszNewName">[in] Pointer to a null-terminated string containing the new name.</param>
      <param name="pfOK">[out] Pointer to a flag indicating whether an item can be renamed.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.CountSourceItems(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy@,System.UInt32@,System.UInt32@)">
      <summary>Returns the hierarchy and the number of ItemIDs corresponding to source files for the given list item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="ppHier">[out] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface.</param>
      <param name="pItemid">[out] Specifies the <paramref name="itemid" /> of an item within the hierarchy. Values are described in VSITEMID.</param>
      <param name="pcItems">[out] Pointer to the count of items.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.DoDelete(System.UInt32,System.UInt32)">
      <summary>Asks the given list item to do the delete operation.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item to delete.</param>
      <param name="grfFlags">[in] Values taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSOBJOPFLAGS" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.DoDragDrop(System.UInt32,Microsoft.VisualStudio.OLE.Interop.IDataObject,System.UInt32,System.UInt32@)">
      <summary>Asks the given list item to handle a drag-and-drop operation.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="pDataObject">[in] Pointer to an IDataObject being dropped.</param>
      <param name="grfKeyState">[in] Current state of the keyboard and the mouse modifier keys.</param>
      <param name="pdwEffect">[in, out] On input, the effect being requested. On output, the effect that your object list allows.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.DoRename(System.UInt32,System.String,System.UInt32)">
      <summary>Asks the given list item to do the rename operation.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="pszNewName">[in] Pointer to a null-terminated string containing the new name.</param>
      <param name="grfFlags">[in] Flag indicating that Index is part of a multi-select. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSOBJOPFLAGS" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.EnumClipboardFormats(System.UInt32,System.UInt32,System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSOBJCLIPFORMAT[],System.UInt32[])">
      <summary>Asks the given list item to enumerate its supported clipboard formats.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="grfFlags">[in] Specifies multi-selection. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSOBJCFFLAGS" /> enumeration.</param>
      <param name="celt">[in] Specifies the element count of <paramref name="rgcfFormats" />.</param>
      <param name="rgcfFormats">[in, out] Specifies an array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBJCLIPFORMAT" /> structures defining the formats supported.</param>
      <param name="pcActual">[out] Pointer to a count of formats in the <paramref name="rgcfformats" /> array actually returned.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.FillDescription2(System.UInt32,System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsObjectBrowserDescription3)">
      <summary>Asks the list item to provide description text to be used in the object browser.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="grfOptions">[in] Specifies description options. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSOBJDESCOPTIONS" /> enumeration</param>
      <param name="pobDesc">[in] Specifies an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsObjectBrowserDescription3" /> interface.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.GetBrowseObject(System.UInt32,System.Object@)">
      <summary>Returns a pointer to the property browse IDispatch for the given list item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="ppdispBrowseObj">[out] Pointer to an IDispatch object that is used to populate the Properties window.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.GetCapabilities2(System.UInt32@)">
      <summary>Returns an object list's capabilities.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pgrfCapabilities">[out] Specifies an object list's capabilities. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_LISTCAPABILITIES" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.GetCategoryField2(System.UInt32,System.Int32,System.UInt32@)">
      <summary>Returns the value for the specified category for the given list item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="Category">[in] Specifies the category of interest. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.LIB_CATEGORY" /> enumeration.</param>
      <param name="pfCatField">[out] Pointer to a variable holding the value returned.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.GetClipboardFormat(System.UInt32,System.UInt32,Microsoft.VisualStudio.OLE.Interop.FORMATETC[],Microsoft.VisualStudio.OLE.Interop.STGMEDIUM[])">
      <summary>Asks the given list item to renders a specific clipboard format that it supports.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="grfFlags">[in] Specifies multi-selection. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSOBJCFFLAGS" /> enumeration.</param>
      <param name="pFormatetc">[in] Pointer to a <see cref="T:Microsoft.VisualStudio.OLE.Interop.FORMATETC" /> structure containing clipboard format information.</param>
      <param name="pMedium">[in] Pointer to a <see cref="T:Microsoft.VisualStudio.OLE.Interop.STGMEDIUM" /> structure indicating the data transfer medium.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.GetContextMenu(System.UInt32,System.Guid@,System.Int32@,Microsoft.VisualStudio.OLE.Interop.IOleCommandTarget@)">
      <summary>Allows the list to provide a different context menu and IOleCommandTarget for the given list item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="pclsidActive">[out] Specifies the CLSID of the menu group containing your menu.</param>
      <param name="pnMenuId">[out] Pointer to an integer containing the menu id.</param>
      <param name="ppCmdTrgtActive">[out] Pointer to the list's or the library's IOleCommandTarget interface.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.GetDisplayData(System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSTREEDISPLAYDATA[])">
      <summary>Retrieves data to draw the requested tree list item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the node of interest.</param>
      <param name="pData">[out] Pointer to a <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSTREEDISPLAYDATA" /> structure containing the display data.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.GetExpandable3(System.UInt32,System.UInt32,System.Int32@)">
      <summary>Returns a flag indicating whether the given list item is expandable.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="ListTypeExcluded">[in] Specifies the list types to be excluded. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_LISTTYPE" /> enumeration. This is primarily to remove LLT_MEMBERS from consideration in object browser, where they are shown in a separate pane.</param>
      <param name="pfExpandable">[out] Pointer to a flag indicating expandability.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.GetExtendedClipboardVariant(System.UInt32,System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSOBJCLIPFORMAT[],System.Object@)">
      <summary>Asks the given list item to renders a specific clipboard format as a variant.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="grfFlags">[in] Specifies multi-selection. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSOBJCFFLAGS" /> enumeration.</param>
      <param name="pcfFormat">[in] Specifies a <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBJCLIPFORMAT" /> structure defining the format requested.</param>
      <param name="pvarFormat">[out] Specifies a pointer to a variant where you render the data. The environment frees the variant when it is done with it.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.GetFlags(System.UInt32@)">
      <summary>Returns the attributes of the current tree list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pFlags">[out] Pointer to a variable indicating attributes of the current tree list. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSTREEFLAGS" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.GetItemCount(System.UInt32@)">
      <summary>Returns the number of items in the current tree list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pCount">[out] Pointer to the count of the tree list items.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.GetList2(System.UInt32,System.UInt32,System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2[],Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2@)">
      <summary>Returns a child <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2" /> for the specified category.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="ListType">[in] Specifies the type of list being requested. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_LISTTYPE" /> enumeration.</param>
      <param name="flags">[in] Specifies the flags that control the request for object list information. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_LISTFLAGS" /> enumeration.</param>
      <param name="pobSrch">[in] Unused. Should be ignored.</param>
      <param name="ppIVsSimpleObjectList2">[out] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2" /> interface of the returned child list.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.GetMultipleSourceItems(System.UInt32,System.UInt32,System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSITEMSELECTION[])">
      <summary>Returns the ItemID corresponding to source files for the given list item if more than one.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="grfGSI">[in] Flag providing information about how the selected items should be returned. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSGSIFLAGS" /> enumeration.</param>
      <param name="cItems">[in] The number of items returned in <paramref name="rgItemSel" />.</param>
      <param name="rgItemSel">[out] Array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSITEMSELECTION" /> structures that contain an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> pointer and item identifier for each selected item.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.GetNavInfo(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsNavInfo@)">
      <summary>Reserved for future use.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] The index of the item for which to get navigation information.</param>
      <param name="ppNavInfo">[out] Returns an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo" /> object that contains the requested information.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.GetNavInfoNode(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsNavInfoNode@)">
      <summary>Reserved for future use.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] The index of the item for which to get navigation information.</param>
      <param name="ppNavInfoNode">[out] Returns an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfoNode" /> object that contains the requested information.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.GetProperty(System.UInt32,System.Int32,System.Object@)">
      <summary>Returns the specified property for the specified list item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] The index of the item for which to get a property.</param>
      <param name="propid">[in] A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSOBJLISTELEMPROPID" /> enumeration specifying the property to get.</param>
      <param name="pvar">[out] Returns a VARIANT object containing the requested value.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.GetSourceContextWithOwnership(System.UInt32,System.String@,System.UInt32@)">
      <summary>Returns a source filename and line number for the given list item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="pbstrFilename">[out] Returns a string containing the file name.</param>
      <param name="pulLineNum">[out] Returns a line number associated with the list item.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.GetTextWithOwnership(System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSTREETEXTOPTIONS,System.String@)">
      <summary>Returns the text representations for the requested tree list item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the zero based index of the item of interest.</param>
      <param name="tto">[in] Specifies the text type being requested. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSTREETEXTOPTIONS" /> enumeration.</param>
      <param name="pbstrText">[out] Returns the text for the specified tree list item.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.GetTipTextWithOwnership(System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSTREETOOLTIPTYPE,System.String@)">
      <summary>Returns the tool tip text for the requested tree list item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the node of interest.</param>
      <param name="eTipType">[in] Specifies the type of tool tip text. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSTREETOOLTIPTYPE" /> enumeration.</param>
      <param name="pbstrText">[out] Returns a string containing the tree list item's tip text.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.GetUserContext(System.UInt32,System.Object@)">
      <summary>Returns the user context object for the given list item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="ppunkUserCtx">[out] Pointer to a context bag returned as an IUnknown interface.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.GoToSource(System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSOBJGOTOSRCTYPE)">
      <summary>Navigates to the source for the given list item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="SrcType">[in] Specifies the source type. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBJGOTOSRCTYPE" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.LocateNavInfoNode(Microsoft.VisualStudio.Shell.Interop.IVsNavInfoNode,System.UInt32@)">
      <summary>Reserved for future use.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pNavInfoNode">[in] An <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfoNode" /> object representing the navigation information for a node.</param>
      <param name="pulIndex">[out] Returns the index of the list item that corresponds to the specified navigation node.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.OnClose(Microsoft.VisualStudio.Shell.Interop.VSTREECLOSEACTIONS[])">
      <summary>Notifies the current tree list that it is being closed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ptca">[out] Specifies to the tree view the action to take when closing this tree list. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSTREECLOSEACTIONS" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.QueryDragDrop(System.UInt32,Microsoft.VisualStudio.OLE.Interop.IDataObject,System.UInt32,System.UInt32@)">
      <summary>Returns a flag indicating whether the given list item supports a drag-and-drop operation.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="pDataObject">[in] Pointer to an IDataObject being dropped.</param>
      <param name="grfKeyState">[in] Current state of the keyboard and the mouse modifier keys.</param>
      <param name="pdwEffect">[in, out] On input, the effect being requested. On output, the effect that your object list allows.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.ShowHelp(System.UInt32)">
      <summary>Allows the list to display help for the given list item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.UpdateCounter(System.UInt32@)">
      <summary>Returns the current change counter for the tree list, and is used to indicate that the list contents have changed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pCurUpdate">[out] Pointer to the update counter of the current tree list.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSimplePreviewChangesList">
      <summary>This is a simplified version of the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesList" /> interface.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimplePreviewChangesList.GetDisplayData(System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSTREEDISPLAYDATA[])">
      <summary>Returns display data for the specified item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] The index of the item for which to get the display data.</param>
      <param name="pData">[in, out] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSTREEDISPLAYDATA" /> structure that is filled in with the requested data.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimplePreviewChangesList.GetExpandable(System.UInt32,System.Int32@)">
      <summary>Determines if the specified item can be expanded.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] The index of the item.</param>
      <param name="pfExpandable">[out] Returns nonzero (TRUE) if the item can be expanded; otherwise, returns zero (FALSE).</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimplePreviewChangesList.GetExpandedList(System.UInt32,System.Int32@,Microsoft.VisualStudio.Shell.Interop.IVsSimplePreviewChangesList@)">
      <summary>Returns the child list of the specified item that has been expanded in the tree view.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] The index of the item for which to get its children.</param>
      <param name="pfCanRecurse">[out] Returns nonzero (TRUE) if the child list can be recursively called to access its children; otherwise, returns zero (FALSE).</param>
      <param name="ppIVsSimplePreviewChangesList">[out] Returns an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSimplePreviewChangesList" /> object that contains the requested children elements.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimplePreviewChangesList.GetItemCount(System.UInt32@)">
      <summary>Returns the number of items in the preview list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pCount">[out] Returns the number of items in the preview list.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimplePreviewChangesList.GetTextWithOwnership(System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSTREETEXTOPTIONS,System.String@)">
      <summary>Returns the specified text for the specified item in the preview list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] The index of the item for which to get text.</param>
      <param name="tto">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSTREETEXTOPTIONS" /> structure describing what kind of text to return.</param>
      <param name="pbstrText">[out] Returns a string containing the requested text.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimplePreviewChangesList.GetTipTextWithOwnership(System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSTREETOOLTIPTYPE,System.String@)">
      <summary>Returns the ToolTip text for the specified item in the preview list.</summary>
      <returns>f the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] The index of the item for which to get the ToolTip text.</param>
      <param name="eTipType">[in] A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSTREETOOLTIPTYPE" /> enumeration specifying the kind of ToolTip text to return.</param>
      <param name="pbstrText">[out] Returns a string containing the ToolTip text.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimplePreviewChangesList.LocateExpandedList(Microsoft.VisualStudio.Shell.Interop.IVsSimplePreviewChangesList,System.UInt32@)">
      <summary>Given a child list, locate its parent item in the preview list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pIVsSimplePreviewChangesListChild">[in] An <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSimplePreviewChangesList" /> object that contains the child list.</param>
      <param name="piIndex">[out] Returns the index of the item that is the parent of the child list.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimplePreviewChangesList.OnClose(Microsoft.VisualStudio.Shell.Interop.VSTREECLOSEACTIONS[])">
      <summary>Called when this preview list is closed (unexpanded).</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ptca">[out] Returns a value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSTREECLOSEACTIONS" /> enumeration describing what to do with the children of this item.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimplePreviewChangesList.OnRequestSource(System.UInt32,System.Object)">
      <summary>Loads the source for the specified preview item and displays it in the given text view.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] The index of the item to display.</param>
      <param name="pIUnknownTextView">[in] An IUnknown object that represents the text view. This is typically an <see cref="T:Microsoft.VisualStudio.TextManager.Interop.IVsTextView" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimplePreviewChangesList.ToggleState(System.UInt32,System.UInt32@)">
      <summary>Toggles the checked state of the specified item in the preview list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] The index of the item for which to change the checked state.</param>
      <param name="ptscr">[out] Returns a value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSTREESTATECHANGEREFRESH" /> enumeration indicating whether any children of this item also need to be refreshed in the display.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSingleFileGeneratorFactory">
      <summary>Manipulates the generator prog ID for a single type of file.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSingleFileGeneratorFactory.CreateGeneratorInstance(System.String,System.Int32@,System.Int32@,System.Int32@,Microsoft.VisualStudio.Shell.Interop.IVsSingleFileGenerator@)">
      <summary>Creates a generator instance.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="wszProgId">[in] The prog ID of the generator factory.</param>
      <param name="pbGeneratesDesignTimeSource">[out] Boolean value; true if the factory generates source at design time.</param>
      <param name="pbGeneratesSharedDesignTimeSource">[out] Boolean value; true if the factory generates shared source at design time.</param>
      <param name="pbUseTempPEFlag">[out] Boolean value; true if the factory uses temporary PE flags.</param>
      <param name="ppGenerate">[out] The GUID of the factory.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSingleFileGeneratorFactory.GetDefaultGenerator(System.String,System.String@)">
      <summary>Gets the default generator prog ID for a specified file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="wszFilename">[in] The file for which to get the generator prog ID.</param>
      <param name="pbstrGenProgID">[out] The default generator prog ID.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSingleFileGeneratorFactory.GetGeneratorInformation(System.String,System.Int32@,System.Int32@,System.Int32@,System.Guid@)">
      <summary>Gets information about a generator factory.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="wszProgId">[in] The prog ID of the generator factory.</param>
      <param name="pbGeneratesDesignTimeSource">[out] Boolean value; true if the factory generates source at design time.</param>
      <param name="pbGeneratesSharedDesignTimeSource">[out] Boolean value; true if the factory generates shared source at design time.</param>
      <param name="pbUseTempPEFlag">[out] Boolean value; true if the factory uses temporary PE flags.</param>
      <param name="pguidGenerator">[out] The GUID of the factory.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSmartOpenScope">
      <summary>Opens an existing assembly and maps the assembly's metadata to memory. The interface provides smart opening, automatically choosing between opening the scope with or without locking. You can get an instance of this interface using the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsSmartOpenScope" /> (SID_SVsSmartOpenScope) service.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSmartOpenScope.OpenScope(System.String,System.UInt32,System.Guid@,System.Object@)">
      <summary>Open a scope and return a requested interface on it.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="wszScope">[in] String containing the name of the file.</param>
      <param name="dwOpenFlags">[in] Bit flags indicating how to open the file. Constructed using values from the CorOpenFlags Enumeration.</param>
      <param name="riid">[in] Pointer to the GUID of the desired return interface.</param>
      <param name="ppIUnk">[out] Pointer to the requested interface on the scope.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSolution3">
      <summary>Creates, updates, and saves project files.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolution3.CheckForAndSaveDeferredSaveSolution(System.Int32,System.String,System.String,System.UInt32)">
      <summary>Checks if the solution is in the deferred-save state.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="fCloseSolution">[in] Boolean value; specifies whether to close the solution after it is saved.</param>
      <param name="pszMessage">[in] A string specifying the text displayed when the user is prompted to save or discard changes.</param>
      <param name="pszTitle">[in] A string specifying the title of the dialog box prompting the user to save or discard changes.</param>
      <param name="grfFlags">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSSAVEDEFERREDSAVEFLAGS" /> value specifying save options.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolution3.CreateNewProjectViaDlgEx(System.String,System.String,System.String,System.String,System.String,System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsBrowseProjectLocation)">
      <summary>Opens the New Project dialog and expands specified nodes.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszDlgTitle">[in] Title of the dialog box.</param>
      <param name="pszTemplateDir">[in] Location of the template folder.</param>
      <param name="pszExpand">[in] The node to expand.</param>
      <param name="pszSelect">[in] The node to select.</param>
      <param name="pszHelpTopic">[in] Help topic ID.</param>
      <param name="cnpvdeFlags">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSCREATENEWPROJVIADLGEXFLAGS" /> value specifying project creation options.</param>
      <param name="pBrowse">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsBrowseProjectLocation" /> specifying a project browser location. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolution3.GetUniqueUINameOfProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.String@)">
      <summary>Generates a unique name for a project.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code. </returns>
      <param name="pHierarchy">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> for the project hierarchy.</param>
      <param name="pbstrUniqueName">[out] The unique UI name for the project.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolution3.UpdateProjectFileLocationForUpgrade(System.String,System.String)">
      <summary>Notifies a solution to update project file locations.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code. </returns>
      <param name="pszCurrentLocation">[in] The current project file location.</param>
      <param name="pszUpgradedLocation">[in] The updated project file location.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSolutionBuildManager3">
      <summary>Provides access to <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsUpdateSolutionEvents3" /> events.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionBuildManager3.AdviseUpdateSolutionEvents3(Microsoft.VisualStudio.Shell.Interop.IVsUpdateSolutionEvents3,System.UInt32@)">
      <summary>Establishes client notification of solution events.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pIVsUpdateSolutionEvents3">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents3" /> interface on the object requesting notification of solution events.</param>
      <param name="pdwCookie">[out] Pointer to a double word containing the cookie.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionBuildManager3.AreProjectsUpToDate(System.UInt32)">
      <summary>Determines if projects are up to date.</summary>
      <returns>If projects are up to date, returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If one or more projects are not, returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_FALSE" />.</returns>
      <param name="dwOptions">[Options governing the up-to-date check. Currently, there are no defined options and <paramref name="dwOptions" /> is always zero.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionBuildManager3.HasHierarchyChangedSinceLastDTEE">
      <summary>Determines whether the hierarchy has changed since last design time expression evaluation.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionBuildManager3.QueryBuildManagerBusyEx(System.UInt32@)">
      <summary>Determines if the build manager is busy.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pdwBuildManagerOperation">[out] Pointer to a flag indicating that the build manager is busy.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionBuildManager3.UnadviseUpdateSolutionEvents3(System.UInt32)">
      <summary>Removes the caller from the list of listeners for <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsUpdateSolutionEvents3" /> events.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwCookie">[in] Double word containing the cookie received from a previous call to <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionBuildManager3.AdviseUpdateSolutionEvents(Microsoft.VisualStudio.Shell.Interop.IVsUpdateSolutionEvents,System.UInt32@)" />.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents4">
      <summary>Listening interface that monitors any notifications of changes to the solution.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents4.OnAfterAsynchOpenProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.Int32)">
      <summary>Notifies listening clients that a project has been opened asynchronously.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHierarchy">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface of the project being loaded.</param>
      <param name="fAdded">[in] true if the project is added to the solution after the solution is opened. false if the project is added to the solution while the solution is being opened.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents4.OnAfterChangeProjectParent(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)">
      <summary>Notifies listening clients that a project parent has changed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHierarchy">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface of the changed project parent.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents4.OnAfterRenameProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)">
      <summary>Notifies listening clients that a project has been renamed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHierarchy">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface of the renamed project.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents4.OnQueryChangeProjectParent(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.Int32@)">
      <summary>Queries listening clients as to whether a parent project has changed.</summary>
      <param name="pHierarchy">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface of the project parent.</param>
      <param name="pNewParentHier">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface of the changed project parent.</param>
      <param name="pfCancel">[in, out] true if the client vetoed the closing of the project. false if the client approved the closing of the project.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEventsProjectUpgrade">
      <summary>Provides a method called after the upgrade of a project.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEventsProjectUpgrade.OnAfterUpgradeProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.String,Microsoft.VisualStudio.Shell.Interop.SYSTEMTIME,Microsoft.VisualStudio.Shell.Interop.IVsUpgradeLogger)">
      <summary>Defines a method to call after a project upgrade.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHierarchy">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface of the project.</param>
      <param name="fUpgradeFlag">[in] Integer. Flag indicating the nature of the upgrade. Values taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSPPROJECTUPGRADEVIAFACTORYFLAGS" /> enumeration. Will only be PUVFF_COPYUPGRADE, PUVFF_SXSBACKUP, or PUVFF_COPYBACKUP.</param>
      <param name="bstrCopyLocation">[in] String containing the location of the copy upgrade (PUVFF_COPYUPGRADE) or back up copy (PUVFF_COPYBACKUP).</param>
      <param name="stUpgradeTime">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.SYSTEMTIME" /> value. The time the upgrade was done.</param>
      <param name="pLogger">[in] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsUpgradeLogger" /> interface to use for logging upgrade messages.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSpecifyProjectDesignerPages">
      <summary>Supports editing project properties with an editor (project designer) rather than through the Project Properties dialog. Implemented on the browse object of the project instead of <see cref="T:Microsoft.VisualStudio.OLE.Interop.ISpecifyPropertyPages" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSpecifyProjectDesignerPages.GetProjectDesignerPages(Microsoft.VisualStudio.OLE.Interop.CAUUID[])">
      <summary>Gets the pages of the project designer.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pPages">[out] Pointer to a counted array of GUID types (<see cref="T:Microsoft.VisualStudio.OLE.Interop.CAUUID" />) specifying the designer pages.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSQLCLRReferences">
      <summary>Manages references to SQL procedures compiled into assemblies. Handles the AddNewReference dialog as well as coordinating the local cache and SQL Server. You can get an instance of the interface from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsSQLCLRReferences" /> (SID_SVsSQLCLRReferences) service.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSQLCLRReferences.InvokeNewReferencesDlg(System.Object,System.Object,System.UInt32,System.String,System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsComponentUser)">
      <summary>Invokes the SQL CLR Add New Reference dialog.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pConnection">[in] Pointer to the <see cref="T:IUnknown" /> interface of the connection object.</param>
      <param name="pAssemblySupport">[in] Pointer to the <see cref="T:IUnknown" /> interface of the assembly supporting the dialog.</param>
      <param name="dwAddNewReferenceFlags">[in] Integer. Flags specifying add options. Values taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._SqlAddNewReferenceFlags" /> enumeration.</param>
      <param name="szLocalCache">[in] String containing the path to a file to use for a cache.</param>
      <param name="dwProjectPermisionLevel">[in] Integer containing a value from the __SQL_ASSEMBLY_PERMISSION_SET enumeration. Indicates the permission level on the assembly: SQLAP_SAFE (1), SQLAP_EXTERNAL (2), or SQLAP_UNRESTRICTED (3).</param>
      <param name="pComponentUserCallback">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsComponentUser" /> to use for callbacks.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSQLCLRReferences.UpdateReferences(System.Object,System.Object,System.UInt32,System.UInt32,System.String[],System.String,System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsSQLCLRReferencesUpdateCallback)">
      <summary>Use to synchronizes the local cache and the server.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pConnection">[in] Pointer to the <see cref="T:IUnknown" /> interface of the connection object.</param>
      <param name="pAssemblySupport">[in] Pointer to the <see cref="T:IUnknown" /> interface of the assembly.</param>
      <param name="dwReferenceUpdateFlags">[in] Integer. Flags specifying update options. Taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._SqlReferenceUpdateFlags" /> enumeration.</param>
      <param name="cAssemblyCount">[in] Integer. The number of assembly names in rgszAssemblies.</param>
      <param name="rgszAssemblies">[in] Array of strings containing the names of the assemblies to update.</param>
      <param name="szLocalCache">[in] String containing the path to a file to use for a cache.</param>
      <param name="dwProjectPermisionLevel">[in] Integer containing a value from the __SQL_ASSEMBLY_PERMISSION_SET enumeration. Indicates the permission level on the assembly: SQLAP_SAFE (1), SQLAP_EXTERNAL (2), or SQLAP_UNRESTRICTED (3).</param>
      <param name="pCallBack">[in] Pointer to a <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSQLCLRReferencesUpdateCallback" /> interface to use for callbacks.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSQLCLRReferencesUpdateCallback">
      <summary>Defines the callback function for reporting changes in SQL procedures compiled into assemblies.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSQLCLRReferencesUpdateCallback.UpdateResult(System.String,System.UInt32,System.Int32,Microsoft.VisualStudio.Shell.Interop.IErrorInfo,System.UInt32)">
      <summary>Reports the result of updating an assembly.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="szAssembly">[in] String containing the name of the assembly updated.</param>
      <param name="dwPermisionLevel">[in] Integer containing a value from the __SQL_ASSEMBLY_PERMISSION_SET enumeration. Indicates the permission level on the assembly: SQLAP_SAFE (1), SQLAP_EXTERNAL (2), or SQLAP_UNRESTRICTED (3).</param>
      <param name="hrUpdateResult">[in] The HRESULT returned by the update operation.</param>
      <param name="pErrorInfo">[in] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IErrorInfo" /> interface reporting any error information.</param>
      <param name="updateAction">[in] Integer—the action taken. A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._SqlReferenceUpdateAction" /> enumeration.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsStartPageDownload"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsStartPageDownload.StartDownloadService"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsStartPageDownload.StopDownloadService"></member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsStrongNameKeys">
      <summary>Provides common strong name key utility methods. You can get an instance of this interface from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsStrongNameKeys" /> (SID_SVsStrongNameKeys) service.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsStrongNameKeys.ChangePassword(System.String,System.String,System.String)">
      <param name="szPfxFile"></param>
      <param name="szOldPassword"></param>
      <param name="szNewPassword"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsStrongNameKeys.CreateNewKey(System.String,System.String@)">
      <param name="szFileLocation"></param>
      <param name="pbstrFilename"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsStrongNameKeys.CreateNewKeyNoUI(System.String,System.String)">
      <param name="szFile"></param>
      <param name="szPassword"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsStrongNameKeys.CreateNewKeyWithName(System.String,System.String,System.String)">
      <param name="szFile"></param>
      <param name="szPassword"></param>
      <param name="szSubjectName"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsStrongNameKeys.EnumContainers(System.String,Microsoft.VisualStudio.Shell.Interop.IVsEnumCryptoProviderContainers@)">
      <param name="szProvider"></param>
      <param name="ppEnumContainers"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsStrongNameKeys.EnumProviders(Microsoft.VisualStudio.Shell.Interop.IVsEnumCryptoProviders@)">
      <param name="ppEnumProviders"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsStrongNameKeys.ImportKeyFromPFX(System.String,System.String@)">
      <param name="szFile"></param>
      <param name="pbstrContainerName"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSupportCodeDefView">
      <summary>Indicates that the implementing doc data object supports the CodeDefinitionView window.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSupportItemHandoff2">
      <summary>Gives the receiver project a chance to do any necessary processing of the document to be handed off. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSupportItemHandoff2.OnBeforeHandoffItem(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsProject3)">
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="itemid">[in]<paramref name=" itemid" /> in project where document will be removed</param>
      <param name="pProjDest">[in] project to which document will be transferred</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsTaskItem3">
      <summary>Adds content to the TaskList window.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskItem3.GetColumnValue(System.Int32,System.UInt32@,System.UInt32@,System.Object@,System.String@)">
      <summary>Returns the value of this task for a given column.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="iField">[In] An integer containing the Field Column to be used.</param>
      <param name="ptvtType">[Out] A pointer to an object of type <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSTASKVALUETYPE" />.</param>
      <param name="ptvfFlags">[Out] A pointer to an object of type <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSTASKVALUEFLAGS" />.</param>
      <param name="pvarValue">[Out] A pointer to an object of type VARIANT.</param>
      <param name="pbstrAccessibilityName">[Out] A pointer to a string containing the Accessibility Name.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskItem3.GetDefaultEditField(System.Int32@)">
      <summary>If the user starts editing the task in a way that does not select a specific field, this method specifies the field in which editing will begin.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="piField">[Out] A pointer to an integer containing the field number from which editing will begin.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskItem3.GetEnumCount(System.Int32,System.Int32@)">
      <summary>Given a column field, returns the number of possible values this task may have for that column.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="iField">[In] An integer value.</param>
      <param name="pnValues">[Out] A pointer to an integer value.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskItem3.GetEnumValue(System.Int32,System.Int32,System.Object@,System.String@)">
      <summary>Given a column field and value index, returns the indexed value for this task and column.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="iField">[In] An integer value containing the column field.</param>
      <param name="iValue">[In] An integer value index.</param>
      <param name="pvarValue">[Out] A pointer to a value of type VARIANT.</param>
      <param name="pbstrAccessibilityName">[out] A pointer to a string containing the Accessibility Name.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskItem3.GetNavigationStatusText(System.String@)">
      <summary>This method returns the text that will be placed on the status bar when the task is successfully navigated to.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrText">[Out] A pointer to the string containing the text.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskItem3.GetSurrogateProviderGuid(System.Guid@)">
      <summary>If the task implements this method, it will be listed under the surrogate provider in the list, as if it belongs to the surrogate provider.  This overrides the surrogate provider specified by IVsTaskProvider.GetSurrogateProviderGuid, if any.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pguidProvider">[Out] A pointer to a Provider Identifier of type GUID.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskItem3.GetTaskName(System.String@)">
      <summary>Returns a string naming or describing the task.  Used for accessibility.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrName">[Out] A pointer to a string naming or describing the task.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskItem3.GetTaskProvider(Microsoft.VisualStudio.Shell.Interop.IVsTaskProvider3@)">
      <summary>Gets the provider that owns this item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppProvider">[Out] A pointer to a pointer to an object of type IVsTaskProvider3.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskItem3.GetTipText(System.Int32,System.String@)">
      <summary>Returns the tip text for the given field.  If this method fails or returns an empty string, the task list will use the text of the item itself (if any) or the accessibility name as the tip text.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="iField">[In] An integer value representing the field column to use for the Tip Text.</param>
      <param name="pbstrTipText">[Out] A pointer to a string containing the Tip Text.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskItem3.IsDirty(System.Int32@)">
      <summary>Determines if a task list item has changed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pfDirty"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskItem3.OnLinkClicked(System.Int32,System.Int32)">
      <summary>If the user clicks on an underlined link in a value of type TVT_LINKTEXT, this method is called with the column field and the link index (the first link in a given value is link 0). The task item should take whatever action is appropriate.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="iField">[In] An integer value representing the Field Column to use.</param>
      <param name="iLinkIndex">[In] An integer value containing the Link Index.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskItem3.SetColumnValue(System.Int32,System.Object@)">
      <summary>When the user edits a task, this method is called for each edited column once the edit is committed.  </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="iField">[In] An integer containing the Field Column to be used.</param>
      <param name="pvarValue">[In] A pointer to an object of type VARIANT.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsTaskList2">
      <summary>Manipulates items in the TaskList window. Implemented by the environment, although you can write your own implementation to provide custom task items.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskList2.BeginTaskEdit(Microsoft.VisualStudio.Shell.Interop.IVsTaskItem,System.Int32)">
      <summary>Scrolls if necessary to make the task visible, selects it, and enters edit mode with the focus on the specified field.  If the task does not belong to the active provider or the specified field is not a visible, editable field, the method will fail.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pItem">[In] A pointer to an object of type <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsTaskItem" />.</param>
      <param name="iFocusField">[In] An integer value containing the specified Field Index.</param>
    </member>
    <member name=