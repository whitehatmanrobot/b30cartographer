            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR __RPC_FAR *pbs) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE DoIt( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct FolderItemVerbVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            FolderItemVerb __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            FolderItemVerb __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            FolderItemVerb __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            FolderItemVerb __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            FolderItemVerb __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            FolderItemVerb __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            FolderItemVerb __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Application )( 
            FolderItemVerb __RPC_FAR * This,
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Parent )( 
            FolderItemVerb __RPC_FAR * This,
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Name )( 
            FolderItemVerb __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pbs);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DoIt )( 
            FolderItemVerb __RPC_FAR * This);
        
        END_INTERFACE
    } FolderItemVerbVtbl;

    interface FolderItemVerb
    {
        CONST_VTBL struct FolderItemVerbVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define FolderItemVerb_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define FolderItemVerb_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define FolderItemVerb_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define FolderItemVerb_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define FolderItemVerb_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define FolderItemVerb_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define FolderItemVerb_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define FolderItemVerb_get_Application(This,ppid)	\
    (This)->lpVtbl -> get_Application(This,ppid)

#define FolderItemVerb_get_Parent(This,ppid)	\
    (This)->lpVtbl -> get_Parent(This,ppid)

#define FolderItemVerb_get_Name(This,pbs)	\
    (This)->lpVtbl -> get_Name(This,pbs)

#define FolderItemVerb_DoIt(This)	\
    (This)->lpVtbl -> DoIt(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE FolderItemVerb_get_Application_Proxy( 
    FolderItemVerb __RPC_FAR * This,
    /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid);


void __RPC_STUB FolderItemVerb_get_Application_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE FolderItemVerb_get_Parent_Proxy( 
    FolderItemVerb __RPC_FAR * This,
    /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid);


void __RPC_STUB FolderItemVerb_get_Parent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE FolderItemVerb_get_Name_Proxy( 
    FolderItemVerb __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pbs);


void __RPC_STUB FolderItemVerb_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE FolderItemVerb_DoIt_Proxy( 
    FolderItemVerb __RPC_FAR * This);


void __RPC_STUB FolderItemVerb_DoIt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __FolderItemVerb_INTERFACE_DEFINED__ */


#ifndef __FolderItemVerbs_INTERFACE_DEFINED__
#define __FolderItemVerbs_INTERFACE_DEFINED__

/* interface FolderItemVerbs */
/* [object][dual][oleautomation][helpstring][uuid] */ 


EXTERN_C const IID IID_FolderItemVerbs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1F8352C0-50B0-11CF-960C-0080C7F4EE85")
    FolderItemVerbs : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long __RPC_FAR *plCount) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [optional][in] */ VARIANT index,
            /* [retval][out] */ FolderItemVerb __RPC_FAR *__RPC_FAR *ppid) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE _NewEnum( 
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunk) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct FolderItemVerbsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            FolderItemVerbs __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            FolderItemVerbs __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            FolderItemVerbs __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            FolderItemVerbs __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            FolderItemVerbs __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            FolderItemVerbs __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            FolderItemVerbs __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Count )( 
            FolderItemVerbs __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *plCount);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Application )( 
            FolderItemVerbs __RPC_FAR * This,
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Parent )( 
            FolderItemVerbs __RPC_FAR * This,
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Item )( 
            FolderItemVerbs __RPC_FAR * This,
            /* [optional][in] */ VARIANT index,
            /* [retval][out] */ FolderItemVerb __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *_NewEnum )( 
            FolderItemVerbs __RPC_FAR * This,
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunk);
        
        END_INTERFACE
    } FolderItemVerbsVtbl;

    interface FolderItemVerbs
    {
        CONST_VTBL struct FolderItemVerbsVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define FolderItemVerbs_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define FolderItemVerbs_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define FolderItemVerbs_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define FolderItemVerbs_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define FolderItemVerbs_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define FolderItemVerbs_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define FolderItemVerbs_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define FolderItemVerbs_get_Count(This,plCount)	\
    (This)->lpVtbl -> get_Count(This,plCount)

#define FolderItemVerbs_get_Application(This,ppid)	\
    (This)->lpVtbl -> get_Application(This,ppid)

#define FolderItemVerbs_get_Parent(This,ppid)	\
    (This)->lpVtbl -> get_Parent(This,ppid)

#define FolderItemVerbs_Item(This,index,ppid)	\
    (This)->lpVtbl -> Item(This,index,ppid)

#define FolderItemVerbs__NewEnum(This,ppunk)	\
    (This)->lpVtbl -> _NewEnum(This,ppunk)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE FolderItemVerbs_get_Count_Proxy( 
    FolderItemVerbs __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *plCount);


void __RPC_STUB FolderItemVerbs_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE FolderItemVerbs_get_Application_Proxy( 
    FolderItemVerbs __RPC_FAR * This,
    /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid);


void __RPC_STUB FolderItemVerbs_get_Application_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE FolderItemVerbs_get_Parent_Proxy( 
    FolderItemVerbs __RPC_FAR * This,
    /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid);


void __RPC_STUB FolderItemVerbs_get_Parent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE FolderItemVerbs_Item_Proxy( 
    FolderItemVerbs __RPC_FAR * This,
    /* [optional][in] */ VARIANT index,
    /* [retval][out] */ FolderItemVerb __RPC_FAR *__RPC_FAR *ppid);


void __RPC_STUB FolderItemVerbs_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE FolderItemVerbs__NewEnum_Proxy( 
    FolderItemVerbs __RPC_FAR * This,
    /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunk);


void __RPC_STUB FolderItemVerbs__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __FolderItemVerbs_INTERFACE_DEFINED__ */


#ifndef __Folder_INTERFACE_DEFINED__
#define __Folder_INTERFACE_DEFINED__

/* interface Folder */
/* [object][dual][oleautomation][helpstring][uuid] */ 


EXTERN_C const IID IID_Folder;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("BBCBDE60-C3FF-11CE-8350-444553540000")
    Folder : public IDispatch
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Title( 
            /* [retval][out] */ BSTR __RPC_FAR *pbs) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ParentFolder( 
            /* [retval][out] */ Folder __RPC_FAR *__RPC_FAR *ppsf) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Items( 
            /* [retval][out] */ FolderItems __RPC_FAR *__RPC_FAR *ppid) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ParseName( 
            /* [in] */ BSTR bName,
            /* [retval][out] */ FolderItem __RPC_FAR *__RPC_FAR *ppid) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE NewFolder( 
            /* [in] */ BSTR bName,
            /* [optional][in] */ VARIANT vOptions) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE MoveHere( 
            /* [in] */ VARIANT vItem,
            /* [optional][in] */ VARIANT vOptions) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CopyHere( 
            /* [in] */ VARIANT vItem,
            /* [optional][in] */ VARIANT vOptions) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetDetailsOf( 
            /* [in] */ VARIANT vItem,
            /* [in] */ int iColumn,
            /* [retval][out] */ BSTR __RPC_FAR *pbs) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct FolderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            Folder __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            Folder __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            Folder __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            Folder __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            Folder __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            Folder __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            Folder __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Title )( 
            Folder __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pbs);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Application )( 
            Folder __RPC_FAR * This,
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Parent )( 
            Folder __RPC_FAR * This,
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ParentFolder )( 
            Folder __RPC_FAR * This,
            /* [retval][out] */ Folder __RPC_FAR *__RPC_FAR *ppsf);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Items )( 
            Folder __RPC_FAR * This,
            /* [retval][out] */ FolderItems __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ParseName )( 
            Folder __RPC_FAR * This,
            /* [in] */ BSTR bName,
            /* [retval][out] */ FolderItem __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *NewFolder )( 
            Folder __RPC_FAR * This,
            /* [in] */ BSTR bName,
            /* [optional][in] */ VARIANT vOptions);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *MoveHere )( 
            Folder __RPC_FAR * This,
            /* [in] */ VARIANT vItem,
            /* [optional][in] */ VARIANT vOptions);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CopyHere )( 
            Folder __RPC_FAR * This,
            /* [in] */ VARIANT vItem,
            /* [optional][in] */ VARIANT vOptions);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetDetailsOf )( 
            Folder __RPC_FAR * This,
            /* [in] */ VARIANT vItem,
            /* [in] */ int iColumn,
            /* [retval][out] */ BSTR __RPC_FAR *pbs);
        
        END_INTERFACE
    } FolderVtbl;

    interface Folder
    {
        CONST_VTBL struct FolderVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Folder_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define Folder_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define Folder_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define Folder_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define Folder_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define Folder_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define Folder_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define Folder_get_Title(This,pbs)	\
    (This)->lpVtbl -> get_Title(This,pbs)

#define Folder_get_Application(This,ppid)	\
    (This)->lpVtbl -> get_Application(This,ppid)

#define Folder_get_Parent(This,ppid)	\
    (This)->lpVtbl -> get_Parent(This,ppid)

#define Folder_get_ParentFolder(This,ppsf)	\
    (This)->lpVtbl -> get_ParentFolder(This,ppsf)

#define Folder_Items(This,ppid)	\
    (This)->lpVtbl -> Items(This,ppid)

#define Folder_ParseName(This,bName,ppid)	\
    (This)->lpVtbl -> ParseName(This,bName,ppid)

#define Folder_NewFolder(This,bName,vOptions)	\
    (This)->lpVtbl -> NewFolder(This,bName,vOptions)

#define Folder_MoveHere(This,vItem,vOptions)	\
    (This)->lpVtbl -> MoveHere(This,vItem,vOptions)

#define Folder_CopyHere(This,vItem,vOptions)	\
    (This)->lpVtbl -> CopyHere(This,vItem,vOptions)

#define Folder_GetDetailsOf(This,vItem,iColumn,pbs)	\
    (This)->lpVtbl -> GetDetailsOf(This,vItem,iColumn,pbs)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Folder_get_Title_Proxy( 
    Folder __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pbs);


void __RPC_STUB Folder_get_Title_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE Folder_get_Application_Proxy( 
    Folder __RPC_FAR * This,
    /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid);


void __RPC_STUB Folder_get_Application_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE Folder_get_Parent_Proxy( 
    Folder __RPC_FAR * This,
    /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid);


void __RPC_STUB Folder_get_Parent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE Folder_get_ParentFolder_Proxy( 
    Folder __RPC_FAR * This,
    /* [retval][out] */ Folder __RPC_FAR *__RPC_FAR *ppsf);


void __RPC_STUB Folder_get_ParentFolder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE Folder_Items_Proxy( 
    Folder __RPC_FAR * This,
    /* [retval][out] */ FolderItems __RPC_FAR *__RPC_FAR *ppid);


void __RPC_STUB Folder_Items_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE Folder_ParseName_Proxy( 
    Folder __RPC_FAR * This,
    /* [in] */ BSTR bName,
    /* [retval][out] */ FolderItem __RPC_FAR *__RPC_FAR *ppid);


void __RPC_STUB Folder_ParseName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE Folder_NewFolder_Proxy( 
    Folder __RPC_FAR * This,
    /* [in] */ BSTR bName,
    /* [optional][in] */ VARIANT vOptions);


void __RPC_STUB Folder_NewFolder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE Folder_MoveHere_Proxy( 
    Folder __RPC_FAR * This,
    /* [in] */ VARIANT vItem,
    /* [optional][in] */ VARIANT vOptions);


void __RPC_STUB Folder_MoveHere_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE Folder_CopyHere_Proxy( 
    Folder __RPC_FAR * This,
    /* [in] */ VARIANT vItem,
    /* [optional][in] */ VARIANT vOptions);


void __RPC_STUB Folder_CopyHere_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE Folder_GetDetailsOf_Proxy( 
    Folder __RPC_FAR * This,
    /* [in] */ VARIANT vItem,
    /* [in] */ int iColumn,
    /* [retval][out] */ BSTR __RPC_FAR *pbs);


void __RPC_STUB Folder_GetDetailsOf_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __Folder_INTERFACE_DEFINED__ */


#ifndef __Folder2_INTERFACE_DEFINED__
#define __Folder2_INTERFACE_DEFINED__

/* interface Folder2 */
/* [object][dual][oleautomation][helpstring][uuid] */ 


EXTERN_C const IID IID_Folder2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("f0d2d8ef-3890-11d2-bf8b-00c04fb93661")
    Folder2 : public Folder
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Self( 
            /* [retval][out] */ FolderItem __RPC_FAR *__RPC_FAR *ppfi) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_OfflineStatus( 
            /* [retval][out] */ LONG __RPC_FAR *pul) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Synchronize( void) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_HaveToShowWebViewBarricade( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pbHaveToShowWebViewBarricade) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE DismissedWebViewBarricade( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct Folder2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            Folder2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            Folder2 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            Folder2 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            Folder2 __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            Folder2 __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            Folder2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            Folder2 __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Title )( 
            Folder2 __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pbs);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Application )( 
            Folder2 __RPC_FAR * This,
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Parent )( 
            Folder2 __RPC_FAR * This,
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ParentFolder )( 
            Folder2 __RPC_FAR * This,
            /* [retval][out] */ Folder __RPC_FAR *__RPC_FAR *ppsf);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Items )( 
            Folder2 __RPC_FAR * This,
            /* [retval][out] */ FolderItems __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ParseName )( 
            Folder2 __RPC_FAR * This,
            /* [in] */ BSTR bName,
            /* [retval][out] */ FolderItem __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *NewFolder )( 
            Folder2 __RPC_FAR * This,
            /* [in] */ BSTR bName,
            /* [optional][in] */ VARIANT vOptions);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *MoveHere )( 
            Folder2 __RPC_FAR * This,
            /* [in] */ VARIANT vItem,
            /* [optional][in] */ VARIANT vOptions);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CopyHere )( 
            Folder2 __RPC_FAR * This,
            /* [in] */ VARIANT vItem,
            /* [optional][in] */ VARIANT vOptions);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetDetailsOf )( 
            Folder2 __RPC_FAR * This,
            /* [in] */ VARIANT vItem,
            /* [in] */ int iColumn,
            /* [retval][out] */ BSTR __RPC_FAR *pbs);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Self )( 
            Folder2 __RPC_FAR * This,
            /* [retval][out] */ FolderItem __RPC_FAR *__RPC_FAR *ppfi);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_OfflineStatus )( 
            Folder2 __RPC_FAR * This,
            /* [retval][out] */ LONG __RPC_FAR *pul);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Synchronize )( 
            Folder2 __RPC_FAR * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_HaveToShowWebViewBarricade )( 
            Folder2 __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pbHaveToShowWebViewBarricade);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DismissedWebViewBarricade )( 
            Folder2 __RPC_FAR * This);
        
        END_INTERFACE
    } Folder2Vtbl;

    interface Folder2
    {
        CONST_VTBL struct Folder2Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Folder2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define Folder2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define Folder2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define Folder2_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define Folder2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define Folder2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define Folder2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define Folder2_get_Title(This,pbs)	\
    (This)->lpVtbl -> get_Title(This,pbs)

#define Folder2_get_Application(This,ppid)	\
    (This)->lpVtbl -> get_Application(This,ppid)

#define Folder2_get_Parent(This,ppid)	\
    (This)->lpVtbl -> get_Parent(This,ppid)

#define Folder2_get_ParentFolder(This,ppsf)	\
    (This)->lpVtbl -> get_ParentFolder(This,ppsf)

#define Folder2_Items(This,ppid)	\
    (This)->lpVtbl -> Items(This,ppid)

#define Folder2_ParseName(This,bName,ppid)	\
    (This)->lpVtbl -> ParseName(This,bName,ppid)

#define Folder2_NewFolder(This,bName,vOptions)	\
    (This)->lpVtbl -> NewFolder(This,bName,vOptions)

#define Folder2_MoveHere(This,vItem,vOptions)	\
    (This)->lpVtbl -> MoveHere(This,vItem,vOptions)

#define Folder2_CopyHere(This,vItem,vOptions)	\
    (This)->lpVtbl -> CopyHere(This,vItem,vOptions)

#define Folder2_GetDetailsOf(This,vItem,iColumn,pbs)	\
    (This)->lpVtbl -> GetDetailsOf(This,vItem,iColumn,pbs)


#define Folder2_get_Self(This,ppfi)	\
    (This)->lpVtbl -> get_Self(This,ppfi)

#define Folder2_get_OfflineStatus(This,pul)	\
    (This)->lpVtbl -> get_OfflineStatus(This,pul)

#define Folder2_Synchronize(This)	\
    (This)->lpVtbl -> Synchronize(This)

#define Folder2_get_HaveToShowWebViewBarricade(This,pbHaveToShowWebViewBarricade)	\
    (This)->lpVtbl -> get_HaveToShowWebViewBarricade(This,pbHaveToShowWebViewBarricade)

#define Folder2_DismissedWebViewBarricade(This)	\
    (This)->lpVtbl -> DismissedWebViewBarricade(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE Folder2_get_Self_Proxy( 
    Folder2 __RPC_FAR * This,
    /* [retval][out] */ FolderItem __RPC_FAR *__RPC_FAR *ppfi);


void __RPC_STUB Folder2_get_Self_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE Folder2_get_OfflineStatus_Proxy( 
    Folder2 __RPC_FAR * This,
    /* [retval][out] */ LONG __RPC_FAR *pul);


void __RPC_STUB Folder2_get_OfflineStatus_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE Folder2_Synchronize_Proxy( 
    Folder2 __RPC_FAR * This);


void __RPC_STUB Folder2_Synchronize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Folder2_get_HaveToShowWebViewBarricade_Proxy( 
    Folder2 __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pbHaveToShowWebViewBarricade);


void __RPC_STUB Folder2_get_HaveToShowWebViewBarricade_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE Folder2_DismissedWebViewBarricade_Proxy( 
    Folder2 __RPC_FAR * This);


void __RPC_STUB Folder2_DismissedWebViewBarricade_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __Folder2_INTERFACE_DEFINED__ */


#ifndef __Folder3_INTERFACE_DEFINED__
#define __Folder3_INTERFACE_DEFINED__

/* interface Folder3 */
/* [object][dual][oleautomation][helpstring][uuid] */ 


EXTERN_C const IID IID_Folder3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A7AE5F64-C4D7-4d7f-9307-4D24EE54B841")
    Folder3 : public Folder2
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ShowWebViewBarricade( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pbShowWebViewBarricade) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ShowWebViewBarricade( 
            /* [in] */ VARIANT_BOOL bShowWebViewBarricade) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct Folder3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            Folder3 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            Folder3 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            Folder3 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            Folder3 __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            Folder3 __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            Folder3 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            Folder3 __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Title )( 
            Folder3 __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pbs);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Application )( 
            Folder3 __RPC_FAR * This,
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Parent )( 
            Folder3 __RPC_FAR * This,
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ParentFolder )( 
            Folder3 __RPC_FAR * This,
            /* [retval][out] */ Folder __RPC_FAR *__RPC_FAR *ppsf);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Items )( 
            Folder3 __RPC_FAR * This,
            /* [retval][out] */ FolderItems __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ParseName )( 
            Folder3 __RPC_FAR * This,
            /* [in] */ BSTR bName,
            /* [retval][out] */ FolderItem __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *NewFolder )( 
            Folder3 __RPC_FAR * This,
            /* [in] */ BSTR bName,
            /* [optional][in] */ VARIANT vOptions);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *MoveHere )( 
            Folder3 __RPC_FAR * This,
            /* [in] */ VARIANT vItem,
            /* [optional][in] */ VARIANT vOptions);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CopyHere )( 
            Folder3 __RPC_FAR * This,
            /* [in] */ VARIANT vItem,
            /* [optional][in] */ VARIANT vOptions);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetDetailsOf )( 
            Folder3 __RPC_FAR * This,
            /* [in] */ VARIANT vItem,
            /* [in] */ int iColumn,
            /* [retval][out] */ BSTR __RPC_FAR *pbs);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Self )( 
            Folder3 __RPC_FAR * This,
            /* [retval][out] */ FolderItem __RPC_FAR *__RPC_FAR *ppfi);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_OfflineStatus )( 
            Folder3 __RPC_FAR * This,
            /* [retval][out] */ LONG __RPC_FAR *pul);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Synchronize )( 
            Folder3 __RPC_FAR * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_HaveToShowWebViewBarricade )( 
            Folder3 __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pbHaveToShowWebViewBarricade);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DismissedWebViewBarricade )( 
            Folder3 __RPC_FAR * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ShowWebViewBarricade )( 
            Folder3 __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pbShowWebViewBarricade);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_ShowWebViewBarricade )( 
            Folder3 __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL bShowWebViewBarricade);
        
        END_INTERFACE
    } Folder3Vtbl;

    interface Folder3
    {
        CONST_VTBL struct Folder3Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Folder3_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define Folder3_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define Folder3_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define Folder3_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define Folder3_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define Folder3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define Folder3_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define Folder3_get_Title(This,pbs)	\
    (This)->lpVtbl -> get_Title(This,pbs)

#define Folder3_get_Application(This,ppid)	\
    (This)->lpVtbl -> get_Application(This,ppid)

#define Folder3_get_Parent(This,ppid)	\
    (This)->lpVtbl -> get_Parent(This,ppid)

#define Folder3_get_ParentFolder(This,ppsf)	\
    (This)->lpVtbl -> get_ParentFolder(This,ppsf)

#define Folder3_Items(This,ppid)	\
    (This)->lpVtbl -> Items(This,ppid)

#define Folder3_ParseName(This,bName,ppid)	\
    (This)->lpVtbl -> ParseName(This,bName,ppid)

#define Folder3_NewFolder(This,bName,vOptions)	\
    (This)->lpVtbl -> NewFolder(This,bName,vOptions)

#define Folder3_MoveHere(This,vItem,vOptions)	\
    (This)->lpVtbl -> MoveHere(This,vItem,vOptions)

#define Folder3_CopyHere(This,vItem,vOptions)	\
    (This)->lpVtbl -> CopyHere(This,vItem,vOptions)

#define Folder3_GetDetailsOf(This,vItem,iColumn,pbs)	\
    (This)->lpVtbl -> GetDetailsOf(This,vItem,iColumn,pbs)


#define Folder3_get_Self(This,ppfi)	\
    (This)->lpVtbl -> get_Self(This,ppfi)

#define Folder3_get_OfflineStatus(This,pul)	\
    (This)->lpVtbl -> get_OfflineStatus(This,pul)

#define Folder3_Synchronize(This)	\
    (This)->lpVtbl -> Synchronize(This)

#define Folder3_get_HaveToShowWebViewBarricade(This,pbHaveToShowWebViewBarricade)	\
    (This)->lpVtbl -> get_HaveToShowWebViewBarricade(This,pbHaveToShowWebViewBarricade)

#define Folder3_DismissedWebViewBarricade(This)	\
    (This)->lpVtbl -> DismissedWebViewBarricade(This)


#define Folder3_get_ShowWebViewBarricade(This,pbShowWebViewBarricade)	\
    (This)->lpVtbl -> get_ShowWebViewBarricade(This,pbShowWebViewBarricade)

#define Folder3_put_ShowWebViewBarricade(This,bShowWebViewBarricade)	\
    (This)->lpVtbl -> put_ShowWebViewBarricade(This,bShowWebViewBarricade)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Folder3_get_ShowWebViewBarricade_Proxy( 
    Folder3 __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pbShowWebViewBarricade);


void __RPC_STUB Folder3_get_ShowWebViewBarricade_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE Folder3_put_ShowWebViewBarricade_Proxy( 
    Folder3 __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL bShowWebViewBarricade);


void __RPC_STUB Folder3_put_ShowWebViewBarricade_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __Folder3_INTERFACE_DEFINED__ */


#ifndef __FolderItem2_INTERFACE_DEFINED__
#define __FolderItem2_INTERFACE_DEFINED__

/* interface FolderItem2 */
/* [object][dual][oleautomation][helpstring][uuid] */ 


EXTERN_C const IID IID_FolderItem2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("edc817aa-92b8-11d1-b075-00c04fc33aa5")
    FolderItem2 : public FolderItem
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE InvokeVerbEx( 
            /* [optional][in] */ VARIANT vVerb,
            /* [optional][in] */ VARIANT vArgs) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ExtendedProperty( 
            /* [in] */ BSTR bstrPropName,
            /* [retval][out] */ VARIANT __RPC_FAR *pvRet) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct FolderItem2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            FolderItem2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            FolderItem2 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            FolderItem2 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            FolderItem2 __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            FolderItem2 __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            FolderItem2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            FolderItem2 __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Application )( 
            FolderItem2 __RPC_FAR * This,
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Parent )( 
            FolderItem2 __RPC_FAR * This,
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Name )( 
            FolderItem2 __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pbs);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Name )( 
            FolderItem2 __RPC_FAR * This,
            /* [in] */ BSTR bs);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Path )( 
            FolderItem2 __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pbs);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_GetLink )( 
            FolderItem2 __RPC_FAR * This,
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_GetFolder )( 
            FolderItem2 __RPC_FAR * This,
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_IsLink )( 
            FolderItem2 __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pb);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_IsFolder )( 
            FolderItem2 __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pb);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_IsFileSystem )( 
            FolderItem2 __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pb);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_IsBrowsable )( 
            FolderItem2 __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pb);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ModifyDate )( 
            FolderItem2 __RPC_FAR * This,
            /* [retval][out] */ DATE __RPC_FAR *pdt);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_ModifyDate )( 
            FolderItem2 __RPC_FAR * This,
            /* [in] */ DATE dt);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Size )( 
            FolderItem2 __RPC_FAR * This,
            /* [retval][out] */ LONG __RPC_FAR *pul);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Type )( 
            FolderItem2 __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pbs);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Verbs )( 
            FolderItem2 __RPC_FAR * This,
            /* [retval][out] */ FolderItemVerbs __RPC_FAR *__RPC_FAR *ppfic);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *InvokeVerb )( 
            FolderItem2 __RPC_FAR * This,
            /* [optional][in] */ VARIANT vVerb);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *InvokeVerbEx )( 
            FolderItem2 __RPC_FAR * This,
            /* [optional][in] */ VARIANT vVerb,
            /* [optional][in] */ VARIANT vArgs);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ExtendedProperty )( 
            FolderItem2 __RPC_FAR * This,
            /* [in] */ BSTR bstrPropName,
            /* [retval][out] */ VARIANT __RPC_FAR *pvRet);
        
        END_INTERFACE
    } FolderItem2Vtbl;

    interface FolderItem2
    {
        CONST_VTBL struct FolderItem2Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define FolderItem2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define FolderItem2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define FolderItem2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define FolderItem2_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define FolderItem2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define FolderItem2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define FolderItem2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define FolderItem2_get_Application(This,ppid)	\
    (This)->lpVtbl -> get_Application(This,ppid)

#define FolderItem2_get_Parent(This,ppid)	\
    (This)->lpVtbl -> get_Parent(This,ppid)

#define FolderItem2_get_Name(This,pbs)	\
    (This)->lpVtbl -> get_Name(This,pbs)

#define FolderItem2_put_Name(This,bs)	\
    (This)->lpVtbl -> put_Name(This,bs)

#define FolderItem2_get_Path(This,pbs)	\
    (This)->lpVtbl -> get_Path(This,pbs)

#define FolderItem2_get_GetLink(This,ppid)	\
    (This)->lpVtbl -> get_GetLink(This,ppid)

#define FolderItem2_get_GetFolder(This,ppid)	\
    (This)->lpVtbl -> get_GetFolder(This,ppid)

#define FolderItem2_get_IsLink(This,pb)	\
    (This)->lpVtbl -> get_IsLink(This,pb)

#define FolderItem2_get_IsFolder(This,pb)	\
    (This)->lpVtbl -> get_IsFolder(This,pb)

#define FolderItem2_get_IsFileSystem(This,pb)	\
    (This)->lpVtbl -> get_IsFileSystem(This,pb)

#define FolderItem2_get_IsBrowsable(This,pb)	\
    (This)->lpVtbl -> get_IsBrowsable(This,pb)

#define FolderItem2_get_ModifyDate(This,pdt)	\
    (This)->lpVtbl -> get_ModifyDate(This,pdt)

#define FolderItem2_put_ModifyDate(This,dt)	\
    (This)->lpVtbl -> put_ModifyDate(This,dt)

#define FolderItem2_get_Size(This,pul)	\
    (This)->lpVtbl -> get_Size(This,pul)

#define FolderItem2_get_Type(This,pbs)	\
    (This)->lpVtbl -> get_Type(This,pbs)

#define FolderItem2_Verbs(This,ppfic)	\
    (This)->lpVtbl -> Verbs(This,ppfic)

#define FolderItem2_InvokeVerb(This,vVerb)	\
    (This)->lpVtbl -> InvokeVerb(This,vVerb)


#define FolderItem2_InvokeVerbEx(This,vVerb,vArgs)	\
    (This)->lpVtbl -> InvokeVerbEx(This,vVerb,vArgs)

#define FolderItem2_ExtendedProperty(This,bstrPropName,pvRet)	\
    (This)->lpVtbl -> ExtendedProperty(This,bstrPropName,pvRet)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring] */ HRESULT STDMETHODCALLTYPE FolderItem2_InvokeVerbEx_Proxy( 
    FolderItem2 __RPC_FAR * This,
    /* [optional][in] */ VARIANT vVerb,
    /* [optional][in] */ VARIANT vArgs);


void __RPC_STUB FolderItem2_InvokeVerbEx_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE FolderItem2_ExtendedProperty_Proxy( 
    FolderItem2 __RPC_FAR * This,
    /* [in] */ BSTR bstrPropName,
    /* [retval][out] */ VARIANT __RPC_FAR *pvRet);


void __RPC_STUB FolderItem2_ExtendedProperty_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __FolderItem2_INTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_ShellFolderItem;

#ifdef __cplusplus

class DECLSPEC_UUID("2fe352ea-fd1f-11d2-b1f4-00c04f8eeb3e")
ShellFolderItem;
#endif

#ifndef __FolderItems2_INTERFACE_DEFINED__
#define __FolderItems2_INTERFACE_DEFINED__

/* interface FolderItems2 */
/* [object][dual][oleautomation][helpstring][uuid] */ 


EXTERN_C const IID IID_FolderItems2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C94F0AD0-F363-11d2-A327-00C04F8EEC7F")
    FolderItems2 : public FolderItems
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE InvokeVerbEx( 
            /* [optional][in] */ VARIANT vVerb,
            /* [optional][in] */ VARIANT vArgs) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct FolderItems2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            FolderItems2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            FolderItems2 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            FolderItems2 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            FolderItems2 __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            FolderItems2 __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            FolderItems2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            FolderItems2 __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Count )( 
            FolderItems2 __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *plCount);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Application )( 
            FolderItems2 __RPC_FAR * This,
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Parent )( 
            FolderItems2 __RPC_FAR * This,
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Item )( 
            FolderItems2 __RPC_FAR * This,
            /* [optional][in] */ VARIANT index,
            /* [retval][out] */ FolderItem __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *_NewEnum )( 
            FolderItems2 __RPC_FAR * This,
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunk);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *InvokeVerbEx )( 
            FolderItems2 __RPC_FAR * This,
            /* [optional][in] */ VARIANT vVerb,
            /* [optional][in] */ VARIANT vArgs);
        
        END_INTERFACE
    } FolderItems2Vtbl;

    interface FolderItems2
    {
        CONST_VTBL struct FolderItems2Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define FolderItems2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define FolderItems2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define FolderItems2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define FolderItems2_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define FolderItems2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define FolderItems2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define FolderItems2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define FolderItems2_get_Count(This,plCount)	\
    (This)->lpVtbl -> get_Count(This,plCount)

#define FolderItems2_get_Application(This,ppid)	\
    (This)->lpVtbl -> get_Application(This,ppid)

#define FolderItems2_get_Parent(This,ppid)	\
    (This)->lpVtbl -> get_Parent(This,ppid)

#define FolderItems2_Item(This,index,ppid)	\
    (This)->lpVtbl -> Item(This,index,ppid)

#define FolderItems2__NewEnum(This,ppunk)	\
    (This)->lpVtbl -> _NewEnum(This,ppunk)


#define FolderItems2_InvokeVerbEx(This,vVerb,vArgs)	\
    (This)->lpVtbl -> InvokeVerbEx(This,vVerb,vArgs)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring] */ HRESULT STDMETHODCALLTYPE FolderItems2_InvokeVerbEx_Proxy( 
    FolderItems2 __RPC_FAR * This,
    /* [optional][in] */ VARIANT vVerb,
    /* [optional][in] */ VARIANT vArgs);


void __RPC_STUB FolderItems2_InvokeVerbEx_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __FolderItems2_INTERFACE_DEFINED__ */


#ifndef __FolderItems3_INTERFACE_DEFINED__
#define __FolderItems3_INTERFACE_DEFINED__

/* interface FolderItems3 */
/* [object][dual][oleautomation][helpstring][uuid] */ 


EXTERN_C const IID IID_FolderItems3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("eaa7c309-bbec-49d5-821d-64d966cb667f")
    FolderItems3 : public FolderItems2
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Filter( 
            /* [in] */ long grfFlags,
            /* [in] */ BSTR bstrFileSpec) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Verbs( 
            /* [retval][out] */ FolderItemVerbs __RPC_FAR *__RPC_FAR *ppfic) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct FolderItems3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            FolderItems3 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            FolderItems3 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            FolderItems3 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            FolderItems3 __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            FolderItems3 __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            FolderItems3 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            FolderItems3 __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Count )( 
            FolderItems3 __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *plCount);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Application )( 
            FolderItems3 __RPC_FAR * This,
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Parent )( 
            FolderItems3 __RPC_FAR * This,
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Item )( 
            FolderItems3 __RPC_FAR * This,
            /* [optional][in] */ VARIANT index,
            /* [retval][out] */ FolderItem __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *_NewEnum )( 
            FolderItems3 __RPC_FAR * This,
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunk);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *InvokeVerbEx )( 
            FolderItems3 __RPC_FAR * This,
            /* [optional][in] */ VARIANT vVerb,
            /* [optional][in] */ VARIANT vArgs);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Filter )( 
            FolderItems3 __RPC_FAR * This,
            /* [in] */ long grfFlags,
            /* [in] */ BSTR bstrFileSpec);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Verbs )( 
            FolderItems3 __RPC_FAR * This,
            /* [retval][out] */ FolderItemVerbs __RPC_FAR *__RPC_FAR *ppfic);
        
        END_INTERFACE
    } FolderItems3Vtbl;

    interface FolderItems3
    {
        CONST_VTBL struct FolderItems3Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define FolderItems3_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define FolderItems3_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define FolderItems3_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define FolderItems3_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define FolderItems3_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define FolderItems3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define FolderItems3_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define FolderItems3_get_Count(This,plCount)	\
    (This)->lpVtbl -> get_Count(This,plCount)

#define FolderItems3_get_Application(This,ppid)	\
    (This)->lpVtbl -> get_Application(This,ppid)

#define FolderItems3_get_Parent(This,ppid)	\
    (This)->lpVtbl -> get_Parent(This,ppid)

#define FolderItems3_Item(This,index,ppid)	\
    (This)->lpVtbl -> Item(This,index,ppid)

#define FolderItems3__NewEnum(This,ppunk)	\
    (This)->lpVtbl -> _NewEnum(This,ppunk)


#define FolderItems3_InvokeVerbEx(This,vVerb,vArgs)	\
    (This)->lpVtbl -> InvokeVerbEx(This,vVerb,vArgs)


#define FolderItems3_Filter(This,grfFlags,bstrFileSpec)	\
    (This)->lpVtbl -> Filter(This,grfFlags,bstrFileSpec)

#define FolderItems3_get_Verbs(This,ppfic)	\
    (This)->lpVtbl -> get_Verbs(This,ppfic)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring] */ HRESULT STDMETHODCALLTYPE FolderItems3_Filter_Proxy( 
    FolderItems3 __RPC_FAR * This,
    /* [in] */ long grfFlags,
    /* [in] */ BSTR bstrFileSpec);


void __RPC_STUB FolderItems3_Filter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE FolderItems3_get_Verbs_Proxy( 
    FolderItems3 __RPC_FAR * This,
    /* [retval][out] */ FolderItemVerbs __RPC_FAR *__RPC_FAR *ppfic);


void __RPC_STUB FolderItems3_get_Verbs_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __FolderItems3_INTERFACE_DEFINED__ */


#ifndef __IShellLinkDual_INTERFACE_DEFINED__
#define __IShellLinkDual_INTERFACE_DEFINED__

/* interface IShellLinkDual */
/* [object][hidden][dual][oleautomation][helpstring][uuid] */ 


EXTERN_C const IID IID_IShellLinkDual;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("88A05C00-F000-11CE-8350-444553540000")
    IShellLinkDual : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Path( 
            /* [retval][out] */ BSTR __RPC_FAR *pbs) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Path( 
            /* [in] */ BSTR bs) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Description( 
            /* [retval][out] */ BSTR __RPC_FAR *pbs) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Description( 
            /* [in] */ BSTR bs) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_WorkingDirectory( 
            /* [retval][out] */ BSTR __RPC_FAR *pbs) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_WorkingDirectory( 
            /* [in] */ BSTR bs) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Arguments( 
            /* [retval][out] */ BSTR __RPC_FAR *pbs) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Arguments( 
            /* [in] */ BSTR bs) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Hotkey( 
            /* [retval][out] */ int __RPC_FAR *piHK) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Hotkey( 
            /* [in] */ int iHK) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ShowCommand( 
            /* [retval][out] */ int __RPC_FAR *piShowCommand) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_ShowCommand( 
            /* [in] */ int iShowCommand) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Resolve( 
            /* [in] */ int fFlags) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetIconLocation( 
            /* [out] */ BSTR __RPC_FAR *pbs,
            /* [retval][out] */ int __RPC_FAR *piIcon) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetIconLocation( 
            /* [in] */ BSTR bs,
            /* [in] */ int iIcon) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Save( 
            /* [optional][in] */ VARIANT vWhere) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IShellLinkDualVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IShellLinkDual __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IShellLinkDual __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IShellLinkDual __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IShellLinkDual __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IShellLinkDual __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IShellLinkDual __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IShellLinkDual __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Path )( 
            IShellLinkDual __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pbs);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Path )( 
            IShellLinkDual __RPC_FAR * This,
            /* [in] */ BSTR bs);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Description )( 
            IShellLinkDual __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pbs);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Description )( 
            IShellLinkDual __RPC_FAR * This,
            /* [in] */ BSTR bs);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_WorkingDirectory )( 
            IShellLinkDual __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pbs);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_WorkingDirectory )( 
            IShellLinkDual __RPC_FAR * This,
            /* [in] */ BSTR bs);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Arguments )( 
            IShellLinkDual __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pbs);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Arguments )( 
            IShellLinkDual __RPC_FAR * This,
            /* [in] */ BSTR bs);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Hotkey )( 
            IShellLinkDual __RPC_FAR * This,
            /* [retval][out] */ int __RPC_FAR *piHK);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Hotkey )( 
            IShellLinkDual __RPC_FAR * This,
            /* [in] */ int iHK);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ShowCommand )( 
            IShellLinkDual __RPC_FAR * This,
            /* [retval][out] */ int __RPC_FAR *piShowCommand);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_ShowCommand )( 
            IShellLinkDual __RPC_FAR * This,
            /* [in] */ int iShowCommand);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Resolve )( 
            IShellLinkDual __RPC_FAR * This,
            /* [in] */ int fFlags);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIconLocation )( 
            IShellLinkDual __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbs,
            /* [retval][out] */ int __RPC_FAR *piIcon);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetIconLocation )( 
            IShellLinkDual __RPC_FAR * This,
            /* [in] */ BSTR bs,
            /* [in] */ int iIcon);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Save )( 
            IShellLinkDual __RPC_FAR * This,
            /* [optional][in] */ VARIANT vWhere);
        
        END_INTERFACE
    } IShellLinkDualVtbl;

    interface IShellLinkDual
    {
        CONST_VTBL struct IShellLinkDualVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IShellLinkDual_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IShellLinkDual_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IShellLinkDual_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IShellLinkDual_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IShellLinkDual_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IShellLinkDual_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IShellLinkDual_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IShellLinkDual_get_Path(This,pbs)	\
    (This)->lpVtbl -> get_Path(This,pbs)

#define IShellLinkDual_put_Path(This,bs)	\
    (This)->lpVtbl -> put_Path(This,bs)

#define IShellLinkDual_get_Description(This,pbs)	\
    (This)->lpVtbl -> get_Description(This,pbs)

#define IShellLinkDual_put_Description(This,bs)	\
    (This)->lpVtbl -> put_Description(This,bs)

#define IShellLinkDual_get_WorkingDirectory(This,pbs)	\
    (This)->lpVtbl -> get_WorkingDirectory(This,pbs)

#define IShellLinkDual_put_WorkingDirectory(This,bs)	\
    (This)->lpVtbl -> put_WorkingDirectory(This,bs)

#define IShellLinkDual_get_Arguments(This,pbs)	\
    (This)->lpVtbl -> get_Arguments(This,pbs)

#define IShellLinkDual_put_Arguments(This,bs)	\
    (This)->lpVtbl -> put_Arguments(This,bs)

#define IShellLinkDual_get_Hotkey(This,piHK)	\
    (This)->lpVtbl -> get_Hotkey(This,piHK)

#define IShellLinkDual_put_Hotkey(This,iHK)	\
    (This)->lpVtbl -> put_Hotkey(This,iHK)

#define IShellLinkDual_get_ShowCommand(This,piShowCommand)	\
    (This)->lpVtbl -> get_ShowCommand(This,piShowCommand)

#define IShellLinkDual_put_ShowCommand(This,iShowCommand)	\
    (This)->lpVtbl -> put_ShowCommand(This,iShowCommand)

#define IShellLinkDual_Resolve(This,fFlags)	\
    (This)->lpVtbl -> Resolve(This,fFlags)

#define IShellLinkDual_GetIconLocation(This,pbs,piIcon)	\
    (This)->lpVtbl -> GetIconLocation(This,pbs,piIcon)

#define IShellLinkDual_SetIconLocation(This,bs,iIcon)	\
    (This)->lpVtbl -> SetIconLocation(This,bs,iIcon)

#define IShellLinkDual_Save(This,vWhere)	\
    (This)->lpVtbl -> Save(This,vWhere)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IShellLinkDual_get_Path_Proxy( 
    IShellLinkDual __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pbs);


void __RPC_STUB IShellLinkDual_get_Path_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IShellLinkDual_put_Path_Proxy( 
    IShellLinkDual __RPC_FAR * This,
    /* [in] */ BSTR bs);


void __RPC_STUB IShellLinkDual_put_Path_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IShellLinkDual_get_Description_Proxy( 
    IShellLinkDual __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pbs);


void __RPC_STUB IShellLinkDual_get_Description_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IShellLinkDual_put_Description_Proxy( 
    IShellLinkDual __RPC_FAR * This,
    /* [in] */ BSTR bs);


void __RPC_STUB IShellLinkDual_put_Description_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IShellLinkDual_get_WorkingDirectory_Proxy( 
    IShellLinkDual __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pbs);


void __RPC_STUB IShellLinkDual_get_WorkingDirectory_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IShellLinkDual_put_WorkingDirectory_Proxy( 
    IShellLinkDual __RPC_FAR * This,
    /* [in] */ BSTR bs);


void __RPC_STUB IShellLinkDual_put_WorkingDirectory_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IShellLinkDual_get_Arguments_Proxy( 
    IShellLinkDual __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pbs);


void __RPC_STUB IShellLinkDual_get_Arguments_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IShellLinkDual_put_Arguments_Proxy( 
    IShellLinkDual __RPC_FAR * This,
    /* [in] */ BSTR bs);


void __RPC_STUB IShellLinkDual_put_Arguments_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IShellLinkDual_get_Hotkey_Proxy( 
    IShellLinkDual __RPC_FAR * This,
    /* [retval][out] */ int __RPC_FAR *piHK);


void __RPC_STUB IShellLinkDual_get_Hotkey_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IShellLinkDual_put_Hotkey_Proxy( 
    IShellLinkDual __RPC_FAR * This,
    /* [in] */ int iHK);


void __RPC_STUB IShellLinkDual_put_Hotkey_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IShellLinkDual_get_ShowCommand_Proxy( 
    IShellLinkDual __RPC_FAR * This,
    /* [retval][out] */ int __RPC_FAR *piShowCommand);


void __RPC_STUB IShellLinkDual_get_ShowCommand_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IShellLinkDual_put_ShowCommand_Proxy( 
    IShellLinkDual __RPC_FAR * This,
    /* [in] */ int iShowCommand);


void __RPC_STUB IShellLinkDual_put_ShowCommand_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellLinkDual_Resolve_Proxy( 
    IShellLinkDual __RPC_FAR * This,
    /* [in] */ int fFlags);


void __RPC_STUB IShellLinkDual_Resolve_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellLinkDual_GetIconLocation_Proxy( 
    IShellLinkDual __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbs,
    /* [retval][out] */ int __RPC_FAR *piIcon);


void __RPC_STUB IShellLinkDual_GetIconLocation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellLinkDual_SetIconLocation_Proxy( 
    IShellLinkDual __RPC_FAR * This,
    /* [in] */ BSTR bs,
    /* [in] */ int iIcon);


void __RPC_STUB IShellLinkDual_SetIconLocation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellLinkDual_Save_Proxy( 
    IShellLinkDual __RPC_FAR * This,
    /* [optional][in] */ VARIANT vWhere);


void __RPC_STUB IShellLinkDual_Save_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IShellLinkDual_INTERFACE_DEFINED__ */


#ifndef __IShellLinkDual2_INTERFACE_DEFINED__
#define __IShellLinkDual2_INTERFACE_DEFINED__

/* interface IShellLinkDual2 */
/* [object][hidden][dual][oleautomation][helpstring][uuid] */ 


EXTERN_C const IID IID_IShellLinkDual2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("317EE249-F12E-11d2-B1E4-00C04F8EEB3E")
    IShellLinkDual2 : public IShellLinkDual
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Target( 
            /* [retval][out] */ FolderItem __RPC_FAR *__RPC_FAR *ppfi) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IShellLinkDual2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IShellLinkDual2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IShellLinkDual2 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IShellLinkDual2 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IShellLinkDual2 __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IShellLinkDual2 __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IShellLinkDual2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IShellLinkDual2 __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Path )( 
            IShellLinkDual2 __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pbs);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Path )( 
            IShellLinkDual2 __RPC_FAR * This,
            /* [in] */ BSTR bs);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Description )( 
            IShellLinkDual2 __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pbs);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Description )( 
            IShellLinkDual2 __RPC_FAR * This,
            /* [in] */ BSTR bs);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_WorkingDirectory )( 
            IShellLinkDual2 __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pbs);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_WorkingDirectory )( 
            IShellLinkDual2 __RPC_FAR * This,
            /* [in] */ BSTR bs);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Arguments )( 
            IShellLinkDual2 __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pbs);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Arguments )( 
            IShellLinkDual2 __RPC_FAR * This,
            /* [in] */ BSTR bs);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Hotkey )( 
            IShellLinkDual2 __RPC_FAR * This,
            /* [retval][out] */ int __RPC_FAR *piHK);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Hotkey )( 
            IShellLinkDual2 __RPC_FAR * This,
            /* [in] */ int iHK);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ShowCommand )( 
            IShellLinkDual2 __RPC_FAR * This,
            /* [retval][out] */ int __RPC_FAR *piShowCommand);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_ShowCommand )( 
            IShellLinkDual2 __RPC_FAR * This,
            /* [in] */ int iShowCommand);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Resolve )( 
            IShellLinkDual2 __RPC_FAR * This,
            /* [in] */ int fFlags);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIconLocation )( 
            IShellLinkDual2 __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbs,
            /* [retval][out] */ int __RPC_FAR *piIcon);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetIconLocation )( 
            IShellLinkDual2 __RPC_FAR * This,
            /* [in] */ BSTR bs,
            /* [in] */ int iIcon);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Save )( 
            IShellLinkDual2 __RPC_FAR * This,
            /* [optional][in] */ VARIANT vWhere);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Target )( 
            IShellLinkDual2 __RPC_FAR * This,
            /* [retval][out] */ FolderItem __RPC_FAR *__RPC_FAR *ppfi);
        
        END_INTERFACE
    } IShellLinkDual2Vtbl;

    interface IShellLinkDual2
    {
        CONST_VTBL struct IShellLinkDual2Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IShellLinkDual2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IShellLinkDual2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IShellLinkDual2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IShellLinkDual2_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IShellLinkDual2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IShellLinkDual2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IShellLinkDual2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IShellLinkDual2_get_Path(This,pbs)	\
    (This)->lpVtbl -> get_Path(This,pbs)

#define IShellLinkDual2_put_Path(This,bs)	\
    (This)->lpVtbl -> put_Path(This,bs)

#define IShellLinkDual2_get_Description(This,pbs)	\
    (This)->lpVtbl -> get_Description(This,pbs)

#define IShellLinkDual2_put_Description(This,bs)	\
    (This)->lpVtbl -> put_Description(This,bs)

#define IShellLinkDual2_get_WorkingDirectory(This,pbs)	\
    (This)->lpVtbl -> get_WorkingDirectory(This,pbs)

#define IShellLinkDual2_put_WorkingDirectory(This,bs)	\
    (This)->lpVtbl -> put_WorkingDirectory(This,bs)

#define IShellLinkDual2_get_Arguments(This,pbs)	\
    (This)->lpVtbl -> get_Arguments(This,pbs)

#define IShellLinkDual2_put_Arguments(This,bs)	\
    (This)->lpVtbl -> put_Arguments(This,bs)

#define IShellLinkDual2_get_Hotkey(This,piHK)	\
    (This)->lpVtbl -> get_Hotkey(This,piHK)

#define IShellLinkDual2_put_Hotkey(This,iHK)	\
    (This)->lpVtbl -> put_Hotkey(This,iHK)

#define IShellLinkDual2_get_ShowCommand(This,piShowCommand)	\
    (This)->lpVtbl -> get_ShowCommand(This,piShowCommand)

#define IShellLinkDual2_put_ShowCommand(This,iShowCommand)	\
    (This)->lpVtbl -> put_ShowCommand(This,iShowCommand)

#define IShellLinkDual2_Resolve(This,fFlags)	\
    (This)->lpVtbl -> Resolve(This,fFlags)

#define IShellLinkDual2_GetIconLocation(This,pbs,piIcon)	\
    (This)->lpVtbl -> GetIconLocation(This,pbs,piIcon)

#define IShellLinkDual2_SetIconLocation(This,bs,iIcon)	\
    (This)->lpVtbl -> SetIconLocation(This,bs,iIcon)

#define IShellLinkDual2_Save(This,vWhere)	\
    (This)->lpVtbl -> Save(This,vWhere)


#define IShellLinkDual2_get_Target(This,ppfi)	\
    (This)->lpVtbl -> get_Target(This,ppfi)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IShellLinkDual2_get_Target_Proxy( 
    IShellLinkDual2 __RPC_FAR * This,
    /* [retval][out] */ FolderItem __RPC_FAR *__RPC_FAR *ppfi);


void __RPC_STUB IShellLinkDual2_get_Target_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IShellLinkDual2_INTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_ShellLinkObject;

#ifdef __cplusplus

class DECLSPEC_UUID("11219420-1768-11d1-95BE-00609797EA4F")
ShellLinkObject;
#endif

#ifndef __IShellFolderViewDual_INTERFACE_DEFINED__
#define __IShellFolderViewDual_INTERFACE_DEFINED__

/* interface IShellFolderViewDual */
/* [object][dual][hidden][oleautomation][helpstring][uuid] */ 


EXTERN_C const IID IID_IShellFolderViewDual;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E7A1AF80-4D96-11CF-960C-0080C7F4EE85")
    IShellFolderViewDual : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Folder( 
            /* [retval][out] */ Folder __RPC_FAR *__RPC_FAR *ppid) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SelectedItems( 
            /* [retval][out] */ FolderItems __RPC_FAR *__RPC_FAR *ppid) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_FocusedItem( 
            /* [retval][out] */ FolderItem __RPC_FAR *__RPC_FAR *ppid) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SelectItem( 
            /* [in] */ VARIANT __RPC_FAR *pvfi,
            /* [in] */ int dwFlags) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE PopupItemMenu( 
            /* [in] */ FolderItem __RPC_FAR *pfi,
            /* [optional][in] */ VARIANT vx,
            /* [optional][in] */ VARIANT vy,
            /* [retval][out] */ BSTR __RPC_FAR *pbs) = 0;
        
        virtual /* [helpcontext][helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Script( 
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppDisp) = 0;
        
        virtual /* [helpcontext][helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ViewOptions( 
            /* [retval][out] */ long __RPC_FAR *plViewOptions) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IShellFolderViewDualVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IShellFolderViewDual __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IShellFolderViewDual __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IShellFolderViewDual __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IShellFolderViewDual __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IShellFolderViewDual __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IShellFolderViewDual __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IShellFolderViewDual __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Application )( 
            IShellFolderViewDual __RPC_FAR * This,
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Parent )( 
            IShellFolderViewDual __RPC_FAR * This,
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Folder )( 
            IShellFolderViewDual __RPC_FAR * This,
            /* [retval][out] */ Folder __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SelectedItems )( 
            IShellFolderViewDual __RPC_FAR * This,
            /* [retval][out] */ FolderItems __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FocusedItem )( 
            IShellFolderViewDual __RPC_FAR * This,
            /* [retval][out] */ FolderItem __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SelectItem )( 
            IShellFolderViewDual __RPC_FAR * This,
            /* [in] */ VARIANT __RPC_FAR *pvfi,
            /* [in] */ int dwFlags);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *PopupItemMenu )( 
            IShellFolderViewDual __RPC_FAR * This,
            /* [in] */ FolderItem __RPC_FAR *pfi,
            /* [optional][in] */ VARIANT vx,
            /* [optional][in] */ VARIANT vy,
            /* [retval][out] */ BSTR __RPC_FAR *pbs);
        
        /* [helpcontext][helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Script )( 
            IShellFolderViewDual __RPC_FAR * This,
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppDisp);
        
        /* [helpcontext][helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ViewOptions )( 
            IShellFolderViewDual __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *plViewOptions);
        
        END_INTERFACE
    } IShellFolderViewDualVtbl;

    interface IShellFolderViewDual
    {
        CONST_VTBL struct IShellFolderViewDualVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IShellFolderViewDual_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IShellFolderViewDual_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IShellFolderViewDual_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IShellFolderViewDual_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IShellFolderViewDual_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IShellFolderViewDual_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IShellFolderViewDual_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IShellFolderViewDual_get_Application(This,ppid)	\
    (This)->lpVtbl -> get_Application(This,ppid)

#define IShellFolderViewDual_get_Parent(This,ppid)	\
    (This)->lpVtbl -> get_Parent(This,ppid)

#define IShellFolderViewDual_get_Folder(This,ppid)	\
    (This)->lpVtbl -> get_Folder(This,ppid)

#define IShellFolderViewDual_SelectedItems(This,ppid)	\
    (This)->lpVtbl -> SelectedItems(This,ppid)

#define IShellFolderViewDual_get_FocusedItem(This,ppid)	\
    (This)->lpVtbl -> get_FocusedItem(This,ppid)

#define IShellFolderViewDual_SelectItem(This,pvfi,dwFlags)	\
    (This)->lpVtbl -> SelectItem(This,pvfi,dwFlags)

#define IShellFolderViewDual_PopupItemMenu(This,pfi,vx,vy,pbs)	\
    (This)->lpVtbl -> PopupItemMenu(This,pfi,vx,vy,pbs)

#define IShellFolderViewDual_get_Script(This,ppDisp)	\
    (This)->lpVtbl -> get_Script(This,ppDisp)

#define IShellFolderViewDual_get_ViewOptions(This,plViewOptions)	\
    (This)->lpVtbl -> get_ViewOptions(This,plViewOptions)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IShellFolderViewDual_get_Application_Proxy( 
    IShellFolderViewDual __RPC_FAR * This,
    /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid);


void __RPC_STUB IShellFolderViewDual_get_Application_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IShellFolderViewDual_get_Parent_Proxy( 
    IShellFolderViewDual __RPC_FAR * This,
    /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid);


void __RPC_STUB IShellFolderViewDual_get_Parent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IShellFolderViewDual_get_Folder_Proxy( 
    IShellFolderViewDual __RPC_FAR * This,
    /* [retval][out] */ Folder __RPC_FAR *__RPC_FAR *ppid);


void __RPC_STUB IShellFolderViewDual_get_Folder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellFolderViewDual_SelectedItems_Proxy( 
    IShellFolderViewDual __RPC_FAR * This,
    /* [retval][out] */ FolderItems __RPC_FAR *__RPC_FAR *ppid);


void __RPC_STUB IShellFolderViewDual_SelectedItems_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IShellFolderViewDual_get_FocusedItem_Proxy( 
    IShellFolderViewDual __RPC_FAR * This,
    /* [retval][out] */ FolderItem __RPC_FAR *__RPC_FAR *ppid);


void __RPC_STUB IShellFolderViewDual_get_FocusedItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellFolderViewDual_SelectItem_Proxy( 
    IShellFolderViewDual __RPC_FAR * This,
    /* [in] */ VARIANT __RPC_FAR *pvfi,
    /* [in] */ int dwFlags);


void __RPC_STUB IShellFolderViewDual_SelectItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellFolderViewDual_PopupItemMenu_Proxy( 
    IShellFolderViewDual __RPC_FAR * This,
    /* [in] */ FolderItem __RPC_FAR *pfi,
    /* [optional][in] */ VARIANT vx,
    /* [optional][in] */ VARIANT vy,
    /* [retval][out] */ BSTR __RPC_FAR *pbs);


void __RPC_STUB IShellFolderViewDual_PopupItemMenu_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][propget] */ HRESULT STDMETHODCALLTYPE IShellFolderViewDual_get_Script_Proxy( 
    IShellFolderViewDual __RPC_FAR * This,
    /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppDisp);


void __RPC_STUB IShellFolderViewDual_get_Script_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][propget] */ HRESULT STDMETHODCALLTYPE IShellFolderViewDual_get_ViewOptions_Proxy( 
    IShellFolderViewDual __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *plViewOptions);


void __RPC_STUB IShellFolderViewDual_get_ViewOptions_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IShellFolderViewDual_INTERFACE_DEFINED__ */


#ifndef __IShellFolderViewDual2_INTERFACE_DEFINED__
#define __IShellFolderViewDual2_INTERFACE_DEFINED__

/* interface IShellFolderViewDual2 */
/* [object][dual][hidden][oleautomation][helpstring][uuid] */ 


EXTERN_C const IID IID_IShellFolderViewDual2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("31C147b6-0ADE-4A3C-B514-DDF932EF6D17")
    IShellFolderViewDual2 : public IShellFolderViewDual
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_CurrentViewMode( 
            /* [retval][out] */ UINT __RPC_FAR *pViewMode) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_CurrentViewMode( 
            /* [in] */ UINT ViewMode) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SelectItemRelative( 
            /* [in] */ int iRelative) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IShellFolderViewDual2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IShellFolderViewDual2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IShellFolderViewDual2 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IShellFolderViewDual2 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IShellFolderViewDual2 __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IShellFolderViewDual2 __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IShellFolderViewDual2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IShellFolderViewDual2 __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Application )( 
            IShellFolderViewDual2 __RPC_FAR * This,
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Parent )( 
            IShellFolderViewDual2 __RPC_FAR * This,
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Folder )( 
            IShellFolderViewDual2 __RPC_FAR * This,
            /* [retval][out] */ Folder __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SelectedItems )( 
            IShellFolderViewDual2 __RPC_FAR * This,
            /* [retval][out] */ FolderItems __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FocusedItem )( 
            IShellFolderViewDual2 __RPC_FAR * This,
            /* [retval][out] */ FolderItem __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SelectItem )( 
            IShellFolderViewDual2 __RPC_FAR * This,
            /* [in] */ VARIANT __RPC_FAR *pvfi,
            /* [in] */ int dwFlags);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *PopupItemMenu )( 
            IShellFolderViewDual2 __RPC_FAR * This,
            /* [in] */ FolderItem __RPC_FAR *pfi,
            /* [optional][in] */ VARIANT vx,
            /* [optional][in] */ VARIANT vy,
            /* [retval][out] */ BSTR __RPC_FAR *pbs);
        
        /* [helpcontext][helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Script )( 
            IShellFolderViewDual2 __RPC_FAR * This,
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppDisp);
        
        /* [helpcontext][helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ViewOptions )( 
            IShellFolderViewDual2 __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *plViewOptions);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_CurrentViewMode )( 
            IShellFolderViewDual2 __RPC_FAR * This,
            /* [retval][out] */ UINT __RPC_FAR *pViewMode);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_CurrentViewMode )( 
            IShellFolderViewDual2 __RPC_FAR * This,
            /* [in] */ UINT ViewMode);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SelectItemRelative )( 
            IShellFolderViewDual2 __RPC_FAR * This,
            /* [in] */ int iRelative);
        
        END_INTERFACE
    } IShellFolderViewDual2Vtbl;

    interface IShellFolderViewDual2
    {
        CONST_VTBL struct IShellFolderViewDual2Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IShellFolderViewDual2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IShellFolderViewDual2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IShellFolderViewDual2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IShellFolderViewDual2_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IShellFolderViewDual2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IShellFolderViewDual2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IShellFolderViewDual2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IShellFolderViewDual2_get_Application(This,ppid)	\
    (This)->lpVtbl -> get_Application(This,ppid)

#define IShellFolderViewDual2_get_Parent(This,ppid)	\
    (This)->lpVtbl -> get_Parent(This,ppid)

#define IShellFolderViewDual2_get_Folder(This,ppid)	\
    (This)->lpVtbl -> get_Folder(This,ppid)

#define IShellFolderViewDual2_SelectedItems(This,ppid)	\
    (This)->lpVtbl -> SelectedItems(This,ppid)

#define IShellFolderViewDual2_get_FocusedItem(This,ppid)	\
    (This)->lpVtbl -> get_FocusedItem(This,ppid)

#define IShellFolderViewDual2_SelectItem(This,pvfi,dwFlags)	\
    (This)->lpVtbl -> SelectItem(This,pvfi,dwFlags)

#define IShellFolderViewDual2_PopupItemMenu(This,pfi,vx,vy,pbs)	\
    (This)->lpVtbl -> PopupItemMenu(This,pfi,vx,vy,pbs)

#define IShellFolderViewDual2_get_Script(This,ppDisp)	\
    (This)->lpVtbl -> get_Script(This,ppDisp)

#define IShellFolderViewDual2_get_ViewOptions(This,plViewOptions)	\
    (This)->lpVtbl -> get_ViewOptions(This,plViewOptions)


#define IShellFolderViewDual2_get_CurrentViewMode(This,pViewMode)	\
    (This)->lpVtbl -> get_CurrentViewMode(This,pViewMode)

#define IShellFolderViewDual2_put_CurrentViewMode(This,ViewMode)	\
    (This)->lpVtbl -> put_CurrentViewMode(This,ViewMode)

#define IShellFolderViewDual2_SelectItemRelative(This,iRelative)	\
    (This)->lpVtbl -> SelectItemRelative(This,iRelative)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IShellFolderViewDual2_get_CurrentViewMode_Proxy( 
    IShellFolderViewDual2 __RPC_FAR * This,
    /* [retval][out] */ UINT __RPC_FAR *pViewMode);


void __RPC_STUB IShellFolderViewDual2_get_CurrentViewMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IShellFolderViewDual2_put_CurrentViewMode_Proxy( 
    IShellFolderViewDual2 __RPC_FAR * This,
    /* [in] */ UINT ViewMode);


void __RPC_STUB IShellFolderViewDual2_put_CurrentViewMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellFolderViewDual2_SelectItemRelative_Proxy( 
    IShellFolderViewDual2 __RPC_FAR * This,
    /* [in] */ int iRelative);


void __RPC_STUB IShellFolderViewDual2_SelectItemRelative_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IShellFolderViewDual2_INTERFACE_DEFINED__ */


#ifndef __IShellFolderViewDual3_INTERFACE_DEFINED__
#define __IShellFolderViewDual3_INTERFACE_DEFINED__

/* interface IShellFolderViewDual3 */
/* [object][dual][hidden][oleautomation][helpstring][uuid] */ 


EXTERN_C const IID IID_IShellFolderViewDual3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("29EC8E6C-46D3-411f-BAAA-611A6C9CAC66")
    IShellFolderViewDual3 : public IShellFolderViewDual2
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_GroupBy( 
            /* [retval][out] */ BSTR __RPC_FAR *pbstrGroupBy) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_GroupBy( 
            /* [in] */ BSTR bstrGroupBy) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_FolderFlags( 
            /* [retval][out] */ DWORD __RPC_FAR *pdwFlags) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_FolderFlags( 
            /* [in] */ DWORD dwFlags) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_SortColumns( 
            /* [retval][out] */ BSTR __RPC_FAR *pbstrSortColumns) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_SortColumns( 
            /* [in] */ BSTR bstrSortColumns) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_IconSize( 
            /* [in] */ int iIconSize) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_IconSize( 
            /* [retval][out] */ int __RPC_FAR *piIconSize) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE FilterView( 
            /* [unique][in] */ BSTR bstrFilterText) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IShellFolderViewDual3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IShellFolderViewDual3 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IShellFolderViewDual3 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IShellFolderViewDual3 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IShellFolderViewDual3 __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IShellFolderViewDual3 __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IShellFolderViewDual3 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IShellFolderViewDual3 __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Application )( 
            IShellFolderViewDual3 __RPC_FAR * This,
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Parent )( 
            IShellFolderViewDual3 __RPC_FAR * This,
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Folder )( 
            IShellFolderViewDual3 __RPC_FAR * This,
            /* [retval][out] */ Folder __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SelectedItems )( 
            IShellFolderViewDual3 __RPC_FAR * This,
            /* [retval][out] */ FolderItems __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FocusedItem )( 
            IShellFolderViewDual3 __RPC_FAR * This,
            /* [retval][out] */ FolderItem __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SelectItem )( 
            IShellFolderViewDual3 __RPC_FAR * This,
            /* [in] */ VARIANT __RPC_FAR *pvfi,
            /* [in] */ int dwFlags);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *PopupItemMenu )( 
            IShellFolderViewDual3 __RPC_FAR * This,
            /* [in] */ FolderItem __RPC_FAR *pfi,
            /* [optional][in] */ VARIANT vx,
            /* [optional][in] */ VARIANT vy,
            /* [retval][out] */ BSTR __RPC_FAR *pbs);
        
        /* [helpcontext][helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Script )( 
            IShellFolderViewDual3 __RPC_FAR * This,
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppDisp);
        
        /* [helpcontext][helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ViewOptions )( 
            IShellFolderViewDual3 __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *plViewOptions);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_CurrentViewMode )( 
            IShellFolderViewDual3 __RPC_FAR * This,
            /* [retval][out] */ UINT __RPC_FAR *pViewMode);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_CurrentViewMode )( 
            IShellFolderViewDual3 __RPC_FAR * This,
            /* [in] */ UINT ViewMode);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SelectItemRelative )( 
            IShellFolderViewDual3 __RPC_FAR * This,
            /* [in] */ int iRelative);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_GroupBy )( 
            IShellFolderViewDual3 __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pbstrGroupBy);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_GroupBy )( 
            IShellFolderViewDual3 __RPC_FAR * This,
            /* [in] */ BSTR bstrGroupBy);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FolderFlags )( 
            IShellFolderViewDual3 __RPC_FAR * This,
            /* [retval][out] */ DWORD __RPC_FAR *pdwFlags);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_FolderFlags )( 
            IShellFolderViewDual3 __RPC_FAR * This,
            /* [in] */ DWORD dwFlags);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SortColumns )( 
            IShellFolderViewDual3 __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pbstrSortColumns);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_SortColumns )( 
            IShellFolderViewDual3 __RPC_FAR * This,
            /* [in] */ BSTR bstrSortColumns);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_IconSize )( 
            IShellFolderViewDual3 __RPC_FAR * This,
            /* [in] */ int iIconSize);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_IconSize )( 
            IShellFolderViewDual3 __RPC_FAR * This,
            /* [retval][out] */ int __RPC_FAR *piIconSize);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *FilterView )( 
            IShellFolderViewDual3 __RPC_FAR * This,
            /* [unique][in] */ BSTR bstrFilterText);
        
        END_INTERFACE
    } IShellFolderViewDual3Vtbl;

    interface IShellFolderViewDual3
    {
        CONST_VTBL struct IShellFolderViewDual3Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IShellFolderViewDual3_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IShellFolderViewDual3_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IShellFolderViewDual3_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IShellFolderViewDual3_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IShellFolderViewDual3_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IShellFolderViewDual3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IShellFolderViewDual3_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IShellFolderViewDual3_get_Application(This,ppid)	\
    (This)->lpVtbl -> get_Application(This,ppid)

#define IShellFolderViewDual3_get_Parent(This,ppid)	\
    (This)->lpVtbl -> get_Parent(This,ppid)

#define IShellFolderViewDual3_get_Folder(This,ppid)	\
    (This)->lpVtbl -> get_Folder(This,ppid)

#define IShellFolderViewDual3_SelectedItems(This,ppid)	\
    (This)->lpVtbl -> SelectedItems(This,ppid)

#define IShellFolderViewDual3_get_FocusedItem(This,ppid)	\
    (This)->lpVtbl -> get_FocusedItem(This,ppid)

#define IShellFolderViewDual3_SelectItem(This,pvfi,dwFlags)	\
    (This)->lpVtbl -> SelectItem(This,pvfi,dwFlags)

#define IShellFolderViewDual3_PopupItemMenu(This,pfi,vx,vy,pbs)	\
    (This)->lpVtbl -> PopupItemMenu(This,pfi,vx,vy,pbs)

#define IShellFolderViewDual3_get_Script(This,ppDisp)	\
    (This)->lpVtbl -> get_Script(This,ppDisp)

#define IShellFolderViewDual3_get_ViewOptions(This,plViewOptions)	\
    (This)->lpVtbl -> get_ViewOptions(This,plViewOptions)


#define IShellFolderViewDual3_get_CurrentViewMode(This,pViewMode)	\
    (This)->lpVtbl -> get_CurrentViewMode(This,pViewMode)

#define IShellFolderViewDual3_put_CurrentViewMode(This,ViewMode)	\
    (This)->lpVtbl -> put_CurrentViewMode(This,ViewMode)

#define IShellFolderViewDual3_SelectItemRelative(This,iRelative)	\
    (This)->lpVtbl -> SelectItemRelative(This,iRelative)


#define IShellFolderViewDual3_get_GroupBy(This,pbstrGroupBy)	\
    (This)->lpVtbl -> get_GroupBy(This,pbstrGroupBy)

#define IShellFolderViewDual3_put_GroupBy(This,bstrGroupBy)	\
    (This)->lpVtbl -> put_GroupBy(This,bstrGroupBy)

#define IShellFolderViewDual3_get_FolderFlags(This,pdwFlags)	\
    (This)->lpVtbl -> get_FolderFlags(This,pdwFlags)

#define IShellFolderViewDual3_put_FolderFlags(This,dwFlags)	\
    (This)->lpVtbl -> put_FolderFlags(This,dwFlags)

#define IShellFolderViewDual3_get_SortColumns(This,pbstrSortColumns)	\
    (This)->lpVtbl -> get_SortColumns(This,pbstrSortColumns)

#define IShellFolderViewDual3_put_SortColumns(This,bstrSortColumns)	\
    (This)->lpVtbl -> put_SortColumns(This,bstrSortColumns)

#define IShellFolderViewDual3_put_IconSize(This,iIconSize)	\
    (This)->lpVtbl -> put_IconSize(This,iIconSize)

#define IShellFolderViewDual3_get_IconSize(This,piIconSize)	\
    (This)->lpVtbl -> get_IconSize(This,piIconSize)

#define IShellFolderViewDual3_FilterView(This,bstrFilterText)	\
    (This)->lpVtbl -> FilterView(This,bstrFilterText)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IShellFolderViewDual3_get_GroupBy_Proxy( 
    IShellFolderViewDual3 __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pbstrGroupBy);


void __RPC_STUB IShellFolderViewDual3_get_GroupBy_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IShellFolderViewDual3_put_GroupBy_Proxy( 
    IShellFolderViewDual3 __RPC_FAR * This,
    /* [in] */ BSTR bstrGroupBy);


void __RPC_STUB IShellFolderViewDual3_put_GroupBy_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IShellFolderViewDual3_get_FolderFlags_Proxy( 
    IShellFolderViewDual3 __RPC_FAR * This,
    /* [retval][out] */ DWORD __RPC_FAR *pdwFlags);


void __RPC_STUB IShellFolderViewDual3_get_FolderFlags_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IShellFolderViewDual3_put_FolderFlags_Proxy( 
    IShellFolderViewDual3 __RPC_FAR * This,
    /* [in] */ DWORD dwFlags);


void __RPC_STUB IShellFolderViewDual3_put_FolderFlags_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IShellFolderViewDual3_get_SortColumns_Proxy( 
    IShellFolderViewDual3 __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pbstrSortColumns);


void __RPC_STUB IShellFolderViewDual3_get_SortColumns_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IShellFolderViewDual3_put_SortColumns_Proxy( 
    IShellFolderViewDual3 __RPC_FAR * This,
    /* [in] */ BSTR bstrSortColumns);


void __RPC_STUB IShellFolderViewDual3_put_SortColumns_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IShellFolderViewDual3_put_IconSize_Proxy( 
    IShellFolderViewDual3 __RPC_FAR * This,
    /* [in] */ int iIconSize);


void __RPC_STUB IShellFolderViewDual3_put_IconSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IShellFolderViewDual3_get_IconSize_Proxy( 
    IShellFolderViewDual3 __RPC_FAR * This,
    /* [retval][out] */ int __RPC_FAR *piIconSize);


void __RPC_STUB IShellFolderViewDual3_get_IconSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellFolderViewDual3_FilterView_Proxy( 
    IShellFolderViewDual3 __RPC_FAR * This,
    /* [unique][in] */ BSTR bstrFilterText);


void __RPC_STUB IShellFolderViewDual3_FilterView_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IShellFolderViewDual3_INTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_ShellFolderView;

#ifdef __cplusplus

class DECLSPEC_UUID("62112AA1-EBE4-11cf-A5FB-0020AFE7292D")
ShellFolderView;
#endif

#ifndef __IShellDispatch_INTERFACE_DEFINED__
#define __IShellDispatch_INTERFACE_DEFINED__

/* interface IShellDispatch */
/* [object][dual][hidden][oleautomation][helpstring][uuid] */ 


EXTERN_C const IID IID_IShellDispatch;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D8F015C0-C278-11CE-A49E-444553540000")
    IShellDispatch : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE NameSpace( 
            /* [in] */ VARIANT vDir,
            /* [retval][out] */ Folder __RPC_FAR *__RPC_FAR *ppsdf) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE BrowseForFolder( 
            /* [in] */ long Hwnd,
            /* [in] */ BSTR Title,
            /* [in] */ long Options,
            /* [optional][in] */ VARIANT RootFolder,
            /* [retval][out] */ Folder __RPC_FAR *__RPC_FAR *ppsdf) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Windows( 
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Open( 
            /* [in] */ VARIANT vDir) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Explore( 
            /* [in] */ VARIANT vDir) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE MinimizeAll( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE UndoMinimizeALL( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE FileRun( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CascadeWindows( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE TileVertically( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE TileHorizontally( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ShutdownWindows( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Suspend( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE EjectPC( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetTime( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE TrayProperties( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Help( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE FindFiles( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE FindComputer( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE RefreshMenu( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ControlPanelItem( 
            /* [in] */ BSTR bstrDir) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IShellDispatchVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IShellDispatch __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IShellDispatch __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IShellDispatch __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IShellDispatch __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IShellDispatch __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IShellDispatch __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IShellDispatch __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Application )( 
            IShellDispatch __RPC_FAR * This,
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Parent )( 
            IShellDispatch __RPC_FAR * This,
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *NameSpace )( 
            IShellDispatch __RPC_FAR * This,
            /* [in] */ VARIANT vDir,
            /* [retval][out] */ Folder __RPC_FAR *__RPC_FAR *ppsdf);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *BrowseForFolder )( 
            IShellDispatch __RPC_FAR * This,
            /* [in] */ long Hwnd,
            /* [in] */ BSTR Title,
            /* [in] */ long Options,
            /* [optional][in] */ VARIANT RootFolder,
            /* [retval][out] */ Folder __RPC_FAR *__RPC_FAR *ppsdf);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Windows )( 
            IShellDispatch __RPC_FAR * This,
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Open )( 
            IShellDispatch __RPC_FAR * This,
            /* [in] */ VARIANT vDir);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Explore )( 
            IShellDispatch __RPC_FAR * This,
            /* [in] */ VARIANT vDir);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *MinimizeAll )( 
            IShellDispatch __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *UndoMinimizeALL )( 
            IShellDispatch __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *FileRun )( 
            IShellDispatch __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CascadeWindows )( 
            IShellDispatch __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *TileVertically )( 
            IShellDispatch __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *TileHorizontally )( 
            IShellDispatch __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ShutdownWindows )( 
            IShellDispatch __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Suspend )( 
            IShellDispatch __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *EjectPC )( 
            IShellDispatch __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetTime )( 
            IShellDispatch __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *TrayProperties )( 
            IShellDispatch __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Help )( 
            IShellDispatch __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *FindFiles )( 
            IShellDispatch __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *FindComputer )( 
            IShellDispatch __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RefreshMenu )( 
            IShellDispatch __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ControlPanelItem )( 
            IShellDispatch __RPC_FAR * This,
            /* [in] */ BSTR bstrDir);
        
        END_INTERFACE
    } IShellDispatchVtbl;

    interface IShellDispatch
    {
        CONST_VTBL struct IShellDispatchVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IShellDispatch_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IShellDispatch_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IShellDispatch_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IShellDispatch_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IShellDispatch_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IShellDispatch_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IShellDispatch_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IShellDispatch_get_Application(This,ppid)	\
    (This)->lpVtbl -> get_Application(This,ppid)

#define IShellDispatch_get_Parent(This,ppid)	\
    (This)->lpVtbl -> get_Parent(This,ppid)

#define IShellDispatch_NameSpace(This,vDir,ppsdf)	\
    (This)->lpVtbl -> NameSpace(This,vDir,ppsdf)

#define IShellDispatch_BrowseForFolder(This,Hwnd,Title,Options,RootFolder,ppsdf)	\
    (This)->lpVtbl -> BrowseForFolder(This,Hwnd,Title,Options,RootFolder,ppsdf)

#define IShellDispatch_Windows(This,ppid)	\
    (This)->lpVtbl -> Windows(This,ppid)

#define IShellDispatch_Open(This,vDir)	\
    (This)->lpVtbl -> Open(This,vDir)

#define IShellDispatch_Explore(This,vDir)	\
    (This)->lpVtbl -> Explore(This,vDir)

#define IShellDispatch_MinimizeAll(This)	\
    (This)->lpVtbl -> MinimizeAll(This)

#define IShellDispatch_UndoMinimizeALL(This)	\
    (This)->lpVtbl -> UndoMinimizeALL(This)

#define IShellDispatch_FileRun(This)	\
    (This)->lpVtbl -> FileRun(This)

#define IShellDispatch_CascadeWindows(This)	\
    (This)->lpVtbl -> CascadeWindows(This)

#define IShellDispatch_TileVertically(This)	\
    (This)->lpVtbl -> TileVertically(This)

#define IShellDispatch_TileHorizontally(This)	\
    (This)->lpVtbl -> TileHorizontally(This)

#define IShellDispatch_ShutdownWindows(This)	\
    (This)->lpVtbl -> ShutdownWindows(This)

#define IShellDispatch_Suspend(This)	\
    (This)->lpVtbl -> Suspend(This)

#define IShellDispatch_EjectPC(This)	\
    (This)->lpVtbl -> EjectPC(This)

#define IShellDispatch_SetTime(This)	\
    (This)->lpVtbl -> SetTime(This)

#define IShellDispatch_TrayProperties(This)	\
    (This)->lpVtbl -> TrayProperties(This)

#define IShellDispatch_Help(This)	\
    (This)->lpVtbl -> Help(This)

#define IShellDispatch_FindFiles(This)	\
    (This)->lpVtbl -> FindFiles(This)

#define IShellDispatch_FindComputer(This)	\
    (This)->lpVtbl -> FindComputer(This)

#define IShellDispatch_RefreshMenu(This)	\
    (This)->lpVtbl -> RefreshMenu(This)

#define IShellDispatch_ControlPanelItem(This,bstrDir)	\
    (This)->lpVtbl -> ControlPanelItem(This,bstrDir)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IShellDispatch_get_Application_Proxy( 
    IShellDispatch __RPC_FAR * This,
    /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid);


void __RPC_STUB IShellDispatch_get_Application_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IShellDispatch_get_Parent_Proxy( 
    IShellDispatch __RPC_FAR * This,
    /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid);


void __RPC_STUB IShellDispatch_get_Parent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch_NameSpace_Proxy( 
    IShellDispatch __RPC_FAR * This,
    /* [in] */ VARIANT vDir,
    /* [retval][out] */ Folder __RPC_FAR *__RPC_FAR *ppsdf);


void __RPC_STUB IShellDispatch_NameSpace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch_BrowseForFolder_Proxy( 
    IShellDispatch __RPC_FAR * This,
    /* [in] */ long Hwnd,
    /* [in] */ BSTR Title,
    /* [in] */ long Options,
    /* [optional][in] */ VARIANT RootFolder,
    /* [retval][out] */ Folder __RPC_FAR *__RPC_FAR *ppsdf);


void __RPC_STUB IShellDispatch_BrowseForFolder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch_Windows_Proxy( 
    IShellDispatch __RPC_FAR * This,
    /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid);


void __RPC_STUB IShellDispatch_Windows_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch_Open_Proxy( 
    IShellDispatch __RPC_FAR * This,
    /* [in] */ VARIANT vDir);


void __RPC_STUB IShellDispatch_Open_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch_Explore_Proxy( 
    IShellDispatch __RPC_FAR * This,
    /* [in] */ VARIANT vDir);


void __RPC_STUB IShellDispatch_Explore_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch_MinimizeAll_Proxy( 
    IShellDispatch __RPC_FAR * This);


void __RPC_STUB IShellDispatch_MinimizeAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch_UndoMinimizeALL_Proxy( 
    IShellDispatch __RPC_FAR * This);


void __RPC_STUB IShellDispatch_UndoMinimizeALL_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch_FileRun_Proxy( 
    IShellDispatch __RPC_FAR * This);


void __RPC_STUB IShellDispatch_FileRun_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch_CascadeWindows_Proxy( 
    IShellDispatch __RPC_FAR * This);


void __RPC_STUB IShellDispatch_CascadeWindows_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch_TileVertically_Proxy( 
    IShellDispatch __RPC_FAR * This);


void __RPC_STUB IShellDispatch_TileVertically_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch_TileHorizontally_Proxy( 
    IShellDispatch __RPC_FAR * This);


void __RPC_STUB IShellDispatch_TileHorizontally_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch_ShutdownWindows_Proxy( 
    IShellDispatch __RPC_FAR * This);


void __RPC_STUB IShellDispatch_ShutdownWindows_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch_Suspend_Proxy( 
    IShellDispatch __RPC_FAR * This);


void __RPC_STUB IShellDispatch_Suspend_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch_EjectPC_Proxy( 
    IShellDispatch __RPC_FAR * This);


void __RPC_STUB IShellDispatch_EjectPC_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch_SetTime_Proxy( 
    IShellDispatch __RPC_FAR * This);


void __RPC_STUB IShellDispatch_SetTime_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch_TrayProperties_Proxy( 
    IShellDispatch __RPC_FAR * This);


void __RPC_STUB IShellDispatch_TrayProperties_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch_Help_Proxy( 
    IShellDispatch __RPC_FAR * This);


void __RPC_STUB IShellDispatch_Help_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch_FindFiles_Proxy( 
    IShellDispatch __RPC_FAR * This);


void __RPC_STUB IShellDispatch_FindFiles_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch_FindComputer_Proxy( 
    IShellDispatch __RPC_FAR * This);


void __RPC_STUB IShellDispatch_FindComputer_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch_RefreshMenu_Proxy( 
    IShellDispatch __RPC_FAR * This);


void __RPC_STUB IShellDispatch_RefreshMenu_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch_ControlPanelItem_Proxy( 
    IShellDispatch __RPC_FAR * This,
    /* [in] */ BSTR bstrDir);


void __RPC_STUB IShellDispatch_ControlPanelItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IShellDispatch_INTERFACE_DEFINED__ */


#ifndef __IShellDispatch2_INTERFACE_DEFINED__
#define __IShellDispatch2_INTERFACE_DEFINED__

/* interface IShellDispatch2 */
/* [object][dual][hidden][oleautomation][helpstring][uuid] */ 


EXTERN_C const IID IID_IShellDispatch2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A4C6892C-3BA9-11d2-9DEA-00C04FB16162")
    IShellDispatch2 : public IShellDispatch
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE IsRestricted( 
            /* [in] */ BSTR Group,
            /* [in] */ BSTR Restriction,
            /* [retval][out] */ long __RPC_FAR *plRestrictValue) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ShellExecute( 
            /* [in] */ BSTR File,
            /* [optional][in] */ VARIANT vArgs,
            /* [optional][in] */ VARIANT vDir,
            /* [optional][in] */ VARIANT vOperation,
            /* [optional][in] */ VARIANT vShow) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE FindPrinter( 
            /* [optional][in] */ BSTR name,
            /* [optional][in] */ BSTR location,
            /* [optional][in] */ BSTR model) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetSystemInformation( 
            /* [in] */ BSTR name,
            /* [retval][out] */ VARIANT __RPC_FAR *pv) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ServiceStart( 
            /* [in] */ BSTR ServiceName,
            /* [in] */ VARIANT Persistent,
            /* [retval][out] */ VARIANT __RPC_FAR *pSuccess) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ServiceStop( 
            /* [in] */ BSTR ServiceName,
            /* [in] */ VARIANT Persistent,
            /* [retval][out] */ VARIANT __RPC_FAR *pSuccess) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE IsServiceRunning( 
            /* [in] */ BSTR ServiceName,
            /* [retval][out] */ VARIANT __RPC_FAR *pRunning) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CanStartStopService( 
            /* [in] */ BSTR ServiceName,
            /* [retval][out] */ VARIANT __RPC_FAR *pCanStartStop) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ShowBrowserBar( 
            /* [in] */ BSTR bstrClsid,
            /* [in] */ VARIANT bShow,
            /* [retval][out] */ VARIANT __RPC_FAR *pSuccess) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IShellDispatch2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IShellDispatch2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IShellDispatch2 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IShellDispatch2 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IShellDispatch2 __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IShellDispatch2 __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IShellDispatch2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IShellDispatch2 __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Application )( 
            IShellDispatch2 __RPC_FAR * This,
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Parent )( 
            IShellDispatch2 __RPC_FAR * This,
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *NameSpace )( 
            IShellDispatch2 __RPC_FAR * This,
            /* [in] */ VARIANT vDir,
            /* [retval][out] */ Folder __RPC_FAR *__RPC_FAR *ppsdf);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *BrowseForFolder )( 
            IShellDispatch2 __RPC_FAR * This,
            /* [in] */ long Hwnd,
            /* [in] */ BSTR Title,
            /* [in] */ long Options,
            /* [optional][in] */ VARIANT RootFolder,
            /* [retval][out] */ Folder __RPC_FAR *__RPC_FAR *ppsdf);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Windows )( 
            IShellDispatch2 __RPC_FAR * This,
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Open )( 
            IShellDispatch2 __RPC_FAR * This,
            /* [in] */ VARIANT vDir);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Explore )( 
            IShellDispatch2 __RPC_FAR * This,
            /* [in] */ VARIANT vDir);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *MinimizeAll )( 
            IShellDispatch2 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *UndoMinimizeALL )( 
            IShellDispatch2 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *FileRun )( 
            IShellDispatch2 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CascadeWindows )( 
            IShellDispatch2 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *TileVertically )( 
            IShellDispatch2 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *TileHorizontally )( 
            IShellDispatch2 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ShutdownWindows )( 
            IShellDispatch2 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Suspend )( 
            IShellDispatch2 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *EjectPC )( 
            IShellDispatch2 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetTime )( 
            IShellDispatch2 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *TrayProperties )( 
            IShellDispatch2 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Help )( 
            IShellDispatch2 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *FindFiles )( 
            IShellDispatch2 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *FindComputer )( 
            IShellDispatch2 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RefreshMenu )( 
            IShellDispatch2 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ControlPanelItem )( 
            IShellDispatch2 __RPC_FAR * This,
            /* [in] */ BSTR bstrDir);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *IsRestricted )( 
            IShellDispatch2 __RPC_FAR * This,
            /* [in] */ BSTR Group,
            /* [in] */ BSTR Restriction,
            /* [retval][out] */ long __RPC_FAR *plRestrictValue);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ShellExecute )( 
            IShellDispatch2 __RPC_FAR * This,
            /* [in] */ BSTR File,
            /* [optional][in] */ VARIANT vArgs,
            /* [optional][in] */ VARIANT vDir,
            /* [optional][in] */ VARIANT vOperation,
            /* [optional][in] */ VARIANT vShow);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *FindPrinter )( 
            IShellDispatch2 __RPC_FAR * This,
            /* [optional][in] */ BSTR name,
            /* [optional][in] */ BSTR location,
            /* [optional][in] */ BSTR model);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSystemInformation )( 
            IShellDispatch2 __RPC_FAR * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ VARIANT __RPC_FAR *pv);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ServiceStart )( 
            IShellDispatch2 __RPC_FAR * This,
            /* [in] */ BSTR ServiceName,
            /* [in] */ VARIANT Persistent,
            /* [retval][out] */ VARIANT __RPC_FAR *pSuccess);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ServiceStop )( 
            IShellDispatch2 __RPC_FAR * This,
            /* [in] */ BSTR ServiceName,
            /* [in] */ VARIANT Persistent,
            /* [retval][out] */ VARIANT __RPC_FAR *pSuccess);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *IsServiceRunning )( 
            IShellDispatch2 __RPC_FAR * This,
            /* [in] */ BSTR ServiceName,
            /* [retval][out] */ VARIANT __RPC_FAR *pRunning);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CanStartStopService )( 
            IShellDispatch2 __RPC_FAR * This,
            /* [in] */ BSTR ServiceName,
            /* [retval][out] */ VARIANT __RPC_FAR *pCanStartStop);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ShowBrowserBar )( 
            IShellDispatch2 __RPC_FAR * This,
            /* [in] */ BSTR bstrClsid,
            /* [in] */ VARIANT bShow,
            /* [retval][out] */ VARIANT __RPC_FAR *pSuccess);
        
        END_INTERFACE
    } IShellDispatch2Vtbl;

    interface IShellDispatch2
    {
        CONST_VTBL struct IShellDispatch2Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IShellDispatch2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IShellDispatch2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IShellDispatch2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IShellDispatch2_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IShellDispatch2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IShellDispatch2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IShellDispatch2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IShellDispatch2_get_Application(This,ppid)	\
    (This)->lpVtbl -> get_Application(This,ppid)

#define IShellDispatch2_get_Parent(This,ppid)	\
    (This)->lpVtbl -> get_Parent(This,ppid)

#define IShellDispatch2_NameSpace(This,vDir,ppsdf)	\
    (This)->lpVtbl -> NameSpace(This,vDir,ppsdf)

#define IShellDispatch2_BrowseForFolder(This,Hwnd,Title,Options,RootFolder,ppsdf)	\
    (This)->lpVtbl -> BrowseForFolder(This,Hwnd,Title,Options,RootFolder,ppsdf)

#define IShellDispatch2_Windows(This,ppid)	\
    (This)->lpVtbl -> Windows(This,ppid)

#define IShellDispatch2_Open(This,vDir)	\
    (This)->lpVtbl -> Open(This,vDir)

#define IShellDispatch2_Explore(This,vDir)	\
    (This)->lpVtbl -> Explore(This,vDir)

#define IShellDispatch2_MinimizeAll(This)	\
    (This)->lpVtbl -> MinimizeAll(This)

#define IShellDispatch2_UndoMinimizeALL(This)	\
    (This)->lpVtbl -> UndoMinimizeALL(This)

#define IShellDispatch2_FileRun(This)	\
    (This)->lpVtbl -> FileRun(This)

#define IShellDispatch2_CascadeWindows(This)	\
    (This)->lpVtbl -> CascadeWindows(This)

#define IShellDispatch2_TileVertically(This)	\
    (This)->lpVtbl -> TileVertically(This)

#define IShellDispatch2_TileHorizontally(This)	\
    (This)->lpVtbl -> TileHorizontally(This)

#define IShellDispatch2_ShutdownWindows(This)	\
    (This)->lpVtbl -> ShutdownWindows(This)

#define IShellDispatch2_Suspend(This)	\
    (This)->lpVtbl -> Suspend(This)

#define IShellDispatch2_EjectPC(This)	\
    (This)->lpVtbl -> EjectPC(This)

#define IShellDispatch2_SetTime(This)	\
    (This)->lpVtbl -> SetTime(This)

#define IShellDispatch2_TrayProperties(This)	\
    (This)->lpVtbl -> TrayProperties(This)

#define IShellDispatch2_Help(This)	\
    (This)->lpVtbl -> Help(This)

#define IShellDispatch2_FindFiles(This)	\
    (This)->lpVtbl -> FindFiles(This)

#define IShellDispatch2_FindComputer(This)	\
    (This)->lpVtbl -> FindComputer(This)

#define IShellDispatch2_RefreshMenu(This)	\
    (This)->lpVtbl -> RefreshMenu(This)

#define IShellDispatch2_ControlPanelItem(This,bstrDir)	\
    (This)->lpVtbl -> ControlPanelItem(This,bstrDir)


#define IShellDispatch2_IsRestricted(This,Group,Restriction,plRestrictValue)	\
    (This)->lpVtbl -> IsRestricted(This,Group,Restriction,plRestrictValue)

#define IShellDispatch2_ShellExecute(This,File,vArgs,vDir,vOperation,vShow)	\
    (This)->lpVtbl -> ShellExecute(This,File,vArgs,vDir,vOperation,vShow)

#define IShellDispatch2_FindPrinter(This,name,location,model)	\
    (This)->lpVtbl -> FindPrinter(This,name,location,model)

#define IShellDispatch2_GetSystemInformation(This,name,pv)	\
    (This)->lpVtbl -> GetSystemInformation(This,name,pv)

#define IShellDispatch2_ServiceStart(This,ServiceName,Persistent,pSuccess)	\
    (This)->lpVtbl -> ServiceStart(This,ServiceName,Persistent,pSuccess)

#define IShellDispatch2_ServiceStop(This,ServiceName,Persistent,pSuccess)	\
    (This)->lpVtbl -> ServiceStop(This,ServiceName,Persistent,pSuccess)

#define IShellDispatch2_IsServiceRunning(This,ServiceName,pRunning)	\
    (This)->lpVtbl -> IsServiceRunning(This,ServiceName,pRunning)

#define IShellDispatch2_CanStartStopService(This,ServiceName,pCanStartStop)	\
    (This)->lpVtbl -> CanStartStopService(This,ServiceName,pCanStartStop)

#define IShellDispatch2_ShowBrowserBar(This,bstrClsid,bShow,pSuccess)	\
    (This)->lpVtbl -> ShowBrowserBar(This,bstrClsid,bShow,pSuccess)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch2_IsRestricted_Proxy( 
    IShellDispatch2 __RPC_FAR * This,
    /* [in] */ BSTR Group,
    /* [in] */ BSTR Restriction,
    /* [retval][out] */ long __RPC_FAR *plRestrictValue);


void __RPC_STUB IShellDispatch2_IsRestricted_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch2_ShellExecute_Proxy( 
    IShellDispatch2 __RPC_FAR * This,
    /* [in] */ BSTR File,
    /* [optional][in] */ VARIANT vArgs,
    /* [optional][in] */ VARIANT vDir,
    /* [optional][in] */ VARIANT vOperation,
    /* [optional][in] */ VARIANT vShow);


void __RPC_STUB IShellDispatch2_ShellExecute_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch2_FindPrinter_Proxy( 
    IShellDispatch2 __RPC_FAR * This,
    /* [optional][in] */ BSTR name,
    /* [optional][in] */ BSTR location,
    /* [optional][in] */ BSTR model);


void __RPC_STUB IShellDispatch2_FindPrinter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch2_GetSystemInformation_Proxy( 
    IShellDispatch2 __RPC_FAR * This,
    /* [in] */ BSTR name,
    /* [retval][out] */ VARIANT __RPC_FAR *pv);


void __RPC_STUB IShellDispatch2_GetSystemInformation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch2_ServiceStart_Proxy( 
    IShellDispatch2 __RPC_FAR * This,
    /* [in] */ BSTR ServiceName,
    /* [in] */ VARIANT Persistent,
    /* [retval][out] */ VARIANT __RPC_FAR *pSuccess);


void __RPC_STUB IShellDispatch2_ServiceStart_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch2_ServiceStop_Proxy( 
    IShellDispatch2 __RPC_FAR * This,
    /* [in] */ BSTR ServiceName,
    /* [in] */ VARIANT Persistent,
    /* [retval][out] */ VARIANT __RPC_FAR *pSuccess);


void __RPC_STUB IShellDispatch2_ServiceStop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch2_IsServiceRunning_Proxy( 
    IShellDispatch2 __RPC_FAR * This,
    /* [in] */ BSTR ServiceName,
    /* [retval][out] */ VARIANT __RPC_FAR *pRunning);


void __RPC_STUB IShellDispatch2_IsServiceRunning_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch2_CanStartStopService_Proxy( 
    IShellDispatch2 __RPC_FAR * This,
    /* [in] */ BSTR ServiceName,
    /* [retval][out] */ VARIANT __RPC_FAR *pCanStartStop);


void __RPC_STUB IShellDispatch2_CanStartStopService_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch2_ShowBrowserBar_Proxy( 
    IShellDispatch2 __RPC_FAR * This,
    /* [in] */ BSTR bstrClsid,
    /* [in] */ VARIANT bShow,
    /* [retval][out] */ VARIANT __RPC_FAR *pSuccess);


void __RPC_STUB IShellDispatch2_ShowBrowserBar_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IShellDispatch2_INTERFACE_DEFINED__ */


#ifndef __IShellDispatch3_INTERFACE_DEFINED__
#define __IShellDispatch3_INTERFACE_DEFINED__

/* interface IShellDispatch3 */
/* [object][dual][hidden][oleautomation][helpstring][uuid] */ 


EXTERN_C const IID IID_IShellDispatch3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("177160ca-bb5a-411c-841d-bd38facdeaa0")
    IShellDispatch3 : public IShellDispatch2
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddToRecent( 
            /* [in] */ VARIANT varFile,
            /* [optional][in] */ BSTR bstrCategory) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IShellDispatch3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IShellDispatch3 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IShellDispatch3 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IShellDispatch3 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IShellDispatch3 __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IShellDispatch3 __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IShellDispatch3 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IShellDispatch3 __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Application )( 
            IShellDispatch3 __RPC_FAR * This,
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Parent )( 
            IShellDispatch3 __RPC_FAR * This,
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *NameSpace )( 
            IShellDispatch3 __RPC_FAR * This,
            /* [in] */ VARIANT vDir,
            /* [retval][out] */ Folder __RPC_FAR *__RPC_FAR *ppsdf);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *BrowseForFolder )( 
            IShellDispatch3 __RPC_FAR * This,
            /* [in] */ long Hwnd,
            /* [in] */ BSTR Title,
            /* [in] */ long Options,
            /* [optional][in] */ VARIANT RootFolder,
            /* [retval][out] */ Folder __RPC_FAR *__RPC_FAR *ppsdf);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Windows )( 
            IShellDispatch3 __RPC_FAR * This,
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Open )( 
            IShellDispatch3 __RPC_FAR * This,
            /* [in] */ VARIANT vDir);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Explore )( 
            IShellDispatch3 __RPC_FAR * This,
            /* [in] */ VARIANT vDir);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *MinimizeAll )( 
            IShellDispatch3 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *UndoMinimizeALL )( 
            IShellDispatch3 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *FileRun )( 
            IShellDispatch3 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CascadeWindows )( 
            IShellDispatch3 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *TileVertically )( 
            IShellDispatch3 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *TileHorizontally )( 
            IShellDispatch3 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ShutdownWindows )( 
            IShellDispatch3 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Suspend )( 
            IShellDispatch3 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *EjectPC )( 
            IShellDispatch3 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetTime )( 
            IShellDispatch3 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *TrayProperties )( 
            IShellDispatch3 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Help )( 
            IShellDispatch3 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *FindFiles )( 
            IShellDispatch3 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *FindComputer )( 
            IShellDispatch3 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RefreshMenu )( 
            IShellDispatch3 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ControlPanelItem )( 
            IShellDispatch3 __RPC_FAR * This,
            /* [in] */ BSTR bstrDir);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *IsRestricted )( 
            IShellDispatch3 __RPC_FAR * This,
            /* [in] */ BSTR Group,
            /* [in] */ BSTR Restriction,
            /* [retval][out] */ long __RPC_FAR *plRestrictValue);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ShellExecute )( 
            IShellDispatch3 __RPC_FAR * This,
            /* [in] */ BSTR File,
            /* [optional][in] */ VARIANT vArgs,
            /* [optional][in] */ VARIANT vDir,
            /* [optional][in] */ VARIANT vOperation,
            /* [optional][in] */ VARIANT vShow);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *FindPrinter )( 
            IShellDispatch3 __RPC_FAR * This,
            /* [optional][in] */ BSTR name,
            /* [optional][in] */ BSTR location,
            /* [optional][in] */ BSTR model);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSystemInformation )( 
            IShellDispatch3 __RPC_FAR * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ VARIANT __RPC_FAR *pv);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ServiceStart )( 
            IShellDispatch3 __RPC_FAR * This,
            /* [in] */ BSTR ServiceName,
            /* [in] */ VARIANT Persistent,
            /* [retval][out] */ VARIANT __RPC_FAR *pSuccess);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ServiceStop )( 
            IShellDispatch3 __RPC_FAR * This,
            /* [in] */ BSTR ServiceName,
            /* [in] */ VARIANT Persistent,
            /* [retval][out] */ VARIANT __RPC_FAR *pSuccess);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *IsServiceRunning )( 
            IShellDispatch3 __RPC_FAR * This,
            /* [in] */ BSTR ServiceName,
            /* [retval][out] */ VARIANT __RPC_FAR *pRunning);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CanStartStopService )( 
            IShellDispatch3 __RPC_FAR * This,
            /* [in] */ BSTR ServiceName,
            /* [retval][out] */ VARIANT __RPC_FAR *pCanStartStop);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ShowBrowserBar )( 
            IShellDispatch3 __RPC_FAR * This,
            /* [in] */ BSTR bstrClsid,
            /* [in] */ VARIANT bShow,
            /* [retval][out] */ VARIANT __RPC_FAR *pSuccess);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AddToRecent )( 
            IShellDispatch3 __RPC_FAR * This,
            /* [in] */ VARIANT varFile,
            /* [optional][in] */ BSTR bstrCategory);
        
        END_INTERFACE
    } IShellDispatch3Vtbl;

    interface IShellDispatch3
    {
        CONST_VTBL struct IShellDispatch3Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IShellDispatch3_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IShellDispatch3_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IShellDispatch3_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IShellDispatch3_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IShellDispatch3_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IShellDispatch3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IShellDispatch3_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IShellDispatch3_get_Application(This,ppid)	\
    (This)->lpVtbl -> get_Application(This,ppid)

#define IShellDispatch3_get_Parent(This,ppid)	\
    (This)->lpVtbl -> get_Parent(This,ppid)

#define IShellDispatch3_NameSpace(This,vDir,ppsdf)	\
    (This)->lpVtbl -> NameSpace(This,vDir,ppsdf)

#define IShellDispatch3_BrowseForFolder(This,Hwnd,Title,Options,RootFolder,ppsdf)	\
    (This)->lpVtbl -> BrowseForFolder(This,Hwnd,Title,Options,RootFolder,ppsdf)

#define IShellDispatch3_Windows(This,ppid)	\
    (This)->lpVtbl -> Windows(This,ppid)

#define IShellDispatch3_Open(This,vDir)	\
    (This)->lpVtbl -> Open(This,vDir)

#define IShellDispatch3_Explore(This,vDir)	\
    (This)->lpVtbl -> Explore(This,vDir)

#define IShellDispatch3_MinimizeAll(This)	\
    (This)->lpVtbl -> MinimizeAll(This)

#define IShellDispatch3_UndoMinimizeALL(This)	\
    (This)->lpVtbl -> UndoMinimizeALL(This)

#define IShellDispatch3_FileRun(This)	\
    (This)->lpVtbl -> FileRun(This)

#define IShellDispatch3_CascadeWindows(This)	\
    (This)->lpVtbl -> CascadeWindows(This)

#define IShellDispatch3_TileVertically(This)	\
    (This)->lpVtbl -> TileVertically(This)

#define IShellDispatch3_TileHorizontally(This)	\
    (This)->lpVtbl -> TileHorizontally(This)

#define IShellDispatch3_ShutdownWindows(This)	\
    (This)->lpVtbl -> ShutdownWindows(This)

#define IShellDispatch3_Suspend(This)	\
    (This)->lpVtbl -> Suspend(This)

#define IShellDispatch3_EjectPC(This)	\
    (This)->lpVtbl -> EjectPC(This)

#define IShellDispatch3_SetTime(This)	\
    (This)->lpVtbl -> SetTime(This)

#define IShellDispatch3_TrayProperties(This)	\
    (This)->lpVtbl -> TrayProperties(This)

#define IShellDispatch3_Help(This)	\
    (This)->lpVtbl -> Help(This)

#define IShellDispatch3_FindFiles(This)	\
    (This)->lpVtbl -> FindFiles(This)

#define IShellDispatch3_FindComputer(This)	\
    (This)->lpVtbl -> FindComputer(This)

#define IShellDispatch3_RefreshMenu(This)	\
    (This)->lpVtbl -> RefreshMenu(This)

#define IShellDispatch3_ControlPanelItem(This,bstrDir)	\
    (This)->lpVtbl -> ControlPanelItem(This,bstrDir)


#define IShellDispatch3_IsRestricted(This,Group,Restriction,plRestrictValue)	\
    (This)->lpVtbl -> IsRestricted(This,Group,Restriction,plRestrictValue)

#define IShellDispatch3_ShellExecute(This,File,vArgs,vDir,vOperation,vShow)	\
    (This)->lpVtbl -> ShellExecute(This,File,vArgs,vDir,vOperation,vShow)

#define IShellDispatch3_FindPrinter(This,name,location,model)	\
    (This)->lpVtbl -> FindPrinter(This,name,location,model)

#define IShellDispatch3_GetSystemInformation(This,name,pv)	\
    (This)->lpVtbl -> GetSystemInformation(This,name,pv)

#define IShellDispatch3_ServiceStart(This,ServiceName,Persistent,pSuccess)	\
    (This)->lpVtbl -> ServiceStart(This,ServiceName,Persistent,pSuccess)

#define IShellDispatch3_ServiceStop(This,ServiceName,Persistent,pSuccess)	\
    (This)->lpVtbl -> ServiceStop(This,ServiceName,Persistent,pSuccess)

#define IShellDispatch3_IsServiceRunning(This,ServiceName,pRunning)	\
    (This)->lpVtbl -> IsServiceRunning(This,ServiceName,pRunning)

#define IShellDispatch3_CanStartStopService(This,ServiceName,pCanStartStop)	\
    (This)->lpVtbl -> CanStartStopService(This,ServiceName,pCanStartStop)

#define IShellDispatch3_ShowBrowserBar(This,bstrClsid,bShow,pSuccess)	\
    (This)->lpVtbl -> ShowBrowserBar(This,bstrClsid,bShow,pSuccess)


#define IShellDispatch3_AddToRecent(This,varFile,bstrCategory)	\
    (This)->lpVtbl -> AddToRecent(This,varFile,bstrCategory)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch3_AddToRecent_Proxy( 
    IShellDispatch3 __RPC_FAR * This,
    /* [in] */ VARIANT varFile,
    /* [optional][in] */ BSTR bstrCategory);


void __RPC_STUB IShellDispatch3_AddToRecent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IShellDispatch3_INTERFACE_DEFINED__ */


#ifndef __IShellDispatch4_INTERFACE_DEFINED__
#define __IShellDispatch4_INTERFACE_DEFINED__

/* interface IShellDispatch4 */
/* [object][dual][hidden][oleautomation][helpstring][uuid] */ 


EXTERN_C const IID IID_IShellDispatch4;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("efd84b2d-4bcf-4298-be25-eb542a59fbda")
    IShellDispatch4 : public IShellDispatch3
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE WindowsSecurity( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ToggleDesktop( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ExplorerPolicy( 
            /* [in] */ BSTR bstrPolicyName,
            /* [retval][out] */ VARIANT __RPC_FAR *pValue) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetSetting( 
            /* [in] */ long lSetting,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pResult) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IShellDispatch4Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IShellDispatch4 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IShellDispatch4 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IShellDispatch4 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IShellDispatch4 __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IShellDispatch4 __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IShellDispatch4 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IShellDispatch4 __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Application )( 
            IShellDispatch4 __RPC_FAR * This,
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Parent )( 
            IShellDispatch4 __RPC_FAR * This,
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *NameSpace )( 
            IShellDispatch4 __RPC_FAR * This,
            /* [in] */ VARIANT vDir,
            /* [retval][out] */ Folder __RPC_FAR *__RPC_FAR *ppsdf);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *BrowseForFolder )( 
            IShellDispatch4 __RPC_FAR * This,
            /* [in] */ long Hwnd,
            /* [in] */ BSTR Title,
            /* [in] */ long Options,
            /* [optional][in] */ VARIANT RootFolder,
            /* [retval][out] */ Folder __RPC_FAR *__RPC_FAR *ppsdf);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Windows )( 
            IShellDispatch4 __RPC_FAR * This,
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Open )( 
            IShellDispatch4 __RPC_FAR * This,
            /* [in] */ VARIANT vDir);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Explore )( 
            IShellDispatch4 __RPC_FAR * This,
            /* [in] */ VARIANT vDir);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *MinimizeAll )( 
            IShellDispatch4 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *UndoMinimizeALL )( 
            IShellDispatch4 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *FileRun )( 
            IShellDispatch4 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CascadeWindows )( 
            IShellDispatch4 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *TileVertically )( 
            IShellDispatch4 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *TileHorizontally )( 
            IShellDispatch4 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ShutdownWindows )( 
            IShellDispatch4 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Suspend )( 
            IShellDispatch4 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *EjectPC )( 
            IShellDispatch4 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetTime )( 
            IShellDispatch4 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *TrayProperties )( 
            IShellDispatch4 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Help )( 
            IShellDispatch4 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *FindFiles )( 
            IShellDispatch4 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *FindComputer )( 
            IShellDispatch4 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RefreshMenu )( 
            IShellDispatch4 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ControlPanelItem )( 
            IShellDispatch4 __RPC_FAR * This,
            /* [in] */ BSTR bstrDir);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *IsRestricted )( 
            IShellDispatch4 __RPC_FAR * This,
            /* [in] */ BSTR Group,
            /* [in] */ BSTR Restriction,
            /* [retval][out] */ long __RPC_FAR *plRestrictValue);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ShellExecute )( 
            IShellDispatch4 __RPC_FAR * This,
            /* [in] */ BSTR File,
            /* [optional][in] */ VARIANT vArgs,
            /* [optional][in] */ VARIANT vDir,
            /* [optional][in] */ VARIANT vOperation,
            /* [optional][in] */ VARIANT vShow);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *FindPrinter )( 
            IShellDispatch4 __RPC_FAR * This,
            /* [optional][in] */ BSTR name,
            /* [optional][in] */ BSTR location,
            /* [optional][in] */ BSTR model);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSystemInformation )( 
            IShellDispatch4 __RPC_FAR * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ VARIANT __RPC_FAR *pv);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ServiceStart )( 
            IShellDispatch4 __RPC_FAR * This,
            /* [in] */ BSTR ServiceName,
            /* [in] */ VARIANT Persistent,
            /* [retval][out] */ VARIANT __RPC_FAR *pSuccess);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ServiceStop )( 
            IShellDispatch4 __RPC_FAR * This,
            /* [in] */ BSTR ServiceName,
            /* [in] */ VARIANT Persistent,
            /* [retval][out] */ VARIANT __RPC_FAR *pSuccess);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *IsServiceRunning )( 
            IShellDispatch4 __RPC_FAR * This,
            /* [in] */ BSTR ServiceName,
            /* [retval][out] */ VARIANT __RPC_FAR *pRunning);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CanStartStopService )( 
            IShellDispatch4 __RPC_FAR * This,
            /* [in] */ BSTR ServiceName,
            /* [retval][out] */ VARIANT __RPC_FAR *pCanStartStop);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ShowBrowserBar )( 
            IShellDispatch4 __RPC_FAR * This,
            /* [in] */ BSTR bstrClsid,
            /* [in] */ VARIANT bShow,
            /* [retval][out] */ VARIANT __RPC_FAR *pSuccess);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AddToRecent )( 
            IShellDispatch4 __RPC_FAR * This,
            /* [in] */ VARIANT varFile,
            /* [optional][in] */ BSTR bstrCategory);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *WindowsSecurity )( 
            IShellDispatch4 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ToggleDesktop )( 
            IShellDispatch4 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ExplorerPolicy )( 
            IShellDispatch4 __RPC_FAR * This,
            /* [in] */ BSTR bstrPolicyName,
            /* [retval][out] */ VARIANT __RPC_FAR *pValue);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSetting )( 
            IShellDispatch4 __RPC_FAR * This,
            /* [in] */ long lSetting,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pResult);
        
        END_INTERFACE
    } IShellDispatch4Vtbl;

    interface IShellDispatch4
    {
        CONST_VTBL struct IShellDispatch4Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IShellDispatch4_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IShellDispatch4_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IShellDispatch4_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IShellDispatch4_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IShellDispatch4_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IShellDispatch4_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IShellDispatch4_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IShellDispatch4_get_Application(This,ppid)	\
    (This)->lpVtbl -> get_Application(This,ppid)

#define IShellDispatch4_get_Parent(This,ppid)	\
    (This)->lpVtbl -> get_Parent(This,ppid)

#define IShellDispatch4_NameSpace(This,vDir,ppsdf)	\
    (This)->lpVtbl -> NameSpace(This,vDir,ppsdf)

#define IShellDispatch4_BrowseForFolder(This,Hwnd,Title,Options,RootFolder,ppsdf)	\
    (This)->lpVtbl -> BrowseForFolder(This,Hwnd,Title,Options,RootFolder,ppsdf)

#define IShellDispatch4_Windows(This,ppid)	\
    (This)->lpVtbl -> Windows(This,ppid)

#define IShellDispatch4_Open(This,vDir)	\
    (This)->lpVtbl -> Open(This,vDir)

#define IShellDispatch4_Explore(This,vDir)	\
    (This)->lpVtbl -> Explore(This,vDir)

#define IShellDispatch4_MinimizeAll(This)	\
    (This)->lpVtbl -> MinimizeAll(This)

#define IShellDispatch4_UndoMinimizeALL(This)	\
    (This)->lpVtbl -> UndoMinimizeALL(This)

#define IShellDispatch4_FileRun(This)	\
    (This)->lpVtbl -> FileRun(This)

#define IShellDispatch4_CascadeWindows(This)	\
    (This)->lpVtbl -> CascadeWindows(This)

#define IShellDispatch4_TileVertically(This)	\
    (This)->lpVtbl -> TileVertically(This)

#define IShellDispatch4_TileHorizontally(This)	\
    (This)->lpVtbl -> TileHorizontally(This)

#define IShellDispatch4_ShutdownWindows(This)	\
    (This)->lpVtbl -> ShutdownWindows(This)

#define IShellDispatch4_Suspend(This)	\
    (This)->lpVtbl -> Suspend(This)

#define IShellDispatch4_EjectPC(This)	\
    (This)->lpVtbl -> EjectPC(This)

#define IShellDispatch4_SetTime(This)	\
    (This)->lpVtbl -> SetTime(This)

#define IShellDispatch4_TrayProperties(This)	\
    (This)->lpVtbl -> TrayProperties(This)

#define IShellDispatch4_Help(This)	\
    (This)->lpVtbl -> Help(This)

#define IShellDispatch4_FindFiles(This)	\
    (This)->lpVtbl -> FindFiles(This)

#define IShellDispatch4_FindComputer(This)	\
    (This)->lpVtbl -> FindComputer(This)

#define IShellDispatch4_RefreshMenu(This)	\
    (This)->lpVtbl -> RefreshMenu(This)

#define IShellDispatch4_ControlPanelItem(This,bstrDir)	\
    (This)->lpVtbl -> ControlPanelItem(This,bstrDir)


#define IShellDispatch4_IsRestricted(This,Group,Restriction,plRestrictValue)	\
    (This)->lpVtbl -> IsRestricted(This,Group,Restriction,plRestrictValue)

#define IShellDispatch4_ShellExecute(This,File,vArgs,vDir,vOperation,vShow)	\
    (This)->lpVtbl -> ShellExecute(This,File,vArgs,vDir,vOperation,vShow)

#define IShellDispatch4_FindPrinter(This,name,location,model)	\
    (This)->lpVtbl -> FindPrinter(This,name,location,model)

#define IShellDispatch4_GetSystemInformation(This,name,pv)	\
    (This)->lpVtbl -> GetSystemInformation(This,name,pv)

#define IShellDispatch4_ServiceStart(This,ServiceName,Persistent,pSuccess)	\
    (This)->lpVtbl -> ServiceStart(This,ServiceName,Persistent,pSuccess)

#define IShellDispatch4_ServiceStop(This,ServiceName,Persistent,pSuccess)	\
    (This)->lpVtbl -> ServiceStop(This,ServiceName,Persistent,pSuccess)

#define IShellDispatch4_IsServiceRunning(This,ServiceName,pRunning)	\
    (This)->lpVtbl -> IsServiceRunning(This,ServiceName,pRunning)

#define IShellDispatch4_CanStartStopService(This,ServiceName,pCanStartStop)	\
    (This)->lpVtbl -> CanStartStopService(This,ServiceName,pCanStartStop)

#define IShellDispatch4_ShowBrowserBar(This,bstrClsid,bShow,pSuccess)	\
    (This)->lpVtbl -> ShowBrowserBar(This,bstrClsid,bShow,pSuccess)


#define IShellDispatch4_AddToRecent(This,varFile,bstrCategory)	\
    (This)->lpVtbl -> AddToRecent(This,varFile,bstrCategory)


#define IShellDispatch4_WindowsSecurity(This)	\
    (This)->lpVtbl -> WindowsSecurity(This)

#define IShellDispatch4_ToggleDesktop(This)	\
    (This)->lpVtbl -> ToggleDesktop(This)

#define IShellDispatch4_ExplorerPolicy(This,bstrPolicyName,pValue)	\
    (This)->lpVtbl -> ExplorerPolicy(This,bstrPolicyName,pValue)

#define IShellDispatch4_GetSetting(This,lSetting,pResult)	\
    (This)->lpVtbl -> GetSetting(This,lSetting,pResult)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch4_WindowsSecurity_Proxy( 
    IShellDispatch4 __RPC_FAR * This);


void __RPC_STUB IShellDispatch4_WindowsSecurity_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch4_ToggleDesktop_Proxy( 
    IShellDispatch4 __RPC_FAR * This);


void __RPC_STUB IShellDispatch4_ToggleDesktop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch4_ExplorerPolicy_Proxy( 
    IShellDispatch4 __RPC_FAR * This,
    /* [in] */ BSTR bstrPolicyName,
    /* [retval][out] */ VARIANT __RPC_FAR *pValue);


void __RPC_STUB IShellDispatch4_ExplorerPolicy_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch4_GetSetting_Proxy( 
    IShellDispatch4 __RPC_FAR * This,
    /* [in] */ long lSetting,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pResult);


void __RPC_STUB IShellDispatch4_GetSetting_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IShellDispatch4_INTERFACE_DEFINED__ */


#ifndef __IShellDispatch5_INTERFACE_DEFINED__
#define __IShellDispatch5_INTERFACE_DEFINED__

/* interface IShellDispatch5 */
/* [object][dual][hidden][oleautomation][helpstring][uuid] */ 


EXTERN_C const IID IID_IShellDispatch5;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("866738b9-6cf2-4de8-8767-f794ebe74f4e")
    IShellDispatch5 : public IShellDispatch4
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE WindowSwitcher( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IShellDispatch5Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IShellDispatch5 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IShellDispatch5 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IShellDispatch5 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IShellDispatch5 __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IShellDispatch5 __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IShellDispatch5 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IShellDispatch5 __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Application )( 
            IShellDispatch5 __RPC_FAR * This,
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Parent )( 
            IShellDispatch5 __RPC_FAR * This,
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *NameSpace )( 
            IShellDispatch5 __RPC_FAR * This,
            /* [in] */ VARIANT vDir,
            /* [retval][out] */ Folder __RPC_FAR *__RPC_FAR *ppsdf);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *BrowseForFolder )( 
            IShellDispatch5 __RPC_FAR * This,
            /* [in] */ long Hwnd,
            /* [in] */ BSTR Title,
            /* [in] */ long Options,
            /* [optional][in] */ VARIANT RootFolder,
            /* [retval][out] */ Folder __RPC_FAR *__RPC_FAR *ppsdf);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Windows )( 
            IShellDispatch5 __RPC_FAR * This,
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Open )( 
            IShellDispatch5 __RPC_FAR * This,
            /* [in] */ VARIANT vDir);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Explore )( 
            IShellDispatch5 __RPC_FAR * This,
            /* [in] */ VARIANT vDir);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *MinimizeAll )( 
            IShellDispatch5 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *UndoMinimizeALL )( 
            IShellDispatch5 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *FileRun )( 
            IShellDispatch5 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CascadeWindows )( 
            IShellDispatch5 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *TileVertically )( 
            IShellDispatch5 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *TileHorizontally )( 
            IShellDispatch5 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ShutdownWindows )( 
            IShellDispatch5 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Suspend )( 
            IShellDispatch5 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *EjectPC )( 
            IShellDispatch5 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetTime )( 
            IShellDispatch5 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *TrayProperties )( 
            IShellDispatch5 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Help )( 
            IShellDispatch5 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *FindFiles )( 
            IShellDispatch5 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *FindComputer )( 
            IShellDispatch5 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RefreshMenu )( 
            IShellDispatch5 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ControlPanelItem )( 
            IShellDispatch5 __RPC_FAR * This,
            /* [in] */ BSTR bstrDir);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *IsRestricted )( 
            IShellDispatch5 __RPC_FAR * This,
            /* [in] */ BSTR Group,
            /* [in] */ BSTR Restriction,
            /* [retval][out] */ long __RPC_FAR *plRestrictValue);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ShellExecute )( 
            IShellDispatch5 __RPC_FAR * This,
            /* [in] */ BSTR File,
            /* [optional][in] */ VARIANT vArgs,
            /* [optional][in] */ VARIANT vDir,
            /* [optional][in] */ VARIANT vOperation,
            /* [optional][in] */ VARIANT vShow);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *FindPrinter )( 
            IShellDispatch5 __RPC_FAR * This,
            /* [optional][in] */ BSTR name,
            /* [optional][in] */ BSTR location,
            /* [optional][in] */ BSTR model);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSystemInformation )( 
            IShellDispatch5 __RPC_FAR * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ VARIANT __RPC_FAR *pv);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ServiceStart )( 
            IShellDispatch5 __RPC_FAR * This,
            /* [in] */ BSTR ServiceName,
            /* [in] */ VARIANT Persistent,
            /* [retval][out] */ VARIANT __RPC_FAR *pSuccess);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ServiceStop )( 
            IShellDispatch5 __RPC_FAR * This,
            /* [in] */ BSTR ServiceName,
            /* [in] */ VARIANT Persistent,
            /* [retval][out] */ VARIANT __RPC_FAR *pSuccess);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *IsServiceRunning )( 
            IShellDispatch5 __RPC_FAR * This,
            /* [in] */ BSTR ServiceName,
            /* [retval][out] */ VARIANT __RPC_FAR *pRunning);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CanStartStopService )( 
            IShellDispatch5 __RPC_FAR * This,
            /* [in] */ BSTR ServiceName,
            /* [retval][out] */ VARIANT __RPC_FAR *pCanStartStop);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ShowBrowserBar )( 
            IShellDispatch5 __RPC_FAR * This,
            /* [in] */ BSTR bstrClsid,
            /* [in] */ VARIANT bShow,
            /* [retval][out] */ VARIANT __RPC_FAR *pSuccess);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AddToRecent )( 
            IShellDispatch5 __RPC_FAR * This,
            /* [in] */ VARIANT varFile,
            /* [optional][in] */ BSTR bstrCategory);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *WindowsSecurity )( 
            IShellDispatch5 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ToggleDesktop )( 
            IShellDispatch5 __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ExplorerPolicy )( 
            IShellDispatch5 __RPC_FAR * This,
            /* [in] */ BSTR bstrPolicyName,
            /* [retval][out] */ VARIANT __RPC_FAR *pValue);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSetting )( 
            IShellDispatch5 __RPC_FAR * This,
            /* [in] */ long lSetting,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pResult);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *WindowSwitcher )( 
            IShellDispatch5 __RPC_FAR * This);
        
        END_INTERFACE
    } IShellDispatch5Vtbl;

    interface IShellDispatch5
    {
        CONST_VTBL struct IShellDispatch5Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IShellDispatch5_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IShellDispatch5_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IShellDispatch5_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IShellDispatch5_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IShellDispatch5_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IShellDispatch5_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IShellDispatch5_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IShellDispatch5_get_Application(This,ppid)	\
    (This)->lpVtbl -> get_Application(This,ppid)

#define IShellDispatch5_get_Parent(This,ppid)	\
    (This)->lpVtbl -> get_Parent(This,ppid)

#define IShellDispatch5_NameSpace(This,vDir,ppsdf)	\
    (This)->lpVtbl -> NameSpace(This,vDir,ppsdf)

#define IShellDispatch5_BrowseForFolder(This,Hwnd,Title,Options,RootFolder,ppsdf)	\
    (This)->lpVtbl -> BrowseForFolder(This,Hwnd,Title,Options,RootFolder,ppsdf)

#define IShellDispatch5_Windows(This,ppid)	\
    (This)->lpVtbl -> Windows(This,ppid)

#define IShellDispatch5_Open(This,vDir)	\
    (This)->lpVtbl -> Open(This,vDir)

#define IShellDispatch5_Explore(This,vDir)	\
    (This)->lpVtbl -> Explore(This,vDir)

#define IShellDispatch5_MinimizeAll(This)	\
    (This)->lpVtbl -> MinimizeAll(This)

#define IShellDispatch5_UndoMinimizeALL(This)	\
    (This)->lpVtbl -> UndoMinimizeALL(This)

#define IShellDispatch5_FileRun(This)	\
    (This)->lpVtbl -> FileRun(This)

#define IShellDispatch5_CascadeWindows(This)	\
    (This)->lpVtbl -> CascadeWindows(This)

#define IShellDispatch5_TileVertically(This)	\
    (This)->lpVtbl -> TileVertically(This)

#define IShellDispatch5_TileHorizontally(This)	\
    (This)->lpVtbl -> TileHorizontally(This)

#define IShellDispatch5_ShutdownWindows(This)	\
    (This)->lpVtbl -> ShutdownWindows(This)

#define IShellDispatch5_Suspend(This)	\
    (This)->lpVtbl -> Suspend(This)

#define IShellDispatch5_EjectPC(This)	\
    (This)->lpVtbl -> EjectPC(This)

#define IShellDispatch5_SetTime(This)	\
    (This)->lpVtbl -> SetTime(This)

#define IShellDispatch5_TrayProperties(This)	\
    (This)->lpVtbl -> TrayProperties(This)

#define IShellDispatch5_Help(This)	\
    (This)->lpVtbl -> Help(This)

#define IShellDispatch5_FindFiles(This)	\
    (This)->lpVtbl -> FindFiles(This)

#define IShellDispatch5_FindComputer(This)	\
    (This)->lpVtbl -> FindComputer(This)

#define IShellDispatch5_RefreshMenu(This)	\
    (This)->lpVtbl -> RefreshMenu(This)

#define IShellDispatch5_ControlPanelItem(This,bstrDir)	\
    (This)->lpVtbl -> ControlPanelItem(This,bstrDir)


#define IShellDispatch5_IsRestricted(This,Group,Restriction,plRestrictValue)	\
    (This)->lpVtbl -> IsRestricted(This,Group,Restriction,plRestrictValue)

#define IShellDispatch5_ShellExecute(This,File,vArgs,vDir,vOperation,vShow)	\
    (This)->lpVtbl -> ShellExecute(This,File,vArgs,vDir,vOperation,vShow)

#define IShellDispatch5_FindPrinter(This,name,location,model)	\
    (This)->lpVtbl -> FindPrinter(This,name,location,model)

#define IShellDispatch5_GetSystemInformation(This,name,pv)	\
    (This)->lpVtbl -> GetSystemInformation(This,name,pv)

#define IShellDispatch5_ServiceStart(This,ServiceName,Persistent,pSuccess)	\
    (This)->lpVtbl -> ServiceStart(This,ServiceName,Persistent,pSuccess)

#define IShellDispatch5_ServiceStop(This,ServiceName,Persistent,pSuccess)	\
    (This)->lpVtbl -> ServiceStop(This,ServiceName,Persistent,pSuccess)

#define IShellDispatch5_IsServiceRunning(This,ServiceName,pRunning)	\
    (This)->lpVtbl -> IsServiceRunning(This,ServiceName,pRunning)

#define IShellDispatch5_CanStartStopService(This,ServiceName,pCanStartStop)	\
    (This)->lpVtbl -> CanStartStopService(This,ServiceName,pCanStartStop)

#define IShellDispatch5_ShowBrowserBar(This,bstrClsid,bShow,pSuccess)	\
    (This)->lpVtbl -> ShowBrowserBar(This,bstrClsid,bShow,pSuccess)


#define IShellDispatch5_AddToRecent(This,varFile,bstrCategory)	\
    (This)->lpVtbl -> AddToRecent(This,varFile,bstrCategory)


#define IShellDispatch5_WindowsSecurity(This)	\
    (This)->lpVtbl -> WindowsSecurity(This)

#define IShellDispatch5_ToggleDesktop(This)	\
    (This)->lpVtbl -> ToggleDesktop(This)

#define IShellDispatch5_ExplorerPolicy(This,bstrPolicyName,pValue)	\
    (This)->lpVtbl -> ExplorerPolicy(This,bstrPolicyName,pValue)

#define IShellDispatch5_GetSetting(This,lSetting,pResult)	\
    (This)->lpVtbl -> GetSetting(This,lSetting,pResult)


#define IShellDispatch5_WindowSwitcher(This)	\
    (This)->lpVtbl -> WindowSwitcher(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch5_WindowSwitcher_Proxy( 
    IShellDispatch5 __RPC_FAR * This);


void __RPC_STUB IShellDispatch5_WindowSwitcher_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IShellDispatch5_INTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_Shell;

#ifdef __cplusplus

class DECLSPEC_UUID("13709620-C279-11CE-A49E-444553540000")
Shell;
#endif

EXTERN_C const CLSID CLSID_ShellDispatchInproc;

#ifdef __cplusplus

class DECLSPEC_UUID("0A89A860-D7B1-11CE-8350-444553540000")
ShellDispatchInproc;
#endif

#ifndef __IFileSearchBand_INTERFACE_DEFINED__
#define __IFileSearchBand_INTERFACE_DEFINED__

/* interface IFileSearchBand */
/* [object][unique][hidden][dual][oleautomation][helpstring][uuid] */ 


EXTERN_C const IID IID_IFileSearchBand;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2D91EEA1-9932-11d2-BE86-00A0C9A83DA1")
    IFileSearchBand : public IDispatch
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetFocus( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetSearchParameters( 
            /* [in] */ BSTR __RPC_FAR *pbstrSearchID,
            /* [in] */ VARIANT_BOOL bNavToResults,
            /* [optional][in] */ VARIANT __RPC_FAR *pvarScope,
            /* [optional][in] */ VARIANT __RPC_FAR *pvarQueryFile) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_SearchID( 
            /* [retval][out] */ BSTR __RPC_FAR *pbstrSearchID) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Scope( 
            /* [retval][out] */ VARIANT __RPC_FAR *pvarScope) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_QueryFile( 
            /* [retval][out] */ VARIANT __RPC_FAR *pvarFile) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IFileSearchBandVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IFileSearchBand __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IFileSearchBand __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IFileSearchBand __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IFileSearchBand __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IFileSearchBand __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IFileSearchBand __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IFileSearchBand __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFocus )( 
            IFileSearchBand __RPC_FAR * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetSearchParameters )( 
            IFileSearchBand __RPC_FAR * This,
            /* [in] */ BSTR __RPC_FAR *pbstrSearchID,
            /* [in] */ VARIANT_BOOL bNavToResults,
            /* [optional][in] */ VARIANT __RPC_FAR *pvarScope,
            /* [optional][in] */ VARIANT __RPC_FAR *pvarQueryFile);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SearchID )( 
            IFileSearchBand __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pbstrSearchID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Scope )( 
            IFileSearchBand __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *pvarScope);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_QueryFile )( 
            IFileSearchBand __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *pvarFile);
        
        END_INTERFACE
    } IFileSearchBandVtbl;

    interface IFileSearchBand
    {
        CONST_VTBL struct IFileSearchBandVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IFileSearchBand_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IFileSearchBand_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IFileSearchBand_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IFileSearchBand_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IFileSearchBand_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IFileSearchBand_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IFileSearchBand_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IFileSearchBand_SetFocus(This)	\
    (This)->lpVtbl -> SetFocus(This)

#define IFileSearchBand_SetSearchParameters(This,pbstrSearchID,bNavToResults,pvarScope,pvarQueryFile)	\
    (This)->lpVtbl -> SetSearchParameters(This,pbstrSearchID,bNavToResults,pvarScope,pvarQueryFile)

#define IFileSearchBand_get_SearchID(This,pbstrSearchID)	\
    (This)->lpVtbl -> get_SearchID(This,pbstrSearchID)

#define IFileSearchBand_get_Scope(This,pvarScope)	\
    (This)->lpVtbl -> get_Scope(This,pvarScope)

#define IFileSearchBand_get_QueryFile(This,pvarFile)	\
    (This)->lpVtbl -> get_QueryFile(This,pvarFile)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IFileSearchBand_SetFocus_Proxy( 
    IFileSearchBand __RPC_FAR * This);


void __RPC_STUB IFileSearchBand_SetFocus_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IFileSearchBand_SetSearchParameters_Proxy( 
    IFileSearchBand __RPC_FAR * This,
    /* [in] */ BSTR __RPC_FAR *pbstrSearchID,
    /* [in] */ VARIANT_BOOL bNavToResults,
    /* [optional][in] */ VARIANT __RPC_FAR *pvarScope,
    /* [optional][in] */ VARIANT __RPC_FAR *pvarQueryFile);


void __RPC_STUB IFileSearchBand_SetSearchParameters_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IFileSearchBand_get_SearchID_Proxy( 
    IFileSearchBand __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pbstrSearchID);


void __RPC_STUB IFileSearchBand_get_SearchID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IFileSearchBand_get_Scope_Proxy( 
    IFileSearchBand __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *pvarScope);


void __RPC_STUB IFileSearchBand_get_Scope_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IFileSearchBand_get_QueryFile_Proxy( 
    IFileSearchBand __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *pvarFile);


void __RPC_STUB IFileSearchBand_get_QueryFile_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IFileSearchBand_INTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_FileSearchBand;

#ifdef __cplusplus

class DECLSPEC_UUID("C4EE31F3-4768-11D2-BE5C-00A0C9A83DA1")
FileSearchBand;
#endif

#ifndef __IWebWizardHost_INTERFACE_DEFINED__
#define __IWebWizardHost_INTERFACE_DEFINED__

/* interface IWebWizardHost */
/* [helpstring][dual][object][uuid] */ 


EXTERN_C const IID IID_IWebWizardHost;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("18bcc359-4990-4bfb-b951-3c83702be5f9")
    IWebWizardHost : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE FinalBack( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE FinalNext( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Cancel( void) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Caption( 
            /* [in] */ BSTR bstrCaption) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Caption( 
            /* [retval][out] */ BSTR __RPC_FAR *pbstrCaption) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Property( 
            /* [in] */ BSTR bstrPropertyName,
            /* [in] */ VARIANT __RPC_FAR *pvProperty) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Property( 
            /* [in] */ BSTR bstrPropertyName,
            /* [retval][out] */ VARIANT __RPC_FAR *pvProperty) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SetWizardButtons( 
            /* [in] */ VARIANT_BOOL vfEnableBack,
            /* [in] */ VARIANT_BOOL vfEnableNext,
            /* [in] */ VARIANT_BOOL vfLastPage) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SetHeaderText( 
            /* [in] */ BSTR bstrHeaderTitle,
            /* [in] */ BSTR bstrHeaderSubtitle) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IWebWizardHostVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IWebWizardHost __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IWebWizardHost __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IWebWizardHost __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IWebWizardHost __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IWebWizardHost __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IWebWizardHost __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IWebWizardHost __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *FinalBack )( 
            IWebWizardHost __RPC_FAR * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *FinalNext )( 
            IWebWizardHost __RPC_FAR * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Cancel )( 
            IWebWizardHost __RPC_FAR * This);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Caption )( 
            IWebWizardHost __RPC_FAR * This,
            /* [in] */ BSTR bstrCaption);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Caption )( 
            IWebWizardHost __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pbstrCaption);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Property )( 
            IWebWizardHost __RPC_FAR * This,
            /* [in] */ BSTR bstrPropertyName,
            /* [in] */ VARIANT __RPC_FAR *pvProperty);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Property )( 
            IWebWizardHost __RPC_FAR * This,
            /* [in] */ BSTR bstrPropertyName,
            /* [retval][out] */ VARIANT __RPC_FAR *pvProperty);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetWizardButtons )( 
            IWebWizardHost __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL vfEnableBack,
            /* [in] */ VARIANT_BOOL vfEnableNext,
            /* [in] */ VARIANT_BOOL vfLastPage);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetHeaderText )( 
            IWebWizardHost __RPC_FAR * This,
            /* [in] */ BSTR bstrHeaderTitle,
            /* [in] */ BSTR bstrHeaderSubtitle);
        
        END_INTERFACE
    } IWebWizardHostVtbl;

    interface IWebWizardHost
    {
        CONST_VTBL struct IWebWizardHostVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IWebWizardHost_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IWebWizardHost_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IWebWizardHost_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IWebWizardHost_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IWebWizardHost_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IWebWizardHost_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IWebWizardHost_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IWebWizardHost_FinalBack(This)	\
    (This)->lpVtbl -> FinalBack(This)

#define IWebWizardHost_FinalNext(This)	\
    (This)->lpVtbl -> FinalNext(This)

#define IWebWizardHost_Cancel(This)	\
    (This)->lpVtbl -> Cancel(This)

#define IWebWizardHost_put_Caption(This,bstrCaption)	\
    (This)->lpVtbl -> put_Caption(This,bstrCaption)

#define IWebWizardHost_get_Caption(This,pbstrCaption)	\
    (This)->lpVtbl -> get_Caption(This,pbstrCaption)

#define IWebWizardHost_put_Property(This,bstrPropertyName,pvProperty)	\
    (This)->lpVtbl -> put_Property(This,bstrPropertyName,pvProperty)

#define IWebWizardHost_get_Property(This,bstrPropertyName,pvProperty)	\
    (This)->lpVtbl -> get_Property(This,bstrPropertyName,pvProperty)

#define IWebWizardHost_SetWizardButtons(This,vfEnableBack,vfEnableNext,vfLastPage)	\
    (This)->lpVtbl -> SetWizardButtons(This,vfEnableBack,vfEnableNext,vfLastPage)

#define IWebWizardHost_SetHeaderText(This,bstrHeaderTitle,bstrHeaderSubtitle)	\
    (This)->lpVtbl -> SetHeaderText(This,bstrHeaderTitle,bstrHeaderSubtitle)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [id] */ HRESULT STDMETHODCALLTYPE IWebWizardHost_FinalBack_Proxy( 
    IWebWizardHost __RPC_FAR * This);


void __RPC_STUB IWebWizardHost_FinalBack_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IWebWizardHost_FinalNext_Proxy( 
    IWebWizardHost __RPC_FAR * This);


void __RPC_STUB IWebWizardHost_FinalNext_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IWebWizardHost_Cancel_Proxy( 
    IWebWizardHost __RPC_FAR * This);


void __RPC_STUB IWebWizardHost_Cancel_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IWebWizardHost_put_Caption_Proxy( 
    IWebWizardHost __RPC_FAR * This,
    /* [in] */ BSTR bstrCaption);


void __RPC_STUB IWebWizardHost_put_Caption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IWebWizardHost_get_Caption_Proxy( 
    IWebWizardHost __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pbstrCaption);


void __RPC_STUB IWebWizardHost_get_Caption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IWebWizardHost_put_Property_Proxy( 
    IWebWizardHost __RPC_FAR * This,
    /* [in] */ BSTR bstrPropertyName,
    /* [in] */ VARIANT __RPC_FAR *pvProperty);


void __RPC_STUB IWebWizardHost_put_Property_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IWebWizardHost_get_Property_Proxy( 
    IWebWizardHost __RPC_FAR * This,
    /* [in] */ BSTR bstrPropertyName,
    /* [retval][out] */ VARIANT __RPC_FAR *pvProperty);


void __RPC_STUB IWebWizardHost_get_Property_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IWebWizardHost_SetWizardButtons_Proxy( 
    IWebWizardHost __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL vfEnableBack,
    /* [in] */ VARIANT_BOOL vfEnableNext,
    /* [in] */ VARIANT_BOOL vfLastPage);


void __RPC_STUB IWebWizardHost_SetWizardButtons_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IWebWizardHost_SetHeaderText_Proxy( 
    IWebWizardHost __RPC_FAR * This,
    /* [in] */ BSTR bstrHeaderTitle,
    /* [in] */ BSTR bstrHeaderSubtitle);


void __RPC_STUB IWebWizardHost_SetHeaderText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IWebWizardHost_INTERFACE_DEFINED__ */


#ifndef __INewWDEvents_INTERFACE_DEFINED__
#define __INewWDEvents_INTERFACE_DEFINED__

/* interface INewWDEvents */
/* [helpstring][dual][object][uuid] */ 


EXTERN_C const IID IID_INewWDEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0751c551-7568-41c9-8e5b-e22e38919236")
    INewWDEvents : public IWebWizardHost
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE PassportAuthenticate( 
            /* [in] */ BSTR bstrSignInUrl,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pvfAuthenitcated) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct INewWDEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            INewWDEvents __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            INewWDEvents __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            INewWDEvents __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            INewWDEvents __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            INewWDEvents __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            INewWDEvents __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            INewWDEvents __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *FinalBack )( 
            INewWDEvents __RPC_FAR * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *FinalNext )( 
            INewWDEvents __RPC_FAR * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Cancel )( 
            INewWDEvents __RPC_FAR * This);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Caption )( 
            INewWDEvents __RPC_FAR * This,
            /* [in] */ BSTR bstrCaption);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Caption )( 
            INewWDEvents __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pbstrCaption);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Property )( 
            INewWDEvents __RPC_FAR * This,
            /* [in] */ BSTR bstrPropertyName,
            /* [in] */ VARIANT __RPC_FAR *pvProperty);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Property )( 
            INewWDEvents __RPC_FAR * This,
            /* [in] */ BSTR bstrPropertyName,
            /* [retval][out] */ VARIANT __RPC_FAR *pvProperty);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetWizardButtons )( 
            INewWDEvents __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL vfEnableBack,
            /* [in] */ VARIANT_BOOL vfEnableNext,
            /* [in] */ VARIANT_BOOL vfLastPage);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetHeaderText )( 
            INewWDEvents __RPC_FAR * This,
            /* [in] */ BSTR bstrHeaderTitle,
            /* [in] */ BSTR bstrHeaderSubtitle);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *PassportAuthenticate )( 
            INewWDEvents __RPC_FAR * This,
            /* [in] */ BSTR bstrSignInUrl,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pvfAuthenitcated);
        
        END_INTERFACE
    } INewWDEventsVtbl;

    interface INewWDEvents
    {
        CONST_VTBL struct INewWDEventsVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define INewWDEvents_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define INewWDEvents_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define INewWDEvents_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define INewWDEvents_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define INewWDEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define INewWDEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define INewWDEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define INewWDEvents_FinalBack(This)	\
    (This)->lpVtbl -> FinalBack(This)

#define INewWDEvents_FinalNext(This)	\
    (This)->lpVtbl -> FinalNext(This)

#define INewWDEvents_Cancel(This)	\
    (This)->lpVtbl -> Cancel(This)

#define INewWDEvents_put_Caption(This,bstrCaption)	\
    (This)->lpVtbl -> put_Caption(This,bstrCaption)

#define INewWDEvents_get_Caption(This,pbstrCaption)	\
    (This)->lpVtbl -> get_Caption(This,pbstrCaption)

#define INewWDEvents_put_Property(This,bstrPropertyName,pvProperty)	\
    (This)->lpVtbl -> put_Property(This,bstrPropertyName,pvProperty)

#define INewWDEvents_get_Property(This,bstrPropertyName,pvProperty)	\
    (This)->lpVtbl -> get_Property(This,bstrPropertyName,pvProperty)

#define INewWDEvents_SetWizardButtons(This,vfEnableBack,vfEnableNext,vfLastPage)	\
    (This)->lpVtbl -> SetWizardButtons(This,vfEnableBack,vfEnableNext,vfLastPage)

#define INewWDEvents_SetHeaderText(This,bstrHeaderTitle,bstrHeaderSubtitle)	\
    (This)->lpVtbl -> SetHeaderText(This,bstrHeaderTitle,bstrHeaderSubtitle)


#define INewWDEvents_PassportAuthenticate(This,bstrSignInUrl,pvfAuthenitcated)	\
    (This)->lpVtbl -> PassportAuthenticate(This,bstrSignInUrl,pvfAuthenitcated)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [id] */ HRESULT STDMETHODCALLTYPE INewWDEvents_PassportAuthenticate_Proxy( 
    INewWDEvents __RPC_FAR * This,
    /* [in] */ BSTR bstrSignInUrl,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pvfAuthenitcated);


void __RPC_STUB INewWDEvents_PassportAuthenticate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __INewWDEvents_INTERFACE_DEFINED__ */

#endif /* __Shell32_LIBRARY_DEFINED__ */

/* interface __MIDL_itf_shldisp_0172 */
/* [local] */ 


//-------------------------------------------------------------------------
//
// IAutoComplete interface
//
//
// [Member functions]
//
// IAutoComplete::Init(hwndEdit, punkACL, pwszRegKeyPath, pwszQuickComplete)
//   This function initializes an AutoComplete object, telling it
//   what control to subclass, and what list of strings to process.
//
// IAutoComplete::Enable(fEnable)
//   This function enables or disables the AutoComplete functionality.
//
//-------------------------------------------------------------------------


extern RPC_IF_HANDLE __MIDL_itf_shldisp_0172_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shldisp_0172_v0_0_s_ifspec;

#ifndef __IAutoComplete_INTERFACE_DEFINED__
#define __IAutoComplete_INTERFACE_DEFINED__

/* interface IAutoComplete */
/* [unique][uuid][object][local][helpstring] */ 

typedef /* [unique] */ IAutoComplete __RPC_FAR *LPAUTOCOMPLETE;


EXTERN_C const IID IID_IAutoComplete;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00bb2762-6a77-11d0-a535-00c04fd7d062")
    IAutoComplete : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Init( 
            /* [in] */ HWND hwndEdit,
            /* [unique][in] */ IUnknown __RPC_FAR *punkACL,
            /* [unique][in] */ LPCWSTR pwszRegKeyPath,
            /* [in] */ LPCWSTR pwszQuickComplete) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Enable( 
            /* [in] */ BOOL fEnable) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAutoCompleteVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAutoComplete __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAutoComplete __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAutoComplete __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Init )( 
            IAutoComplete __RPC_FAR * This,
            /* [in] */ HWND hwndEdit,
            /* [unique][in] */ IUnknown __RPC_FAR *punkACL,
            /* [unique][in] */ LPCWSTR pwszRegKeyPath,
            /* [in] */ LPCWSTR pwszQuickComplete);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Enable )( 
            IAutoComplete __RPC_FAR * This,
            /* [in] */ BOOL fEnable);
        
        END_INTERFACE
    } IAutoCompleteVtbl;

    interface IAutoComplete
    {
        CONST_VTBL struct IAutoCompleteVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAutoComplete_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAutoComplete_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAutoComplete_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAutoComplete_Init(This,hwndEdit,punkACL,pwszRegKeyPath,pwszQuickComplete)	\
    (This)->lpVtbl -> Init(This,hwndEdit,punkACL,pwszRegKeyPath,pwszQuickComplete)

#define IAutoComplete_Enable(This,fEnable)	\
    (This)->lpVtbl -> Enable(This,fEnable)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAutoComplete_Init_Proxy( 
    IAutoComplete __RPC_FAR * This,
    /* [in] */ HWND hwndEdit,
    /* [unique][in] */ IUnknown __RPC_FAR *punkACL,
    /* [unique][in] */ LPCWSTR pwszRegKeyPath,
    /* [in] */ LPCWSTR pwszQuickComplete);


void __RPC_STUB IAutoComplete_Init_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAutoComplete_Enable_Proxy( 
    IAutoComplete __RPC_FAR * This,
    /* [in] */ BOOL fEnable);


void __RPC_STUB IAutoComplete_Enable_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAutoComplete_INTERFACE_DEFINED__ */


#ifndef __IAutoComplete2_INTERFACE_DEFINED__
#define __IAutoComplete2_INTERFACE_DEFINED__

/* interface IAutoComplete2 */
/* [unique][uuid][object][local][helpstring] */ 

typedef /* [unique] */ IAutoComplete2 __RPC_FAR *LPAUTOCOMPLETE2;

typedef 
enum _tagAUTOCOMPLETEOPTIONS
    {	ACO_NONE	= 0,
	ACO_AUTOSUGGEST	= 0x1,
	ACO_AUTOAPPEND	= 0x2,
	ACO_SEARCH	= 0x4,
	ACO_FILTERPREFIXES	= 0x8,
	ACO_USETAB	= 0x10,
	ACO_UPDOWNKEYDROPSLIST	= 0x20,
	ACO_RTLREADING	= 0x40,
	ACO_WORD_FILTER	= 0x80,
	ACO_NOPREFIXFILTERING	= 0x100
    }	AUTOCOMPLETEOPTIONS;


EXTERN_C const IID IID_IAutoComplete2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("EAC04BC0-3791-11d2-BB95-0060977B464C")
    IAutoComplete2 : public IAutoComplete
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetOptions( 
            /* [in] */ DWORD dwFlag) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetOptions( 
            /* [out] */ DWORD __RPC_FAR *pdwFlag) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAutoComplete2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAutoComplete2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAutoComplete2 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAutoComplete2 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Init )( 
            IAutoComplete2 __RPC_FAR * This,
            /* [in] */ HWND hwndEdit,
            /* [unique][in] */ IUnknown __RPC_FAR *punkACL,
            /* [unique][in] */ LPCWSTR pwszRegKeyPath,
            /* [in] */ LPCWSTR pwszQuickComplete);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Enable )( 
            IAutoComplete2 __RPC_FAR * This,
            /* [in] */ BOOL fEnable);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetOptions )( 
            IAutoComplete2 __RPC_FAR * This,
            /* [in] */ DWORD dwFlag);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetOptions )( 
            IAutoComplete2 __RPC_FAR * This,
            /* [out] */ DWORD __RPC_FAR *pdwFlag);
        
        END_INTERFACE
    } IAutoComplete2Vtbl;

    interface IAutoComplete2
    {
        CONST_VTBL struct IAutoComplete2Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAutoComplete2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAutoComplete2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAutoComplete2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAutoComplete2_Init(This,hwndEdit,punkACL,pwszRegKeyPath,pwszQuickComplete)	\
    (This)->lpVtbl -> Init(This,hwndEdit,punkACL,pwszRegKeyPath,pwszQuickComplete)

#define IAutoComplete2_Enable(This,fEnable)	\
    (This)->lpVtbl -> Enable(This,fEnable)


#define IAutoComplete2_SetOptions(This,dwFlag)	\
    (This)->lpVtbl -> SetOptions(This,dwFlag)

#define IAutoComplete2_GetOptions(This,pdwFlag)	\
    (This)->lpVtbl -> GetOptions(This,pdwFlag)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAutoComplete2_SetOptions_Proxy( 
    IAutoComplete2 __RPC_FAR * This,
    /* [in] */ DWORD dwFlag);


void __RPC_STUB IAutoComplete2_SetOptions_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAutoComplete2_GetOptions_Proxy( 
    IAutoComplete2 __RPC_FAR * This,
    /* [out] */ DWORD __RPC_FAR *pdwFlag);


void __RPC_STUB IAutoComplete2_GetOptions_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAutoComplete2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shldisp_0174 */
/* [local] */ 

// INTERFACE: IEnumACString
//
// This interface was implemented to return autocomplete strings
// into the caller's buffer (to reduce the number of memory allocations).
// A sort index is also returned to control the order of items displayed.
// by autocomplete.  The sort index should be set to zero if unused.
//
// The NextItem method increments the current index by one (similar to Next
// when one item is requested).
//


extern RPC_IF_HANDLE __MIDL_itf_shldisp_0174_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shldisp_0174_v0_0_s_ifspec;

#ifndef __IEnumACString_INTERFACE_DEFINED__
#define __IEnumACString_INTERFACE_DEFINED__

/* interface IEnumACString */
/* [unique][uuid][object][local][helpstring] */ 

typedef /* [unique] */ IEnumACString __RPC_FAR *PENUMACSTRING;

typedef /* [unique] */ IEnumACString __RPC_FAR *LPENUMACSTRING;

typedef 
enum _tagACENUMOPTION
    {	ACEO_NONE	= 0,
	ACEO_MOSTRECENTFIRST	= 0x1,
	ACEO_FIRSTUNUSED	= 0x10000
    }	ACENUMOPTION;


EXTERN_C const IID IID_IEnumACString;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8E74C210-CF9D-4eaf-A403-7356428F0A5A")
    IEnumACString : public IEnumString
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE NextItem( 
            /* [size_is][unique][string][out] */ LPWSTR pszUrl,
            /* [in] */ ULONG cchMax,
            /* [out] */ ULONG __RPC_FAR *pulSortIndex) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetEnumOptions( 
            /* [in] */ DWORD dwOptions) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEnumOptions( 
            /* [out] */ DWORD __RPC_FAR *pdwOptions) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumACStringVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IEnumACString __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IEnumACString __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IEnumACString __RPC_FAR * This);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Next )( 
            IEnumACString __RPC_FAR * This,
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ LPOLESTR __RPC_FAR *rgelt,
            /* [out] */ ULONG __RPC_FAR *pceltFetched);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Skip )( 
            IEnumACString __RPC_FAR * This,
            /* [in] */ ULONG celt);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Reset )( 
            IEnumACString __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Clone )( 
            IEnumACString __RPC_FAR * This,
            /* [out] */ IEnumString __RPC_FAR *__RPC_FAR *ppenum);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *NextItem )( 
            IEnumACString __RPC_FAR * This,
            /* [size_is][unique][string][out] */ LPWSTR pszUrl,
            /* [in] */ ULONG cchMax,
            /* [out] */ ULONG __RPC_FAR *pulSortIndex);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetEnumOptions )( 
            IEnumACString __RPC_FAR * This,
            /* [in] */ DWORD dwOptions);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetEnumOptions )( 
            IEnumACString __RPC_FAR * This,
            /* [out] */ DWORD __RPC_FAR *pdwOptions);
        
        END_INTERFACE
    } IEnumACStringVtbl;

    interface IEnumACString
    {
        CONST_VTBL struct IEnumACStringVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumACString_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IEnumACString_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IEnumACString_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IEnumACString_Next(This,celt,rgelt,pceltFetched)	\
    (This)->lpVtbl -> Next(This,celt,rgelt,pceltFetched)

#define IEnumACString_Skip(This,celt)	\
    (This)->lpVtbl -> Skip(This,celt)

#define IEnumACString_Reset(This)	\
    (This)->lpVtbl -> Reset(This)

#define IEnumACString_Clone(This,ppenum)	\
    (This)->lpVtbl -> Clone(This,ppenum)


#define IEnumACString_NextItem(This,pszUrl,cchMax,pulSortIndex)	\
    (This)->lpVtbl -> NextItem(This,pszUrl,cchMax,pulSortIndex)

#define IEnumACString_SetEnumOptions(This,dwOptions)	\
    (This)->lpVtbl -> SetEnumOptions(This,dwOptions)

#define IEnumACString_GetEnumOptions(This,pdwOptions)	\
    (This)->lpVtbl -> GetEnumOptions(This,pdwOptions)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IEnumACString_NextItem_Proxy( 
    IEnumACString __RPC_FAR * This,
    /* [size_is][unique][string][out] */ LPWSTR pszUrl,
    /* [in] */ ULONG cchMax,
    /* [out] */ ULONG __RPC_FAR *pulSortIndex);


void __RPC_STUB IEnumACString_NextItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumACString_SetEnumOptions_Proxy( 
    IEnumACString __RPC_FAR * This,
    /* [in] */ DWORD dwOptions);


void __RPC_STUB IEnumACString_SetEnumOptions_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumACString_GetEnumOptions_Proxy( 
    IEnumACString __RPC_FAR * This,
    /* [out] */ DWORD __RPC_FAR *pdwOptions);


void __RPC_STUB IEnumACString_GetEnumOptions_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IEnumACString_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shldisp_0175 */
/* [local] */ 

// INTERFACE: IAsyncOperation
//
// This interface was implemented to turn some previously synchronous
// interfaces into async.  The following example is for
// doing the IDataObject::Drop() operation asynchronously.
//
// Sometimes the rendering of the IDataObject data (IDataObject::GetData() or
// STGMEDIUM.pStream->Read()) can be time intensive.  The IDropTarget
// may want to do this on another thread.
//
// Implimentation Check list:
// DoDragDrop Caller:
//    If this code can support asynch operations, then it needs to
//    QueryInterface() the IDataObject for IAsyncOperation.
//    IAsyncOperation::SetAsyncMode(VARIANT_TRUE).
//    After calling DoDragDrop(), call InOperation().  If any call fails
//    or InOperation() return FALSE, use the pdwEffect returned by DoDragDrop()
//    and the operation completed synchrously.
//
// OleSetClipboard Caller:
//    If this code can support asynch operations, then it needs to
//    QueryInterface() the IDataObject for IAsyncOperation.  Then call
//    IAsyncOperation::SetAsyncMode(VARIANT_TRUE).
//    If any of that fails, the final dwEffect should be passed to the IDataObject via
//    CFSTR_PERFORMEDDROPEFFECT.
//
// IDataObect Object:
//    IAsyncOperation::GetAsyncMode() should return whatever was last passed in
//          fDoOpAsync to ::SetAsyncMode() or VARIANT_FALSE if ::SetAsyncMode()
//          was never called.
//    IAsyncOperation::SetAsyncMode() should AddRef and store paocb.
//    IAsyncOperation::StartOperation() should store the fact that this was called and
//          cause InOperation() to return VARIANT_TRUE.  pbcReserved is not used and needs
//          to be NULL.
//    IAsyncOperation::InOperation() should return VARIANT_TRUE only if ::StartOperation()
//          was called.
//    IAsyncOperation::EndOperation() needs to call paocbpaocb->EndOperation() with the same
//          parameters.  Then release paocb.
//    IDataObject::SetData(CFSTR_PERFORMEDDROPEFFECT) When this happens, call
//          EndOperation(<into VAR>S_OK, NULL, <into VAR>dwEffect) and pass the dwEffect from the hglobal.
//
// IDropTarget Object:
//    IDropTarget::Drop() If asynch operations aren't supported, nothing is required.
//          The asynch operation can only happen if GetAsyncMode() returns VARIANT_TRUE.
//          Before starting the asynch operation, StartOperation(NULL) needs to be called before
//          returning from IDropTarget::Drop().



extern RPC_IF_HANDLE __MIDL_itf_shldisp_0175_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shldisp_0175_v0_0_s_ifspec;

#ifndef __IAsyncOperation_INTERFACE_DEFINED__
#define __IAsyncOperation_INTERFACE_DEFINED__

/* interface IAsyncOperation */
/* [object][uuid][helpstring] */ 

typedef /* [unique] */ IAsyncOperation __RPC_FAR *LPASYNCOPERATION;


EXTERN_C const IID IID_IAsyncOperation;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3D8B0590-F691-11d2-8EA9-006097DF5BD4")
    IAsyncOperation : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetAsyncMode( 
            /* [in] */ BOOL fDoOpAsync) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAsyncMode( 
            /* [out] */ BOOL __RPC_FAR *pfIsOpAsync) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE StartOperation( 
            /* [optional][unique][in] */ IBindCtx __RPC_FAR *pbcReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InOperation( 
            /* [out] */ BOOL __RPC_FAR *pfInAsyncOp) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EndOperation( 
            /* [in] */ HRESULT hResult,
            /* [unique][in] */ IBindCtx __RPC_FAR *pbcReserved,
            /* [in] */ DWORD dwEffects) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAsyncOperationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAsyncOperation __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAsyncOperation __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAsyncOperation __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetAsyncMode )( 
            IAsyncOperation __RPC_FAR * This,
            /* [in] */ BOOL fDoOpAsync);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetAsyncMode )( 
            IAsyncOperation __RPC_FAR * This,
            /* [out] */ BOOL __RPC_FAR *pfIsOpAsync);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *StartOperation )( 
            IAsyncOperation __RPC_FAR * This,
            /* [optional][unique][in] */ IBindCtx __RPC_FAR *pbcReserved);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *InOperation )( 
            IAsyncOperation __RPC_FAR * This,
            /* [out] */ BOOL __RPC_FAR *pfInAsyncOp);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *EndOperation )( 
            IAsyncOperation __RPC_FAR * This,
            /* [in] */ HRESULT hResult,
            /* [unique][in] */ IBindCtx __RPC_FAR *pbcReserved,
            /* [in] */ DWORD dwEffects);
        
        END_INTERFACE
    } IAsyncOperationVtbl;

    interface IAsyncOperation
    {
        CONST_VTBL struct IAsyncOperationVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAsyncOperation_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAsyncOperation_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAsyncOperation_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAsyncOperation_SetAsyncMode(This,fDoOpAsync)	\
    (This)->lpVtbl -> SetAsyncMode(This,fDoOpAsync)

#define IAsyncOperation_GetAsyncMode(This,pfIsOpAsync)	\
    (This)->lpVtbl -> GetAsyncMode(This,pfIsOpAsync)

#define IAsyncOperation_StartOperation(This,pbcReserved)	\
    (This)->lpVtbl -> StartOperation(This,pbcReserved)

#define IAsyncOperation_InOperation(This,pfInAsyncOp)	\
    (This)->lpVtbl -> InOperation(This,pfInAsyncOp)

#define IAsyncOperation_EndOperation(This,hResult,pbcReserved,dwEffects)	\
    (This)->lpVtbl -> EndOperation(This,hResult,pbcReserved,dwEffects)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAsyncOperation_SetAsyncMode_Proxy( 
    IAsyncOperation __RPC_FAR * This,
    /* [in] */ BOOL fDoOpAsync);


void __RPC_STUB IAsyncOperation_SetAsyncMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAsyncOperation_GetAsyncMode_Proxy( 
    IAsyncOperation __RPC_FAR * This,
    /* [out] */ BOOL __RPC_FAR *pfIsOpAsync);


void __RPC_STUB IAsyncOperation_GetAsyncMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAsyncOperation_StartOperation_Proxy( 
    IAsyncOperation __RPC_FAR * This,
    /* [optional][unique][in] */ IBindCtx __RPC_FAR *pbcReserved);


void __RPC_STUB IAsyncOperation_StartOperation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAsyncOperation_InOperation_Proxy( 
    IAsyncOperation __RPC_FAR * This,
    /* [out] */ BOOL __RPC_FAR *pfInAsyncOp);


void __RPC_STUB IAsyncOperation_InOperation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAsyncOperation_EndOperation_Proxy( 
    IAsyncOperation __RPC_FAR * This,
    /* [in] */ HRESULT hResult,
    /* [unique][in] */ IBindCtx __RPC_FAR *pbcReserved,
    /* [in] */ DWORD dwEffects);


void __RPC_STUB IAsyncOperation_EndOperation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAsyncOperation_INTERFACE_DEFINED__ */


/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\wm7\sfone7\Include\shlwapi.h ===
/*****************************************************************************\
*                                                                             *
* shlwapi.h - Interface for the Windows light-weight utility APIs             *
*                                                                             *
* Version 1.0                                                                 *
*                                                                             *
* Copyright (c) Microsoft Corporation. All rights reserved.                   *
*                                                                             *
\*****************************************************************************/


#ifndef _INC_SHLWAPI
#define _INC_SHLWAPI

#ifndef NOSHLWAPI

#include <SpecStrings.h>
#include <objbase.h>
#include <shtypes.h>



#ifdef UNIX
typedef interface IInternetSecurityMgrSite IInternetSecurityMgrSite;
typedef interface IInternetSecurityManager IInternetSecurityManager;
typedef interface IInternetHostSecurityManager IInternetHostSecurityManager;
#endif

//
// Define API decoration for direct importing of DLL references.
//
#ifndef WINSHLWAPI
#if !defined(_SHLWAPI_)
#define LWSTDAPI          EXTERN_C DECLSPEC_IMPORT HRESULT STDAPICALLTYPE
#define LWSTDAPI_(type)   EXTERN_C DECLSPEC_IMPORT type STDAPICALLTYPE
#define LWSTDAPIV         EXTERN_C DECLSPEC_IMPORT HRESULT STDAPIVCALLTYPE
#define LWSTDAPIV_(type)  EXTERN_C DECLSPEC_IMPORT type STDAPIVCALLTYPE
#else
#define LWSTDAPI          STDAPI
#define LWSTDAPI_(type)   STDAPI_(type)
#define LWSTDAPIV         STDAPIV
#define LWSTDAPIV_(type)  STDAPIV_(type)
#endif
#endif // WINSHLWAPI

#ifdef _WIN32
#include <pshpack8.h>
#endif

#if defined(DEPRECATE_SUPPORTED)
#pragma warning(push)
#pragma warning(disable:4995)
#endif

#ifdef __cplusplus
extern "C" {
#endif

#if defined(__cplusplus) && defined(STRICT_CONST)
#define USE_STRICT_CONST
#endif
//
// Users of this header may define any number of these constants to avoid
// the definitions of each functional group.
//
//    NO_SHLWAPI_STRFCNS    String functions
//    NO_SHLWAPI_PATH       Path functions
//    NO_SHLWAPI_REG        Registry functions
//    NO_SHLWAPI_STREAM     Stream functions
//    NO_SHLWAPI_GDI        GDI helper functions

#ifndef NO_SHLWAPI_STRFCNS
//
//=============== String Routines ===================================
//

#ifdef USE_STRICT_CONST
LWSTDAPI_(LPCSTR)    StrChrA(LPCSTR lpStart, WORD wMatch);
LWSTDAPI_(LPCWSTR)   StrChrW(LPCWSTR lpStart, WCHAR wMatch);
LWSTDAPI_(LPCSTR)    StrChrIA(LPCSTR lpStart, WORD wMatch);
LWSTDAPI_(LPCWSTR)   StrChrIW(LPCWSTR lpStart, WCHAR wMatch);
#if (_WIN32_IE >= _WIN32_IE_IE60)
LWSTDAPI_(LPCWSTR)   StrChrNW(LPCWSTR lpStart, WCHAR wMatch, UINT cchMax);
LWSTDAPI_(LPCWSTR)   StrChrNIW(LPCWSTR lpStart, WCHAR wMatch, UINT cchMax);
#endif // _WIN32_IE_IE60
#else
LWSTDAPI_(LPSTR)    StrChrA(LPCSTR lpStart, WORD wMatch);
LWSTDAPI_(LPWSTR)   StrChrW(LPCWSTR lpStart, WCHAR wMatch);
LWSTDAPI_(LPSTR)    StrChrIA(LPCSTR lpStart, WORD wMatch);
LWSTDAPI_(LPWSTR)   StrChrIW(LPCWSTR lpStart, WCHAR wMatch);
#if (_WIN32_IE >= _WIN32_IE_IE60)
LWSTDAPI_(LPWSTR)   StrChrNW(LPCWSTR lpStart, WCHAR wMatch, UINT cchMax);
LWSTDAPI_(LPWSTR)   StrChrNIW(LPCWSTR lpStart, WCHAR wMatch, UINT cchMax);
#endif // _WIN32_IE_IE60
#endif
LWSTDAPI_(int)      StrCmpNA(__in LPCSTR lpStr1, __in LPCSTR lpStr2, int nChar);
LWSTDAPI_(int)      StrCmpNW(__in LPCWSTR lpStr1, __in LPCWSTR lpStr2, int nChar);
LWSTDAPI_(int)      StrCmpNIA(__in LPCSTR lpStr1, __in LPCSTR lpStr2, int nChar);
LWSTDAPI_(int)      StrCmpNIW(__in LPCWSTR lpStr1, __in LPCWSTR lpStr2, int nChar);
LWSTDAPI_(int)      StrCSpnA(LPCSTR lpStr, LPCSTR lpSet);
LWSTDAPI_(int)      StrCSpnW(LPCWSTR lpStr, LPCWSTR lpSet);
LWSTDAPI_(int)      StrCSpnIA(LPCSTR lpStr, LPCSTR lpSet);
LWSTDAPI_(int)      StrCSpnIW(LPCWSTR lpStr, LPCWSTR lpSet);
LWSTDAPI_(LPSTR)    StrDupA(LPCSTR lpSrch);
LWSTDAPI_(LPWSTR)   StrDupW(LPCWSTR lpSrch);

LWSTDAPI_(LPSTR)    StrFormatByteSizeA(DWORD dw, __out_ecount(cchBuf) LPSTR pszBuf, UINT cchBuf);
LWSTDAPI_(LPSTR)    StrFormatByteSize64A(LONGLONG qdw, __out_ecount(cchBuf) LPSTR pszBuf, UINT cchBuf);
LWSTDAPI_(LPWSTR)   StrFormatByteSizeW(LONGLONG qdw, __out_ecount(cchBuf) LPWSTR pszBuf, UINT cchBuf);
LWSTDAPI_(LPWSTR)   StrFormatKBSizeW(LONGLONG qdw, __out_ecount(cchBuf) LPWSTR pszBuf, UINT cchBuf);
LWSTDAPI_(LPSTR)    StrFormatKBSizeA(LONGLONG qdw, __out_ecount(cchBuf) LPSTR pszBuf, UINT cchBuf);
LWSTDAPI_(int)      StrFromTimeIntervalA(__out_ecount(cchMax) LPSTR pszOut, UINT cchMax, DWORD dwTimeMS, int digits);
LWSTDAPI_(int)      StrFromTimeIntervalW(__out_ecount(cchMax) LPWSTR pwszOut, UINT cchMax, DWORD dwTimeMS, int digits);
LWSTDAPI_(BOOL)     StrIsIntlEqualA(__in BOOL fCaseSens, __in LPCSTR lpString1, __in LPCSTR lpString2, __in int nChar);
LWSTDAPI_(BOOL)     StrIsIntlEqualW(__in BOOL fCaseSens, __in LPCWSTR lpString1, __in LPCWSTR lpString2, __in int nChar);
LWSTDAPI_(LPSTR)    StrNCatA(__inout_ecount(cchMax) LPSTR psz1, LPCSTR psz2, int cchMax);
LWSTDAPI_(LPWSTR)   StrNCatW(__inout_ecount(cchMax) LPWSTR psz1, LPCWSTR psz2, int cchMax);
#ifdef USE_STRICT_CONST
LWSTDAPI_(LPCSTR)    StrPBrkA(__in LPCSTR psz, __in LPCSTR pszSet);
LWSTDAPI_(LPCWSTR)   StrPBrkW(__in LPCWSTR psz, __in LPCWSTR pszSet);
LWSTDAPI_(LPCSTR)    StrRChrA(__in LPCSTR lpStart, __in_opt LPCSTR lpEnd, __in WORD wMatch);
LWSTDAPI_(LPCWSTR)   StrRChrW(__in LPCWSTR lpStart, __in_opt LPCWSTR lpEnd, __in WCHAR wMatch);
LWSTDAPI_(LPCSTR)    StrRChrIA(__in LPCSTR lpStart, __in_opt LPCSTR lpEnd, __in WORD wMatch);
LWSTDAPI_(LPCWSTR)   StrRChrIW(__in LPCWSTR lpStart, __in_opt LPCWSTR lpEnd, __in WCHAR wMatch);
LWSTDAPI_(LPCSTR)    StrRStrIA(__in LPCSTR lpSource, __in_opt LPCSTR lpLast, __in LPCSTR lpSrch);
LWSTDAPI_(LPCWSTR)   StrRStrIW(__in LPCWSTR lpSource, __in_opt LPCWSTR lpLast, __in LPCWSTR lpSrch);
#else
LWSTDAPI_(LPSTR)    StrPBrkA(__in LPCSTR psz, __in LPCSTR pszSet);
LWSTDAPI_(LPWSTR)   StrPBrkW(__in LPCWSTR psz, __in LPCWSTR pszSet);
LWSTDAPI_(LPSTR)    StrRChrA(__in LPCSTR lpStart, __in_opt LPCSTR lpEnd, __in WORD wMatch);
LWSTDAPI_(LPWSTR)   StrRChrW(__in LPCWSTR lpStart, __in_opt LPCWSTR lpEnd, __in WCHAR wMatch);
LWSTDAPI_(LPSTR)    StrRChrIA(__in LPCSTR lpStart, __in_opt LPCSTR lpEnd, __in WORD wMatch);
LWSTDAPI_(LPWSTR)   StrRChrIW(__in LPCWSTR lpStart, __in_opt LPCWSTR lpEnd, __in WCHAR wMatch);
LWSTDAPI_(LPSTR)    StrRStrIA(__in LPCSTR lpSource, __in_opt LPCSTR lpLast, __in LPCSTR lpSrch);
LWSTDAPI_(LPWSTR)   StrRStrIW(__in LPCWSTR lpSource, __in_opt LPCWSTR lpLast, __in LPCWSTR lpSrch);
#endif
LWSTDAPI_(int)      StrSpnA(__in LPCSTR psz, __in LPCSTR pszSet);
LWSTDAPI_(int)      StrSpnW(__in LPCWSTR psz, __in LPCWSTR pszSet);
#ifdef USE_STRICT_CONST
LWSTDAPI_(LPCSTR)    StrStrA(__in LPCSTR lpFirst, __in LPCSTR lpSrch);
LWSTDAPI_(LPCWSTR)   StrStrW(__in LPCWSTR lpFirst, __in LPCWSTR lpSrch);
LWSTDAPI_(LPCSTR)    StrStrIA(__in LPCSTR lpFirst, __in LPCSTR lpSrch);
LWSTDAPI_(LPCWSTR)   StrStrIW(__in LPCWSTR lpFirst, __in LPCWSTR lpSrch);
#if (_WIN32_IE >= _WIN32_IE_IE6)
LWSTDAPI_(LPCWSTR)   StrStrNW(__in LPCWSTR lpFirst, __in LPCWSTR lpSrch, __in UINT cchMax);
LWSTDAPI_(LPCWSTR)   StrStrNIW(__in LPCWSTR lpFirst, __in LPCWSTR lpSrch, __in UINT cchMax);
#endif // _WIN32_IE_IE6
#else
LWSTDAPI_(LPSTR)    StrStrA(__in LPCSTR lpFirst, __in LPCSTR lpSrch);
LWSTDAPI_(LPWSTR)   StrStrW(__in LPCWSTR lpFirst, __in LPCWSTR lpSrch);
LWSTDAPI_(LPSTR)    StrStrIA(__in LPCSTR lpFirst, __in LPCSTR lpSrch);
LWSTDAPI_(LPWSTR)   StrStrIW(__in LPCWSTR lpFirst, __in LPCWSTR lpSrch);
#if (_WIN32_IE >= _WIN32_IE_IE60)
LWSTDAPI_(LPWSTR)   StrStrNW(__in LPCWSTR lpFirst, __in LPCWSTR lpSrch, __in UINT cchMax);
LWSTDAPI_(LPWSTR)   StrStrNIW(__in LPCWSTR lpFirst, __in LPCWSTR lpSrch, __in UINT cchMax);
#endif // _WIN32_IE_IE60
#endif

#define STIF_DEFAULT        0x00000000L
#define STIF_SUPPORT_HEX    0x00000001L
typedef int STIF_FLAGS;
LWSTDAPI_(int)      StrToIntA(__in LPCSTR lpSrc);
LWSTDAPI_(int)      StrToIntW(__in LPCWSTR lpSrc);
LWSTDAPI_(BOOL)     StrToIntExA(__in LPCSTR pszString, __in STIF_FLAGS dwFlags, __out int * piRet);
LWSTDAPI_(BOOL)     StrToIntExW(__in LPCWSTR pszString, __in STIF_FLAGS dwFlags, __out int * piRet);
#if (_WIN32_IE >= _WIN32_IE_IE60)
LWSTDAPI_(BOOL)     StrToInt64ExA(__in LPCSTR pszString, __in STIF_FLAGS dwFlags, __out LONGLONG * pllRet);
LWSTDAPI_(BOOL)     StrToInt64ExW(__in LPCWSTR pszString, __in STIF_FLAGS dwFlags, __out LONGLONG * pllRet);
#endif // _WIN32_IE_IE60

LWSTDAPI_(BOOL)     StrTrimA(__inout LPSTR psz, LPCSTR pszTrimChars);
LWSTDAPI_(BOOL)     StrTrimW(__inout LPWSTR psz, LPCWSTR pszTrimChars);

LWSTDAPI_(LPWSTR)   StrCatW(__inout LPWSTR psz1, LPCWSTR psz2);
LWSTDAPI_(int)      StrCmpW(__in LPCWSTR psz1, __in LPCWSTR psz2);
LWSTDAPI_(int)      StrCmpIW(__in LPCWSTR psz1, __in LPCWSTR psz2);
LWSTDAPI_(LPWSTR)   StrCpyW(__out LPWSTR psz1, LPCWSTR psz2);
LWSTDAPI_(LPWSTR)   StrCpyNW(__out_ecount(cchMax) LPWSTR psz1, LPCWSTR psz2, int cchMax);

LWSTDAPI_(LPWSTR)   StrCatBuffW(__inout_ecount(cchDestBuffSize) LPWSTR pszDest, LPCWSTR pszSrc, int cchDestBuffSize);
LWSTDAPI_(LPSTR)    StrCatBuffA(__inout_ecount(cchDestBuffSize) LPSTR pszDest, LPCSTR pszSrc, int cchDestBuffSize);
LWSTDAPI_(BOOL)     ChrCmpIA(__in WORD w1, __in WORD w2);
LWSTDAPI_(BOOL)     ChrCmpIW(__in WCHAR w1, __in WCHAR w2);

LWSTDAPI_(int)      wvnsprintfA(__out_ecount(cchLimitIn) LPSTR lpOut, int cchLimitIn, LPCSTR lpFmt, __in va_list arglist);
LWSTDAPI_(int)      wvnsprintfW(__out_ecount(cchLimitIn) LPWSTR lpOut, int cchLimitIn, LPCWSTR lpFmt, __in va_list arglist);
LWSTDAPIV_(int)     wnsprintfA(__out_ecount(cchLimitIn) LPSTR lpOut, int cchLimitIn, LPCSTR lpFmt, ...);
LWSTDAPIV_(int)     wnsprintfW(__out_ecount(cchLimitIn) LPWSTR lpOut, int cchLimitIn, LPCWSTR lpFmt, ...);

#define StrIntlEqNA( s1, s2, nChar) StrIsIntlEqualA( TRUE, s1, s2, nChar)
#define StrIntlEqNW( s1, s2, nChar) StrIsIntlEqualW( TRUE, s1, s2, nChar)
#define StrIntlEqNIA(s1, s2, nChar) StrIsIntlEqualA(FALSE, s1, s2, nChar)
#define StrIntlEqNIW(s1, s2, nChar) StrIsIntlEqualW(FALSE, s1, s2, nChar)

LWSTDAPI StrRetToStrA(__inout STRRET *pstr, __in_opt PCUITEMID_CHILD pidl, __out LPSTR *ppsz);
LWSTDAPI StrRetToStrW(__inout STRRET *pstr, __in_opt PCUITEMID_CHILD pidl, __out LPWSTR *ppsz);
#ifdef UNICODE
#define StrRetToStr  StrRetToStrW
#else
#define StrRetToStr  StrRetToStrA
#endif // !UNICODE
LWSTDAPI StrRetToBufA(__inout STRRET *pstr, __in_opt PCUITEMID_CHILD pidl, __out_ecount(cchBuf) LPSTR pszBuf, UINT cchBuf);
LWSTDAPI StrRetToBufW(__inout STRRET *pstr, __in_opt PCUITEMID_CHILD pidl, __out_ecount(cchBuf) LPWSTR pszBuf, UINT cchBuf);
#ifdef UNICODE
#define StrRetToBuf  StrRetToBufW
#else
#define StrRetToBuf  StrRetToBufA
#endif // !UNICODE

// helper to duplicate a string using the task allocator

LWSTDAPI SHStrDupA(__in LPCSTR psz, __deref_out LPWSTR *ppwsz);
LWSTDAPI SHStrDupW(__in LPCWSTR psz, __deref_out LPWSTR *ppwsz);
#ifdef UNICODE
#define SHStrDup  SHStrDupW
#else
#define SHStrDup  SHStrDupA
#endif // !UNICODE

#ifdef __cplusplus
// make the above helper function a bit easier to use in the HRESULT world
inline HRESULT SHLocalStrDupW(LPCWSTR psz, __out LPWSTR *ppsz)
{
    *ppsz = StrDupW(psz);
    return *ppsz ? S_OK : E_OUTOFMEMORY;
}
inline HRESULT SHLocalStrDupA(LPCSTR psz, __out LPSTR *ppsz)
{
    *ppsz = StrDupA(psz);
    return *ppsz ? S_OK : E_OUTOFMEMORY;
}
#ifdef UNICODE
#define SHLocalStrDup SHLocalStrDupW
#else
#define SHLocalStrDup SHLocalStrDupA
#endif
#endif // __cplusplus

#if (_WIN32_IE >= _WIN32_IE_IE55)
LWSTDAPI_(int) StrCmpLogicalW(__in LPCWSTR psz1, __in LPCWSTR psz2);
LWSTDAPI_(DWORD) StrCatChainW(__out_ecount(cchDst) LPWSTR pszDst, DWORD cchDst, DWORD ichAt, LPCWSTR pszSrc);
LWSTDAPI StrRetToBSTR(__inout STRRET *pstr, __in PCUITEMID_CHILD pidl, __out BSTR *pbstr);
// #ifndef IEMOBILE
// This function prototype is defined in Shellapi.h in public sdk.
// LWSTDAPI SHLoadIndirectString(LPCWSTR pszSource, __out_ecount(cchOutBuf) LPWSTR pszOutBuf, UINT cchOutBuf, __in_opt void **ppvReserved);
// #endif // #ifndef IEMOBILE
#endif // _WIN32_IE_IE55


#if (_WIN32_IE >= _WIN32_IE_IE60SP2)
LWSTDAPI_(BOOL) IsCharSpaceA(__in CHAR wch);
LWSTDAPI_(BOOL) IsCharSpaceW(__in WCHAR wch);
#ifdef UNICODE
#define IsCharSpace  IsCharSpaceW
#else
#define IsCharSpace  IsCharSpaceA
#endif // !UNICODE

LWSTDAPI_(int)  StrCmpCA(__in LPCSTR pszStr1, __in LPCSTR pszStr2);
LWSTDAPI_(int)  StrCmpCW(__in LPCWSTR pszStr1, __in LPCWSTR pszStr2);
#ifdef UNICODE
#define StrCmpC  StrCmpCW
#else
#define StrCmpC  StrCmpCA
#endif // !UNICODE

LWSTDAPI_(int)  StrCmpICA(__in LPCSTR pszStr1, __in LPCSTR pszStr2);
LWSTDAPI_(int)  StrCmpICW(__in LPCWSTR pszStr1, __in LPCWSTR pszStr2);
#ifdef UNICODE
#define StrCmpIC  StrCmpICW
#else
#define StrCmpIC  StrCmpICA
#endif // !UNICODE
#endif // _WIN32_IE_IE60SP2

#ifdef UNICODE
#define StrChr                  StrChrW
#define StrRChr                 StrRChrW
#define StrChrI                 StrChrIW
#define StrRChrI                StrRChrIW
#define StrCmpN                 StrCmpNW
#define StrCmpNI                StrCmpNIW
#define StrStr                  StrStrW
#define StrStrI                 StrStrIW
#define StrDup                  StrDupW
#define StrRStrI                StrRStrIW
#define StrCSpn                 StrCSpnW
#define StrCSpnI                StrCSpnIW
#define StrSpn                  StrSpnW
#define StrToInt                StrToIntW
#define StrPBrk                 StrPBrkW
#define StrToIntEx              StrToIntExW
#if (_WIN32_IE >= 0x0600)
#define StrToInt64Ex            StrToInt64ExW
#endif
#define StrFromTimeInterval     StrFromTimeIntervalW
#define StrIntlEqN              StrIntlEqNW
#define StrIntlEqNI             StrIntlEqNIW
#define StrFormatByteSize       StrFormatByteSizeW
#define StrFormatByteSize64     StrFormatByteSizeW
#define StrFormatKBSize         StrFormatKBSizeW
#define StrNCat                 StrNCatW
#define StrTrim                 StrTrimW
#define StrCatBuff              StrCatBuffW
#define ChrCmpI                 ChrCmpIW
#define wvnsprintf              wvnsprintfW
#define wnsprintf               wnsprintfW
#define StrIsIntlEqual          StrIsIntlEqualW


#else
#define StrChr                  StrChrA
#define StrRChr                 StrRChrA
#define StrChrI                 StrChrIA
#define StrRChrI                StrRChrIA
#define StrCmpN                 StrCmpNA
#define StrCmpNI                StrCmpNIA
#define StrStr                  StrStrA
#define StrStrI                 StrStrIA
#define StrDup                  StrDupA
#define StrRStrI                StrRStrIA
#define StrCSpn                 StrCSpnA
#define StrCSpnI                StrCSpnIA
#define StrSpn                  StrSpnA
#define StrToInt                StrToIntA
#define StrPBrk                 StrPBrkA
#define StrToIntEx              StrToIntExA
#if (_WIN32_IE >= 0x0600)
#define StrToInt64Ex            StrToInt64ExA
#endif
#define StrFromTimeInterval     StrFromTimeIntervalA
#define StrIntlEqN              StrIntlEqNA
#define StrIntlEqNI             StrIntlEqNIA
#define StrFormatByteSize       StrFormatByteSizeA
#define StrFormatByteSize64     StrFormatByteSize64A
#define StrFormatKBSize         StrFormatKBSizeA
#define StrNCat                 StrNCatA
#define StrTrim                 StrTrimA
#define StrCatBuff              StrCatBuffA
#define ChrCmpI                 ChrCmpIA
#define wvnsprintf              wvnsprintfA
#define wnsprintf               wnsprintfA
#define StrIsIntlEqual          StrIsIntlEqualA
#endif

#if (_WIN32_IE >= _WIN32_IE_IE50)
// StrCmp*C* - Compare strings using C runtime collation rules.
LWSTDAPI_(int)  StrCmpNCA(__in LPCSTR lpStr1, __in LPCSTR lpStr2, __in int nChar);
// StrCmp*C* - Compare strings using C runtime collation rules.
LWSTDAPI_(int)  StrCmpNCW(__in LPCWSTR lpStr1, __in LPCWSTR lpStr2, __in int nChar);
#ifdef UNICODE
#define StrCmpNC  StrCmpNCW
#else
#define StrCmpNC  StrCmpNCA
#endif // !UNICODE
LWSTDAPI_(int)  StrCmpNICA(__in LPCSTR lpStr1, __in LPCSTR lpStr2, __in int nChar);
LWSTDAPI_(int)  StrCmpNICW(__in LPCWSTR lpStr1, __in LPCWSTR lpStr2, __in int nChar);
#ifdef UNICODE
#define StrCmpNIC  StrCmpNICW
#else
#define StrCmpNIC  StrCmpNICA
#endif // !UNICODE
#endif  // _WIN32_IE_IE50


// Backward compatible to NT's non-standard naming (strictly
// for comctl32)
//
LWSTDAPI_(BOOL)     IntlStrEqWorkerA(BOOL fCaseSens, __in_ecount(nChar) LPCSTR lpString1, __in_ecount(nChar) LPCSTR lpString2, int nChar);
LWSTDAPI_(BOOL)     IntlStrEqWorkerW(BOOL fCaseSens, __in_ecount(nChar) LPCWSTR lpString1, __in_ecount(nChar) LPCWSTR lpString2, int nChar);

#define IntlStrEqNA( s1, s2, nChar) IntlStrEqWorkerA( TRUE, s1, s2, nChar)
#define IntlStrEqNW( s1, s2, nChar) IntlStrEqWorkerW( TRUE, s1, s2, nChar)
#define IntlStrEqNIA(s1, s2, nChar) IntlStrEqWorkerA(FALSE, s1, s2, nChar)
#define IntlStrEqNIW(s1, s2, nChar) IntlStrEqWorkerW(FALSE, s1, s2, nChar)

#ifdef UNICODE
#define IntlStrEqN              IntlStrEqNW
#define IntlStrEqNI             IntlStrEqNIW
#else
#define IntlStrEqN              IntlStrEqNA
#define IntlStrEqNI             IntlStrEqNIA
#endif

#define SZ_CONTENTTYPE_HTMLA       "text/html"
#define SZ_CONTENTTYPE_HTMLW       L"text/html"
#define SZ_CONTENTTYPE_CDFA        "application/x-cdf"
#define SZ_CONTENTTYPE_CDFW        L"application/x-cdf"

#ifdef UNICODE
#define SZ_CONTENTTYPE_HTML     SZ_CONTENTTYPE_HTMLW
#define SZ_CONTENTTYPE_CDF      SZ_CONTENTTYPE_CDFW
#else
#define SZ_CONTENTTYPE_HTML     SZ_CONTENTTYPE_HTMLA
#define SZ_CONTENTTYPE_CDF      SZ_CONTENTTYPE_CDFA
#endif

#define PathIsHTMLFileA(pszPath)     PathIsContentTypeA(pszPath, SZ_CONTENTTYPE_HTMLA)
#define PathIsHTMLFileW(pszPath)     PathIsContentTypeW(pszPath, SZ_CONTENTTYPE_HTMLW)


#define StrCatA                 lstrcatA
#define StrCmpA                 lstrcmpA
#define StrCmpIA                lstrcmpiA
#define StrCpyA                 lstrcpyA
#define StrCpyNA                lstrcpynA


#define StrToLong               StrToInt
#define StrNCmp                 StrCmpN
#define StrNCmpI                StrCmpNI
#define StrNCpy                 StrCpyN
#define StrCatN                 StrNCat

#ifdef UNICODE
#define StrCat                  StrCatW
#define StrCmp                  StrCmpW
#define StrCmpI                 StrCmpIW
#define StrCpy                  StrCpyW
#define StrCpyN                 StrCpyNW
#define StrCatBuff              StrCatBuffW
#else
#define StrCat                  lstrcatA
#define StrCmp                  lstrcmpA
#define StrCmpI                 lstrcmpiA
#define StrCpy                  lstrcpyA
#define StrCpyN                 lstrcpynA
#define StrCatBuff              StrCatBuffA
#endif


#endif //  NO_SHLWAPI_STRFCNS


#ifndef NO_SHLWAPI_PATH

//
//=============== Path Routines ===================================
//

LWSTDAPI_(LPSTR)  PathAddBackslashA(__inout_ecount(MAX_PATH) LPSTR pszPath);
LWSTDAPI_(LPWSTR)  PathAddBackslashW(__inout_ecount(MAX_PATH) LPWSTR pszPath);
#ifdef UNICODE
#define PathAddBackslash  PathAddBackslashW
#else
#define PathAddBackslash  PathAddBackslashA
#endif // !UNICODE
LWSTDAPI_(BOOL)     PathAddExtensionA(__inout_ecount(MAX_PATH) LPSTR pszPath, LPCSTR pszExt);
LWSTDAPI_(BOOL)     PathAddExtensionW(__inout_ecount(MAX_PATH) LPWSTR pszPath, LPCWSTR pszExt);
#ifdef UNICODE
#define PathAddExtension  PathAddExtensionW
#else
#define PathAddExtension  PathAddExtensionA
#endif // !UNICODE
LWSTDAPI_(BOOL)     PathAppendA(__inout_ecount(MAX_PATH) LPSTR pszPath, LPCSTR pMore);
LWSTDAPI_(BOOL)     PathAppendW(__inout_ecount(MAX_PATH) LPWSTR pszPath, LPCWSTR pMore);
LWSTDAPI_(LPSTR)  PathBuildRootA(__out_ecount(4) LPSTR pszRoot, int iDrive);
LWSTDAPI_(LPWSTR)  PathBuildRootW(__out_ecount(4) LPWSTR pszRoot, int iDrive);
#ifdef UNICODE
#define PathBuildRoot  PathBuildRootW
#else
#define PathBuildRoot  PathBuildRootA
#endif // !UNICODE
LWSTDAPI_(BOOL)     PathCanonicalizeA(__out_ecount(MAX_PATH) LPSTR pszBuf, LPCSTR pszPath);
LWSTDAPI_(BOOL)     PathCanonicalizeW(__out_ecount(MAX_PATH) LPWSTR pszBuf, LPCWSTR pszPath);
LWSTDAPI_(LPSTR)  PathCombineA(__out_ecount(MAX_PATH) LPSTR pszDest, LPCSTR pszDir, LPCSTR pszFile);
LWSTDAPI_(LPWSTR)  PathCombineW(__out_ecount(MAX_PATH) LPWSTR pszDest, LPCWSTR pszDir, LPCWSTR pszFile);
#ifdef UNICODE
#define PathCombine  PathCombineW
#else
#define PathCombine  PathCombineA
#endif // !UNICODE
LWSTDAPI_(BOOL)     PathCompactPathA(HDC hDC, __inout_ecount(MAX_PATH) LPSTR pszPath, UINT dx);
LWSTDAPI_(BOOL)     PathCompactPathW(HDC hDC, __inout_ecount(MAX_PATH) LPWSTR pszPath, UINT dx);
LWSTDAPI_(BOOL)     PathCompactPathExA(__out_ecount(cchMax) LPSTR pszOut, LPCSTR pszSrc, UINT cchMax, DWORD dwFlags);
LWSTDAPI_(BOOL)     PathCompactPathExW(__out_ecount(cchMax) LPWSTR pszOut, LPCWSTR pszSrc, UINT cchMax, DWORD dwFlags);
LWSTDAPI_(int)      PathCommonPrefixA(LPCSTR pszFile1, LPCSTR pszFile2, __out_ecount_opt(MAX_PATH)  LPSTR achPath);
LWSTDAPI_(int)      PathCommonPrefixW(LPCWSTR pszFile1, LPCWSTR pszFile2, __out_ecount_opt(MAX_PATH)  LPWSTR achPath);
LWSTDAPI_(BOOL)     PathFileExistsA(__in LPCSTR pszPath);
LWSTDAPI_(BOOL)     PathFileExistsW(__in LPCWSTR pszPath);
#ifdef UNICODE
#define PathFileExists  PathFileExistsW
#else
#define PathFileExists  PathFileExistsA
#endif // !UNICODE
#ifdef USE_STRICT_CONST
LWSTDAPI_(LPCSTR)  PathFindExtensionA(__in LPCSTR pszPath);
LWSTDAPI_(LPCWSTR)  PathFindExtensionW(__in LPCWSTR pszPath);
#ifdef UNICODE
#define PathFindExtension  PathFindExtensionW
#else
#define PathFindExtension  PathFindExtensionA
#endif // !UNICODE
LWSTDAPI_(LPCSTR)  PathFindFileNameA(__in LPCSTR pszPath);
LWSTDAPI_(LPCWSTR)  PathFindFileNameW(__in LPCWSTR pszPath);
#ifdef UNICODE
#define PathFindFileName  PathFindFileNameW
#else
#define PathFindFileName  PathFindFileNameA
#endif // !UNICODE
LWSTDAPI_(LPCSTR)  PathFindNextComponentA(__in LPCSTR pszPath);
LWSTDAPI_(LPCWSTR)  PathFindNextComponentW(__in LPCWSTR pszPath);
#ifdef UNICODE
#define PathFindNextComponent  PathFindNextComponentW
#else
#define PathFindNextComponent  PathFindNextComponentA
#endif // !UNICODE
#else
LWSTDAPI_(LPSTR)  PathFindExtensionA(__in LPCSTR pszPath);
LWSTDAPI_(LPWSTR)  PathFindExtensionW(__in LPCWSTR pszPath);
#ifdef UNICODE
#define PathFindExtension  PathFindExtensionW
#else
#define PathFindExtension  PathFindExtensionA
#endif // !UNICODE
LWSTDAPI_(LPSTR)  PathFindFileNameA(__in LPCSTR pszPath);
LWSTDAPI_(LPWSTR)  PathFindFileNameW(__in LPCWSTR pszPath);
#ifdef UNICODE
#define PathFindFileName  PathFindFileNameW
#else
#define PathFindFileName  PathFindFileNameA
#endif // !UNICODE
LWSTDAPI_(LPSTR)  PathFindNextComponentA(__in LPCSTR pszPath);
LWSTDAPI_(LPWSTR)  PathFindNextComponentW(__in LPCWSTR pszPath);
#ifdef UNICODE
#define PathFindNextComponent  PathFindNextComponentW
#else
#define PathFindNextComponent  PathFindNextComponentA
#endif // !UNICODE
#endif
LWSTDAPI_(BOOL)     PathFindOnPathA(__inout_ecount(MAX_PATH) LPSTR pszPath, __in_opt __nullterminated LPCSTR * ppszOtherDirs);
LWSTDAPI_(BOOL)     PathFindOnPathW(__inout_ecount(MAX_PATH) LPWSTR pszPath, __in_opt __nullterminated LPCWSTR * ppszOtherDirs);
LWSTDAPI_(LPCSTR) PathFindSuffixArrayA(LPCSTR pszPath, __in_ecount(iArraySize) const LPCSTR *apszSuffix, int iArraySize);
LWSTDAPI_(LPCWSTR) PathFindSuffixArrayW(LPCWSTR pszPath, __in_ecount(iArraySize) const LPCWSTR *apszSuffix, int iArraySize);
#ifdef UNICODE
#define PathFindSuffixArray  PathFindSuffixArrayW
#else
#define PathFindSuffixArray  PathFindSuffixArrayA
#endif // !UNICODE
#ifdef USE_STRICT_CONST
LWSTDAPI_(LPCSTR)  PathGetArgsA(__in LPCSTR pszPath);
LWSTDAPI_(LPCWSTR)  PathGetArgsW(__in LPCWSTR pszPath);
#ifdef UNICODE
#define PathGetArgs  PathGetArgsW
#else
#define PathGetArgs  PathGetArgsA
#endif // !UNICODE
#else
LWSTDAPI_(LPSTR)  PathGetArgsA(__in LPCSTR pszPath);
LWSTDAPI_(LPWSTR)  PathGetArgsW(__in LPCWSTR pszPath);
#ifdef UNICODE
#define PathGetArgs  PathGetArgsW
#else
#define PathGetArgs  PathGetArgsA
#endif // !UNICODE
#endif
LWSTDAPI_(BOOL)     PathIsLFNFileSpecA(LPCSTR lpName);
LWSTDAPI_(BOOL)     PathIsLFNFileSpecW(LPCWSTR lpName);
#ifdef UNICODE
#define PathIsLFNFileSpec  PathIsLFNFileSpecW
#else
#define PathIsLFNFileSpec  PathIsLFNFileSpecA
#endif // !UNICODE
LWSTDAPI_(UINT)     PathGetCharTypeA(__in UCHAR ch);
LWSTDAPI_(UINT)     PathGetCharTypeW(__in WCHAR ch);

// Return flags for PathGetCharType
#define GCT_INVALID             0x0000
#define GCT_LFNCHAR             0x0001
#define GCT_SHORTCHAR           0x0002
#define GCT_WILD                0x0004
#define GCT_SEPARATOR           0x0008

LWSTDAPI_(int)      PathGetDriveNumberA(__in LPCSTR pszPath);
LWSTDAPI_(int)      PathGetDriveNumberW(__in LPCWSTR pszPath);
#ifdef UNICODE
#define PathGetDriveNumber  PathGetDriveNumberW
#else
#define PathGetDriveNumber  PathGetDriveNumberA
#endif // !UNICODE
LWSTDAPI_(BOOL)     PathIsDirectoryA(__in LPCSTR pszPath);
LWSTDAPI_(BOOL)     PathIsDirectoryW(__in LPCWSTR pszPath);
#ifdef UNICODE
#define PathIsDirectory  PathIsDirectoryW
#else
#define PathIsDirectory  PathIsDirectoryA
#endif // !UNICODE
LWSTDAPI_(BOOL)     PathIsDirectoryEmptyA(__in LPCSTR pszPath);
LWSTDAPI_(BOOL)     PathIsDirectoryEmptyW(__in LPCWSTR pszPath);
#ifdef UNICODE
#define PathIsDirectoryEmpty  PathIsDirectoryEmptyW
#else
#define PathIsDirectoryEmpty  PathIsDirectoryEmptyA
#endif // !UNICODE
LWSTDAPI_(BOOL)     PathIsFileSpecA(__in LPCSTR pszPath);
LWSTDAPI_(BOOL)     PathIsFileSpecW(__in LPCWSTR pszPath);
#ifdef UNICODE
#define PathIsFileSpec  PathIsFileSpecW
#else
#define PathIsFileSpec  PathIsFileSpecA
#endif // !UNICODE
LWSTDAPI_(BOOL)     PathIsPrefixA(__in LPCSTR pszPrefix, __in LPCSTR pszPath);
LWSTDAPI_(BOOL)     PathIsPrefixW(__in LPCWSTR pszPrefix, __in LPCWSTR pszPath);
#ifdef UNICODE
#define PathIsPrefix  PathIsPrefixW
#else
#define PathIsPrefix  PathIsPrefixA
#endif // !UNICODE
LWSTDAPI_(BOOL)     PathIsRelativeA(__in LPCSTR pszPath);
LWSTDAPI_(BOOL)     PathIsRelativeW(__in LPCWSTR pszPath);
#ifdef UNICODE
#define PathIsRelative  PathIsRelativeW
#else
#define PathIsRelative  PathIsRelativeA
#endif // !UNICODE
LWSTDAPI_(BOOL)     PathIsRootA(__in LPCSTR pszPath);
LWSTDAPI_(BOOL)     PathIsRootW(__in LPCWSTR pszPath);
#ifdef UNICODE
#define PathIsRoot  PathIsRootW
#else
#define PathIsRoot  PathIsRootA
#endif // !UNICODE
LWSTDAPI_(BOOL)     PathIsSameRootA(__in LPCSTR pszPath1, __in LPCSTR pszPath2);
LWSTDAPI_(BOOL)     PathIsSameRootW(__in LPCWSTR pszPath1, __in LPCWSTR pszPath2);
#ifdef UNICODE
#define PathIsSameRoot  PathIsSameRootW
#else
#define PathIsSameRoot  PathIsSameRootA
#endif // !UNICODE
LWSTDAPI_(BOOL)     PathIsUNCA(__in LPCSTR pszPath);
LWSTDAPI_(BOOL)     PathIsUNCW(__in LPCWSTR pszPath);
#ifdef UNICODE
#define PathIsUNC  PathIsUNCW
#else
#define PathIsUNC  PathIsUNCA
#endif // !UNICODE
LWSTDAPI_(BOOL)     PathIsNetworkPathA(__in LPCSTR pszPath);
LWSTDAPI_(BOOL)     PathIsNetworkPathW(__in LPCWSTR pszPath);
#ifdef UNICODE
#define PathIsNetworkPath  PathIsNetworkPathW
#else
#define PathIsNetworkPath  PathIsNetworkPathA
#endif // !UNICODE
LWSTDAPI_(BOOL)     PathIsUNCServerA(__in LPCSTR pszPath);
LWSTDAPI_(BOOL)     PathIsUNCServerW(__in LPCWSTR pszPath);
#ifdef UNICODE
#define PathIsUNCServer  PathIsUNCServerW
#else
#define PathIsUNCServer  PathIsUNCServerA
#endif // !UNICODE
LWSTDAPI_(BOOL)     PathIsUNCServerShareA(__in LPCSTR pszPath);
LWSTDAPI_(BOOL)     PathIsUNCServerShareW(__in LPCWSTR pszPath);
#ifdef UNICODE
#define PathIsUNCServerShare  PathIsUNCServerShareW
#else
#define PathIsUNCServerShare  PathIsUNCServerShareA
#endif // !UNICODE
LWSTDAPI_(BOOL)     PathIsContentTypeA(__in LPCSTR pszPath, __in LPCSTR pszContentType);
LWSTDAPI_(BOOL)     PathIsContentTypeW(__in LPCWSTR pszPath, __in LPCWSTR pszContentType);
LWSTDAPI_(BOOL)     PathIsURLA(__in LPCSTR pszPath);
LWSTDAPI_(BOOL)     PathIsURLW(__in LPCWSTR pszPath);
#ifdef UNICODE
#define PathIsURL  PathIsURLW
#else
#define PathIsURL  PathIsURLA
#endif // !UNICODE
LWSTDAPI_(BOOL)     PathMakePrettyA(__inout LPSTR pszPath);
LWSTDAPI_(BOOL)     PathMakePrettyW(__inout LPWSTR pszPath);
LWSTDAPI_(BOOL)     PathMatchSpecA(__in LPCSTR pszFile, __in LPCSTR pszSpec);
LWSTDAPI_(BOOL)     PathMatchSpecW(__in LPCWSTR pszFile, __in LPCWSTR pszSpec);

#if (_WIN32_IE >= _WIN32_IE_IE70)
// Flags for PathMatchSpecEx
#define PMSF_NORMAL            0x00000000
#define PMSF_MULTIPLE          0x00000001
#define PMSF_DONT_STRIP_SPACES 0x00010000  // modifies either of the above

LWSTDAPI PathMatchSpecExA(LPCSTR pszFile, LPCSTR pszSpec, DWORD dwFlags);
LWSTDAPI PathMatchSpecExW(LPCWSTR pszFile, LPCWSTR pszSpec, DWORD dwFlags);
#endif // _WIN32_IE_IE70

LWSTDAPI_(int)      PathParseIconLocationA(__inout LPSTR pszIconFile);
LWSTDAPI_(int)      PathParseIconLocationW(__inout LPWSTR pszIconFile);
LWSTDAPI_(BOOL)     PathQuoteSpacesA(__inout_ecount(MAX_PATH) LPSTR lpsz);
LWSTDAPI_(BOOL)     PathQuoteSpacesW(__inout_ecount(MAX_PATH) LPWSTR lpsz);
LWSTDAPI_(BOOL)     PathRelativePathToA(__out_ecount(MAX_PATH) LPSTR pszPath, LPCSTR pszFrom, DWORD dwAttrFrom, LPCSTR pszTo, DWORD dwAttrTo);
LWSTDAPI_(BOOL)     PathRelativePathToW(__out_ecount(MAX_PATH) LPWSTR pszPath, LPCWSTR pszFrom, DWORD dwAttrFrom, LPCWSTR pszTo, DWORD dwAttrTo);
LWSTDAPI_(void)     PathRemoveArgsA(__inout LPSTR pszPath);
LWSTDAPI_(void)     PathRemoveArgsW(__inout LPWSTR pszPath);
LWSTDAPI_(LPSTR)  PathRemoveBackslashA(__inout LPSTR pszPath);
LWSTDAPI_(LPWSTR)  PathRemoveBackslashW(__inout LPWSTR pszPath);
#ifdef UNICODE
#define PathRemoveBackslash  PathRemoveBackslashW
#else
#define PathRemoveBackslash  PathRemoveBackslashA
#endif // !UNICODE
LWSTDAPI_(void)     PathRemoveBlanksA(__inout LPSTR pszPath);
LWSTDAPI_(void)     PathRemoveBlanksW(__inout LPWSTR pszPath);
LWSTDAPI_(void)     PathRemoveExtensionA(__inout LPSTR pszPath);
LWSTDAPI_(void)     PathRemoveExtensionW(__inout LPWSTR pszPath);
LWSTDAPI_(BOOL)     PathRemoveFileSpecA(__inout LPSTR pszPath);
LWSTDAPI_(BOOL)     PathRemoveFileSpecW(__inout LPWSTR pszPath);
LWSTDAPI_(BOOL)     PathRenameExtensionA(__inout_ecount(MAX_PATH) LPSTR pszPath, LPCSTR pszExt);
LWSTDAPI_(BOOL)     PathRenameExtensionW(__inout_ecount(MAX_PATH) LPWSTR pszPath, LPCWSTR pszExt);
LWSTDAPI_(BOOL)     PathSearchAndQualifyA(LPCSTR pszPath, __out_ecount(cchBuf) LPSTR pszBuf, UINT cchBuf);
LWSTDAPI_(BOOL)     PathSearchAndQualifyW(LPCWSTR pszPath, __out_ecount(cchBuf) LPWSTR pszBuf, UINT cchBuf);
LWSTDAPI_(void)     PathSetDlgItemPathA(__in HWND hDlg, int id, LPCSTR pszPath);
LWSTDAPI_(void)     PathSetDlgItemPathW(__in HWND hDlg, int id, LPCWSTR pszPath);
#ifdef USE_STRICT_CONST
LWSTDAPI_(LPCSTR)  PathSkipRootA(LPCSTR pszPath);
LWSTDAPI_(LPCWSTR)  PathSkipRootW(LPCWSTR pszPath);
#ifdef UNICODE
#define PathSkipRoot  PathSkipRootW
#else
#define PathSkipRoot  PathSkipRootA
#endif // !UNICODE
#else
LWSTDAPI_(LPSTR)  PathSkipRootA(LPCSTR pszPath);
LWSTDAPI_(LPWSTR)  PathSkipRootW(LPCWSTR pszPath);
#ifdef UNICODE
#define PathSkipRoot  PathSkipRootW
#else
#define PathSkipRoot  PathSkipRootA
#endif // !UNICODE
#endif
LWSTDAPI_(void)     PathStripPathA(__inout LPSTR pszPath);
LWSTDAPI_(void)     PathStripPathW(__inout LPWSTR pszPath);
#ifdef UNICODE
#define PathStripPath  PathStripPathW
#else
#define PathStripPath  PathStripPathA
#endif // !UNICODE
LWSTDAPI_(BOOL)     PathStripToRootA(__inout LPSTR pszPath);
LWSTDAPI_(BOOL)     PathStripToRootW(__inout LPWSTR pszPath);
#ifdef UNICODE
#define PathStripToRoot  PathStripToRootW
#else
#define PathStripToRoot  PathStripToRootA
#endif // !UNICODE
LWSTDAPI_(BOOL)     PathUnquoteSpacesA(__inout LPSTR lpsz);
LWSTDAPI_(BOOL)     PathUnquoteSpacesW(__inout LPWSTR lpsz);
LWSTDAPI_(BOOL)     PathMakeSystemFolderA(LPCSTR pszPath);
LWSTDAPI_(BOOL)     PathMakeSystemFolderW(LPCWSTR pszPath);
#ifdef UNICODE
#define PathMakeSystemFolder  PathMakeSystemFolderW
#else
#define PathMakeSystemFolder  PathMakeSystemFolderA
#endif // !UNICODE
LWSTDAPI_(BOOL)     PathUnmakeSystemFolderA(LPCSTR pszPath);
LWSTDAPI_(BOOL)     PathUnmakeSystemFolderW(LPCWSTR pszPath);
#ifdef UNICODE
#define PathUnmakeSystemFolder  PathUnmakeSystemFolderW
#else
#define PathUnmakeSystemFolder  PathUnmakeSystemFolderA
#endif // !UNICODE
LWSTDAPI_(BOOL)     PathIsSystemFolderA(LPCSTR pszPath, DWORD dwAttrb);
LWSTDAPI_(BOOL)     PathIsSystemFolderW(LPCWSTR pszPath, DWORD dwAttrb);
#ifdef UNICODE
#define PathIsSystemFolder  PathIsSystemFolderW
#else
#define PathIsSystemFolder  PathIsSystemFolderA
#endif // !UNICODE
LWSTDAPI_(void)     PathUndecorateA(__inout LPSTR pszPath);
LWSTDAPI_(void)     PathUndecorateW(__inout LPWSTR pszPath);
#ifdef UNICODE
#define PathUndecorate  PathUndecorateW
#else
#define PathUndecorate  PathUndecorateA
#endif // !UNICODE
LWSTDAPI_(BOOL)     PathUnExpandEnvStringsA(LPCSTR pszPath, __out_ecount(cchBuf) LPSTR pszBuf, UINT cchBuf);
LWSTDAPI_(BOOL)     PathUnExpandEnvStringsW(LPCWSTR pszPath, __out_ecount(cchBuf) LPWSTR pszBuf, UINT cchBuf);
#ifdef UNICODE
#define PathUnExpandEnvStrings  PathUnExpandEnvStringsW
#else
#define PathUnExpandEnvStrings  PathUnExpandEnvStringsA
#endif // !UNICODE


#ifdef UNICODE
#define PathAppend              PathAppendW
#define PathCanonicalize        PathCanonicalizeW
#define PathCompactPath         PathCompactPathW
#define PathCompactPathEx       PathCompactPathExW
#define PathCommonPrefix        PathCommonPrefixW
#define PathFindOnPath          PathFindOnPathW
#define PathGetCharType         PathGetCharTypeW
#define PathIsContentType       PathIsContentTypeW
#define PathIsHTMLFile          PathIsHTMLFileW
#define PathMakePretty          PathMakePrettyW
#define PathMatchSpec           PathMatchSpecW
#if (_WIN32_IE >= _WIN32_IE_IE70)
#define PathMatchSpecEx         PathMatchSpecExW
#endif // _WIN32_IE_IE70
#define PathParseIconLocation   PathParseIconLocationW
#define PathQuoteSpaces         PathQuoteSpacesW
#define PathRelativePathTo      PathRelativePathToW
#define PathRemoveArgs          PathRemoveArgsW
#define PathRemoveBlanks        PathRemoveBlanksW
#define PathRemoveExtension     PathRemoveExtensionW
#define PathRemoveFileSpec      PathRemoveFileSpecW
#define PathRenameExtension     PathRenameExtensionW
#define PathSearchAndQualify    PathSearchAndQualifyW
#define PathSetDlgItemPath      PathSetDlgItemPathW
#define PathUnquoteSpaces       PathUnquoteSpacesW
#else
#define PathAppend              PathAppendA
#define PathCanonicalize        PathCanonicalizeA
#define PathCompactPath         PathCompactPathA
#define PathCompactPathEx       PathCompactPathExA
#define PathCommonPrefix        PathCommonPrefixA
#define PathFindOnPath          PathFindOnPathA
#define PathGetCharType         PathGetCharTypeA
#define PathIsContentType       PathIsContentTypeA
#define PathIsHTMLFile          PathIsHTMLFileA
#define PathMakePretty          PathMakePrettyA
#define PathMatchSpec           PathMatchSpecA
#if (_WIN32_IE >= _WIN32_IE_IE70)
#define PathMatchSpecEx         PathMatchSpecExA
#endif // _WIN32_IE_IE70
#define PathParseIconLocation   PathParseIconLocationA
#define PathQuoteSpaces         PathQuoteSpacesA
#define PathRelativePathTo      PathRelativePathToA
#define PathRemoveArgs          PathRemoveArgsA
#define PathRemoveBlanks        PathRemoveBlanksA
#define PathRemoveExtension     PathRemoveExtensionA
#define PathRemoveFileSpec      PathRemoveFileSpecA
#define PathRenameExtension     PathRenameExtensionA
#define PathSearchAndQualify    PathSearchAndQualifyA
#define PathSetDlgItemPath      PathSetDlgItemPathA
#define PathUnquoteSpaces       PathUnquoteSpacesA
#endif

typedef enum {
    URL_SCHEME_INVALID     = -1,
    URL_SCHEME_UNKNOWN     =  0,
    URL_SCHEME_FTP,
    URL_SCHEME_HTTP,
    URL_SCHEME_GOPHER,
    URL_SCHEME_MAILTO,
    URL_SCHEME_NEWS,
    URL_SCHEME_NNTP,
    URL_SCHEME_TELNET,
    URL_SCHEME_WAIS,
    URL_SCHEME_FILE,
    URL_SCHEME_MK,
    URL_SCHEME_HTTPS,
    URL_SCHEME_SHELL,
    URL_SCHEME_SNEWS,
    URL_SCHEME_LOCAL,
    URL_SCHEME_JAVASCRIPT,
    URL_SCHEME_VBSCRIPT,
    URL_SCHEME_ABOUT,
    URL_SCHEME_RES,
#if (_WIN32_IE >= _WIN32_IE_IE60)
    URL_SCHEME_MSSHELLROOTED,
    URL_SCHEME_MSSHELLIDLIST,
    URL_SCHEME_MSHELP,
#endif // _WIN32_IE_IE60
#if (_WIN32_IE >= _WIN32_IE_IE70)
    URL_SCHEME_MSSHELLDEVICE,
    URL_SCHEME_WILDCARD,
#endif // _WIN32_IE_IE70
    URL_SCHEME_SEARCH_MS,
    URL_SCHEME_MAXVALUE,
} URL_SCHEME;

typedef enum {
    URL_PART_NONE       = 0,
    URL_PART_SCHEME     = 1,
    URL_PART_HOSTNAME,
    URL_PART_USERNAME,
    URL_PART_PASSWORD,
    URL_PART_PORT,
    URL_PART_QUERY,
} URL_PART;

typedef enum {
    URLIS_URL,
    URLIS_OPAQUE,
    URLIS_NOHISTORY,
    URLIS_FILEURL,
    URLIS_APPLIABLE,
    URLIS_DIRECTORY,
    URLIS_HASQUERY,
} URLIS;

#define URL_UNESCAPE                    0x10000000
#define URL_ESCAPE_UNSAFE               0x20000000
#define URL_PLUGGABLE_PROTOCOL          0x40000000
#define URL_WININET_COMPATIBILITY       0x80000000
#define URL_DONT_ESCAPE_EXTRA_INFO      0x02000000
#define URL_DONT_UNESCAPE_EXTRA_INFO    URL_DONT_ESCAPE_EXTRA_INFO
#define URL_BROWSER_MODE                URL_DONT_ESCAPE_EXTRA_INFO
#define URL_ESCAPE_SPACES_ONLY          0x04000000
#define URL_DONT_SIMPLIFY               0x08000000
#define URL_NO_META                     URL_DONT_SIMPLIFY
#define URL_UNESCAPE_INPLACE            0x00100000
#define URL_CONVERT_IF_DOSPATH          0x00200000
#define URL_UNESCAPE_HIGH_ANSI_ONLY     0x00400000
#define URL_INTERNAL_PATH               0x00800000  // Will escape #'s in paths
#define URL_FILE_USE_PATHURL            0x00010000
#if (_WIN32_IE >= _WIN32_IE_IE60SP2)
#define URL_DONT_UNESCAPE               0x00020000  // Do not unescape the path/url at all
#endif // _WIN32_IE_IE60SP2
#define URL_ESCAPE_PERCENT              0x00001000
#define URL_ESCAPE_SEGMENT_ONLY         0x00002000  // Treat the entire URL param as one URL segment.

#define URL_PARTFLAG_KEEPSCHEME         0x00000001

#define URL_APPLY_DEFAULT               0x00000001
#define URL_APPLY_GUESSSCHEME           0x00000002
#define URL_APPLY_GUESSFILE             0x00000004
#define URL_APPLY_FORCEAPPLY            0x00000008


LWSTDAPI_(int)          UrlCompareA(__in LPCSTR psz1, __in LPCSTR psz2, __in BOOL fIgnoreSlash);
LWSTDAPI_(int)          UrlCompareW(__in LPCWSTR psz1, __in  LPCWSTR psz2, __in BOOL fIgnoreSlash);
LWSTDAPI                UrlCombineA(LPCSTR pszBase, LPCSTR pszRelative, __out_ecount_opt(*pcchCombined) LPSTR pszCombined, __inout LPDWORD pcchCombined, DWORD dwFlags);
LWSTDAPI                UrlCombineW(LPCWSTR pszBase, LPCWSTR pszRelative, __out_ecount_opt(*pcchCombined) LPWSTR pszCombined, __inout LPDWORD pcchCombined, DWORD dwFlags);
LWSTDAPI                UrlCanonicalizeA(LPCSTR pszUrl, __out_ecount(*pcchCanonicalized) LPSTR pszCanonicalized, __inout LPDWORD pcchCanonicalized, DWORD dwFlags);
LWSTDAPI                UrlCanonicalizeW(LPCWSTR pszUrl, __out_ecount(*pcchCanonicalized) LPWSTR pszCanonicalized, __inout LPDWORD pcchCanonicalized, DWORD dwFlags);
LWSTDAPI_(BOOL)         UrlIsOpaqueA(LPCSTR pszURL);
LWSTDAPI_(BOOL)         UrlIsOpaqueW(LPCWSTR pszURL);
LWSTDAPI_(BOOL)         UrlIsNoHistoryA(LPCSTR pszURL);
LWSTDAPI_(BOOL)         UrlIsNoHistoryW(LPCWSTR pszURL);
#define                 UrlIsFileUrlA(pszURL) UrlIsA(pszURL, URLIS_FILEURL)
#define                 UrlIsFileUrlW(pszURL) UrlIsW(pszURL, URLIS_FILEURL)
LWSTDAPI_(BOOL)         UrlIsA(LPCSTR pszUrl, __in URLIS UrlIs);
LWSTDAPI_(BOOL)         UrlIsW(LPCWSTR pszUrl, __in URLIS UrlIs);
LWSTDAPI_(LPCSTR)       UrlGetLocationA(LPCSTR psz1);
LWSTDAPI_(LPCWSTR)      UrlGetLocationW(LPCWSTR psz1);
LWSTDAPI                UrlUnescapeA(__inout LPSTR pszUrl, __out_ecount_opt(*pcchUnescaped) LPSTR pszUnescaped, __inout_opt LPDWORD pcchUnescaped, DWORD dwFlags);
LWSTDAPI                UrlUnescapeW(__inout LPWSTR pszUrl, __out_ecount_opt(*pcchUnescaped) LPWSTR pszUnescaped, __inout_opt LPDWORD pcchUnescaped, DWORD dwFlags);
LWSTDAPI                UrlEscapeA(LPCSTR pszUrl, __out_ecount(*pcchEscaped) LPSTR pszEscaped, __inout LPDWORD pcchEscaped, DWORD dwFlags);
LWSTDAPI                UrlEscapeW(LPCWSTR pszUrl, __out_ecount(*pcchEscaped) LPWSTR pszEscaped, __inout LPDWORD pcchEscaped, DWORD dwFlags);
LWSTDAPI                UrlCreateFromPathA(LPCSTR pszPath, __out_ecount(*pcchUrl) LPSTR pszUrl, __inout LPDWORD pcchUrl, DWORD dwFlags);
LWSTDAPI                UrlCreateFromPathW(LPCWSTR pszPath, __out_ecount(*pcchUrl) LPWSTR pszUrl, __inout LPDWORD pcchUrl, DWORD dwFlags);
LWSTDAPI                PathCreateFromUrlA(LPCSTR pszUrl, __out_ecount(*pcchPath) LPSTR pszPath, __inout LPDWORD pcchPath, DWORD dwFlags);
LWSTDAPI                PathCreateFromUrlW(LPCWSTR pszUrl, __out_ecount(*pcchPath) LPWSTR pszPath, __inout LPDWORD pcchPath, DWORD dwFlags);
#if (_WIN32_IE >= _WIN32_IE_IE70)
LWSTDAPI                PathCreateFromUrlAlloc(LPCWSTR pszIn, __out LPWSTR *ppszOut, DWORD dwFlags);
#endif // _WIN32_IE_IE70
LWSTDAPI                UrlHashA(LPCSTR pszUrl, __out_ecount(cbHash) LPBYTE pbHash, DWORD cbHash);
LWSTDAPI                UrlHashW(LPCWSTR pszUrl, __out_ecount(cbHash) LPBYTE pbHash, DWORD cbHash);
LWSTDAPI                UrlGetPartW(LPCWSTR pszIn, __out_ecount(*pcchOut) LPWSTR pszOut, __inout LPDWORD pcchOut, DWORD dwPart, DWORD dwFlags);
LWSTDAPI                UrlGetPartA(LPCSTR pszIn, __out_ecount(*pcchOut) LPSTR pszOut, __inout LPDWORD pcchOut, DWORD dwPart, DWORD dwFlags);
LWSTDAPI                UrlApplySchemeA(LPCSTR pszIn, __out_ecount(*pcchOut) LPSTR pszOut, __inout LPDWORD pcchOut, DWORD dwFlags);
LWSTDAPI                UrlApplySchemeW(LPCWSTR pszIn, __out_ecount(*pcchOut) LPWSTR pszOut, __inout LPDWORD pcchOut, DWORD dwFlags);
LWSTDAPI                HashData(__in_ecount(cbData) LPBYTE pbData, DWORD cbData, __out_ecount(cbHash) LPBYTE pbHash, DWORD cbHash);
LWSTDAPI                UrlFixupW(LPCWSTR pszIn, __out_ecount(cchOut) LPWSTR pszOut, DWORD cchOut);


#ifdef UNICODE
#define UrlCompare              UrlCompareW
#define UrlCombine              UrlCombineW
#define UrlCanonicalize         UrlCanonicalizeW
#define UrlIsOpaque             UrlIsOpaqueW
#define UrlIsFileUrl            UrlIsFileUrlW
#define UrlGetLocation          UrlGetLocationW
#define UrlUnescape             UrlUnescapeW
#define UrlEscape               UrlEscapeW
#define UrlCreateFromPath       UrlCreateFromPathW
#define PathCreateFromUrl       PathCreateFromUrlW
#define UrlHash                 UrlHashW
#define UrlGetPart              UrlGetPartW
#define UrlApplyScheme          UrlApplySchemeW
#define UrlIs                   UrlIsW
#define UrlFixup                UrlFixupW
#else //!UNICODE
#define UrlCompare              UrlCompareA
#define UrlCombine              UrlCombineA
#define UrlCanonicalize         UrlCanonicalizeA
#define UrlIsOpaque             UrlIsOpaqueA
#define UrlIsFileUrl            UrlIsFileUrlA
#define UrlGetLocation          UrlGetLocationA
#define UrlUnescape             UrlUnescapeA
#define UrlEscape               UrlEscapeA
#define UrlCreateFromPath       UrlCreateFromPathA
#define PathCreateFromUrl       PathCreateFromUrlA
#define UrlHash                 UrlHashA
#define UrlGetPart              UrlGetPartA
#define UrlApplyScheme          UrlApplySchemeA
#define UrlIs                   UrlIsA
// no UrlFixupA
#endif //UNICODE

#define UrlEscapeSpaces(pszUrl, pszEscaped, pcchEscaped)        UrlCanonicalize(pszUrl, pszEscaped, pcchEscaped, URL_ESCAPE_SPACES_ONLY |URL_DONT_ESCAPE_EXTRA_INFO )
#define UrlUnescapeInPlace(pszUrl, dwFlags)                     UrlUnescape(pszUrl, NULL, NULL, dwFlags | URL_UNESCAPE_INPLACE)


#if (_WIN32_IE >= _WIN32_IE_IE50)

typedef struct tagPARSEDURLA {
    DWORD     cbSize;
    // Pointers into the buffer that was provided to ParseURL
    LPCSTR    pszProtocol;
    UINT      cchProtocol;
    LPCSTR    pszSuffix;
    UINT      cchSuffix;
    UINT      nScheme;            // One of URL_SCHEME_*
    } PARSEDURLA, * PPARSEDURLA;
typedef struct tagPARSEDURLW {
    DWORD     cbSize;
    // Pointers into the buffer that was provided to ParseURL
    LPCWSTR   pszProtocol;
    UINT      cchProtocol;
    LPCWSTR   pszSuffix;
    UINT      cchSuffix;
    UINT      nScheme;            // One of URL_SCHEME_*
    } PARSEDURLW, * PPARSEDURLW;
#ifdef UNICODE
typedef PARSEDURLW PARSEDURL;
typedef PPARSEDURLW PPARSEDURL;
#else
typedef PARSEDURLA PARSEDURL;
typedef PPARSEDURLA PPARSEDURL;
#endif // UNICODE

LWSTDAPI            ParseURLA(LPCSTR pcszURL, __inout PARSEDURLA * ppu);
LWSTDAPI            ParseURLW(LPCWSTR pcszURL, __inout PARSEDURLW * ppu);
#ifdef UNICODE
#define ParseURL  ParseURLW
#else
#define ParseURL  ParseURLA
#endif // !UNICODE

#endif  // _WIN32_IE_IE50


#endif //  NO_SHLWAPI_PATH



#ifndef NO_SHLWAPI_REG
//
//=============== Registry Routines ===================================
//


// SHDeleteEmptyKey mimics RegDeleteKey as it behaves on NT.
// SHDeleteKey mimics RegDeleteKey as it behaves on Win95.
// #ifdef IEMOBILE
#ifndef _LSTATUS_DEFINED
#define _LSTATUS_DEFINED
typedef LONG LSTATUS;
#endif // !_LSTATUS_DEFINED
// #endif // #ifdef IEMOBILE
LWSTDAPI_(LSTATUS)  SHDeleteEmptyKeyA(__in HKEY hkey, __in_opt LPCSTR pszSubKey);
// #endif // #ifdef IEMOBILE
LWSTDAPI_(LSTATUS)  SHDeleteEmptyKeyW(__in HKEY hkey, __in_opt LPCWSTR pszSubKey);
#ifdef UNICODE
#define SHDeleteEmptyKey  SHDeleteEmptyKeyW
#else
#define SHDeleteEmptyKey  SHDeleteEmptyKeyA
#endif // !UNICODE
LWSTDAPI_(LSTATUS)  SHDeleteKeyA(__in HKEY hkey, __in_opt LPCSTR pszSubKey);
LWSTDAPI_(LSTATUS)  SHDeleteKeyW(__in HKEY hkey, __in_opt LPCWSTR pszSubKey);
#ifdef UNICODE
#define SHDeleteKey  SHDeleteKeyW
#else
#define SHDeleteKey  SHDeleteKeyA
#endif // !UNICODE
LWSTDAPI_(HKEY)     SHRegDuplicateHKey(__in HKEY hkey);


// These functions open the key, get/set/delete the value, then close
// the key.

LWSTDAPI_(LSTATUS)    SHDeleteValueA(__in HKEY hkey, __in_opt LPCSTR pszSubKey, __in_opt LPCSTR pszValue);
LWSTDAPI_(LSTATUS)    SHDeleteValueW(__in HKEY hkey, __in_opt LPCWSTR pszSubKey, __in_opt LPCWSTR pszValue);
#ifdef UNICODE
#define SHDeleteValue  SHDeleteValueW
#else
#define SHDeleteValue  SHDeleteValueA
#endif // !UNICODE
LWSTDAPI_(LSTATUS)    SHGetValueA(
    __in                       HKEY hkey,
    __in_opt                   LPCSTR  pszSubKey,
    __in_opt                   LPCSTR  pszValue,
    __out_opt                  DWORD    *pdwType,
    __out_bcount_opt(*pcbData) void     *pvData,
    __inout_opt                DWORD    *pcbData);
LWSTDAPI_(LSTATUS)    SHGetValueW(
    __in                       HKEY hkey,
    __in_opt                   LPCWSTR  pszSubKey,
    __in_opt                   LPCWSTR  pszValue,
    __out_opt                  DWORD    *pdwType,
    __out_bcount_opt(*pcbData) void     *pvData,
    __inout_opt                DWORD    *pcbData);
#ifdef UNICODE
#define SHGetValue  SHGetValueW
#else
#define SHGetValue  SHGetValueA
#endif // !UNICODE
LWSTDAPI_(LSTATUS)    SHSetValueA(__in HKEY hkey, __in_opt LPCSTR pszSubKey, __in_opt LPCSTR pszValue, __in DWORD dwType,
    __typefix(LPBYTE) __in_bcount_opt(cbData) LPCVOID pvData, __in_opt DWORD cbData);
LWSTDAPI_(LSTATUS)    SHSetValueW(__in HKEY hkey, __in_opt LPCWSTR pszSubKey, __in_opt LPCWSTR pszValue, __in DWORD dwType,
    __typefix(LPBYTE) __in_bcount_opt(cbData) LPCVOID pvData, __in_opt DWORD cbData);
#ifdef UNICODE
#define SHSetValue  SHSetValueW
#else
#define SHSetValue  SHSetValueA
#endif // !UNICODE

#if (_WIN32_IE >= 0x0602)
//
// SRRF - Shell Registry Routine Flags (for SHRegGetValue)
//

typedef int SRRF;

#define SRRF_RT_REG_NONE        0x00000001  // restrict type to REG_NONE      (other data types will not return ERROR_SUCCESS)
#define SRRF_RT_REG_SZ          0x00000002  // restrict type to REG_SZ        (other data types will not return ERROR_SUCCESS) (automatically converts REG_EXPAND_SZ to REG_SZ unless SRRF_NOEXPAND is specified)
#define SRRF_RT_REG_EXPAND_SZ   0x00000004  // restrict type to REG_EXPAND_SZ (other data types will not return ERROR_SUCCESS) (must specify SRRF_NOEXPAND or SHRegGetValue will fail with ERROR_INVALID_PARAMETER)
#define SRRF_RT_REG_BINARY      0x00000008  // restrict type to REG_BINARY    (other data types will not return ERROR_SUCCESS)
#define SRRF_RT_REG_DWORD       0x00000010  // restrict type to REG_DWORD     (other data types will not return ERROR_SUCCESS)
#define SRRF_RT_REG_MULTI_SZ    0x00000020  // restrict type to REG_MULTI_SZ  (other data types will not return ERROR_SUCCESS)
#define SRRF_RT_REG_QWORD       0x00000040  // restrict type to REG_QWORD     (other data types will not return ERROR_SUCCESS)

#define SRRF_RT_DWORD           (SRRF_RT_REG_BINARY | SRRF_RT_REG_DWORD) // restrict type to *32-bit* SRRF_RT_REG_BINARY or SRRF_RT_REG_DWORD (other data types will not return ERROR_SUCCESS)
#define SRRF_RT_QWORD           (SRRF_RT_REG_BINARY | SRRF_RT_REG_QWORD) // restrict type to *64-bit* SRRF_RT_REG_BINARY or SRRF_RT_REG_DWORD (other data types will not return ERROR_SUCCESS)
#define SRRF_RT_ANY             0x0000ffff                               // no type restriction

#define SRRF_RM_ANY             0x00000000  // no mode restriction (default is to allow any mode)
#define SRRF_RM_NORMAL          0x00010000  // restrict system startup mode to "normal boot"               (other startup modes will not return ERROR_SUCCESS)
#define SRRF_RM_SAFE            0x00020000  // restrict system startup mode to "safe mode"                 (other startup modes will not return ERROR_SUCCESS)
#define SRRF_RM_SAFENETWORK     0x00040000  // restrict system startup mode to "safe mode with networking" (other startup modes will not return ERROR_SUCCESS)

#define SRRF_NOEXPAND           0x10000000  // do not automatically expand environment strings if value is of type REG_EXPAND_SZ
#define SRRF_ZEROONFAILURE      0x20000000  // if pvData is not NULL, set content to all zeros on failure
#define SRRF_NOVIRT             0x40000000  // if the requested key is virtualized, then fail with ERROR_FILE_NOT_FOUND


// Function:
//
//  SHRegGetValue()
//
// Purpose:
//
//  Gets a registry value.  SHRegGetValue() provides the following benefits:
//
//  - data type checking
//  - boot mode checking
//  - auto-expansion of REG_EXPAND_SZ data
//  - guaranteed NULL termination of REG_SZ, REG_EXPAND_SZ, REG_MULTI_SZ data
//
// Parameters:
//
//  hkey        - handle to a currently open key.
//
//  pszSubKey   - pointer to a null-terminated string specifying the relative
//                path from hkey to one of its subkeys from which the data is
//                to be retrieved.  this will be opened with KEY_READ sam.
//
//                Note1: pszSubKey can be NULL or "".  In either of these two
//                       cases, the data is retrieved from the hkey itself.
//                Note2: *** PERF ***
//                       If pszSubKey is not NULL or "", the subkey will be
//                       automatically be opened and closed by this routine
//                       in order to obtain the data.  If you are retrieving
//                       multiple values from the same subkey, it is better
//                       for perf to open the subkey via RegOpenKeyEx() prior
//                       to calling this method, and using this opened key as
//                       hkey with pszSubKey set to NULL.
//
//  pszValue    - pointer to a null-terminated string specifying the name of
//                the value to query for data
//
//                Note1: pszValue can be NULL or "".  In either of these two
//                       cases, the data is retrieved from the unnamed or
//                       default value.
//
//  srrfFlags   - bitwise or of SRRF_ flags, which cannot be 0:  at least one
//                type restriction must be specified (SRRF_RT_...), or if any
//                type is desired then SRRF_RT_ANY can be specified
//
//                Note1: SRRF_RT_ANY will allow any data type to be returned.
//                Note2: The following two type restrictions have special
//                       handling semantics:
//
//                         SRRF_RT_DWORD == SRRF_RT_REG_BINARY | SRRF_RT_REG_DWORD
//                         SRRF_RT_QWORD == SRRF_RT_REG_BINARY | SRRF_RT_REG_QWORD
//
//                       If either of these are specified, with no other type
//                       restrictions, then in the prior case the restriction
//                       will limit "valid" returned data to either REG_DWORD
//                       or 32-bit REG_BINARY data, and in the latter case
//                       the restriction will limit "valid" returned data to
//                       either REG_QWORD or 64-bit REG_BINARY.
//
//  pdwType     - pointer to a dword which receives a code indicating the
//                type of data stored in the specified value
//
//                Note1: pdwType can be NULL if no type information is wanted
//                Note2: If pdwType is not NULL, and the SRRF_NOEXPAND flag
//                       has not been set, data types of REG_EXPAND_SZ will
//                       be returned as REG_SZ since they are automatically
//                       expanded in this method.
//
//  pvData      - pointer to a buffer that receives the value's data
//
//                Note1: pvData can be NULL if the data is not required.
//                       pvData is usually NULL if doing either a simple
//                       existence test, or if interested in the size only.
//                Note2: *** PERF ***
//                       Reference 'perf' note for pcbData.
//
//  pcbData     - when pvData is NULL:
//                  optional pointer to a dword that receives a size in bytes
//                  which would be sufficient to hold the registry data (note
//                  this size is not guaranteed to be exact, merely sufficient)
//                when pvData is not NULL:
//                  required pointer to a dword that specifies the size in
//                  bytes of the buffer pointed to by the pvData parameter
//                  and receives a size in bytes of:
//                  a) the number of bytes read into pvData on ERROR_SUCCESS
//                     (note this size is guaranteed to be exact)
//                  b) the number of bytes which would be sufficient to hold
//                     the registry data on ERROR_MORE_DATA -- pvData was of
//                     insufficient size (note this size is not guaranteed to
//                     be exact, merely sufficient)
//
//                Note1: pcbData can be NULL only if pvData is NULL.
//                Note2: *** PERF ***
//                       The potential for an 'extra' call to the registry to
//                       read (or re-read) in the data exists when the data
//                       type is REG_EXPAND_SZ and the SRRF_NOEXPAND flag has
//                       not been set.  The following conditions will result
//                       in this 'extra' read operation:
//                       i)  when pvData is NULL and pcbData is not NULL
//                           we must read in the data from the registry
//                           anyway in order to obtain the string and perform
//                           an expand on it to obtain and return the total
//                           required size in pcbData
//                       ii) when pvData is not NULL but is of insufficient
//                           size we must re-read in the data from the
//                           registry in order to obtain the entire string
//                           and perform an expand on it to obtain and return
//                           the total required size in pcbData
//
// Remarks:
//
//  The key identified by hkey must have been opened with KEY_QUERY_VALUE
//  access.  If pszSubKey is not NULL or "", it must be able to be opened
//  with KEY_QUERY_VALUE access in the current calling context.
//
//  If the data type is REG_SZ, REG_EXPAND_SZ or REG_MULTI_SZ then any
//  returned data is guaranteed to take into account proper null termination.
//  For example:  if pcbData is not NULL, its returned size will include the
//  bytes for a null terminator  if pvData is not NULL, its returned data
//  will be properly null terminated.
//
//  If the data type is REG_EXPAND_SZ, then unless the SRRF_NOEXPAND flag
//  is set the data will be automatically expanded prior to being returned.
//  For example:  if pdwType is not NULL, its returned type will be changed
//  to REG_SZ,  if pcbData is not NULL, its returned size will include the
//  bytes for a properly expanded string.  if pvData is not NULL, its
//  returned data will be the expanded version of the string.
//
//  Reference MSDN documentation for RegQueryValueEx() for more information
//  of the behaviour when pdwType, pvData, and/or pcbData are equal to NULL.
//
// Return Values:
//
//  If the function succeeds, the return value is ERROR_SUCCESS and all out
//  parameters requested (pdwType, pvData, pcbData) are valid.
//
//  If the function fails due to insufficient space in a provided non-NULL
//  pvData, the return value is ERROR_MORE_DATA and only pdwType and pcbData
//  can contain valid data.  The content of pvData in this case is undefined.
//
// Examples:
//
//  1) read REG_SZ (or REG_EXPAND_SZ as REG_SZ) "string" data from the (default) value of an open hkey
//
//      TCHAR szData[128]
//      DWORD cbData = sizeof(pszData)
//      if (ERROR_SUCCESS == SHRegGetValue(hkey, NULL, NULL, SRRF_RT_REG_SZ, NULL, szData, &cbData))
//      {
//          // use sz (successful read)
//      }
//
//  2) read REG_SZ (or REG_EXPAND_SZ as REG_SZ) "string" data of unknown size from the "MyValue" value of an open hkey
//
//      DWORD cbData
//      if (ERROR_SUCCESS == SHRegGetValue(hkey, NULL, TEXT("MyValue"), SRRF_RT_REG_SZ, NULL, NULL, &cbData))
//      {
//          TCHAR *pszData = new TCHAR[cbData/sizeof(TCHAR)]
//          if (pszData)
//          {
//              if (ERROR_SUCCESS == SHRegGetValue(hkey, NULL, TEXT("MyValue"), SRRF_RT_REG_SZ, NULL, pszData, &cbData))
//              {
//                  // use pszData (successful read)
//              }
//              delete[] pszData
//          }
//      }
//
//  3) read "dword" data from the "MyValue" value of the "MySubKey" subkey of an open hkey
//
//      DWORD dwData
//      DWORD cbData = sizeof(dwData)
//      if (ERROR_SUCCESS == SHRegGetValue(hkey, TEXT("MySubKey"), TEXT("MyValue"), SRRF_RT_REG_DWORD, NULL, &dwData, &cbData))
//      {
//          // use dwData (successful read)
//      }
//
//  4) read "dword" data from the "MyValue" value of the "MySubKey" subkey of an open hkey (32-bit binary data also ok)
//
//      DWORD dwData
//      DWORD cbData = sizeof(dwData)
//      if (ERROR_SUCCESS == SHRegGetValue(hkey, TEXT("MySubKey"), TEXT("MyValue"), SRRF_RT_DWORD, NULL, &dwData, &cbData))
//      {
//          // use dwData (successful read)
//      }
//
//  5) determine existence of "MyValue" value of an open hkey
//
//      BOOL bExists = ERROR_SUCCESS == SHRegGetValue(hkey, NULL, TEXT("MyValue"), SRRF_RT_ANY, NULL, NULL, NULL)

LWSTDAPI_(LSTATUS) SHRegGetValueA(__in HKEY hkey, __in_opt LPCSTR pszSubKey, __in_opt LPCSTR pszValue,
    __in SRRF srrfFlags, __out_opt DWORD *pdwType, __out_bcount_part_opt(*pcbData,*pcbData) __typefix(LPBYTE) void *pvData,
    __inout_opt DWORD *pcbData);
LWSTDAPI_(LSTATUS) SHRegGetValueW(__in HKEY hkey, __in_opt LPCWSTR pszSubKey, __in_opt LPCWSTR pszValue,
    __in SRRF srrfFlags, __out_opt DWORD *pdwType, __out_bcount_part_opt(*pcbData,*pcbData) __typefix(LPBYTE) void *pvData,
    __inout_opt DWORD *pcbData);
#ifdef UNICODE
#define SHRegGetValue  SHRegGetValueW
#else
#define SHRegGetValue  SHRegGetValueA
#endif // !UNICODE

LWSTDAPI_(LSTATUS) SHRegSetValue(__in HKEY    hkey, __in_opt LPCWSTR pszSubKey, __in_opt LPCWSTR pszValue, __in SRRF srrfFlags,
    __in DWORD dwType, __in_bcount_opt(cbData) LPCVOID pvData, __in_opt DWORD cbData);

LWSTDAPI_(LSTATUS) SHRegGetValueFromHKCUHKLM(__in PCWSTR pwszKey, __in_opt PCWSTR pwszValue, __in SRRF srrfFlags,
                                        __out_opt DWORD* pdwType, __out_bcount_part_opt(*pcbData,*pcbData) __typefix(LPBYTE) void* pvData,
                                        __inout_opt DWORD * pcbData);
STDAPI_(BOOL) SHRegGetBoolValueFromHKCUHKLM(__in PCWSTR pszKey, __in_opt PCWSTR pszValue, __in BOOL fDefault);
#endif  // (_WIN32_IE >= 0x0602)

// These functions behave just like RegQueryValueEx(), except if the data
// type is REG_SZ, REG_EXPAND_SZ or REG_MULTI_SZ then the string is
// guaranteed to be properly null terminated.
//
// Additionally, if the data type is REG_EXPAND_SZ these functions will
// go ahead and expand out the string, and "massage" the returned *pdwType
// to be REG_SZ.
LWSTDAPI_(LSTATUS) SHQueryValueExA(
    __in                       HKEY      hkey,
    __in_opt                   LPCSTR  pszValue,
    __reserved                 DWORD    *pdwReserved,
    __out_opt                  DWORD    *pdwType,
    __out_bcount_part_opt(*pcbData,*pcbData) void  *pvData,
    __inout_opt                DWORD    *pcbData);
// These functions behave just like RegQueryValueEx(), except if the data
// type is REG_SZ, REG_EXPAND_SZ or REG_MULTI_SZ then the string is
// guaranteed to be properly null terminated.
//
// Additionally, if the data type is REG_EXPAND_SZ these functions will
// go ahead and expand out the string, and "massage" the returned *pdwType
// to be REG_SZ.
LWSTDAPI_(LSTATUS) SHQueryValueExW(
    __in                       HKEY      hkey,
    __in_opt                   LPCWSTR  pszValue,
    __reserved                 DWORD    *pdwReserved,
    __out_opt                  DWORD    *pdwType,
    __out_bcount_part_opt(*pcbData,*pcbData) void  *pvData,
    __inout_opt                DWORD    *pcbData);
#ifdef UNICODE
#define SHQueryValueEx  SHQueryValueExW
#else
#define SHQueryValueEx  SHQueryValueExA
#endif // !UNICODE

// Enumeration functions support.

LWSTDAPI_(LSTATUS)     SHEnumKeyExA(__in HKEY hkey, DWORD dwIndex, __out_ecount(*pcchName) LPSTR pszName, __inout LPDWORD pcchName);
LWSTDAPI_(LSTATUS)     SHEnumKeyExW(__in HKEY hkey, DWORD dwIndex, __out_ecount(*pcchName) LPWSTR pszName, __inout LPDWORD pcchName);
LWSTDAPI_(LSTATUS)     SHEnumValueA(__in HKEY hkey, __in DWORD dwIndex, __out_ecount_opt(*pcchValueName) PSTR pszValueName,
    __inout_opt LPDWORD pcchValueName, __out_opt LPDWORD pdwType, __out_bcount_part_opt(*pcbData,*pcbData) __typefix(LPBYTE) void *pvData,
    __inout_opt LPDWORD pcbData);
LWSTDAPI_(LSTATUS)     SHEnumValueW(__in HKEY hkey, __in DWORD dwIndex, __out_ecount_opt(*pcchValueName) PWSTR pszValueName,
    __inout_opt LPDWORD pcchValueName, __out_opt LPDWORD pdwType, __out_bcount_part_opt(*pcbData,*pcbData) __typefix(LPBYTE) void *pvData,
    __inout_opt LPDWORD pcbData);
LWSTDAPI_(LSTATUS)     SHQueryInfoKeyA(__in HKEY hkey, __out_opt LPDWORD pcSubKeys, __out_opt LPDWORD pcchMaxSubKeyLen, __out_opt LPDWORD pcValues, __out_opt LPDWORD pcchMaxValueNameLen);
LWSTDAPI_(LSTATUS)     SHQueryInfoKeyW(__in HKEY hkey, __out_opt LPDWORD pcSubKeys, __out_opt LPDWORD pcchMaxSubKeyLen, __out_opt LPDWORD pcValues, __out_opt LPDWORD pcchMaxValueNameLen);

// recursive key copy
LWSTDAPI_(LSTATUS)     SHCopyKeyA(__in HKEY hkeySrc, __in_opt LPCSTR   szSrcSubKey, __in HKEY hkeyDest, __reserved DWORD fReserved);
LWSTDAPI_(LSTATUS)     SHCopyKeyW(__in HKEY hkeySrc, __in_opt LPCWSTR wszSrcSubKey, __in HKEY hkeyDest, __reserved DWORD fReserved);

// Getting and setting file system paths with environment variables

LWSTDAPI_(LSTATUS)    SHRegGetPathA(__in HKEY hKey, __in_opt LPCSTR pcszSubKey, __in_opt LPCSTR pcszValue, __out_ecount(MAX_PATH) LPSTR pszPath, __in DWORD dwFlags);
LWSTDAPI_(LSTATUS)    SHRegGetPathW(__in HKEY hKey, __in_opt LPCWSTR pcszSubKey, __in_opt LPCWSTR pcszValue, __out_ecount(MAX_PATH) LPWSTR pszPath, __in DWORD dwFlags);
LWSTDAPI_(LSTATUS)    SHRegSetPathA(__in HKEY hKey, __in_opt LPCSTR pcszSubKey, __in_opt LPCSTR pcszValue, __in LPCSTR pcszPath, __in DWORD dwFlags);
LWSTDAPI_(LSTATUS)    SHRegSetPathW(__in HKEY hKey, __in_opt LPCWSTR pcszSubKey, __in_opt LPCWSTR pcszValue, __in LPCWSTR pcszPath, __in DWORD dwFlags);

#ifdef UNICODE
#define SHEnumKeyEx           SHEnumKeyExW
#define SHEnumValue           SHEnumValueW
#define SHQueryInfoKey        SHQueryInfoKeyW
#define SHCopyKey             SHCopyKeyW
#define SHRegGetPath          SHRegGetPathW
#define SHRegSetPath          SHRegSetPathW
#else
#define SHEnumKeyEx           SHEnumKeyExA
#define SHEnumValue           SHEnumValueA
#define SHQueryInfoKey        SHQueryInfoKeyA
#define SHCopyKey             SHCopyKeyA
#define SHRegGetPath          SHRegGetPathA
#define SHRegSetPath          SHRegSetPathA
#endif


//////////////////////////////////////////////
// User Specific Registry Access Functions
//////////////////////////////////////////////

//
// Type definitions.
//

typedef enum
{
    SHREGDEL_DEFAULT = 0x00000000,       // Delete's HKCU, or HKLM if HKCU is not found.
    SHREGDEL_HKCU    = 0x00000001,       // Delete HKCU only
    SHREGDEL_HKLM    = 0x00000010,       // Delete HKLM only.
    SHREGDEL_BOTH    = 0x00000011,       // Delete both HKCU and HKLM.
} SHREGDEL_FLAGS;

typedef enum
{
    SHREGENUM_DEFAULT = 0x00000000,       // Enumerates HKCU or HKLM if not found.
    SHREGENUM_HKCU    = 0x00000001,       // Enumerates HKCU only
    SHREGENUM_HKLM    = 0x00000010,       // Enumerates HKLM only.
    SHREGENUM_BOTH    = 0x00000011,       // Enumerates both HKCU and HKLM without duplicates.
                                          // This option is NYI.
} SHREGENUM_FLAGS;

#define     SHREGSET_HKCU           0x00000001       // Write to HKCU if empty.
#define     SHREGSET_FORCE_HKCU     0x00000002       // Write to HKCU.
#define     SHREGSET_HKLM           0x00000004       // Write to HKLM if empty.
#define     SHREGSET_FORCE_HKLM     0x00000008       // Write to HKLM.
#define     SHREGSET_DEFAULT        (SHREGSET_FORCE_HKCU | SHREGSET_HKLM)          // Default is SHREGSET_FORCE_HKCU | SHREGSET_HKLM.

typedef HANDLE HUSKEY;  // HUSKEY is a Handle to a User Specific KEY.
typedef HUSKEY *PHUSKEY;

LWSTDAPI_(LSTATUS)     SHRegCreateUSKeyA(__in LPCSTR pszPath, __in REGSAM samDesired, __in_opt HUSKEY hRelativeUSKey, __out PHUSKEY phNewUSKey, __in DWORD dwFlags);
LWSTDAPI_(LSTATUS)     SHRegCreateUSKeyW(__in LPCWSTR pwzPath, __in REGSAM samDesired, __in_opt HUSKEY hRelativeUSKey, __out PHUSKEY phNewUSKey, __in DWORD dwFlags);
LWSTDAPI_(LSTATUS)     SHRegOpenUSKeyA(__in LPCSTR pszPath, __in REGSAM samDesired, __in_opt HUSKEY hRelativeUSKey, __out PHUSKEY phNewUSKey, __in BOOL fIgnoreHKCU);
LWSTDAPI_(LSTATUS)     SHRegOpenUSKeyW(__in LPCWSTR pwzPath, __in REGSAM samDesired, __in_opt HUSKEY hRelativeUSKey, __out PHUSKEY phNewUSKey, __in BOOL fIgnoreHKCU);
LWSTDAPI_(LSTATUS)     SHRegQueryUSValueA(
    __in                                      HUSKEY  hUSKey,
    __in_opt                                  LPCSTR  pszValue,
    __inout_opt                               DWORD * pdwType,
    __out_bcount_part_opt(*pcbData, *pcbData) void *  pvData,
    __inout_opt                               DWORD * pcbData,
    __in                                      BOOL    fIgnoreHKCU,
    __in_bcount_opt(dwDefaultDataSize)        void *  pvDefaultData,
    __in_opt                                  DWORD   dwDefaultDataSize);
LWSTDAPI_(LSTATUS)     SHRegQueryUSValueW(
    __in                                      HUSKEY  hUSKey,
    __in_opt                                  LPCWSTR  pszValue,
    __inout_opt                               DWORD * pdwType,
    __out_bcount_part_opt(*pcbData, *pcbData) void *  pvData,
    __inout_opt                               DWORD * pcbData,
    __in                                      BOOL    fIgnoreHKCU,
    __in_bcount_opt(dwDefaultDataSize)        void *  pvDefaultData,
    __in_opt                                  DWORD   dwDefaultDataSize);
LWSTDAPI_(LSTATUS)     SHRegWriteUSValueA(__in HUSKEY hUSKey, __in LPCSTR pszValue, __in DWORD dwType, __in_bcount(cbData) const void *pvData, __in DWORD cbData, __in DWORD dwFlags);
LWSTDAPI_(LSTATUS)     SHRegWriteUSValueW(__in HUSKEY hUSKey, __in LPCWSTR pwzValue, __in DWORD dwType, __in_bcount(cbData) const void *pvData, __in DWORD cbData, __in DWORD dwFlags);
LWSTDAPI_(LSTATUS)     SHRegDeleteUSValueA(__in HUSKEY hUSKey, __in LPCSTR pszValue, __in SHREGDEL_FLAGS delRegFlags);
LWSTDAPI_(LSTATUS)     SHRegDeleteUSValueW(__in HUSKEY hUSKey, __in LPCWSTR pwzValue, __in SHREGDEL_FLAGS delRegFlags);
LWSTDAPI_(LSTATUS)     SHRegDeleteEmptyUSKeyW(__in HUSKEY hUSKey, __in LPCWSTR pwzSubKey, __in SHREGDEL_FLAGS delRegFlags);
LWSTDAPI_(LSTATUS)     SHRegDeleteEmptyUSKeyA(__in HUSKEY hUSKey, __in LPCSTR pszSubKey, __in SHREGDEL_FLAGS delRegFlags);
LWSTDAPI_(LSTATUS)     SHRegEnumUSKeyA(__in HUSKEY hUSKey, __in DWORD dwIndex, __out_ecount_part(*pcchName,*pcchName) LPSTR pszName, __inout LPDWORD pcchName, __in SHREGENUM_FLAGS enumRegFlags);
LWSTDAPI_(LSTATUS)     SHRegEnumUSKeyW(__in HUSKEY hUSKey, __in DWORD dwIndex, __out_ecount_part(*pcchName,*pcchName) LPWSTR pwzName, __inout LPDWORD pcchName, __in SHREGENUM_FLAGS enumRegFlags);
LWSTDAPI_(LSTATUS)     SHRegEnumUSValueA(__in HUSKEY hUSkey, __in DWORD dwIndex,
    __out_ecount_part(*pcchValueName,*pcchValueName) LPSTR pszValueName, __inout LPDWORD pcchValueName, __out_opt LPDWORD pdwType,
    __out_bcount_opt(*pcbData) void *pvData, __inout_opt LPDWORD pcbData, __in SHREGENUM_FLAGS enumRegFlags);
LWSTDAPI_(LSTATUS)     SHRegEnumUSValueW(__in HUSKEY hUSkey, __in DWORD dwIndex,
    __out_ecount_part(*pcchValueName,*pcchValueName) LPWSTR pszValueName, __inout LPDWORD pcchValueName, __out_opt LPDWORD pdwType,
    __out_bcount_opt(*pcbData) void *pvData, __inout_opt LPDWORD pcbData, __in SHREGENUM_FLAGS enumRegFlags);
LWSTDAPI_(LSTATUS)     SHRegQueryInfoUSKeyA(__in HUSKEY hUSKey, __out_opt LPDWORD pcSubKeys, __out_opt LPDWORD pcchMaxSubKeyLen, __out_opt LPDWORD pcValues, __out_opt LPDWORD pcchMaxValueNameLen, __in SHREGENUM_FLAGS enumRegFlags);
LWSTDAPI_(LSTATUS)     SHRegQueryInfoUSKeyW(__in HUSKEY hUSKey, __out_opt LPDWORD pcSubKeys, __out_opt LPDWORD pcchMaxSubKeyLen, __out_opt LPDWORD pcValues, __out_opt LPDWORD pcchMaxValueNameLen, __in SHREGENUM_FLAGS enumRegFlags);
LWSTDAPI_(LSTATUS)     SHRegCloseUSKey(__in HUSKEY hUSKey);


// These calls are equal to an SHRegOpenUSKey, SHRegQueryUSValue, and then a SHRegCloseUSKey.
STDAPI_(LSTATUS) SHRegGetUSValueA(
    __in                                      LPCSTR  pszSubKey,
    __in_opt                                  LPCSTR  pszValue,
    __inout_opt                               DWORD  *pdwType,
    __out_bcount_part_opt(*pcbData, *pcbData) void   *pvData,
    __inout_opt                               DWORD  *pcbData,
    __in                                      BOOL    fIgnoreHKCU,
    __in_bcount_opt(dwDefaultDataSize)        void   *pvDefaultData,
    __in_opt                                  DWORD   dwDefaultDataSize);
STDAPI_(LSTATUS) SHRegGetUSValueW(
    __in                                      LPCWSTR  pszSubKey,
    __in_opt                                  LPCWSTR  pszValue,
    __inout_opt                               DWORD  *pdwType,
    __out_bcount_part_opt(*pcbData, *pcbData) void   *pvData,
    __inout_opt                               DWORD  *pcbData,
    __in                                      BOOL    fIgnoreHKCU,
    __in_bcount_opt(dwDefaultDataSize)        void   *pvDefaultData,
    __in_opt                                  DWORD   dwDefaultDataSize);
LWSTDAPI_(LSTATUS)     SHRegSetUSValueA(__in LPCSTR pszSubKey, __in LPCSTR pszValue, __in DWORD dwType, __in_bcount_opt(cbData) const void *pvData, __in_opt DWORD cbData, __in_opt DWORD dwFlags);
LWSTDAPI_(LSTATUS)     SHRegSetUSValueW(__in LPCWSTR pwzSubKey, __in LPCWSTR pwzValue, __in DWORD dwType, __in_bcount_opt(cbData) const void *pvData, __in_opt DWORD cbData, __in_opt DWORD dwFlags);
LWSTDAPI_(int)         SHRegGetIntW(__in HKEY hk, __in_opt PCWSTR pwzKey, __in int iDefault);

#ifdef UNICODE
#define SHRegCreateUSKey        SHRegCreateUSKeyW
#define SHRegOpenUSKey          SHRegOpenUSKeyW
#define SHRegQueryUSValue       SHRegQueryUSValueW
#define SHRegWriteUSValue       SHRegWriteUSValueW
#define SHRegDeleteUSValue      SHRegDeleteUSValueW
#define SHRegDeleteEmptyUSKey   SHRegDeleteEmptyUSKeyW
#define SHRegEnumUSKey          SHRegEnumUSKeyW
#define SHRegEnumUSValue        SHRegEnumUSValueW
#define SHRegQueryInfoUSKey     SHRegQueryInfoUSKeyW
#define SHRegGetUSValue         SHRegGetUSValueW
#define SHRegSetUSValue         SHRegSetUSValueW
#define SHRegGetInt             SHRegGetIntW
#else
#define SHRegCreateUSKey        SHRegCreateUSKeyA
#define SHRegOpenUSKey          SHRegOpenUSKeyA
#define SHRegQueryUSValue       SHRegQueryUSValueA
#define SHRegWriteUSValue       SHRegWriteUSValueA
#define SHRegDeleteUSValue      SHRegDeleteUSValueA
#define SHRegDeleteEmptyUSKey   SHRegDeleteEmptyUSKeyA
#define SHRegEnumUSKey          SHRegEnumUSKeyA
#define SHRegEnumUSValue        SHRegEnumUSValueA
#define SHRegQueryInfoUSKey     SHRegQueryInfoUSKeyA
#define SHRegGetUSValue         SHRegGetUSValueA
#define SHRegSetUSValue         SHRegSetUSValueA
#endif

LWSTDAPI_(BOOL) SHRegGetBoolUSValueA(__in LPCSTR pszSubKey, __in LPCSTR pszValue, __in BOOL fIgnoreHKCU, __in BOOL fDefault);
LWSTDAPI_(BOOL) SHRegGetBoolUSValueW(__in LPCWSTR pszSubKey, __in LPCWSTR pszValue, __in BOOL fIgnoreHKCU, __in BOOL fDefault);
#ifdef UNICODE
#define SHRegGetBoolUSValue  SHRegGetBoolUSValueW
#else
#define SHRegGetBoolUSValue  SHRegGetBoolUSValueA
#endif // !UNICODE

//
//  Association APIs
//
//  these APIs are to assist in accessing the data in HKCR
//  getting the Command strings and exe paths
//  for different verbs and extensions are simplified this way
//

enum {
    ASSOCF_INIT_NOREMAPCLSID           = 0x00000001,  //  do not remap clsids to progids
    ASSOCF_INIT_BYEXENAME              = 0x00000002,  //  executable is being passed in
    ASSOCF_OPEN_BYEXENAME              = 0x00000002,  //  executable is being passed in
    ASSOCF_INIT_DEFAULTTOSTAR          = 0x00000004,  //  treat "*" as the BaseClass
    ASSOCF_INIT_DEFAULTTOFOLDER        = 0x00000008,  //  treat "Folder" as the BaseClass
    ASSOCF_NOUSERSETTINGS              = 0x00000010,  //  dont use HKCU
    ASSOCF_NOTRUNCATE                  = 0x00000020,  //  dont truncate the return string
    ASSOCF_VERIFY                      = 0x00000040,  //  verify data is accurate (DISK HITS)
    ASSOCF_REMAPRUNDLL                 = 0x00000080,  //  actually gets info about rundlls target if applicable
    ASSOCF_NOFIXUPS                    = 0x00000100,  //  attempt to fix errors if found
    ASSOCF_IGNOREBASECLASS             = 0x00000200,  //  dont recurse into the baseclass
    ASSOCF_INIT_IGNOREUNKNOWN          = 0x00000400,  //  dont use the "Unknown" progid, instead fail
};

typedef DWORD ASSOCF;


typedef enum {
    ASSOCSTR_COMMAND      = 1,  //  shell\verb\command string
    ASSOCSTR_EXECUTABLE,        //  the executable part of command string
    ASSOCSTR_FRIENDLYDOCNAME,   //  friendly name of the document type
    ASSOCSTR_FRIENDLYAPPNAME,   //  friendly name of executable
    ASSOCSTR_NOOPEN,            //  noopen value
    ASSOCSTR_SHELLNEWVALUE,     //  query values under the shellnew key
    ASSOCSTR_DDECOMMAND,        //  template for DDE commands
    ASSOCSTR_DDEIFEXEC,         //  DDECOMMAND to use if just create a process
    ASSOCSTR_DDEAPPLICATION,    //  Application name in DDE broadcast
    ASSOCSTR_DDETOPIC,          //  Topic Name in DDE broadcast
    ASSOCSTR_INFOTIP,           //  info tip for an item, or list of properties to create info tip from
#if (_WIN32_IE >= _WIN32_IE_IE60)
    ASSOCSTR_QUICKTIP,          //  same as ASSOCSTR_INFOTIP, except, this list contains only quickly retrievable properties
    ASSOCSTR_TILEINFO,          //  similar to ASSOCSTR_INFOTIP - lists important properties for tileview
    ASSOCSTR_CONTENTTYPE,       //  MIME Content type
    ASSOCSTR_DEFAULTICON,       //  Default icon source
    ASSOCSTR_SHELLEXTENSION,    //  Guid string pointing to the Shellex\Shellextensionhandler value.
#endif // _WIN32_IE_IE60
    ASSOCSTR_MAX                //  last item in enum...
} ASSOCSTR;

typedef enum {
    ASSOCKEY_SHELLEXECCLASS = 1,  //  the key that should be passed to ShellExec(hkeyClass)
    ASSOCKEY_APP,                 //  the "Application" key for the association
    ASSOCKEY_CLASS,               //  the progid or class key
    ASSOCKEY_BASECLASS,           //  the BaseClass key
    ASSOCKEY_MAX                  //  last item in enum...
} ASSOCKEY;

typedef enum {
    ASSOCDATA_MSIDESCRIPTOR = 1,  //  Component Descriptor to pass to MSI APIs
    ASSOCDATA_NOACTIVATEHANDLER,  //  restrict attempts to activate window
    ASSOCDATA_QUERYCLASSSTORE,    //  should check with the NT Class Store
    ASSOCDATA_HASPERUSERASSOC,    //  defaults to user specified association
#if (_WIN32_IE >= _WIN32_IE_IE60)
    ASSOCDATA_EDITFLAGS,          //  Edit flags.
    ASSOCDATA_VALUE,              //  use pszExtra as the Value name
#endif // _WIN32_IE_IE60
    ASSOCDATA_MAX
} ASSOCDATA;

typedef enum {
    ASSOCENUM_NONE
} ASSOCENUM;

#undef INTERFACE
#define INTERFACE IQueryAssociations

DECLARE_INTERFACE_IID_( IQueryAssociations, IUnknown, "c46ca590-3c3f-11d2-bee6-0000f805ca57" )
{
    // IUnknown methods
    STDMETHOD (QueryInterface)(THIS_ REFIID riid, void **ppv) PURE;
    STDMETHOD_(ULONG, AddRef) ( THIS ) PURE;
    STDMETHOD_(ULONG, Release) ( THIS ) PURE;

    // IQueryAssociations methods
    STDMETHOD (Init)(THIS_ ASSOCF flags, LPCWSTR pszAssoc, HKEY hkProgid, HWND hwnd) PURE;
    STDMETHOD (GetString)(THIS_ ASSOCF flags, ASSOCSTR str, LPCWSTR pszExtra, __out_ecount_opt(*pcchOut) LPWSTR pszOut, __inout DWORD *pcchOut) PURE;
    STDMETHOD (GetKey)(THIS_ ASSOCF flags, ASSOCKEY key, LPCWSTR pszExtra, __out HKEY *phkeyOut) PURE;
    STDMETHOD (GetData)(THIS_ ASSOCF flags, ASSOCDATA data, LPCWSTR pszExtra, __out_bcount_opt(*pcbOut) void * pvOut, __inout_opt DWORD *pcbOut) PURE;
    STDMETHOD (GetEnum)(THIS_ ASSOCF flags, ASSOCENUM assocenum, LPCWSTR pszExtra, REFIID riid, __out void **ppvOut) PURE;
};


// use CLSID_QueryAssociations for clsid, object implements IQueryAssociations
// AssocCreateForClasses() is the more functional version of this API
LWSTDAPI AssocCreate(__in CLSID clsid, __in REFIID riid, __out void **ppv);

//  wrappers for the interface
LWSTDAPI AssocQueryStringA(__in ASSOCF flags, __in ASSOCSTR str, __in LPCSTR pszAssoc, __in_opt LPCSTR pszExtra, __out_ecount(*pcchOut) LPSTR pszOut, __inout DWORD *pcchOut);
//  wrappers for the interface
LWSTDAPI AssocQueryStringW(__in ASSOCF flags, __in ASSOCSTR str, __in LPCWSTR pszAssoc, __in_opt LPCWSTR pszExtra, __out_ecount(*pcchOut) LPWSTR pszOut, __inout DWORD *pcchOut);
#ifdef UNICODE
#define AssocQueryString  AssocQueryStringW
#else
#define AssocQueryString  AssocQueryStringA
#endif // !UNICODE
LWSTDAPI AssocQueryStringByKeyA(__in ASSOCF flags, __in ASSOCSTR str, __in HKEY hkAssoc, __in_opt LPCSTR pszExtra, __out_ecount(*pcchOut) LPSTR pszOut, __inout DWORD *pcchOut);
LWSTDAPI AssocQueryStringByKeyW(__in ASSOCF flags, __in ASSOCSTR str, __in HKEY hkAssoc, __in_opt LPCWSTR pszExtra, __out_ecount(*pcchOut) LPWSTR pszOut, __inout DWORD *pcchOut);
#ifdef UNICODE
#define AssocQueryStringByKey  AssocQueryStringByKeyW
#else
#define AssocQueryStringByKey  AssocQueryStringByKeyA
#endif // !UNICODE
LWSTDAPI AssocQueryKeyA(__in ASSOCF flags, __in ASSOCKEY key, __in LPCSTR pszAssoc, __in_opt LPCSTR pszExtra, __out HKEY *phkeyOut);
LWSTDAPI AssocQueryKeyW(__in ASSOCF flags, __in ASSOCKEY key, __in LPCWSTR pszAssoc, __in_opt LPCWSTR pszExtra, __out HKEY *phkeyOut);
#ifdef UNICODE
#define AssocQueryKey  AssocQueryKeyW
#else
#define AssocQueryKey  AssocQueryKeyA
#endif // !UNICODE

#if (_WIN32_IE >= 0x0601)
//  AssocIsDangerous() checks a file type to determine whether it is "Dangerous"
//      this maps to the IE download dialog's forcing a prompt to open or save.
//      dangerous file types should be handled more carefully than other file types.
//
//  Parameter:  pszAssoc - type to check.  may be an extension or progid.  (".exe" or "exefile" would both be valid)
//
//  Returns: TRUE if the file type is dangerous.
//
//  NOTES:
//
//      this API first checks a hardcoded list of known dangerous types.
//      then it checks the editflags for the file type looking for the FTA_AlwaysUnsafe bit.
//      then it checks Safer policies.
//
LWSTDAPI_(BOOL) AssocIsDangerous(LPCWSTR pszAssoc);

#endif  // _WIN32_IE >= 0x0601

#if (_WIN32_IE >= _WIN32_IE_IE60SP2)
LWSTDAPI AssocGetPerceivedType(__in LPCWSTR pszExt, __out PERCEIVED *ptype, __out PERCEIVEDFLAG *pflag, __out_opt LPWSTR *ppszType);
#endif



#endif //  NO_SHLWAPI_REG



#ifndef NO_SHLWAPI_STREAM
//
//=============== Stream Routines ===================================
//

LWSTDAPI_(struct IStream *) SHOpenRegStreamA(__in HKEY hkey, LPCSTR pszSubkey, LPCSTR pszValue, DWORD grfMode);
LWSTDAPI_(struct IStream *) SHOpenRegStreamW(__in HKEY hkey, LPCWSTR pszSubkey, LPCWSTR pszValue, DWORD grfMode);
#ifdef UNICODE
#define SHOpenRegStream  SHOpenRegStreamW
#else
#define SHOpenRegStream  SHOpenRegStreamA
#endif // !UNICODE
LWSTDAPI_(struct IStream *) SHOpenRegStream2A(__in HKEY hkey, LPCSTR pszSubkey, LPCSTR pszValue, DWORD grfMode);
LWSTDAPI_(struct IStream *) SHOpenRegStream2W(__in HKEY hkey, LPCWSTR pszSubkey, LPCWSTR pszValue, DWORD grfMode);
#ifdef UNICODE
#define SHOpenRegStream2  SHOpenRegStream2W
#else
#define SHOpenRegStream2  SHOpenRegStream2A
#endif // !UNICODE
// New code always wants new implementation...
#undef SHOpenRegStream
#define SHOpenRegStream SHOpenRegStream2

LWSTDAPI SHCreateStreamOnFileA(LPCSTR pszFile, DWORD grfMode, __out struct IStream **ppstm);
LWSTDAPI SHCreateStreamOnFileW(LPCWSTR pszFile, DWORD grfMode, __out struct IStream **ppstm);
#ifdef UNICODE
#define SHCreateStreamOnFile  SHCreateStreamOnFileW
#else
#define SHCreateStreamOnFile  SHCreateStreamOnFileA
#endif // !UNICODE


#if (_WIN32_IE >= 0x0600)

LWSTDAPI SHCreateStreamOnFileEx(LPCWSTR pszFile, DWORD grfMode, DWORD dwAttributes, BOOL fCreate, __in_opt struct IStream * pstmTemplate, __out struct IStream **ppstm);

#endif // (_WIN32_IE >= 0x0600)

#if (_WIN32_IE >= _WIN32_IE_IE501)

LWSTDAPI_(struct IStream *) SHCreateMemStream(__in_bcount_opt(cbInit) const BYTE *pInit, UINT cbInit);

#endif // (_WIN32_IE >= _WIN32_IE_IE501)



#endif // NO_SHLWAPI_STREAM


#ifndef NO_SHLWAPI_MLUI
//
//=============== Multi Language UI Routines ===================================
//


#if (_WIN32_IE >= _WIN32_IE_IE501)

LWSTDAPI_(HINSTANCE) MLLoadLibraryA(LPCSTR lpLibFileName, __in HMODULE hModule, DWORD dwCrossCodePage);
LWSTDAPI_(HINSTANCE) MLLoadLibraryW(LPCWSTR lpLibFileName, __in HMODULE hModule, DWORD dwCrossCodePage);
#ifdef UNICODE
#define MLLoadLibrary  MLLoadLibraryW
#else
#define MLLoadLibrary  MLLoadLibraryA
#endif // !UNICODE
LWSTDAPI_(BOOL) MLFreeLibrary(__in HMODULE hModule);

#define ML_NO_CROSSCODEPAGE     0
#define ML_CROSSCODEPAGE_NT     1
#define ML_CROSSCODEPAGE        2
#define ML_SHELL_LANGUAGE       4
#define ML_CROSSCODEPAGE_MASK   7

#endif // (_WIN32_IE >= _WIN32_IE_IE501)


#endif // NO_SHLWAPI_MLUI

#ifndef NO_SHLWAPI_HTTP
//
//=============== HTTP helper Routines ===================================
//

#if (_WIN32_IE >= 0x0603)
LWSTDAPI   GetAcceptLanguagesA(__out_ecount(*pcch) LPSTR psz, LPDWORD pcch);
LWSTDAPI   GetAcceptLanguagesW(__out_ecount(*pcch) LPWSTR psz, LPDWORD pcch);
#ifdef UNICODE
#define GetAcceptLanguages  GetAcceptLanguagesW
#else
#define GetAcceptLanguages  GetAcceptLanguagesA
#endif // !UNICODE
#endif // (_WIN32_IE >= 0x0603)

#endif // NO_SHLWAPI_HTTP


#if (_WIN32_IE < _WIN32_IE_IE70) && !defined(NO_SHLWAPI_STOPWATCH)

#define SPMODE_SHELL      0x00000001
#define SPMODE_DEBUGOUT   0x00000002
#define SPMODE_TEST       0x00000004
#define SPMODE_BROWSER    0x00000008
#define SPMODE_FLUSH      0x00000010
#define SPMODE_EVENT      0x00000020
#define SPMODE_MSVM       0x00000040
#define SPMODE_FORMATTEXT 0x00000080
#define SPMODE_PROFILE    0x00000100
#define SPMODE_DEBUGBREAK 0x00000200
#define SPMODE_MSGTRACE   0x00000400
#define SPMODE_PERFTAGS   0x00000800
#define SPMODE_MEMWATCH   0x00001000
#define SPMODE_DBMON      0x00002000
#define SPMODE_MULTISTOP  0x00004000
#ifndef NO_ETW_TRACING
#define SPMODE_EVENTTRACE 0x00008000 // Event Tracing for Windows Enabled
#endif

DWORD WINAPI StopWatchMode(void);
DWORD WINAPI StopWatchFlush(void);

#endif // (_WIN32_IE < _WIN32_IE_IE70) && !defined(NO_SHLWAPI_STOPWATCH)

#ifndef __IConnectionPoint_FWD_DEFINED__
#define __IConnectionPoint_FWD_DEFINED__
typedef struct IConnectionPoint IConnectionPoint;
#endif  /* __IConnectionPoint_FWD_DEFINED__ */


#if (_WIN32_IE >= _WIN32_IE_IE501)

    LWSTDAPI_(void) IUnknown_Set(__deref_inout IUnknown ** ppunk, __in_opt IUnknown * punk);
    LWSTDAPI_(void) IUnknown_AtomicRelease(__inout_opt void ** ppunk);
    LWSTDAPI IUnknown_GetWindow(__in IUnknown* punk, __out HWND* phwnd);
    LWSTDAPI IUnknown_SetSite(__in IUnknown *punk, __in_opt IUnknown *punkSite);
    LWSTDAPI IUnknown_GetSite(__in IUnknown *punk, __in REFIID riid, __deref_out void **ppv);
    LWSTDAPI IUnknown_QueryService(__in_opt IUnknown* punk, __in REFGUID guidService, __in REFIID riid, __deref_out void ** ppvOut);

#endif // (_WIN32_IE >= _WIN32_IE_IE501)


#if (_WIN32_IE >= _WIN32_IE_IE501)

#if !defined(__cplusplus) && defined(COBJMACROS)
#undef IStream_Read
#undef IStream_Write
#endif

LWSTDAPI IStream_Read(__in IStream *pstm, __out_bcount_full(cb) void *pv, __in ULONG cb);
LWSTDAPI IStream_Write(__in IStream *pstm, __in_bcount(cb) const void *pv, __in ULONG cb);
LWSTDAPI IStream_Reset(__in IStream *pstm);
LWSTDAPI IStream_Size(__in IStream *pstm, __out ULARGE_INTEGER *pui);

LWSTDAPI ConnectToConnectionPoint(__in_opt IUnknown* punk, __in REFIID riidEvent, __in BOOL fConnect, __in IUnknown* punkTarget, __out DWORD* pdwCookie, __deref_out_opt IConnectionPoint** ppcpOut);

#endif // (_WIN32_IE >= _WIN32_IE_IE501)

#if (_WIN32_IE >= _WIN32_IE_IE60)

LWSTDAPI IStream_ReadPidl(__in IStream *pstm, __deref_out PIDLIST_RELATIVE *ppidlOut);
LWSTDAPI IStream_WritePidl(__in IStream *pstm, __in PCUIDLIST_RELATIVE pidlWrite);

#endif // (_WIN32_IE >= _WIN32_IE_IE60)

#if (_WIN32_IE >= _WIN32_IE_IE70)

LWSTDAPI IStream_ReadStr(__in IStream *pstm, __deref_out PWSTR *ppsz);
LWSTDAPI IStream_WriteStr(__in IStream *pstm, __in PCWSTR psz);

LWSTDAPI IStream_Copy(__in IStream *pstmFrom, __in IStream *pstmTo, DWORD cb);

#endif // (_WIN32_IE >= _WIN32_IE_IE70)


#if (_WIN32_IE >= 0x0600)
#define SHGVSPB_PERUSER             0x00000001 // must have one of PERUSER or ALLUSERS
#define SHGVSPB_ALLUSERS            0x00000002
#define SHGVSPB_PERFOLDER           0x00000004 // must have one of PERFOLDER ALLFOLDERS or INHERIT
#define SHGVSPB_ALLFOLDERS          0x00000008
#define SHGVSPB_INHERIT             0x00000010
#define SHGVSPB_ROAM                0x00000020 // modifies the above
#define SHGVSPB_NOAUTODEFAULTS      0x80000000 // turns off read delegation to more general property bags

#define SHGVSPB_FOLDER              (SHGVSPB_PERUSER | SHGVSPB_PERFOLDER)
#define SHGVSPB_FOLDERNODEFAULTS    (SHGVSPB_PERUSER | SHGVSPB_PERFOLDER | SHGVSPB_NOAUTODEFAULTS)
#define SHGVSPB_USERDEFAULTS        (SHGVSPB_PERUSER | SHGVSPB_ALLFOLDERS)
#define SHGVSPB_GLOBALDEAFAULTS     (SHGVSPB_ALLUSERS | SHGVSPB_ALLFOLDERS)

LWSTDAPI SHGetViewStatePropertyBag(__in_opt PCIDLIST_ABSOLUTE pidl, __in_opt LPCWSTR pszBagName, __in DWORD dwFlags, __in REFIID riid, __deref_out void** ppv);
#endif  // (_WIN32_IE >= 0x0600)

// SHFormatDateTime flags
//  (FDTF_SHORTDATE and FDTF_LONGDATE are mutually exclusive, as is
//   FDTF_SHORTIME and FDTF_LONGTIME.)
//
#define FDTF_SHORTTIME          0x00000001      // eg, "7:48 PM"
#define FDTF_SHORTDATE          0x00000002      // eg, "3/29/98"
#define FDTF_DEFAULT            (FDTF_SHORTDATE | FDTF_SHORTTIME) // eg, "3/29/98 7:48 PM"
#define FDTF_LONGDATE           0x00000004      // eg, "Monday, March 29, 1998"
#define FDTF_LONGTIME           0x00000008      // eg. "7:48:33 PM"
#define FDTF_RELATIVE           0x00000010      // uses "Yesterday", etc. if possible
#define FDTF_LTRDATE            0x00000100      // Left To Right reading order
#define FDTF_RTLDATE            0x00000200      // Right To Left reading order
#define FDTF_NOAUTOREADINGORDER 0x00000400      // Don't detect reading order automatically. Useful if you will be converting to Ansi and don't want Unicode reading order characters

LWSTDAPI_(int)  SHFormatDateTimeA(const FILETIME UNALIGNED * pft, __inout_opt DWORD * pdwFlags, __out_ecount(cchBuf) LPSTR pszBuf, UINT cchBuf);
LWSTDAPI_(int)  SHFormatDateTimeW(const FILETIME UNALIGNED * pft, __inout_opt DWORD * pdwFlags, __out_ecount(cchBuf) LPWSTR pszBuf, UINT cchBuf);
#ifdef UNICODE
#define SHFormatDateTime  SHFormatDateTimeW
#else
#define SHFormatDateTime  SHFormatDateTimeA
#endif // !UNICODE

#if (_WIN32_IE >= _WIN32_IE_IE501)

LWSTDAPI_(int)  SHAnsiToUnicode(LPCSTR pszSrc, __out_ecount(cwchBuf) LPWSTR pwszDst, int cwchBuf);
LWSTDAPI_(int)  SHAnsiToAnsi(LPCSTR pszSrc, __out_ecount(cchBuf) LPSTR pszDst, int cchBuf);
LWSTDAPI_(int)  SHUnicodeToAnsi(LPCWSTR pwszSrc, __out_ecount(cchBuf) LPSTR pszDst, int cchBuf);
LWSTDAPI_(int)  SHUnicodeToUnicode(LPCWSTR pwzSrc, __out_ecount(cwchBuf) LPWSTR pwzDst, int cwchBuf);

// The return value from all SH<Type>To<Type> is the size of szDest including the terminater.
#ifdef UNICODE
#define SHTCharToUnicode(wzSrc, wzDest, cchSize)                SHUnicodeToUnicode(wzSrc, wzDest, cchSize)
#define SHTCharToAnsi(wzSrc, szDest, cchSize)                   SHUnicodeToAnsi(wzSrc, szDest, cchSize)
#define SHUnicodeToTChar(wzSrc, wzDest, cchSize)                SHUnicodeToUnicode(wzSrc, wzDest, cchSize)
#define SHAnsiToTChar(szSrc, wzDest, cchSize)                   SHAnsiToUnicode(szSrc, wzDest, cchSize)
#else // UNICODE
#define SHTCharToUnicode(szSrc, wzDest, cchSize)                SHAnsiToUnicode(szSrc, wzDest, cchSize)
#define SHTCharToAnsi(szSrc, szDest, cchSize)                   SHAnsiToAnsi(szSrc, szDest, cchSize)
#define SHUnicodeToTChar(wzSrc, szDest, cchSize)                SHUnicodeToAnsi(wzSrc, szDest, cchSize)
#define SHAnsiToTChar(szSrc, szDest, cchSize)                   SHAnsiToAnsi(szSrc, szDest, cchSize)
#endif // UNICODE

#endif // (_WIN32_IE >= _WIN32_IE_IE501)


#if (_WIN32_IE >= _WIN32_IE_IE501)

LWSTDAPI_(int) SHMessageBoxCheckA(HWND hwnd, LPCSTR pszText, LPCSTR pszCaption, UINT uType, int iDefault, LPCSTR pszRegVal);
LWSTDAPI_(int) SHMessageBoxCheckW(HWND hwnd, LPCWSTR pszText, LPCWSTR pszCaption, UINT uType, int iDefault, LPCWSTR pszRegVal);
#ifdef UNICODE
#define SHMessageBoxCheck  SHMessageBoxCheckW
#else
#define SHMessageBoxCheck  SHMessageBoxCheckA
#endif // !UNICODE

#endif // (_WIN32_IE >= _WIN32_IE_IE501)


#if (_WIN32_IE >= _WIN32_IE_IE501)

// Prevents hang do to hung window on broadcast
LWSTDAPI_(LRESULT) SHSendMessageBroadcastA(UINT uMsg, __in WPARAM wParam, __in LPARAM lParam);
// Prevents hang do to hung window on broadcast
LWSTDAPI_(LRESULT) SHSendMessageBroadcastW(UINT uMsg, __in WPARAM wParam, __in LPARAM lParam);
#ifdef UNICODE
#define SHSendMessageBroadcast  SHSendMessageBroadcastW
#else
#define SHSendMessageBroadcast  SHSendMessageBroadcastA
#endif // !UNICODE

LWSTDAPI_(CHAR) SHStripMneumonicA(__inout LPSTR pszMenu);
LWSTDAPI_(WCHAR) SHStripMneumonicW(__inout LPWSTR pszMenu);
#ifdef UNICODE
#define SHStripMneumonic  SHStripMneumonicW
#else
#define SHStripMneumonic  SHStripMneumonicA
#endif // !UNICODE


// Returns TRUE/FALSE depending on question
#define OS_WINDOWS                  0           // Windows 9x vs. NT
#define OS_NT                       1           // Windows 9x vs. NT
#define OS_WIN95ORGREATER           2           // Win95 or greater
#define OS_NT4ORGREATER             3           // NT4 or greater
#define OS_WIN98ORGREATER           5           // Win98 or greater
#define OS_WIN98_GOLD               6           // Win98 Gold (Version 4.10 build 1998)
#define OS_WIN2000ORGREATER         7           // Some derivative of Win2000

// NOTE: these flags check explicitly for (dwMajorVersion == 5)
#define OS_WIN2000PRO               8           // Windows 2000 Professional (Workstation)
#define OS_WIN2000SERVER            9           // Windows 2000 Server
#define OS_WIN2000ADVSERVER         10          // Windows 2000 Advanced Server
#define OS_WIN2000DATACENTER        11          // Windows 2000 Data Center Server
#define OS_WIN2000TERMINAL          12          // Windows 2000 Terminal Server in "Application Server" mode (now simply called "Terminal Server")

#define OS_EMBEDDED                 13          // Embedded Windows Edition
#define OS_TERMINALCLIENT           14          // Windows Terminal Client (eg user is comming in via tsclient)
#define OS_TERMINALREMOTEADMIN      15          // Terminal Server in "Remote Administration" mode
#define OS_WIN95_GOLD               16          // Windows 95 Gold (Version 4.0 Build 1995)
#define OS_MEORGREATER              17          // Windows Millennium (Version 5.0)
#define OS_XPORGREATER              18          // Windows XP or greater
#define OS_HOME                     19          // Home Edition (eg NOT Professional, Server, Advanced Server, or Datacenter)
#define OS_PROFESSIONAL             20          // Professional     (aka Workstation; eg NOT Server, Advanced Server, or Datacenter)
#define OS_DATACENTER               21          // Datacenter       (eg NOT Server, Advanced Server, Professional, or Personal)
#define OS_ADVSERVER                22          // Advanced Server  (eg NOT Datacenter, Server, Professional, or Personal)
#define OS_SERVER                   23          // Server           (eg NOT Datacenter, Advanced Server, Professional, or Personal)
#define OS_TERMINALSERVER           24          // Terminal Server - server running in what used to be called "Application Server" mode (now simply called "Terminal Server")
#define OS_PERSONALTERMINALSERVER   25          // Personal Terminal Server - per/pro machine running in single user TS mode
#define OS_FASTUSERSWITCHING        26          // Fast User Switching
#define OS_WELCOMELOGONUI           27          // New friendly logon UI
#define OS_DOMAINMEMBER             28          // Is this machine a member of a domain (eg NOT a workgroup)
#define OS_ANYSERVER                29          // is this machine any type of server? (eg datacenter or advanced server or server)?
#define OS_WOW6432                  30          // Is this process a 32-bit process running on an 64-bit platform?
#define OS_WEBSERVER                31          // Web Edition Server
#define OS_SMALLBUSINESSSERVER      32          // SBS Server
#define OS_TABLETPC                 33          // Are we running on a TabletPC?
#define OS_SERVERADMINUI            34          // Should defaults lean towards those preferred by server administrators?
#define OS_MEDIACENTER              35          // eHome Freestyle Project
#define OS_APPLIANCE                36          // Windows .NET Appliance Server

LWSTDAPI_(BOOL) IsOS(DWORD dwOS);


#endif // (_WIN32_IE >= _WIN32_IE_IE501)


// Shared memory apis


#if (_WIN32_IE >= 0x0603)
LWSTDAPI_(HANDLE)   SHAllocShared(__in_bcount(dwSize) const void *pvData, __in DWORD dwSize, __in DWORD dwProcessId);
LWSTDAPI_(BOOL)     SHFreeShared(__in HANDLE hData, __in DWORD dwProcessId);
LWSTDAPI_(void *)   SHLockShared(__in HANDLE hData, __in DWORD dwProcessId);
LWSTDAPI_(BOOL)     SHUnlockShared(__in void *pvData);
#endif // _WIN32_IE >= 0x0603


#if (_WIN32_IE >= _WIN32_IE_IE501)

//***   QueryInterface helpers
// NOTES
//  ATL has a fancier version of this.  if we need to extend ours, we
//  should probably just switch to ATL's rather than reinvent.
// EXAMPLE
//  Cfoo::QI(REFIID riid, void **ppv)
//  {
//      // (the IID_xxx comments make grep'ing work!)
//      static const QITAB qit = {
//          QITABENT(Cfoo, Iiface1),    // IID_Iiface1
//          ...
//          QITABENT(Cfoo, IifaceN),    // IID_IifaceN
//          { 0 },                      // n.b. don't forget the 0
//      };
//
//      // n.b. make sure you don't cast 'this'
//      hr = QISearch(this, qit, riid, ppv);
//      if (FAILED(hr))
//          hr = SUPER::QI(riid, ppv);
//      // custom code could be added here for FAILED() case
//      return hr;
//  }
//
//  If you have an interface that is implemented multiple times,
//  the compiler will claim an ambiguous cast, so you need to give
//  some help.  For example, if your class is defined as
//
//  class CClass : public IPersistStream, public IPersistFile
//
//  then you need to say
//
//      QITABENTMULTI(CClass, IPersist, IPersistStream)
//      QITABENT(CClass, IPersistStream)
//      QITABENT(CClass, IPersistFile)
//
//  The MULTI is needed for IPersist because the compiler doesn't
//  know whether you wanted the IPersist from IPersistStream
//  or the IPersist from IPersistFile.  Unless you have played weird
//  compiler tricks, they are the same implementation, so you can
//  just pick either one, doesn't matter.
//
//  Common mistake: You do not need to use MULTI if the base interface
//  can be unambiguously determined.  E.g.,
//
//  class CSimple : public IContextMenu3
//
//      QITABENT(CClass, IContextMenu)      // do not need MULTI
//      QITABENT(CClass, IContextMenu2)     // do not need MULTI
//      QITABENT(CClass, IContextMenu3)
//
//  Do not create an entry for IUnknown; the first entry in the
//  table will be used for IUnknown.
//
//
//  Windows Mobile: Some existing interfaces are defined in C++ 
//  without __declspec(uuid()) so we provide QITABENT2 that
//  handles those cases
//
//  QITABENT2(CClass, IContextMenu)
//
// 

typedef struct
{
    const IID * piid;
    int         dwOffset;
} QITAB, *LPQITAB;
typedef const QITAB *LPCQITAB;

#ifdef __cplusplus

#define QITABENTMULTI(Cthis, Ifoo, Iimpl) \
    { &__uuidof(Ifoo), OFFSETOFCLASS(Iimpl, Cthis) }

#else

#define QITABENTMULTI(Cthis, Ifoo, Iimpl) \
    { (IID*) &IID_##Ifoo, OFFSETOFCLASS(Iimpl, Cthis) }

#endif  // __cplusplus

#define QITABENTMULTI2(Cthis, Ifoo, Iimpl) \
    { (IID*) &Ifoo, OFFSETOFCLASS(Iimpl, Cthis) }

#define QITABENT(Cthis, Ifoo) QITABENTMULTI(Cthis, Ifoo, Ifoo)

#ifdef UNDER_CE
// handle interfaces not declared with __declspec(uuid())
#define QITABENTMULTIX(Cthis, Ifoo, Iimpl) \
    { (IID*) &IID_##Ifoo, OFFSETOFCLASS(Iimpl, Cthis) }

#define QITABENT2(Cthis, Ifoo) QITABENTMULTIX(Cthis, Ifoo, Ifoo)
#endif

STDAPI QISearch(__inout void* that, __in LPCQITAB pqit, __in REFIID riid, __deref_out void **ppv);

#endif // (_WIN32_IE >= _WIN32_IE_IE501)

#ifndef STATIC_CAST
//***   STATIC_CAST -- 'portable' static_cast<>
// NOTES
//  do *not* use SAFE_CAST (see comment in OFFSETOFCLASS)
#define STATIC_CAST(typ)   static_cast<typ>
#ifndef _X86_
    // assume only intel compiler (>=vc5) supports static_cast for now
    // we could key off of _MSC_VER >= 1100 but i'm not sure that will work
    //
    // a straight cast will give the correct result but no error checking,
    // so we'll have to catch errors on intel.
    #undef  STATIC_CAST
    #define STATIC_CAST(typ)   (typ)
#endif
#endif

#ifndef OFFSETOFCLASS
//***   OFFSETOFCLASS -- (stolen from ATL)
// we use STATIC_CAST not SAFE_CAST because the compiler gets confused
// (it doesn't constant-fold the ,-op in SAFE_CAST so we end up generating
// code for the table!)

#define OFFSETOFCLASS(base, derived) \
    ((DWORD)(DWORD_PTR)(STATIC_CAST(base*)((derived*)8))-8)
#endif


// Types for SHIsLowMemoryMachine
#define ILMM_IE4    0       // 1997-era machine
LWSTDAPI_(BOOL) SHIsLowMemoryMachine(DWORD dwType);

// Menu Helpers
LWSTDAPI_(int)  GetMenuPosFromID(HMENU hmenu, UINT id);

LWSTDAPI        SHGetInverseCMAP(__out_bcount(cbMap) BYTE *pbMap, ULONG cbMap);


#if (_WIN32_IE >= 0x0500)

// SHAutoComplete
//      hwndEdit - HWND of editbox, ComboBox or ComboBoxEx.
//      dwFlags - Flags to indicate what to AutoAppend or AutoSuggest for the editbox.
//
// WARNING:
//    Caller needs to have called CoInitialize() or OleInitialize()
//    and cannot call CoUninit/OleUninit until after
//    WM_DESTROY on hwndEdit.
//
//  dwFlags values:
#define SHACF_DEFAULT                   0x00000000  // Currently (SHACF_FILESYSTEM | SHACF_URLALL)
#define SHACF_FILESYSTEM                0x00000001  // This includes the File System as well as the rest of the shell (Desktop\My Computer\Control Panel\)
#define SHACF_URLALL                    (SHACF_URLHISTORY | SHACF_URLMRU)
#define SHACF_URLHISTORY                0x00000002  // URLs in the User's History
#define SHACF_URLMRU                    0x00000004  // URLs in the User's Recently Used list.
#define SHACF_USETAB                    0x00000008  // Use the tab to move thru the autocomplete possibilities instead of to the next dialog/window control.
#define SHACF_FILESYS_ONLY              0x00000010  // This includes the File System
#if (_WIN32_IE >= 0x0600)
#define SHACF_FILESYS_DIRS              0x00000020  // Same as SHACF_FILESYS_ONLY except it only includes directories, UNC servers, and UNC server shares.
#endif // (_WIN32_IE >= 0x0600)
#if (_WIN32_IE >= _WIN32_IE_IE70)
#define SHACF_VIRTUAL_NAMESPACE         0x00000040  // Also include the virtual namespace
#endif // _WIN32_IE_IE70
#define SHACF_AUTOSUGGEST_FORCE_ON      0x10000000  // Ignore the registry default and force the feature on.
#define SHACF_AUTOSUGGEST_FORCE_OFF     0x20000000  // Ignore the registry default and force the feature off.
#define SHACF_AUTOAPPEND_FORCE_ON       0x40000000  // Ignore the registry default and force the feature on. (Also know as AutoComplete)
#define SHACF_AUTOAPPEND_FORCE_OFF      0x80000000  // Ignore the registry default and force the feature off. (Also know as AutoComplete)

LWSTDAPI SHAutoComplete(HWND hwndEdit, DWORD dwFlags);

#if (_WIN32_IE >= _WIN32_IE_IE60SP2)
LWSTDAPI SHCreateThreadRef(__inout LONG *pcRef, __deref_out IUnknown **ppunk);
#endif // _WIN32_IE_IE60SP2
LWSTDAPI SHSetThreadRef(__in IUnknown *punk);
LWSTDAPI SHGetThreadRef(__deref_out IUnknown **ppunk);

LWSTDAPI_(BOOL) SHSkipJunction(__in_opt struct IBindCtx* pbc, const CLSID *pclsid);
#endif // (_WIN32_IE >= 0x0500)

#define CTF_INSIST                      0x00000001      // SHCreateThread() dwFlags - call pfnThreadProc synchronously if CreateThread() fails
#define CTF_THREAD_REF                  0x00000002      // hold a reference to the creating thread
#define CTF_PROCESS_REF                 0x00000004      // hold a reference to the creating process
#define CTF_COINIT_STA                  0x00000008      // init COM as STA for the created thread
#define CTF_COINIT                      CTF_COINIT_STA  // init COM as STA for the created thread
#if (_WIN32_IE >= _WIN32_IE_IE60)
#define CTF_FREELIBANDEXIT              0x00000010      // hold a ref to the DLL and call FreeLibraryAndExitThread() when done
#define CTF_REF_COUNTED                 0x00000020      // thread supports ref counting via SHGetThreadRef() or CTF_THREAD_REF so that child threads can keep this thread alive
#define CTF_WAIT_ALLOWCOM               0x00000040      // while waiting for pfnCallback, allow COM marshaling to the blocked calling thread
#endif // _WIN32_IE_IE60
#if (_WIN32_IE >= _WIN32_IE_IE70)
#define CTF_UNUSED                      0x00000080
#define CTF_INHERITWOW64                0x00000100      // new thread should inherit the wow64 disable state for the file system redirector
#endif // _WIN32_IE_IE70
#if (NTDDI_VERSION >= NTDDI_LONGHORN)
#define CTF_WAIT_NO_REENTRANCY          0x00000200      // don't allow re-entrancy when waiting for the sync proc, this won't work with marshalled objects or SendMessages() from the sync proc
#endif // (NTDDI_VERSION >= NTDDI_LONGHORN)

//#define CTF_COINIT_MTA      0x00000800      // init COM as STA for the created thread

LWSTDAPI_(BOOL) SHCreateThread(__in LPTHREAD_START_ROUTINE pfnThreadProc, __in_opt void *pData, DWORD dwFlags, __in_opt LPTHREAD_START_ROUTINE pfnCallback);


#if (_WIN32_IE >= _WIN32_IE_IE60)
LWSTDAPI SHReleaseThreadRef(); // release a CTF_THREAD_REF reference earlier than the return of pfnThreadProc
#endif // _WIN32_IE_IE60

#ifndef NO_SHLWAPI_GDI
//
//====== GDI helper functions  ================================================
//

LWSTDAPI_(HPALETTE) SHCreateShellPalette(__in_opt HDC hdc);

#if (_WIN32_IE >= 0x0500)

LWSTDAPI_(void)     ColorRGBToHLS(__in COLORREF clrRGB, __out WORD* pwHue, __out WORD* pwLuminance, __out WORD* pwSaturation);
LWSTDAPI_(COLORREF) ColorHLSToRGB(__in WORD wHue, __in WORD wLuminance, __in WORD wSaturation);
LWSTDAPI_(COLORREF) ColorAdjustLuma(__in COLORREF clrRGB, int n, BOOL fScale);


#endif  // _WIN32_IE >= 0x0500

#endif // NO_SHLWAPI_GDI

//
//====== DllGetVersion  =======================================================
//

typedef struct _DLLVERSIONINFO
{
    DWORD cbSize;
    DWORD dwMajorVersion;                   // Major version
    DWORD dwMinorVersion;                   // Minor version
    DWORD dwBuildNumber;                    // Build number
    DWORD dwPlatformID;                     // DLLVER_PLATFORM_*
} DLLVERSIONINFO;

// Platform IDs for DLLVERSIONINFO
#define DLLVER_PLATFORM_WINDOWS         0x00000001      // Windows 95
#define DLLVER_PLATFORM_NT              0x00000002      // Windows NT

#if (_WIN32_IE >= 0x0501)

typedef struct _DLLVERSIONINFO2
{
    DLLVERSIONINFO info1;
    DWORD dwFlags;                          // No flags currently defined
    ULONGLONG ullVersion;                   // Encoded as:
                                            // Major 0xFFFF 0000 0000 0000
                                            // Minor 0x0000 FFFF 0000 0000
                                            // Build 0x0000 0000 FFFF 0000
                                            // QFE   0x0000 0000 0000 FFFF
} DLLVERSIONINFO2;

#define DLLVER_MAJOR_MASK                    0xFFFF000000000000
#define DLLVER_MINOR_MASK                    0x0000FFFF00000000
#define DLLVER_BUILD_MASK                    0x00000000FFFF0000
#define DLLVER_QFE_MASK                      0x000000000000FFFF

#endif

#define MAKEDLLVERULL(major, minor, build, qfe) \
        (((ULONGLONG)(major) << 48) |        \
         ((ULONGLONG)(minor) << 32) |        \
         ((ULONGLONG)(build) << 16) |        \
         ((ULONGLONG)(  qfe) <<  0))

//
// The caller should always GetProcAddress("DllGetVersion"), not
// implicitly link to it.
//

typedef HRESULT (CALLBACK* DLLGETVERSIONPROC)(DLLVERSIONINFO *);

// DllInstall (to be implemented by self-installing DLLs)
STDAPI DllInstall(__in BOOL bInstall, __in LPCWSTR pszCmdLine);


#if (_WIN32_IE >= 0x0602)
// Function to see if Internet Explorer Enhanced Security Configuration is active for the current user
LWSTDAPI_(BOOL) IsInternetESCEnabled();
#endif // (_WIN32_IE >= 0x0602)


#ifdef __cplusplus
}


#if defined(USE_STRICT_CONST) && !defined(NO_SHLWAPI_STRFCNS)

//=============================================================================
// C++ versions to help detect "const" violations

__inline LPSTR StrChrA(__in LPSTR lpStart, WORD wMatch)
{
    return const_cast<LPSTR>(StrChrA(const_cast<LPCSTR>(lpStart), wMatch));
}
__inline LPWSTR StrChrW(__in LPWSTR lpStart, __in WCHAR wMatch)
{
    return const_cast<LPWSTR>(StrChrW(const_cast<LPCWSTR>(lpStart), wMatch));
}
__inline LPSTR StrChrIA(__in LPSTR lpStart, WORD wMatch)
{
    return const_cast<LPSTR>(StrChrIA(const_cast<LPCSTR>(lpStart), wMatch));
}
__inline LPWSTR StrChrIW(__in LPWSTR lpStart, __in WCHAR wMatch)
{
    return const_cast<LPWSTR>(StrChrIW(const_cast<LPCWSTR>(lpStart), wMatch));
}
#if (_WIN32_IE >= _WIN32_IE_IE60)
__inline LPWSTR StrChrNW(__in LPWSTR lpStart, __in WCHAR wMatch, UINT cchMax)
{
    return const_cast<LPWSTR>(StrChrNW(const_cast<LPCWSTR>(lpStart), wMatch, cchMax));
}
__inline LPWSTR StrChrNIW(__in LPWSTR lpStart, __in WCHAR wMatch, UINT cchMax)
{
    return const_cast<LPWSTR>(StrChrNIW(const_cast<LPCWSTR>(lpStart), wMatch, cchMax));
}
#endif // _WIN32_IE_IE60
__inline LPSTR StrPBrkA(__in LPSTR psz, __in LPCSTR pszSet)
{
    return const_cast<LPSTR>(StrPBrkA(const_cast<LPCSTR>(psz), pszSet));
}
__inline LPWSTR StrPBrkW(__in LPWSTR psz, __in LPCWSTR pszSet)
{
    return const_cast<LPWSTR>(StrPBrkW(const_cast<LPCWSTR>(psz), pszSet));
}
__inline LPSTR StrRChrA(__in LPSTR lpStart, __in_opt LPCSTR lpEnd, __in WORD wMatch)
{
    return const_cast<LPSTR>(StrRChrA(const_cast<LPCSTR>(lpStart), lpEnd, wMatch));
}
__inline LPWSTR StrRChrW(__in LPWSTR lpStart, __in_opt LPCWSTR lpEnd, __in WCHAR wMatch)
{
    return const_cast<LPWSTR>(StrRChrW(const_cast<LPCWSTR>(lpStart), lpEnd, wMatch));
}
__inline LPSTR StrRChrIA(__in LPSTR lpStart, __in_opt LPCSTR lpEnd, __in WORD wMatch)
{
    return const_cast<LPSTR>(StrRChrIA(const_cast<LPCSTR>(lpStart), lpEnd, wMatch));
}
__inline LPWSTR StrRChrIW(__in LPWSTR lpStart, __in_opt LPCWSTR lpEnd, __in WCHAR wMatch)
{
    return const_cast<LPWSTR>(StrRChrIW(const_cast<LPCWSTR>(lpStart), lpEnd, wMatch));
}
__inline LPSTR StrRStrIA(__in LPSTR lpSource, __in_opt LPCSTR lpLast, __in LPCSTR lpSrch)
{
    return const_cast<LPSTR>(StrRStrIA(const_cast<LPCSTR>(lpSource), lpLast, lpSrch));
}
__inline LPWSTR StrRStrIW(__in LPWSTR lpSource, __in_opt LPCWSTR lpLast, __in LPCWSTR lpSrch)
{
    return const_cast<LPWSTR>(StrRStrIW(const_cast<LPCWSTR>(lpSource), lpLast, lpSrch));
}
__inline LPSTR StrStrA(__in LPSTR lpFirst, __in LPCSTR lpSrch)
{
    return const_cast<LPSTR>(StrStrA(const_cast<LPCSTR>(lpFirst), lpSrch));
}
__inline LPWSTR StrStrW(__in LPWSTR lpFirst, __in LPCWSTR lpSrch)
{
    return const_cast<LPWSTR>(StrStrW(const_cast<LPCWSTR>(lpFirst), lpSrch));
}
__inline LPSTR StrStrIA(__in LPSTR lpFirst, __in LPCSTR lpSrch)
{
    return const_cast<LPSTR>(StrStrIA(const_cast<LPCSTR>(lpFirst), lpSrch));
}
__inline LPWSTR StrStrIW(__in LPWSTR lpFirst, __in LPCWSTR lpSrch)
{
    return const_cast<LPWSTR>(StrStrIW(const_cast<LPCWSTR>(lpFirst), lpSrch));
}
#if (_WIN32_IE >= _WIN32_IE_IE60)
__inline LPWSTR StrStrNW(__in LPWSTR lpFirst, __in LPCWSTR lpSrch, __in UINT cchMax)
{
    return const_cast<LPWSTR>(StrStrNW(const_cast<LPCWSTR>(lpFirst), lpSrch, cchMax));
}
__inline LPWSTR StrStrNIW(__in LPWSTR lpFirst, __in LPCWSTR lpSrch, __in UINT cchMax)
{
    return const_cast<LPWSTR>(StrStrNIW(const_cast<LPCWSTR>(lpFirst), lpSrch, cchMax));
}
#endif
__inline LPSTR PathFindExtensionA(__in LPSTR pszPath)
{
    return const_cast<LPSTR>(PathFindExtensionA(const_cast<LPCSTR>(pszPath)));
}
__inline LPWSTR PathFindExtensionW(__in LPWSTR pszPath)
{
    return const_cast<LPWSTR>(PathFindExtensionW(const_cast<LPCWSTR>(pszPath)));
}
__inline LPSTR PathFindFileNameA(__in LPSTR pszPath)
{
    return const_cast<LPSTR>(PathFindFileNameA(const_cast<LPCSTR>(pszPath)));
}
__inline LPWSTR PathFindFileNameW(__in LPWSTR pszPath)
{
    return const_cast<LPWSTR>(PathFindFileNameW(const_cast<LPCWSTR>(pszPath)));
}
__inline LPSTR PathFindNextComponentA(__in LPSTR pszPath)
{
    return const_cast<LPSTR>(PathFindNextComponentA(const_cast<LPCSTR>(pszPath)));
}
__inline LPWSTR PathFindNextComponentW(__in LPWSTR pszPath)
{
    return const_cast<LPWSTR>(PathFindNextComponentW(const_cast<LPCWSTR>(pszPath)));
}
__inline LPSTR PathGetArgsA(__in LPSTR pszPath)
{
    return const_cast<LPSTR>(PathGetArgsA(const_cast<LPCSTR>(pszPath)));
}
__inline LPWSTR PathGetArgsW(__in LPWSTR pszPath)
{
    return const_cast<LPWSTR>(PathGetArgsW(const_cast<LPCWSTR>(pszPath)));
}
__inline LPSTR PathSkipRootA(__in LPSTR pszPath)
{
    return const_cast<LPSTR>(PathSkipRootA(const_cast<LPCSTR>(pszPath)));
}
__inline LPWSTR PathSkipRootW(__in LPWSTR pszPath)
{
    return const_cast<LPWSTR>(PathSkipRootW(const_cast<LPCWSTR>(pszPath)));
}
#endif

#endif

#if defined(DEPRECATE_SUPPORTED)
#pragma warning(pop)
#endif

#ifdef _WIN32
#include <poppack.h>
#endif

#endif


#ifdef UNDER_CE // Moved from shellapi to shlwapi.h because this call is LWSTDAPI
//====== ShellMessageBox ================================================

// If lpcTitle is NULL, the title is taken from hWnd
// If lpcText is NULL, this is assumed to be an Out Of Memory message
// If the selector of lpcTitle or lpcText is NULL, the offset should be a
//     string resource ID
// The variable arguments must all be 32-bit values (even if fewer bits
//     are actually used)
// lpcText (or whatever string resource it causes to be loaded) should
//     be a formatting string similar to wsprintf except that only the
//     following formats are available:
//         %%              formats to a single '%'
//         %nn%s           the nn-th arg is a string which is inserted
//         %nn%ld          the nn-th arg is a DWORD, and formatted decimal
//         %nn%lx          the nn-th arg is a DWORD, and formatted hex
//     note that lengths are allowed on the %s, %ld, and %lx, just
//                         like wsprintf
//

LWSTDAPIV_(int) ShellMessageBoxW(
    __in_opt HINSTANCE hAppInst,
    __in_opt HWND hWnd,
    __in LPCWSTR lpcText,
    __in_opt LPCWSTR lpcTitle,
    __in UINT fuStyle, ...);

#if defined(UNICODE)
#define ShellMessageBox ShellMessageBoxW
#else
// IEMOBILE: shlwapi does not implement ShellMessageBoxA
// #define ShellMessageBox ShellMessageBoxA
#endif

#endif // UNDER_CE

#endif  // _INC_SHLWAPI
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\wm7\sfone7\Include\shsdkstc.h ===
//
// Copyright (c) Microsoft Corporation.  All rights reserved.
//
//
// Use of this sample source code is subject to the terms of the Microsoft
// license agreement under which you licensed this sample source code. If
// you did not accept the terms of the license agreement, you are not
// authorized to use this sample source code. For the terms of the license,
// please see the license agreement between you and Microsoft or, if applicable,
// see the LICENSE.RTF on your install media or the root of your tools installation.
// THE SAMPLE SOURCE CODE IS PROVIDED "AS IS", WITH NO WARRANTIES OR INDEMNITIES.
//
#ifndef _SHSDKSTC_H_
#define _SHSDKSTC_H_

#include <changeinfo.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef struct tagFILECHANGENOTIFY {
    DWORD dwRefCount;
    FILECHANGEINFO fci;
} FILECHANGENOTIFY;

typedef struct tagSHCHANGENOTIFYENTRY {
    DWORD   dwEventMask;    // Events to watch
    LPTSTR  pszWatchDir;    // Directory or root for the events we want. NULL means all.
    BOOL    fRecursive;     // Indicates whether look just for pszWatchDir or recursively.
} SHCHANGENOTIFYENTRY;

#include <wtypes.h>

// notification priority
typedef enum _SHNP
{
    SHNP_INFORM = 0x1B1,      // bubble shown for duration, then goes away
    SHNP_ICONIC,              // no bubble, icon shown for duration then goes away
} SHNP;

// notification data

typedef struct _SHNOTIFICATIONDATA
{
    DWORD        cbStruct;     // for verification and versioning
    DWORD        dwID;         // identifier for this particular notification
    SHNP         npPriority;   // priority
    DWORD        csDuration;   // duration of the notification (usage depends on prio)
    HICON        hicon;        // the icon for the notification
    DWORD        grfFlags;     // flags
    CLSID        clsid;        // unique identifier for the notification class
    HWND         hwndSink;     // window to receive command choices, dismiss, etc.
    LPCTSTR      pszHTML;      // HTML content for the bubble
    LPCTSTR      pszTitle;     // Optional title for bubble
    LPARAM       lParam;       // User-defined parameter
} SHNOTIFICATIONDATA, *PSHNOTIFICATIONDATA;


#ifdef __cplusplus
}
#endif

#endif // _SHSDKSTC_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\wm7\sfone7\Include\shobjidl.h ===
//
// Copyright (c) Microsoft Corporation.  All rights reserved.
//
//
// Use of this sample source code is subject to the terms of the Microsoft
// license agreement under which you licensed this sample source code. If
// you did not accept the terms of the license agreement, you are not
// authorized to use this sample source code. For the terms of the license,
// please see the license agreement between you and Microsoft or, if applicable,
// see the LICENSE.RTF on your install media or the root of your tools installation.
// THE SAMPLE SOURCE CODE IS PROVIDED "AS IS", WITH NO WARRANTIES.
//

#pragma warning( disable: 4049 )  /* more than 64k source lines */

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 5.03.0286 */
/* at Tue Jan 23 14:31:07 2007
 */
/* Compiler settings for ..\shobjidl.idl:
    Oicf (OptLev=i2), W1, Zp8, env=Win32 (32b run), ms_ext, c_ext
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 440
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __shobjidl_h__
#define __shobjidl_h__

/* Forward Declarations */ 

#ifndef __IContextMenu_FWD_DEFINED__
#define __IContextMenu_FWD_DEFINED__
typedef interface IContextMenu IContextMenu;
#endif 	/* __IContextMenu_FWD_DEFINED__ */


#ifndef __IContextMenu2_FWD_DEFINED__
#define __IContextMenu2_FWD_DEFINED__
typedef interface IContextMenu2 IContextMenu2;
#endif 	/* __IContextMenu2_FWD_DEFINED__ */


#ifndef __IContextMenu3_FWD_DEFINED__
#define __IContextMenu3_FWD_DEFINED__
typedef interface IContextMenu3 IContextMenu3;
#endif 	/* __IContextMenu3_FWD_DEFINED__ */


#ifndef __IPersistFolder_FWD_DEFINED__
#define __IPersistFolder_FWD_DEFINED__
typedef interface IPersistFolder IPersistFolder;
#endif 	/* __IPersistFolder_FWD_DEFINED__ */


#ifndef __IRunnableTask_FWD_DEFINED__
#define __IRunnableTask_FWD_DEFINED__
typedef interface IRunnableTask IRunnableTask;
#endif 	/* __IRunnableTask_FWD_DEFINED__ */


#ifndef __IShellTaskScheduler_FWD_DEFINED__
#define __IShellTaskScheduler_FWD_DEFINED__
typedef interface IShellTaskScheduler IShellTaskScheduler;
#endif 	/* __IShellTaskScheduler_FWD_DEFINED__ */


#ifndef __IPersistFolder2_FWD_DEFINED__
#define __IPersistFolder2_FWD_DEFINED__
typedef interface IPersistFolder2 IPersistFolder2;
#endif 	/* __IPersistFolder2_FWD_DEFINED__ */


#ifndef __IPersistFolder3_FWD_DEFINED__
#define __IPersistFolder3_FWD_DEFINED__
typedef interface IPersistFolder3 IPersistFolder3;
#endif 	/* __IPersistFolder3_FWD_DEFINED__ */


#ifndef __IPersistIDList_FWD_DEFINED__
#define __IPersistIDList_FWD_DEFINED__
typedef interface IPersistIDList IPersistIDList;
#endif 	/* __IPersistIDList_FWD_DEFINED__ */


#ifndef __IEnumIDList_FWD_DEFINED__
#define __IEnumIDList_FWD_DEFINED__
typedef interface IEnumIDList IEnumIDList;
#endif 	/* __IEnumIDList_FWD_DEFINED__ */


#ifndef __IEnumFullIDList_FWD_DEFINED__
#define __IEnumFullIDList_FWD_DEFINED__
typedef interface IEnumFullIDList IEnumFullIDList;
#endif 	/* __IEnumFullIDList_FWD_DEFINED__ */


#ifndef __IShellFolder_FWD_DEFINED__
#define __IShellFolder_FWD_DEFINED__
typedef interface IShellFolder IShellFolder;
#endif 	/* __IShellFolder_FWD_DEFINED__ */


#ifndef __IEnumExtraSearch_FWD_DEFINED__
#define __IEnumExtraSearch_FWD_DEFINED__
typedef interface IEnumExtraSearch IEnumExtraSearch;
#endif 	/* __IEnumExtraSearch_FWD_DEFINED__ */


#ifndef __IShellFolder2_FWD_DEFINED__
#define __IShellFolder2_FWD_DEFINED__
typedef interface IShellFolder2 IShellFolder2;
#endif 	/* __IShellFolder2_FWD_DEFINED__ */


#ifndef __IShellView_FWD_DEFINED__
#define __IShellView_FWD_DEFINED__
typedef interface IShellView IShellView;
#endif 	/* __IShellView_FWD_DEFINED__ */


#ifndef __IShellView2_FWD_DEFINED__
#define __IShellView2_FWD_DEFINED__
typedef interface IShellView2 IShellView2;
#endif 	/* __IShellView2_FWD_DEFINED__ */


#ifndef __IShellView3_FWD_DEFINED__
#define __IShellView3_FWD_DEFINED__
typedef interface IShellView3 IShellView3;
#endif 	/* __IShellView3_FWD_DEFINED__ */


#ifndef __IFolderView_FWD_DEFINED__
#define __IFolderView_FWD_DEFINED__
typedef interface IFolderView IFolderView;
#endif 	/* __IFolderView_FWD_DEFINED__ */


#ifndef __IFolderView2_FWD_DEFINED__
#define __IFolderView2_FWD_DEFINED__
typedef interface IFolderView2 IFolderView2;
#endif 	/* __IFolderView2_FWD_DEFINED__ */


#ifndef __IFolderViewSettings_FWD_DEFINED__
#define __IFolderViewSettings_FWD_DEFINED__
typedef interface IFolderViewSettings IFolderViewSettings;
#endif 	/* __IFolderViewSettings_FWD_DEFINED__ */


#ifndef __IPreviewHandlerVisuals_FWD_DEFINED__
#define __IPreviewHandlerVisuals_FWD_DEFINED__
typedef interface IPreviewHandlerVisuals IPreviewHandlerVisuals;
#endif 	/* __IPreviewHandlerVisuals_FWD_DEFINED__ */


#ifndef __IVisualProperties_FWD_DEFINED__
#define __IVisualProperties_FWD_DEFINED__
typedef interface IVisualProperties IVisualProperties;
#endif 	/* __IVisualProperties_FWD_DEFINED__ */


#ifndef __ICommDlgBrowser_FWD_DEFINED__
#define __ICommDlgBrowser_FWD_DEFINED__
typedef interface ICommDlgBrowser ICommDlgBrowser;
#endif 	/* __ICommDlgBrowser_FWD_DEFINED__ */


#ifndef __ICommDlgBrowser2_FWD_DEFINED__
#define __ICommDlgBrowser2_FWD_DEFINED__
typedef interface ICommDlgBrowser2 ICommDlgBrowser2;
#endif 	/* __ICommDlgBrowser2_FWD_DEFINED__ */


#ifndef __ICommDlgBrowser3_FWD_DEFINED__
#define __ICommDlgBrowser3_FWD_DEFINED__
typedef interface ICommDlgBrowser3 ICommDlgBrowser3;
#endif 	/* __ICommDlgBrowser3_FWD_DEFINED__ */


#ifndef __IColumnManager_FWD_DEFINED__
#define __IColumnManager_FWD_DEFINED__
typedef interface IColumnManager IColumnManager;
#endif 	/* __IColumnManager_FWD_DEFINED__ */


#ifndef __IFolderFilterSite_FWD_DEFINED__
#define __IFolderFilterSite_FWD_DEFINED__
typedef interface IFolderFilterSite IFolderFilterSite;
#endif 	/* __IFolderFilterSite_FWD_DEFINED__ */


#ifndef __IFolderFilter_FWD_DEFINED__
#define __IFolderFilter_FWD_DEFINED__
typedef interface IFolderFilter IFolderFilter;
#endif 	/* __IFolderFilter_FWD_DEFINED__ */


#ifndef __IInputObjectSite_FWD_DEFINED__
#define __IInputObjectSite_FWD_DEFINED__
typedef interface IInputObjectSite IInputObjectSite;
#endif 	/* __IInputObjectSite_FWD_DEFINED__ */


#ifndef __IInputObject_FWD_DEFINED__
#define __IInputObject_FWD_DEFINED__
typedef interface IInputObject IInputObject;
#endif 	/* __IInputObject_FWD_DEFINED__ */


#ifndef __IInputObject2_FWD_DEFINED__
#define __IInputObject2_FWD_DEFINED__
typedef interface IInputObject2 IInputObject2;
#endif 	/* __IInputObject2_FWD_DEFINED__ */


#ifndef __IShellIcon_FWD_DEFINED__
#define __IShellIcon_FWD_DEFINED__
typedef interface IShellIcon IShellIcon;
#endif 	/* __IShellIcon_FWD_DEFINED__ */


#ifndef __IShellBrowser_FWD_DEFINED__
#define __IShellBrowser_FWD_DEFINED__
typedef interface IShellBrowser IShellBrowser;
#endif 	/* __IShellBrowser_FWD_DEFINED__ */


#ifndef __IProfferService_FWD_DEFINED__
#define __IProfferService_FWD_DEFINED__
typedef interface IProfferService IProfferService;
#endif 	/* __IProfferService_FWD_DEFINED__ */


#ifndef __IShellItem_FWD_DEFINED__
#define __IShellItem_FWD_DEFINED__
typedef interface IShellItem IShellItem;
#endif 	/* __IShellItem_FWD_DEFINED__ */


#ifndef __IShellItem2_FWD_DEFINED__
#define __IShellItem2_FWD_DEFINED__
typedef interface IShellItem2 IShellItem2;
#endif 	/* __IShellItem2_FWD_DEFINED__ */


#ifndef __IShellItemImageFactory_FWD_DEFINED__
#define __IShellItemImageFactory_FWD_DEFINED__
typedef interface IShellItemImageFactory IShellItemImageFactory;
#endif 	/* __IShellItemImageFactory_FWD_DEFINED__ */


#ifndef __IEnumShellItems_FWD_DEFINED__
#define __IEnumShellItems_FWD_DEFINED__
typedef interface IEnumShellItems IEnumShellItems;
#endif 	/* __IEnumShellItems_FWD_DEFINED__ */


#ifndef __ITransferAdviseSink_FWD_DEFINED__
#define __ITransferAdviseSink_FWD_DEFINED__
typedef interface ITransferAdviseSink ITransferAdviseSink;
#endif 	/* __ITransferAdviseSink_FWD_DEFINED__ */


#ifndef __ITransferSource_FWD_DEFINED__
#define __ITransferSource_FWD_DEFINED__
typedef interface ITransferSource ITransferSource;
#endif 	/* __ITransferSource_FWD_DEFINED__ */


#ifndef __IEnumResources_FWD_DEFINED__
#define __IEnumResources_FWD_DEFINED__
typedef interface IEnumResources IEnumResources;
#endif 	/* __IEnumResources_FWD_DEFINED__ */


#ifndef __IShellItemResources_FWD_DEFINED__
#define __IShellItemResources_FWD_DEFINED__
typedef interface IShellItemResources IShellItemResources;
#endif 	/* __IShellItemResources_FWD_DEFINED__ */


#ifndef __ITransferDestination_FWD_DEFINED__
#define __ITransferDestination_FWD_DEFINED__
typedef interface ITransferDestination ITransferDestination;
#endif 	/* __ITransferDestination_FWD_DEFINED__ */


#ifndef __IStreamAsync_FWD_DEFINED__
#define __IStreamAsync_FWD_DEFINED__
typedef interface IStreamAsync IStreamAsync;
#endif 	/* __IStreamAsync_FWD_DEFINED__ */


#ifndef __IStreamUnbufferedInfo_FWD_DEFINED__
#define __IStreamUnbufferedInfo_FWD_DEFINED__
typedef interface IStreamUnbufferedInfo IStreamUnbufferedInfo;
#endif 	/* __IStreamUnbufferedInfo_FWD_DEFINED__ */


#ifndef __IFileOperationProgressSink_FWD_DEFINED__
#define __IFileOperationProgressSink_FWD_DEFINED__
typedef interface IFileOperationProgressSink IFileOperationProgressSink;
#endif 	/* __IFileOperationProgressSink_FWD_DEFINED__ */


#ifndef __IShellItemArray_FWD_DEFINED__
#define __IShellItemArray_FWD_DEFINED__
typedef interface IShellItemArray IShellItemArray;
#endif 	/* __IShellItemArray_FWD_DEFINED__ */


#ifndef __IInitializeWithItem_FWD_DEFINED__
#define __IInitializeWithItem_FWD_DEFINED__
typedef interface IInitializeWithItem IInitializeWithItem;
#endif 	/* __IInitializeWithItem_FWD_DEFINED__ */


#ifndef __IPropertyUI_FWD_DEFINED__
#define __IPropertyUI_FWD_DEFINED__
typedef interface IPropertyUI IPropertyUI;
#endif 	/* __IPropertyUI_FWD_DEFINED__ */


#ifndef __ICategoryProvider_FWD_DEFINED__
#define __ICategoryProvider_FWD_DEFINED__
typedef interface ICategoryProvider ICategoryProvider;
#endif 	/* __ICategoryProvider_FWD_DEFINED__ */


#ifndef __ICategorizer_FWD_DEFINED__
#define __ICategorizer_FWD_DEFINED__
typedef interface ICategorizer ICategorizer;
#endif 	/* __ICategorizer_FWD_DEFINED__ */


#ifndef __IDropTargetHelper_FWD_DEFINED__
#define __IDropTargetHelper_FWD_DEFINED__
typedef interface IDropTargetHelper IDropTargetHelper;
#endif 	/* __IDropTargetHelper_FWD_DEFINED__ */


#ifndef __IDragSourceHelper_FWD_DEFINED__
#define __IDragSourceHelper_FWD_DEFINED__
typedef interface IDragSourceHelper IDragSourceHelper;
#endif 	/* __IDragSourceHelper_FWD_DEFINED__ */


#ifndef __IDragSourceHelper2_FWD_DEFINED__
#define __IDragSourceHelper2_FWD_DEFINED__
typedef interface IDragSourceHelper2 IDragSourceHelper2;
#endif 	/* __IDragSourceHelper2_FWD_DEFINED__ */


#ifndef __IShellLinkA_FWD_DEFINED__
#define __IShellLinkA_FWD_DEFINED__
typedef interface IShellLinkA IShellLinkA;
#endif 	/* __IShellLinkA_FWD_DEFINED__ */


#ifndef __IShellLinkW_FWD_DEFINED__
#define __IShellLinkW_FWD_DEFINED__
typedef interface IShellLinkW IShellLinkW;
#endif 	/* __IShellLinkW_FWD_DEFINED__ */


#ifndef __IShellLinkDataList_FWD_DEFINED__
#define __IShellLinkDataList_FWD_DEFINED__
typedef interface IShellLinkDataList IShellLinkDataList;
#endif 	/* __IShellLinkDataList_FWD_DEFINED__ */


#ifndef __IResolveShellLink_FWD_DEFINED__
#define __IResolveShellLink_FWD_DEFINED__
typedef interface IResolveShellLink IResolveShellLink;
#endif 	/* __IResolveShellLink_FWD_DEFINED__ */


#ifndef __IActionProgressDialog_FWD_DEFINED__
#define __IActionProgressDialog_FWD_DEFINED__
typedef interface IActionProgressDialog IActionProgressDialog;
#endif 	/* __IActionProgressDialog_FWD_DEFINED__ */


#ifndef __IHWEventHandler_FWD_DEFINED__
#define __IHWEventHandler_FWD_DEFINED__
typedef interface IHWEventHandler IHWEventHandler;
#endif 	/* __IHWEventHandler_FWD_DEFINED__ */


#ifndef __IHWEventHandler2_FWD_DEFINED__
#define __IHWEventHandler2_FWD_DEFINED__
typedef interface IHWEventHandler2 IHWEventHandler2;
#endif 	/* __IHWEventHandler2_FWD_DEFINED__ */


#ifndef __IQueryCancelAutoPlay_FWD_DEFINED__
#define __IQueryCancelAutoPlay_FWD_DEFINED__
typedef interface IQueryCancelAutoPlay IQueryCancelAutoPlay;
#endif 	/* __IQueryCancelAutoPlay_FWD_DEFINED__ */


#ifndef __IDynamicHWHandler_FWD_DEFINED__
#define __IDynamicHWHandler_FWD_DEFINED__
typedef interface IDynamicHWHandler IDynamicHWHandler;
#endif 	/* __IDynamicHWHandler_FWD_DEFINED__ */


#ifndef __IActionProgress_FWD_DEFINED__
#define __IActionProgress_FWD_DEFINED__
typedef interface IActionProgress IActionProgress;
#endif 	/* __IActionProgress_FWD_DEFINED__ */


#ifndef __IShellExtInit_FWD_DEFINED__
#define __IShellExtInit_FWD_DEFINED__
typedef interface IShellExtInit IShellExtInit;
#endif 	/* __IShellExtInit_FWD_DEFINED__ */


#ifndef __IShellPropSheetExt_FWD_DEFINED__
#define __IShellPropSheetExt_FWD_DEFINED__
typedef interface IShellPropSheetExt IShellPropSheetExt;
#endif 	/* __IShellPropSheetExt_FWD_DEFINED__ */


#ifndef __IRemoteComputer_FWD_DEFINED__
#define __IRemoteComputer_FWD_DEFINED__
typedef interface IRemoteComputer IRemoteComputer;
#endif 	/* __IRemoteComputer_FWD_DEFINED__ */


#ifndef __IQueryContinue_FWD_DEFINED__
#define __IQueryContinue_FWD_DEFINED__
typedef interface IQueryContinue IQueryContinue;
#endif 	/* __IQueryContinue_FWD_DEFINED__ */


#ifndef __IUserNotification_FWD_DEFINED__
#define __IUserNotification_FWD_DEFINED__
typedef interface IUserNotification IUserNotification;
#endif 	/* __IUserNotification_FWD_DEFINED__ */


#ifndef __IUserNotificationCallback_FWD_DEFINED__
#define __IUserNotificationCallback_FWD_DEFINED__
typedef interface IUserNotificationCallback IUserNotificationCallback;
#endif 	/* __IUserNotificationCallback_FWD_DEFINED__ */


#ifndef __IUserNotification2_FWD_DEFINED__
#define __IUserNotification2_FWD_DEFINED__
typedef interface IUserNotification2 IUserNotification2;
#endif 	/* __IUserNotification2_FWD_DEFINED__ */


#ifndef __IItemNameLimits_FWD_DEFINED__
#define __IItemNameLimits_FWD_DEFINED__
typedef interface IItemNameLimits IItemNameLimits;
#endif 	/* __IItemNameLimits_FWD_DEFINED__ */


#ifndef __ISearchFolderItemFactory_FWD_DEFINED__
#define __ISearchFolderItemFactory_FWD_DEFINED__
typedef interface ISearchFolderItemFactory ISearchFolderItemFactory;
#endif 	/* __ISearchFolderItemFactory_FWD_DEFINED__ */


#ifndef __IExtractImage_FWD_DEFINED__
#define __IExtractImage_FWD_DEFINED__
typedef interface IExtractImage IExtractImage;
#endif 	/* __IExtractImage_FWD_DEFINED__ */


#ifndef __IExtractImage2_FWD_DEFINED__
#define __IExtractImage2_FWD_DEFINED__
typedef interface IExtractImage2 IExtractImage2;
#endif 	/* __IExtractImage2_FWD_DEFINED__ */


#ifndef __IThumbnailHandlerFactory_FWD_DEFINED__
#define __IThumbnailHandlerFactory_FWD_DEFINED__
typedef interface IThumbnailHandlerFactory IThumbnailHandlerFactory;
#endif 	/* __IThumbnailHandlerFactory_FWD_DEFINED__ */


#ifndef __IParentAndItem_FWD_DEFINED__
#define __IParentAndItem_FWD_DEFINED__
typedef interface IParentAndItem IParentAndItem;
#endif 	/* __IParentAndItem_FWD_DEFINED__ */


#ifndef __IDockingWindow_FWD_DEFINED__
#define __IDockingWindow_FWD_DEFINED__
typedef interface IDockingWindow IDockingWindow;
#endif 	/* __IDockingWindow_FWD_DEFINED__ */


#ifndef __IDeskBand_FWD_DEFINED__
#define __IDeskBand_FWD_DEFINED__
typedef interface IDeskBand IDeskBand;
#endif 	/* __IDeskBand_FWD_DEFINED__ */


#ifndef __IDeskBandInfo_FWD_DEFINED__
#define __IDeskBandInfo_FWD_DEFINED__
typedef interface IDeskBandInfo IDeskBandInfo;
#endif 	/* __IDeskBandInfo_FWD_DEFINED__ */


#ifndef __IDeskBand2_FWD_DEFINED__
#define __IDeskBand2_FWD_DEFINED__
typedef interface IDeskBand2 IDeskBand2;
#endif 	/* __IDeskBand2_FWD_DEFINED__ */


#ifndef __ITaskbarList_FWD_DEFINED__
#define __ITaskbarList_FWD_DEFINED__
typedef interface ITaskbarList ITaskbarList;
#endif 	/* __ITaskbarList_FWD_DEFINED__ */


#ifndef __ITaskbarList2_FWD_DEFINED__
#define __ITaskbarList2_FWD_DEFINED__
typedef interface ITaskbarList2 ITaskbarList2;
#endif 	/* __ITaskbarList2_FWD_DEFINED__ */


#ifndef __IStartMenuPinnedList_FWD_DEFINED__
#define __IStartMenuPinnedList_FWD_DEFINED__
typedef interface IStartMenuPinnedList IStartMenuPinnedList;
#endif 	/* __IStartMenuPinnedList_FWD_DEFINED__ */


#ifndef __ICDBurn_FWD_DEFINED__
#define __ICDBurn_FWD_DEFINED__
typedef interface ICDBurn ICDBurn;
#endif 	/* __ICDBurn_FWD_DEFINED__ */


#ifndef __IWizardSite_FWD_DEFINED__
#define __IWizardSite_FWD_DEFINED__
typedef interface IWizardSite IWizardSite;
#endif 	/* __IWizardSite_FWD_DEFINED__ */


#ifndef __IWizardExtension_FWD_DEFINED__
#define __IWizardExtension_FWD_DEFINED__
typedef interface IWizardExtension IWizardExtension;
#endif 	/* __IWizardExtension_FWD_DEFINED__ */


#ifndef __IWebWizardExtension_FWD_DEFINED__
#define __IWebWizardExtension_FWD_DEFINED__
typedef interface IWebWizardExtension IWebWizardExtension;
#endif 	/* __IWebWizardExtension_FWD_DEFINED__ */


#ifndef __IPublishingWizard_FWD_DEFINED__
#define __IPublishingWizard_FWD_DEFINED__
typedef interface IPublishingWizard IPublishingWizard;
#endif 	/* __IPublishingWizard_FWD_DEFINED__ */


#ifndef __IFolderViewHost_FWD_DEFINED__
#define __IFolderViewHost_FWD_DEFINED__
typedef interface IFolderViewHost IFolderViewHost;
#endif 	/* __IFolderViewHost_FWD_DEFINED__ */


#ifndef __IExplorerBrowserEvents_FWD_DEFINED__
#define __IExplorerBrowserEvents_FWD_DEFINED__
typedef interface IExplorerBrowserEvents IExplorerBrowserEvents;
#endif 	/* __IExplorerBrowserEvents_FWD_DEFINED__ */


#ifndef __IExplorerBrowser_FWD_DEFINED__
#define __IExplorerBrowser_FWD_DEFINED__
typedef interface IExplorerBrowser IExplorerBrowser;
#endif 	/* __IExplorerBrowser_FWD_DEFINED__ */


#ifndef __IAccessibleObject_FWD_DEFINED__
#define __IAccessibleObject_FWD_DEFINED__
typedef interface IAccessibleObject IAccessibleObject;
#endif 	/* __IAccessibleObject_FWD_DEFINED__ */


#ifndef __IResultsFolder_FWD_DEFINED__
#define __IResultsFolder_FWD_DEFINED__
typedef interface IResultsFolder IResultsFolder;
#endif 	/* __IResultsFolder_FWD_DEFINED__ */


#ifndef __IEnumObjects_FWD_DEFINED__
#define __IEnumObjects_FWD_DEFINED__
typedef interface IEnumObjects IEnumObjects;
#endif 	/* __IEnumObjects_FWD_DEFINED__ */


#ifndef __IOperationsProgressDialog_FWD_DEFINED__
#define __IOperationsProgressDialog_FWD_DEFINED__
typedef interface IOperationsProgressDialog IOperationsProgressDialog;
#endif 	/* __IOperationsProgressDialog_FWD_DEFINED__ */


#ifndef __IOperationsUpdateProgress_FWD_DEFINED__
#define __IOperationsUpdateProgress_FWD_DEFINED__
typedef interface IOperationsUpdateProgress IOperationsUpdateProgress;
#endif 	/* __IOperationsUpdateProgress_FWD_DEFINED__ */


#ifndef __IIOCancelInformation_FWD_DEFINED__
#define __IIOCancelInformation_FWD_DEFINED__
typedef interface IIOCancelInformation IIOCancelInformation;
#endif 	/* __IIOCancelInformation_FWD_DEFINED__ */


#ifndef __IFileOperation_FWD_DEFINED__
#define __IFileOperation_FWD_DEFINED__
typedef interface IFileOperation IFileOperation;
#endif 	/* __IFileOperation_FWD_DEFINED__ */


#ifndef __IObjectProvider_FWD_DEFINED__
#define __IObjectProvider_FWD_DEFINED__
typedef interface IObjectProvider IObjectProvider;
#endif 	/* __IObjectProvider_FWD_DEFINED__ */


#ifndef __INamespaceWalkCB_FWD_DEFINED__
#define __INamespaceWalkCB_FWD_DEFINED__
typedef interface INamespaceWalkCB INamespaceWalkCB;
#endif 	/* __INamespaceWalkCB_FWD_DEFINED__ */


#ifndef __INamespaceWalkCB2_FWD_DEFINED__
#define __INamespaceWalkCB2_FWD_DEFINED__
typedef interface INamespaceWalkCB2 INamespaceWalkCB2;
#endif 	/* __INamespaceWalkCB2_FWD_DEFINED__ */


#ifndef __INamespaceWalk_FWD_DEFINED__
#define __INamespaceWalk_FWD_DEFINED__
typedef interface INamespaceWalk INamespaceWalk;
#endif 	/* __INamespaceWalk_FWD_DEFINED__ */


#ifndef __IAutoCompleteDropDown_FWD_DEFINED__
#define __IAutoCompleteDropDown_FWD_DEFINED__
typedef interface IAutoCompleteDropDown IAutoCompleteDropDown;
#endif 	/* __IAutoCompleteDropDown_FWD_DEFINED__ */


#ifndef __IBandSite_FWD_DEFINED__
#define __IBandSite_FWD_DEFINED__
typedef interface IBandSite IBandSite;
#endif 	/* __IBandSite_FWD_DEFINED__ */


#ifndef __IModalWindow_FWD_DEFINED__
#define __IModalWindow_FWD_DEFINED__
typedef interface IModalWindow IModalWindow;
#endif 	/* __IModalWindow_FWD_DEFINED__ */


#ifndef __ICDBurnExt_FWD_DEFINED__
#define __ICDBurnExt_FWD_DEFINED__
typedef interface ICDBurnExt ICDBurnExt;
#endif 	/* __ICDBurnExt_FWD_DEFINED__ */


#ifndef __IContextMenuSite_FWD_DEFINED__
#define __IContextMenuSite_FWD_DEFINED__
typedef interface IContextMenuSite IContextMenuSite;
#endif 	/* __IContextMenuSite_FWD_DEFINED__ */


#ifndef __IEnumReadyCallback_FWD_DEFINED__
#define __IEnumReadyCallback_FWD_DEFINED__
typedef interface IEnumReadyCallback IEnumReadyCallback;
#endif 	/* __IEnumReadyCallback_FWD_DEFINED__ */


#ifndef __IEnumerableView_FWD_DEFINED__
#define __IEnumerableView_FWD_DEFINED__
typedef interface IEnumerableView IEnumerableView;
#endif 	/* __IEnumerableView_FWD_DEFINED__ */


#ifndef __IInsertItem_FWD_DEFINED__
#define __IInsertItem_FWD_DEFINED__
typedef interface IInsertItem IInsertItem;
#endif 	/* __IInsertItem_FWD_DEFINED__ */


#ifndef __IMenuBand_FWD_DEFINED__
#define __IMenuBand_FWD_DEFINED__
typedef interface IMenuBand IMenuBand;
#endif 	/* __IMenuBand_FWD_DEFINED__ */


#ifndef __IFolderBandPriv_FWD_DEFINED__
#define __IFolderBandPriv_FWD_DEFINED__
typedef interface IFolderBandPriv IFolderBandPriv;
#endif 	/* __IFolderBandPriv_FWD_DEFINED__ */


#ifndef __IRegTreeItem_FWD_DEFINED__
#define __IRegTreeItem_FWD_DEFINED__
typedef interface IRegTreeItem IRegTreeItem;
#endif 	/* __IRegTreeItem_FWD_DEFINED__ */


#ifndef __IImageRecompress_FWD_DEFINED__
#define __IImageRecompress_FWD_DEFINED__
typedef interface IImageRecompress IImageRecompress;
#endif 	/* __IImageRecompress_FWD_DEFINED__ */


#ifndef __IDeskBar_FWD_DEFINED__
#define __IDeskBar_FWD_DEFINED__
typedef interface IDeskBar IDeskBar;
#endif 	/* __IDeskBar_FWD_DEFINED__ */


#ifndef __IMenuPopup_FWD_DEFINED__
#define __IMenuPopup_FWD_DEFINED__
typedef interface IMenuPopup IMenuPopup;
#endif 	/* __IMenuPopup_FWD_DEFINED__ */


#ifndef __IFileIsInUse_FWD_DEFINED__
#define __IFileIsInUse_FWD_DEFINED__
typedef interface IFileIsInUse IFileIsInUse;
#endif 	/* __IFileIsInUse_FWD_DEFINED__ */


#ifndef __IFileDialogEvents_FWD_DEFINED__
#define __IFileDialogEvents_FWD_DEFINED__
typedef interface IFileDialogEvents IFileDialogEvents;
#endif 	/* __IFileDialogEvents_FWD_DEFINED__ */


#ifndef __IFileDialog_FWD_DEFINED__
#define __IFileDialog_FWD_DEFINED__
typedef interface IFileDialog IFileDialog;
#endif 	/* __IFileDialog_FWD_DEFINED__ */


#ifndef __IFileSaveDialog_FWD_DEFINED__
#define __IFileSaveDialog_FWD_DEFINED__
typedef interface IFileSaveDialog IFileSaveDialog;
#endif 	/* __IFileSaveDialog_FWD_DEFINED__ */


#ifndef __IFileOpenDialog_FWD_DEFINED__
#define __IFileOpenDialog_FWD_DEFINED__
typedef interface IFileOpenDialog IFileOpenDialog;
#endif 	/* __IFileOpenDialog_FWD_DEFINED__ */


#ifndef __IFileDialogCustomize_FWD_DEFINED__
#define __IFileDialogCustomize_FWD_DEFINED__
typedef interface IFileDialogCustomize IFileDialogCustomize;
#endif 	/* __IFileDialogCustomize_FWD_DEFINED__ */


#ifndef __IFileDialogControlEvents_FWD_DEFINED__
#define __IFileDialogControlEvents_FWD_DEFINED__
typedef interface IFileDialogControlEvents IFileDialogControlEvents;
#endif 	/* __IFileDialogControlEvents_FWD_DEFINED__ */


#ifndef __IApplicationAssociationRegistration_FWD_DEFINED__
#define __IApplicationAssociationRegistration_FWD_DEFINED__
typedef interface IApplicationAssociationRegistration IApplicationAssociationRegistration;
#endif 	/* __IApplicationAssociationRegistration_FWD_DEFINED__ */


#ifndef __IApplicationAssociationRegistrationUI_FWD_DEFINED__
#define __IApplicationAssociationRegistrationUI_FWD_DEFINED__
typedef interface IApplicationAssociationRegistrationUI IApplicationAssociationRegistrationUI;
#endif 	/* __IApplicationAssociationRegistrationUI_FWD_DEFINED__ */


#ifndef __IDelegateFolder_FWD_DEFINED__
#define __IDelegateFolder_FWD_DEFINED__
typedef interface IDelegateFolder IDelegateFolder;
#endif 	/* __IDelegateFolder_FWD_DEFINED__ */


#ifndef __IBrowserFrameOptions_FWD_DEFINED__
#define __IBrowserFrameOptions_FWD_DEFINED__
typedef interface IBrowserFrameOptions IBrowserFrameOptions;
#endif 	/* __IBrowserFrameOptions_FWD_DEFINED__ */


#ifndef __INewWindowManager_FWD_DEFINED__
#define __INewWindowManager_FWD_DEFINED__
typedef interface INewWindowManager INewWindowManager;
#endif 	/* __INewWindowManager_FWD_DEFINED__ */


#ifndef __IAttachmentExecute_FWD_DEFINED__
#define __IAttachmentExecute_FWD_DEFINED__
typedef interface IAttachmentExecute IAttachmentExecute;
#endif 	/* __IAttachmentExecute_FWD_DEFINED__ */


#ifndef __IShellMenuCallback_FWD_DEFINED__
#define __IShellMenuCallback_FWD_DEFINED__
typedef interface IShellMenuCallback IShellMenuCallback;
#endif 	/* __IShellMenuCallback_FWD_DEFINED__ */


#ifndef __IShellMenu_FWD_DEFINED__
#define __IShellMenu_FWD_DEFINED__
typedef interface IShellMenu IShellMenu;
#endif 	/* __IShellMenu_FWD_DEFINED__ */


#ifndef __IShellRunDll_FWD_DEFINED__
#define __IShellRunDll_FWD_DEFINED__
typedef interface IShellRunDll IShellRunDll;
#endif 	/* __IShellRunDll_FWD_DEFINED__ */


#ifndef __IKnownFolder_FWD_DEFINED__
#define __IKnownFolder_FWD_DEFINED__
typedef interface IKnownFolder IKnownFolder;
#endif 	/* __IKnownFolder_FWD_DEFINED__ */


#ifndef __IKnownFolderManager_FWD_DEFINED__
#define __IKnownFolderManager_FWD_DEFINED__
typedef interface IKnownFolderManager IKnownFolderManager;
#endif 	/* __IKnownFolderManager_FWD_DEFINED__ */


#ifndef __ISharingConfigurationManager_FWD_DEFINED__
#define __ISharingConfigurationManager_FWD_DEFINED__
typedef interface ISharingConfigurationManager ISharingConfigurationManager;
#endif 	/* __ISharingConfigurationManager_FWD_DEFINED__ */


#ifndef __IPreviousVersionsInfo_FWD_DEFINED__
#define __IPreviousVersionsInfo_FWD_DEFINED__
typedef interface IPreviousVersionsInfo IPreviousVersionsInfo;
#endif 	/* __IPreviousVersionsInfo_FWD_DEFINED__ */


#ifndef __IRelatedItem_FWD_DEFINED__
#define __IRelatedItem_FWD_DEFINED__
typedef interface IRelatedItem IRelatedItem;
#endif 	/* __IRelatedItem_FWD_DEFINED__ */


#ifndef __IIdentityName_FWD_DEFINED__
#define __IIdentityName_FWD_DEFINED__
typedef interface IIdentityName IIdentityName;
#endif 	/* __IIdentityName_FWD_DEFINED__ */


#ifndef __ICurrentItem_FWD_DEFINED__
#define __ICurrentItem_FWD_DEFINED__
typedef interface ICurrentItem ICurrentItem;
#endif 	/* __ICurrentItem_FWD_DEFINED__ */


#ifndef __ITransferMediumItem_FWD_DEFINED__
#define __ITransferMediumItem_FWD_DEFINED__
typedef interface ITransferMediumItem ITransferMediumItem;
#endif 	/* __ITransferMediumItem_FWD_DEFINED__ */


#ifndef __IUseToBrowseItem_FWD_DEFINED__
#define __IUseToBrowseItem_FWD_DEFINED__
typedef interface IUseToBrowseItem IUseToBrowseItem;
#endif 	/* __IUseToBrowseItem_FWD_DEFINED__ */


#ifndef __IDisplayItem_FWD_DEFINED__
#define __IDisplayItem_FWD_DEFINED__
typedef interface IDisplayItem IDisplayItem;
#endif 	/* __IDisplayItem_FWD_DEFINED__ */


#ifndef __IDestinationStreamFactory_FWD_DEFINED__
#define __IDestinationStreamFactory_FWD_DEFINED__
typedef interface IDestinationStreamFactory IDestinationStreamFactory;
#endif 	/* __IDestinationStreamFactory_FWD_DEFINED__ */


#ifndef __IShellItemFilter_FWD_DEFINED__
#define __IShellItemFilter_FWD_DEFINED__
typedef interface IShellItemFilter IShellItemFilter;
#endif 	/* __IShellItemFilter_FWD_DEFINED__ */


#ifndef __INameSpaceTreeControl_FWD_DEFINED__
#define __INameSpaceTreeControl_FWD_DEFINED__
typedef interface INameSpaceTreeControl INameSpaceTreeControl;
#endif 	/* __INameSpaceTreeControl_FWD_DEFINED__ */


#ifndef __INameSpaceTreeControlEvents_FWD_DEFINED__
#define __INameSpaceTreeControlEvents_FWD_DEFINED__
typedef interface INameSpaceTreeControlEvents INameSpaceTreeControlEvents;
#endif 	/* __INameSpaceTreeControlEvents_FWD_DEFINED__ */


#ifndef __INameSpaceTreeControlDropHandler_FWD_DEFINED__
#define __INameSpaceTreeControlDropHandler_FWD_DEFINED__
typedef interface INameSpaceTreeControlDropHandler INameSpaceTreeControlDropHandler;
#endif 	/* __INameSpaceTreeControlDropHandler_FWD_DEFINED__ */


#ifndef __INameSpaceTreeAccessible_FWD_DEFINED__
#define __INameSpaceTreeAccessible_FWD_DEFINED__
typedef interface INameSpaceTreeAccessible INameSpaceTreeAccessible;
#endif 	/* __INameSpaceTreeAccessible_FWD_DEFINED__ */


#ifndef __INameSpaceTreeControlCustomDraw_FWD_DEFINED__
#define __INameSpaceTreeControlCustomDraw_FWD_DEFINED__
typedef interface INameSpaceTreeControlCustomDraw INameSpaceTreeControlCustomDraw;
#endif 	/* __INameSpaceTreeControlCustomDraw_FWD_DEFINED__ */


#ifndef __IPreviewHandler_FWD_DEFINED__
#define __IPreviewHandler_FWD_DEFINED__
typedef interface IPreviewHandler IPreviewHandler;
#endif 	/* __IPreviewHandler_FWD_DEFINED__ */


#ifndef __IPreviewHandlerFrame_FWD_DEFINED__
#define __IPreviewHandlerFrame_FWD_DEFINED__
typedef interface IPreviewHandlerFrame IPreviewHandlerFrame;
#endif 	/* __IPreviewHandlerFrame_FWD_DEFINED__ */


#ifndef __ITrayDeskBand_FWD_DEFINED__
#define __ITrayDeskBand_FWD_DEFINED__
typedef interface ITrayDeskBand ITrayDeskBand;
#endif 	/* __ITrayDeskBand_FWD_DEFINED__ */


#ifndef __IBandHost_FWD_DEFINED__
#define __IBandHost_FWD_DEFINED__
typedef interface IBandHost IBandHost;
#endif 	/* __IBandHost_FWD_DEFINED__ */


#ifndef __IExplorerPaneVisibility_FWD_DEFINED__
#define __IExplorerPaneVisibility_FWD_DEFINED__
typedef interface IExplorerPaneVisibility IExplorerPaneVisibility;
#endif 	/* __IExplorerPaneVisibility_FWD_DEFINED__ */


#ifndef __IContextMenuCB_FWD_DEFINED__
#define __IContextMenuCB_FWD_DEFINED__
typedef interface IContextMenuCB IContextMenuCB;
#endif 	/* __IContextMenuCB_FWD_DEFINED__ */


#ifndef __IDefaultExtractIconInit_FWD_DEFINED__
#define __IDefaultExtractIconInit_FWD_DEFINED__
typedef interface IDefaultExtractIconInit IDefaultExtractIconInit;
#endif 	/* __IDefaultExtractIconInit_FWD_DEFINED__ */


#ifndef __IExplorerCommand_FWD_DEFINED__
#define __IExplorerCommand_FWD_DEFINED__
typedef interface IExplorerCommand IExplorerCommand;
#endif 	/* __IExplorerCommand_FWD_DEFINED__ */


#ifndef __IEnumExplorerCommand_FWD_DEFINED__
#define __IEnumExplorerCommand_FWD_DEFINED__
typedef interface IEnumExplorerCommand IEnumExplorerCommand;
#endif 	/* __IEnumExplorerCommand_FWD_DEFINED__ */


#ifndef __IExplorerCommandProvider_FWD_DEFINED__
#define __IExplorerCommandProvider_FWD_DEFINED__
typedef interface IExplorerCommandProvider IExplorerCommandProvider;
#endif 	/* __IExplorerCommandProvider_FWD_DEFINED__ */


#ifndef __IMarkupCallback_FWD_DEFINED__
#define __IMarkupCallback_FWD_DEFINED__
typedef interface IMarkupCallback IMarkupCallback;
#endif 	/* __IMarkupCallback_FWD_DEFINED__ */


#ifndef __IControlMarkup_FWD_DEFINED__
#define __IControlMarkup_FWD_DEFINED__
typedef interface IControlMarkup IControlMarkup;
#endif 	/* __IControlMarkup_FWD_DEFINED__ */


#ifndef __IInitializeNetworkFolder_FWD_DEFINED__
#define __IInitializeNetworkFolder_FWD_DEFINED__
typedef interface IInitializeNetworkFolder IInitializeNetworkFolder;
#endif 	/* __IInitializeNetworkFolder_FWD_DEFINED__ */


#ifndef __IOpenControlPanel_FWD_DEFINED__
#define __IOpenControlPanel_FWD_DEFINED__
typedef interface IOpenControlPanel IOpenControlPanel;
#endif 	/* __IOpenControlPanel_FWD_DEFINED__ */


#ifndef __ISystemCPLUpdate_FWD_DEFINED__
#define __ISystemCPLUpdate_FWD_DEFINED__
typedef interface ISystemCPLUpdate ISystemCPLUpdate;
#endif 	/* __ISystemCPLUpdate_FWD_DEFINED__ */


#ifndef __IComputerInfoAdvise_FWD_DEFINED__
#define __IComputerInfoAdvise_FWD_DEFINED__
typedef interface IComputerInfoAdvise IComputerInfoAdvise;
#endif 	/* __IComputerInfoAdvise_FWD_DEFINED__ */


#ifndef __IComputerInfoChangeNotify_FWD_DEFINED__
#define __IComputerInfoChangeNotify_FWD_DEFINED__
typedef interface IComputerInfoChangeNotify IComputerInfoChangeNotify;
#endif 	/* __IComputerInfoChangeNotify_FWD_DEFINED__ */


#ifndef __IFileSystemBindData_FWD_DEFINED__
#define __IFileSystemBindData_FWD_DEFINED__
typedef interface IFileSystemBindData IFileSystemBindData;
#endif 	/* __IFileSystemBindData_FWD_DEFINED__ */


#ifndef __IFileSystemBindData2_FWD_DEFINED__
#define __IFileSystemBindData2_FWD_DEFINED__
typedef interface IFileSystemBindData2 IFileSystemBindData2;
#endif 	/* __IFileSystemBindData2_FWD_DEFINED__ */


#ifndef __ShellDesktop_FWD_DEFINED__
#define __ShellDesktop_FWD_DEFINED__

#ifdef __cplusplus
typedef class ShellDesktop ShellDesktop;
#else
typedef struct ShellDesktop ShellDesktop;
#endif /* __cplusplus */

#endif 	/* __ShellDesktop_FWD_DEFINED__ */


#ifndef __ShellFSFolder_FWD_DEFINED__
#define __ShellFSFolder_FWD_DEFINED__

#ifdef __cplusplus
typedef class ShellFSFolder ShellFSFolder;
#else
typedef struct ShellFSFolder ShellFSFolder;
#endif /* __cplusplus */

#endif 	/* __ShellFSFolder_FWD_DEFINED__ */


#ifndef __NetworkPlaces_FWD_DEFINED__
#define __NetworkPlaces_FWD_DEFINED__

#ifdef __cplusplus
typedef class NetworkPlaces NetworkPlaces;
#else
typedef struct NetworkPlaces NetworkPlaces;
#endif /* __cplusplus */

#endif 	/* __NetworkPlaces_FWD_DEFINED__ */


#ifndef __ShellLink_FWD_DEFINED__
#define __ShellLink_FWD_DEFINED__

#ifdef __cplusplus
typedef class ShellLink ShellLink;
#else
typedef struct ShellLink ShellLink;
#endif /* __cplusplus */

#endif 	/* __ShellLink_FWD_DEFINED__ */


#ifndef __QueryCancelAutoPlay_FWD_DEFINED__
#define __QueryCancelAutoPlay_FWD_DEFINED__

#ifdef __cplusplus
typedef class QueryCancelAutoPlay QueryCancelAutoPlay;
#else
typedef struct QueryCancelAutoPlay QueryCancelAutoPlay;
#endif /* __cplusplus */

#endif 	/* __QueryCancelAutoPlay_FWD_DEFINED__ */


#ifndef __DriveSizeCategorizer_FWD_DEFINED__
#define __DriveSizeCategorizer_FWD_DEFINED__

#ifdef __cplusplus
typedef class DriveSizeCategorizer DriveSizeCategorizer;
#else
typedef struct DriveSizeCategorizer DriveSizeCategorizer;
#endif /* __cplusplus */

#endif 	/* __DriveSizeCategorizer_FWD_DEFINED__ */


#ifndef __DriveTypeCategorizer_FWD_DEFINED__
#define __DriveTypeCategorizer_FWD_DEFINED__

#ifdef __cplusplus
typedef class DriveTypeCategorizer DriveTypeCategorizer;
#else
typedef struct DriveTypeCategorizer DriveTypeCategorizer;
#endif /* __cplusplus */

#endif 	/* __DriveTypeCategorizer_FWD_DEFINED__ */


#ifndef __FreeSpaceCategorizer_FWD_DEFINED__
#define __FreeSpaceCategorizer_FWD_DEFINED__

#ifdef __cplusplus
typedef class FreeSpaceCategorizer FreeSpaceCategorizer;
#else
typedef struct FreeSpaceCategorizer FreeSpaceCategorizer;
#endif /* __cplusplus */

#endif 	/* __FreeSpaceCategorizer_FWD_DEFINED__ */


#ifndef __TimeCategorizer_FWD_DEFINED__
#define __TimeCategorizer_FWD_DEFINED__

#ifdef __cplusplus
typedef class TimeCategorizer TimeCategorizer;
#else
typedef struct TimeCategorizer TimeCategorizer;
#endif /* __cplusplus */

#endif 	/* __TimeCategorizer_FWD_DEFINED__ */


#ifndef __SizeCategorizer_FWD_DEFINED__
#define __SizeCategorizer_FWD_DEFINED__

#ifdef __cplusplus
typedef class SizeCategorizer SizeCategorizer;
#else
typedef struct SizeCategorizer SizeCategorizer;
#endif /* __cplusplus */

#endif 	/* __SizeCategorizer_FWD_DEFINED__ */


#ifndef __AlphabeticalCategorizer_FWD_DEFINED__
#define __AlphabeticalCategorizer_FWD_DEFINED__

#ifdef __cplusplus
typedef class AlphabeticalCategorizer AlphabeticalCategorizer;
#else
typedef struct AlphabeticalCategorizer AlphabeticalCategorizer;
#endif /* __cplusplus */

#endif 	/* __AlphabeticalCategorizer_FWD_DEFINED__ */


#ifndef __MergedCategorizer_FWD_DEFINED__
#define __MergedCategorizer_FWD_DEFINED__

#ifdef __cplusplus
typedef class MergedCategorizer MergedCategorizer;
#else
typedef struct MergedCategorizer MergedCategorizer;
#endif /* __cplusplus */

#endif 	/* __MergedCategorizer_FWD_DEFINED__ */


#ifndef __ImageProperties_FWD_DEFINED__
#define __ImageProperties_FWD_DEFINED__

#ifdef __cplusplus
typedef class ImageProperties ImageProperties;
#else
typedef struct ImageProperties ImageProperties;
#endif /* __cplusplus */

#endif 	/* __ImageProperties_FWD_DEFINED__ */


#ifndef __PropertiesUI_FWD_DEFINED__
#define __PropertiesUI_FWD_DEFINED__

#ifdef __cplusplus
typedef class PropertiesUI PropertiesUI;
#else
typedef struct PropertiesUI PropertiesUI;
#endif /* __cplusplus */

#endif 	/* __PropertiesUI_FWD_DEFINED__ */


#ifndef __UserNotification_FWD_DEFINED__
#define __UserNotification_FWD_DEFINED__

#ifdef __cplusplus
typedef class UserNotification UserNotification;
#else
typedef struct UserNotification UserNotification;
#endif /* __cplusplus */

#endif 	/* __UserNotification_FWD_DEFINED__ */


#ifndef __CDBurn_FWD_DEFINED__
#define __CDBurn_FWD_DEFINED__

#ifdef __cplusplus
typedef class CDBurn CDBurn;
#else
typedef struct CDBurn CDBurn;
#endif /* __cplusplus */

#endif 	/* __CDBurn_FWD_DEFINED__ */


#ifndef __TaskbarList_FWD_DEFINED__
#define __TaskbarList_FWD_DEFINED__

#ifdef __cplusplus
typedef class TaskbarList TaskbarList;
#else
typedef struct TaskbarList TaskbarList;
#endif /* __cplusplus */

#endif 	/* __TaskbarList_FWD_DEFINED__ */


#ifndef __StartMenuPin_FWD_DEFINED__
#define __StartMenuPin_FWD_DEFINED__

#ifdef __cplusplus
typedef class StartMenuPin StartMenuPin;
#else
typedef struct StartMenuPin StartMenuPin;
#endif /* __cplusplus */

#endif 	/* __StartMenuPin_FWD_DEFINED__ */


#ifndef __WebWizardHost_FWD_DEFINED__
#define __WebWizardHost_FWD_DEFINED__

#ifdef __cplusplus
typedef class WebWizardHost WebWizardHost;
#else
typedef struct WebWizardHost WebWizardHost;
#endif /* __cplusplus */

#endif 	/* __WebWizardHost_FWD_DEFINED__ */


#ifndef __PublishDropTarget_FWD_DEFINED__
#define __PublishDropTarget_FWD_DEFINED__

#ifdef __cplusplus
typedef class PublishDropTarget PublishDropTarget;
#else
typedef struct PublishDropTarget PublishDropTarget;
#endif /* __cplusplus */

#endif 	/* __PublishDropTarget_FWD_DEFINED__ */


#ifndef __PublishingWizard_FWD_DEFINED__
#define __PublishingWizard_FWD_DEFINED__

#ifdef __cplusplus
typedef class PublishingWizard PublishingWizard;
#else
typedef struct PublishingWizard PublishingWizard;
#endif /* __cplusplus */

#endif 	/* __PublishingWizard_FWD_DEFINED__ */


#ifndef __InternetPrintOrdering_FWD_DEFINED__
#define __InternetPrintOrdering_FWD_DEFINED__

#ifdef __cplusplus
typedef class InternetPrintOrdering InternetPrintOrdering;
#else
typedef struct InternetPrintOrdering InternetPrintOrdering;
#endif /* __cplusplus */

#endif 	/* __InternetPrintOrdering_FWD_DEFINED__ */


#ifndef __FolderViewHost_FWD_DEFINED__
#define __FolderViewHost_FWD_DEFINED__

#ifdef __cplusplus
typedef class FolderViewHost FolderViewHost;
#else
typedef struct FolderViewHost FolderViewHost;
#endif /* __cplusplus */

#endif 	/* __FolderViewHost_FWD_DEFINED__ */


#ifndef __ExplorerBrowser_FWD_DEFINED__
#define __ExplorerBrowser_FWD_DEFINED__

#ifdef __cplusplus
typedef class ExplorerBrowser ExplorerBrowser;
#else
typedef struct ExplorerBrowser ExplorerBrowser;
#endif /* __cplusplus */

#endif 	/* __ExplorerBrowser_FWD_DEFINED__ */


#ifndef __ImageRecompress_FWD_DEFINED__
#define __ImageRecompress_FWD_DEFINED__

#ifdef __cplusplus
typedef class ImageRecompress ImageRecompress;
#else
typedef struct ImageRecompress ImageRecompress;
#endif /* __cplusplus */

#endif 	/* __ImageRecompress_FWD_DEFINED__ */


#ifndef __TrayBandSiteService_FWD_DEFINED__
#define __TrayBandSiteService_FWD_DEFINED__

#ifdef __cplusplus
typedef class TrayBandSiteService TrayBandSiteService;
#else
typedef struct TrayBandSiteService TrayBandSiteService;
#endif /* __cplusplus */

#endif 	/* __TrayBandSiteService_FWD_DEFINED__ */


#ifndef __TrayDeskBand_FWD_DEFINED__
#define __TrayDeskBand_FWD_DEFINED__

#ifdef __cplusplus
typedef class TrayDeskBand TrayDeskBand;
#else
typedef struct TrayDeskBand TrayDeskBand;
#endif /* __cplusplus */

#endif 	/* __TrayDeskBand_FWD_DEFINED__ */


#ifndef __AttachmentServices_FWD_DEFINED__
#define __AttachmentServices_FWD_DEFINED__

#ifdef __cplusplus
typedef class AttachmentServices AttachmentServices;
#else
typedef struct AttachmentServices AttachmentServices;
#endif /* __cplusplus */

#endif 	/* __AttachmentServices_FWD_DEFINED__ */


#ifndef __DocPropShellExtension_FWD_DEFINED__
#define __DocPropShellExtension_FWD_DEFINED__

#ifdef __cplusplus
typedef class DocPropShellExtension DocPropShellExtension;
#else
typedef struct DocPropShellExtension DocPropShellExtension;
#endif /* __cplusplus */

#endif 	/* __DocPropShellExtension_FWD_DEFINED__ */


#ifndef __ShellItem_FWD_DEFINED__
#define __ShellItem_FWD_DEFINED__

#ifdef __cplusplus
typedef class ShellItem ShellItem;
#else
typedef struct ShellItem ShellItem;
#endif /* __cplusplus */

#endif 	/* __ShellItem_FWD_DEFINED__ */


#ifndef __NamespaceWalker_FWD_DEFINED__
#define __NamespaceWalker_FWD_DEFINED__

#ifdef __cplusplus
typedef class NamespaceWalker NamespaceWalker;
#else
typedef struct NamespaceWalker NamespaceWalker;
#endif /* __cplusplus */

#endif 	/* __NamespaceWalker_FWD_DEFINED__ */


#ifndef __FileOperation_FWD_DEFINED__
#define __FileOperation_FWD_DEFINED__

#ifdef __cplusplus
typedef class FileOperation FileOperation;
#else
typedef struct FileOperation FileOperation;
#endif /* __cplusplus */

#endif 	/* __FileOperation_FWD_DEFINED__ */


#ifndef __FileOpenDialog_FWD_DEFINED__
#define __FileOpenDialog_FWD_DEFINED__

#ifdef __cplusplus
typedef class FileOpenDialog FileOpenDialog;
#else
typedef struct FileOpenDialog FileOpenDialog;
#endif /* __cplusplus */

#endif 	/* __FileOpenDialog_FWD_DEFINED__ */


#ifndef __FileSaveDialog_FWD_DEFINED__
#define __FileSaveDialog_FWD_DEFINED__

#ifdef __cplusplus
typedef class FileSaveDialog FileSaveDialog;
#else
typedef struct FileSaveDialog FileSaveDialog;
#endif /* __cplusplus */

#endif 	/* __FileSaveDialog_FWD_DEFINED__ */


#ifndef __KnownFolderManager_FWD_DEFINED__
#define __KnownFolderManager_FWD_DEFINED__

#ifdef __cplusplus
typedef class KnownFolderManager KnownFolderManager;
#else
typedef struct KnownFolderManager KnownFolderManager;
#endif /* __cplusplus */

#endif 	/* __KnownFolderManager_FWD_DEFINED__ */


#ifndef __FSCopyHandler_FWD_DEFINED__
#define __FSCopyHandler_FWD_DEFINED__

#ifdef __cplusplus
typedef class FSCopyHandler FSCopyHandler;
#else
typedef struct FSCopyHandler FSCopyHandler;
#endif /* __cplusplus */

#endif 	/* __FSCopyHandler_FWD_DEFINED__ */


#ifndef __SharingConfigurationManager_FWD_DEFINED__
#define __SharingConfigurationManager_FWD_DEFINED__

#ifdef __cplusplus
typedef class SharingConfigurationManager SharingConfigurationManager;
#else
typedef struct SharingConfigurationManager SharingConfigurationManager;
#endif /* __cplusplus */

#endif 	/* __SharingConfigurationManager_FWD_DEFINED__ */


#ifndef __PreviousVersions_FWD_DEFINED__
#define __PreviousVersions_FWD_DEFINED__

#ifdef __cplusplus
typedef class PreviousVersions PreviousVersions;
#else
typedef struct PreviousVersions PreviousVersions;
#endif /* __cplusplus */

#endif 	/* __PreviousVersions_FWD_DEFINED__ */


#ifndef __NetworkConnections_FWD_DEFINED__
#define __NetworkConnections_FWD_DEFINED__

#ifdef __cplusplus
typedef class NetworkConnections NetworkConnections;
#else
typedef struct NetworkConnections NetworkConnections;
#endif /* __cplusplus */

#endif 	/* __NetworkConnections_FWD_DEFINED__ */


#ifndef __NamespaceTreeControl_FWD_DEFINED__
#define __NamespaceTreeControl_FWD_DEFINED__

#ifdef __cplusplus
typedef class NamespaceTreeControl NamespaceTreeControl;
#else
typedef struct NamespaceTreeControl NamespaceTreeControl;
#endif /* __cplusplus */

#endif 	/* __NamespaceTreeControl_FWD_DEFINED__ */


#ifndef __IENamespaceTreeControl_FWD_DEFINED__
#define __IENamespaceTreeControl_FWD_DEFINED__

#ifdef __cplusplus
typedef class IENamespaceTreeControl IENamespaceTreeControl;
#else
typedef struct IENamespaceTreeControl IENamespaceTreeControl;
#endif /* __cplusplus */

#endif 	/* __IENamespaceTreeControl_FWD_DEFINED__ */


#ifndef __ScheduledTasks_FWD_DEFINED__
#define __ScheduledTasks_FWD_DEFINED__

#ifdef __cplusplus
typedef class ScheduledTasks ScheduledTasks;
#else
typedef struct ScheduledTasks ScheduledTasks;
#endif /* __cplusplus */

#endif 	/* __ScheduledTasks_FWD_DEFINED__ */


#ifndef __ApplicationAssociationRegistration_FWD_DEFINED__
#define __ApplicationAssociationRegistration_FWD_DEFINED__

#ifdef __cplusplus
typedef class ApplicationAssociationRegistration ApplicationAssociationRegistration;
#else
typedef struct ApplicationAssociationRegistration ApplicationAssociationRegistration;
#endif /* __cplusplus */

#endif 	/* __ApplicationAssociationRegistration_FWD_DEFINED__ */


#ifndef __ApplicationAssociationRegistrationUI_FWD_DEFINED__
#define __ApplicationAssociationRegistrationUI_FWD_DEFINED__

#ifdef __cplusplus
typedef class ApplicationAssociationRegistrationUI ApplicationAssociationRegistrationUI;
#else
typedef struct ApplicationAssociationRegistrationUI ApplicationAssociationRegistrationUI;
#endif /* __cplusplus */

#endif 	/* __ApplicationAssociationRegistrationUI_FWD_DEFINED__ */


#ifndef __SearchFolderItemFactory_FWD_DEFINED__
#define __SearchFolderItemFactory_FWD_DEFINED__

#ifdef __cplusplus
typedef class SearchFolderItemFactory SearchFolderItemFactory;
#else
typedef struct SearchFolderItemFactory SearchFolderItemFactory;
#endif /* __cplusplus */

#endif 	/* __SearchFolderItemFactory_FWD_DEFINED__ */


#ifndef __OpenControlPanel_FWD_DEFINED__
#define __OpenControlPanel_FWD_DEFINED__

#ifdef __cplusplus
typedef class OpenControlPanel OpenControlPanel;
#else
typedef struct OpenControlPanel OpenControlPanel;
#endif /* __cplusplus */

#endif 	/* __OpenControlPanel_FWD_DEFINED__ */


#ifndef __ComputerInfoAdvise_FWD_DEFINED__
#define __ComputerInfoAdvise_FWD_DEFINED__

#ifdef __cplusplus
typedef class ComputerInfoAdvise ComputerInfoAdvise;
#else
typedef struct ComputerInfoAdvise ComputerInfoAdvise;
#endif /* __cplusplus */

#endif 	/* __ComputerInfoAdvise_FWD_DEFINED__ */


#ifndef __NetworkExplorerFolder_FWD_DEFINED__
#define __NetworkExplorerFolder_FWD_DEFINED__

#ifdef __cplusplus
typedef class NetworkExplorerFolder NetworkExplorerFolder;
#else
typedef struct NetworkExplorerFolder NetworkExplorerFolder;
#endif /* __cplusplus */

#endif 	/* __NetworkExplorerFolder_FWD_DEFINED__ */


#ifndef __IAssocHandlerInvoker_FWD_DEFINED__
#define __IAssocHandlerInvoker_FWD_DEFINED__
typedef interface IAssocHandlerInvoker IAssocHandlerInvoker;
#endif 	/* __IAssocHandlerInvoker_FWD_DEFINED__ */


#ifndef __IAssocHandler_FWD_DEFINED__
#define __IAssocHandler_FWD_DEFINED__
typedef interface IAssocHandler IAssocHandler;
#endif 	/* __IAssocHandler_FWD_DEFINED__ */


#ifndef __IEnumAssocHandlers_FWD_DEFINED__
#define __IEnumAssocHandlers_FWD_DEFINED__
typedef interface IEnumAssocHandlers IEnumAssocHandlers;
#endif 	/* __IEnumAssocHandlers_FWD_DEFINED__ */


/* header files for imported files */
#include "objidl.h"
#include "oleidl.h"
#include "oaidl.h"
#include "docobj.h"
#include "shtypes.h"
#include "comcat.h"
#include "prsht.h"
#include "msxml.h"
#include "propsys.h"

#ifdef __cplusplus
extern "C"{
#endif 

void __RPC_FAR * __RPC_USER MIDL_user_allocate(size_t);
void __RPC_USER MIDL_user_free( void __RPC_FAR * ); 

/* interface __MIDL_itf_shobjidl_0000 */
/* [local] */ 

#ifndef __shobjidlp_h__  // ;internal
#define __shobjidlp_h__  // ;internal
#include <sherrors.h>
#ifndef SHSTDAPI
#if defined(_SHELL32_)
#define SHSTDAPI          STDAPI
#define SHSTDAPI_(type)   STDAPI_(type)
#else
#define SHSTDAPI          EXTERN_C DECLSPEC_IMPORT HRESULT STDAPICALLTYPE
#define SHSTDAPI_(type)   EXTERN_C DECLSPEC_IMPORT type STDAPICALLTYPE
#endif
#endif // SHSTDAPI

//===========================================================================
//
// IContextMenu interface
//
// [OverView]
//
//  The shell uses the IContextMenu interface in following three cases.
//
// case-1: The shell is loading context menu extensions.
//
//   When the user clicks the right mouse button on an item within the shell's
//  name space (i.g., file, directory, server, work-group, etc.), it creates
//  the default context menu for its type, then loads context menu extensions
//  that are registered for that type (and its base type) so that they can
//  add extra menu items. Those context menu extensions are registered at
//  HKCR\{ProgID}\shellex\ContextMenuHandlers.
//
// case-2: The shell is retrieving a context menu of sub-folders in extended
//   name-space.
//
//   When the explorer's name space is extended by name space extensions,
//  the shell calls their IShellFolder::GetUIObjectOf to get the IContextMenu
//  objects when it creates context menus for folders under those extended
//  name spaces.
//
// case-3: The shell is loading non-default drag and drop handler for directories.
//
//   When the user performed a non-default drag and drop onto one of file
//  system folders (i.e., directories), it loads shell extensions that are
//  registered at HKCR\{ProgID}\DragDropHandlers.
//
//
// [Member functions]
//
//
// IContextMenu::QueryContextMenu
//
//   This member function may insert one or more menuitems to the specified
//  menu (hmenu) at the specified location (indexMenu which is never be -1).
//  The IDs of those menuitem must be in the specified range (idCmdFirst and
//  idCmdLast). It returns the maximum menuitem ID offset (ushort) in the
//  'code' field (low word) of the scode.
//
//   The uFlags specify the context. It may have one or more of following
//  flags.
//
//  CMF_DEFAULTONLY: This flag is passed if the user is invoking the default
//   action (typically by double-clicking, case 1 and 2 only). Context menu
//   extensions (case 1) should not add any menu items, and returns S_OK.
//
//  CMF_VERBSONLY: The explorer passes this flag if it is constructing
//   a context menu for a short-cut object (case 1 and case 2 only). If this
//   flag is passed, it should not add any menu-items that is not appropriate
//   from a short-cut.
//    A good example is the Delete menuitem, which confuses the user
//   because it is not clear whether it deletes the link source item or the
//   link itself.
//
//  CMF_EXPLORER: The explorer passes this flag if it has the left-side pane
//   (case 1 and 2 only). Context menu extensions should ignore this flag.
//
//   High word (16-bit) are reserved for context specific communications
//  and the rest of flags (13-bit) are reserved by the system.
//
//
// IContextMenu::InvokeCommand
//
//   This member is called when the user has selected one of menuitems that
//  are inserted by previous QueryContextMenu member. In this case, the
//  LOWORD(lpici->lpVerb) contains the menuitem ID offset (menuitem ID -
//  idCmdFirst).
//
//   This member function may also be called programmatically. In such a case,
//  lpici->lpVerb specifies the canonical name of the command to be invoked,
//  which is typically retrieved by GetCommandString member previously.
//
//  Parameters in lpci:
//    cbSize -- Specifies the size of this structure (sizeof(*lpci))
//    hwnd   -- Specifies the owner window for any message/dialog box.
//    fMask  -- Specifies whether or not dwHotkey/hIcon paramter is valid.
//    lpVerb -- Specifies the command to be invoked.
//    lpParameters -- Parameters (optional)
//    lpDirectory  -- Working directory (optional)
//    nShow -- Specifies the flag to be passed to ShowWindow (SW_*).
//    dwHotKey -- Hot key to be assigned to the app after invoked (optional).
//    hIcon -- Specifies the icon (optional).
//    hMonitor -- Specifies the default monitor (optional).
//
//
// IContextMenu::GetCommandString
//
//   This member function is called by the explorer either to get the
//  canonical (language independent) command name (uFlags == GCS_VERB) or
//  the help text ((uFlags & GCS_HELPTEXT) != 0) for the specified command.
//  The retrieved canonical string may be passed to its InvokeCommand
//  member function to invoke a command programmatically. The explorer
//  displays the help texts in its status bar; therefore, the length of
//  the help text should be reasonably short (<40 characters).
//
//  Parameters:
//   idCmd -- Specifies menuitem ID offset (from idCmdFirst)
//   uFlags -- Either GCS_VERB or GCS_HELPTEXT
//   pwReserved -- Reserved (must pass NULL when calling, must ignore when called)
//   pszName -- Specifies the string buffer.
//   cchMax -- Specifies the size of the string buffer.
//
//===========================================================================

// QueryContextMenu uFlags
#define CMF_NORMAL              0x00000000
#define CMF_DEFAULTONLY         0x00000001
#define CMF_VERBSONLY           0x00000002
#define CMF_EXPLORE             0x00000004
#define CMF_NOVERBS             0x00000008
#define CMF_CANRENAME           0x00000010
#define CMF_NODEFAULT           0x00000020
#if (NTDDI_VERSION < NTDDI_LONGHORN)
#define CMF_INCLUDESTATIC       0x00000040
#endif
#if (NTDDI_VERSION >= NTDDI_LONGHORN)
#define CMF_ITEMMENU            0x00000080
#endif
#define CMF_EXTENDEDVERBS       0x00000100
#if (NTDDI_VERSION >= NTDDI_LONGHORN)
#define CMF_DISABLEDVERBS       0x00000200
#endif
#define CMF_RESERVED            0xffff0000

// GetCommandString uFlags
#define GCS_VERBA        0x00000000     // canonical verb
#define GCS_HELPTEXTA    0x00000001     // help text (for status bar)
#define GCS_VALIDATEA    0x00000002     // validate command exists
#define GCS_VERBW        0x00000004     // canonical verb (unicode)
#define GCS_HELPTEXTW    0x00000005     // help text (unicode version)
#define GCS_VALIDATEW    0x00000006     // validate command exists (unicode)
#define GCS_VERBICONW    0x00000014     // icon string (unicode)
#define GCS_UNICODE      0x00000004     // for bit testing - Unicode string

#ifdef UNICODE
#define GCS_VERB        GCS_VERBW
#define GCS_HELPTEXT    GCS_HELPTEXTW
#define GCS_VALIDATE    GCS_VALIDATEW
#else
#define GCS_VERB        GCS_VERBA
#define GCS_HELPTEXT    GCS_HELPTEXTA
#define GCS_VALIDATE    GCS_VALIDATEA
#endif

#define CMDSTR_NEWFOLDERA   "NewFolder"
#define CMDSTR_VIEWLISTA    "ViewList"
#define CMDSTR_VIEWDETAILSA "ViewDetails"
#define CMDSTR_NEWFOLDERW   L"NewFolder"
#define CMDSTR_VIEWLISTW    L"ViewList"
#define CMDSTR_VIEWDETAILSW L"ViewDetails"

#ifdef UNICODE
#define CMDSTR_NEWFOLDER    CMDSTR_NEWFOLDERW
#define CMDSTR_VIEWLIST     CMDSTR_VIEWLISTW
#define CMDSTR_VIEWDETAILS  CMDSTR_VIEWDETAILSW
#else
#define CMDSTR_NEWFOLDER    CMDSTR_NEWFOLDERA
#define CMDSTR_VIEWLIST     CMDSTR_VIEWLISTA
#define CMDSTR_VIEWDETAILS  CMDSTR_VIEWDETAILSA
#endif

#define CMIC_MASK_HOTKEY        SEE_MASK_HOTKEY
#define CMIC_MASK_ICON          SEE_MASK_ICON
#define CMIC_MASK_FLAG_NO_UI    SEE_MASK_FLAG_NO_UI
#define CMIC_MASK_UNICODE       SEE_MASK_UNICODE
#define CMIC_MASK_NO_CONSOLE    SEE_MASK_NO_CONSOLE
#if (NTDDI_VERSION < NTDDI_LONGHORN)
#define CMIC_MASK_HASLINKNAME   SEE_MASK_HASLINKNAME
#define CMIC_MASK_HASTITLE      SEE_MASK_HASTITLE
#endif  // NTDDI_LONGHORN
#define CMIC_MASK_FLAG_SEP_VDM  SEE_MASK_FLAG_SEPVDM
#define CMIC_MASK_ASYNCOK       SEE_MASK_ASYNCOK
#if (NTDDI_VERSION >= NTDDI_LONGHORN)
#define CMIC_MASK_NOASYNC       SEE_MASK_NOASYNC
#endif
#if (_WIN32_IE >= _WIN32_IE_IE501)
#define CMIC_MASK_SHIFT_DOWN    0x10000000
#define CMIC_MASK_CONTROL_DOWN  0x40000000
#endif  // _WIN32_IE_IE501
#if (_WIN32_IE >= 0x0560)
#define CMIC_MASK_FLAG_LOG_USAGE SEE_MASK_FLAG_LOG_USAGE
#define CMIC_MASK_NOZONECHECKS  SEE_MASK_NOZONECHECKS
#endif // (_WIN32_IE >= 0x560)

#if (_WIN32_IE >= _WIN32_IE_IE40)
#define CMIC_MASK_PTINVOKE      0x20000000
#endif  // _WIN32_IE_IE40

#include <pshpack8.h>

typedef struct _CMINVOKECOMMANDINFO
    {
    DWORD cbSize;
    DWORD fMask;
    HWND hwnd;
    LPCSTR lpVerb;
    LPCSTR lpParameters;
    LPCSTR lpDirectory;
    int nShow;
    DWORD dwHotKey;
    HANDLE hIcon;
    }	CMINVOKECOMMANDINFO;

typedef CMINVOKECOMMANDINFO __RPC_FAR *LPCMINVOKECOMMANDINFO;

#if (_WIN32_IE >= _WIN32_IE_IE40)
typedef struct _CMINVOKECOMMANDINFOEX
    {
    DWORD cbSize;
    DWORD fMask;
    HWND hwnd;
    LPCSTR lpVerb;
    LPCSTR lpParameters;
    LPCSTR lpDirectory;
    int nShow;
    DWORD dwHotKey;
    HANDLE hIcon;
    LPCSTR lpTitle;
    LPCWSTR lpVerbW;
    LPCWSTR lpParametersW;
    LPCWSTR lpDirectoryW;
    LPCWSTR lpTitleW;
    POINT ptInvoke;
    }	CMINVOKECOMMANDINFOEX;

#else
typedef struct _PRE_IE4_CMINVOKECOMMANDINFOEX
{
    DWORD cbSize;            // must be sizeof(CMINVOKECOMMANDINFOEX)
    DWORD fMask;             // any combination of CMIC_MASK_*
    HWND hwnd;               // might be NULL (indicating no owner window)
    LPCSTR lpVerb;           // either a string or MAKEINTRESOURCE(idOffset)
    LPCSTR lpParameters;     // might be NULL (indicating no parameter)
    LPCSTR lpDirectory;      // might be NULL (indicating no specific directory)
    int nShow;               // one of SW_ values for ShowWindow() API
    DWORD dwHotKey;
    HANDLE hIcon;
    LPCSTR lpTitle;         // For CreateProcess-StartupInfo.lpTitle
    LPCWSTR lpVerbW;        // Unicode verb (for those who can use it)
    LPCWSTR lpParametersW;  // Unicode parameters (for those who can use it)
    LPCWSTR lpDirectoryW;   // Unicode directory (for those who can use it)
    LPCWSTR lpTitleW;       // Unicode title (for those who can use it)
} CMINVOKECOMMANDINFOEX;
#endif   // _WIN32_IE_IE40
typedef CMINVOKECOMMANDINFOEX __RPC_FAR *LPCMINVOKECOMMANDINFOEX;

typedef const CMINVOKECOMMANDINFOEX __RPC_FAR *PCCMINVOKECOMMANDINFOEX;

#include <poppack.h>


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0000_v0_0_s_ifspec;

#ifndef __IContextMenu_INTERFACE_DEFINED__
#define __IContextMenu_INTERFACE_DEFINED__

/* interface IContextMenu */
/* [object][unique][uuid][local] */ 


EXTERN_C const IID IID_IContextMenu;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000214e4-0000-0000-c000-000000000046")
    IContextMenu : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE QueryContextMenu( 
            /* [in] */ HMENU hmenu,
            /* [in] */ UINT indexMenu,
            /* [in] */ UINT idCmdFirst,
            /* [in] */ UINT idCmdLast,
            /* [in] */ UINT uFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InvokeCommand( 
            /* [in] */ CMINVOKECOMMANDINFO __RPC_FAR *pici) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCommandString( 
            /* [in] */ UINT_PTR idCmd,
            /* [in] */ UINT uType,
            /* [in] */ UINT __RPC_FAR *pReserved,
            /* [out] */ LPSTR pszName,
            /* [in] */ UINT cchMax) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IContextMenuVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IContextMenu __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IContextMenu __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IContextMenu __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryContextMenu )( 
            IContextMenu __RPC_FAR * This,
            /* [in] */ HMENU hmenu,
            /* [in] */ UINT indexMenu,
            /* [in] */ UINT idCmdFirst,
            /* [in] */ UINT idCmdLast,
            /* [in] */ UINT uFlags);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *InvokeCommand )( 
            IContextMenu __RPC_FAR * This,
            /* [in] */ CMINVOKECOMMANDINFO __RPC_FAR *pici);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCommandString )( 
            IContextMenu __RPC_FAR * This,
            /* [in] */ UINT_PTR idCmd,
            /* [in] */ UINT uType,
            /* [in] */ UINT __RPC_FAR *pReserved,
            /* [out] */ LPSTR pszName,
            /* [in] */ UINT cchMax);
        
        END_INTERFACE
    } IContextMenuVtbl;

    interface IContextMenu
    {
        CONST_VTBL struct IContextMenuVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IContextMenu_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IContextMenu_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IContextMenu_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IContextMenu_QueryContextMenu(This,hmenu,indexMenu,idCmdFirst,idCmdLast,uFlags)	\
    (This)->lpVtbl -> QueryContextMenu(This,hmenu,indexMenu,idCmdFirst,idCmdLast,uFlags)

#define IContextMenu_InvokeCommand(This,pici)	\
    (This)->lpVtbl -> InvokeCommand(This,pici)

#define IContextMenu_GetCommandString(This,idCmd,uType,pReserved,pszName,cchMax)	\
    (This)->lpVtbl -> GetCommandString(This,idCmd,uType,pReserved,pszName,cchMax)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IContextMenu_QueryContextMenu_Proxy( 
    IContextMenu __RPC_FAR * This,
    /* [in] */ HMENU hmenu,
    /* [in] */ UINT indexMenu,
    /* [in] */ UINT idCmdFirst,
    /* [in] */ UINT idCmdLast,
    /* [in] */ UINT uFlags);


void __RPC_STUB IContextMenu_QueryContextMenu_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IContextMenu_InvokeCommand_Proxy( 
    IContextMenu __RPC_FAR * This,
    /* [in] */ CMINVOKECOMMANDINFO __RPC_FAR *pici);


void __RPC_STUB IContextMenu_InvokeCommand_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IContextMenu_GetCommandString_Proxy( 
    IContextMenu __RPC_FAR * This,
    /* [in] */ UINT_PTR idCmd,
    /* [in] */ UINT uType,
    /* [in] */ UINT __RPC_FAR *pReserved,
    /* [out] */ LPSTR pszName,
    /* [in] */ UINT cchMax);


void __RPC_STUB IContextMenu_GetCommandString_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IContextMenu_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0290 */
/* [local] */ 

typedef IContextMenu __RPC_FAR *LPCONTEXTMENU;



extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0290_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0290_v0_0_s_ifspec;

#ifndef __IContextMenu2_INTERFACE_DEFINED__
#define __IContextMenu2_INTERFACE_DEFINED__

/* interface IContextMenu2 */
/* [object][unique][uuid][local] */ 


EXTERN_C const IID IID_IContextMenu2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000214f4-0000-0000-c000-000000000046")
    IContextMenu2 : public IContextMenu
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE HandleMenuMsg( 
            /* [in] */ UINT uMsg,
            /* [in] */ WPARAM wParam,
            /* [in] */ LPARAM lParam) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IContextMenu2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IContextMenu2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IContextMenu2 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IContextMenu2 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryContextMenu )( 
            IContextMenu2 __RPC_FAR * This,
            /* [in] */ HMENU hmenu,
            /* [in] */ UINT indexMenu,
            /* [in] */ UINT idCmdFirst,
            /* [in] */ UINT idCmdLast,
            /* [in] */ UINT uFlags);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *InvokeCommand )( 
            IContextMenu2 __RPC_FAR * This,
            /* [in] */ CMINVOKECOMMANDINFO __RPC_FAR *pici);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCommandString )( 
            IContextMenu2 __RPC_FAR * This,
            /* [in] */ UINT_PTR idCmd,
            /* [in] */ UINT uType,
            /* [in] */ UINT __RPC_FAR *pReserved,
            /* [out] */ LPSTR pszName,
            /* [in] */ UINT cchMax);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *HandleMenuMsg )( 
            IContextMenu2 __RPC_FAR * This,
            /* [in] */ UINT uMsg,
            /* [in] */ WPARAM wParam,
            /* [in] */ LPARAM lParam);
        
        END_INTERFACE
    } IContextMenu2Vtbl;

    interface IContextMenu2
    {
        CONST_VTBL struct IContextMenu2Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IContextMenu2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IContextMenu2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IContextMenu2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IContextMenu2_QueryContextMenu(This,hmenu,indexMenu,idCmdFirst,idCmdLast,uFlags)	\
    (This)->lpVtbl -> QueryContextMenu(This,hmenu,indexMenu,idCmdFirst,idCmdLast,uFlags)

#define IContextMenu2_InvokeCommand(This,pici)	\
    (This)->lpVtbl -> InvokeCommand(This,pici)

#define IContextMenu2_GetCommandString(This,idCmd,uType,pReserved,pszName,cchMax)	\
    (This)->lpVtbl -> GetCommandString(This,idCmd,uType,pReserved,pszName,cchMax)


#define IContextMenu2_HandleMenuMsg(This,uMsg,wParam,lParam)	\
    (This)->lpVtbl -> HandleMenuMsg(This,uMsg,wParam,lParam)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IContextMenu2_HandleMenuMsg_Proxy( 
    IContextMenu2 __RPC_FAR * This,
    /* [in] */ UINT uMsg,
    /* [in] */ WPARAM wParam,
    /* [in] */ LPARAM lParam);


void __RPC_STUB IContextMenu2_HandleMenuMsg_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IContextMenu2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0291 */
/* [local] */ 

typedef IContextMenu2 __RPC_FAR *LPCONTEXTMENU2;



extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0291_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0291_v0_0_s_ifspec;

#ifndef __IContextMenu3_INTERFACE_DEFINED__
#define __IContextMenu3_INTERFACE_DEFINED__

/* interface IContextMenu3 */
/* [object][unique][uuid][local] */ 


EXTERN_C const IID IID_IContextMenu3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("BCFCE0A0-EC17-11d0-8D10-00A0C90F2719")
    IContextMenu3 : public IContextMenu2
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE HandleMenuMsg2( 
            /* [in] */ UINT uMsg,
            /* [in] */ WPARAM wParam,
            /* [in] */ LPARAM lParam,
            /* [out] */ LRESULT __RPC_FAR *plResult) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IContextMenu3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IContextMenu3 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IContextMenu3 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IContextMenu3 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryContextMenu )( 
            IContextMenu3 __RPC_FAR * This,
            /* [in] */ HMENU hmenu,
            /* [in] */ UINT indexMenu,
            /* [in] */ UINT idCmdFirst,
            /* [in] */ UINT idCmdLast,
            /* [in] */ UINT uFlags);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *InvokeCommand )( 
            IContextMenu3 __RPC_FAR * This,
            /* [in] */ CMINVOKECOMMANDINFO __RPC_FAR *pici);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCommandString )( 
            IContextMenu3 __RPC_FAR * This,
            /* [in] */ UINT_PTR idCmd,
            /* [in] */ UINT uType,
            /* [in] */ UINT __RPC_FAR *pReserved,
            /* [out] */ LPSTR pszName,
            /* [in] */ UINT cchMax);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *HandleMenuMsg )( 
            IContextMenu3 __RPC_FAR * This,
            /* [in] */ UINT uMsg,
            /* [in] */ WPARAM wParam,
            /* [in] */ LPARAM lParam);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *HandleMenuMsg2 )( 
            IContextMenu3 __RPC_FAR * This,
            /* [in] */ UINT uMsg,
            /* [in] */ WPARAM wParam,
            /* [in] */ LPARAM lParam,
            /* [out] */ LRESULT __RPC_FAR *plResult);
        
        END_INTERFACE
    } IContextMenu3Vtbl;

    interface IContextMenu3
    {
        CONST_VTBL struct IContextMenu3Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IContextMenu3_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IContextMenu3_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IContextMenu3_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IContextMenu3_QueryContextMenu(This,hmenu,indexMenu,idCmdFirst,idCmdLast,uFlags)	\
    (This)->lpVtbl -> QueryContextMenu(This,hmenu,indexMenu,idCmdFirst,idCmdLast,uFlags)

#define IContextMenu3_InvokeCommand(This,pici)	\
    (This)->lpVtbl -> InvokeCommand(This,pici)

#define IContextMenu3_GetCommandString(This,idCmd,uType,pReserved,pszName,cchMax)	\
    (This)->lpVtbl -> GetCommandString(This,idCmd,uType,pReserved,pszName,cchMax)


#define IContextMenu3_HandleMenuMsg(This,uMsg,wParam,lParam)	\
    (This)->lpVtbl -> HandleMenuMsg(This,uMsg,wParam,lParam)


#define IContextMenu3_HandleMenuMsg2(This,uMsg,wParam,lParam,plResult)	\
    (This)->lpVtbl -> HandleMenuMsg2(This,uMsg,wParam,lParam,plResult)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IContextMenu3_HandleMenuMsg2_Proxy( 
    IContextMenu3 __RPC_FAR * This,
    /* [in] */ UINT uMsg,
    /* [in] */ WPARAM wParam,
    /* [in] */ LPARAM lParam,
    /* [out] */ LRESULT __RPC_FAR *plResult);


void __RPC_STUB IContextMenu3_HandleMenuMsg2_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IContextMenu3_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0292 */
/* [local] */ 

typedef IContextMenu3 __RPC_FAR *LPCONTEXTMENU3;



extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0292_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0292_v0_0_s_ifspec;

#ifndef __IPersistFolder_INTERFACE_DEFINED__
#define __IPersistFolder_INTERFACE_DEFINED__

/* interface IPersistFolder */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IPersistFolder;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000214EA-0000-0000-C000-000000000046")
    IPersistFolder : public IPersist
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Initialize( 
            /* [in] */ PCIDLIST_ABSOLUTE pidl) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IPersistFolderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IPersistFolder __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IPersistFolder __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IPersistFolder __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetClassID )( 
            IPersistFolder __RPC_FAR * This,
            /* [out] */ CLSID __RPC_FAR *pClassID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Initialize )( 
            IPersistFolder __RPC_FAR * This,
            /* [in] */ PCIDLIST_ABSOLUTE pidl);
        
        END_INTERFACE
    } IPersistFolderVtbl;

    interface IPersistFolder
    {
        CONST_VTBL struct IPersistFolderVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IPersistFolder_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IPersistFolder_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IPersistFolder_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IPersistFolder_GetClassID(This,pClassID)	\
    (This)->lpVtbl -> GetClassID(This,pClassID)


#define IPersistFolder_Initialize(This,pidl)	\
    (This)->lpVtbl -> Initialize(This,pidl)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IPersistFolder_Initialize_Proxy( 
    IPersistFolder __RPC_FAR * This,
    /* [in] */ PCIDLIST_ABSOLUTE pidl);


void __RPC_STUB IPersistFolder_Initialize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IPersistFolder_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0293 */
/* [local] */ 

typedef IPersistFolder __RPC_FAR *LPPERSISTFOLDER;

#if (_WIN32_IE >= 0x0400)
#define IRTIR_TASK_NOT_RUNNING   0
#define IRTIR_TASK_RUNNING       1
#define IRTIR_TASK_SUSPENDED     2
#define IRTIR_TASK_PENDING       3
#define IRTIR_TASK_FINISHED      4


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0293_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0293_v0_0_s_ifspec;

#ifndef __IRunnableTask_INTERFACE_DEFINED__
#define __IRunnableTask_INTERFACE_DEFINED__

/* interface IRunnableTask */
/* [local][object][uuid] */ 


EXTERN_C const IID IID_IRunnableTask;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("85788d00-6807-11d0-b810-00c04fd706ec")
    IRunnableTask : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Run( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Kill( 
            /* [in] */ BOOL bWait) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Suspend( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Resume( void) = 0;
        
        virtual ULONG STDMETHODCALLTYPE IsRunning( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IRunnableTaskVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IRunnableTask __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IRunnableTask __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IRunnableTask __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Run )( 
            IRunnableTask __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Kill )( 
            IRunnableTask __RPC_FAR * This,
            /* [in] */ BOOL bWait);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Suspend )( 
            IRunnableTask __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Resume )( 
            IRunnableTask __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *IsRunning )( 
            IRunnableTask __RPC_FAR * This);
        
        END_INTERFACE
    } IRunnableTaskVtbl;

    interface IRunnableTask
    {
        CONST_VTBL struct IRunnableTaskVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IRunnableTask_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IRunnableTask_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IRunnableTask_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IRunnableTask_Run(This)	\
    (This)->lpVtbl -> Run(This)

#define IRunnableTask_Kill(This,bWait)	\
    (This)->lpVtbl -> Kill(This,bWait)

#define IRunnableTask_Suspend(This)	\
    (This)->lpVtbl -> Suspend(This)

#define IRunnableTask_Resume(This)	\
    (This)->lpVtbl -> Resume(This)

#define IRunnableTask_IsRunning(This)	\
    (This)->lpVtbl -> IsRunning(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IRunnableTask_Run_Proxy( 
    IRunnableTask __RPC_FAR * This);


void __RPC_STUB IRunnableTask_Run_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IRunnableTask_Kill_Proxy( 
    IRunnableTask __RPC_FAR * This,
    /* [in] */ BOOL bWait);


void __RPC_STUB IRunnableTask_Kill_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IRunnableTask_Suspend_Proxy( 
    IRunnableTask __RPC_FAR * This);


void __RPC_STUB IRunnableTask_Suspend_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IRunnableTask_Resume_Proxy( 
    IRunnableTask __RPC_FAR * This);


void __RPC_STUB IRunnableTask_Resume_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


ULONG STDMETHODCALLTYPE IRunnableTask_IsRunning_Proxy( 
    IRunnableTask __RPC_FAR * This);


void __RPC_STUB IRunnableTask_IsRunning_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IRunnableTask_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0294 */
/* [local] */ 

#define TOID_NULL                    GUID_NULL
#define ITSAT_DEFAULT_LPARAM         ((DWORD_PTR)-1)
#define ITSAT_DEFAULT_PRIORITY       0x10000000
#define ITSAT_MAX_PRIORITY           0x7fffffff
#define ITSAT_MIN_PRIORITY           0x00000000
#define ITSSFLAG_COMPLETE_ON_DESTROY 0x0000 // wait for the current task to complete before deleting the scheduler
#define ITSSFLAG_KILL_ON_DESTROY     0x0001 // kill the current task (if there is one) when the task scheduler is deleted
#define ITSSFLAG_FLAGS_MASK          0x0003
#define ITSS_THREAD_DESTROY_DEFAULT_TIMEOUT  (10*1000)       // default milliseconds until a sleeping worker thread is released
#define ITSS_THREAD_TERMINATE_TIMEOUT        (INFINITE)      // set sleeping worker threads to never be released
#define ITSS_THREAD_TIMEOUT_NO_CHANGE        (INFINITE - 1)  // no change to the thread timeout


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0294_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0294_v0_0_s_ifspec;

#ifndef __IShellTaskScheduler_INTERFACE_DEFINED__
#define __IShellTaskScheduler_INTERFACE_DEFINED__

/* interface IShellTaskScheduler */
/* [local][object][uuid] */ 


EXTERN_C const IID IID_IShellTaskScheduler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6CCB7BE0-6807-11d0-B810-00C04FD706EC")
    IShellTaskScheduler : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE AddTask( 
            /* [in] */ IRunnableTask __RPC_FAR *prt,
            /* [in] */ REFTASKOWNERID rtoid,
            /* [in] */ DWORD_PTR lParam,
            /* [in] */ DWORD dwPriority) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveTasks( 
            /* [in] */ REFTASKOWNERID rtoid,
            /* [in] */ DWORD_PTR lParam,
            /* [in] */ BOOL bWaitIfRunning) = 0;
        
        virtual UINT STDMETHODCALLTYPE CountTasks( 
            /* [in] */ REFTASKOWNERID rtoid) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Status( 
            /* [in] */ DWORD dwReleaseStatus,
            /* [in] */ DWORD dwThreadTimeout) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IShellTaskSchedulerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IShellTaskScheduler __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IShellTaskScheduler __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IShellTaskScheduler __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AddTask )( 
            IShellTaskScheduler __RPC_FAR * This,
            /* [in] */ IRunnableTask __RPC_FAR *prt,
            /* [in] */ REFTASKOWNERID rtoid,
            /* [in] */ DWORD_PTR lParam,
            /* [in] */ DWORD dwPriority);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RemoveTasks )( 
            IShellTaskScheduler __RPC_FAR * This,
            /* [in] */ REFTASKOWNERID rtoid,
            /* [in] */ DWORD_PTR lParam,
            /* [in] */ BOOL bWaitIfRunning);
        
        UINT ( STDMETHODCALLTYPE __RPC_FAR *CountTasks )( 
            IShellTaskScheduler __RPC_FAR * This,
            /* [in] */ REFTASKOWNERID rtoid);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Status )( 
            IShellTaskScheduler __RPC_FAR * This,
            /* [in] */ DWORD dwReleaseStatus,
            /* [in] */ DWORD dwThreadTimeout);
        
        END_INTERFACE
    } IShellTaskSchedulerVtbl;

    interface IShellTaskScheduler
    {
        CONST_VTBL struct IShellTaskSchedulerVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IShellTaskScheduler_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IShellTaskScheduler_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IShellTaskScheduler_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IShellTaskScheduler_AddTask(This,prt,rtoid,lParam,dwPriority)	\
    (This)->lpVtbl -> AddTask(This,prt,rtoid,lParam,dwPriority)

#define IShellTaskScheduler_RemoveTasks(This,rtoid,lParam,bWaitIfRunning)	\
    (This)->lpVtbl -> RemoveTasks(This,rtoid,lParam,bWaitIfRunning)

#define IShellTaskScheduler_CountTasks(This,rtoid)	\
    (This)->lpVtbl -> CountTasks(This,rtoid)

#define IShellTaskScheduler_Status(This,dwReleaseStatus,dwThreadTimeout)	\
    (This)->lpVtbl -> Status(This,dwReleaseStatus,dwThreadTimeout)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IShellTaskScheduler_AddTask_Proxy( 
    IShellTaskScheduler __RPC_FAR * This,
    /* [in] */ IRunnableTask __RPC_FAR *prt,
    /* [in] */ REFTASKOWNERID rtoid,
    /* [in] */ DWORD_PTR lParam,
    /* [in] */ DWORD dwPriority);


void __RPC_STUB IShellTaskScheduler_AddTask_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellTaskScheduler_RemoveTasks_Proxy( 
    IShellTaskScheduler __RPC_FAR * This,
    /* [in] */ REFTASKOWNERID rtoid,
    /* [in] */ DWORD_PTR lParam,
    /* [in] */ BOOL bWaitIfRunning);


void __RPC_STUB IShellTaskScheduler_RemoveTasks_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


UINT STDMETHODCALLTYPE IShellTaskScheduler_CountTasks_Proxy( 
    IShellTaskScheduler __RPC_FAR * This,
    /* [in] */ REFTASKOWNERID rtoid);


void __RPC_STUB IShellTaskScheduler_CountTasks_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellTaskScheduler_Status_Proxy( 
    IShellTaskScheduler __RPC_FAR * This,
    /* [in] */ DWORD dwReleaseStatus,
    /* [in] */ DWORD dwThreadTimeout);


void __RPC_STUB IShellTaskScheduler_Status_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IShellTaskScheduler_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0295 */
/* [local] */ 

#define SID_ShellTaskScheduler IID_IShellTaskScheduler


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0295_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0295_v0_0_s_ifspec;

#ifndef __IPersistFolder2_INTERFACE_DEFINED__
#define __IPersistFolder2_INTERFACE_DEFINED__

/* interface IPersistFolder2 */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IPersistFolder2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1AC3D9F0-175C-11d1-95BE-00609797EA4F")
    IPersistFolder2 : public IPersistFolder
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCurFolder( 
            /* [out] */ PIDLIST_ABSOLUTE __RPC_FAR *ppidl) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IPersistFolder2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IPersistFolder2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IPersistFolder2 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IPersistFolder2 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetClassID )( 
            IPersistFolder2 __RPC_FAR * This,
            /* [out] */ CLSID __RPC_FAR *pClassID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Initialize )( 
            IPersistFolder2 __RPC_FAR * This,
            /* [in] */ PCIDLIST_ABSOLUTE pidl);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCurFolder )( 
            IPersistFolder2 __RPC_FAR * This,
            /* [out] */ PIDLIST_ABSOLUTE __RPC_FAR *ppidl);
        
        END_INTERFACE
    } IPersistFolder2Vtbl;

    interface IPersistFolder2
    {
        CONST_VTBL struct IPersistFolder2Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IPersistFolder2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IPersistFolder2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IPersistFolder2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IPersistFolder2_GetClassID(This,pClassID)	\
    (This)->lpVtbl -> GetClassID(This,pClassID)


#define IPersistFolder2_Initialize(This,pidl)	\
    (This)->lpVtbl -> Initialize(This,pidl)


#define IPersistFolder2_GetCurFolder(This,ppidl)	\
    (This)->lpVtbl -> GetCurFolder(This,ppidl)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IPersistFolder2_GetCurFolder_Proxy( 
    IPersistFolder2 __RPC_FAR * This,
    /* [out] */ PIDLIST_ABSOLUTE __RPC_FAR *ppidl);


void __RPC_STUB IPersistFolder2_GetCurFolder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IPersistFolder2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0296 */
/* [local] */ 

#endif
#if (_WIN32_IE >= 0x0500)
#define CSIDL_FLAG_PFTI_TRACKTARGET CSIDL_FLAG_DONT_VERIFY
#include <pshpack8.h>
typedef struct _PERSIST_FOLDER_TARGET_INFO
    {
    PIDLIST_ABSOLUTE pidlTargetFolder;
    WCHAR szTargetParsingName[ 260 ];
    WCHAR szNetworkProvider[ 260 ];
    DWORD dwAttributes;
    int csidl;
    }	PERSIST_FOLDER_TARGET_INFO;

#include <poppack.h>


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0296_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0296_v0_0_s_ifspec;

#ifndef __IPersistFolder3_INTERFACE_DEFINED__
#define __IPersistFolder3_INTERFACE_DEFINED__

/* interface IPersistFolder3 */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IPersistFolder3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CEF04FDF-FE72-11d2-87A5-00C04F6837CF")
    IPersistFolder3 : public IPersistFolder2
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE InitializeEx( 
            /* [unique][in] */ IBindCtx __RPC_FAR *pbc,
            /* [in] */ PCIDLIST_ABSOLUTE pidlRoot,
            /* [unique][in] */ const PERSIST_FOLDER_TARGET_INFO __RPC_FAR *ppfti) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFolderTargetInfo( 
            /* [out] */ PERSIST_FOLDER_TARGET_INFO __RPC_FAR *ppfti) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IPersistFolder3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IPersistFolder3 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IPersistFolder3 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IPersistFolder3 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetClassID )( 
            IPersistFolder3 __RPC_FAR * This,
            /* [out] */ CLSID __RPC_FAR *pClassID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Initialize )( 
            IPersistFolder3 __RPC_FAR * This,
            /* [in] */ PCIDLIST_ABSOLUTE pidl);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCurFolder )( 
            IPersistFolder3 __RPC_FAR * This,
            /* [out] */ PIDLIST_ABSOLUTE __RPC_FAR *ppidl);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *InitializeEx )( 
            IPersistFolder3 __RPC_FAR * This,
            /* [unique][in] */ IBindCtx __RPC_FAR *pbc,
            /* [in] */ PCIDLIST_ABSOLUTE pidlRoot,
            /* [unique][in] */ const PERSIST_FOLDER_TARGET_INFO __RPC_FAR *ppfti);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFolderTargetInfo )( 
            IPersistFolder3 __RPC_FAR * This,
            /* [out] */ PERSIST_FOLDER_TARGET_INFO __RPC_FAR *ppfti);
        
        END_INTERFACE
    } IPersistFolder3Vtbl;

    interface IPersistFolder3
    {
        CONST_VTBL struct IPersistFolder3Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IPersistFolder3_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IPersistFolder3_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IPersistFolder3_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IPersistFolder3_GetClassID(This,pClassID)	\
    (This)->lpVtbl -> GetClassID(This,pClassID)


#define IPersistFolder3_Initialize(This,pidl)	\
    (This)->lpVtbl -> Initialize(This,pidl)


#define IPersistFolder3_GetCurFolder(This,ppidl)	\
    (This)->lpVtbl -> GetCurFolder(This,ppidl)


#define IPersistFolder3_InitializeEx(This,pbc,pidlRoot,ppfti)	\
    (This)->lpVtbl -> InitializeEx(This,pbc,pidlRoot,ppfti)

#define IPersistFolder3_GetFolderTargetInfo(This,ppfti)	\
    (This)->lpVtbl -> GetFolderTargetInfo(This,ppfti)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IPersistFolder3_InitializeEx_Proxy( 
    IPersistFolder3 __RPC_FAR * This,
    /* [unique][in] */ IBindCtx __RPC_FAR *pbc,
    /* [in] */ PCIDLIST_ABSOLUTE pidlRoot,
    /* [unique][in] */ const PERSIST_FOLDER_TARGET_INFO __RPC_FAR *ppfti);


void __RPC_STUB IPersistFolder3_InitializeEx_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IPersistFolder3_GetFolderTargetInfo_Proxy( 
    IPersistFolder3 __RPC_FAR * This,
    /* [out] */ PERSIST_FOLDER_TARGET_INFO __RPC_FAR *ppfti);


void __RPC_STUB IPersistFolder3_GetFolderTargetInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IPersistFolder3_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0297 */
/* [local] */ 

#endif
#if (NTDDI_VERSION >= NTDDI_WINXP) || (_WIN32_IE >= _WIN32_IE_IE70)


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0297_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0297_v0_0_s_ifspec;

#ifndef __IPersistIDList_INTERFACE_DEFINED__
#define __IPersistIDList_INTERFACE_DEFINED__

/* interface IPersistIDList */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IPersistIDList;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1079acfc-29bd-11d3-8e0d-00c04f6837d5")
    IPersistIDList : public IPersist
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetIDList( 
            /* [in] */ PCIDLIST_ABSOLUTE pidl) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetIDList( 
            /* [out] */ PIDLIST_ABSOLUTE __RPC_FAR *ppidl) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IPersistIDListVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IPersistIDList __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IPersistIDList __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IPersistIDList __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetClassID )( 
            IPersistIDList __RPC_FAR * This,
            /* [out] */ CLSID __RPC_FAR *pClassID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetIDList )( 
            IPersistIDList __RPC_FAR * This,
            /* [in] */ PCIDLIST_ABSOLUTE pidl);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDList )( 
            IPersistIDList __RPC_FAR * This,
            /* [out] */ PIDLIST_ABSOLUTE __RPC_FAR *ppidl);
        
        END_INTERFACE
    } IPersistIDListVtbl;

    interface IPersistIDList
    {
        CONST_VTBL struct IPersistIDListVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IPersistIDList_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IPersistIDList_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IPersistIDList_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IPersistIDList_GetClassID(This,pClassID)	\
    (This)->lpVtbl -> GetClassID(This,pClassID)


#define IPersistIDList_SetIDList(This,pidl)	\
    (This)->lpVtbl -> SetIDList(This,pidl)

#define IPersistIDList_GetIDList(This,ppidl)	\
    (This)->lpVtbl -> GetIDList(This,ppidl)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IPersistIDList_SetIDList_Proxy( 
    IPersistIDList __RPC_FAR * This,
    /* [in] */ PCIDLIST_ABSOLUTE pidl);


void __RPC_STUB IPersistIDList_SetIDList_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IPersistIDList_GetIDList_Proxy( 
    IPersistIDList __RPC_FAR * This,
    /* [out] */ PIDLIST_ABSOLUTE __RPC_FAR *ppidl);


void __RPC_STUB IPersistIDList_GetIDList_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IPersistIDList_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0298 */
/* [local] */ 

#endif  // NTDDI_WINXP|| (_WIN32_IE >= _WIN32_IE_IE70)


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0298_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0298_v0_0_s_ifspec;

#ifndef __IEnumIDList_INTERFACE_DEFINED__
#define __IEnumIDList_INTERFACE_DEFINED__

/* interface IEnumIDList */
/* [unique][object][uuid] */ 


EXTERN_C const IID IID_IEnumIDList;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000214F2-0000-0000-C000-000000000046")
    IEnumIDList : public IUnknown
    {
    public:
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE Next( 
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ PITEMID_CHILD __RPC_FAR *rgelt,
            /* [out] */ ULONG __RPC_FAR *pceltFetched) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Skip( 
            /* [in] */ ULONG celt) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clone( 
            /* [out] */ IEnumIDList __RPC_FAR *__RPC_FAR *ppenum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumIDListVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IEnumIDList __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IEnumIDList __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IEnumIDList __RPC_FAR * This);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Next )( 
            IEnumIDList __RPC_FAR * This,
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ PITEMID_CHILD __RPC_FAR *rgelt,
            /* [out] */ ULONG __RPC_FAR *pceltFetched);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Skip )( 
            IEnumIDList __RPC_FAR * This,
            /* [in] */ ULONG celt);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Reset )( 
            IEnumIDList __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Clone )( 
            IEnumIDList __RPC_FAR * This,
            /* [out] */ IEnumIDList __RPC_FAR *__RPC_FAR *ppenum);
        
        END_INTERFACE
    } IEnumIDListVtbl;

    interface IEnumIDList
    {
        CONST_VTBL struct IEnumIDListVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumIDList_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IEnumIDList_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IEnumIDList_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IEnumIDList_Next(This,celt,rgelt,pceltFetched)	\
    (This)->lpVtbl -> Next(This,celt,rgelt,pceltFetched)

#define IEnumIDList_Skip(This,celt)	\
    (This)->lpVtbl -> Skip(This,celt)

#define IEnumIDList_Reset(This)	\
    (This)->lpVtbl -> Reset(This)

#define IEnumIDList_Clone(This,ppenum)	\
    (This)->lpVtbl -> Clone(This,ppenum)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [call_as] */ HRESULT STDMETHODCALLTYPE IEnumIDList_RemoteNext_Proxy( 
    IEnumIDList __RPC_FAR * This,
    /* [in] */ ULONG celt,
    /* [length_is][size_is][out] */ PITEMID_CHILD __RPC_FAR *rgelt,
    /* [out] */ ULONG __RPC_FAR *pceltFetched);


void __RPC_STUB IEnumIDList_RemoteNext_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumIDList_Skip_Proxy( 
    IEnumIDList __RPC_FAR * This,
    /* [in] */ ULONG celt);


void __RPC_STUB IEnumIDList_Skip_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumIDList_Reset_Proxy( 
    IEnumIDList __RPC_FAR * This);


void __RPC_STUB IEnumIDList_Reset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumIDList_Clone_Proxy( 
    IEnumIDList __RPC_FAR * This,
    /* [out] */ IEnumIDList __RPC_FAR *__RPC_FAR *ppenum);


void __RPC_STUB IEnumIDList_Clone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IEnumIDList_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0299 */
/* [local] */ 

typedef IEnumIDList __RPC_FAR *LPENUMIDLIST;



extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0299_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0299_v0_0_s_ifspec;

#ifndef __IEnumFullIDList_INTERFACE_DEFINED__
#define __IEnumFullIDList_INTERFACE_DEFINED__

/* interface IEnumFullIDList */
/* [unique][object][uuid] */ 


EXTERN_C const IID IID_IEnumFullIDList;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("d0191542-7954-4908-bc06-b2360bbe45ba")
    IEnumFullIDList : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Next( 
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ PIDLIST_ABSOLUTE __RPC_FAR *rgelt,
            /* [out] */ ULONG __RPC_FAR *pceltFetched) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Skip( 
            /* [in] */ ULONG celt) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clone( 
            /* [out] */ IEnumFullIDList __RPC_FAR *__RPC_FAR *ppenum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumFullIDListVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IEnumFullIDList __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IEnumFullIDList __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IEnumFullIDList __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Next )( 
            IEnumFullIDList __RPC_FAR * This,
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ PIDLIST_ABSOLUTE __RPC_FAR *rgelt,
            /* [out] */ ULONG __RPC_FAR *pceltFetched);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Skip )( 
            IEnumFullIDList __RPC_FAR * This,
            /* [in] */ ULONG celt);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Reset )( 
            IEnumFullIDList __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Clone )( 
            IEnumFullIDList __RPC_FAR * This,
            /* [out] */ IEnumFullIDList __RPC_FAR *__RPC_FAR *ppenum);
        
        END_INTERFACE
    } IEnumFullIDListVtbl;

    interface IEnumFullIDList
    {
        CONST_VTBL struct IEnumFullIDListVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumFullIDList_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IEnumFullIDList_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IEnumFullIDList_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IEnumFullIDList_Next(This,celt,rgelt,pceltFetched)	\
    (This)->lpVtbl -> Next(This,celt,rgelt,pceltFetched)

#define IEnumFullIDList_Skip(This,celt)	\
    (This)->lpVtbl -> Skip(This,celt)

#define IEnumFullIDList_Reset(This)	\
    (This)->lpVtbl -> Reset(This)

#define IEnumFullIDList_Clone(This,ppenum)	\
    (This)->lpVtbl -> Clone(This,ppenum)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IEnumFullIDList_Next_Proxy( 
    IEnumFullIDList __RPC_FAR * This,
    /* [in] */ ULONG celt,
    /* [length_is][size_is][out] */ PIDLIST_ABSOLUTE __RPC_FAR *rgelt,
    /* [out] */ ULONG __RPC_FAR *pceltFetched);


void __RPC_STUB IEnumFullIDList_Next_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumFullIDList_Skip_Proxy( 
    IEnumFullIDList __RPC_FAR * This,
    /* [in] */ ULONG celt);


void __RPC_STUB IEnumFullIDList_Skip_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumFullIDList_Reset_Proxy( 
    IEnumFullIDList __RPC_FAR * This);


void __RPC_STUB IEnumFullIDList_Reset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumFullIDList_Clone_Proxy( 
    IEnumFullIDList __RPC_FAR * This,
    /* [out] */ IEnumFullIDList __RPC_FAR *__RPC_FAR *ppenum);


void __RPC_STUB IEnumFullIDList_Clone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IEnumFullIDList_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0300 */
/* [local] */ 

typedef 
enum tagSHGDN
    {	SHGDN_NORMAL	= 0,
	SHGDN_INFOLDER	= 0x1,
	SHGDN_FOREDITING	= 0x1000,
	SHGDN_FORADDRESSBAR	= 0x4000,
	SHGDN_FORPARSING	= 0x8000
    }	SHGNO;

typedef DWORD SHGDNF;

typedef 
enum tagSHCONTF
    {	SHCONTF_FOLDERS	= 0x20,
	SHCONTF_NONFOLDERS	= 0x40,
	SHCONTF_INCLUDEHIDDEN	= 0x80,
	SHCONTF_INIT_ON_FIRST_NEXT	= 0x100,
	SHCONTF_NETPRINTERSRCH	= 0x200,
	SHCONTF_SHAREABLE	= 0x400,
	SHCONTF_STORAGE	= 0x800,
	SHCONTF_FASTITEMS	= 0x2000,
	SHCONTF_FLATLIST	= 0x4000,
	SHCONTF_ENABLE_ASYNC	= 0x8000
    }	SHCONT;

typedef DWORD SHCONTF;

#define SHCIDS_ALLFIELDS        0x80000000L
#define SHCIDS_CANONICALONLY    0x10000000L
#define SHCIDS_BITMASK          0xFFFF0000L
#define SHCIDS_COLUMNMASK       0x0000FFFFL
#define SFGAO_CANCOPY           DROPEFFECT_COPY // Objects can be copied    (0x1)
#define SFGAO_CANMOVE           DROPEFFECT_MOVE // Objects can be moved     (0x2)
#define SFGAO_CANLINK           DROPEFFECT_LINK // Objects can be linked    (0x4)
#define SFGAO_STORAGE           0x00000008L     // supports BindToObject(IID_IStorage)
#define SFGAO_CANRENAME         0x00000010L     // Objects can be renamed
#define SFGAO_CANDELETE         0x00000020L     // Objects can be deleted
#define SFGAO_HASPROPSHEET      0x00000040L     // Objects have property sheets
#define SFGAO_DROPTARGET        0x00000100L     // Objects are drop target
#define SFGAO_CAPABILITYMASK    0x00000177L
#define SFGAO_ENCRYPTED         0x00002000L     // Object is encrypted (use alt color)
#define SFGAO_ISSLOW            0x00004000L     // 'Slow' object
#define SFGAO_GHOSTED           0x00008000L     // Ghosted icon
#define SFGAO_LINK              0x00010000L     // Shortcut (link)
#define SFGAO_SHARE             0x00020000L     // Shared
#define SFGAO_READONLY          0x00040000L     // Read-only
#define SFGAO_HIDDEN            0x00080000L     // Hidden object
#define SFGAO_DISPLAYATTRMASK   0x000FC000L
#define SFGAO_FILESYSANCESTOR   0x10000000L     // May contain children with SFGAO_FILESYSTEM
#define SFGAO_FOLDER            0x20000000L     // Support BindToObject(IID_IShellFolder)
#define SFGAO_FILESYSTEM        0x40000000L     // Is a win32 file system object (file/folder/root)
#define SFGAO_HASSUBFOLDER      0x80000000L     // May contain children with SFGAO_FOLDER (may be slow)
#define SFGAO_CONTENTSMASK      0x80000000L
#define SFGAO_VALIDATE          0x01000000L     // Invalidate cached information (may be slow)
#define SFGAO_REMOVABLE         0x02000000L     // Is this removeable media?
#define SFGAO_COMPRESSED        0x04000000L     // Object is compressed (use alt color)
#define SFGAO_BROWSABLE         0x08000000L     // Supports IShellFolder, but only implements CreateViewObject() (non-folder view)
#define SFGAO_NONENUMERATED     0x00100000L     // Is a non-enumerated object (should be hidden)
#define SFGAO_NEWCONTENT        0x00200000L     // Should show bold in explorer tree
#define SFGAO_CANMONIKER        0x00400000L     // Obsolete
#define SFGAO_HASSTORAGE        0x00400000L     // Obsolete
#define SFGAO_STREAM            0x00400000L     // Supports BindToObject(IID_IStream)
#define SFGAO_STORAGEANCESTOR   0x00800000L     // May contain children with SFGAO_STORAGE or SFGAO_STREAM
#define SFGAO_STORAGECAPMASK    0x70C50008L     // For determining storage capabilities, ie for open/save semantics
#define SFGAO_PKEYSFGAOMASK     0x81044010L     // Attributes that are masked out for PKEY_SFGAOFlags because they are considered to cause slow calculations or lack context (SFGAO_VALIDATE | SFGAO_ISSLOW | SFGAO_HASSUBFOLDER and others)
typedef ULONG SFGAOF;

#define STR_BIND_FORCE_FOLDER_SHORTCUT_RESOLVE   L"Force Folder Shortcut Resolve"
#define STR_AVOID_DRIVE_RESTRICTION_POLICY   L"Avoid Drive Restriction Policy"
#define STR_AVOID_DRIVE_RESTRICTION_POLICY   L"Avoid Drive Restriction Policy"
#define STR_SKIP_BINDING_CLSID      L"Skip Binding CLSID"
#define STR_PARSE_PREFER_FOLDER_BROWSING     L"Parse Prefer Folder Browsing"
#define STR_DONT_PARSE_RELATIVE              L"Don't Parse Relative"
#define STR_PARSE_TRANSLATE_ALIASES          L"Parse Translate Aliases"
#define STR_PARSE_SKIP_NET_CACHE             L"Skip Net Resource Cache"
#define STR_PARSE_SHELL_PROTOCOL_TO_FILE_OBJECTS     L"Parse Shell Protocol To File Objects"
#if (_WIN32_IE >= 0x0700)
#define STR_TRACK_CLSID                      L"Track the CLSID"
#define STR_INTERNAL_NAVIGATE                L"Internal Navigation"
#define STR_PARSE_PROPERTYSTORE             L"DelegateNamedProperties"
#define STR_NO_VALIDATE_FILENAME_CHARS      L"NoValidateFilenameChars"
#define STR_IFILTER_LOAD_DEFINED_FILTER   L"Only bind registered persistent handlers"
#define STR_IFILTER_FORCE_TEXT_FILTER_FALLBACK   L"Always bind persistent handlers"
#define STR_BIND_DELEGATE_CREATE_OBJECT L"Delegate Object Creation"
#define STR_PARSE_ALLOW_INTERNET_SHELL_FOLDERS   L"Allow binding to Internet shell folder handlers and negate STR_PARSE_PREFER_WEB_BROWSING"
#define STR_PARSE_PREFER_WEB_BROWSING   L"Do not bind to Internet shell folder handlers"
#define STR_PARSE_SHOW_NET_DIAGNOSTICS_UI  L"Show network diagnostics UI"
#define STR_PARSE_DONT_REQUIRE_VALIDATED_URLS  L"Do not require validated URLs"
#endif // _WIN32_IE >= 0x0700



extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0300_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0300_v0_0_s_ifspec;

#ifndef __IShellFolder_INTERFACE_DEFINED__
#define __IShellFolder_INTERFACE_DEFINED__

/* interface IShellFolder */
/* [unique][object][uuid] */ 






EXTERN_C const IID IID_IShellFolder;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000214E6-0000-0000-C000-000000000046")
    IShellFolder : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE ParseDisplayName( 
            /* [unique][in] */ HWND hwnd,
            /* [unique][in] */ IBindCtx __RPC_FAR *pbc,
            /* [string][in] */ LPWSTR pszDisplayName,
            /* [unique][out][in] */ ULONG __RPC_FAR *pchEaten,
            /* [out] */ PIDLIST_RELATIVE __RPC_FAR *ppidl,
            /* [unique][out][in] */ ULONG __RPC_FAR *pdwAttributes) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnumObjects( 
            /* [unique][in] */ HWND hwnd,
            /* [in] */ SHCONTF grfFlags,
            /* [out] */ IEnumIDList __RPC_FAR *__RPC_FAR *ppenumIDList) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE BindToObject( 
            /* [in] */ PCUIDLIST_RELATIVE pidl,
            /* [unique][in] */ IBindCtx __RPC_FAR *pbc,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE BindToStorage( 
            /* [in] */ PCUIDLIST_RELATIVE pidl,
            /* [unique][in] */ IBindCtx __RPC_FAR *pbc,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CompareIDs( 
            /* [in] */ LPARAM lParam,
            /* [in] */ PCUIDLIST_RELATIVE pidl1,
            /* [in] */ PCUIDLIST_RELATIVE pidl2) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateViewObject( 
            /* [unique][in] */ HWND hwndOwner,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAttributesOf( 
            /* [in] */ UINT cidl,
            /* [unique][size_is][in] */ PCUITEMID_CHILD_ARRAY apidl,
            /* [out][in] */ SFGAOF __RPC_FAR *rgfInOut) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetUIObjectOf( 
            /* [unique][in] */ HWND hwndOwner,
            /* [in] */ UINT cidl,
            /* [unique][size_is][in] */ PCUITEMID_CHILD_ARRAY apidl,
            /* [in] */ REFIID riid,
            /* [unique][out][in] */ UINT __RPC_FAR *rgfReserved,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDisplayNameOf( 
            /* [in] */ PCUITEMID_CHILD pidl,
            /* [in] */ SHGDNF uFlags,
            /* [out] */ STRRET __RPC_FAR *pName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetNameOf( 
            /* [unique][in] */ HWND hwnd,
            /* [in] */ PCUITEMID_CHILD pidl,
            /* [string][in] */ LPCWSTR pszName,
            /* [in] */ SHGDNF uFlags,
            /* [out] */ PITEMID_CHILD __RPC_FAR *ppidlOut) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IShellFolderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IShellFolder __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IShellFolder __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IShellFolder __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ParseDisplayName )( 
            IShellFolder __RPC_FAR * This,
            /* [unique][in] */ HWND hwnd,
            /* [unique][in] */ IBindCtx __RPC_FAR *pbc,
            /* [string][in] */ LPWSTR pszDisplayName,
            /* [unique][out][in] */ ULONG __RPC_FAR *pchEaten,
            /* [out] */ PIDLIST_RELATIVE __RPC_FAR *ppidl,
            /* [unique][out][in] */ ULONG __RPC_FAR *pdwAttributes);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *EnumObjects )( 
            IShellFolder __RPC_FAR * This,
            /* [unique][in] */ HWND hwnd,
            /* [in] */ SHCONTF grfFlags,
            /* [out] */ IEnumIDList __RPC_FAR *__RPC_FAR *ppenumIDList);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *BindToObject )( 
            IShellFolder __RPC_FAR * This,
            /* [in] */ PCUIDLIST_RELATIVE pidl,
            /* [unique][in] */ IBindCtx __RPC_FAR *pbc,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *BindToStorage )( 
            IShellFolder __RPC_FAR * This,
            /* [in] */ PCUIDLIST_RELATIVE pidl,
            /* [unique][in] */ IBindCtx __RPC_FAR *pbc,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CompareIDs )( 
            IShellFolder __RPC_FAR * This,
            /* [in] */ LPARAM lParam,
            /* [in] */ PCUIDLIST_RELATIVE pidl1,
            /* [in] */ PCUIDLIST_RELATIVE pidl2);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CreateViewObject )( 
            IShellFolder __RPC_FAR * This,
            /* [unique][in] */ HWND hwndOwner,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetAttributesOf )( 
            IShellFolder __RPC_FAR * This,
            /* [in] */ UINT cidl,
            /* [unique][size_is][in] */ PCUITEMID_CHILD_ARRAY apidl,
            /* [out][in] */ SFGAOF __RPC_FAR *rgfInOut);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetUIObjectOf )( 
            IShellFolder __RPC_FAR * This,
            /* [unique][in] */ HWND hwndOwner,
            /* [in] */ UINT cidl,
            /* [unique][size_is][in] */ PCUITEMID_CHILD_ARRAY apidl,
            /* [in] */ REFIID riid,
            /* [unique][out][in] */ UINT __RPC_FAR *rgfReserved,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetDisplayNameOf )( 
            IShellFolder __RPC_FAR * This,
            /* [in] */ PCUITEMID_CHILD pidl,
            /* [in] */ SHGDNF uFlags,
            /* [out] */ STRRET __RPC_FAR *pName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetNameOf )( 
            IShellFolder __RPC_FAR * This,
            /* [unique][in] */ HWND hwnd,
            /* [in] */ PCUITEMID_CHILD pidl,
            /* [string][in] */ LPCWSTR pszName,
            /* [in] */ SHGDNF uFlags,
            /* [out] */ PITEMID_CHILD __RPC_FAR *ppidlOut);
        
        END_INTERFACE
    } IShellFolderVtbl;

    interface IShellFolder
    {
        CONST_VTBL struct IShellFolderVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IShellFolder_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IShellFolder_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IShellFolder_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IShellFolder_ParseDisplayName(This,hwnd,pbc,pszDisplayName,pchEaten,ppidl,pdwAttributes)	\
    (This)->lpVtbl -> ParseDisplayName(This,hwnd,pbc,pszDisplayName,pchEaten,ppidl,pdwAttributes)

#define IShellFolder_EnumObjects(This,hwnd,grfFlags,ppenumIDList)	\
    (This)->lpVtbl -> EnumObjects(This,hwnd,grfFlags,ppenumIDList)

#define IShellFolder_BindToObject(This,pidl,pbc,riid,ppv)	\
    (This)->lpVtbl -> BindToObject(This,pidl,pbc,riid,ppv)

#define IShellFolder_BindToStorage(This,pidl,pbc,riid,ppv)	\
    (This)->lpVtbl -> BindToStorage(This,pidl,pbc,riid,ppv)

#define IShellFolder_CompareIDs(This,lParam,pidl1,pidl2)	\
    (This)->lpVtbl -> CompareIDs(This,lParam,pidl1,pidl2)

#define IShellFolder_CreateViewObject(This,hwndOwner,riid,ppv)	\
    (This)->lpVtbl -> CreateViewObject(This,hwndOwner,riid,ppv)

#define IShellFolder_GetAttributesOf(This,cidl,apidl,rgfInOut)	\
    (This)->lpVtbl -> GetAttributesOf(This,cidl,apidl,rgfInOut)

#define IShellFolder_GetUIObjectOf(This,hwndOwner,cidl,apidl,riid,rgfReserved,ppv)	\
    (This)->lpVtbl -> GetUIObjectOf(This,hwndOwner,cidl,apidl,riid,rgfReserved,ppv)

#define IShellFolder_GetDisplayNameOf(This,pidl,uFlags,pName)	\
    (This)->lpVtbl -> GetDisplayNameOf(This,pidl,uFlags,pName)

#define IShellFolder_SetNameOf(This,hwnd,pidl,pszName,uFlags,ppidlOut)	\
    (This)->lpVtbl -> SetNameOf(This,hwnd,pidl,pszName,uFlags,ppidlOut)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IShellFolder_ParseDisplayName_Proxy( 
    IShellFolder __RPC_FAR * This,
    /* [unique][in] */ HWND hwnd,
    /* [unique][in] */ IBindCtx __RPC_FAR *pbc,
    /* [string][in] */ LPWSTR pszDisplayName,
    /* [unique][out][in] */ ULONG __RPC_FAR *pchEaten,
    /* [out] */ PIDLIST_RELATIVE __RPC_FAR *ppidl,
    /* [unique][out][in] */ ULONG __RPC_FAR *pdwAttributes);


void __RPC_STUB IShellFolder_ParseDisplayName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellFolder_EnumObjects_Proxy( 
    IShellFolder __RPC_FAR * This,
    /* [unique][in] */ HWND hwnd,
    /* [in] */ SHCONTF grfFlags,
    /* [out] */ IEnumIDList __RPC_FAR *__RPC_FAR *ppenumIDList);


void __RPC_STUB IShellFolder_EnumObjects_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellFolder_BindToObject_Proxy( 
    IShellFolder __RPC_FAR * This,
    /* [in] */ PCUIDLIST_RELATIVE pidl,
    /* [unique][in] */ IBindCtx __RPC_FAR *pbc,
    /* [in] */ REFIID riid,
    /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);


void __RPC_STUB IShellFolder_BindToObject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellFolder_BindToStorage_Proxy( 
    IShellFolder __RPC_FAR * This,
    /* [in] */ PCUIDLIST_RELATIVE pidl,
    /* [unique][in] */ IBindCtx __RPC_FAR *pbc,
    /* [in] */ REFIID riid,
    /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);


void __RPC_STUB IShellFolder_BindToStorage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellFolder_CompareIDs_Proxy( 
    IShellFolder __RPC_FAR * This,
    /* [in] */ LPARAM lParam,
    /* [in] */ PCUIDLIST_RELATIVE pidl1,
    /* [in] */ PCUIDLIST_RELATIVE pidl2);


void __RPC_STUB IShellFolder_CompareIDs_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellFolder_CreateViewObject_Proxy( 
    IShellFolder __RPC_FAR * This,
    /* [unique][in] */ HWND hwndOwner,
    /* [in] */ REFIID riid,
    /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);


void __RPC_STUB IShellFolder_CreateViewObject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellFolder_GetAttributesOf_Proxy( 
    IShellFolder __RPC_FAR * This,
    /* [in] */ UINT cidl,
    /* [unique][size_is][in] */ PCUITEMID_CHILD_ARRAY apidl,
    /* [out][in] */ SFGAOF __RPC_FAR *rgfInOut);


void __RPC_STUB IShellFolder_GetAttributesOf_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellFolder_GetUIObjectOf_Proxy( 
    IShellFolder __RPC_FAR * This,
    /* [unique][in] */ HWND hwndOwner,
    /* [in] */ UINT cidl,
    /* [unique][size_is][in] */ PCUITEMID_CHILD_ARRAY apidl,
    /* [in] */ REFIID riid,
    /* [unique][out][in] */ UINT __RPC_FAR *rgfReserved,
    /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);


void __RPC_STUB IShellFolder_GetUIObjectOf_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellFolder_GetDisplayNameOf_Proxy( 
    IShellFolder __RPC_FAR * This,
    /* [in] */ PCUITEMID_CHILD pidl,
    /* [in] */ SHGDNF uFlags,
    /* [out] */ STRRET __RPC_FAR *pName);


void __RPC_STUB IShellFolder_GetDisplayNameOf_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellFolder_SetNameOf_Proxy( 
    IShellFolder __RPC_FAR * This,
    /* [unique][in] */ HWND hwnd,
    /* [in] */ PCUITEMID_CHILD pidl,
    /* [string][in] */ LPCWSTR pszName,
    /* [in] */ SHGDNF uFlags,
    /* [out] */ PITEMID_CHILD __RPC_FAR *ppidlOut);


void __RPC_STUB IShellFolder_SetNameOf_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IShellFolder_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0301 */
/* [local] */ 

typedef IShellFolder __RPC_FAR *LPSHELLFOLDER;

typedef struct tagEXTRASEARCH
    {
    GUID guidSearch;
    WCHAR wszFriendlyName[ 80 ];
    WCHAR wszUrl[ 2084 ];
    }	EXTRASEARCH;

typedef struct tagEXTRASEARCH __RPC_FAR *LPEXTRASEARCH;



extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0301_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0301_v0_0_s_ifspec;

#ifndef __IEnumExtraSearch_INTERFACE_DEFINED__
#define __IEnumExtraSearch_INTERFACE_DEFINED__

/* interface IEnumExtraSearch */
/* [unique][object][uuid] */ 


EXTERN_C const IID IID_IEnumExtraSearch;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0E700BE1-9DB6-11d1-A1CE-00C04FD75D13")
    IEnumExtraSearch : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Next( 
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ EXTRASEARCH __RPC_FAR *rgelt,
            /* [out] */ ULONG __RPC_FAR *pceltFetched) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Skip( 
            /* [in] */ ULONG celt) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clone( 
            /* [out] */ IEnumExtraSearch __RPC_FAR *__RPC_FAR *ppenum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumExtraSearchVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IEnumExtraSearch __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IEnumExtraSearch __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IEnumExtraSearch __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Next )( 
            IEnumExtraSearch __RPC_FAR * This,
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ EXTRASEARCH __RPC_FAR *rgelt,
            /* [out] */ ULONG __RPC_FAR *pceltFetched);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Skip )( 
            IEnumExtraSearch __RPC_FAR * This,
            /* [in] */ ULONG celt);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Reset )( 
            IEnumExtraSearch __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Clone )( 
            IEnumExtraSearch __RPC_FAR * This,
            /* [out] */ IEnumExtraSearch __RPC_FAR *__RPC_FAR *ppenum);
        
        END_INTERFACE
    } IEnumExtraSearchVtbl;

    interface IEnumExtraSearch
    {
        CONST_VTBL struct IEnumExtraSearchVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumExtraSearch_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IEnumExtraSearch_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IEnumExtraSearch_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IEnumExtraSearch_Next(This,celt,rgelt,pceltFetched)	\
    (This)->lpVtbl -> Next(This,celt,rgelt,pceltFetched)

#define IEnumExtraSearch_Skip(This,celt)	\
    (This)->lpVtbl -> Skip(This,celt)

#define IEnumExtraSearch_Reset(This)	\
    (This)->lpVtbl -> Reset(This)

#define IEnumExtraSearch_Clone(This,ppenum)	\
    (This)->lpVtbl -> Clone(This,ppenum)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IEnumExtraSearch_Next_Proxy( 
    IEnumExtraSearch __RPC_FAR * This,
    /* [in] */ ULONG celt,
    /* [length_is][size_is][out] */ EXTRASEARCH __RPC_FAR *rgelt,
    /* [out] */ ULONG __RPC_FAR *pceltFetched);


void __RPC_STUB IEnumExtraSearch_Next_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumExtraSearch_Skip_Proxy( 
    IEnumExtraSearch __RPC_FAR * This,
    /* [in] */ ULONG celt);


void __RPC_STUB IEnumExtraSearch_Skip_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumExtraSearch_Reset_Proxy( 
    IEnumExtraSearch __RPC_FAR * This);


void __RPC_STUB IEnumExtraSearch_Reset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumExtraSearch_Clone_Proxy( 
    IEnumExtraSearch __RPC_FAR * This,
    /* [out] */ IEnumExtraSearch __RPC_FAR *__RPC_FAR *ppenum);


void __RPC_STUB IEnumExtraSearch_Clone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IEnumExtraSearch_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0302 */
/* [local] */ 

typedef IEnumExtraSearch __RPC_FAR *LPENUMEXTRASEARCH;



extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0302_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0302_v0_0_s_ifspec;

#ifndef __IShellFolder2_INTERFACE_DEFINED__
#define __IShellFolder2_INTERFACE_DEFINED__

/* interface IShellFolder2 */
/* [unique][object][uuid] */ 


EXTERN_C const IID IID_IShellFolder2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("93F2F68C-1D1B-11d3-A30E-00C04F79ABD1")
    IShellFolder2 : public IShellFolder
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetDefaultSearchGUID( 
            /* [out] */ GUID __RPC_FAR *pguid) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnumSearches( 
            /* [out] */ IEnumExtraSearch __RPC_FAR *__RPC_FAR *ppenum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDefaultColumn( 
            /* [in] */ DWORD dwRes,
            /* [out] */ ULONG __RPC_FAR *pSort,
            /* [out] */ ULONG __RPC_FAR *pDisplay) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDefaultColumnState( 
            /* [in] */ UINT iColumn,
            /* [out] */ SHCOLSTATEF __RPC_FAR *pcsFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDetailsEx( 
            /* [in] */ PCUITEMID_CHILD pidl,
            /* [in] */ const SHCOLUMNID __RPC_FAR *pscid,
            /* [out] */ VARIANT __RPC_FAR *pv) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDetailsOf( 
            /* [unique][in] */ PCUITEMID_CHILD pidl,
            /* [in] */ UINT iColumn,
            /* [out] */ SHELLDETAILS __RPC_FAR *psd) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MapColumnToSCID( 
            /* [in] */ UINT iColumn,
            /* [out] */ SHCOLUMNID __RPC_FAR *pscid) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IShellFolder2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IShellFolder2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IShellFolder2 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IShellFolder2 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ParseDisplayName )( 
            IShellFolder2 __RPC_FAR * This,
            /* [unique][in] */ HWND hwnd,
            /* [unique][in] */ IBindCtx __RPC_FAR *pbc,
            /* [string][in] */ LPWSTR pszDisplayName,
            /* [unique][out][in] */ ULONG __RPC_FAR *pchEaten,
            /* [out] */ PIDLIST_RELATIVE __RPC_FAR *ppidl,
            /* [unique][out][in] */ ULONG __RPC_FAR *pdwAttributes);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *EnumObjects )( 
            IShellFolder2 __RPC_FAR * This,
            /* [unique][in] */ HWND hwnd,
            /* [in] */ SHCONTF grfFlags,
            /* [out] */ IEnumIDList __RPC_FAR *__RPC_FAR *ppenumIDList);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *BindToObject )( 
            IShellFolder2 __RPC_FAR * This,
            /* [in] */ PCUIDLIST_RELATIVE pidl,
            /* [unique][in] */ IBindCtx __RPC_FAR *pbc,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *BindToStorage )( 
            IShellFolder2 __RPC_FAR * This,
            /* [in] */ PCUIDLIST_RELATIVE pidl,
            /* [unique][in] */ IBindCtx __RPC_FAR *pbc,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CompareIDs )( 
            IShellFolder2 __RPC_FAR * This,
            /* [in] */ LPARAM lParam,
            /* [in] */ PCUIDLIST_RELATIVE pidl1,
            /* [in] */ PCUIDLIST_RELATIVE pidl2);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CreateViewObject )( 
            IShellFolder2 __RPC_FAR * This,
            /* [unique][in] */ HWND hwndOwner,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetAttributesOf )( 
            IShellFolder2 __RPC_FAR * This,
            /* [in] */ UINT cidl,
            /* [unique][size_is][in] */ PCUITEMID_CHILD_ARRAY apidl,
            /* [out][in] */ SFGAOF __RPC_FAR *rgfInOut);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetUIObjectOf )( 
            IShellFolder2 __RPC_FAR * This,
            /* [unique][in] */ HWND hwndOwner,
            /* [in] */ UINT cidl,
            /* [unique][size_is][in] */ PCUITEMID_CHILD_ARRAY apidl,
            /* [in] */ REFIID riid,
            /* [unique][out][in] */ UINT __RPC_FAR *rgfReserved,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetDisplayNameOf )( 
            IShellFolder2 __RPC_FAR * This,
            /* [in] */ PCUITEMID_CHILD pidl,
            /* [in] */ SHGDNF uFlags,
            /* [out] */ STRRET __RPC_FAR *pName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetNameOf )( 
            IShellFolder2 __RPC_FAR * This,
            /* [unique][in] */ HWND hwnd,
            /* [in] */ PCUITEMID_CHILD pidl,
            /* [string][in] */ LPCWSTR pszName,
            /* [in] */ SHGDNF uFlags,
            /* [out] */ PITEMID_CHILD __RPC_FAR *ppidlOut);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetDefaultSearchGUID )( 
            IShellFolder2 __RPC_FAR * This,
            /* [out] */ GUID __RPC_FAR *pguid);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *EnumSearches )( 
            IShellFolder2 __RPC_FAR * This,
            /* [out] */ IEnumExtraSearch __RPC_FAR *__RPC_FAR *ppenum);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetDefaultColumn )( 
            IShellFolder2 __RPC_FAR * This,
            /* [in] */ DWORD dwRes,
            /* [out] */ ULONG __RPC_FAR *pSort,
            /* [out] */ ULONG __RPC_FAR *pDisplay);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetDefaultColumnState )( 
            IShellFolder2 __RPC_FAR * This,
            /* [in] */ UINT iColumn,
            /* [out] */ SHCOLSTATEF __RPC_FAR *pcsFlags);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetDetailsEx )( 
            IShellFolder2 __RPC_FAR * This,
            /* [in] */ PCUITEMID_CHILD pidl,
            /* [in] */ const SHCOLUMNID __RPC_FAR *pscid,
            /* [out] */ VARIANT __RPC_FAR *pv);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetDetailsOf )( 
            IShellFolder2 __RPC_FAR * This,
            /* [unique][in] */ PCUITEMID_CHILD pidl,
            /* [in] */ UINT iColumn,
            /* [out] */ SHELLDETAILS __RPC_FAR *psd);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *MapColumnToSCID )( 
            IShellFolder2 __RPC_FAR * This,
            /* [in] */ UINT iColumn,
            /* [out] */ SHCOLUMNID __RPC_FAR *pscid);
        
        END_INTERFACE
    } IShellFolder2Vtbl;

    interface IShellFolder2
    {
        CONST_VTBL struct IShellFolder2Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IShellFolder2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IShellFolder2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IShellFolder2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IShellFolder2_ParseDisplayName(This,hwnd,pbc,pszDisplayName,pchEaten,ppidl,pdwAttributes)	\
    (This)->lpVtbl -> ParseDisplayName(This,hwnd,pbc,pszDisplayName,pchEaten,ppidl,pdwAttributes)

#define IShellFolder2_EnumObjects(This,hwnd,grfFlags,ppenumIDList)	\
    (This)->lpVtbl -> EnumObjects(This,hwnd,grfFlags,ppenumIDList)

#define IShellFolder2_BindToObject(This,pidl,pbc,riid,ppv)	\
    (This)->lpVtbl -> BindToObject(This,pidl,pbc,riid,ppv)

#define IShellFolder2_BindToStorage(This,pidl,pbc,riid,ppv)	\
    (This)->lpVtbl -> BindToStorage(This,pidl,pbc,riid,ppv)

#define IShellFolder2_CompareIDs(This,lParam,pidl1,pidl2)	\
    (This)->lpVtbl -> CompareIDs(This,lParam,pidl1,pidl2)

#define IShellFolder2_CreateViewObject(This,hwndOwner,riid,ppv)	\
    (This)->lpVtbl -> CreateViewObject(This,hwndOwner,riid,ppv)

#define IShellFolder2_GetAttributesOf(This,cidl,apidl,rgfInOut)	\
    (This)->lpVtbl -> GetAttributesOf(This,cidl,apidl,rgfInOut)

#define IShellFolder2_GetUIObjectOf(This,hwndOwner,cidl,apidl,riid,rgfReserved,ppv)	\
    (This)->lpVtbl -> GetUIObjectOf(This,hwndOwner,cidl,apidl,riid,rgfReserved,ppv)

#define IShellFolder2_GetDisplayNameOf(This,pidl,uFlags,pName)	\
    (This)->lpVtbl -> GetDisplayNameOf(This,pidl,uFlags,pName)

#define IShellFolder2_SetNameOf(This,hwnd,pidl,pszName,uFlags,ppidlOut)	\
    (This)->lpVtbl -> SetNameOf(This,hwnd,pidl,pszName,uFlags,ppidlOut)


#define IShellFolder2_GetDefaultSearchGUID(This,pguid)	\
    (This)->lpVtbl -> GetDefaultSearchGUID(This,pguid)

#define IShellFolder2_EnumSearches(This,ppenum)	\
    (This)->lpVtbl -> EnumSearches(This,ppenum)

#define IShellFolder2_GetDefaultColumn(This,dwRes,pSort,pDisplay)	\
    (This)->lpVtbl -> GetDefaultColumn(This,dwRes,pSort,pDisplay)

#define IShellFolder2_GetDefaultColumnState(This,iColumn,pcsFlags)	\
    (This)->lpVtbl -> GetDefaultColumnState(This,iColumn,pcsFlags)

#define IShellFolder2_GetDetailsEx(This,pidl,pscid,pv)	\
    (This)->lpVtbl -> GetDetailsEx(This,pidl,pscid,pv)

#define IShellFolder2_GetDetailsOf(This,pidl,iColumn,psd)	\
    (This)->lpVtbl -> GetDetailsOf(This,pidl,iColumn,psd)

#define IShellFolder2_MapColumnToSCID(This,iColumn,pscid)	\
    (This)->lpVtbl -> MapColumnToSCID(This,iColumn,pscid)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IShellFolder2_GetDefaultSearchGUID_Proxy( 
    IShellFolder2 __RPC_FAR * This,
    /* [out] */ GUID __RPC_FAR *pguid);


void __RPC_STUB IShellFolder2_GetDefaultSearchGUID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellFolder2_EnumSearches_Proxy( 
    IShellFolder2 __RPC_FAR * This,
    /* [out] */ IEnumExtraSearch __RPC_FAR *__RPC_FAR *ppenum);


void __RPC_STUB IShellFolder2_EnumSearches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellFolder2_GetDefaultColumn_Proxy( 
    IShellFolder2 __RPC_FAR * This,
    /* [in] */ DWORD dwRes,
    /* [out] */ ULONG __RPC_FAR *pSort,
    /* [out] */ ULONG __RPC_FAR *pDisplay);


void __RPC_STUB IShellFolder2_GetDefaultColumn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellFolder2_GetDefaultColumnState_Proxy( 
    IShellFolder2 __RPC_FAR * This,
    /* [in] */ UINT iColumn,
    /* [out] */ SHCOLSTATEF __RPC_FAR *pcsFlags);


void __RPC_STUB IShellFolder2_GetDefaultColumnState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellFolder2_GetDetailsEx_Proxy( 
    IShellFolder2 __RPC_FAR * This,
    /* [in] */ PCUITEMID_CHILD pidl,
    /* [in] */ const SHCOLUMNID __RPC_FAR *pscid,
    /* [out] */ VARIANT __RPC_FAR *pv);


void __RPC_STUB IShellFolder2_GetDetailsEx_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellFolder2_GetDetailsOf_Proxy( 
    IShellFolder2 __RPC_FAR * This,
    /* [unique][in] */ PCUITEMID_CHILD pidl,
    /* [in] */ UINT iColumn,
    /* [out] */ SHELLDETAILS __RPC_FAR *psd);


void __RPC_STUB IShellFolder2_GetDetailsOf_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellFolder2_MapColumnToSCID_Proxy( 
    IShellFolder2 __RPC_FAR * This,
    /* [in] */ UINT iColumn,
    /* [out] */ SHCOLUMNID __RPC_FAR *pscid);


void __RPC_STUB IShellFolder2_MapColumnToSCID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IShellFolder2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0303 */
/* [local] */ 

typedef char __RPC_FAR *LPVIEWSETTINGS;

typedef /* [v1_enum] */ 
enum tagFOLDERFLAGS
    {	FWF_AUTOARRANGE	= 0x1,
	FWF_ABBREVIATEDNAMES	= 0x2,
	FWF_SNAPTOGRID	= 0x4,
	FWF_OWNERDATA	= 0x8,
	FWF_BESTFITWINDOW	= 0x10,
	FWF_DESKTOP	= 0x20,
	FWF_SINGLESEL	= 0x40,
	FWF_NOSUBFOLDERS	= 0x80,
	FWF_TRANSPARENT	= 0x100,
	FWF_NOCLIENTEDGE	= 0x200,
	FWF_NOSCROLL	= 0x400,
	FWF_ALIGNLEFT	= 0x800,
	FWF_NOICONS	= 0x1000,
	FWF_SHOWSELALWAYS	= 0x2000,
	FWF_NOVISIBLE	= 0x4000,
	FWF_SINGLECLICKACTIVATE	= 0x8000,
	FWF_NOWEBVIEW	= 0x10000,
	FWF_HIDEFILENAMES	= 0x20000,
	FWF_CHECKSELECT	= 0x40000,
	FWF_NOENUMREFRESH	= 0x80000,
	FWF_NOGROUPING	= 0x100000,
	FWF_FULLROWSELECT	= 0x200000,
	FWF_NOFILTERS	= 0x400000,
	FWF_NOCOLUMNHEADER	= 0x800000,
	FWF_NOHEADERINALLVIEWS	= 0x1000000,
	FWF_EXTENDEDTILES	= 0x2000000,
	FWF_TRICHECKSELECT	= 0x4000000,
	FWF_AUTOCHECKSELECT	= 0x8000000,
	FWF_NOBROWSERVIEWSTATE	= 0x10000000,
	FWF_SUBSETGROUPS	= 0x20000000,
	FWF_USESEARCHFOLDER	= 0x40000000,
	FWF_ALLOWRTLREADING	= 0x80000000
    }	FOLDERFLAGS;

typedef /* [v1_enum] */ 
enum tagFOLDERVIEWMODE
    {	FVM_AUTO	= -1,
	FVM_FIRST	= 1,
	FVM_ICON	= 1,
	FVM_SMALLICON	= 2,
	FVM_LIST	= 3,
	FVM_DETAILS	= 4,
	FVM_THUMBNAIL	= 5,
	FVM_TILE	= 6,
	FVM_THUMBSTRIP	= 7,
	FVM_LAST	= 7
    }	FOLDERVIEWMODE;

#if (NTDDI_VERSION >= NTDDI_LONGHORN)
typedef /* [v1_enum] */ 
enum tagFOLDERLOGICALVIEWMODE
    {	FLVM_UNSPECIFIED	= -1,
	FLVM_FIRST	= 1,
	FLVM_DETAILS	= 1,
	FLVM_TILES	= 2,
	FLVM_ICONS	= 3,
	FLVM_LAST	= 3
    }	FOLDERLOGICALVIEWMODE;

#endif  // NTDDI_LONGHORN
typedef struct tagFOLDERSETTINGS
    {
    UINT ViewMode;
    UINT fFlags;
    }	FOLDERSETTINGS;

typedef FOLDERSETTINGS __RPC_FAR *LPFOLDERSETTINGS;

typedef const FOLDERSETTINGS __RPC_FAR *LPCFOLDERSETTINGS;

typedef FOLDERSETTINGS __RPC_FAR *PFOLDERSETTINGS;

#define SVSI_DESELECT       0x00000000
#define SVSI_SELECT         0x00000001
#define SVSI_EDIT           0x00000003  // includes select
#define SVSI_DESELECTOTHERS 0x00000004
#define SVSI_ENSUREVISIBLE  0x00000008
#define SVSI_FOCUSED        0x00000010
#define SVSI_TRANSLATEPT    0x00000020
#define SVSI_SELECTIONMARK  0x00000040
#define SVSI_POSITIONITEM   0x00000080
#define SVSI_CHECK          0x00000100
#define SVSI_CHECK2         0x00000200
#define SVSI_KEYBOARDSELECT 0x00000401  // includes select
#define SVSI_NOMOVEITEM     0x20000000 //;internal
#define SVSI_NOTAKEFOCUS    0x40000000
#define SVSI_NOSTATECHANGE  0x80000000
typedef UINT SVSIF;

/* [v1_enum] */ 
enum tagSVGIO
    {	SVGIO_BACKGROUND	= 0,
	SVGIO_SELECTION	= 0x1,
	SVGIO_ALLVIEW	= 0x2,
	SVGIO_CHECKED	= 0x3,
	SVGIO_TYPE_MASK	= 0xf,
	SVGIO_FLAG_VIEWORDER	= 0x80000000
    };
typedef int SVGIO;

typedef /* [v1_enum] */ 
enum tagSVUIA_STATUS
    {	SVUIA_DEACTIVATE	= 0,
	SVUIA_ACTIVATE_NOFOCUS	= 1,
	SVUIA_ACTIVATE_FOCUS	= 2,
	SVUIA_INPLACEACTIVATE	= 3
    }	SVUIA_STATUS;

#ifdef _FIX_ENABLEMODELESS_CONFLICT
#define    EnableModeless EnableModelessSV
#endif
#ifdef _NEVER_
typedef LPARAM LPFNSVADDPROPSHEETPAGE;

#else //!_NEVER_
#include <prsht.h>
typedef LPFNADDPROPSHEETPAGE LPFNSVADDPROPSHEETPAGE;
#endif //_NEVER_



extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0303_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0303_v0_0_s_ifspec;

#ifndef __IShellView_INTERFACE_DEFINED__
#define __IShellView_INTERFACE_DEFINED__

/* interface IShellView */
/* [unique][object][uuid] */ 

typedef IShellView __RPC_FAR *LPSHELLVIEW;


EXTERN_C const IID IID_IShellView;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000214E3-0000-0000-C000-000000000046")
    IShellView : public IOleWindow
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE TranslateAccelerator( 
            /* [in] */ MSG __RPC_FAR *pmsg) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnableModeless( 
            /* [in] */ BOOL fEnable) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UIActivate( 
            /* [in] */ UINT uState) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Refresh( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateViewWindow( 
            /* [unique][in] */ IShellView __RPC_FAR *psvPrevious,
            /* [in] */ LPCFOLDERSETTINGS pfs,
            /* [in] */ IShellBrowser __RPC_FAR *psb,
            /* [in] */ RECT __RPC_FAR *prcView,
            /* [out] */ HWND __RPC_FAR *phWnd) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DestroyViewWindow( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCurrentInfo( 
            /* [out] */ LPFOLDERSETTINGS pfs) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE AddPropertySheetPages( 
            /* [in] */ DWORD dwReserved,
            /* [in] */ LPFNSVADDPROPSHEETPAGE pfn,
            /* [in] */ LPARAM lparam) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SaveViewState( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SelectItem( 
            /* [unique][in] */ PCUITEMID_CHILD pidlItem,
            /* [in] */ SVSIF uFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetItemObject( 
            /* [in] */ UINT uItem,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IShellViewVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IShellView __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IShellView __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IShellView __RPC_FAR * This);
        
        /* [input_sync] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetWindow )( 
            IShellView __RPC_FAR * This,
            /* [out] */ HWND __RPC_FAR *phwnd);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ContextSensitiveHelp )( 
            IShellView __RPC_FAR * This,
            /* [in] */ BOOL fEnterMode);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *TranslateAccelerator )( 
            IShellView __RPC_FAR * This,
            /* [in] */ MSG __RPC_FAR *pmsg);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *EnableModeless )( 
            IShellView __RPC_FAR * This,
            /* [in] */ BOOL fEnable);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *UIActivate )( 
            IShellView __RPC_FAR * This,
            /* [in] */ UINT uState);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Refresh )( 
            IShellView __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CreateViewWindow )( 
            IShellView __RPC_FAR * This,
            /* [unique][in] */ IShellView __RPC_FAR *psvPrevious,
            /* [in] */ LPCFOLDERSETTINGS pfs,
            /* [in] */ IShellBrowser __RPC_FAR *psb,
            /* [in] */ RECT __RPC_FAR *prcView,
            /* [out] */ HWND __RPC_FAR *phWnd);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DestroyViewWindow )( 
            IShellView __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCurrentInfo )( 
            IShellView __RPC_FAR * This,
            /* [out] */ LPFOLDERSETTINGS pfs);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AddPropertySheetPages )( 
            IShellView __RPC_FAR * This,
            /* [in] */ DWORD dwReserved,
            /* [in] */ LPFNSVADDPROPSHEETPAGE pfn,
            /* [in] */ LPARAM lparam);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SaveViewState )( 
            IShellView __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SelectItem )( 
            IShellView __RPC_FAR * This,
            /* [unique][in] */ PCUITEMID_CHILD pidlItem,
            /* [in] */ SVSIF uFlags);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetItemObject )( 
            IShellView __RPC_FAR * This,
            /* [in] */ UINT uItem,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);
        
        END_INTERFACE
    } IShellViewVtbl;

    interface IShellView
    {
        CONST_VTBL struct IShellViewVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IShellView_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IShellView_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IShellView_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IShellView_GetWindow(This,phwnd)	\
    (This)->lpVtbl -> GetWindow(This,phwnd)

#define IShellView_ContextSensitiveHelp(This,fEnterMode)	\
    (This)->lpVtbl -> ContextSensitiveHelp(This,fEnterMode)


#define IShellView_TranslateAccelerator(This,pmsg)	\
    (This)->lpVtbl -> TranslateAccelerator(This,pmsg)

#define IShellView_EnableModeless(This,fEnable)	\
    (This)->lpVtbl -> EnableModeless(This,fEnable)

#define IShellView_UIActivate(This,uState)	\
    (This)->lpVtbl -> UIActivate(This,uState)

#define IShellView_Refresh(This)	\
    (This)->lpVtbl -> Refresh(This)

#define IShellView_CreateViewWindow(This,psvPrevious,pfs,psb,prcView,phWnd)	\
    (This)->lpVtbl -> CreateViewWindow(This,psvPrevious,pfs,psb,prcView,phWnd)

#define IShellView_DestroyViewWindow(This)	\
    (This)->lpVtbl -> DestroyViewWindow(This)

#define IShellView_GetCurrentInfo(This,pfs)	\
    (This)->lpVtbl -> GetCurrentInfo(This,pfs)

#define IShellView_AddPropertySheetPages(This,dwReserved,pfn,lparam)	\
    (This)->lpVtbl -> AddPropertySheetPages(This,dwReserved,pfn,lparam)

#define IShellView_SaveViewState(This)	\
    (This)->lpVtbl -> SaveViewState(This)

#define IShellView_SelectItem(This,pidlItem,uFlags)	\
    (This)->lpVtbl -> SelectItem(This,pidlItem,uFlags)

#define IShellView_GetItemObject(This,uItem,riid,ppv)	\
    (This)->lpVtbl -> GetItemObject(This,uItem,riid,ppv)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IShellView_TranslateAccelerator_Proxy( 
    IShellView __RPC_FAR * This,
    /* [in] */ MSG __RPC_FAR *pmsg);


void __RPC_STUB IShellView_TranslateAccelerator_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellView_EnableModeless_Proxy( 
    IShellView __RPC_FAR * This,
    /* [in] */ BOOL fEnable);


void __RPC_STUB IShellView_EnableModeless_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellView_UIActivate_Proxy( 
    IShellView __RPC_FAR * This,
    /* [in] */ UINT uState);


void __RPC_STUB IShellView_UIActivate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellView_Refresh_Proxy( 
    IShellView __RPC_FAR * This);


void __RPC_STUB IShellView_Refresh_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellView_CreateViewWindow_Proxy( 
    IShellView __RPC_FAR * This,
    /* [unique][in] */ IShellView __RPC_FAR *psvPrevious,
    /* [in] */ LPCFOLDERSETTINGS pfs,
    /* [in] */ IShellBrowser __RPC_FAR *psb,
    /* [in] */ RECT __RPC_FAR *prcView,
    /* [out] */ HWND __RPC_FAR *phWnd);


void __RPC_STUB IShellView_CreateViewWindow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellView_DestroyViewWindow_Proxy( 
    IShellView __RPC_FAR * This);


void __RPC_STUB IShellView_DestroyViewWindow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellView_GetCurrentInfo_Proxy( 
    IShellView __RPC_FAR * This,
    /* [out] */ LPFOLDERSETTINGS pfs);


void __RPC_STUB IShellView_GetCurrentInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [local] */ HRESULT STDMETHODCALLTYPE IShellView_AddPropertySheetPages_Proxy( 
    IShellView __RPC_FAR * This,
    /* [in] */ DWORD dwReserved,
    /* [in] */ LPFNSVADDPROPSHEETPAGE pfn,
    /* [in] */ LPARAM lparam);


void __RPC_STUB IShellView_AddPropertySheetPages_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellView_SaveViewState_Proxy( 
    IShellView __RPC_FAR * This);


void __RPC_STUB IShellView_SaveViewState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellView_SelectItem_Proxy( 
    IShellView __RPC_FAR * This,
    /* [unique][in] */ PCUITEMID_CHILD pidlItem,
    /* [in] */ SVSIF uFlags);


void __RPC_STUB IShellView_SelectItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellView_GetItemObject_Proxy( 
    IShellView __RPC_FAR * This,
    /* [in] */ UINT uItem,
    /* [in] */ REFIID riid,
    /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);


void __RPC_STUB IShellView_GetItemObject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IShellView_INTERFACE_DEFINED__ */


#ifndef __IShellView2_INTERFACE_DEFINED__
#define __IShellView2_INTERFACE_DEFINED__

/* interface IShellView2 */
/* [unique][object][uuid] */ 

typedef GUID SHELLVIEWID;

#define SV2GV_CURRENTVIEW ((UINT)-1)
#define SV2GV_DEFAULTVIEW ((UINT)-2)
#include <pshpack8.h>
typedef struct _SV2CVW2_PARAMS
    {
    DWORD cbSize;
    IShellView __RPC_FAR *psvPrev;
    LPCFOLDERSETTINGS pfs;
    IShellBrowser __RPC_FAR *psbOwner;
    RECT __RPC_FAR *prcView;
    const SHELLVIEWID __RPC_FAR *pvid;
    HWND hwndView;
    }	SV2CVW2_PARAMS;

typedef struct _SV2CVW2_PARAMS __RPC_FAR *LPSV2CVW2_PARAMS;

#include <poppack.h>

EXTERN_C const IID IID_IShellView2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("88E39E80-3578-11CF-AE69-08002B2E1262")
    IShellView2 : public IShellView
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetView( 
            /* [out][in] */ SHELLVIEWID __RPC_FAR *pvid,
            /* [in] */ ULONG uView) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateViewWindow2( 
            /* [in] */ LPSV2CVW2_PARAMS lpParams) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE HandleRename( 
            /* [unique][in] */ PCUITEMID_CHILD pidlNew) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SelectAndPositionItem( 
            /* [in] */ PCUITEMID_CHILD pidlItem,
            /* [in] */ UINT uFlags,
            /* [unique][in] */ POINT __RPC_FAR *ppt) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IShellView2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IShellView2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IShellView2 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IShellView2 __RPC_FAR * This);
        
        /* [input_sync] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetWindow )( 
            IShellView2 __RPC_FAR * This,
            /* [out] */ HWND __RPC_FAR *phwnd);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ContextSensitiveHelp )( 
            IShellView2 __RPC_FAR * This,
            /* [in] */ BOOL fEnterMode);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *TranslateAccelerator )( 
            IShellView2 __RPC_FAR * This,
            /* [in] */ MSG __RPC_FAR *pmsg);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *EnableModeless )( 
            IShellView2 __RPC_FAR * This,
            /* [in] */ BOOL fEnable);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *UIActivate )( 
            IShellView2 __RPC_FAR * This,
            /* [in] */ UINT uState);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Refresh )( 
            IShellView2 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CreateViewWindow )( 
            IShellView2 __RPC_FAR * This,
            /* [unique][in] */ IShellView __RPC_FAR *psvPrevious,
            /* [in] */ LPCFOLDERSETTINGS pfs,
            /* [in] */ IShellBrowser __RPC_FAR *psb,
            /* [in] */ RECT __RPC_FAR *prcView,
            /* [out] */ HWND __RPC_FAR *phWnd);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DestroyViewWindow )( 
            IShellView2 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCurrentInfo )( 
            IShellView2 __RPC_FAR * This,
            /* [out] */ LPFOLDERSETTINGS pfs);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AddPropertySheetPages )( 
            IShellView2 __RPC_FAR * This,
            /* [in] */ DWORD dwReserved,
            /* [in] */ LPFNSVADDPROPSHEETPAGE pfn,
            /* [in] */ LPARAM lparam);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SaveViewState )( 
            IShellView2 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SelectItem )( 
            IShellView2 __RPC_FAR * This,
            /* [unique][in] */ PCUITEMID_CHILD pidlItem,
            /* [in] */ SVSIF uFlags);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetItemObject )( 
            IShellView2 __RPC_FAR * This,
            /* [in] */ UINT uItem,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetView )( 
            IShellView2 __RPC_FAR * This,
            /* [out][in] */ SHELLVIEWID __RPC_FAR *pvid,
            /* [in] */ ULONG uView);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CreateViewWindow2 )( 
            IShellView2 __RPC_FAR * This,
            /* [in] */ LPSV2CVW2_PARAMS lpParams);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *HandleRename )( 
            IShellView2 __RPC_FAR * This,
            /* [unique][in] */ PCUITEMID_CHILD pidlNew);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SelectAndPositionItem )( 
            IShellView2 __RPC_FAR * This,
            /* [in] */ PCUITEMID_CHILD pidlItem,
            /* [in] */ UINT uFlags,
            /* [unique][in] */ POINT __RPC_FAR *ppt);
        
        END_INTERFACE
    } IShellView2Vtbl;

    interface IShellView2
    {
        CONST_VTBL struct IShellView2Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IShellView2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IShellView2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IShellView2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IShellView2_GetWindow(This,phwnd)	\
    (This)->lpVtbl -> GetWindow(This,phwnd)

#define IShellView2_ContextSensitiveHelp(This,fEnterMode)	\
    (This)->lpVtbl -> ContextSensitiveHelp(This,fEnterMode)


#define IShellView2_TranslateAccelerator(This,pmsg)	\
    (This)->lpVtbl -> TranslateAccelerator(This,pmsg)

#define IShellView2_EnableModeless(This,fEnable)	\
    (This)->lpVtbl -> EnableModeless(This,fEnable)

#define IShellView2_UIActivate(This,uState)	\
    (This)->lpVtbl -> UIActivate(This,uState)

#define IShellView2_Refresh(This)	\
    (This)->lpVtbl -> Refresh(This)

#define IShellView2_CreateViewWindow(This,psvPrevious,pfs,psb,prcView,phWnd)	\
    (This)->lpVtbl -> CreateViewWindow(This,psvPrevious,pfs,psb,prcView,phWnd)

#define IShellView2_DestroyViewWindow(This)	\
    (This)->lpVtbl -> DestroyViewWindow(This)

#define IShellView2_GetCurrentInfo(This,pfs)	\
    (This)->lpVtbl -> GetCurrentInfo(This,pfs)

#define IShellView2_AddPropertySheetPages(This,dwReserved,pfn,lparam)	\
    (This)->lpVtbl -> AddPropertySheetPages(This,dwReserved,pfn,lparam)

#define IShellView2_SaveViewState(This)	\
    (This)->lpVtbl -> SaveViewState(This)

#define IShellView2_SelectItem(This,pidlItem,uFlags)	\
    (This)->lpVtbl -> SelectItem(This,pidlItem,uFlags)

#define IShellView2_GetItemObject(This,uItem,riid,ppv)	\
    (This)->lpVtbl -> GetItemObject(This,uItem,riid,ppv)


#define IShellView2_GetView(This,pvid,uView)	\
    (This)->lpVtbl -> GetView(This,pvid,uView)

#define IShellView2_CreateViewWindow2(This,lpParams)	\
    (This)->lpVtbl -> CreateViewWindow2(This,lpParams)

#define IShellView2_HandleRename(This,pidlNew)	\
    (This)->lpVtbl -> HandleRename(This,pidlNew)

#define IShellView2_SelectAndPositionItem(This,pidlItem,uFlags,ppt)	\
    (This)->lpVtbl -> SelectAndPositionItem(This,pidlItem,uFlags,ppt)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IShellView2_GetView_Proxy( 
    IShellView2 __RPC_FAR * This,
    /* [out][in] */ SHELLVIEWID __RPC_FAR *pvid,
    /* [in] */ ULONG uView);


void __RPC_STUB IShellView2_GetView_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellView2_CreateViewWindow2_Proxy( 
    IShellView2 __RPC_FAR * This,
    /* [in] */ LPSV2CVW2_PARAMS lpParams);


void __RPC_STUB IShellView2_CreateViewWindow2_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellView2_HandleRename_Proxy( 
    IShellView2 __RPC_FAR * This,
    /* [unique][in] */ PCUITEMID_CHILD pidlNew);


void __RPC_STUB IShellView2_HandleRename_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellView2_SelectAndPositionItem_Proxy( 
    IShellView2 __RPC_FAR * This,
    /* [in] */ PCUITEMID_CHILD pidlItem,
    /* [in] */ UINT uFlags,
    /* [unique][in] */ POINT __RPC_FAR *ppt);


void __RPC_STUB IShellView2_SelectAndPositionItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IShellView2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0305 */
/* [local] */ 

#if (NTDDI_VERSION >= NTDDI_LONGHORN)


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0305_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0305_v0_0_s_ifspec;

#ifndef __IShellView3_INTERFACE_DEFINED__
#define __IShellView3_INTERFACE_DEFINED__

/* interface IShellView3 */
/* [unique][object][uuid] */ 

/* [v1_enum] */ 
enum tagSV3CVW3
    {	SV3CVW3_DEFAULT	= 0,
	SV3CVW3_NONINTERACTIVE	= 0x1,
	SV3CVW3_FORCEVIEWMODE	= 0x2,
	SV3CVW3_FORCEFOLDERFLAGS	= 0x4
    };
typedef DWORD SV3CVW3_FLAGS;


EXTERN_C const IID IID_IShellView3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("ec39fa88-f8af-41c5-8421-38bed28f4673")
    IShellView3 : public IShellView2
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE CreateViewWindow3( 
            /* [in] */ IShellBrowser __RPC_FAR *psbOwner,
            /* [unique][in] */ IShellView __RPC_FAR *psvPrev,
            /* [in] */ SV3CVW3_FLAGS dwViewFlags,
            /* [in] */ FOLDERFLAGS dwMask,
            /* [in] */ FOLDERFLAGS dwFlags,
            /* [in] */ FOLDERVIEWMODE fvMode,
            /* [unique][in] */ const SHELLVIEWID __RPC_FAR *pvid,
            /* [in] */ const RECT __RPC_FAR *prcView,
            /* [out] */ HWND __RPC_FAR *phwndView) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IShellView3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IShellView3 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IShellView3 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IShellView3 __RPC_FAR * This);
        
        /* [input_sync] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetWindow )( 
            IShellView3 __RPC_FAR * This,
            /* [out] */ HWND __RPC_FAR *phwnd);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ContextSensitiveHelp )( 
            IShellView3 __RPC_FAR * This,
            /* [in] */ BOOL fEnterMode);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *TranslateAccelerator )( 
            IShellView3 __RPC_FAR * This,
            /* [in] */ MSG __RPC_FAR *pmsg);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *EnableModeless )( 
            IShellView3 __RPC_FAR * This,
            /* [in] */ BOOL fEnable);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *UIActivate )( 
            IShellView3 __RPC_FAR * This,
            /* [in] */ UINT uState);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Refresh )( 
            IShellView3 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CreateViewWindow )( 
            IShellView3 __RPC_FAR * This,
            /* [unique][in] */ IShellView __RPC_FAR *psvPrevious,
            /* [in] */ LPCFOLDERSETTINGS pfs,
            /* [in] */ IShellBrowser __RPC_FAR *psb,
            /* [in] */ RECT __RPC_FAR *prcView,
            /* [out] */ HWND __RPC_FAR *phWnd);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DestroyViewWindow )( 
            IShellView3 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCurrentInfo )( 
            IShellView3 __RPC_FAR * This,
            /* [out] */ LPFOLDERSETTINGS pfs);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AddPropertySheetPages )( 
            IShellView3 __RPC_FAR * This,
            /* [in] */ DWORD dwReserved,
            /* [in] */ LPFNSVADDPROPSHEETPAGE pfn,
            /* [in] */ LPARAM lparam);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SaveViewState )( 
            IShellView3 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SelectItem )( 
            IShellView3 __RPC_FAR * This,
            /* [unique][in] */ PCUITEMID_CHILD pidlItem,
            /* [in] */ SVSIF uFlags);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetItemObject )( 
            IShellView3 __RPC_FAR * This,
            /* [in] */ UINT uItem,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetView )( 
            IShellView3 __RPC_FAR * This,
            /* [out][in] */ SHELLVIEWID __RPC_FAR *pvid,
            /* [in] */ ULONG uView);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CreateViewWindow2 )( 
            IShellView3 __RPC_FAR * This,
            /* [in] */ LPSV2CVW2_PARAMS lpParams);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *HandleRename )( 
            IShellView3 __RPC_FAR * This,
            /* [unique][in] */ PCUITEMID_CHILD pidlNew);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SelectAndPositionItem )( 
            IShellView3 __RPC_FAR * This,
            /* [in] */ PCUITEMID_CHILD pidlItem,
            /* [in] */ UINT uFlags,
            /* [unique][in] */ POINT __RPC_FAR *ppt);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CreateViewWindow3 )( 
            IShellView3 __RPC_FAR * This,
            /* [in] */ IShellBrowser __RPC_FAR *psbOwner,
            /* [unique][in] */ IShellView __RPC_FAR *psvPrev,
            /* [in] */ SV3CVW3_FLAGS dwViewFlags,
            /* [in] */ FOLDERFLAGS dwMask,
            /* [in] */ FOLDERFLAGS dwFlags,
            /* [in] */ FOLDERVIEWMODE fvMode,
            /* [unique][in] */ const SHELLVIEWID __RPC_FAR *pvid,
            /* [in] */ const RECT __RPC_FAR *prcView,
            /* [out] */ HWND __RPC_FAR *phwndView);
        
        END_INTERFACE
    } IShellView3Vtbl;

    interface IShellView3
    {
        CONST_VTBL struct IShellView3Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IShellView3_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IShellView3_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IShellView3_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IShellView3_GetWindow(This,phwnd)	\
    (This)->lpVtbl -> GetWindow(This,phwnd)

#define IShellView3_ContextSensitiveHelp(This,fEnterMode)	\
    (This)->lpVtbl -> ContextSensitiveHelp(This,fEnterMode)


#define IShellView3_TranslateAccelerator(This,pmsg)	\
    (This)->lpVtbl -> TranslateAccelerator(This,pmsg)

#define IShellView3_EnableModeless(This,fEnable)	\
    (This)->lpVtbl -> EnableModeless(This,fEnable)

#define IShellView3_UIActivate(This,uState)	\
    (This)->lpVtbl -> UIActivate(This,uState)

#define IShellView3_Refresh(This)	\
    (This)->lpVtbl -> Refresh(This)

#define IShellView3_CreateViewWindow(This,psvPrevious,pfs,psb,prcView,phWnd)	\
    (This)->lpVtbl -> CreateViewWindow(This,psvPrevious,pfs,psb,prcView,phWnd)

#define IShellView3_DestroyViewWindow(This)	\
    (This)->lpVtbl -> DestroyViewWindow(This)

#define IShellView3_GetCurrentInfo(This,pfs)	\
    (This)->lpVtbl -> GetCurrentInfo(This,pfs)

#define IShellView3_AddPropertySheetPages(This,dwReserved,pfn,lparam)	\
    (This)->lpVtbl -> AddPropertySheetPages(This,dwReserved,pfn,lparam)

#define IShellView3_SaveViewState(This)	\
    (This)->lpVtbl -> SaveViewState(This)

#define IShellView3_SelectItem(This,pidlItem,uFlags)	\
    (This)->lpVtbl -> SelectItem(This,pidlItem,uFlags)

#define IShellView3_GetItemObject(This,uItem,riid,ppv)	\
    (This)->lpVtbl -> GetItemObject(This,uItem,riid,ppv)


#define IShellView3_GetView(This,pvid,uView)	\
    (This)->lpVtbl -> GetView(This,pvid,uView)

#define IShellView3_CreateViewWindow2(This,lpParams)	\
    (This)->lpVtbl -> CreateViewWindow2(This,lpParams)

#define IShellView3_HandleRename(This,pidlNew)	\
    (This)->lpVtbl -> HandleRename(This,pidlNew)

#define IShellView3_SelectAndPositionItem(This,pidlItem,uFlags,ppt)	\
    (This)->lpVtbl -> SelectAndPositionItem(This,pidlItem,uFlags,ppt)


#define IShellView3_CreateViewWindow3(This,psbOwner,psvPrev,dwViewFlags,dwMask,dwFlags,fvMode,pvid,prcView,phwndView)	\
    (This)->lpVtbl -> CreateViewWindow3(This,psbOwner,psvPrev,dwViewFlags,dwMask,dwFlags,fvMode,pvid,prcView,phwndView)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IShellView3_CreateViewWindow3_Proxy( 
    IShellView3 __RPC_FAR * This,
    /* [in] */ IShellBrowser __RPC_FAR *psbOwner,
    /* [unique][in] */ IShellView __RPC_FAR *psvPrev,
    /* [in] */ SV3CVW3_FLAGS dwViewFlags,
    /* [in] */ FOLDERFLAGS dwMask,
    /* [in] */ FOLDERFLAGS dwFlags,
    /* [in] */ FOLDERVIEWMODE fvMode,
    /* [unique][in] */ const SHELLVIEWID __RPC_FAR *pvid,
    /* [in] */ const RECT __RPC_FAR *prcView,
    /* [out] */ HWND __RPC_FAR *phwndView);


void __RPC_STUB IShellView3_CreateViewWindow3_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IShellView3_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0306 */
/* [local] */ 

#endif  // NTDDI_LONGHORN
#ifdef _FIX_ENABLEMODELESS_CONFLICT
#undef    EnableModeless 
#endif


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0306_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0306_v0_0_s_ifspec;

#ifndef __IFolderView_INTERFACE_DEFINED__
#define __IFolderView_INTERFACE_DEFINED__

/* interface IFolderView */
/* [unique][object][uuid] */ 


EXTERN_C const IID IID_IFolderView;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("cde725b0-ccc9-4519-917e-325d72fab4ce")
    IFolderView : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCurrentViewMode( 
            /* [out][in] */ UINT __RPC_FAR *pViewMode) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetCurrentViewMode( 
            /* [in] */ UINT ViewMode) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFolder( 
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ int iItemIndex,
            /* [out] */ PITEMID_CHILD __RPC_FAR *ppidl) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ItemCount( 
            /* [in] */ UINT uFlags,
            /* [out] */ int __RPC_FAR *pcItems) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Items( 
            /* [in] */ UINT uFlags,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSelectionMarkedItem( 
            /* [out] */ int __RPC_FAR *piItem) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFocusedItem( 
            /* [out] */ int __RPC_FAR *piItem) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetItemPosition( 
            /* [in] */ PCUITEMID_CHILD pidl,
            /* [out] */ POINT __RPC_FAR *ppt) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSpacing( 
            /* [unique][out][in] */ POINT __RPC_FAR *ppt) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDefaultSpacing( 
            /* [out] */ POINT __RPC_FAR *ppt) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAutoArrange( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SelectItem( 
            /* [in] */ int iItem,
            /* [in] */ DWORD dwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SelectAndPositionItems( 
            /* [in] */ UINT cidl,
            /* [size_is][in] */ PCUITEMID_CHILD_ARRAY apidl,
            /* [size_is][unique][in] */ POINT __RPC_FAR *apt,
            /* [in] */ DWORD dwFlags) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IFolderViewVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IFolderView __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IFolderView __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IFolderView __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCurrentViewMode )( 
            IFolderView __RPC_FAR * This,
            /* [out][in] */ UINT __RPC_FAR *pViewMode);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetCurrentViewMode )( 
            IFolderView __RPC_FAR * This,
            /* [in] */ UINT ViewMode);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFolder )( 
            IFolderView __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Item )( 
            IFolderView __RPC_FAR * This,
            /* [in] */ int iItemIndex,
            /* [out] */ PITEMID_CHILD __RPC_FAR *ppidl);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ItemCount )( 
            IFolderView __RPC_FAR * This,
            /* [in] */ UINT uFlags,
            /* [out] */ int __RPC_FAR *pcItems);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Items )( 
            IFolderView __RPC_FAR * This,
            /* [in] */ UINT uFlags,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSelectionMarkedItem )( 
            IFolderView __RPC_FAR * This,
            /* [out] */ int __RPC_FAR *piItem);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFocusedItem )( 
            IFolderView __RPC_FAR * This,
            /* [out] */ int __RPC_FAR *piItem);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetItemPosition )( 
            IFolderView __RPC_FAR * This,
            /* [in] */ PCUITEMID_CHILD pidl,
            /* [out] */ POINT __RPC_FAR *ppt);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSpacing )( 
            IFolderView __RPC_FAR * This,
            /* [unique][out][in] */ POINT __RPC_FAR *ppt);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetDefaultSpacing )( 
            IFolderView __RPC_FAR * This,
            /* [out] */ POINT __RPC_FAR *ppt);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetAutoArrange )( 
            IFolderView __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SelectItem )( 
            IFolderView __RPC_FAR * This,
            /* [in] */ int iItem,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SelectAndPositionItems )( 
            IFolderView __RPC_FAR * This,
            /* [in] */ UINT cidl,
            /* [size_is][in] */ PCUITEMID_CHILD_ARRAY apidl,
            /* [size_is][unique][in] */ POINT __RPC_FAR *apt,
            /* [in] */ DWORD dwFlags);
        
        END_INTERFACE
    } IFolderViewVtbl;

    interface IFolderView
    {
        CONST_VTBL struct IFolderViewVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IFolderView_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IFolderView_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IFolderView_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IFolderView_GetCurrentViewMode(This,pViewMode)	\
    (This)->lpVtbl -> GetCurrentViewMode(This,pViewMode)

#define IFolderView_SetCurrentViewMode(This,ViewMode)	\
    (This)->lpVtbl -> SetCurrentViewMode(This,ViewMode)

#define IFolderView_GetFolder(This,riid,ppv)	\
    (This)->lpVtbl -> GetFolder(This,riid,ppv)

#define IFolderView_Item(This,iItemIndex,ppidl)	\
    (This)->lpVtbl -> Item(This,iItemIndex,ppidl)

#define IFolderView_ItemCount(This,uFlags,pcItems)	\
    (This)->lpVtbl -> ItemCount(This,uFlags,pcItems)

#define IFolderView_Items(This,uFlags,riid,ppv)	\
    (This)->lpVtbl -> Items(This,uFlags,riid,ppv)

#define IFolderView_GetSelectionMarkedItem(This,piItem)	\
    (This)->lpVtbl -> GetSelectionMarkedItem(This,piItem)

#define IFolderView_GetFocusedItem(This,piItem)	\
    (This)->lpVtbl -> GetFocusedItem(This,piItem)

#define IFolderView_GetItemPosition(This,pidl,ppt)	\
    (This)->lpVtbl -> GetItemPosition(This,pidl,ppt)

#define IFolderView_GetSpacing(This,ppt)	\
    (This)->lpVtbl -> GetSpacing(This,ppt)

#define IFolderView_GetDefaultSpacing(This,ppt)	\
    (This)->lpVtbl -> GetDefaultSpacing(This,ppt)

#define IFolderView_GetAutoArrange(This)	\
    (This)->lpVtbl -> GetAutoArrange(This)

#define IFolderView_SelectItem(This,iItem,dwFlags)	\
    (This)->lpVtbl -> SelectItem(This,iItem,dwFlags)

#define IFolderView_SelectAndPositionItems(This,cidl,apidl,apt,dwFlags)	\
    (This)->lpVtbl -> SelectAndPositionItems(This,cidl,apidl,apt,dwFlags)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IFolderView_GetCurrentViewMode_Proxy( 
    IFolderView __RPC_FAR * This,
    /* [out][in] */ UINT __RPC_FAR *pViewMode);


void __RPC_STUB IFolderView_GetCurrentViewMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderView_SetCurrentViewMode_Proxy( 
    IFolderView __RPC_FAR * This,
    /* [in] */ UINT ViewMode);


void __RPC_STUB IFolderView_SetCurrentViewMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderView_GetFolder_Proxy( 
    IFolderView __RPC_FAR * This,
    /* [in] */ REFIID riid,
    /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);


void __RPC_STUB IFolderView_GetFolder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderView_Item_Proxy( 
    IFolderView __RPC_FAR * This,
    /* [in] */ int iItemIndex,
    /* [out] */ PITEMID_CHILD __RPC_FAR *ppidl);


void __RPC_STUB IFolderView_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderView_ItemCount_Proxy( 
    IFolderView __RPC_FAR * This,
    /* [in] */ UINT uFlags,
    /* [out] */ int __RPC_FAR *pcItems);


void __RPC_STUB IFolderView_ItemCount_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderView_Items_Proxy( 
    IFolderView __RPC_FAR * This,
    /* [in] */ UINT uFlags,
    /* [in] */ REFIID riid,
    /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);


void __RPC_STUB IFolderView_Items_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderView_GetSelectionMarkedItem_Proxy( 
    IFolderView __RPC_FAR * This,
    /* [out] */ int __RPC_FAR *piItem);


void __RPC_STUB IFolderView_GetSelectionMarkedItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderView_GetFocusedItem_Proxy( 
    IFolderView __RPC_FAR * This,
    /* [out] */ int __RPC_FAR *piItem);


void __RPC_STUB IFolderView_GetFocusedItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderView_GetItemPosition_Proxy( 
    IFolderView __RPC_FAR * This,
    /* [in] */ PCUITEMID_CHILD pidl,
    /* [out] */ POINT __RPC_FAR *ppt);


void __RPC_STUB IFolderView_GetItemPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderView_GetSpacing_Proxy( 
    IFolderView __RPC_FAR * This,
    /* [unique][out][in] */ POINT __RPC_FAR *ppt);


void __RPC_STUB IFolderView_GetSpacing_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderView_GetDefaultSpacing_Proxy( 
    IFolderView __RPC_FAR * This,
    /* [out] */ POINT __RPC_FAR *ppt);


void __RPC_STUB IFolderView_GetDefaultSpacing_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderView_GetAutoArrange_Proxy( 
    IFolderView __RPC_FAR * This);


void __RPC_STUB IFolderView_GetAutoArrange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderView_SelectItem_Proxy( 
    IFolderView __RPC_FAR * This,
    /* [in] */ int iItem,
    /* [in] */ DWORD dwFlags);


void __RPC_STUB IFolderView_SelectItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderView_SelectAndPositionItems_Proxy( 
    IFolderView __RPC_FAR * This,
    /* [in] */ UINT cidl,
    /* [size_is][in] */ PCUITEMID_CHILD_ARRAY apidl,
    /* [size_is][unique][in] */ POINT __RPC_FAR *apt,
    /* [in] */ DWORD dwFlags);


void __RPC_STUB IFolderView_SelectAndPositionItems_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IFolderView_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0307 */
/* [local] */ 

#define SID_SFolderView IID_IFolderView    // folder view, usually IFolderView
#if (NTDDI_VERSION >= NTDDI_LONGHORN) || (_WIN32_IE >= _WIN32_IE_IE70)
#ifndef NO_SHOBJIDL_SORTDIRECTION
/* [v1_enum] */ 
enum tagSORTDIRECTION
    {	SORT_DESCENDING	= -1,
	SORT_ASCENDING	= 1
    };
#endif  // NO_SHOBJIDL_SORTDIRECTION
typedef int SORTDIRECTION;

typedef struct tagSORTCOLUMN
    {
    PROPERTYKEY propkey;
    SORTDIRECTION direction;
    }	SORTCOLUMN;

typedef /* [v1_enum] */ 
enum tagFVTEXTTYPE
    {	FVST_EMPTYTEXT	= 0
    }	FVTEXTTYPE;




extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0307_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0307_v0_0_s_ifspec;

#ifndef __IFolderView2_INTERFACE_DEFINED__
#define __IFolderView2_INTERFACE_DEFINED__

/* interface IFolderView2 */
/* [unique][object][uuid] */ 


EXTERN_C const IID IID_IFolderView2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1af3a467-214f-4298-908e-06b03e0b39f9")
    IFolderView2 : public IFolderView
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetGroupBy( 
            /* [in] */ REFPROPERTYKEY key,
            /* [in] */ BOOL fAscending) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetGroupBy( 
            /* [out] */ PROPERTYKEY __RPC_FAR *pkey,
            /* [out] */ BOOL __RPC_FAR *pfAscending) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetViewProperty( 
            /* [in] */ PCUITEMID_CHILD pidl,
            /* [in] */ REFPROPERTYKEY propkey,
            /* [in] */ REFPROPVARIANT propvar) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetViewProperty( 
            /* [in] */ PCUITEMID_CHILD pidl,
            /* [in] */ REFPROPERTYKEY propkey,
            /* [out] */ PROPVARIANT __RPC_FAR *ppropvar) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetTileViewProperties( 
            /* [in] */ PCUITEMID_CHILD pidl,
            /* [string][in] */ LPCWSTR pszPropList) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetExtendedTileViewProperties( 
            /* [in] */ PCUITEMID_CHILD pidl,
            /* [string][in] */ LPCWSTR pszPropList) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetText( 
            /* [in] */ FVTEXTTYPE iType,
            /* [in] */ LPCWSTR pwszText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetCurrentFolderFlags( 
            /* [in] */ DWORD dwMask,
            /* [in] */ DWORD dwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCurrentFolderFlags( 
            /* [out] */ DWORD __RPC_FAR *pdwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSortColumnCount( 
            /* [out] */ int __RPC_FAR *pcColumns) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetSortColumns( 
            /* [size_is][in] */ const SORTCOLUMN __RPC_FAR *rgSortColumns,
            /* [in] */ int cColumns) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSortColumns( 
            /* [size_is][out] */ SORTCOLUMN __RPC_FAR *rgSortColumns,
            /* [in] */ int cColumns) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetItem( 
            /* [in] */ int iItem,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVisibleItem( 
            /* [in] */ int iStart,
            /* [in] */ BOOL fPrevious,
            /* [out] */ int __RPC_FAR *piItem) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSelectedItem( 
            /* [in] */ int iStart,
            /* [out] */ int __RPC_FAR *piItem) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSelection( 
            /* [in] */ BOOL fNoneImpliesFolder,
            /* [out] */ IShellItemArray __RPC_FAR *__RPC_FAR *ppsia) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSelectionState( 
            /* [in] */ PCUITEMID_CHILD pidl,
            /* [out] */ DWORD __RPC_FAR *pdwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InvokeVerbOnSelection( 
            /* [string][unique][in] */ LPCSTR pszVerb) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetViewModeAndIconSize( 
            /* [in] */ FOLDERVIEWMODE uViewMode,
            /* [in] */ int iImageSize) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetViewModeAndIconSize( 
            /* [out] */ FOLDERVIEWMODE __RPC_FAR *puViewMode,
            /* [out] */ int __RPC_FAR *piImageSize) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetGroupSubsetCount( 
            /* [in] */ UINT cVisibleRows) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetGroupSubsetCount( 
            /* [out] */ UINT __RPC_FAR *pcVisibleRows) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetRedraw( 
            /* [in] */ BOOL fRedrawOn) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsMoveInSameFolder( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DoRename( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IFolderView2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IFolderView2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IFolderView2 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IFolderView2 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCurrentViewMode )( 
            IFolderView2 __RPC_FAR * This,
            /* [out][in] */ UINT __RPC_FAR *pViewMode);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetCurrentViewMode )( 
            IFolderView2 __RPC_FAR * This,
            /* [in] */ UINT ViewMode);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFolder )( 
            IFolderView2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Item )( 
            IFolderView2 __RPC_FAR * This,
            /* [in] */ int iItemIndex,
            /* [out] */ PITEMID_CHILD __RPC_FAR *ppidl);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ItemCount )( 
            IFolderView2 __RPC_FAR * This,
            /* [in] */ UINT uFlags,
            /* [out] */ int __RPC_FAR *pcItems);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Items )( 
            IFolderView2 __RPC_FAR * This,
            /* [in] */ UINT uFlags,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSelectionMarkedItem )( 
            IFolderView2 __RPC_FAR * This,
            /* [out] */ int __RPC_FAR *piItem);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFocusedItem )( 
            IFolderView2 __RPC_FAR * This,
            /* [out] */ int __RPC_FAR *piItem);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetItemPosition )( 
            IFolderView2 __RPC_FAR * This,
            /* [in] */ PCUITEMID_CHILD pidl,
            /* [out] */ POINT __RPC_FAR *ppt);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSpacing )( 
            IFolderView2 __RPC_FAR * This,
            /* [unique][out][in] */ POINT __RPC_FAR *ppt);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetDefaultSpacing )( 
            IFolderView2 __RPC_FAR * This,
            /* [out] */ POINT __RPC_FAR *ppt);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetAutoArrange )( 
            IFolderView2 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SelectItem )( 
            IFolderView2 __RPC_FAR * This,
            /* [in] */ int iItem,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SelectAndPositionItems )( 
            IFolderView2 __RPC_FAR * This,
            /* [in] */ UINT cidl,
            /* [size_is][in] */ PCUITEMID_CHILD_ARRAY apidl,
            /* [size_is][unique][in] */ POINT __RPC_FAR *apt,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetGroupBy )( 
            IFolderView2 __RPC_FAR * This,
            /* [in] */ REFPROPERTYKEY key,
            /* [in] */ BOOL fAscending);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetGroupBy )( 
            IFolderView2 __RPC_FAR * This,
            /* [out] */ PROPERTYKEY __RPC_FAR *pkey,
            /* [out] */ BOOL __RPC_FAR *pfAscending);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetViewProperty )( 
            IFolderView2 __RPC_FAR * This,
            /* [in] */ PCUITEMID_CHILD pidl,
            /* [in] */ REFPROPERTYKEY propkey,
            /* [in] */ REFPROPVARIANT propvar);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetViewProperty )( 
            IFolderView2 __RPC_FAR * This,
            /* [in] */ PCUITEMID_CHILD pidl,
            /* [in] */ REFPROPERTYKEY propkey,
            /* [out] */ PROPVARIANT __RPC_FAR *ppropvar);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetTileViewProperties )( 
            IFolderView2 __RPC_FAR * This,
            /* [in] */ PCUITEMID_CHILD pidl,
            /* [string][in] */ LPCWSTR pszPropList);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetExtendedTileViewProperties )( 
            IFolderView2 __RPC_FAR * This,
            /* [in] */ PCUITEMID_CHILD pidl,
            /* [string][in] */ LPCWSTR pszPropList);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetText )( 
            IFolderView2 __RPC_FAR * This,
            /* [in] */ FVTEXTTYPE iType,
            /* [in] */ LPCWSTR pwszText);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetCurrentFolderFlags )( 
            IFolderView2 __RPC_FAR * This,
            /* [in] */ DWORD dwMask,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCurrentFolderFlags )( 
            IFolderView2 __RPC_FAR * This,
            /* [out] */ DWORD __RPC_FAR *pdwFlags);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSortColumnCount )( 
            IFolderView2 __RPC_FAR * This,
            /* [out] */ int __RPC_FAR *pcColumns);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetSortColumns )( 
            IFolderView2 __RPC_FAR * This,
            /* [size_is][in] */ const SORTCOLUMN __RPC_FAR *rgSortColumns,
            /* [in] */ int cColumns);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSortColumns )( 
            IFolderView2 __RPC_FAR * This,
            /* [size_is][out] */ SORTCOLUMN __RPC_FAR *rgSortColumns,
            /* [in] */ int cColumns);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetItem )( 
            IFolderView2 __RPC_FAR * This,
            /* [in] */ int iItem,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVisibleItem )( 
            IFolderView2 __RPC_FAR * This,
            /* [in] */ int iStart,
            /* [in] */ BOOL fPrevious,
            /* [out] */ int __RPC_FAR *piItem);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSelectedItem )( 
            IFolderView2 __RPC_FAR * This,
            /* [in] */ int iStart,
            /* [out] */ int __RPC_FAR *piItem);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSelection )( 
            IFolderView2 __RPC_FAR * This,
            /* [in] */ BOOL fNoneImpliesFolder,
            /* [out] */ IShellItemArray __RPC_FAR *__RPC_FAR *ppsia);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSelectionState )( 
            IFolderView2 __RPC_FAR * This,
            /* [in] */ PCUITEMID_CHILD pidl,
            /* [out] */ DWORD __RPC_FAR *pdwFlags);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *InvokeVerbOnSelection )( 
            IFolderView2 __RPC_FAR * This,
            /* [string][unique][in] */ LPCSTR pszVerb);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetViewModeAndIconSize )( 
            IFolderView2 __RPC_FAR * This,
            /* [in] */ FOLDERVIEWMODE uViewMode,
            /* [in] */ int iImageSize);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetViewModeAndIconSize )( 
            IFolderView2 __RPC_FAR * This,
            /* [out] */ FOLDERVIEWMODE __RPC_FAR *puViewMode,
            /* [out] */ int __RPC_FAR *piImageSize);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetGroupSubsetCount )( 
            IFolderView2 __RPC_FAR * This,
            /* [in] */ UINT cVisibleRows);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetGroupSubsetCount )( 
            IFolderView2 __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pcVisibleRows);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetRedraw )( 
            IFolderView2 __RPC_FAR * This,
            /* [in] */ BOOL fRedrawOn);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *IsMoveInSameFolder )( 
            IFolderView2 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DoRename )( 
            IFolderView2 __RPC_FAR * This);
        
        END_INTERFACE
    } IFolderView2Vtbl;

    interface IFolderView2
    {
        CONST_VTBL struct IFolderView2Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IFolderView2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IFolderView2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IFolderView2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IFolderView2_GetCurrentViewMode(This,pViewMode)	\
    (This)->lpVtbl -> GetCurrentViewMode(This,pViewMode)

#define IFolderView2_SetCurrentViewMode(This,ViewMode)	\
    (This)->lpVtbl -> SetCurrentViewMode(This,ViewMode)

#define IFolderView2_GetFolder(This,riid,ppv)	\
    (This)->lpVtbl -> GetFolder(This,riid,ppv)

#define IFolderView2_Item(This,iItemIndex,ppidl)	\
    (This)->lpVtbl -> Item(This,iItemIndex,ppidl)

#define IFolderView2_ItemCount(This,uFlags,pcItems)	\
    (This)->lpVtbl -> ItemCount(This,uFlags,pcItems)

#define IFolderView2_Items(This,uFlags,riid,ppv)	\
    (This)->lpVtbl -> Items(This,uFlags,riid,ppv)

#define IFolderView2_GetSelectionMarkedItem(This,piItem)	\
    (This)->lpVtbl -> GetSelectionMarkedItem(This,piItem)

#define IFolderView2_GetFocusedItem(This,piItem)	\
    (This)->lpVtbl -> GetFocusedItem(This,piItem)

#define IFolderView2_GetItemPosition(This,pidl,ppt)	\
    (This)->lpVtbl -> GetItemPosition(This,pidl,ppt)

#define IFolderView2_GetSpacing(This,ppt)	\
    (This)->lpVtbl -> GetSpacing(This,ppt)

#define IFolderView2_GetDefaultSpacing(This,ppt)	\
    (This)->lpVtbl -> GetDefaultSpacing(This,ppt)

#define IFolderView2_GetAutoArrange(This)	\
    (This)->lpVtbl -> GetAutoArrange(This)

#define IFolderView2_SelectItem(This,iItem,dwFlags)	\
    (This)->lpVtbl -> SelectItem(This,iItem,dwFlags)

#define IFolderView2_SelectAndPositionItems(This,cidl,apidl,apt,dwFlags)	\
    (This)->lpVtbl -> SelectAndPositionItems(This,cidl,apidl,apt,dwFlags)


#define IFolderView2_SetGroupBy(This,key,fAscending)	\
    (This)->lpVtbl -> SetGroupBy(This,key,fAscending)

#define IFolderView2_GetGroupBy(This,pkey,pfAscending)	\
    (This)->lpVtbl -> GetGroupBy(This,pkey,pfAscending)

#define IFolderView2_SetViewProperty(This,pidl,propkey,propvar)	\
    (This)->lpVtbl -> SetViewProperty(This,pidl,propkey,propvar)

#define IFolderView2_GetViewProperty(This,pidl,propkey,ppropvar)	\
    (This)->lpVtbl -> GetViewProperty(This,pidl,propkey,ppropvar)

#define IFolderView2_SetTileViewProperties(This,pidl,pszPropList)	\
    (This)->lpVtbl -> SetTileViewProperties(This,pidl,pszPropList)

#define IFolderView2_SetExtendedTileViewProperties(This,pidl,pszPropList)	\
    (This)->lpVtbl -> SetExtendedTileViewProperties(This,pidl,pszPropList)

#define IFolderView2_SetText(This,iType,pwszText)	\
    (This)->lpVtbl -> SetText(This,iType,pwszText)

#define IFolderView2_SetCurrentFolderFlags(This,dwMask,dwFlags)	\
    (This)->lpVtbl -> SetCurrentFolderFlags(This,dwMask,dwFlags)

#define IFolderView2_GetCurrentFolderFlags(This,pdwFlags)	\
    (This)->lpVtbl -> GetCurrentFolderFlags(This,pdwFlags)

#define IFolderView2_GetSortColumnCount(This,pcColumns)	\
    (This)->lpVtbl -> GetSortColumnCount(This,pcColumns)

#define IFolderView2_SetSortColumns(This,rgSortColumns,cColumns)	\
    (This)->lpVtbl -> SetSortColumns(This,rgSortColumns,cColumns)

#define IFolderView2_GetSortColumns(This,rgSortColumns,cColumns)	\
    (This)->lpVtbl -> GetSortColumns(This,rgSortColumns,cColumns)

#define IFolderView2_GetItem(This,iItem,riid,ppv)	\
    (This)->lpVtbl -> GetItem(This,iItem,riid,ppv)

#define IFolderView2_GetVisibleItem(This,iStart,fPrevious,piItem)	\
    (This)->lpVtbl -> GetVisibleItem(This,iStart,fPrevious,piItem)

#define IFolderView2_GetSelectedItem(This,iStart,piItem)	\
    (This)->lpVtbl -> GetSelectedItem(This,iStart,piItem)

#define IFolderView2_GetSelection(This,fNoneImpliesFolder,ppsia)	\
    (This)->lpVtbl -> GetSelection(This,fNoneImpliesFolder,ppsia)

#define IFolderView2_GetSelectionState(This,pidl,pdwFlags)	\
    (This)->lpVtbl -> GetSelectionState(This,pidl,pdwFlags)

#define IFolderView2_InvokeVerbOnSelection(This,pszVerb)	\
    (This)->lpVtbl -> InvokeVerbOnSelection(This,pszVerb)

#define IFolderView2_SetViewModeAndIconSize(This,uViewMode,iImageSize)	\
    (This)->lpVtbl -> SetViewModeAndIconSize(This,uViewMode,iImageSize)

#define IFolderView2_GetViewModeAndIconSize(This,puViewMode,piImageSize)	\
    (This)->lpVtbl -> GetViewModeAndIconSize(This,puViewMode,piImageSize)

#define IFolderView2_SetGroupSubsetCount(This,cVisibleRows)	\
    (This)->lpVtbl -> SetGroupSubsetCount(This,cVisibleRows)

#define IFolderView2_GetGroupSubsetCount(This,pcVisibleRows)	\
    (This)->lpVtbl -> GetGroupSubsetCount(This,pcVisibleRows)

#define IFolderView2_SetRedraw(This,fRedrawOn)	\
    (This)->lpVtbl -> SetRedraw(This,fRedrawOn)

#define IFolderView2_IsMoveInSameFolder(This)	\
    (This)->lpVtbl -> IsMoveInSameFolder(This)

#define IFolderView2_DoRename(This)	\
    (This)->lpVtbl -> DoRename(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IFolderView2_SetGroupBy_Proxy( 
    IFolderView2 __RPC_FAR * This,
    /* [in] */ REFPROPERTYKEY key,
    /* [in] */ BOOL fAscending);


void __RPC_STUB IFolderView2_SetGroupBy_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderView2_GetGroupBy_Proxy( 
    IFolderView2 __RPC_FAR * This,
    /* [out] */ PROPERTYKEY __RPC_FAR *pkey,
    /* [out] */ BOOL __RPC_FAR *pfAscending);


void __RPC_STUB IFolderView2_GetGroupBy_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderView2_SetViewProperty_Proxy( 
    IFolderView2 __RPC_FAR * This,
    /* [in] */ PCUITEMID_CHILD pidl,
    /* [in] */ REFPROPERTYKEY propkey,
    /* [in] */ REFPROPVARIANT propvar);


void __RPC_STUB IFolderView2_SetViewProperty_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderView2_GetViewProperty_Proxy( 
    IFolderView2 __RPC_FAR * This,
    /* [in] */ PCUITEMID_CHILD pidl,
    /* [in] */ REFPROPERTYKEY propkey,
    /* [out] */ PROPVARIANT __RPC_FAR *ppropvar);


void __RPC_STUB IFolderView2_GetViewProperty_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderView2_SetTileViewProperties_Proxy( 
    IFolderView2 __RPC_FAR * This,
    /* [in] */ PCUITEMID_CHILD pidl,
    /* [string][in] */ LPCWSTR pszPropList);


void __RPC_STUB IFolderView2_SetTileViewProperties_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderView2_SetExtendedTileViewProperties_Proxy( 
    IFolderView2 __RPC_FAR * This,
    /* [in] */ PCUITEMID_CHILD pidl,
    /* [string][in] */ LPCWSTR pszPropList);


void __RPC_STUB IFolderView2_SetExtendedTileViewProperties_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderView2_SetText_Proxy( 
    IFolderView2 __RPC_FAR * This,
    /* [in] */ FVTEXTTYPE iType,
    /* [in] */ LPCWSTR pwszText);


void __RPC_STUB IFolderView2_SetText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderView2_SetCurrentFolderFlags_Proxy( 
    IFolderView2 __RPC_FAR * This,
    /* [in] */ DWORD dwMask,
    /* [in] */ DWORD dwFlags);


void __RPC_STUB IFolderView2_SetCurrentFolderFlags_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderView2_GetCurrentFolderFlags_Proxy( 
    IFolderView2 __RPC_FAR * This,
    /* [out] */ DWORD __RPC_FAR *pdwFlags);


void __RPC_STUB IFolderView2_GetCurrentFolderFlags_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderView2_GetSortColumnCount_Proxy( 
    IFolderView2 __RPC_FAR * This,
    /* [out] */ int __RPC_FAR *pcColumns);


void __RPC_STUB IFolderView2_GetSortColumnCount_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderView2_SetSortColumns_Proxy( 
    IFolderView2 __RPC_FAR * This,
    /* [size_is][in] */ const SORTCOLUMN __RPC_FAR *rgSortColumns,
    /* [in] */ int cColumns);


void __RPC_STUB IFolderView2_SetSortColumns_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderView2_GetSortColumns_Proxy( 
    IFolderView2 __RPC_FAR * This,
    /* [size_is][out] */ SORTCOLUMN __RPC_FAR *rgSortColumns,
    /* [in] */ int cColumns);


void __RPC_STUB IFolderView2_GetSortColumns_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderView2_GetItem_Proxy( 
    IFolderView2 __RPC_FAR * This,
    /* [in] */ int iItem,
    /* [in] */ REFIID riid,
    /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);


void __RPC_STUB IFolderView2_GetItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderView2_GetVisibleItem_Proxy( 
    IFolderView2 __RPC_FAR * This,
    /* [in] */ int iStart,
    /* [in] */ BOOL fPrevious,
    /* [out] */ int __RPC_FAR *piItem);


void __RPC_STUB IFolderView2_GetVisibleItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderView2_GetSelectedItem_Proxy( 
    IFolderView2 __RPC_FAR * This,
    /* [in] */ int iStart,
    /* [out] */ int __RPC_FAR *piItem);


void __RPC_STUB IFolderView2_GetSelectedItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderView2_GetSelection_Proxy( 
    IFolderView2 __RPC_FAR * This,
    /* [in] */ BOOL fNoneImpliesFolder,
    /* [out] */ IShellItemArray __RPC_FAR *__RPC_FAR *ppsia);


void __RPC_STUB IFolderView2_GetSelection_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderView2_GetSelectionState_Proxy( 
    IFolderView2 __RPC_FAR * This,
    /* [in] */ PCUITEMID_CHILD pidl,
    /* [out] */ DWORD __RPC_FAR *pdwFlags);


void __RPC_STUB IFolderView2_GetSelectionState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderView2_InvokeVerbOnSelection_Proxy( 
    IFolderView2 __RPC_FAR * This,
    /* [string][unique][in] */ LPCSTR pszVerb);


void __RPC_STUB IFolderView2_InvokeVerbOnSelection_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderView2_SetViewModeAndIconSize_Proxy( 
    IFolderView2 __RPC_FAR * This,
    /* [in] */ FOLDERVIEWMODE uViewMode,
    /* [in] */ int iImageSize);


void __RPC_STUB IFolderView2_SetViewModeAndIconSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderView2_GetViewModeAndIconSize_Proxy( 
    IFolderView2 __RPC_FAR * This,
    /* [out] */ FOLDERVIEWMODE __RPC_FAR *puViewMode,
    /* [out] */ int __RPC_FAR *piImageSize);


void __RPC_STUB IFolderView2_GetViewModeAndIconSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderView2_SetGroupSubsetCount_Proxy( 
    IFolderView2 __RPC_FAR * This,
    /* [in] */ UINT cVisibleRows);


void __RPC_STUB IFolderView2_SetGroupSubsetCount_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderView2_GetGroupSubsetCount_Proxy( 
    IFolderView2 __RPC_FAR * This,
    /* [out] */ UINT __RPC_FAR *pcVisibleRows);


void __RPC_STUB IFolderView2_GetGroupSubsetCount_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderView2_SetRedraw_Proxy( 
    IFolderView2 __RPC_FAR * This,
    /* [in] */ BOOL fRedrawOn);


void __RPC_STUB IFolderView2_SetRedraw_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderView2_IsMoveInSameFolder_Proxy( 
    IFolderView2 __RPC_FAR * This);


void __RPC_STUB IFolderView2_IsMoveInSameFolder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderView2_DoRename_Proxy( 
    IFolderView2 __RPC_FAR * This);


void __RPC_STUB IFolderView2_DoRename_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IFolderView2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0308 */
/* [local] */ 

#if (NTDDI_VERSION >= NTDDI_LONGHORN)


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0308_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0308_v0_0_s_ifspec;

#ifndef __IFolderViewSettings_INTERFACE_DEFINED__
#define __IFolderViewSettings_INTERFACE_DEFINED__

/* interface IFolderViewSettings */
/* [object][uuid] */ 


EXTERN_C const IID IID_IFolderViewSettings;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("ae8c987d-8797-4ed3-be72-2a47dd938db0")
    IFolderViewSettings : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetColumnPropertyList( 
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetGroupByProperty( 
            /* [out] */ PROPERTYKEY __RPC_FAR *pkey,
            /* [out] */ BOOL __RPC_FAR *pfGroupAscending) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetViewMode( 
            /* [out] */ FOLDERLOGICALVIEWMODE __RPC_FAR *plvm) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetIconSize( 
            /* [out] */ UINT __RPC_FAR *puIconSize) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFolderFlags( 
            /* [out] */ FOLDERFLAGS __RPC_FAR *pfolderMask,
            /* [out] */ FOLDERFLAGS __RPC_FAR *pfolderFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSortColumns( 
            /* [length_is][size_is][out] */ SORTCOLUMN __RPC_FAR *rgSortColumns,
            /* [in] */ UINT cColumnsIn,
            /* [out] */ UINT __RPC_FAR *pcColumnsOut) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetGroupSubsetCount( 
            /* [out] */ UINT __RPC_FAR *pcVisibleRows) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IFolderViewSettingsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IFolderViewSettings __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IFolderViewSettings __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IFolderViewSettings __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetColumnPropertyList )( 
            IFolderViewSettings __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetGroupByProperty )( 
            IFolderViewSettings __RPC_FAR * This,
            /* [out] */ PROPERTYKEY __RPC_FAR *pkey,
            /* [out] */ BOOL __RPC_FAR *pfGroupAscending);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetViewMode )( 
            IFolderViewSettings __RPC_FAR * This,
            /* [out] */ FOLDERLOGICALVIEWMODE __RPC_FAR *plvm);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIconSize )( 
            IFolderViewSettings __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *puIconSize);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFolderFlags )( 
            IFolderViewSettings __RPC_FAR * This,
            /* [out] */ FOLDERFLAGS __RPC_FAR *pfolderMask,
            /* [out] */ FOLDERFLAGS __RPC_FAR *pfolderFlags);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSortColumns )( 
            IFolderViewSettings __RPC_FAR * This,
            /* [length_is][size_is][out] */ SORTCOLUMN __RPC_FAR *rgSortColumns,
            /* [in] */ UINT cColumnsIn,
            /* [out] */ UINT __RPC_FAR *pcColumnsOut);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetGroupSubsetCount )( 
            IFolderViewSettings __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pcVisibleRows);
        
        END_INTERFACE
    } IFolderViewSettingsVtbl;

    interface IFolderViewSettings
    {
        CONST_VTBL struct IFolderViewSettingsVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IFolderViewSettings_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IFolderViewSettings_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IFolderViewSettings_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IFolderViewSettings_GetColumnPropertyList(This,riid,ppv)	\
    (This)->lpVtbl -> GetColumnPropertyList(This,riid,ppv)

#define IFolderViewSettings_GetGroupByProperty(This,pkey,pfGroupAscending)	\
    (This)->lpVtbl -> GetGroupByProperty(This,pkey,pfGroupAscending)

#define IFolderViewSettings_GetViewMode(This,plvm)	\
    (This)->lpVtbl -> GetViewMode(This,plvm)

#define IFolderViewSettings_GetIconSize(This,puIconSize)	\
    (This)->lpVtbl -> GetIconSize(This,puIconSize)

#define IFolderViewSettings_GetFolderFlags(This,pfolderMask,pfolderFlags)	\
    (This)->lpVtbl -> GetFolderFlags(This,pfolderMask,pfolderFlags)

#define IFolderViewSettings_GetSortColumns(This,rgSortColumns,cColumnsIn,pcColumnsOut)	\
    (This)->lpVtbl -> GetSortColumns(This,rgSortColumns,cColumnsIn,pcColumnsOut)

#define IFolderViewSettings_GetGroupSubsetCount(This,pcVisibleRows)	\
    (This)->lpVtbl -> GetGroupSubsetCount(This,pcVisibleRows)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IFolderViewSettings_GetColumnPropertyList_Proxy( 
    IFolderViewSettings __RPC_FAR * This,
    /* [in] */ REFIID riid,
    /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);


void __RPC_STUB IFolderViewSettings_GetColumnPropertyList_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderViewSettings_GetGroupByProperty_Proxy( 
    IFolderViewSettings __RPC_FAR * This,
    /* [out] */ PROPERTYKEY __RPC_FAR *pkey,
    /* [out] */ BOOL __RPC_FAR *pfGroupAscending);


void __RPC_STUB IFolderViewSettings_GetGroupByProperty_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderViewSettings_GetViewMode_Proxy( 
    IFolderViewSettings __RPC_FAR * This,
    /* [out] */ FOLDERLOGICALVIEWMODE __RPC_FAR *plvm);


void __RPC_STUB IFolderViewSettings_GetViewMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderViewSettings_GetIconSize_Proxy( 
    IFolderViewSettings __RPC_FAR * This,
    /* [out] */ UINT __RPC_FAR *puIconSize);


void __RPC_STUB IFolderViewSettings_GetIconSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderViewSettings_GetFolderFlags_Proxy( 
    IFolderViewSettings __RPC_FAR * This,
    /* [out] */ FOLDERFLAGS __RPC_FAR *pfolderMask,
    /* [out] */ FOLDERFLAGS __RPC_FAR *pfolderFlags);


void __RPC_STUB IFolderViewSettings_GetFolderFlags_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderViewSettings_GetSortColumns_Proxy( 
    IFolderViewSettings __RPC_FAR * This,
    /* [length_is][size_is][out] */ SORTCOLUMN __RPC_FAR *rgSortColumns,
    /* [in] */ UINT cColumnsIn,
    /* [out] */ UINT __RPC_FAR *pcColumnsOut);


void __RPC_STUB IFolderViewSettings_GetSortColumns_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderViewSettings_GetGroupSubsetCount_Proxy( 
    IFolderViewSettings __RPC_FAR * This,
    /* [out] */ UINT __RPC_FAR *pcVisibleRows);


void __RPC_STUB IFolderViewSettings_GetGroupSubsetCount_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IFolderViewSettings_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0309 */
/* [local] */ 

#endif  // NTDDI_LONGHORN
#endif  // (_WIN32_IE >= _WIN32_IE_IE70)
#if (_WIN32_IE >= _WIN32_IE_IE70)


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0309_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0309_v0_0_s_ifspec;

#ifndef __IPreviewHandlerVisuals_INTERFACE_DEFINED__
#define __IPreviewHandlerVisuals_INTERFACE_DEFINED__

/* interface IPreviewHandlerVisuals */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IPreviewHandlerVisuals;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("196bf9a5-b346-4ef0-aa1e-5dcdb76768b1")
    IPreviewHandlerVisuals : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetBackgroundColor( 
            /* [in] */ COLORREF color) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetFont( 
            /* [in] */ const LOGFONTW __RPC_FAR *plf) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetTextColor( 
            /* [in] */ COLORREF color) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IPreviewHandlerVisualsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IPreviewHandlerVisuals __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IPreviewHandlerVisuals __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IPreviewHandlerVisuals __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetBackgroundColor )( 
            IPreviewHandlerVisuals __RPC_FAR * This,
            /* [in] */ COLORREF color);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFont )( 
            IPreviewHandlerVisuals __RPC_FAR * This,
            /* [in] */ const LOGFONTW __RPC_FAR *plf);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetTextColor )( 
            IPreviewHandlerVisuals __RPC_FAR * This,
            /* [in] */ COLORREF color);
        
        END_INTERFACE
    } IPreviewHandlerVisualsVtbl;

    interface IPreviewHandlerVisuals
    {
        CONST_VTBL struct IPreviewHandlerVisualsVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IPreviewHandlerVisuals_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IPreviewHandlerVisuals_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IPreviewHandlerVisuals_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IPreviewHandlerVisuals_SetBackgroundColor(This,color)	\
    (This)->lpVtbl -> SetBackgroundColor(This,color)

#define IPreviewHandlerVisuals_SetFont(This,plf)	\
    (This)->lpVtbl -> SetFont(This,plf)

#define IPreviewHandlerVisuals_SetTextColor(This,color)	\
    (This)->lpVtbl -> SetTextColor(This,color)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IPreviewHandlerVisuals_SetBackgroundColor_Proxy( 
    IPreviewHandlerVisuals __RPC_FAR * This,
    /* [in] */ COLORREF color);


void __RPC_STUB IPreviewHandlerVisuals_SetBackgroundColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IPreviewHandlerVisuals_SetFont_Proxy( 
    IPreviewHandlerVisuals __RPC_FAR * This,
    /* [in] */ const LOGFONTW __RPC_FAR *plf);


void __RPC_STUB IPreviewHandlerVisuals_SetFont_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IPreviewHandlerVisuals_SetTextColor_Proxy( 
    IPreviewHandlerVisuals __RPC_FAR * This,
    /* [in] */ COLORREF color);


void __RPC_STUB IPreviewHandlerVisuals_SetTextColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IPreviewHandlerVisuals_INTERFACE_DEFINED__ */


#ifndef __IVisualProperties_INTERFACE_DEFINED__
#define __IVisualProperties_INTERFACE_DEFINED__

/* interface IVisualProperties */
/* [unique][object][uuid] */ 

typedef /* [v1_enum] */ 
enum tagVPWATERMARKFLAGS
    {	VPWF_DEFAULT	= 0,
	VPWF_ALPHABLEND	= 0x1
    }	VPWATERMARKFLAGS;

typedef /* [v1_enum] */ 
enum tagVPCOLORFLAGS
    {	VPCF_TEXT	= 0x1,
	VPCF_BACKGROUND	= 0x2,
	VPCF_SORTCOLUMN	= 0x3,
	VPCF_SUBTEXT	= 0x4
    }	VPCOLORFLAGS;


EXTERN_C const IID IID_IVisualProperties;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("e693cf68-d967-4112-8763-99172aee5e5a")
    IVisualProperties : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetWatermark( 
            /* [unique][in] */ HBITMAP hbmp,
            /* [in] */ VPWATERMARKFLAGS vpwf) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetColor( 
            /* [in] */ VPCOLORFLAGS vpcf,
            /* [in] */ COLORREF cr) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetColor( 
            /* [in] */ VPCOLORFLAGS vpcf,
            /* [out] */ COLORREF __RPC_FAR *pcr) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetItemHeight( 
            /* [in] */ int cyItemInPixels) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetItemHeight( 
            /* [out] */ int __RPC_FAR *cyItemInPixels) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetFont( 
            /* [in] */ const LOGFONTW __RPC_FAR *plf,
            /* [in] */ BOOL bRedraw) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFont( 
            /* [out] */ LOGFONTW __RPC_FAR *plf) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetTheme( 
            /* [string][in] */ LPCWSTR pszSubAppName,
            /* [string][in] */ LPCWSTR pszSubIdList) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVisualPropertiesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IVisualProperties __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IVisualProperties __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IVisualProperties __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetWatermark )( 
            IVisualProperties __RPC_FAR * This,
            /* [unique][in] */ HBITMAP hbmp,
            /* [in] */ VPWATERMARKFLAGS vpwf);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetColor )( 
            IVisualProperties __RPC_FAR * This,
            /* [in] */ VPCOLORFLAGS vpcf,
            /* [in] */ COLORREF cr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetColor )( 
            IVisualProperties __RPC_FAR * This,
            /* [in] */ VPCOLORFLAGS vpcf,
            /* [out] */ COLORREF __RPC_FAR *pcr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetItemHeight )( 
            IVisualProperties __RPC_FAR * This,
            /* [in] */ int cyItemInPixels);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetItemHeight )( 
            IVisualProperties __RPC_FAR * This,
            /* [out] */ int __RPC_FAR *cyItemInPixels);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFont )( 
            IVisualProperties __RPC_FAR * This,
            /* [in] */ const LOGFONTW __RPC_FAR *plf,
            /* [in] */ BOOL bRedraw);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFont )( 
            IVisualProperties __RPC_FAR * This,
            /* [out] */ LOGFONTW __RPC_FAR *plf);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetTheme )( 
            IVisualProperties __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszSubAppName,
            /* [string][in] */ LPCWSTR pszSubIdList);
        
        END_INTERFACE
    } IVisualPropertiesVtbl;

    interface IVisualProperties
    {
        CONST_VTBL struct IVisualPropertiesVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVisualProperties_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IVisualProperties_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IVisualProperties_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IVisualProperties_SetWatermark(This,hbmp,vpwf)	\
    (This)->lpVtbl -> SetWatermark(This,hbmp,vpwf)

#define IVisualProperties_SetColor(This,vpcf,cr)	\
    (This)->lpVtbl -> SetColor(This,vpcf,cr)

#define IVisualProperties_GetColor(This,vpcf,pcr)	\
    (This)->lpVtbl -> GetColor(This,vpcf,pcr)

#define IVisualProperties_SetItemHeight(This,cyItemInPixels)	\
    (This)->lpVtbl -> SetItemHeight(This,cyItemInPixels)

#define IVisualProperties_GetItemHeight(This,cyItemInPixels)	\
    (This)->lpVtbl -> GetItemHeight(This,cyItemInPixels)

#define IVisualProperties_SetFont(This,plf,bRedraw)	\
    (This)->lpVtbl -> SetFont(This,plf,bRedraw)

#define IVisualProperties_GetFont(This,plf)	\
    (This)->lpVtbl -> GetFont(This,plf)

#define IVisualProperties_SetTheme(This,pszSubAppName,pszSubIdList)	\
    (This)->lpVtbl -> SetTheme(This,pszSubAppName,pszSubIdList)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IVisualProperties_SetWatermark_Proxy( 
    IVisualProperties __RPC_FAR * This,
    /* [unique][in] */ HBITMAP hbmp,
    /* [in] */ VPWATERMARKFLAGS vpwf);


void __RPC_STUB IVisualProperties_SetWatermark_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IVisualProperties_SetColor_Proxy( 
    IVisualProperties __RPC_FAR * This,
    /* [in] */ VPCOLORFLAGS vpcf,
    /* [in] */ COLORREF cr);


void __RPC_STUB IVisualProperties_SetColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IVisualProperties_GetColor_Proxy( 
    IVisualProperties __RPC_FAR * This,
    /* [in] */ VPCOLORFLAGS vpcf,
    /* [out] */ COLORREF __RPC_FAR *pcr);


void __RPC_STUB IVisualProperties_GetColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IVisualProperties_SetItemHeight_Proxy( 
    IVisualProperties __RPC_FAR * This,
    /* [in] */ int cyItemInPixels);


void __RPC_STUB IVisualProperties_SetItemHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IVisualProperties_GetItemHeight_Proxy( 
    IVisualProperties __RPC_FAR * This,
    /* [out] */ int __RPC_FAR *cyItemInPixels);


void __RPC_STUB IVisualProperties_GetItemHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IVisualProperties_SetFont_Proxy( 
    IVisualProperties __RPC_FAR * This,
    /* [in] */ const LOGFONTW __RPC_FAR *plf,
    /* [in] */ BOOL bRedraw);


void __RPC_STUB IVisualProperties_SetFont_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IVisualProperties_GetFont_Proxy( 
    IVisualProperties __RPC_FAR * This,
    /* [out] */ LOGFONTW __RPC_FAR *plf);


void __RPC_STUB IVisualProperties_GetFont_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IVisualProperties_SetTheme_Proxy( 
    IVisualProperties __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszSubAppName,
    /* [string][in] */ LPCWSTR pszSubIdList);


void __RPC_STUB IVisualProperties_SetTheme_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IVisualProperties_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0311 */
/* [local] */ 

#endif  // _WIN32_IE_IE70
#define CDBOSC_SETFOCUS     0x00000000
#define CDBOSC_KILLFOCUS    0x00000001
#define CDBOSC_SELCHANGE    0x00000002
#define CDBOSC_RENAME       0x00000003
#define CDBOSC_STATECHANGE  0x00000004


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0311_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0311_v0_0_s_ifspec;

#ifndef __ICommDlgBrowser_INTERFACE_DEFINED__
#define __ICommDlgBrowser_INTERFACE_DEFINED__

/* interface ICommDlgBrowser */
/* [unique][object][uuid] */ 


EXTERN_C const IID IID_ICommDlgBrowser;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000214F1-0000-0000-C000-000000000046")
    ICommDlgBrowser : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OnDefaultCommand( 
            /* [in] */ IShellView __RPC_FAR *ppshv) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnStateChange( 
            /* [in] */ IShellView __RPC_FAR *ppshv,
            /* [in] */ ULONG uChange) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IncludeObject( 
            /* [unique][in] */ IShellView __RPC_FAR *ppshv,
            /* [in] */ PCUITEMID_CHILD pidl) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ICommDlgBrowserVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            ICommDlgBrowser __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            ICommDlgBrowser __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            ICommDlgBrowser __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnDefaultCommand )( 
            ICommDlgBrowser __RPC_FAR * This,
            /* [in] */ IShellView __RPC_FAR *ppshv);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnStateChange )( 
            ICommDlgBrowser __RPC_FAR * This,
            /* [in] */ IShellView __RPC_FAR *ppshv,
            /* [in] */ ULONG uChange);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *IncludeObject )( 
            ICommDlgBrowser __RPC_FAR * This,
            /* [unique][in] */ IShellView __RPC_FAR *ppshv,
            /* [in] */ PCUITEMID_CHILD pidl);
        
        END_INTERFACE
    } ICommDlgBrowserVtbl;

    interface ICommDlgBrowser
    {
        CONST_VTBL struct ICommDlgBrowserVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICommDlgBrowser_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define ICommDlgBrowser_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define ICommDlgBrowser_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define ICommDlgBrowser_OnDefaultCommand(This,ppshv)	\
    (This)->lpVtbl -> OnDefaultCommand(This,ppshv)

#define ICommDlgBrowser_OnStateChange(This,ppshv,uChange)	\
    (This)->lpVtbl -> OnStateChange(This,ppshv,uChange)

#define ICommDlgBrowser_IncludeObject(This,ppshv,pidl)	\
    (This)->lpVtbl -> IncludeObject(This,ppshv,pidl)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE ICommDlgBrowser_OnDefaultCommand_Proxy( 
    ICommDlgBrowser __RPC_FAR * This,
    /* [in] */ IShellView __RPC_FAR *ppshv);


void __RPC_STUB ICommDlgBrowser_OnDefaultCommand_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ICommDlgBrowser_OnStateChange_Proxy( 
    ICommDlgBrowser __RPC_FAR * This,
    /* [in] */ IShellView __RPC_FAR *ppshv,
    /* [in] */ ULONG uChange);


void __RPC_STUB ICommDlgBrowser_OnStateChange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ICommDlgBrowser_IncludeObject_Proxy( 
    ICommDlgBrowser __RPC_FAR * This,
    /* [unique][in] */ IShellView __RPC_FAR *ppshv,
    /* [in] */ PCUITEMID_CHILD pidl);


void __RPC_STUB ICommDlgBrowser_IncludeObject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __ICommDlgBrowser_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0312 */
/* [local] */ 

typedef ICommDlgBrowser __RPC_FAR *LPCOMMDLGBROWSER;

#define SID_SExplorerBrowserFrame IID_ICommDlgBrowser
#if (NTDDI_VERSION >= NTDDI_WIN2K)
#define CDB2N_CONTEXTMENU_DONE  0x00000001
#define CDB2N_CONTEXTMENU_START 0x00000002
#define CDB2GVF_SHOWALLFILES        0x00000001
#if (NTDDI_VERSION >= NTDDI_LONGHORN)
#define CDB2GVF_ISFILESAVE          0x00000002 // is file save, else file open
#define CDB2GVF_ALLOWPREVIEWPANE    0x00000004
#define CDB2GVF_NOSELECTVERB        0x00000008
#define CDB2GVF_NOINCLUDEITEM       0x00000010
#define CDB2GVF_ISFOLDERPICKER      0x00000020
#endif  // NTDDI_LONGHORN


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0312_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0312_v0_0_s_ifspec;

#ifndef __ICommDlgBrowser2_INTERFACE_DEFINED__
#define __ICommDlgBrowser2_INTERFACE_DEFINED__

/* interface ICommDlgBrowser2 */
/* [unique][object][uuid] */ 


EXTERN_C const IID IID_ICommDlgBrowser2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("10339516-2894-11d2-9039-00C04F8EEB3E")
    ICommDlgBrowser2 : public ICommDlgBrowser
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Notify( 
            /* [in] */ IShellView __RPC_FAR *ppshv,
            /* [in] */ DWORD dwNotifyType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDefaultMenuText( 
            /* [in] */ IShellView __RPC_FAR *ppshv,
            /* [size_is][string][out] */ LPWSTR pszText,
            /* [in] */ int cchMax) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetViewFlags( 
            /* [out] */ DWORD __RPC_FAR *pdwFlags) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ICommDlgBrowser2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            ICommDlgBrowser2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            ICommDlgBrowser2 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            ICommDlgBrowser2 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnDefaultCommand )( 
            ICommDlgBrowser2 __RPC_FAR * This,
            /* [in] */ IShellView __RPC_FAR *ppshv);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnStateChange )( 
            ICommDlgBrowser2 __RPC_FAR * This,
            /* [in] */ IShellView __RPC_FAR *ppshv,
            /* [in] */ ULONG uChange);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *IncludeObject )( 
            ICommDlgBrowser2 __RPC_FAR * This,
            /* [unique][in] */ IShellView __RPC_FAR *ppshv,
            /* [in] */ PCUITEMID_CHILD pidl);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Notify )( 
            ICommDlgBrowser2 __RPC_FAR * This,
            /* [in] */ IShellView __RPC_FAR *ppshv,
            /* [in] */ DWORD dwNotifyType);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetDefaultMenuText )( 
            ICommDlgBrowser2 __RPC_FAR * This,
            /* [in] */ IShellView __RPC_FAR *ppshv,
            /* [size_is][string][out] */ LPWSTR pszText,
            /* [in] */ int cchMax);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetViewFlags )( 
            ICommDlgBrowser2 __RPC_FAR * This,
            /* [out] */ DWORD __RPC_FAR *pdwFlags);
        
        END_INTERFACE
    } ICommDlgBrowser2Vtbl;

    interface ICommDlgBrowser2
    {
        CONST_VTBL struct ICommDlgBrowser2Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICommDlgBrowser2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define ICommDlgBrowser2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define ICommDlgBrowser2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define ICommDlgBrowser2_OnDefaultCommand(This,ppshv)	\
    (This)->lpVtbl -> OnDefaultCommand(This,ppshv)

#define ICommDlgBrowser2_OnStateChange(This,ppshv,uChange)	\
    (This)->lpVtbl -> OnStateChange(This,ppshv,uChange)

#define ICommDlgBrowser2_IncludeObject(This,ppshv,pidl)	\
    (This)->lpVtbl -> IncludeObject(This,ppshv,pidl)


#define ICommDlgBrowser2_Notify(This,ppshv,dwNotifyType)	\
    (This)->lpVtbl -> Notify(This,ppshv,dwNotifyType)

#define ICommDlgBrowser2_GetDefaultMenuText(This,ppshv,pszText,cchMax)	\
    (This)->lpVtbl -> GetDefaultMenuText(This,ppshv,pszText,cchMax)

#define ICommDlgBrowser2_GetViewFlags(This,pdwFlags)	\
    (This)->lpVtbl -> GetViewFlags(This,pdwFlags)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE ICommDlgBrowser2_Notify_Proxy( 
    ICommDlgBrowser2 __RPC_FAR * This,
    /* [in] */ IShellView __RPC_FAR *ppshv,
    /* [in] */ DWORD dwNotifyType);


void __RPC_STUB ICommDlgBrowser2_Notify_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ICommDlgBrowser2_GetDefaultMenuText_Proxy( 
    ICommDlgBrowser2 __RPC_FAR * This,
    /* [in] */ IShellView __RPC_FAR *ppshv,
    /* [size_is][string][out] */ LPWSTR pszText,
    /* [in] */ int cchMax);


void __RPC_STUB ICommDlgBrowser2_GetDefaultMenuText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ICommDlgBrowser2_GetViewFlags_Proxy( 
    ICommDlgBrowser2 __RPC_FAR * This,
    /* [out] */ DWORD __RPC_FAR *pdwFlags);


void __RPC_STUB ICommDlgBrowser2_GetViewFlags_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __ICommDlgBrowser2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0313 */
/* [local] */ 

typedef ICommDlgBrowser2 __RPC_FAR *LPCOMMDLGBROWSER2;

#endif  // NTDDI_WIN2K
#if (_WIN32_IE >= _WIN32_IE_IE70)


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0313_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0313_v0_0_s_ifspec;

#ifndef __ICommDlgBrowser3_INTERFACE_DEFINED__
#define __ICommDlgBrowser3_INTERFACE_DEFINED__

/* interface ICommDlgBrowser3 */
/* [unique][object][uuid] */ 


EXTERN_C const IID IID_ICommDlgBrowser3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c8ad25a1-3294-41ee-8165-71174bd01c57")
    ICommDlgBrowser3 : public ICommDlgBrowser2
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OnColumnClicked( 
            /* [in] */ IShellView __RPC_FAR *ppshv,
            /* [in] */ int iColumn) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCurrentFilter( 
            /* [size_is][string][out] */ LPWSTR pszFileSpec,
            /* [in] */ int cchFileSpec) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnPreViewCreated( 
            /* [in] */ IShellView __RPC_FAR *ppshv) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ICommDlgBrowser3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            ICommDlgBrowser3 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            ICommDlgBrowser3 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            ICommDlgBrowser3 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnDefaultCommand )( 
            ICommDlgBrowser3 __RPC_FAR * This,
            /* [in] */ IShellView __RPC_FAR *ppshv);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnStateChange )( 
            ICommDlgBrowser3 __RPC_FAR * This,
            /* [in] */ IShellView __RPC_FAR *ppshv,
            /* [in] */ ULONG uChange);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *IncludeObject )( 
            ICommDlgBrowser3 __RPC_FAR * This,
            /* [unique][in] */ IShellView __RPC_FAR *ppshv,
            /* [in] */ PCUITEMID_CHILD pidl);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Notify )( 
            ICommDlgBrowser3 __RPC_FAR * This,
            /* [in] */ IShellView __RPC_FAR *ppshv,
            /* [in] */ DWORD dwNotifyType);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetDefaultMenuText )( 
            ICommDlgBrowser3 __RPC_FAR * This,
            /* [in] */ IShellView __RPC_FAR *ppshv,
            /* [size_is][string][out] */ LPWSTR pszText,
            /* [in] */ int cchMax);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetViewFlags )( 
            ICommDlgBrowser3 __RPC_FAR * This,
            /* [out] */ DWORD __RPC_FAR *pdwFlags);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnColumnClicked )( 
            ICommDlgBrowser3 __RPC_FAR * This,
            /* [in] */ IShellView __RPC_FAR *ppshv,
            /* [in] */ int iColumn);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCurrentFilter )( 
            ICommDlgBrowser3 __RPC_FAR * This,
            /* [size_is][string][out] */ LPWSTR pszFileSpec,
            /* [in] */ int cchFileSpec);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnPreViewCreated )( 
            ICommDlgBrowser3 __RPC_FAR * This,
            /* [in] */ IShellView __RPC_FAR *ppshv);
        
        END_INTERFACE
    } ICommDlgBrowser3Vtbl;

    interface ICommDlgBrowser3
    {
        CONST_VTBL struct ICommDlgBrowser3Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICommDlgBrowser3_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define ICommDlgBrowser3_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define ICommDlgBrowser3_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define ICommDlgBrowser3_OnDefaultCommand(This,ppshv)	\
    (This)->lpVtbl -> OnDefaultCommand(This,ppshv)

#define ICommDlgBrowser3_OnStateChange(This,ppshv,uChange)	\
    (This)->lpVtbl -> OnStateChange(This,ppshv,uChange)

#define ICommDlgBrowser3_IncludeObject(This,ppshv,pidl)	\
    (This)->lpVtbl -> IncludeObject(This,ppshv,pidl)


#define ICommDlgBrowser3_Notify(This,ppshv,dwNotifyType)	\
    (This)->lpVtbl -> Notify(This,ppshv,dwNotifyType)

#define ICommDlgBrowser3_GetDefaultMenuText(This,ppshv,pszText,cchMax)	\
    (This)->lpVtbl -> GetDefaultMenuText(This,ppshv,pszText,cchMax)

#define ICommDlgBrowser3_GetViewFlags(This,pdwFlags)	\
    (This)->lpVtbl -> GetViewFlags(This,pdwFlags)


#define ICommDlgBrowser3_OnColumnClicked(This,ppshv,iColumn)	\
    (This)->lpVtbl -> OnColumnClicked(This,ppshv,iColumn)

#define ICommDlgBrowser3_GetCurrentFilter(This,pszFileSpec,cchFileSpec)	\
    (This)->lpVtbl -> GetCurrentFilter(This,pszFileSpec,cchFileSpec)

#define ICommDlgBrowser3_OnPreViewCreated(This,ppshv)	\
    (This)->lpVtbl -> OnPreViewCreated(This,ppshv)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE ICommDlgBrowser3_OnColumnClicked_Proxy( 
    ICommDlgBrowser3 __RPC_FAR * This,
    /* [in] */ IShellView __RPC_FAR *ppshv,
    /* [in] */ int iColumn);


void __RPC_STUB ICommDlgBrowser3_OnColumnClicked_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ICommDlgBrowser3_GetCurrentFilter_Proxy( 
    ICommDlgBrowser3 __RPC_FAR * This,
    /* [size_is][string][out] */ LPWSTR pszFileSpec,
    /* [in] */ int cchFileSpec);


void __RPC_STUB ICommDlgBrowser3_GetCurrentFilter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ICommDlgBrowser3_OnPreViewCreated_Proxy( 
    ICommDlgBrowser3 __RPC_FAR * This,
    /* [in] */ IShellView __RPC_FAR *ppshv);


void __RPC_STUB ICommDlgBrowser3_OnPreViewCreated_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __ICommDlgBrowser3_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0314 */
/* [local] */ 

typedef /* [v1_enum] */ 
enum tagCM_MASK
    {	CM_MASK_WIDTH	= 0x1,
	CM_MASK_DEFAULTWIDTH	= 0x2,
	CM_MASK_IDEALWIDTH	= 0x4,
	CM_MASK_NAME	= 0x8,
	CM_MASK_STATE	= 0x10
    }	CM_MASK;

typedef /* [v1_enum] */ 
enum tagCM_STATE
    {	CM_STATE_NONE	= 0,
	CM_STATE_VISIBLE	= 0x1,
	CM_STATE_FIXEDWIDTH	= 0x2,
	CM_STATE_NOSORTBYFOLDERNESS	= 0x4,
	CM_STATE_ALWAYSVISIBLE	= 0x8
    }	CM_STATE;

typedef /* [v1_enum] */ 
enum tagCM_ENUM_FLAGS
    {	CM_ENUM_ALL	= 0x1,
	CM_ENUM_VISIBLE	= 0x2
    }	CM_ENUM_FLAGS;

typedef /* [v1_enum] */ 
enum tagCM_SET_WIDTH_VALUE
    {	CM_WIDTH_USEDEFAULT	= -1,
	CM_WIDTH_AUTOSIZE	= -2
    }	CM_SET_WIDTH_VALUE;

typedef struct tagCM_COLUMNINFO
    {
    DWORD cbSize;
    DWORD dwMask;
    DWORD dwState;
    UINT uWidth;
    UINT uDefaultWidth;
    UINT uIdealWidth;
    WCHAR wszName[ 80 ];
    }	CM_COLUMNINFO;



extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0314_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0314_v0_0_s_ifspec;

#ifndef __IColumnManager_INTERFACE_DEFINED__
#define __IColumnManager_INTERFACE_DEFINED__

/* interface IColumnManager */
/* [unique][object][uuid] */ 


EXTERN_C const IID IID_IColumnManager;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("d8ec27bb-3f3b-4042-b10a-4acfd924d453")
    IColumnManager : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetColumnInfo( 
            /* [in] */ REFPROPERTYKEY propkey,
            /* [in] */ const CM_COLUMNINFO __RPC_FAR *pcmci) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetColumnInfo( 
            /* [in] */ REFPROPERTYKEY propkey,
            /* [out] */ CM_COLUMNINFO __RPC_FAR *pcmci) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetColumnCount( 
            /* [in] */ CM_ENUM_FLAGS dwFlags,
            /* [out] */ UINT __RPC_FAR *puCount) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetColumns( 
            /* [in] */ CM_ENUM_FLAGS dwFlags,
            /* [size_is][out] */ PROPERTYKEY __RPC_FAR *rgkeyOrder,
            /* [in] */ UINT cColumns) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetColumns( 
            /* [size_is][in] */ const PROPERTYKEY __RPC_FAR *rgkeyOrder,
            /* [in] */ UINT cVisible) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IColumnManagerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IColumnManager __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IColumnManager __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IColumnManager __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetColumnInfo )( 
            IColumnManager __RPC_FAR * This,
            /* [in] */ REFPROPERTYKEY propkey,
            /* [in] */ const CM_COLUMNINFO __RPC_FAR *pcmci);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetColumnInfo )( 
            IColumnManager __RPC_FAR * This,
            /* [in] */ REFPROPERTYKEY propkey,
            /* [out] */ CM_COLUMNINFO __RPC_FAR *pcmci);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetColumnCount )( 
            IColumnManager __RPC_FAR * This,
            /* [in] */ CM_ENUM_FLAGS dwFlags,
            /* [out] */ UINT __RPC_FAR *puCount);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetColumns )( 
            IColumnManager __RPC_FAR * This,
            /* [in] */ CM_ENUM_FLAGS dwFlags,
            /* [size_is][out] */ PROPERTYKEY __RPC_FAR *rgkeyOrder,
            /* [in] */ UINT cColumns);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetColumns )( 
            IColumnManager __RPC_FAR * This,
            /* [size_is][in] */ const PROPERTYKEY __RPC_FAR *rgkeyOrder,
            /* [in] */ UINT cVisible);
        
        END_INTERFACE
    } IColumnManagerVtbl;

    interface IColumnManager
    {
        CONST_VTBL struct IColumnManagerVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IColumnManager_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IColumnManager_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IColumnManager_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IColumnManager_SetColumnInfo(This,propkey,pcmci)	\
    (This)->lpVtbl -> SetColumnInfo(This,propkey,pcmci)

#define IColumnManager_GetColumnInfo(This,propkey,pcmci)	\
    (This)->lpVtbl -> GetColumnInfo(This,propkey,pcmci)

#define IColumnManager_GetColumnCount(This,dwFlags,puCount)	\
    (This)->lpVtbl -> GetColumnCount(This,dwFlags,puCount)

#define IColumnManager_GetColumns(This,dwFlags,rgkeyOrder,cColumns)	\
    (This)->lpVtbl -> GetColumns(This,dwFlags,rgkeyOrder,cColumns)

#define IColumnManager_SetColumns(This,rgkeyOrder,cVisible)	\
    (This)->lpVtbl -> SetColumns(This,rgkeyOrder,cVisible)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IColumnManager_SetColumnInfo_Proxy( 
    IColumnManager __RPC_FAR * This,
    /* [in] */ REFPROPERTYKEY propkey,
    /* [in] */ const CM_COLUMNINFO __RPC_FAR *pcmci);


void __RPC_STUB IColumnManager_SetColumnInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IColumnManager_GetColumnInfo_Proxy( 
    IColumnManager __RPC_FAR * This,
    /* [in] */ REFPROPERTYKEY propkey,
    /* [out] */ CM_COLUMNINFO __RPC_FAR *pcmci);


void __RPC_STUB IColumnManager_GetColumnInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IColumnManager_GetColumnCount_Proxy( 
    IColumnManager __RPC_FAR * This,
    /* [in] */ CM_ENUM_FLAGS dwFlags,
    /* [out] */ UINT __RPC_FAR *puCount);


void __RPC_STUB IColumnManager_GetColumnCount_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IColumnManager_GetColumns_Proxy( 
    IColumnManager __RPC_FAR * This,
    /* [in] */ CM_ENUM_FLAGS dwFlags,
    /* [size_is][out] */ PROPERTYKEY __RPC_FAR *rgkeyOrder,
    /* [in] */ UINT cColumns);


void __RPC_STUB IColumnManager_GetColumns_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IColumnManager_SetColumns_Proxy( 
    IColumnManager __RPC_FAR * This,
    /* [size_is][in] */ const PROPERTYKEY __RPC_FAR *rgkeyOrder,
    /* [in] */ UINT cVisible);


void __RPC_STUB IColumnManager_SetColumns_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IColumnManager_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0315 */
/* [local] */ 

#endif  // (_WIN32_IE >= _WIN32_IE_IE70)


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0315_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0315_v0_0_s_ifspec;

#ifndef __IFolderFilterSite_INTERFACE_DEFINED__
#define __IFolderFilterSite_INTERFACE_DEFINED__

/* interface IFolderFilterSite */
/* [unique][object][uuid] */ 


EXTERN_C const IID IID_IFolderFilterSite;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C0A651F5-B48B-11d2-B5ED-006097C686F6")
    IFolderFilterSite : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetFilter( 
            /* [in] */ IUnknown __RPC_FAR *punk) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IFolderFilterSiteVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IFolderFilterSite __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IFolderFilterSite __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IFolderFilterSite __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFilter )( 
            IFolderFilterSite __RPC_FAR * This,
            /* [in] */ IUnknown __RPC_FAR *punk);
        
        END_INTERFACE
    } IFolderFilterSiteVtbl;

    interface IFolderFilterSite
    {
        CONST_VTBL struct IFolderFilterSiteVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IFolderFilterSite_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IFolderFilterSite_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IFolderFilterSite_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IFolderFilterSite_SetFilter(This,punk)	\
    (This)->lpVtbl -> SetFilter(This,punk)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IFolderFilterSite_SetFilter_Proxy( 
    IFolderFilterSite __RPC_FAR * This,
    /* [in] */ IUnknown __RPC_FAR *punk);


void __RPC_STUB IFolderFilterSite_SetFilter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IFolderFilterSite_INTERFACE_DEFINED__ */


#ifndef __IFolderFilter_INTERFACE_DEFINED__
#define __IFolderFilter_INTERFACE_DEFINED__

/* interface IFolderFilter */
/* [unique][object][uuid] */ 


EXTERN_C const IID IID_IFolderFilter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9CC22886-DC8E-11d2-B1D0-00C04F8EEB3E")
    IFolderFilter : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE ShouldShow( 
            /* [in] */ IShellFolder __RPC_FAR *psf,
            /* [unique][in] */ PCIDLIST_ABSOLUTE pidlFolder,
            /* [in] */ PCUITEMID_CHILD pidlItem) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEnumFlags( 
            /* [in] */ IShellFolder __RPC_FAR *psf,
            /* [in] */ PCIDLIST_ABSOLUTE pidlFolder,
            /* [out] */ HWND __RPC_FAR *phwnd,
            /* [out][in] */ DWORD __RPC_FAR *pgrfFlags) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IFolderFilterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IFolderFilter __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IFolderFilter __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IFolderFilter __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ShouldShow )( 
            IFolderFilter __RPC_FAR * This,
            /* [in] */ IShellFolder __RPC_FAR *psf,
            /* [unique][in] */ PCIDLIST_ABSOLUTE pidlFolder,
            /* [in] */ PCUITEMID_CHILD pidlItem);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetEnumFlags )( 
            IFolderFilter __RPC_FAR * This,
            /* [in] */ IShellFolder __RPC_FAR *psf,
            /* [in] */ PCIDLIST_ABSOLUTE pidlFolder,
            /* [out] */ HWND __RPC_FAR *phwnd,
            /* [out][in] */ DWORD __RPC_FAR *pgrfFlags);
        
        END_INTERFACE
    } IFolderFilterVtbl;

    interface IFolderFilter
    {
        CONST_VTBL struct IFolderFilterVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IFolderFilter_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IFolderFilter_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IFolderFilter_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IFolderFilter_ShouldShow(This,psf,pidlFolder,pidlItem)	\
    (This)->lpVtbl -> ShouldShow(This,psf,pidlFolder,pidlItem)

#define IFolderFilter_GetEnumFlags(This,psf,pidlFolder,phwnd,pgrfFlags)	\
    (This)->lpVtbl -> GetEnumFlags(This,psf,pidlFolder,phwnd,pgrfFlags)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IFolderFilter_ShouldShow_Proxy( 
    IFolderFilter __RPC_FAR * This,
    /* [in] */ IShellFolder __RPC_FAR *psf,
    /* [unique][in] */ PCIDLIST_ABSOLUTE pidlFolder,
    /* [in] */ PCUITEMID_CHILD pidlItem);


void __RPC_STUB IFolderFilter_ShouldShow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderFilter_GetEnumFlags_Proxy( 
    IFolderFilter __RPC_FAR * This,
    /* [in] */ IShellFolder __RPC_FAR *psf,
    /* [in] */ PCIDLIST_ABSOLUTE pidlFolder,
    /* [out] */ HWND __RPC_FAR *phwnd,
    /* [out][in] */ DWORD __RPC_FAR *pgrfFlags);


void __RPC_STUB IFolderFilter_GetEnumFlags_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IFolderFilter_INTERFACE_DEFINED__ */


#ifndef __IInputObjectSite_INTERFACE_DEFINED__
#define __IInputObjectSite_INTERFACE_DEFINED__

/* interface IInputObjectSite */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IInputObjectSite;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F1DB8392-7331-11D0-8C99-00A0C92DBFE8")
    IInputObjectSite : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OnFocusChangeIS( 
            /* [unique][in] */ IUnknown __RPC_FAR *punkObj,
            /* [in] */ BOOL fSetFocus) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IInputObjectSiteVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IInputObjectSite __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IInputObjectSite __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IInputObjectSite __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnFocusChangeIS )( 
            IInputObjectSite __RPC_FAR * This,
            /* [unique][in] */ IUnknown __RPC_FAR *punkObj,
            /* [in] */ BOOL fSetFocus);
        
        END_INTERFACE
    } IInputObjectSiteVtbl;

    interface IInputObjectSite
    {
        CONST_VTBL struct IInputObjectSiteVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IInputObjectSite_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IInputObjectSite_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IInputObjectSite_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IInputObjectSite_OnFocusChangeIS(This,punkObj,fSetFocus)	\
    (This)->lpVtbl -> OnFocusChangeIS(This,punkObj,fSetFocus)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IInputObjectSite_OnFocusChangeIS_Proxy( 
    IInputObjectSite __RPC_FAR * This,
    /* [unique][in] */ IUnknown __RPC_FAR *punkObj,
    /* [in] */ BOOL fSetFocus);


void __RPC_STUB IInputObjectSite_OnFocusChangeIS_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IInputObjectSite_INTERFACE_DEFINED__ */


#ifndef __IInputObject_INTERFACE_DEFINED__
#define __IInputObject_INTERFACE_DEFINED__

/* interface IInputObject */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IInputObject;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("68284fAA-6A48-11D0-8c78-00C04fd918b4")
    IInputObject : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE UIActivateIO( 
            /* [in] */ BOOL fActivate,
            /* [unique][in] */ MSG __RPC_FAR *pMsg) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE HasFocusIO( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE TranslateAcceleratorIO( 
            /* [in] */ MSG __RPC_FAR *pMsg) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IInputObjectVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IInputObject __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IInputObject __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IInputObject __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *UIActivateIO )( 
            IInputObject __RPC_FAR * This,
            /* [in] */ BOOL fActivate,
            /* [unique][in] */ MSG __RPC_FAR *pMsg);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *HasFocusIO )( 
            IInputObject __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *TranslateAcceleratorIO )( 
            IInputObject __RPC_FAR * This,
            /* [in] */ MSG __RPC_FAR *pMsg);
        
        END_INTERFACE
    } IInputObjectVtbl;

    interface IInputObject
    {
        CONST_VTBL struct IInputObjectVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IInputObject_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IInputObject_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IInputObject_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IInputObject_UIActivateIO(This,fActivate,pMsg)	\
    (This)->lpVtbl -> UIActivateIO(This,fActivate,pMsg)

#define IInputObject_HasFocusIO(This)	\
    (This)->lpVtbl -> HasFocusIO(This)

#define IInputObject_TranslateAcceleratorIO(This,pMsg)	\
    (This)->lpVtbl -> TranslateAcceleratorIO(This,pMsg)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IInputObject_UIActivateIO_Proxy( 
    IInputObject __RPC_FAR * This,
    /* [in] */ BOOL fActivate,
    /* [unique][in] */ MSG __RPC_FAR *pMsg);


void __RPC_STUB IInputObject_UIActivateIO_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IInputObject_HasFocusIO_Proxy( 
    IInputObject __RPC_FAR * This);


void __RPC_STUB IInputObject_HasFocusIO_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IInputObject_TranslateAcceleratorIO_Proxy( 
    IInputObject __RPC_FAR * This,
    /* [in] */ MSG __RPC_FAR *pMsg);


void __RPC_STUB IInputObject_TranslateAcceleratorIO_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IInputObject_INTERFACE_DEFINED__ */


#ifndef __IInputObject2_INTERFACE_DEFINED__
#define __IInputObject2_INTERFACE_DEFINED__

/* interface IInputObject2 */
/* [local][unique][uuid][object] */ 


EXTERN_C const IID IID_IInputObject2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6915C085-510B-44cd-94AF-28DFA56CF92B")
    IInputObject2 : public IInputObject
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE TranslateAcceleratorGlobal( 
            /* [in] */ MSG __RPC_FAR *pMsg) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IInputObject2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IInputObject2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IInputObject2 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IInputObject2 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *UIActivateIO )( 
            IInputObject2 __RPC_FAR * This,
            /* [in] */ BOOL fActivate,
            /* [unique][in] */ MSG __RPC_FAR *pMsg);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *HasFocusIO )( 
            IInputObject2 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *TranslateAcceleratorIO )( 
            IInputObject2 __RPC_FAR * This,
            /* [in] */ MSG __RPC_FAR *pMsg);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *TranslateAcceleratorGlobal )( 
            IInputObject2 __RPC_FAR * This,
            /* [in] */ MSG __RPC_FAR *pMsg);
        
        END_INTERFACE
    } IInputObject2Vtbl;

    interface IInputObject2
    {
        CONST_VTBL struct IInputObject2Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IInputObject2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IInputObject2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IInputObject2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IInputObject2_UIActivateIO(This,fActivate,pMsg)	\
    (This)->lpVtbl -> UIActivateIO(This,fActivate,pMsg)

#define IInputObject2_HasFocusIO(This)	\
    (This)->lpVtbl -> HasFocusIO(This)

#define IInputObject2_TranslateAcceleratorIO(This,pMsg)	\
    (This)->lpVtbl -> TranslateAcceleratorIO(This,pMsg)


#define IInputObject2_TranslateAcceleratorGlobal(This,pMsg)	\
    (This)->lpVtbl -> TranslateAcceleratorGlobal(This,pMsg)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IInputObject2_TranslateAcceleratorGlobal_Proxy( 
    IInputObject2 __RPC_FAR * This,
    /* [in] */ MSG __RPC_FAR *pMsg);


void __RPC_STUB IInputObject2_TranslateAcceleratorGlobal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IInputObject2_INTERFACE_DEFINED__ */


#ifndef __IShellIcon_INTERFACE_DEFINED__
#define __IShellIcon_INTERFACE_DEFINED__

/* interface IShellIcon */
/* [unique][object][uuid] */ 


EXTERN_C const IID IID_IShellIcon;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000214E5-0000-0000-C000-000000000046")
    IShellIcon : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetIconOf( 
            /* [in] */ PCUITEMID_CHILD pidl,
            /* [in] */ UINT flags,
            /* [out] */ int __RPC_FAR *pIconIndex) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IShellIconVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IShellIcon __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IShellIcon __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IShellIcon __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIconOf )( 
            IShellIcon __RPC_FAR * This,
            /* [in] */ PCUITEMID_CHILD pidl,
            /* [in] */ UINT flags,
            /* [out] */ int __RPC_FAR *pIconIndex);
        
        END_INTERFACE
    } IShellIconVtbl;

    interface IShellIcon
    {
        CONST_VTBL struct IShellIconVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IShellIcon_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IShellIcon_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IShellIcon_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IShellIcon_GetIconOf(This,pidl,flags,pIconIndex)	\
    (This)->lpVtbl -> GetIconOf(This,pidl,flags,pIconIndex)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IShellIcon_GetIconOf_Proxy( 
    IShellIcon __RPC_FAR * This,
    /* [in] */ PCUITEMID_CHILD pidl,
    /* [in] */ UINT flags,
    /* [out] */ int __RPC_FAR *pIconIndex);


void __RPC_STUB IShellIcon_GetIconOf_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IShellIcon_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0321 */
/* [local] */ 

#define SBSP_DEFBROWSER         0x0000
#define SBSP_SAMEBROWSER        0x0001
#define SBSP_NEWBROWSER         0x0002
#define SBSP_DEFMODE            0x0000
#define SBSP_OPENMODE           0x0010
#define SBSP_EXPLOREMODE        0x0020
#define SBSP_HELPMODE           0x0040
#define SBSP_NOTRANSFERHIST     0x0080
#define SBSP_ABSOLUTE           0x0000
#define SBSP_RELATIVE           0x1000
#define SBSP_PARENT             0x2000
#define SBSP_NAVIGATEBACK       0x4000
#define SBSP_NAVIGATEFORWARD    0x8000
#define SBSP_ALLOW_AUTONAVIGATE   0x00010000
#if (NTDDI_VERSION >= NTDDI_LONGHORN)
#define SBSP_KEEPSAMETEMPLATE     0x00020000
#define SBSP_KEEPWORDWHEELTEXT    0x00040000
#define SBSP_ACTIVATE_NOFOCUS     0x00080000
#endif  // (NTDDI_VERSION >= NTDDI_LONGHORN)
#if (_WIN32_IE >= _WIN32_IE_IE60SP2)
#define SBSP_CALLERUNTRUSTED      0x00800000
#define SBSP_TRUSTFIRSTDOWNLOAD   0x01000000
#define SBSP_UNTRUSTEDFORDOWNLOAD 0x02000000
#endif  // _WIN32_IE_IE60SP2
#define SBSP_NOAUTOSELECT         0x04000000
#define SBSP_WRITENOHISTORY       0x08000000
#if (_WIN32_IE >= _WIN32_IE_IE60SP2)
#define SBSP_TRUSTEDFORACTIVEX    0x10000000
#endif  // _WIN32_IE_IE60SP2
#if (_WIN32_IE >= _WIN32_IE_IE70)
#define SBSP_FEEDNAVIGATION       0x20000000
#endif  // _WIN32_IE_IE70
#define SBSP_REDIRECT                     0x40000000
#define SBSP_INITIATEDBYHLINKFRAME        0x80000000
#define FCW_STATUS         0x0001
#define FCW_TOOLBAR        0x0002
#define FCW_TREE           0x0003
#define FCW_VIEW           0x0004    //;internal
#define FCW_BROWSER        0x0005    //;internal
#define FCW_INTERNETBAR    0x0006
#define FCW_MENUBAR        0x0007    //;internal
#define FCW_PROGRESS       0x0008
#if (_WIN32_IE >= 0x0400)            // ;internal
#define FCW_ADDRESSBAR     0x0009    // ;internal
#define FCW_LINKSBAR       0x000b    // ;internal
#define FCW_NAVBAR         0x000c    // ;internal
#endif                               // ;internal
#if (_WIN32_IE >= 0x0700)
#define FCW_PHISHINGFILTER 0x000d    // ;internal
#define FCW_ZOOMBUTTON     0x000e    // ;internal
#endif
#define FCT_MERGE       0x0001
#define FCT_CONFIGABLE  0x0002
#define FCT_ADDTOEND    0x0004
#ifdef _NEVER_
typedef LPARAM LPTBBUTTONSB;

#else //!_NEVER_
#include <commctrl.h>
typedef LPTBBUTTON LPTBBUTTONSB;
#endif //_NEVER_


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0321_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0321_v0_0_s_ifspec;

#ifndef __IShellBrowser_INTERFACE_DEFINED__
#define __IShellBrowser_INTERFACE_DEFINED__

/* interface IShellBrowser */
/* [unique][object][uuid] */ 


EXTERN_C const IID IID_IShellBrowser;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000214E2-0000-0000-C000-000000000046")
    IShellBrowser : public IOleWindow
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE InsertMenusSB( 
            /* [in] */ HMENU hmenuShared,
            /* [out][in] */ LPOLEMENUGROUPWIDTHS lpMenuWidths) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetMenuSB( 
            /* [unique][in] */ HMENU hmenuShared,
            /* [unique][in] */ HOLEMENU holemenuRes,
            /* [unique][in] */ HWND hwndActiveObject) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveMenusSB( 
            /* [in] */ HMENU hmenuShared) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetStatusTextSB( 
            /* [unique][in] */ LPCWSTR pszStatusText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnableModelessSB( 
            /* [in] */ BOOL fEnable) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE TranslateAcceleratorSB( 
            /* [in] */ MSG __RPC_FAR *pmsg,
            /* [in] */ WORD wID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE BrowseObject( 
            /* [unique][in] */ PCUIDLIST_RELATIVE pidl,
            /* [in] */ UINT wFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetViewStateStream( 
            /* [in] */ DWORD grfMode,
            /* [out] */ IStream __RPC_FAR *__RPC_FAR *ppStrm) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetControlWindow( 
            /* [in] */ UINT id,
            /* [out] */ HWND __RPC_FAR *phwnd) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE SendControlMsg( 
            /* [in] */ UINT id,
            /* [in] */ UINT uMsg,
            /* [in] */ WPARAM wParam,
            /* [in] */ LPARAM lParam,
            /* [out] */ LRESULT __RPC_FAR *pret) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE QueryActiveShellView( 
            /* [out] */ IShellView __RPC_FAR *__RPC_FAR *ppshv) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnViewWindowActive( 
            /* [in] */ IShellView __RPC_FAR *pshv) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE SetToolbarItems( 
            /* [in] */ LPTBBUTTONSB lpButtons,
            /* [in] */ UINT nButtons,
            /* [in] */ UINT uFlags) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IShellBrowserVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IShellBrowser __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IShellBrowser __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IShellBrowser __RPC_FAR * This);
        
        /* [input_sync] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetWindow )( 
            IShellBrowser __RPC_FAR * This,
            /* [out] */ HWND __RPC_FAR *phwnd);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ContextSensitiveHelp )( 
            IShellBrowser __RPC_FAR * This,
            /* [in] */ BOOL fEnterMode);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *InsertMenusSB )( 
            IShellBrowser __RPC_FAR * This,
            /* [in] */ HMENU hmenuShared,
            /* [out][in] */ LPOLEMENUGROUPWIDTHS lpMenuWidths);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetMenuSB )( 
            IShellBrowser __RPC_FAR * This,
            /* [unique][in] */ HMENU hmenuShared,
            /* [unique][in] */ HOLEMENU holemenuRes,
            /* [unique][in] */ HWND hwndActiveObject);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RemoveMenusSB )( 
            IShellBrowser __RPC_FAR * This,
            /* [in] */ HMENU hmenuShared);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetStatusTextSB )( 
            IShellBrowser __RPC_FAR * This,
            /* [unique][in] */ LPCWSTR pszStatusText);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *EnableModelessSB )( 
            IShellBrowser __RPC_FAR * This,
            /* [in] */ BOOL fEnable);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *TranslateAcceleratorSB )( 
            IShellBrowser __RPC_FAR * This,
            /* [in] */ MSG __RPC_FAR *pmsg,
            /* [in] */ WORD wID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *BrowseObject )( 
            IShellBrowser __RPC_FAR * This,
            /* [unique][in] */ PCUIDLIST_RELATIVE pidl,
            /* [in] */ UINT wFlags);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetViewStateStream )( 
            IShellBrowser __RPC_FAR * This,
            /* [in] */ DWORD grfMode,
            /* [out] */ IStream __RPC_FAR *__RPC_FAR *ppStrm);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetControlWindow )( 
            IShellBrowser __RPC_FAR * This,
            /* [in] */ UINT id,
            /* [out] */ HWND __RPC_FAR *phwnd);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SendControlMsg )( 
            IShellBrowser __RPC_FAR * This,
            /* [in] */ UINT id,
            /* [in] */ UINT uMsg,
            /* [in] */ WPARAM wParam,
            /* [in] */ LPARAM lParam,
            /* [out] */ LRESULT __RPC_FAR *pret);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryActiveShellView )( 
            IShellBrowser __RPC_FAR * This,
            /* [out] */ IShellView __RPC_FAR *__RPC_FAR *ppshv);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnViewWindowActive )( 
            IShellBrowser __RPC_FAR * This,
            /* [in] */ IShellView __RPC_FAR *pshv);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetToolbarItems )( 
            IShellBrowser __RPC_FAR * This,
            /* [in] */ LPTBBUTTONSB lpButtons,
            /* [in] */ UINT nButtons,
            /* [in] */ UINT uFlags);
        
        END_INTERFACE
    } IShellBrowserVtbl;

    interface IShellBrowser
    {
        CONST_VTBL struct IShellBrowserVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IShellBrowser_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IShellBrowser_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IShellBrowser_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IShellBrowser_GetWindow(This,phwnd)	\
    (This)->lpVtbl -> GetWindow(This,phwnd)

#define IShellBrowser_ContextSensitiveHelp(This,fEnterMode)	\
    (This)->lpVtbl -> ContextSensitiveHelp(This,fEnterMode)


#define IShellBrowser_InsertMenusSB(This,hmenuShared,lpMenuWidths)	\
    (This)->lpVtbl -> InsertMenusSB(This,hmenuShared,lpMenuWidths)

#define IShellBrowser_SetMenuSB(This,hmenuShared,holemenuRes,hwndActiveObject)	\
    (This)->lpVtbl -> SetMenuSB(This,hmenuShared,holemenuRes,hwndActiveObject)

#define IShellBrowser_RemoveMenusSB(This,hmenuShared)	\
    (This)->lpVtbl -> RemoveMenusSB(This,hmenuShared)

#define IShellBrowser_SetStatusTextSB(This,pszStatusText)	\
    (This)->lpVtbl -> SetStatusTextSB(This,pszStatusText)

#define IShellBrowser_EnableModelessSB(This,fEnable)	\
    (This)->lpVtbl -> EnableModelessSB(This,fEnable)

#define IShellBrowser_TranslateAcceleratorSB(This,pmsg,wID)	\
    (This)->lpVtbl -> TranslateAcceleratorSB(This,pmsg,wID)

#define IShellBrowser_BrowseObject(This,pidl,wFlags)	\
    (This)->lpVtbl -> BrowseObject(This,pidl,wFlags)

#define IShellBrowser_GetViewStateStream(This,grfMode,ppStrm)	\
    (This)->lpVtbl -> GetViewStateStream(This,grfMode,ppStrm)

#define IShellBrowser_GetControlWindow(This,id,phwnd)	\
    (This)->lpVtbl -> GetControlWindow(This,id,phwnd)

#define IShellBrowser_SendControlMsg(This,id,uMsg,wParam,lParam,pret)	\
    (This)->lpVtbl -> SendControlMsg(This,id,uMsg,wParam,lParam,pret)

#define IShellBrowser_QueryActiveShellView(This,ppshv)	\
    (This)->lpVtbl -> QueryActiveShellView(This,ppshv)

#define IShellBrowser_OnViewWindowActive(This,pshv)	\
    (This)->lpVtbl -> OnViewWindowActive(This,pshv)

#define IShellBrowser_SetToolbarItems(This,lpButtons,nButtons,uFlags)	\
    (This)->lpVtbl -> SetToolbarItems(This,lpButtons,nButtons,uFlags)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IShellBrowser_InsertMenusSB_Proxy( 
    IShellBrowser __RPC_FAR * This,
    /* [in] */ HMENU hmenuShared,
    /* [out][in] */ LPOLEMENUGROUPWIDTHS lpMenuWidths);


void __RPC_STUB IShellBrowser_InsertMenusSB_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellBrowser_SetMenuSB_Proxy( 
    IShellBrowser __RPC_FAR * This,
    /* [unique][in] */ HMENU hmenuShared,
    /* [unique][in] */ HOLEMENU holemenuRes,
    /* [unique][in] */ HWND hwndActiveObject);


void __RPC_STUB IShellBrowser_SetMenuSB_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellBrowser_RemoveMenusSB_Proxy( 
    IShellBrowser __RPC_FAR * This,
    /* [in] */ HMENU hmenuShared);


void __RPC_STUB IShellBrowser_RemoveMenusSB_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellBrowser_SetStatusTextSB_Proxy( 
    IShellBrowser __RPC_FAR * This,
    /* [unique][in] */ LPCWSTR pszStatusText);


void __RPC_STUB IShellBrowser_SetStatusTextSB_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellBrowser_EnableModelessSB_Proxy( 
    IShellBrowser __RPC_FAR * This,
    /* [in] */ BOOL fEnable);


void __RPC_STUB IShellBrowser_EnableModelessSB_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellBrowser_TranslateAcceleratorSB_Proxy( 
    IShellBrowser __RPC_FAR * This,
    /* [in] */ MSG __RPC_FAR *pmsg,
    /* [in] */ WORD wID);


void __RPC_STUB IShellBrowser_TranslateAcceleratorSB_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellBrowser_BrowseObject_Proxy( 
    IShellBrowser __RPC_FAR * This,
    /* [unique][in] */ PCUIDLIST_RELATIVE pidl,
    /* [in] */ UINT wFlags);


void __RPC_STUB IShellBrowser_BrowseObject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellBrowser_GetViewStateStream_Proxy( 
    IShellBrowser __RPC_FAR * This,
    /* [in] */ DWORD grfMode,
    /* [out] */ IStream __RPC_FAR *__RPC_FAR *ppStrm);


void __RPC_STUB IShellBrowser_GetViewStateStream_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellBrowser_GetControlWindow_Proxy( 
    IShellBrowser __RPC_FAR * This,
    /* [in] */ UINT id,
    /* [out] */ HWND __RPC_FAR *phwnd);


void __RPC_STUB IShellBrowser_GetControlWindow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [local] */ HRESULT STDMETHODCALLTYPE IShellBrowser_SendControlMsg_Proxy( 
    IShellBrowser __RPC_FAR * This,
    /* [in] */ UINT id,
    /* [in] */ UINT uMsg,
    /* [in] */ WPARAM wParam,
    /* [in] */ LPARAM lParam,
    /* [out] */ LRESULT __RPC_FAR *pret);


void __RPC_STUB IShellBrowser_SendControlMsg_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellBrowser_QueryActiveShellView_Proxy( 
    IShellBrowser __RPC_FAR * This,
    /* [out] */ IShellView __RPC_FAR *__RPC_FAR *ppshv);


void __RPC_STUB IShellBrowser_QueryActiveShellView_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellBrowser_OnViewWindowActive_Proxy( 
    IShellBrowser __RPC_FAR * This,
    /* [in] */ IShellView __RPC_FAR *pshv);


void __RPC_STUB IShellBrowser_OnViewWindowActive_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [local] */ HRESULT STDMETHODCALLTYPE IShellBrowser_SetToolbarItems_Proxy( 
    IShellBrowser __RPC_FAR * This,
    /* [in] */ LPTBBUTTONSB lpButtons,
    /* [in] */ UINT nButtons,
    /* [in] */ UINT uFlags);


void __RPC_STUB IShellBrowser_SetToolbarItems_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IShellBrowser_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0322 */
/* [local] */ 

typedef IShellBrowser __RPC_FAR *LPSHELLBROWSER;



extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0322_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0322_v0_0_s_ifspec;

#ifndef __IProfferService_INTERFACE_DEFINED__
#define __IProfferService_INTERFACE_DEFINED__

/* interface IProfferService */
/* [unique][object][uuid] */ 


EXTERN_C const IID IID_IProfferService;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("cb728b20-f786-11ce-92ad-00aa00a74cd0")
    IProfferService : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE ProfferService( 
            /* [in] */ REFGUID guidService,
            /* [in] */ IServiceProvider __RPC_FAR *psp,
            /* [out] */ DWORD __RPC_FAR *pdwCookie) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RevokeService( 
            /* [in] */ DWORD dwCookie) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IProfferServiceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IProfferService __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IProfferService __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IProfferService __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ProfferService )( 
            IProfferService __RPC_FAR * This,
            /* [in] */ REFGUID guidService,
            /* [in] */ IServiceProvider __RPC_FAR *psp,
            /* [out] */ DWORD __RPC_FAR *pdwCookie);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RevokeService )( 
            IProfferService __RPC_FAR * This,
            /* [in] */ DWORD dwCookie);
        
        END_INTERFACE
    } IProfferServiceVtbl;

    interface IProfferService
    {
        CONST_VTBL struct IProfferServiceVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IProfferService_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IProfferService_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IProfferService_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IProfferService_ProfferService(This,guidService,psp,pdwCookie)	\
    (This)->lpVtbl -> ProfferService(This,guidService,psp,pdwCookie)

#define IProfferService_RevokeService(This,dwCookie)	\
    (This)->lpVtbl -> RevokeService(This,dwCookie)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IProfferService_ProfferService_Proxy( 
    IProfferService __RPC_FAR * This,
    /* [in] */ REFGUID guidService,
    /* [in] */ IServiceProvider __RPC_FAR *psp,
    /* [out] */ DWORD __RPC_FAR *pdwCookie);


void __RPC_STUB IProfferService_ProfferService_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IProfferService_RevokeService_Proxy( 
    IProfferService __RPC_FAR * This,
    /* [in] */ DWORD dwCookie);


void __RPC_STUB IProfferService_RevokeService_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IProfferService_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0323 */
/* [local] */ 

#define SID_SProfferService IID_IProfferService    // nearest service that you can proffer to
#define STR_DONT_RESOLVE_LINK      L"Don't Resolve Link"
#define STR_PLAYLIST_EDITOR_UI  L"Static List In Dialog"


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0323_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0323_v0_0_s_ifspec;

#ifndef __IShellItem_INTERFACE_DEFINED__
#define __IShellItem_INTERFACE_DEFINED__

/* interface IShellItem */
/* [unique][object][uuid][helpstring] */ 

typedef /* [v1_enum] */ 
enum tagSIGDN
    {	SIGDN_NORMALDISPLAY	= 0,
	SIGDN_PARENTRELATIVEPARSING	= 0x80018001,
	SIGDN_DESKTOPABSOLUTEPARSING	= 0x80028000,
	SIGDN_PARENTRELATIVEEDITING	= 0x80031001,
	SIGDN_DESKTOPABSOLUTEEDITING	= 0x8004c000,
	SIGDN_FILESYSPATH	= 0x80058000,
	SIGDN_URL	= 0x80068000,
	SIGDN_PARENTRELATIVEFORADDRESSBAR	= 0x8007c001,
	SIGDN_PARENTRELATIVE	= 0x80080001
    }	SIGDN;

/* [v1_enum] */ 
enum tagSHELLITEMCOMPAREHINTF
    {	SICHINT_DISPLAY	= 0,
	SICHINT_ALLFIELDS	= 0x80000000,
	SICHINT_CANONICAL	= 0x10000000
    };
typedef DWORD SICHINTF;


EXTERN_C const IID IID_IShellItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("43826d1e-e718-42ee-bc55-a1e261c37bfe")
    IShellItem : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE BindToHandler( 
            /* [unique][in] */ IBindCtx __RPC_FAR *pbc,
            /* [in] */ REFGUID bhid,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetParent( 
            /* [out] */ IShellItem __RPC_FAR *__RPC_FAR *ppsi) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDisplayName( 
            /* [in] */ SIGDN sigdnName,
            /* [string][out] */ LPWSTR __RPC_FAR *ppszName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAttributes( 
            /* [in] */ SFGAOF sfgaoMask,
            /* [out] */ SFGAOF __RPC_FAR *psfgaoAttribs) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Compare( 
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [in] */ SICHINTF hint,
            /* [out] */ int __RPC_FAR *piOrder) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IShellItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IShellItem __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IShellItem __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IShellItem __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *BindToHandler )( 
            IShellItem __RPC_FAR * This,
            /* [unique][in] */ IBindCtx __RPC_FAR *pbc,
            /* [in] */ REFGUID bhid,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetParent )( 
            IShellItem __RPC_FAR * This,
            /* [out] */ IShellItem __RPC_FAR *__RPC_FAR *ppsi);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetDisplayName )( 
            IShellItem __RPC_FAR * This,
            /* [in] */ SIGDN sigdnName,
            /* [string][out] */ LPWSTR __RPC_FAR *ppszName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetAttributes )( 
            IShellItem __RPC_FAR * This,
            /* [in] */ SFGAOF sfgaoMask,
            /* [out] */ SFGAOF __RPC_FAR *psfgaoAttribs);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Compare )( 
            IShellItem __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [in] */ SICHINTF hint,
            /* [out] */ int __RPC_FAR *piOrder);
        
        END_INTERFACE
    } IShellItemVtbl;

    interface IShellItem
    {
        CONST_VTBL struct IShellItemVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IShellItem_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IShellItem_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IShellItem_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IShellItem_BindToHandler(This,pbc,bhid,riid,ppv)	\
    (This)->lpVtbl -> BindToHandler(This,pbc,bhid,riid,ppv)

#define IShellItem_GetParent(This,ppsi)	\
    (This)->lpVtbl -> GetParent(This,ppsi)

#define IShellItem_GetDisplayName(This,sigdnName,ppszName)	\
    (This)->lpVtbl -> GetDisplayName(This,sigdnName,ppszName)

#define IShellItem_GetAttributes(This,sfgaoMask,psfgaoAttribs)	\
    (This)->lpVtbl -> GetAttributes(This,sfgaoMask,psfgaoAttribs)

#define IShellItem_Compare(This,psi,hint,piOrder)	\
    (This)->lpVtbl -> Compare(This,psi,hint,piOrder)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IShellItem_BindToHandler_Proxy( 
    IShellItem __RPC_FAR * This,
    /* [unique][in] */ IBindCtx __RPC_FAR *pbc,
    /* [in] */ REFGUID bhid,
    /* [in] */ REFIID riid,
    /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);


void __RPC_STUB IShellItem_BindToHandler_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellItem_GetParent_Proxy( 
    IShellItem __RPC_FAR * This,
    /* [out] */ IShellItem __RPC_FAR *__RPC_FAR *ppsi);


void __RPC_STUB IShellItem_GetParent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellItem_GetDisplayName_Proxy( 
    IShellItem __RPC_FAR * This,
    /* [in] */ SIGDN sigdnName,
    /* [string][out] */ LPWSTR __RPC_FAR *ppszName);


void __RPC_STUB IShellItem_GetDisplayName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellItem_GetAttributes_Proxy( 
    IShellItem __RPC_FAR * This,
    /* [in] */ SFGAOF sfgaoMask,
    /* [out] */ SFGAOF __RPC_FAR *psfgaoAttribs);


void __RPC_STUB IShellItem_GetAttributes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellItem_Compare_Proxy( 
    IShellItem __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psi,
    /* [in] */ SICHINTF hint,
    /* [out] */ int __RPC_FAR *piOrder);


void __RPC_STUB IShellItem_Compare_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IShellItem_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0324 */
/* [local] */ 

#if (_WIN32_IE >= _WIN32_IE_IE70)
// CLSID_ShellItem create and init helper APIs. produce IShellItem derived interfaces from these different expressions of an item
SHSTDAPI SHCreateItemFromIDList(__in PCIDLIST_ABSOLUTE pidl, __in REFIID riid, __deref_out void **ppv);
SHSTDAPI SHCreateItemFromParsingName(__in PCWSTR pszPath, __in_opt IBindCtx *pbc, __in REFIID riid, __deref_out void **ppv);
SHSTDAPI SHCreateItemWithParent(__in_opt PCIDLIST_ABSOLUTE pidlParent, __in_opt IShellFolder *psfParent, __in PCUITEMID_CHILD pidl, __in REFIID riid, __deref_out void **ppvItem);
SHSTDAPI SHCreateItemFromRelativeName(__in IShellItem *psiParent, __in PCWSTR pszName, __in_opt IBindCtx* pbc, __in REFIID riid, __deref_out void **ppv);
#endif  // (_WIN32_IE >= _WIN32_IE_IE70)
#if (NTDDI_VERSION >= NTDDI_LONGHORN)
SHSTDAPI SHCreateItemInKnownFolder(REFKNOWNFOLDERID kfid, DWORD dwKFFlags, __in_opt PCWSTR pszItem, REFIID riid, __deref_out void **ppv);
// get the IDList expression from an object, works with objects that support IPersistIDlist or IPersistIDlist like CLSID_ShellItem and most shell folders
SHSTDAPI SHGetIDListFromObject(__in_opt IUnknown *punk, __out PIDLIST_ABSOLUTE *ppidl);
// these APIs return object that support IPropertyStore or related interfaces
SHSTDAPI SHGetPropertyStoreFromIDList(__in PCIDLIST_ABSOLUTE pidl, GETPROPERTYSTOREFLAGS flags, REFIID riid, __out void **ppv);
SHSTDAPI SHGetPropertyStoreFromParsingName(__in PCWSTR pszPath, __in_opt IBindCtx *pbc, GETPROPERTYSTOREFLAGS flags, REFIID riid, __out void **ppv);
SHSTDAPI SHGetNameFromIDList(__in PCIDLIST_ABSOLUTE pidl, SIGDN sigdnName, __out PWSTR *ppszName);
#endif // (NTDDI_VERSION >= NTDDI_LONGHORN)
#define STR_GPS_HANDLERPROPERTIESONLY      L"GPS_HANDLERPROPERTIESONLY"
#define STR_GPS_FASTPROPERTIESONLY         L"GPS_FASTPROPERTIESONLY"
#define STR_GPS_OPENSLOWITEM               L"GPS_OPENSLOWITEM"
#define STR_GPS_DELAYCREATION              L"GPS_DELAYCREATION"
#define STR_GPS_BESTEFFORT                 L"GPS_BESTEFFORT"


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0324_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0324_v0_0_s_ifspec;

#ifndef __IShellItem2_INTERFACE_DEFINED__
#define __IShellItem2_INTERFACE_DEFINED__

/* interface IShellItem2 */
/* [unique][object][uuid][helpstring] */ 


EXTERN_C const IID IID_IShellItem2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7e9fb0d3-919f-4307-ab2e-9b1860310c93")
    IShellItem2 : public IShellItem
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetPropertyStore( 
            /* [in] */ GETPROPERTYSTOREFLAGS flags,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPropertyStoreWithCreateObject( 
            /* [in] */ GETPROPERTYSTOREFLAGS flags,
            /* [in] */ IUnknown __RPC_FAR *punkCreateObject,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPropertyStoreForKeys( 
            /* [size_is][in] */ const PROPERTYKEY __RPC_FAR *rgKeys,
            /* [in] */ UINT cKeys,
            /* [in] */ GETPROPERTYSTOREFLAGS flags,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPropertyDescriptionList( 
            /* [in] */ REFPROPERTYKEY keyType,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Update( 
            /* [unique][in] */ IBindCtx __RPC_FAR *pbc) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetProperty( 
            /* [in] */ REFPROPERTYKEY key,
            /* [out] */ PROPVARIANT __RPC_FAR *ppropvar) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCLSID( 
            /* [in] */ REFPROPERTYKEY key,
            /* [out] */ CLSID __RPC_FAR *pclsid) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFileTime( 
            /* [in] */ REFPROPERTYKEY key,
            /* [out] */ FILETIME __RPC_FAR *pft) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetInt32( 
            /* [in] */ REFPROPERTYKEY key,
            /* [out] */ int __RPC_FAR *pi) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetString( 
            /* [in] */ REFPROPERTYKEY key,
            /* [string][out] */ LPWSTR __RPC_FAR *ppsz) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetUInt32( 
            /* [in] */ REFPROPERTYKEY key,
            /* [out] */ ULONG __RPC_FAR *pui) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetUInt64( 
            /* [in] */ REFPROPERTYKEY key,
            /* [out] */ ULONGLONG __RPC_FAR *pull) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetBool( 
            /* [in] */ REFPROPERTYKEY key,
            /* [out] */ BOOL __RPC_FAR *pf) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IShellItem2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IShellItem2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IShellItem2 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IShellItem2 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *BindToHandler )( 
            IShellItem2 __RPC_FAR * This,
            /* [unique][in] */ IBindCtx __RPC_FAR *pbc,
            /* [in] */ REFGUID bhid,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetParent )( 
            IShellItem2 __RPC_FAR * This,
            /* [out] */ IShellItem __RPC_FAR *__RPC_FAR *ppsi);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetDisplayName )( 
            IShellItem2 __RPC_FAR * This,
            /* [in] */ SIGDN sigdnName,
            /* [string][out] */ LPWSTR __RPC_FAR *ppszName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetAttributes )( 
            IShellItem2 __RPC_FAR * This,
            /* [in] */ SFGAOF sfgaoMask,
            /* [out] */ SFGAOF __RPC_FAR *psfgaoAttribs);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Compare )( 
            IShellItem2 __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [in] */ SICHINTF hint,
            /* [out] */ int __RPC_FAR *piOrder);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetPropertyStore )( 
            IShellItem2 __RPC_FAR * This,
            /* [in] */ GETPROPERTYSTOREFLAGS flags,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetPropertyStoreWithCreateObject )( 
            IShellItem2 __RPC_FAR * This,
            /* [in] */ GETPROPERTYSTOREFLAGS flags,
            /* [in] */ IUnknown __RPC_FAR *punkCreateObject,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetPropertyStoreForKeys )( 
            IShellItem2 __RPC_FAR * This,
            /* [size_is][in] */ const PROPERTYKEY __RPC_FAR *rgKeys,
            /* [in] */ UINT cKeys,
            /* [in] */ GETPROPERTYSTOREFLAGS flags,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetPropertyDescriptionList )( 
            IShellItem2 __RPC_FAR * This,
            /* [in] */ REFPROPERTYKEY keyType,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Update )( 
            IShellItem2 __RPC_FAR * This,
            /* [unique][in] */ IBindCtx __RPC_FAR *pbc);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetProperty )( 
            IShellItem2 __RPC_FAR * This,
            /* [in] */ REFPROPERTYKEY key,
            /* [out] */ PROPVARIANT __RPC_FAR *ppropvar);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCLSID )( 
            IShellItem2 __RPC_FAR * This,
            /* [in] */ REFPROPERTYKEY key,
            /* [out] */ CLSID __RPC_FAR *pclsid);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFileTime )( 
            IShellItem2 __RPC_FAR * This,
            /* [in] */ REFPROPERTYKEY key,
            /* [out] */ FILETIME __RPC_FAR *pft);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetInt32 )( 
            IShellItem2 __RPC_FAR * This,
            /* [in] */ REFPROPERTYKEY key,
            /* [out] */ int __RPC_FAR *pi);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetString )( 
            IShellItem2 __RPC_FAR * This,
            /* [in] */ REFPROPERTYKEY key,
            /* [string][out] */ LPWSTR __RPC_FAR *ppsz);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetUInt32 )( 
            IShellItem2 __RPC_FAR * This,
            /* [in] */ REFPROPERTYKEY key,
            /* [out] */ ULONG __RPC_FAR *pui);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetUInt64 )( 
            IShellItem2 __RPC_FAR * This,
            /* [in] */ REFPROPERTYKEY key,
            /* [out] */ ULONGLONG __RPC_FAR *pull);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetBool )( 
            IShellItem2 __RPC_FAR * This,
            /* [in] */ REFPROPERTYKEY key,
            /* [out] */ BOOL __RPC_FAR *pf);
        
        END_INTERFACE
    } IShellItem2Vtbl;

    interface IShellItem2
    {
        CONST_VTBL struct IShellItem2Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IShellItem2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IShellItem2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IShellItem2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IShellItem2_BindToHandler(This,pbc,bhid,riid,ppv)	\
    (This)->lpVtbl -> BindToHandler(This,pbc,bhid,riid,ppv)

#define IShellItem2_GetParent(This,ppsi)	\
    (This)->lpVtbl -> GetParent(This,ppsi)

#define IShellItem2_GetDisplayName(This,sigdnName,ppszName)	\
    (This)->lpVtbl -> GetDisplayName(This,sigdnName,ppszName)

#define IShellItem2_GetAttributes(This,sfgaoMask,psfgaoAttribs)	\
    (This)->lpVtbl -> GetAttributes(This,sfgaoMask,psfgaoAttribs)

#define IShellItem2_Compare(This,psi,hint,piOrder)	\
    (This)->lpVtbl -> Compare(This,psi,hint,piOrder)


#define IShellItem2_GetPropertyStore(This,flags,riid,ppv)	\
    (This)->lpVtbl -> GetPropertyStore(This,flags,riid,ppv)

#define IShellItem2_GetPropertyStoreWithCreateObject(This,flags,punkCreateObject,riid,ppv)	\
    (This)->lpVtbl -> GetPropertyStoreWithCreateObject(This,flags,punkCreateObject,riid,ppv)

#define IShellItem2_GetPropertyStoreForKeys(This,rgKeys,cKeys,flags,riid,ppv)	\
    (This)->lpVtbl -> GetPropertyStoreForKeys(This,rgKeys,cKeys,flags,riid,ppv)

#define IShellItem2_GetPropertyDescriptionList(This,keyType,riid,ppv)	\
    (This)->lpVtbl -> GetPropertyDescriptionList(This,keyType,riid,ppv)

#define IShellItem2_Update(This,pbc)	\
    (This)->lpVtbl -> Update(This,pbc)

#define IShellItem2_GetProperty(This,key,ppropvar)	\
    (This)->lpVtbl -> GetProperty(This,key,ppropvar)

#define IShellItem2_GetCLSID(This,key,pclsid)	\
    (This)->lpVtbl -> GetCLSID(This,key,pclsid)

#define IShellItem2_GetFileTime(This,key,pft)	\
    (This)->lpVtbl -> GetFileTime(This,key,pft)

#define IShellItem2_GetInt32(This,key,pi)	\
    (This)->lpVtbl -> GetInt32(This,key,pi)

#define IShellItem2_GetString(This,key,ppsz)	\
    (This)->lpVtbl -> GetString(This,key,ppsz)

#define IShellItem2_GetUInt32(This,key,pui)	\
    (This)->lpVtbl -> GetUInt32(This,key,pui)

#define IShellItem2_GetUInt64(This,key,pull)	\
    (This)->lpVtbl -> GetUInt64(This,key,pull)

#define IShellItem2_GetBool(This,key,pf)	\
    (This)->lpVtbl -> GetBool(This,key,pf)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IShellItem2_GetPropertyStore_Proxy( 
    IShellItem2 __RPC_FAR * This,
    /* [in] */ GETPROPERTYSTOREFLAGS flags,
    /* [in] */ REFIID riid,
    /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);


void __RPC_STUB IShellItem2_GetPropertyStore_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellItem2_GetPropertyStoreWithCreateObject_Proxy( 
    IShellItem2 __RPC_FAR * This,
    /* [in] */ GETPROPERTYSTOREFLAGS flags,
    /* [in] */ IUnknown __RPC_FAR *punkCreateObject,
    /* [in] */ REFIID riid,
    /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);


void __RPC_STUB IShellItem2_GetPropertyStoreWithCreateObject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellItem2_GetPropertyStoreForKeys_Proxy( 
    IShellItem2 __RPC_FAR * This,
    /* [size_is][in] */ const PROPERTYKEY __RPC_FAR *rgKeys,
    /* [in] */ UINT cKeys,
    /* [in] */ GETPROPERTYSTOREFLAGS flags,
    /* [in] */ REFIID riid,
    /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);


void __RPC_STUB IShellItem2_GetPropertyStoreForKeys_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellItem2_GetPropertyDescriptionList_Proxy( 
    IShellItem2 __RPC_FAR * This,
    /* [in] */ REFPROPERTYKEY keyType,
    /* [in] */ REFIID riid,
    /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);


void __RPC_STUB IShellItem2_GetPropertyDescriptionList_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellItem2_Update_Proxy( 
    IShellItem2 __RPC_FAR * This,
    /* [unique][in] */ IBindCtx __RPC_FAR *pbc);


void __RPC_STUB IShellItem2_Update_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellItem2_GetProperty_Proxy( 
    IShellItem2 __RPC_FAR * This,
    /* [in] */ REFPROPERTYKEY key,
    /* [out] */ PROPVARIANT __RPC_FAR *ppropvar);


void __RPC_STUB IShellItem2_GetProperty_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellItem2_GetCLSID_Proxy( 
    IShellItem2 __RPC_FAR * This,
    /* [in] */ REFPROPERTYKEY key,
    /* [out] */ CLSID __RPC_FAR *pclsid);


void __RPC_STUB IShellItem2_GetCLSID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellItem2_GetFileTime_Proxy( 
    IShellItem2 __RPC_FAR * This,
    /* [in] */ REFPROPERTYKEY key,
    /* [out] */ FILETIME __RPC_FAR *pft);


void __RPC_STUB IShellItem2_GetFileTime_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellItem2_GetInt32_Proxy( 
    IShellItem2 __RPC_FAR * This,
    /* [in] */ REFPROPERTYKEY key,
    /* [out] */ int __RPC_FAR *pi);


void __RPC_STUB IShellItem2_GetInt32_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellItem2_GetString_Proxy( 
    IShellItem2 __RPC_FAR * This,
    /* [in] */ REFPROPERTYKEY key,
    /* [string][out] */ LPWSTR __RPC_FAR *ppsz);


void __RPC_STUB IShellItem2_GetString_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellItem2_GetUInt32_Proxy( 
    IShellItem2 __RPC_FAR * This,
    /* [in] */ REFPROPERTYKEY key,
    /* [out] */ ULONG __RPC_FAR *pui);


void __RPC_STUB IShellItem2_GetUInt32_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellItem2_GetUInt64_Proxy( 
    IShellItem2 __RPC_FAR * This,
    /* [in] */ REFPROPERTYKEY key,
    /* [out] */ ULONGLONG __RPC_FAR *pull);


void __RPC_STUB IShellItem2_GetUInt64_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellItem2_GetBool_Proxy( 
    IShellItem2 __RPC_FAR * This,
    /* [in] */ REFPROPERTYKEY key,
    /* [out] */ BOOL __RPC_FAR *pf);


void __RPC_STUB IShellItem2_GetBool_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IShellItem2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0325 */
/* [local] */ 

typedef /* [v1_enum] */ 
enum tagSIIGB
    {	SIIGBF_RESIZETOFIT	= 0,
	SIIGBF_BIGGERSIZEOK	= 0x1,
	SIIGBF_MEMORYONLY	= 0x2,
	SIIGBF_ICONONLY	= 0x4,
	SIIGBF_THUMBNAILONLY	= 0x8,
	SIIGBF_INCACHEONLY	= 0x10
    }	SIIGB;

typedef int SIIGBF;



extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0325_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0325_v0_0_s_ifspec;

#ifndef __IShellItemImageFactory_INTERFACE_DEFINED__
#define __IShellItemImageFactory_INTERFACE_DEFINED__

/* interface IShellItemImageFactory */
/* [unique][object][uuid] */ 


EXTERN_C const IID IID_IShellItemImageFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("bcc18b79-ba16-442f-80c4-8a59c30c463b")
    IShellItemImageFactory : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetImage( 
            /* [in] */ SIZE size,
            /* [in] */ SIIGBF flags,
            /* [out] */ HBITMAP __RPC_FAR *phbm) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IShellItemImageFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IShellItemImageFactory __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IShellItemImageFactory __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IShellItemImageFactory __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetImage )( 
            IShellItemImageFactory __RPC_FAR * This,
            /* [in] */ SIZE size,
            /* [in] */ SIIGBF flags,
            /* [out] */ HBITMAP __RPC_FAR *phbm);
        
        END_INTERFACE
    } IShellItemImageFactoryVtbl;

    interface IShellItemImageFactory
    {
        CONST_VTBL struct IShellItemImageFactoryVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IShellItemImageFactory_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IShellItemImageFactory_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IShellItemImageFactory_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IShellItemImageFactory_GetImage(This,size,flags,phbm)	\
    (This)->lpVtbl -> GetImage(This,size,flags,phbm)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IShellItemImageFactory_GetImage_Proxy( 
    IShellItemImageFactory __RPC_FAR * This,
    /* [in] */ SIZE size,
    /* [in] */ SIIGBF flags,
    /* [out] */ HBITMAP __RPC_FAR *phbm);


void __RPC_STUB IShellItemImageFactory_GetImage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IShellItemImageFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0326 */
/* [local] */ 

#if (NTDDI_VERSION >= NTDDI_WINXP)


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0326_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0326_v0_0_s_ifspec;

#ifndef __IEnumShellItems_INTERFACE_DEFINED__
#define __IEnumShellItems_INTERFACE_DEFINED__

/* interface IEnumShellItems */
/* [unique][object][uuid][helpstring] */ 


EXTERN_C const IID IID_IEnumShellItems;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("70629033-e363-4a28-a567-0db78006e6d7")
    IEnumShellItems : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Next( 
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ IShellItem __RPC_FAR *__RPC_FAR *rgelt,
            /* [out] */ ULONG __RPC_FAR *pceltFetched) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Skip( 
            /* [in] */ ULONG celt) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clone( 
            /* [out] */ IEnumShellItems __RPC_FAR *__RPC_FAR *ppenum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumShellItemsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IEnumShellItems __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IEnumShellItems __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IEnumShellItems __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Next )( 
            IEnumShellItems __RPC_FAR * This,
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ IShellItem __RPC_FAR *__RPC_FAR *rgelt,
            /* [out] */ ULONG __RPC_FAR *pceltFetched);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Skip )( 
            IEnumShellItems __RPC_FAR * This,
            /* [in] */ ULONG celt);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Reset )( 
            IEnumShellItems __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Clone )( 
            IEnumShellItems __RPC_FAR * This,
            /* [out] */ IEnumShellItems __RPC_FAR *__RPC_FAR *ppenum);
        
        END_INTERFACE
    } IEnumShellItemsVtbl;

    interface IEnumShellItems
    {
        CONST_VTBL struct IEnumShellItemsVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumShellItems_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IEnumShellItems_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IEnumShellItems_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IEnumShellItems_Next(This,celt,rgelt,pceltFetched)	\
    (This)->lpVtbl -> Next(This,celt,rgelt,pceltFetched)

#define IEnumShellItems_Skip(This,celt)	\
    (This)->lpVtbl -> Skip(This,celt)

#define IEnumShellItems_Reset(This)	\
    (This)->lpVtbl -> Reset(This)

#define IEnumShellItems_Clone(This,ppenum)	\
    (This)->lpVtbl -> Clone(This,ppenum)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IEnumShellItems_Next_Proxy( 
    IEnumShellItems __RPC_FAR * This,
    /* [in] */ ULONG celt,
    /* [length_is][size_is][out] */ IShellItem __RPC_FAR *__RPC_FAR *rgelt,
    /* [out] */ ULONG __RPC_FAR *pceltFetched);


void __RPC_STUB IEnumShellItems_Next_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumShellItems_Skip_Proxy( 
    IEnumShellItems __RPC_FAR * This,
    /* [in] */ ULONG celt);


void __RPC_STUB IEnumShellItems_Skip_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumShellItems_Reset_Proxy( 
    IEnumShellItems __RPC_FAR * This);


void __RPC_STUB IEnumShellItems_Reset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumShellItems_Clone_Proxy( 
    IEnumShellItems __RPC_FAR * This,
    /* [out] */ IEnumShellItems __RPC_FAR *__RPC_FAR *ppenum);


void __RPC_STUB IEnumShellItems_Clone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IEnumShellItems_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0327 */
/* [local] */ 

typedef GUID STGTRANSCONFIRMATION;

typedef GUID __RPC_FAR *LPSTGTRANSCONFIRMATION;

typedef /* [v1_enum] */ 
enum tagSTGOP
    {	STGOP_MOVE	= 1,
	STGOP_COPY	= 2,
	STGOP_SYNC	= 3,
	STGOP_REMOVE	= 5,
	STGOP_RENAME	= 6,
	STGOP_APPLYPROPERTIES	= 8,
	STGOP_NEW	= 10
    }	STGOP;

#endif  // NTDDI_WINXP
#if (_WIN32_IE >= _WIN32_IE_IE70)


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0327_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0327_v0_0_s_ifspec;

#ifndef __ITransferAdviseSink_INTERFACE_DEFINED__
#define __ITransferAdviseSink_INTERFACE_DEFINED__

/* interface ITransferAdviseSink */
/* [object][local][unique][uuid] */ 

/* [v1_enum] */ 
enum tagTRANSFER_ADVISE_STATE
    {	TS_PERFORMING	= 0x1,
	TS_PREPARING	= 0x2,
	TS_INDETERMINATE	= 0x4
    };
typedef DWORD TRANSFER_ADVISE_STATE;


EXTERN_C const IID IID_ITransferAdviseSink;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("d594d0d8-8da7-457b-b3b4-ce5dbaac0b88")
    ITransferAdviseSink : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE UpdateProgress( 
            /* [in] */ ULONGLONG ullSizeCurrent,
            /* [in] */ ULONGLONG ullSizeTotal,
            /* [in] */ int nFilesCurrent,
            /* [in] */ int nFilesTotal,
            /* [in] */ int nFoldersCurrent,
            /* [in] */ int nFoldersTotal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UpdateTransferState( 
            /* [in] */ TRANSFER_ADVISE_STATE ts) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ConfirmOverwrite( 
            /* [in] */ IShellItem __RPC_FAR *psiSource,
            /* [in] */ IShellItem __RPC_FAR *psiDestParent,
            /* [string][in] */ LPCWSTR pszName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ConfirmEncryptionLoss( 
            /* [in] */ IShellItem __RPC_FAR *psiSource) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE FileFailure( 
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [string][unique][in] */ LPCWSTR pszItem,
            /* [in] */ HRESULT hrError,
            /* [size_is][unique][out] */ LPWSTR pszRename,
            /* [in] */ ULONG cchRename) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SubStreamFailure( 
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [string][in] */ LPCWSTR pszStreamName,
            /* [in] */ HRESULT hrError) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PropertyFailure( 
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [unique][in] */ const PROPERTYKEY __RPC_FAR *pkey,
            /* [in] */ HRESULT hrError) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ITransferAdviseSinkVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            ITransferAdviseSink __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            ITransferAdviseSink __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            ITransferAdviseSink __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *UpdateProgress )( 
            ITransferAdviseSink __RPC_FAR * This,
            /* [in] */ ULONGLONG ullSizeCurrent,
            /* [in] */ ULONGLONG ullSizeTotal,
            /* [in] */ int nFilesCurrent,
            /* [in] */ int nFilesTotal,
            /* [in] */ int nFoldersCurrent,
            /* [in] */ int nFoldersTotal);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *UpdateTransferState )( 
            ITransferAdviseSink __RPC_FAR * This,
            /* [in] */ TRANSFER_ADVISE_STATE ts);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ConfirmOverwrite )( 
            ITransferAdviseSink __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psiSource,
            /* [in] */ IShellItem __RPC_FAR *psiDestParent,
            /* [string][in] */ LPCWSTR pszName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ConfirmEncryptionLoss )( 
            ITransferAdviseSink __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psiSource);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *FileFailure )( 
            ITransferAdviseSink __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [string][unique][in] */ LPCWSTR pszItem,
            /* [in] */ HRESULT hrError,
            /* [size_is][unique][out] */ LPWSTR pszRename,
            /* [in] */ ULONG cchRename);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SubStreamFailure )( 
            ITransferAdviseSink __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [string][in] */ LPCWSTR pszStreamName,
            /* [in] */ HRESULT hrError);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *PropertyFailure )( 
            ITransferAdviseSink __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [unique][in] */ const PROPERTYKEY __RPC_FAR *pkey,
            /* [in] */ HRESULT hrError);
        
        END_INTERFACE
    } ITransferAdviseSinkVtbl;

    interface ITransferAdviseSink
    {
        CONST_VTBL struct ITransferAdviseSinkVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ITransferAdviseSink_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define ITransferAdviseSink_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define ITransferAdviseSink_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define ITransferAdviseSink_UpdateProgress(This,ullSizeCurrent,ullSizeTotal,nFilesCurrent,nFilesTotal,nFoldersCurrent,nFoldersTotal)	\
    (This)->lpVtbl -> UpdateProgress(This,ullSizeCurrent,ullSizeTotal,nFilesCurrent,nFilesTotal,nFoldersCurrent,nFoldersTotal)

#define ITransferAdviseSink_UpdateTransferState(This,ts)	\
    (This)->lpVtbl -> UpdateTransferState(This,ts)

#define ITransferAdviseSink_ConfirmOverwrite(This,psiSource,psiDestParent,pszName)	\
    (This)->lpVtbl -> ConfirmOverwrite(This,psiSource,psiDestParent,pszName)

#define ITransferAdviseSink_ConfirmEncryptionLoss(This,psiSource)	\
    (This)->lpVtbl -> ConfirmEncryptionLoss(This,psiSource)

#define ITransferAdviseSink_FileFailure(This,psi,pszItem,hrError,pszRename,cchRename)	\
    (This)->lpVtbl -> FileFailure(This,psi,pszItem,hrError,pszRename,cchRename)

#define ITransferAdviseSink_SubStreamFailure(This,psi,pszStreamName,hrError)	\
    (This)->lpVtbl -> SubStreamFailure(This,psi,pszStreamName,hrError)

#define ITransferAdviseSink_PropertyFailure(This,psi,pkey,hrError)	\
    (This)->lpVtbl -> PropertyFailure(This,psi,pkey,hrError)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE ITransferAdviseSink_UpdateProgress_Proxy( 
    ITransferAdviseSink __RPC_FAR * This,
    /* [in] */ ULONGLONG ullSizeCurrent,
    /* [in] */ ULONGLONG ullSizeTotal,
    /* [in] */ int nFilesCurrent,
    /* [in] */ int nFilesTotal,
    /* [in] */ int nFoldersCurrent,
    /* [in] */ int nFoldersTotal);


void __RPC_STUB ITransferAdviseSink_UpdateProgress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ITransferAdviseSink_UpdateTransferState_Proxy( 
    ITransferAdviseSink __RPC_FAR * This,
    /* [in] */ TRANSFER_ADVISE_STATE ts);


void __RPC_STUB ITransferAdviseSink_UpdateTransferState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ITransferAdviseSink_ConfirmOverwrite_Proxy( 
    ITransferAdviseSink __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psiSource,
    /* [in] */ IShellItem __RPC_FAR *psiDestParent,
    /* [string][in] */ LPCWSTR pszName);


void __RPC_STUB ITransferAdviseSink_ConfirmOverwrite_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ITransferAdviseSink_ConfirmEncryptionLoss_Proxy( 
    ITransferAdviseSink __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psiSource);


void __RPC_STUB ITransferAdviseSink_ConfirmEncryptionLoss_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ITransferAdviseSink_FileFailure_Proxy( 
    ITransferAdviseSink __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psi,
    /* [string][unique][in] */ LPCWSTR pszItem,
    /* [in] */ HRESULT hrError,
    /* [size_is][unique][out] */ LPWSTR pszRename,
    /* [in] */ ULONG cchRename);


void __RPC_STUB ITransferAdviseSink_FileFailure_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ITransferAdviseSink_SubStreamFailure_Proxy( 
    ITransferAdviseSink __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psi,
    /* [string][in] */ LPCWSTR pszStreamName,
    /* [in] */ HRESULT hrError);


void __RPC_STUB ITransferAdviseSink_SubStreamFailure_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ITransferAdviseSink_PropertyFailure_Proxy( 
    ITransferAdviseSink __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psi,
    /* [unique][in] */ const PROPERTYKEY __RPC_FAR *pkey,
    /* [in] */ HRESULT hrError);


void __RPC_STUB ITransferAdviseSink_PropertyFailure_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __ITransferAdviseSink_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0328 */
/* [local] */ 

#define TSF_NORMAL                      0x0000
#define TSF_FAIL_EXIST                  0x0000      // Fail if destination already exists
#define TSF_RENAME_EXIST                0x0001      // Rename with auto-name generation if destination already exists
#define TSF_OVERWRITE_EXIST             0x0002      // Overwrite/Merge with destination
#define TSF_ALLOW_DECRYPTION            0x0004      // Allow creation of decrypted destination
#define TSF_NO_SECURITY                 0x0008      // Without DACL/SACL/Owner
#define TSF_COPY_CREATION_TIME          0x0010      // Copy the creation time as part of the copy (useful for move as copy/delete)
#define TSF_COPY_WRITE_TIME             0x0020      // Copy the last write time as part of the copy
#define TSF_USE_FULL_ACCESS             0x0040      // Open a file with write, read, or delete as share mode
#define TSF_DELETE_RECYCLE_IF_POSSIBLE  0x0080      // Recycle if possible
#define TSF_COPY_HARD_LINK              0x0100      // Hard link desired (not required)
#define TSF_COPY_LOCALIZED_NAME         0x0200      // Copy localized name
#define TSF_MOVE_AS_COPY_DELETE         0x0400      // We are doing a move operation, but we are doing it as a copy/delete
#define TSF_SUSPEND_SHELLEVENTS         0x0800      // suspend shell events
#endif  // (_WIN32_IE >= _WIN32_IE_IE70)
#if (NTDDI_VERSION >= NTDDI_LONGHORN)


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0328_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0328_v0_0_s_ifspec;

#ifndef __ITransferSource_INTERFACE_DEFINED__
#define __ITransferSource_INTERFACE_DEFINED__

/* interface ITransferSource */
/* [local][unique][uuid][object] */ 


EXTERN_C const IID IID_ITransferSource;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00adb003-bde9-45c6-8e29-d09f9353e108")
    ITransferSource : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Advise( 
            /* [in] */ ITransferAdviseSink __RPC_FAR *psink,
            /* [out] */ DWORD __RPC_FAR *pdwCookie) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Unadvise( 
            /* [in] */ DWORD dwCookie) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetProperties( 
            /* [in] */ IPropertyChangeArray __RPC_FAR *pproparray) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OpenItem( 
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [in] */ DWORD dwFlags,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveItem( 
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [in] */ IShellItem __RPC_FAR *psiParentDst,
            /* [string][in] */ LPCWSTR pszNameDst,
            /* [in] */ DWORD dwFlags,
            /* [out] */ IShellItem __RPC_FAR *__RPC_FAR *ppsiNew) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RecycleItem( 
            /* [in] */ IShellItem __RPC_FAR *psiSource,
            /* [in] */ IShellItem __RPC_FAR *psiParentDest,
            /* [in] */ DWORD dwFlags,
            /* [out] */ IShellItem __RPC_FAR *__RPC_FAR *ppsiNewDest) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveItem( 
            /* [in] */ IShellItem __RPC_FAR *psiSource,
            /* [in] */ DWORD dwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RenameItem( 
            /* [in] */ IShellItem __RPC_FAR *psiSource,
            /* [in] */ LPCWSTR pszNewName,
            /* [in] */ DWORD dwFlags,
            /* [out] */ IShellItem __RPC_FAR *__RPC_FAR *ppsiNewDest) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE LinkItem( 
            /* [in] */ IShellItem __RPC_FAR *psiSource,
            /* [in] */ IShellItem __RPC_FAR *psiParentDest,
            /* [string][unique][in] */ LPCWSTR pszNewName,
            /* [in] */ DWORD dwLinkFlags,
            /* [out] */ IShellItem __RPC_FAR *__RPC_FAR *ppsiNewDest) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ApplyPropertiesToItem( 
            /* [in] */ IShellItem __RPC_FAR *psiSource,
            /* [out] */ IShellItem __RPC_FAR *__RPC_FAR *ppsiNew) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDefaultDestinationName( 
            /* [in] */ IShellItem __RPC_FAR *psiSource,
            /* [in] */ IShellItem __RPC_FAR *psiParentDest,
            /* [string][out] */ LPWSTR __RPC_FAR *ppszDestinationName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnterFolder( 
            /* [in] */ IShellItem __RPC_FAR *psiChildFolderDest) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE LeaveFolder( 
            /* [in] */ IShellItem __RPC_FAR *psiChildFolderDest) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ITransferSourceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            ITransferSource __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            ITransferSource __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            ITransferSource __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Advise )( 
            ITransferSource __RPC_FAR * This,
            /* [in] */ ITransferAdviseSink __RPC_FAR *psink,
            /* [out] */ DWORD __RPC_FAR *pdwCookie);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Unadvise )( 
            ITransferSource __RPC_FAR * This,
            /* [in] */ DWORD dwCookie);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetProperties )( 
            ITransferSource __RPC_FAR * This,
            /* [in] */ IPropertyChangeArray __RPC_FAR *pproparray);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OpenItem )( 
            ITransferSource __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [in] */ DWORD dwFlags,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *MoveItem )( 
            ITransferSource __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [in] */ IShellItem __RPC_FAR *psiParentDst,
            /* [string][in] */ LPCWSTR pszNameDst,
            /* [in] */ DWORD dwFlags,
            /* [out] */ IShellItem __RPC_FAR *__RPC_FAR *ppsiNew);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RecycleItem )( 
            ITransferSource __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psiSource,
            /* [in] */ IShellItem __RPC_FAR *psiParentDest,
            /* [in] */ DWORD dwFlags,
            /* [out] */ IShellItem __RPC_FAR *__RPC_FAR *ppsiNewDest);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RemoveItem )( 
            ITransferSource __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psiSource,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RenameItem )( 
            ITransferSource __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psiSource,
            /* [in] */ LPCWSTR pszNewName,
            /* [in] */ DWORD dwFlags,
            /* [out] */ IShellItem __RPC_FAR *__RPC_FAR *ppsiNewDest);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *LinkItem )( 
            ITransferSource __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psiSource,
            /* [in] */ IShellItem __RPC_FAR *psiParentDest,
            /* [string][unique][in] */ LPCWSTR pszNewName,
            /* [in] */ DWORD dwLinkFlags,
            /* [out] */ IShellItem __RPC_FAR *__RPC_FAR *ppsiNewDest);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ApplyPropertiesToItem )( 
            ITransferSource __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psiSource,
            /* [out] */ IShellItem __RPC_FAR *__RPC_FAR *ppsiNew);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetDefaultDestinationName )( 
            ITransferSource __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psiSource,
            /* [in] */ IShellItem __RPC_FAR *psiParentDest,
            /* [string][out] */ LPWSTR __RPC_FAR *ppszDestinationName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *EnterFolder )( 
            ITransferSource __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psiChildFolderDest);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *LeaveFolder )( 
            ITransferSource __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psiChildFolderDest);
        
        END_INTERFACE
    } ITransferSourceVtbl;

    interface ITransferSource
    {
        CONST_VTBL struct ITransferSourceVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ITransferSource_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define ITransferSource_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define ITransferSource_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define ITransferSource_Advise(This,psink,pdwCookie)	\
    (This)->lpVtbl -> Advise(This,psink,pdwCookie)

#define ITransferSource_Unadvise(This,dwCookie)	\
    (This)->lpVtbl -> Unadvise(This,dwCookie)

#define ITransferSource_SetProperties(This,pproparray)	\
    (This)->lpVtbl -> SetProperties(This,pproparray)

#define ITransferSource_OpenItem(This,psi,dwFlags,riid,ppv)	\
    (This)->lpVtbl -> OpenItem(This,psi,dwFlags,riid,ppv)

#define ITransferSource_MoveItem(This,psi,psiParentDst,pszNameDst,dwFlags,ppsiNew)	\
    (This)->lpVtbl -> MoveItem(This,psi,psiParentDst,pszNameDst,dwFlags,ppsiNew)

#define ITransferSource_RecycleItem(This,psiSource,psiParentDest,dwFlags,ppsiNewDest)	\
    (This)->lpVtbl -> RecycleItem(This,psiSource,psiParentDest,dwFlags,ppsiNewDest)

#define ITransferSource_RemoveItem(This,psiSource,dwFlags)	\
    (This)->lpVtbl -> RemoveItem(This,psiSource,dwFlags)

#define ITransferSource_RenameItem(This,psiSource,pszNewName,dwFlags,ppsiNewDest)	\
    (This)->lpVtbl -> RenameItem(This,psiSource,pszNewName,dwFlags,ppsiNewDest)

#define ITransferSource_LinkItem(This,psiSource,psiParentDest,pszNewName,dwLinkFlags,ppsiNewDest)	\
    (This)->lpVtbl -> LinkItem(This,psiSource,psiParentDest,pszNewName,dwLinkFlags,ppsiNewDest)

#define ITransferSource_ApplyPropertiesToItem(This,psiSource,ppsiNew)	\
    (This)->lpVtbl -> ApplyPropertiesToItem(This,psiSource,ppsiNew)

#define ITransferSource_GetDefaultDestinationName(This,psiSource,psiParentDest,ppszDestinationName)	\
    (This)->lpVtbl -> GetDefaultDestinationName(This,psiSource,psiParentDest,ppszDestinationName)

#define ITransferSource_EnterFolder(This,psiChildFolderDest)	\
    (This)->lpVtbl -> EnterFolder(This,psiChildFolderDest)

#define ITransferSource_LeaveFolder(This,psiChildFolderDest)	\
    (This)->lpVtbl -> LeaveFolder(This,psiChildFolderDest)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE ITransferSource_Advise_Proxy( 
    ITransferSource __RPC_FAR * This,
    /* [in] */ ITransferAdviseSink __RPC_FAR *psink,
    /* [out] */ DWORD __RPC_FAR *pdwCookie);


void __RPC_STUB ITransferSource_Advise_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ITransferSource_Unadvise_Proxy( 
    ITransferSource __RPC_FAR * This,
    /* [in] */ DWORD dwCookie);


void __RPC_STUB ITransferSource_Unadvise_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ITransferSource_SetProperties_Proxy( 
    ITransferSource __RPC_FAR * This,
    /* [in] */ IPropertyChangeArray __RPC_FAR *pproparray);


void __RPC_STUB ITransferSource_SetProperties_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ITransferSource_OpenItem_Proxy( 
    ITransferSource __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psi,
    /* [in] */ DWORD dwFlags,
    /* [in] */ REFIID riid,
    /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);


void __RPC_STUB ITransferSource_OpenItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ITransferSource_MoveItem_Proxy( 
    ITransferSource __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psi,
    /* [in] */ IShellItem __RPC_FAR *psiParentDst,
    /* [string][in] */ LPCWSTR pszNameDst,
    /* [in] */ DWORD dwFlags,
    /* [out] */ IShellItem __RPC_FAR *__RPC_FAR *ppsiNew);


void __RPC_STUB ITransferSource_MoveItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ITransferSource_RecycleItem_Proxy( 
    ITransferSource __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psiSource,
    /* [in] */ IShellItem __RPC_FAR *psiParentDest,
    /* [in] */ DWORD dwFlags,
    /* [out] */ IShellItem __RPC_FAR *__RPC_FAR *ppsiNewDest);


void __RPC_STUB ITransferSource_RecycleItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ITransferSource_RemoveItem_Proxy( 
    ITransferSource __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psiSource,
    /* [in] */ DWORD dwFlags);


void __RPC_STUB ITransferSource_RemoveItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ITransferSource_RenameItem_Proxy( 
    ITransferSource __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psiSource,
    /* [in] */ LPCWSTR pszNewName,
    /* [in] */ DWORD dwFlags,
    /* [out] */ IShellItem __RPC_FAR *__RPC_FAR *ppsiNewDest);


void __RPC_STUB ITransferSource_RenameItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ITransferSource_LinkItem_Proxy( 
    ITransferSource __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psiSource,
    /* [in] */ IShellItem __RPC_FAR *psiParentDest,
    /* [string][unique][in] */ LPCWSTR pszNewName,
    /* [in] */ DWORD dwLinkFlags,
    /* [out] */ IShellItem __RPC_FAR *__RPC_FAR *ppsiNewDest);


void __RPC_STUB ITransferSource_LinkItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ITransferSource_ApplyPropertiesToItem_Proxy( 
    ITransferSource __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psiSource,
    /* [out] */ IShellItem __RPC_FAR *__RPC_FAR *ppsiNew);


void __RPC_STUB ITransferSource_ApplyPropertiesToItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ITransferSource_GetDefaultDestinationName_Proxy( 
    ITransferSource __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psiSource,
    /* [in] */ IShellItem __RPC_FAR *psiParentDest,
    /* [string][out] */ LPWSTR __RPC_FAR *ppszDestinationName);


void __RPC_STUB ITransferSource_GetDefaultDestinationName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ITransferSource_EnterFolder_Proxy( 
    ITransferSource __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psiChildFolderDest);


void __RPC_STUB ITransferSource_EnterFolder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ITransferSource_LeaveFolder_Proxy( 
    ITransferSource __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psiChildFolderDest);


void __RPC_STUB ITransferSource_LeaveFolder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __ITransferSource_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0329 */
/* [local] */ 

#endif  // NTDDI_LONGHORN
typedef struct _shell_item_resource_
    {
    GUID guidType;
    WCHAR szName[ 260 ];
    }	SHELL_ITEM_RESOURCE;



extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0329_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0329_v0_0_s_ifspec;

#ifndef __IEnumResources_INTERFACE_DEFINED__
#define __IEnumResources_INTERFACE_DEFINED__

/* interface IEnumResources */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IEnumResources;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2dd81fe3-a83c-4da9-a330-47249d345ba1")
    IEnumResources : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Next( 
            /* [in] */ ULONG celt,
            /* [size_is][out] */ SHELL_ITEM_RESOURCE __RPC_FAR *psir,
            /* [out] */ ULONG __RPC_FAR *pceltFetched) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Skip( 
            /* [in] */ ULONG celt) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clone( 
            /* [out] */ IEnumResources __RPC_FAR *__RPC_FAR *ppenumr) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumResourcesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IEnumResources __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IEnumResources __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IEnumResources __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Next )( 
            IEnumResources __RPC_FAR * This,
            /* [in] */ ULONG celt,
            /* [size_is][out] */ SHELL_ITEM_RESOURCE __RPC_FAR *psir,
            /* [out] */ ULONG __RPC_FAR *pceltFetched);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Skip )( 
            IEnumResources __RPC_FAR * This,
            /* [in] */ ULONG celt);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Reset )( 
            IEnumResources __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Clone )( 
            IEnumResources __RPC_FAR * This,
            /* [out] */ IEnumResources __RPC_FAR *__RPC_FAR *ppenumr);
        
        END_INTERFACE
    } IEnumResourcesVtbl;

    interface IEnumResources
    {
        CONST_VTBL struct IEnumResourcesVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumResources_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IEnumResources_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IEnumResources_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IEnumResources_Next(This,celt,psir,pceltFetched)	\
    (This)->lpVtbl -> Next(This,celt,psir,pceltFetched)

#define IEnumResources_Skip(This,celt)	\
    (This)->lpVtbl -> Skip(This,celt)

#define IEnumResources_Reset(This)	\
    (This)->lpVtbl -> Reset(This)

#define IEnumResources_Clone(This,ppenumr)	\
    (This)->lpVtbl -> Clone(This,ppenumr)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IEnumResources_Next_Proxy( 
    IEnumResources __RPC_FAR * This,
    /* [in] */ ULONG celt,
    /* [size_is][out] */ SHELL_ITEM_RESOURCE __RPC_FAR *psir,
    /* [out] */ ULONG __RPC_FAR *pceltFetched);


void __RPC_STUB IEnumResources_Next_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumResources_Skip_Proxy( 
    IEnumResources __RPC_FAR * This,
    /* [in] */ ULONG celt);


void __RPC_STUB IEnumResources_Skip_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumResources_Reset_Proxy( 
    IEnumResources __RPC_FAR * This);


void __RPC_STUB IEnumResources_Reset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumResources_Clone_Proxy( 
    IEnumResources __RPC_FAR * This,
    /* [out] */ IEnumResources __RPC_FAR *__RPC_FAR *ppenumr);


void __RPC_STUB IEnumResources_Clone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IEnumResources_INTERFACE_DEFINED__ */


#ifndef __IShellItemResources_INTERFACE_DEFINED__
#define __IShellItemResources_INTERFACE_DEFINED__

/* interface IShellItemResources */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IShellItemResources;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("ff5693be-2ce0-4d48-b5c5-40817d1acdb9")
    IShellItemResources : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAttributes( 
            /* [out] */ DWORD __RPC_FAR *pdwAttributes) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSize( 
            /* [out] */ ULONGLONG __RPC_FAR *pullSize) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTimes( 
            /* [out] */ FILETIME __RPC_FAR *pftCreation,
            /* [out] */ FILETIME __RPC_FAR *pftWrite,
            /* [out] */ FILETIME __RPC_FAR *pftAccess) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetTimes( 
            /* [in] */ const FILETIME __RPC_FAR *pftCreation,
            /* [in] */ const FILETIME __RPC_FAR *pftWrite,
            /* [in] */ const FILETIME __RPC_FAR *pftAccess) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetResourceDescription( 
            /* [in] */ const SHELL_ITEM_RESOURCE __RPC_FAR *pcsir,
            /* [string][out] */ LPWSTR __RPC_FAR *ppszDescription) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnumResources( 
            /* [out] */ IEnumResources __RPC_FAR *__RPC_FAR *ppenumr) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SupportsResource( 
            /* [in] */ const SHELL_ITEM_RESOURCE __RPC_FAR *pcsir) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OpenResource( 
            /* [in] */ const SHELL_ITEM_RESOURCE __RPC_FAR *pcsir,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateResource( 
            /* [in] */ const SHELL_ITEM_RESOURCE __RPC_FAR *pcsir,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MarkForDelete( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IShellItemResourcesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IShellItemResources __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IShellItemResources __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IShellItemResources __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetAttributes )( 
            IShellItemResources __RPC_FAR * This,
            /* [out] */ DWORD __RPC_FAR *pdwAttributes);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSize )( 
            IShellItemResources __RPC_FAR * This,
            /* [out] */ ULONGLONG __RPC_FAR *pullSize);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTimes )( 
            IShellItemResources __RPC_FAR * This,
            /* [out] */ FILETIME __RPC_FAR *pftCreation,
            /* [out] */ FILETIME __RPC_FAR *pftWrite,
            /* [out] */ FILETIME __RPC_FAR *pftAccess);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetTimes )( 
            IShellItemResources __RPC_FAR * This,
            /* [in] */ const FILETIME __RPC_FAR *pftCreation,
            /* [in] */ const FILETIME __RPC_FAR *pftWrite,
            /* [in] */ const FILETIME __RPC_FAR *pftAccess);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetResourceDescription )( 
            IShellItemResources __RPC_FAR * This,
            /* [in] */ const SHELL_ITEM_RESOURCE __RPC_FAR *pcsir,
            /* [string][out] */ LPWSTR __RPC_FAR *ppszDescription);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *EnumResources )( 
            IShellItemResources __RPC_FAR * This,
            /* [out] */ IEnumResources __RPC_FAR *__RPC_FAR *ppenumr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SupportsResource )( 
            IShellItemResources __RPC_FAR * This,
            /* [in] */ const SHELL_ITEM_RESOURCE __RPC_FAR *pcsir);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OpenResource )( 
            IShellItemResources __RPC_FAR * This,
            /* [in] */ const SHELL_ITEM_RESOURCE __RPC_FAR *pcsir,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CreateResource )( 
            IShellItemResources __RPC_FAR * This,
            /* [in] */ const SHELL_ITEM_RESOURCE __RPC_FAR *pcsir,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *MarkForDelete )( 
            IShellItemResources __RPC_FAR * This);
        
        END_INTERFACE
    } IShellItemResourcesVtbl;

    interface IShellItemResources
    {
        CONST_VTBL struct IShellItemResourcesVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IShellItemResources_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IShellItemResources_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IShellItemResources_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IShellItemResources_GetAttributes(This,pdwAttributes)	\
    (This)->lpVtbl -> GetAttributes(This,pdwAttributes)

#define IShellItemResources_GetSize(This,pullSize)	\
    (This)->lpVtbl -> GetSize(This,pullSize)

#define IShellItemResources_GetTimes(This,pftCreation,pftWrite,pftAccess)	\
    (This)->lpVtbl -> GetTimes(This,pftCreation,pftWrite,pftAccess)

#define IShellItemResources_SetTimes(This,pftCreation,pftWrite,pftAccess)	\
    (This)->lpVtbl -> SetTimes(This,pftCreation,pftWrite,pftAccess)

#define IShellItemResources_GetResourceDescription(This,pcsir,ppszDescription)	\
    (This)->lpVtbl -> GetResourceDescription(This,pcsir,ppszDescription)

#define IShellItemResources_EnumResources(This,ppenumr)	\
    (This)->lpVtbl -> EnumResources(This,ppenumr)

#define IShellItemResources_SupportsResource(This,pcsir)	\
    (This)->lpVtbl -> SupportsResource(This,pcsir)

#define IShellItemResources_OpenResource(This,pcsir,riid,ppv)	\
    (This)->lpVtbl -> OpenResource(This,pcsir,riid,ppv)

#define IShellItemResources_CreateResource(This,pcsir,riid,ppv)	\
    (This)->lpVtbl -> CreateResource(This,pcsir,riid,ppv)

#define IShellItemResources_MarkForDelete(This)	\
    (This)->lpVtbl -> MarkForDelete(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IShellItemResources_GetAttributes_Proxy( 
    IShellItemResources __RPC_FAR * This,
    /* [out] */ DWORD __RPC_FAR *pdwAttributes);


void __RPC_STUB IShellItemResources_GetAttributes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellItemResources_GetSize_Proxy( 
    IShellItemResources __RPC_FAR * This,
    /* [out] */ ULONGLONG __RPC_FAR *pullSize);


void __RPC_STUB IShellItemResources_GetSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellItemResources_GetTimes_Proxy( 
    IShellItemResources __RPC_FAR * This,
    /* [out] */ FILETIME __RPC_FAR *pftCreation,
    /* [out] */ FILETIME __RPC_FAR *pftWrite,
    /* [out] */ FILETIME __RPC_FAR *pftAccess);


void __RPC_STUB IShellItemResources_GetTimes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellItemResources_SetTimes_Proxy( 
    IShellItemResources __RPC_FAR * This,
    /* [in] */ const FILETIME __RPC_FAR *pftCreation,
    /* [in] */ const FILETIME __RPC_FAR *pftWrite,
    /* [in] */ const FILETIME __RPC_FAR *pftAccess);


void __RPC_STUB IShellItemResources_SetTimes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellItemResources_GetResourceDescription_Proxy( 
    IShellItemResources __RPC_FAR * This,
    /* [in] */ const SHELL_ITEM_RESOURCE __RPC_FAR *pcsir,
    /* [string][out] */ LPWSTR __RPC_FAR *ppszDescription);


void __RPC_STUB IShellItemResources_GetResourceDescription_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellItemResources_EnumResources_Proxy( 
    IShellItemResources __RPC_FAR * This,
    /* [out] */ IEnumResources __RPC_FAR *__RPC_FAR *ppenumr);


void __RPC_STUB IShellItemResources_EnumResources_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellItemResources_SupportsResource_Proxy( 
    IShellItemResources __RPC_FAR * This,
    /* [in] */ const SHELL_ITEM_RESOURCE __RPC_FAR *pcsir);


void __RPC_STUB IShellItemResources_SupportsResource_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellItemResources_OpenResource_Proxy( 
    IShellItemResources __RPC_FAR * This,
    /* [in] */ const SHELL_ITEM_RESOURCE __RPC_FAR *pcsir,
    /* [in] */ REFIID riid,
    /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);


void __RPC_STUB IShellItemResources_OpenResource_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellItemResources_CreateResource_Proxy( 
    IShellItemResources __RPC_FAR * This,
    /* [in] */ const SHELL_ITEM_RESOURCE __RPC_FAR *pcsir,
    /* [in] */ REFIID riid,
    /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);


void __RPC_STUB IShellItemResources_CreateResource_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellItemResources_MarkForDelete_Proxy( 
    IShellItemResources __RPC_FAR * This);


void __RPC_STUB IShellItemResources_MarkForDelete_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IShellItemResources_INTERFACE_DEFINED__ */


#ifndef __ITransferDestination_INTERFACE_DEFINED__
#define __ITransferDestination_INTERFACE_DEFINED__

/* interface ITransferDestination */
/* [local][unique][uuid][object] */ 


EXTERN_C const IID IID_ITransferDestination;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("48addd32-3ca5-4124-abe3-b5a72531b207")
    ITransferDestination : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Advise( 
            /* [in] */ ITransferAdviseSink __RPC_FAR *psink,
            /* [out] */ DWORD __RPC_FAR *pdwCookie) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Unadvise( 
            /* [in] */ DWORD dwCookie) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateItem( 
            /* [string][in] */ LPCWSTR pszName,
            /* [in] */ DWORD dwAttributes,
            /* [in] */ ULONGLONG ullSize,
            /* [in] */ DWORD dwFlags,
            /* [in] */ REFIID riidItem,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvItem,
            /* [in] */ REFIID riidResources,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvResources) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ITransferDestinationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            ITransferDestination __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            ITransferDestination __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            ITransferDestination __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Advise )( 
            ITransferDestination __RPC_FAR * This,
            /* [in] */ ITransferAdviseSink __RPC_FAR *psink,
            /* [out] */ DWORD __RPC_FAR *pdwCookie);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Unadvise )( 
            ITransferDestination __RPC_FAR * This,
            /* [in] */ DWORD dwCookie);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CreateItem )( 
            ITransferDestination __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszName,
            /* [in] */ DWORD dwAttributes,
            /* [in] */ ULONGLONG ullSize,
            /* [in] */ DWORD dwFlags,
            /* [in] */ REFIID riidItem,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvItem,
            /* [in] */ REFIID riidResources,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvResources);
        
        END_INTERFACE
    } ITransferDestinationVtbl;

    interface ITransferDestination
    {
        CONST_VTBL struct ITransferDestinationVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ITransferDestination_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define ITransferDestination_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define ITransferDestination_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define ITransferDestination_Advise(This,psink,pdwCookie)	\
    (This)->lpVtbl -> Advise(This,psink,pdwCookie)

#define ITransferDestination_Unadvise(This,dwCookie)	\
    (This)->lpVtbl -> Unadvise(This,dwCookie)

#define ITransferDestination_CreateItem(This,pszName,dwAttributes,ullSize,dwFlags,riidItem,ppvItem,riidResources,ppvResources)	\
    (This)->lpVtbl -> CreateItem(This,pszName,dwAttributes,ullSize,dwFlags,riidItem,ppvItem,riidResources,ppvResources)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE ITransferDestination_Advise_Proxy( 
    ITransferDestination __RPC_FAR * This,
    /* [in] */ ITransferAdviseSink __RPC_FAR *psink,
    /* [out] */ DWORD __RPC_FAR *pdwCookie);


void __RPC_STUB ITransferDestination_Advise_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ITransferDestination_Unadvise_Proxy( 
    ITransferDestination __RPC_FAR * This,
    /* [in] */ DWORD dwCookie);


void __RPC_STUB ITransferDestination_Unadvise_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ITransferDestination_CreateItem_Proxy( 
    ITransferDestination __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszName,
    /* [in] */ DWORD dwAttributes,
    /* [in] */ ULONGLONG ullSize,
    /* [in] */ DWORD dwFlags,
    /* [in] */ REFIID riidItem,
    /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvItem,
    /* [in] */ REFIID riidResources,
    /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvResources);


void __RPC_STUB ITransferDestination_CreateItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __ITransferDestination_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0332 */
/* [local] */ 

#ifdef MIDL_PASS
typedef struct _OVERLAPPED
    {
    ULONG_PTR Internal;
    ULONG_PTR InternalHigh;
    union 
        {
        struct 
            {
            DWORD Offset;
            DWORD OffsetHigh;
            }	;
        PVOID Pointer;
        }	;
    HANDLE hEvent;
    }	OVERLAPPED;

typedef struct _OVERLAPPED __RPC_FAR *LPOVERLAPPED;

#endif // MIDL_PASS


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0332_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0332_v0_0_s_ifspec;

#ifndef __IStreamAsync_INTERFACE_DEFINED__
#define __IStreamAsync_INTERFACE_DEFINED__

/* interface IStreamAsync */
/* [local][unique][uuid][object] */ 


EXTERN_C const IID IID_IStreamAsync;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("fe0b6665-e0ca-49b9-a178-2b5cb48d92a5")
    IStreamAsync : public IStream
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE ReadAsync( 
            /* [length_is][size_is][out] */ void __RPC_FAR *pv,
            /* [in] */ DWORD cb,
            /* [out] */ LPDWORD pcbRead,
            /* [in] */ LPOVERLAPPED lpOverlapped) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE WriteAsync( 
            /* [length_is][size_is][in] */ const void __RPC_FAR *lpBuffer,
            /* [in] */ DWORD cb,
            /* [out] */ LPDWORD pcbWritten,
            /* [in] */ LPOVERLAPPED lpOverlapped) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OverlappedResult( 
            /* [in] */ LPOVERLAPPED lpOverlapped,
            /* [out] */ LPDWORD lpNumberOfBytesTransferred,
            /* [in] */ BOOL bWait) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CancelIo( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IStreamAsyncVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IStreamAsync __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IStreamAsync __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IStreamAsync __RPC_FAR * This);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Read )( 
            IStreamAsync __RPC_FAR * This,
            /* [length_is][size_is][out] */ void __RPC_FAR *pv,
            /* [in] */ ULONG cb,
            /* [out] */ ULONG __RPC_FAR *pcbRead);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Write )( 
            IStreamAsync __RPC_FAR * This,
            /* [size_is][in] */ const void __RPC_FAR *pv,
            /* [in] */ ULONG cb,
            /* [out] */ ULONG __RPC_FAR *pcbWritten);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Seek )( 
            IStreamAsync __RPC_FAR * This,
            /* [in] */ LARGE_INTEGER dlibMove,
            /* [in] */ DWORD dwOrigin,
            /* [out] */ ULARGE_INTEGER __RPC_FAR *plibNewPosition);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetSize )( 
            IStreamAsync __RPC_FAR * This,
            /* [in] */ ULARGE_INTEGER libNewSize);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CopyTo )( 
            IStreamAsync __RPC_FAR * This,
            /* [unique][in] */ IStream __RPC_FAR *pstm,
            /* [in] */ ULARGE_INTEGER cb,
            /* [out] */ ULARGE_INTEGER __RPC_FAR *pcbRead,
            /* [out] */ ULARGE_INTEGER __RPC_FAR *pcbWritten);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Commit )( 
            IStreamAsync __RPC_FAR * This,
            /* [in] */ DWORD grfCommitFlags);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Revert )( 
            IStreamAsync __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *LockRegion )( 
            IStreamAsync __RPC_FAR * This,
            /* [in] */ ULARGE_INTEGER libOffset,
            /* [in] */ ULARGE_INTEGER cb,
            /* [in] */ DWORD dwLockType);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *UnlockRegion )( 
            IStreamAsync __RPC_FAR * This,
            /* [in] */ ULARGE_INTEGER libOffset,
            /* [in] */ ULARGE_INTEGER cb,
            /* [in] */ DWORD dwLockType);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Stat )( 
            IStreamAsync __RPC_FAR * This,
            /* [out] */ STATSTG __RPC_FAR *pstatstg,
            /* [in] */ DWORD grfStatFlag);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Clone )( 
            IStreamAsync __RPC_FAR * This,
            /* [out] */ IStream __RPC_FAR *__RPC_FAR *ppstm);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ReadAsync )( 
            IStreamAsync __RPC_FAR * This,
            /* [length_is][size_is][out] */ void __RPC_FAR *pv,
            /* [in] */ DWORD cb,
            /* [out] */ LPDWORD pcbRead,
            /* [in] */ LPOVERLAPPED lpOverlapped);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *WriteAsync )( 
            IStreamAsync __RPC_FAR * This,
            /* [length_is][size_is][in] */ const void __RPC_FAR *lpBuffer,
            /* [in] */ DWORD cb,
            /* [out] */ LPDWORD pcbWritten,
            /* [in] */ LPOVERLAPPED lpOverlapped);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OverlappedResult )( 
            IStreamAsync __RPC_FAR * This,
            /* [in] */ LPOVERLAPPED lpOverlapped,
            /* [out] */ LPDWORD lpNumberOfBytesTransferred,
            /* [in] */ BOOL bWait);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CancelIo )( 
            IStreamAsync __RPC_FAR * This);
        
        END_INTERFACE
    } IStreamAsyncVtbl;

    interface IStreamAsync
    {
        CONST_VTBL struct IStreamAsyncVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IStreamAsync_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IStreamAsync_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IStreamAsync_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IStreamAsync_Read(This,pv,cb,pcbRead)	\
    (This)->lpVtbl -> Read(This,pv,cb,pcbRead)

#define IStreamAsync_Write(This,pv,cb,pcbWritten)	\
    (This)->lpVtbl -> Write(This,pv,cb,pcbWritten)


#define IStreamAsync_Seek(This,dlibMove,dwOrigin,plibNewPosition)	\
    (This)->lpVtbl -> Seek(This,dlibMove,dwOrigin,plibNewPosition)

#define IStreamAsync_SetSize(This,libNewSize)	\
    (This)->lpVtbl -> SetSize(This,libNewSize)

#define IStreamAsync_CopyTo(This,pstm,cb,pcbRead,pcbWritten)	\
    (This)->lpVtbl -> CopyTo(This,pstm,cb,pcbRead,pcbWritten)

#define IStreamAsync_Commit(This,grfCommitFlags)	\
    (This)->lpVtbl -> Commit(This,grfCommitFlags)

#define IStreamAsync_Revert(This)	\
    (This)->lpVtbl -> Revert(This)

#define IStreamAsync_LockRegion(This,libOffset,cb,dwLockType)	\
    (This)->lpVtbl -> LockRegion(This,libOffset,cb,dwLockType)

#define IStreamAsync_UnlockRegion(This,libOffset,cb,dwLockType)	\
    (This)->lpVtbl -> UnlockRegion(This,libOffset,cb,dwLockType)

#define IStreamAsync_Stat(This,pstatstg,grfStatFlag)	\
    (This)->lpVtbl -> Stat(This,pstatstg,grfStatFlag)

#define IStreamAsync_Clone(This,ppstm)	\
    (This)->lpVtbl -> Clone(This,ppstm)


#define IStreamAsync_ReadAsync(This,pv,cb,pcbRead,lpOverlapped)	\
    (This)->lpVtbl -> ReadAsync(This,pv,cb,pcbRead,lpOverlapped)

#define IStreamAsync_WriteAsync(This,lpBuffer,cb,pcbWritten,lpOverlapped)	\
    (This)->lpVtbl -> WriteAsync(This,lpBuffer,cb,pcbWritten,lpOverlapped)

#define IStreamAsync_OverlappedResult(This,lpOverlapped,lpNumberOfBytesTransferred,bWait)	\
    (This)->lpVtbl -> OverlappedResult(This,lpOverlapped,lpNumberOfBytesTransferred,bWait)

#define IStreamAsync_CancelIo(This)	\
    (This)->lpVtbl -> CancelIo(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IStreamAsync_ReadAsync_Proxy( 
    IStreamAsync __RPC_FAR * This,
    /* [length_is][size_is][out] */ void __RPC_FAR *pv,
    /* [in] */ DWORD cb,
    /* [out] */ LPDWORD pcbRead,
    /* [in] */ LPOVERLAPPED lpOverlapped);


void __RPC_STUB IStreamAsync_ReadAsync_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IStreamAsync_WriteAsync_Proxy( 
    IStreamAsync __RPC_FAR * This,
    /* [length_is][size_is][in] */ const void __RPC_FAR *lpBuffer,
    /* [in] */ DWORD cb,
    /* [out] */ LPDWORD pcbWritten,
    /* [in] */ LPOVERLAPPED lpOverlapped);


void __RPC_STUB IStreamAsync_WriteAsync_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IStreamAsync_OverlappedResult_Proxy( 
    IStreamAsync __RPC_FAR * This,
    /* [in] */ LPOVERLAPPED lpOverlapped,
    /* [out] */ LPDWORD lpNumberOfBytesTransferred,
    /* [in] */ BOOL bWait);


void __RPC_STUB IStreamAsync_OverlappedResult_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IStreamAsync_CancelIo_Proxy( 
    IStreamAsync __RPC_FAR * This);


void __RPC_STUB IStreamAsync_CancelIo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IStreamAsync_INTERFACE_DEFINED__ */


#ifndef __IStreamUnbufferedInfo_INTERFACE_DEFINED__
#define __IStreamUnbufferedInfo_INTERFACE_DEFINED__

/* interface IStreamUnbufferedInfo */
/* [local][unique][uuid][object] */ 


EXTERN_C const IID IID_IStreamUnbufferedInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8a68fdda-1fdc-4c20-8ceb-416643b5a625")
    IStreamUnbufferedInfo : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetSectorSize( 
            /* [out] */ ULONG __RPC_FAR *pcbSectorSize) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IStreamUnbufferedInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IStreamUnbufferedInfo __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IStreamUnbufferedInfo __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IStreamUnbufferedInfo __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSectorSize )( 
            IStreamUnbufferedInfo __RPC_FAR * This,
            /* [out] */ ULONG __RPC_FAR *pcbSectorSize);
        
        END_INTERFACE
    } IStreamUnbufferedInfoVtbl;

    interface IStreamUnbufferedInfo
    {
        CONST_VTBL struct IStreamUnbufferedInfoVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IStreamUnbufferedInfo_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IStreamUnbufferedInfo_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IStreamUnbufferedInfo_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IStreamUnbufferedInfo_GetSectorSize(This,pcbSectorSize)	\
    (This)->lpVtbl -> GetSectorSize(This,pcbSectorSize)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IStreamUnbufferedInfo_GetSectorSize_Proxy( 
    IStreamUnbufferedInfo __RPC_FAR * This,
    /* [out] */ ULONG __RPC_FAR *pcbSectorSize);


void __RPC_STUB IStreamUnbufferedInfo_GetSectorSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IStreamUnbufferedInfo_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0334 */
/* [local] */ 

#if (_WIN32_IE >= _WIN32_IE_IE70)


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0334_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0334_v0_0_s_ifspec;

#ifndef __IFileOperationProgressSink_INTERFACE_DEFINED__
#define __IFileOperationProgressSink_INTERFACE_DEFINED__

/* interface IFileOperationProgressSink */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IFileOperationProgressSink;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("04b0f1a7-9490-44bc-96e1-4296a31252e2")
    IFileOperationProgressSink : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE StartOperations( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE FinishOperations( 
            /* [in] */ HRESULT hrResult) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PreRenameItem( 
            /* [in] */ DWORD dwFlags,
            /* [in] */ IShellItem __RPC_FAR *psiItem,
            /* [string][unique][in] */ LPCWSTR pszNewName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PostRenameItem( 
            /* [in] */ DWORD dwFlags,
            /* [in] */ IShellItem __RPC_FAR *psiItem,
            /* [string][in] */ LPCWSTR pszNewName,
            /* [in] */ HRESULT hrRename,
            /* [in] */ IShellItem __RPC_FAR *psiNewlyCreated) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PreMoveItem( 
            /* [in] */ DWORD dwFlags,
            /* [in] */ IShellItem __RPC_FAR *psiItem,
            /* [in] */ IShellItem __RPC_FAR *psiDestinationFolder,
            /* [string][unique][in] */ LPCWSTR pszNewName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PostMoveItem( 
            /* [in] */ DWORD dwFlags,
            /* [in] */ IShellItem __RPC_FAR *psiItem,
            /* [in] */ IShellItem __RPC_FAR *psiDestinationFolder,
            /* [string][unique][in] */ LPCWSTR pszNewName,
            /* [in] */ HRESULT hrMove,
            /* [in] */ IShellItem __RPC_FAR *psiNewlyCreated) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PreCopyItem( 
            /* [in] */ DWORD dwFlags,
            /* [in] */ IShellItem __RPC_FAR *psiItem,
            /* [in] */ IShellItem __RPC_FAR *psiDestinationFolder,
            /* [string][unique][in] */ LPCWSTR pszNewName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PostCopyItem( 
            /* [in] */ DWORD dwFlags,
            /* [in] */ IShellItem __RPC_FAR *psiItem,
            /* [in] */ IShellItem __RPC_FAR *psiDestinationFolder,
            /* [string][unique][in] */ LPCWSTR pszNewName,
            /* [in] */ HRESULT hrCopy,
            /* [in] */ IShellItem __RPC_FAR *psiNewlyCreated) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PreDeleteItem( 
            /* [in] */ DWORD dwFlags,
            /* [in] */ IShellItem __RPC_FAR *psiItem) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PostDeleteItem( 
            /* [in] */ DWORD dwFlags,
            /* [in] */ IShellItem __RPC_FAR *psiItem,
            /* [in] */ HRESULT hrDelete,
            /* [in] */ IShellItem __RPC_FAR *psiNewlyCreated) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PreNewItem( 
            /* [in] */ DWORD dwFlags,
            /* [in] */ IShellItem __RPC_FAR *psiDestinationFolder,
            /* [string][unique][in] */ LPCWSTR pszNewName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PostNewItem( 
            /* [in] */ DWORD dwFlags,
            /* [in] */ IShellItem __RPC_FAR *psiDestinationFolder,
            /* [string][unique][in] */ LPCWSTR pszNewName,
            /* [string][unique][in] */ LPCWSTR pszTemplateName,
            /* [in] */ DWORD dwFileAttributes,
            /* [in] */ HRESULT hrNew,
            /* [in] */ IShellItem __RPC_FAR *psiNewItem) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UpdateProgress( 
            /* [in] */ UINT iWorkTotal,
            /* [in] */ UINT iWorkSoFar) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ResetTimer( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PauseTimer( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ResumeTimer( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IFileOperationProgressSinkVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IFileOperationProgressSink __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IFileOperationProgressSink __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IFileOperationProgressSink __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *StartOperations )( 
            IFileOperationProgressSink __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *FinishOperations )( 
            IFileOperationProgressSink __RPC_FAR * This,
            /* [in] */ HRESULT hrResult);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *PreRenameItem )( 
            IFileOperationProgressSink __RPC_FAR * This,
            /* [in] */ DWORD dwFlags,
            /* [in] */ IShellItem __RPC_FAR *psiItem,
            /* [string][unique][in] */ LPCWSTR pszNewName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *PostRenameItem )( 
            IFileOperationProgressSink __RPC_FAR * This,
            /* [in] */ DWORD dwFlags,
            /* [in] */ IShellItem __RPC_FAR *psiItem,
            /* [string][in] */ LPCWSTR pszNewName,
            /* [in] */ HRESULT hrRename,
            /* [in] */ IShellItem __RPC_FAR *psiNewlyCreated);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *PreMoveItem )( 
            IFileOperationProgressSink __RPC_FAR * This,
            /* [in] */ DWORD dwFlags,
            /* [in] */ IShellItem __RPC_FAR *psiItem,
            /* [in] */ IShellItem __RPC_FAR *psiDestinationFolder,
            /* [string][unique][in] */ LPCWSTR pszNewName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *PostMoveItem )( 
            IFileOperationProgressSink __RPC_FAR * This,
            /* [in] */ DWORD dwFlags,
            /* [in] */ IShellItem __RPC_FAR *psiItem,
            /* [in] */ IShellItem __RPC_FAR *psiDestinationFolder,
            /* [string][unique][in] */ LPCWSTR pszNewName,
            /* [in] */ HRESULT hrMove,
            /* [in] */ IShellItem __RPC_FAR *psiNewlyCreated);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *PreCopyItem )( 
            IFileOperationProgressSink __RPC_FAR * This,
            /* [in] */ DWORD dwFlags,
            /* [in] */ IShellItem __RPC_FAR *psiItem,
            /* [in] */ IShellItem __RPC_FAR *psiDestinationFolder,
            /* [string][unique][in] */ LPCWSTR pszNewName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *PostCopyItem )( 
            IFileOperationProgressSink __RPC_FAR * This,
            /* [in] */ DWORD dwFlags,
            /* [in] */ IShellItem __RPC_FAR *psiItem,
            /* [in] */ IShellItem __RPC_FAR *psiDestinationFolder,
            /* [string][unique][in] */ LPCWSTR pszNewName,
            /* [in] */ HRESULT hrCopy,
            /* [in] */ IShellItem __RPC_FAR *psiNewlyCreated);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *PreDeleteItem )( 
            IFileOperationProgressSink __RPC_FAR * This,
            /* [in] */ DWORD dwFlags,
            /* [in] */ IShellItem __RPC_FAR *psiItem);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *PostDeleteItem )( 
            IFileOperationProgressSink __RPC_FAR * This,
            /* [in] */ DWORD dwFlags,
            /* [in] */ IShellItem __RPC_FAR *psiItem,
            /* [in] */ HRESULT hrDelete,
            /* [in] */ IShellItem __RPC_FAR *psiNewlyCreated);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *PreNewItem )( 
            IFileOperationProgressSink __RPC_FAR * This,
            /* [in] */ DWORD dwFlags,
            /* [in] */ IShellItem __RPC_FAR *psiDestinationFolder,
            /* [string][unique][in] */ LPCWSTR pszNewName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *PostNewItem )( 
            IFileOperationProgressSink __RPC_FAR * This,
            /* [in] */ DWORD dwFlags,
            /* [in] */ IShellItem __RPC_FAR *psiDestinationFolder,
            /* [string][unique][in] */ LPCWSTR pszNewName,
            /* [string][unique][in] */ LPCWSTR pszTemplateName,
            /* [in] */ DWORD dwFileAttributes,
            /* [in] */ HRESULT hrNew,
            /* [in] */ IShellItem __RPC_FAR *psiNewItem);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *UpdateProgress )( 
            IFileOperationProgressSink __RPC_FAR * This,
            /* [in] */ UINT iWorkTotal,
            /* [in] */ UINT iWorkSoFar);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ResetTimer )( 
            IFileOperationProgressSink __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *PauseTimer )( 
            IFileOperationProgressSink __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ResumeTimer )( 
            IFileOperationProgressSink __RPC_FAR * This);
        
        END_INTERFACE
    } IFileOperationProgressSinkVtbl;

    interface IFileOperationProgressSink
    {
        CONST_VTBL struct IFileOperationProgressSinkVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IFileOperationProgressSink_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IFileOperationProgressSink_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IFileOperationProgressSink_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IFileOperationProgressSink_StartOperations(This)	\
    (This)->lpVtbl -> StartOperations(This)

#define IFileOperationProgressSink_FinishOperations(This,hrResult)	\
    (This)->lpVtbl -> FinishOperations(This,hrResult)

#define IFileOperationProgressSink_PreRenameItem(This,dwFlags,psiItem,pszNewName)	\
    (This)->lpVtbl -> PreRenameItem(This,dwFlags,psiItem,pszNewName)

#define IFileOperationProgressSink_PostRenameItem(This,dwFlags,psiItem,pszNewName,hrRename,psiNewlyCreated)	\
    (This)->lpVtbl -> PostRenameItem(This,dwFlags,psiItem,pszNewName,hrRename,psiNewlyCreated)

#define IFileOperationProgressSink_PreMoveItem(This,dwFlags,psiItem,psiDestinationFolder,pszNewName)	\
    (This)->lpVtbl -> PreMoveItem(This,dwFlags,psiItem,psiDestinationFolder,pszNewName)

#define IFileOperationProgressSink_PostMoveItem(This,dwFlags,psiItem,psiDestinationFolder,pszNewName,hrMove,psiNewlyCreated)	\
    (This)->lpVtbl -> PostMoveItem(This,dwFlags,psiItem,psiDestinationFolder,pszNewName,hrMove,psiNewlyCreated)

#define IFileOperationProgressSink_PreCopyItem(This,dwFlags,psiItem,psiDestinationFolder,pszNewName)	\
    (This)->lpVtbl -> PreCopyItem(This,dwFlags,psiItem,psiDestinationFolder,pszNewName)

#define IFileOperationProgressSink_PostCopyItem(This,dwFlags,psiItem,psiDestinationFolder,pszNewName,hrCopy,psiNewlyCreated)	\
    (This)->lpVtbl -> PostCopyItem(This,dwFlags,psiItem,psiDestinationFolder,pszNewName,hrCopy,psiNewlyCreated)

#define IFileOperationProgressSink_PreDeleteItem(This,dwFlags,psiItem)	\
    (This)->lpVtbl -> PreDeleteItem(This,dwFlags,psiItem)

#define IFileOperationProgressSink_PostDeleteItem(This,dwFlags,psiItem,hrDelete,psiNewlyCreated)	\
    (This)->lpVtbl -> PostDeleteItem(This,dwFlags,psiItem,hrDelete,psiNewlyCreated)

#define IFileOperationProgressSink_PreNewItem(This,dwFlags,psiDestinationFolder,pszNewName)	\
    (This)->lpVtbl -> PreNewItem(This,dwFlags,psiDestinationFolder,pszNewName)

#define IFileOperationProgressSink_PostNewItem(This,dwFlags,psiDestinationFolder,pszNewName,pszTemplateName,dwFileAttributes,hrNew,psiNewItem)	\
    (This)->lpVtbl -> PostNewItem(This,dwFlags,psiDestinationFolder,pszNewName,pszTemplateName,dwFileAttributes,hrNew,psiNewItem)

#define IFileOperationProgressSink_UpdateProgress(This,iWorkTotal,iWorkSoFar)	\
    (This)->lpVtbl -> UpdateProgress(This,iWorkTotal,iWorkSoFar)

#define IFileOperationProgressSink_ResetTimer(This)	\
    (This)->lpVtbl -> ResetTimer(This)

#define IFileOperationProgressSink_PauseTimer(This)	\
    (This)->lpVtbl -> PauseTimer(This)

#define IFileOperationProgressSink_ResumeTimer(This)	\
    (This)->lpVtbl -> ResumeTimer(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IFileOperationProgressSink_StartOperations_Proxy( 
    IFileOperationProgressSink __RPC_FAR * This);


void __RPC_STUB IFileOperationProgressSink_StartOperations_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileOperationProgressSink_FinishOperations_Proxy( 
    IFileOperationProgressSink __RPC_FAR * This,
    /* [in] */ HRESULT hrResult);


void __RPC_STUB IFileOperationProgressSink_FinishOperations_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileOperationProgressSink_PreRenameItem_Proxy( 
    IFileOperationProgressSink __RPC_FAR * This,
    /* [in] */ DWORD dwFlags,
    /* [in] */ IShellItem __RPC_FAR *psiItem,
    /* [string][unique][in] */ LPCWSTR pszNewName);


void __RPC_STUB IFileOperationProgressSink_PreRenameItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileOperationProgressSink_PostRenameItem_Proxy( 
    IFileOperationProgressSink __RPC_FAR * This,
    /* [in] */ DWORD dwFlags,
    /* [in] */ IShellItem __RPC_FAR *psiItem,
    /* [string][in] */ LPCWSTR pszNewName,
    /* [in] */ HRESULT hrRename,
    /* [in] */ IShellItem __RPC_FAR *psiNewlyCreated);


void __RPC_STUB IFileOperationProgressSink_PostRenameItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileOperationProgressSink_PreMoveItem_Proxy( 
    IFileOperationProgressSink __RPC_FAR * This,
    /* [in] */ DWORD dwFlags,
    /* [in] */ IShellItem __RPC_FAR *psiItem,
    /* [in] */ IShellItem __RPC_FAR *psiDestinationFolder,
    /* [string][unique][in] */ LPCWSTR pszNewName);


void __RPC_STUB IFileOperationProgressSink_PreMoveItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileOperationProgressSink_PostMoveItem_Proxy( 
    IFileOperationProgressSink __RPC_FAR * This,
    /* [in] */ DWORD dwFlags,
    /* [in] */ IShellItem __RPC_FAR *psiItem,
    /* [in] */ IShellItem __RPC_FAR *psiDestinationFolder,
    /* [string][unique][in] */ LPCWSTR pszNewName,
    /* [in] */ HRESULT hrMove,
    /* [in] */ IShellItem __RPC_FAR *psiNewlyCreated);


void __RPC_STUB IFileOperationProgressSink_PostMoveItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileOperationProgressSink_PreCopyItem_Proxy( 
    IFileOperationProgressSink __RPC_FAR * This,
    /* [in] */ DWORD dwFlags,
    /* [in] */ IShellItem __RPC_FAR *psiItem,
    /* [in] */ IShellItem __RPC_FAR *psiDestinationFolder,
    /* [string][unique][in] */ LPCWSTR pszNewName);


void __RPC_STUB IFileOperationProgressSink_PreCopyItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileOperationProgressSink_PostCopyItem_Proxy( 
    IFileOperationProgressSink __RPC_FAR * This,
    /* [in] */ DWORD dwFlags,
    /* [in] */ IShellItem __RPC_FAR *psiItem,
    /* [in] */ IShellItem __RPC_FAR *psiDestinationFolder,
    /* [string][unique][in] */ LPCWSTR pszNewName,
    /* [in] */ HRESULT hrCopy,
    /* [in] */ IShellItem __RPC_FAR *psiNewlyCreated);


void __RPC_STUB IFileOperationProgressSink_PostCopyItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileOperationProgressSink_PreDeleteItem_Proxy( 
    IFileOperationProgressSink __RPC_FAR * This,
    /* [in] */ DWORD dwFlags,
    /* [in] */ IShellItem __RPC_FAR *psiItem);


void __RPC_STUB IFileOperationProgressSink_PreDeleteItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileOperationProgressSink_PostDeleteItem_Proxy( 
    IFileOperationProgressSink __RPC_FAR * This,
    /* [in] */ DWORD dwFlags,
    /* [in] */ IShellItem __RPC_FAR *psiItem,
    /* [in] */ HRESULT hrDelete,
    /* [in] */ IShellItem __RPC_FAR *psiNewlyCreated);


void __RPC_STUB IFileOperationProgressSink_PostDeleteItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileOperationProgressSink_PreNewItem_Proxy( 
    IFileOperationProgressSink __RPC_FAR * This,
    /* [in] */ DWORD dwFlags,
    /* [in] */ IShellItem __RPC_FAR *psiDestinationFolder,
    /* [string][unique][in] */ LPCWSTR pszNewName);


void __RPC_STUB IFileOperationProgressSink_PreNewItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileOperationProgressSink_PostNewItem_Proxy( 
    IFileOperationProgressSink __RPC_FAR * This,
    /* [in] */ DWORD dwFlags,
    /* [in] */ IShellItem __RPC_FAR *psiDestinationFolder,
    /* [string][unique][in] */ LPCWSTR pszNewName,
    /* [string][unique][in] */ LPCWSTR pszTemplateName,
    /* [in] */ DWORD dwFileAttributes,
    /* [in] */ HRESULT hrNew,
    /* [in] */ IShellItem __RPC_FAR *psiNewItem);


void __RPC_STUB IFileOperationProgressSink_PostNewItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileOperationProgressSink_UpdateProgress_Proxy( 
    IFileOperationProgressSink __RPC_FAR * This,
    /* [in] */ UINT iWorkTotal,
    /* [in] */ UINT iWorkSoFar);


void __RPC_STUB IFileOperationProgressSink_UpdateProgress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileOperationProgressSink_ResetTimer_Proxy( 
    IFileOperationProgressSink __RPC_FAR * This);


void __RPC_STUB IFileOperationProgressSink_ResetTimer_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileOperationProgressSink_PauseTimer_Proxy( 
    IFileOperationProgressSink __RPC_FAR * This);


void __RPC_STUB IFileOperationProgressSink_PauseTimer_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileOperationProgressSink_ResumeTimer_Proxy( 
    IFileOperationProgressSink __RPC_FAR * This);


void __RPC_STUB IFileOperationProgressSink_ResumeTimer_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IFileOperationProgressSink_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0335 */
/* [local] */ 

#endif  // (_WIN32_IE >= _WIN32_IE_IE70)


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0335_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0335_v0_0_s_ifspec;

#ifndef __IShellItemArray_INTERFACE_DEFINED__
#define __IShellItemArray_INTERFACE_DEFINED__

/* interface IShellItemArray */
/* [unique][object][uuid][helpstring] */ 

typedef /* [v1_enum] */ 
enum tagSIATTRIBFLAGS
    {	SIATTRIBFLAGS_AND	= 0x1,
	SIATTRIBFLAGS_OR	= 0x2,
	SIATTRIBFLAGS_APPCOMPAT	= 0x3,
	SIATTRIBFLAGS_MASK	= 0x3
    }	SIATTRIBFLAGS;


EXTERN_C const IID IID_IShellItemArray;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("b63ea76d-1f85-456f-a19c-48159efa858b")
    IShellItemArray : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE BindToHandler( 
            /* [unique][in] */ IBindCtx __RPC_FAR *pbc,
            /* [in] */ REFGUID rbhid,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvOut) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPropertyStore( 
            /* [in] */ GETPROPERTYSTOREFLAGS flags,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPropertyDescriptionList( 
            /* [in] */ REFPROPERTYKEY keyType,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAttributes( 
            /* [in] */ SIATTRIBFLAGS dwAttribFlags,
            /* [in] */ SFGAOF sfgaoMask,
            /* [out] */ SFGAOF __RPC_FAR *psfgaoAttribs) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCount( 
            /* [out] */ DWORD __RPC_FAR *pdwNumItems) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetItemAt( 
            /* [in] */ DWORD dwIndex,
            /* [out] */ IShellItem __RPC_FAR *__RPC_FAR *ppsi) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnumItems( 
            /* [out] */ IEnumShellItems __RPC_FAR *__RPC_FAR *ppenumShellItems) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IShellItemArrayVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IShellItemArray __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IShellItemArray __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IShellItemArray __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *BindToHandler )( 
            IShellItemArray __RPC_FAR * This,
            /* [unique][in] */ IBindCtx __RPC_FAR *pbc,
            /* [in] */ REFGUID rbhid,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvOut);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetPropertyStore )( 
            IShellItemArray __RPC_FAR * This,
            /* [in] */ GETPROPERTYSTOREFLAGS flags,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetPropertyDescriptionList )( 
            IShellItemArray __RPC_FAR * This,
            /* [in] */ REFPROPERTYKEY keyType,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetAttributes )( 
            IShellItemArray __RPC_FAR * This,
            /* [in] */ SIATTRIBFLAGS dwAttribFlags,
            /* [in] */ SFGAOF sfgaoMask,
            /* [out] */ SFGAOF __RPC_FAR *psfgaoAttribs);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCount )( 
            IShellItemArray __RPC_FAR * This,
            /* [out] */ DWORD __RPC_FAR *pdwNumItems);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetItemAt )( 
            IShellItemArray __RPC_FAR * This,
            /* [in] */ DWORD dwIndex,
            /* [out] */ IShellItem __RPC_FAR *__RPC_FAR *ppsi);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *EnumItems )( 
            IShellItemArray __RPC_FAR * This,
            /* [out] */ IEnumShellItems __RPC_FAR *__RPC_FAR *ppenumShellItems);
        
        END_INTERFACE
    } IShellItemArrayVtbl;

    interface IShellItemArray
    {
        CONST_VTBL struct IShellItemArrayVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IShellItemArray_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IShellItemArray_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IShellItemArray_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IShellItemArray_BindToHandler(This,pbc,rbhid,riid,ppvOut)	\
    (This)->lpVtbl -> BindToHandler(This,pbc,rbhid,riid,ppvOut)

#define IShellItemArray_GetPropertyStore(This,flags,riid,ppv)	\
    (This)->lpVtbl -> GetPropertyStore(This,flags,riid,ppv)

#define IShellItemArray_GetPropertyDescriptionList(This,keyType,riid,ppv)	\
    (This)->lpVtbl -> GetPropertyDescriptionList(This,keyType,riid,ppv)

#define IShellItemArray_GetAttributes(This,dwAttribFlags,sfgaoMask,psfgaoAttribs)	\
    (This)->lpVtbl -> GetAttributes(This,dwAttribFlags,sfgaoMask,psfgaoAttribs)

#define IShellItemArray_GetCount(This,pdwNumItems)	\
    (This)->lpVtbl -> GetCount(This,pdwNumItems)

#define IShellItemArray_GetItemAt(This,dwIndex,ppsi)	\
    (This)->lpVtbl -> GetItemAt(This,dwIndex,ppsi)

#define IShellItemArray_EnumItems(This,ppenumShellItems)	\
    (This)->lpVtbl -> EnumItems(This,ppenumShellItems)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IShellItemArray_BindToHandler_Proxy( 
    IShellItemArray __RPC_FAR * This,
    /* [unique][in] */ IBindCtx __RPC_FAR *pbc,
    /* [in] */ REFGUID rbhid,
    /* [in] */ REFIID riid,
    /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvOut);


void __RPC_STUB IShellItemArray_BindToHandler_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellItemArray_GetPropertyStore_Proxy( 
    IShellItemArray __RPC_FAR * This,
    /* [in] */ GETPROPERTYSTOREFLAGS flags,
    /* [in] */ REFIID riid,
    /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);


void __RPC_STUB IShellItemArray_GetPropertyStore_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellItemArray_GetPropertyDescriptionList_Proxy( 
    IShellItemArray __RPC_FAR * This,
    /* [in] */ REFPROPERTYKEY keyType,
    /* [in] */ REFIID riid,
    /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);


void __RPC_STUB IShellItemArray_GetPropertyDescriptionList_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellItemArray_GetAttributes_Proxy( 
    IShellItemArray __RPC_FAR * This,
    /* [in] */ SIATTRIBFLAGS dwAttribFlags,
    /* [in] */ SFGAOF sfgaoMask,
    /* [out] */ SFGAOF __RPC_FAR *psfgaoAttribs);


void __RPC_STUB IShellItemArray_GetAttributes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellItemArray_GetCount_Proxy( 
    IShellItemArray __RPC_FAR * This,
    /* [out] */ DWORD __RPC_FAR *pdwNumItems);


void __RPC_STUB IShellItemArray_GetCount_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellItemArray_GetItemAt_Proxy( 
    IShellItemArray __RPC_FAR * This,
    /* [in] */ DWORD dwIndex,
    /* [out] */ IShellItem __RPC_FAR *__RPC_FAR *ppsi);


void __RPC_STUB IShellItemArray_GetItemAt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellItemArray_EnumItems_Proxy( 
    IShellItemArray __RPC_FAR * This,
    /* [out] */ IEnumShellItems __RPC_FAR *__RPC_FAR *ppenumShellItems);


void __RPC_STUB IShellItemArray_EnumItems_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IShellItemArray_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0336 */
/* [local] */ 

#if (_WIN32_IE >= _WIN32_IE_IE70)
SHSTDAPI SHCreateShellItemArray(__in_opt PCIDLIST_ABSOLUTE pidlParent, __in_opt IShellFolder *psf, UINT cidl, __in_ecount(cidl) PCUITEMID_CHILD_ARRAY ppidl, __deref_out IShellItemArray **ppsiItemArray);
SHSTDAPI SHCreateShellItemArrayFromDataObject(IDataObject *pdo, REFIID riid, __deref_out void **ppv);
SHSTDAPI SHCreateShellItemArrayFromIDLists(UINT cidl, PCIDLIST_ABSOLUTE_ARRAY rgpidl, __deref_out IShellItemArray **ppsiItemArray);
SHSTDAPI SHCreateShellItemArrayFromShellItem(__in IShellItem *psi, REFIID riid, __deref_out void **ppv);
#endif  // (_WIN32_IE >= _WIN32_IE_IE70)


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0336_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0336_v0_0_s_ifspec;

#ifndef __IInitializeWithItem_INTERFACE_DEFINED__
#define __IInitializeWithItem_INTERFACE_DEFINED__

/* interface IInitializeWithItem */
/* [unique][object][uuid] */ 


EXTERN_C const IID IID_IInitializeWithItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7f73be3f-fb79-493c-a6c7-7ee14e245841")
    IInitializeWithItem : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Initialize( 
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [in] */ DWORD grfMode) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IInitializeWithItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IInitializeWithItem __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IInitializeWithItem __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IInitializeWithItem __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Initialize )( 
            IInitializeWithItem __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [in] */ DWORD grfMode);
        
        END_INTERFACE
    } IInitializeWithItemVtbl;

    interface IInitializeWithItem
    {
        CONST_VTBL struct IInitializeWithItemVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IInitializeWithItem_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IInitializeWithItem_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IInitializeWithItem_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IInitializeWithItem_Initialize(This,psi,grfMode)	\
    (This)->lpVtbl -> Initialize(This,psi,grfMode)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IInitializeWithItem_Initialize_Proxy( 
    IInitializeWithItem __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psi,
    /* [in] */ DWORD grfMode);


void __RPC_STUB IInitializeWithItem_Initialize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IInitializeWithItem_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0337 */
/* [local] */ 

/* [v1_enum] */ 
enum tagPROPERTYUI_NAME_FLAGS
    {	PUIFNF_DEFAULT	= 0,
	PUIFNF_MNEMONIC	= 0x1
    };
typedef DWORD PROPERTYUI_NAME_FLAGS;

/* [v1_enum] */ 
enum tagPROPERTYUI_FLAGS
    {	PUIF_DEFAULT	= 0,
	PUIF_RIGHTALIGN	= 0x1,
	PUIF_NOLABELININFOTIP	= 0x2
    };
typedef DWORD PROPERTYUI_FLAGS;

/* [v1_enum] */ 
enum tagPROPERTYUI_FORMAT_FLAGS
    {	PUIFFDF_DEFAULT	= 0,
	PUIFFDF_RIGHTTOLEFT	= 0x1,
	PUIFFDF_SHORTFORMAT	= 0x2,
	PUIFFDF_NOTIME	= 0x4,
	PUIFFDF_FRIENDLYDATE	= 0x8
    };
typedef DWORD PROPERTYUI_FORMAT_FLAGS;



extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0337_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0337_v0_0_s_ifspec;

#ifndef __IPropertyUI_INTERFACE_DEFINED__
#define __IPropertyUI_INTERFACE_DEFINED__

/* interface IPropertyUI */
/* [unique][object][uuid][helpstring] */ 


EXTERN_C const IID IID_IPropertyUI;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("757a7d9f-919a-4118-99d7-dbb208c8cc66")
    IPropertyUI : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE ParsePropertyName( 
            /* [string][in] */ LPCWSTR pszName,
            /* [out] */ FMTID __RPC_FAR *pfmtid,
            /* [out] */ PROPID __RPC_FAR *ppid,
            /* [out][in] */ ULONG __RPC_FAR *pchEaten) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCannonicalName( 
            /* [in] */ REFFMTID fmtid,
            /* [in] */ PROPID pid,
            /* [size_is][string][out] */ LPWSTR pwszText,
            /* [in] */ DWORD cchText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDisplayName( 
            /* [in] */ REFFMTID fmtid,
            /* [in] */ PROPID pid,
            /* [in] */ PROPERTYUI_NAME_FLAGS flags,
            /* [size_is][out] */ LPWSTR pwszText,
            /* [in] */ DWORD cchText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPropertyDescription( 
            /* [in] */ REFFMTID fmtid,
            /* [in] */ PROPID pid,
            /* [size_is][out] */ LPWSTR pwszText,
            /* [in] */ DWORD cchText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDefaultWidth( 
            /* [in] */ REFFMTID fmtid,
            /* [in] */ PROPID pid,
            /* [out] */ ULONG __RPC_FAR *pcxChars) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFlags( 
            /* [in] */ REFFMTID fmtid,
            /* [in] */ PROPID pid,
            /* [out] */ PROPERTYUI_FLAGS __RPC_FAR *pflags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE FormatForDisplay( 
            /* [in] */ REFFMTID fmtid,
            /* [in] */ PROPID pid,
            /* [in] */ const PROPVARIANT __RPC_FAR *ppropvar,
            /* [in] */ PROPERTYUI_FORMAT_FLAGS puiff,
            /* [size_is][string][out] */ LPWSTR pwszText,
            /* [in] */ DWORD cchText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetHelpInfo( 
            /* [in] */ REFFMTID fmtid,
            /* [in] */ PROPID pid,
            /* [size_is][string][out] */ LPWSTR pwszHelpFile,
            /* [in] */ DWORD cch,
            /* [out] */ UINT __RPC_FAR *puHelpID) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IPropertyUIVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IPropertyUI __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IPropertyUI __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IPropertyUI __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ParsePropertyName )( 
            IPropertyUI __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszName,
            /* [out] */ FMTID __RPC_FAR *pfmtid,
            /* [out] */ PROPID __RPC_FAR *ppid,
            /* [out][in] */ ULONG __RPC_FAR *pchEaten);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCannonicalName )( 
            IPropertyUI __RPC_FAR * This,
            /* [in] */ REFFMTID fmtid,
            /* [in] */ PROPID pid,
            /* [size_is][string][out] */ LPWSTR pwszText,
            /* [in] */ DWORD cchText);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetDisplayName )( 
            IPropertyUI __RPC_FAR * This,
            /* [in] */ REFFMTID fmtid,
            /* [in] */ PROPID pid,
            /* [in] */ PROPERTYUI_NAME_FLAGS flags,
            /* [size_is][out] */ LPWSTR pwszText,
            /* [in] */ DWORD cchText);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetPropertyDescription )( 
            IPropertyUI __RPC_FAR * This,
            /* [in] */ REFFMTID fmtid,
            /* [in] */ PROPID pid,
            /* [size_is][out] */ LPWSTR pwszText,
            /* [in] */ DWORD cchText);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetDefaultWidth )( 
            IPropertyUI __RPC_FAR * This,
            /* [in] */ REFFMTID fmtid,
            /* [in] */ PROPID pid,
            /* [out] */ ULONG __RPC_FAR *pcxChars);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFlags )( 
            IPropertyUI __RPC_FAR * This,
            /* [in] */ REFFMTID fmtid,
            /* [in] */ PROPID pid,
            /* [out] */ PROPERTYUI_FLAGS __RPC_FAR *pflags);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *FormatForDisplay )( 
            IPropertyUI __RPC_FAR * This,
            /* [in] */ REFFMTID fmtid,
            /* [in] */ PROPID pid,
            /* [in] */ const PROPVARIANT __RPC_FAR *ppropvar,
            /* [in] */ PROPERTYUI_FORMAT_FLAGS puiff,
            /* [size_is][string][out] */ LPWSTR pwszText,
            /* [in] */ DWORD cchText);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetHelpInfo )( 
            IPropertyUI __RPC_FAR * This,
            /* [in] */ REFFMTID fmtid,
            /* [in] */ PROPID pid,
            /* [size_is][string][out] */ LPWSTR pwszHelpFile,
            /* [in] */ DWORD cch,
            /* [out] */ UINT __RPC_FAR *puHelpID);
        
        END_INTERFACE
    } IPropertyUIVtbl;

    interface IPropertyUI
    {
        CONST_VTBL struct IPropertyUIVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IPropertyUI_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IPropertyUI_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IPropertyUI_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IPropertyUI_ParsePropertyName(This,pszName,pfmtid,ppid,pchEaten)	\
    (This)->lpVtbl -> ParsePropertyName(This,pszName,pfmtid,ppid,pchEaten)

#define IPropertyUI_GetCannonicalName(This,fmtid,pid,pwszText,cchText)	\
    (This)->lpVtbl -> GetCannonicalName(This,fmtid,pid,pwszText,cchText)

#define IPropertyUI_GetDisplayName(This,fmtid,pid,flags,pwszText,cchText)	\
    (This)->lpVtbl -> GetDisplayName(This,fmtid,pid,flags,pwszText,cchText)

#define IPropertyUI_GetPropertyDescription(This,fmtid,pid,pwszText,cchText)	\
    (This)->lpVtbl -> GetPropertyDescription(This,fmtid,pid,pwszText,cchText)

#define IPropertyUI_GetDefaultWidth(This,fmtid,pid,pcxChars)	\
    (This)->lpVtbl -> GetDefaultWidth(This,fmtid,pid,pcxChars)

#define IPropertyUI_GetFlags(This,fmtid,pid,pflags)	\
    (This)->lpVtbl -> GetFlags(This,fmtid,pid,pflags)

#define IPropertyUI_FormatForDisplay(This,fmtid,pid,ppropvar,puiff,pwszText,cchText)	\
    (This)->lpVtbl -> FormatForDisplay(This,fmtid,pid,ppropvar,puiff,pwszText,cchText)

#define IPropertyUI_GetHelpInfo(This,fmtid,pid,pwszHelpFile,cch,puHelpID)	\
    (This)->lpVtbl -> GetHelpInfo(This,fmtid,pid,pwszHelpFile,cch,puHelpID)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IPropertyUI_ParsePropertyName_Proxy( 
    IPropertyUI __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszName,
    /* [out] */ FMTID __RPC_FAR *pfmtid,
    /* [out] */ PROPID __RPC_FAR *ppid,
    /* [out][in] */ ULONG __RPC_FAR *pchEaten);


void __RPC_STUB IPropertyUI_ParsePropertyName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IPropertyUI_GetCannonicalName_Proxy( 
    IPropertyUI __RPC_FAR * This,
    /* [in] */ REFFMTID fmtid,
    /* [in] */ PROPID pid,
    /* [size_is][string][out] */ LPWSTR pwszText,
    /* [in] */ DWORD cchText);


void __RPC_STUB IPropertyUI_GetCannonicalName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IPropertyUI_GetDisplayName_Proxy( 
    IPropertyUI __RPC_FAR * This,
    /* [in] */ REFFMTID fmtid,
    /* [in] */ PROPID pid,
    /* [in] */ PROPERTYUI_NAME_FLAGS flags,
    /* [size_is][out] */ LPWSTR pwszText,
    /* [in] */ DWORD cchText);


void __RPC_STUB IPropertyUI_GetDisplayName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IPropertyUI_GetPropertyDescription_Proxy( 
    IPropertyUI __RPC_FAR * This,
    /* [in] */ REFFMTID fmtid,
    /* [in] */ PROPID pid,
    /* [size_is][out] */ LPWSTR pwszText,
    /* [in] */ DWORD cchText);


void __RPC_STUB IPropertyUI_GetPropertyDescription_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IPropertyUI_GetDefaultWidth_Proxy( 
    IPropertyUI __RPC_FAR * This,
    /* [in] */ REFFMTID fmtid,
    /* [in] */ PROPID pid,
    /* [out] */ ULONG __RPC_FAR *pcxChars);


void __RPC_STUB IPropertyUI_GetDefaultWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IPropertyUI_GetFlags_Proxy( 
    IPropertyUI __RPC_FAR * This,
    /* [in] */ REFFMTID fmtid,
    /* [in] */ PROPID pid,
    /* [out] */ PROPERTYUI_FLAGS __RPC_FAR *pflags);


void __RPC_STUB IPropertyUI_GetFlags_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IPropertyUI_FormatForDisplay_Proxy( 
    IPropertyUI __RPC_FAR * This,
    /* [in] */ REFFMTID fmtid,
    /* [in] */ PROPID pid,
    /* [in] */ const PROPVARIANT __RPC_FAR *ppropvar,
    /* [in] */ PROPERTYUI_FORMAT_FLAGS puiff,
    /* [size_is][string][out] */ LPWSTR pwszText,
    /* [in] */ DWORD cchText);


void __RPC_STUB IPropertyUI_FormatForDisplay_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IPropertyUI_GetHelpInfo_Proxy( 
    IPropertyUI __RPC_FAR * This,
    /* [in] */ REFFMTID fmtid,
    /* [in] */ PROPID pid,
    /* [size_is][string][out] */ LPWSTR pwszHelpFile,
    /* [in] */ DWORD cch,
    /* [out] */ UINT __RPC_FAR *puHelpID);


void __RPC_STUB IPropertyUI_GetHelpInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IPropertyUI_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0338 */
/* [local] */ 

#if (_WIN32_IE >= _WIN32_IE_IE70)
SHSTDAPI SHRemovePersonalPropertyValues(__in IShellItemArray *psia);
SHSTDAPI SHAddDefaultPropertiesByExt(PCWSTR pszExt, IPropertyStore *pPropStore);
SHSTDAPI SHCreateDefaultPropertiesOp(IShellItem *psi, __out IFileOperation **ppFileOp);
SHSTDAPI SHSetDefaultProperties(__in_opt HWND hwndParent, IShellItem *psi, DWORD dwFileOpFlags, __in_opt IFileOperationProgressSink *pfops);
#endif  // (_WIN32_IE >= _WIN32_IE_IE70)
#if (_WIN32_IE >= 0x0500)


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0338_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0338_v0_0_s_ifspec;

#ifndef __ICategoryProvider_INTERFACE_DEFINED__
#define __ICategoryProvider_INTERFACE_DEFINED__

/* interface ICategoryProvider */
/* [unique][object][uuid][helpstring] */ 


EXTERN_C const IID IID_ICategoryProvider;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9af64809-5864-4c26-a720-c1f78c086ee3")
    ICategoryProvider : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CanCategorizeOnSCID( 
            /* [in] */ const SHCOLUMNID __RPC_FAR *pscid) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetDefaultCategory( 
            /* [out] */ GUID __RPC_FAR *pguid,
            /* [out] */ SHCOLUMNID __RPC_FAR *pscid) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetCategoryForSCID( 
            /* [in] */ const SHCOLUMNID __RPC_FAR *pscid,
            /* [out] */ GUID __RPC_FAR *pguid) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE EnumCategories( 
            /* [out] */ IEnumGUID __RPC_FAR *__RPC_FAR *penum) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetCategoryName( 
            /* [in] */ const GUID __RPC_FAR *pguid,
            /* [size_is][string][out] */ LPWSTR pszName,
            /* [in] */ UINT cch) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CreateCategory( 
            /* [in] */ const GUID __RPC_FAR *pguid,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ICategoryProviderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            ICategoryProvider __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            ICategoryProvider __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            ICategoryProvider __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CanCategorizeOnSCID )( 
            ICategoryProvider __RPC_FAR * This,
            /* [in] */ const SHCOLUMNID __RPC_FAR *pscid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetDefaultCategory )( 
            ICategoryProvider __RPC_FAR * This,
            /* [out] */ GUID __RPC_FAR *pguid,
            /* [out] */ SHCOLUMNID __RPC_FAR *pscid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCategoryForSCID )( 
            ICategoryProvider __RPC_FAR * This,
            /* [in] */ const SHCOLUMNID __RPC_FAR *pscid,
            /* [out] */ GUID __RPC_FAR *pguid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *EnumCategories )( 
            ICategoryProvider __RPC_FAR * This,
            /* [out] */ IEnumGUID __RPC_FAR *__RPC_FAR *penum);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCategoryName )( 
            ICategoryProvider __RPC_FAR * This,
            /* [in] */ const GUID __RPC_FAR *pguid,
            /* [size_is][string][out] */ LPWSTR pszName,
            /* [in] */ UINT cch);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CreateCategory )( 
            ICategoryProvider __RPC_FAR * This,
            /* [in] */ const GUID __RPC_FAR *pguid,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);
        
        END_INTERFACE
    } ICategoryProviderVtbl;

    interface ICategoryProvider
    {
        CONST_VTBL struct ICategoryProviderVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICategoryProvider_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define ICategoryProvider_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define ICategoryProvider_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define ICategoryProvider_CanCategorizeOnSCID(This,pscid)	\
    (This)->lpVtbl -> CanCategorizeOnSCID(This,pscid)

#define ICategoryProvider_GetDefaultCategory(This,pguid,pscid)	\
    (This)->lpVtbl -> GetDefaultCategory(This,pguid,pscid)

#define ICategoryProvider_GetCategoryForSCID(This,pscid,pguid)	\
    (This)->lpVtbl -> GetCategoryForSCID(This,pscid,pguid)

#define ICategoryProvider_EnumCategories(This,penum)	\
    (This)->lpVtbl -> EnumCategories(This,penum)

#define ICategoryProvider_GetCategoryName(This,pguid,pszName,cch)	\
    (This)->lpVtbl -> GetCategoryName(This,pguid,pszName,cch)

#define ICategoryProvider_CreateCategory(This,pguid,riid,ppv)	\
    (This)->lpVtbl -> CreateCategory(This,pguid,riid,ppv)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring] */ HRESULT STDMETHODCALLTYPE ICategoryProvider_CanCategorizeOnSCID_Proxy( 
    ICategoryProvider __RPC_FAR * This,
    /* [in] */ const SHCOLUMNID __RPC_FAR *pscid);


void __RPC_STUB ICategoryProvider_CanCategorizeOnSCID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE ICategoryProvider_GetDefaultCategory_Proxy( 
    ICategoryProvider __RPC_FAR * This,
    /* [out] */ GUID __RPC_FAR *pguid,
    /* [out] */ SHCOLUMNID __RPC_FAR *pscid);


void __RPC_STUB ICategoryProvider_GetDefaultCategory_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE ICategoryProvider_GetCategoryForSCID_Proxy( 
    ICategoryProvider __RPC_FAR * This,
    /* [in] */ const SHCOLUMNID __RPC_FAR *pscid,
    /* [out] */ GUID __RPC_FAR *pguid);


void __RPC_STUB ICategoryProvider_GetCategoryForSCID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE ICategoryProvider_EnumCategories_Proxy( 
    ICategoryProvider __RPC_FAR * This,
    /* [out] */ IEnumGUID __RPC_FAR *__RPC_FAR *penum);


void __RPC_STUB ICategoryProvider_EnumCategories_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE ICategoryProvider_GetCategoryName_Proxy( 
    ICategoryProvider __RPC_FAR * This,
    /* [in] */ const GUID __RPC_FAR *pguid,
    /* [size_is][string][out] */ LPWSTR pszName,
    /* [in] */ UINT cch);


void __RPC_STUB ICategoryProvider_GetCategoryName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE ICategoryProvider_CreateCategory_Proxy( 
    ICategoryProvider __RPC_FAR * This,
    /* [in] */ const GUID __RPC_FAR *pguid,
    /* [in] */ REFIID riid,
    /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);


void __RPC_STUB ICategoryProvider_CreateCategory_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __ICategoryProvider_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0339 */
/* [local] */ 

typedef /* [v1_enum] */ 
enum tagCATEGORYINFO_FLAGS
    {	CATINFO_NORMAL	= 0,
	CATINFO_COLLAPSED	= 0x1,
	CATINFO_HIDDEN	= 0x2,
	CATINFO_EXPANDED	= 0x4,
	CATINFO_NOHEADER	= 0x8,
	CATINFO_NOTCOLLAPSIBLE	= 0x10,
	CATINFO_NOHEADERCOUNT	= 0x20
    }	CATEGORYINFO_FLAGS;

typedef /* [v1_enum] */ 
enum tagCATSORT_FLAGS
    {	CATSORT_DEFAULT	= 0,
	CATSORT_NAME	= 0x1
    }	CATSORT_FLAGS;

typedef struct tagCATEGORY_INFO
    {
    CATEGORYINFO_FLAGS cif;
    WCHAR wszName[ 260 ];
    }	CATEGORY_INFO;



extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0339_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0339_v0_0_s_ifspec;

#ifndef __ICategorizer_INTERFACE_DEFINED__
#define __ICategorizer_INTERFACE_DEFINED__

/* interface ICategorizer */
/* [unique][object][uuid][helpstring] */ 


EXTERN_C const IID IID_ICategorizer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("a3b14589-9174-49a8-89a3-06a1ae2b9ba7")
    ICategorizer : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetDescription( 
            /* [size_is][string][out] */ LPWSTR pszDesc,
            /* [in] */ UINT cch) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetCategory( 
            /* [in] */ UINT cidl,
            /* [size_is][in] */ PCUITEMID_CHILD_ARRAY apidl,
            /* [size_is][out] */ DWORD __RPC_FAR *rgCategoryIds) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetCategoryInfo( 
            /* [in] */ DWORD dwCategoryId,
            /* [out] */ CATEGORY_INFO __RPC_FAR *pci) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CompareCategory( 
            /* [in] */ CATSORT_FLAGS csfFlags,
            /* [in] */ DWORD dwCategoryId1,
            /* [in] */ DWORD dwCategoryId2) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ICategorizerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            ICategorizer __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            ICategorizer __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            ICategorizer __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetDescription )( 
            ICategorizer __RPC_FAR * This,
            /* [size_is][string][out] */ LPWSTR pszDesc,
            /* [in] */ UINT cch);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCategory )( 
            ICategorizer __RPC_FAR * This,
            /* [in] */ UINT cidl,
            /* [size_is][in] */ PCUITEMID_CHILD_ARRAY apidl,
            /* [size_is][out] */ DWORD __RPC_FAR *rgCategoryIds);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCategoryInfo )( 
            ICategorizer __RPC_FAR * This,
            /* [in] */ DWORD dwCategoryId,
            /* [out] */ CATEGORY_INFO __RPC_FAR *pci);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CompareCategory )( 
            ICategorizer __RPC_FAR * This,
            /* [in] */ CATSORT_FLAGS csfFlags,
            /* [in] */ DWORD dwCategoryId1,
            /* [in] */ DWORD dwCategoryId2);
        
        END_INTERFACE
    } ICategorizerVtbl;

    interface ICategorizer
    {
        CONST_VTBL struct ICategorizerVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICategorizer_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define ICategorizer_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define ICategorizer_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define ICategorizer_GetDescription(This,pszDesc,cch)	\
    (This)->lpVtbl -> GetDescription(This,pszDesc,cch)

#define ICategorizer_GetCategory(This,cidl,apidl,rgCategoryIds)	\
    (This)->lpVtbl -> GetCategory(This,cidl,apidl,rgCategoryIds)

#define ICategorizer_GetCategoryInfo(This,dwCategoryId,pci)	\
    (This)->lpVtbl -> GetCategoryInfo(This,dwCategoryId,pci)

#define ICategorizer_CompareCategory(This,csfFlags,dwCategoryId1,dwCategoryId2)	\
    (This)->lpVtbl -> CompareCategory(This,csfFlags,dwCategoryId1,dwCategoryId2)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring] */ HRESULT STDMETHODCALLTYPE ICategorizer_GetDescription_Proxy( 
    ICategorizer __RPC_FAR * This,
    /* [size_is][string][out] */ LPWSTR pszDesc,
    /* [in] */ UINT cch);


void __RPC_STUB ICategorizer_GetDescription_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE ICategorizer_GetCategory_Proxy( 
    ICategorizer __RPC_FAR * This,
    /* [in] */ UINT cidl,
    /* [size_is][in] */ PCUITEMID_CHILD_ARRAY apidl,
    /* [size_is][out] */ DWORD __RPC_FAR *rgCategoryIds);


void __RPC_STUB ICategorizer_GetCategory_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE ICategorizer_GetCategoryInfo_Proxy( 
    ICategorizer __RPC_FAR * This,
    /* [in] */ DWORD dwCategoryId,
    /* [out] */ CATEGORY_INFO __RPC_FAR *pci);


void __RPC_STUB ICategorizer_GetCategoryInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE ICategorizer_CompareCategory_Proxy( 
    ICategorizer __RPC_FAR * This,
    /* [in] */ CATSORT_FLAGS csfFlags,
    /* [in] */ DWORD dwCategoryId1,
    /* [in] */ DWORD dwCategoryId2);


void __RPC_STUB ICategorizer_CompareCategory_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __ICategorizer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0340 */
/* [local] */ 

#endif // (_WIN32_IE >= 0x0500)
#if (NTDDI_VERSION >= NTDDI_WIN2K)
#include <pshpack8.h>
typedef struct tagSHDRAGIMAGE
    {
    SIZE sizeDragImage;
    POINT ptOffset;
    HBITMAP hbmpDragImage;
    COLORREF crColorKey;
    }	SHDRAGIMAGE;

typedef struct tagSHDRAGIMAGE __RPC_FAR *LPSHDRAGIMAGE;

#include <poppack.h> // Return to byte packing
#define DI_GETDRAGIMAGE     TEXT("ShellGetDragImage")


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0340_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0340_v0_0_s_ifspec;

#ifndef __IDropTargetHelper_INTERFACE_DEFINED__
#define __IDropTargetHelper_INTERFACE_DEFINED__

/* interface IDropTargetHelper */
/* [object][unique][local][uuid] */ 


EXTERN_C const IID IID_IDropTargetHelper;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4657278B-411B-11D2-839A-00C04FD918D0")
    IDropTargetHelper : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE DragEnter( 
            /* [in] */ HWND hwndTarget,
            /* [in] */ IDataObject __RPC_FAR *pDataObject,
            /* [in] */ POINT __RPC_FAR *ppt,
            /* [in] */ DWORD dwEffect) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DragLeave( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DragOver( 
            /* [in] */ POINT __RPC_FAR *ppt,
            /* [in] */ DWORD dwEffect) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Drop( 
            /* [in] */ IDataObject __RPC_FAR *pDataObject,
            /* [in] */ POINT __RPC_FAR *ppt,
            /* [in] */ DWORD dwEffect) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Show( 
            /* [in] */ BOOL fShow) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDropTargetHelperVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IDropTargetHelper __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IDropTargetHelper __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IDropTargetHelper __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DragEnter )( 
            IDropTargetHelper __RPC_FAR * This,
            /* [in] */ HWND hwndTarget,
            /* [in] */ IDataObject __RPC_FAR *pDataObject,
            /* [in] */ POINT __RPC_FAR *ppt,
            /* [in] */ DWORD dwEffect);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DragLeave )( 
            IDropTargetHelper __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DragOver )( 
            IDropTargetHelper __RPC_FAR * This,
            /* [in] */ POINT __RPC_FAR *ppt,
            /* [in] */ DWORD dwEffect);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Drop )( 
            IDropTargetHelper __RPC_FAR * This,
            /* [in] */ IDataObject __RPC_FAR *pDataObject,
            /* [in] */ POINT __RPC_FAR *ppt,
            /* [in] */ DWORD dwEffect);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Show )( 
            IDropTargetHelper __RPC_FAR * This,
            /* [in] */ BOOL fShow);
        
        END_INTERFACE
    } IDropTargetHelperVtbl;

    interface IDropTargetHelper
    {
        CONST_VTBL struct IDropTargetHelperVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDropTargetHelper_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IDropTargetHelper_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IDropTargetHelper_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IDropTargetHelper_DragEnter(This,hwndTarget,pDataObject,ppt,dwEffect)	\
    (This)->lpVtbl -> DragEnter(This,hwndTarget,pDataObject,ppt,dwEffect)

#define IDropTargetHelper_DragLeave(This)	\
    (This)->lpVtbl -> DragLeave(This)

#define IDropTargetHelper_DragOver(This,ppt,dwEffect)	\
    (This)->lpVtbl -> DragOver(This,ppt,dwEffect)

#define IDropTargetHelper_Drop(This,pDataObject,ppt,dwEffect)	\
    (This)->lpVtbl -> Drop(This,pDataObject,ppt,dwEffect)

#define IDropTargetHelper_Show(This,fShow)	\
    (This)->lpVtbl -> Show(This,fShow)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IDropTargetHelper_DragEnter_Proxy( 
    IDropTargetHelper __RPC_FAR * This,
    /* [in] */ HWND hwndTarget,
    /* [in] */ IDataObject __RPC_FAR *pDataObject,
    /* [in] */ POINT __RPC_FAR *ppt,
    /* [in] */ DWORD dwEffect);


void __RPC_STUB IDropTargetHelper_DragEnter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IDropTargetHelper_DragLeave_Proxy( 
    IDropTargetHelper __RPC_FAR * This);


void __RPC_STUB IDropTargetHelper_DragLeave_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IDropTargetHelper_DragOver_Proxy( 
    IDropTargetHelper __RPC_FAR * This,
    /* [in] */ POINT __RPC_FAR *ppt,
    /* [in] */ DWORD dwEffect);


void __RPC_STUB IDropTargetHelper_DragOver_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IDropTargetHelper_Drop_Proxy( 
    IDropTargetHelper __RPC_FAR * This,
    /* [in] */ IDataObject __RPC_FAR *pDataObject,
    /* [in] */ POINT __RPC_FAR *ppt,
    /* [in] */ DWORD dwEffect);


void __RPC_STUB IDropTargetHelper_Drop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IDropTargetHelper_Show_Proxy( 
    IDropTargetHelper __RPC_FAR * This,
    /* [in] */ BOOL fShow);


void __RPC_STUB IDropTargetHelper_Show_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IDropTargetHelper_INTERFACE_DEFINED__ */


#ifndef __IDragSourceHelper_INTERFACE_DEFINED__
#define __IDragSourceHelper_INTERFACE_DEFINED__

/* interface IDragSourceHelper */
/* [object][unique][local][uuid] */ 


EXTERN_C const IID IID_IDragSourceHelper;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DE5BF786-477A-11D2-839D-00C04FD918D0")
    IDragSourceHelper : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE InitializeFromBitmap( 
            /* [in] */ LPSHDRAGIMAGE pshdi,
            /* [in] */ IDataObject __RPC_FAR *pDataObject) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InitializeFromWindow( 
            /* [in] */ HWND hwnd,
            /* [in] */ POINT __RPC_FAR *ppt,
            /* [in] */ IDataObject __RPC_FAR *pDataObject) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDragSourceHelperVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IDragSourceHelper __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IDragSourceHelper __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IDragSourceHelper __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *InitializeFromBitmap )( 
            IDragSourceHelper __RPC_FAR * This,
            /* [in] */ LPSHDRAGIMAGE pshdi,
            /* [in] */ IDataObject __RPC_FAR *pDataObject);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *InitializeFromWindow )( 
            IDragSourceHelper __RPC_FAR * This,
            /* [in] */ HWND hwnd,
            /* [in] */ POINT __RPC_FAR *ppt,
            /* [in] */ IDataObject __RPC_FAR *pDataObject);
        
        END_INTERFACE
    } IDragSourceHelperVtbl;

    interface IDragSourceHelper
    {
        CONST_VTBL struct IDragSourceHelperVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDragSourceHelper_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IDragSourceHelper_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IDragSourceHelper_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IDragSourceHelper_InitializeFromBitmap(This,pshdi,pDataObject)	\
    (This)->lpVtbl -> InitializeFromBitmap(This,pshdi,pDataObject)

#define IDragSourceHelper_InitializeFromWindow(This,hwnd,ppt,pDataObject)	\
    (This)->lpVtbl -> InitializeFromWindow(This,hwnd,ppt,pDataObject)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IDragSourceHelper_InitializeFromBitmap_Proxy( 
    IDragSourceHelper __RPC_FAR * This,
    /* [in] */ LPSHDRAGIMAGE pshdi,
    /* [in] */ IDataObject __RPC_FAR *pDataObject);


void __RPC_STUB IDragSourceHelper_InitializeFromBitmap_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IDragSourceHelper_InitializeFromWindow_Proxy( 
    IDragSourceHelper __RPC_FAR * This,
    /* [in] */ HWND hwnd,
    /* [in] */ POINT __RPC_FAR *ppt,
    /* [in] */ IDataObject __RPC_FAR *pDataObject);


void __RPC_STUB IDragSourceHelper_InitializeFromWindow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IDragSourceHelper_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0342 */
/* [local] */ 

#if (NTDDI_VERSION >= NTDDI_LONGHORN)
typedef 
enum tagDSH_FLAGS
    {	DSH_ALLOWDROPDESCRIPTIONTEXT	= 0x1
    }	DSH_FLAGS;



extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0342_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0342_v0_0_s_ifspec;

#ifndef __IDragSourceHelper2_INTERFACE_DEFINED__
#define __IDragSourceHelper2_INTERFACE_DEFINED__

/* interface IDragSourceHelper2 */
/* [object][unique][local][uuid] */ 


EXTERN_C const IID IID_IDragSourceHelper2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("83E07D0D-0C5F-4163-BF1A-60B274051E40")
    IDragSourceHelper2 : public IDragSourceHelper
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetFlags( 
            /* [in] */ DWORD dwFlags) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDragSourceHelper2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IDragSourceHelper2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IDragSourceHelper2 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IDragSourceHelper2 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *InitializeFromBitmap )( 
            IDragSourceHelper2 __RPC_FAR * This,
            /* [in] */ LPSHDRAGIMAGE pshdi,
            /* [in] */ IDataObject __RPC_FAR *pDataObject);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *InitializeFromWindow )( 
            IDragSourceHelper2 __RPC_FAR * This,
            /* [in] */ HWND hwnd,
            /* [in] */ POINT __RPC_FAR *ppt,
            /* [in] */ IDataObject __RPC_FAR *pDataObject);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFlags )( 
            IDragSourceHelper2 __RPC_FAR * This,
            /* [in] */ DWORD dwFlags);
        
        END_INTERFACE
    } IDragSourceHelper2Vtbl;

    interface IDragSourceHelper2
    {
        CONST_VTBL struct IDragSourceHelper2Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDragSourceHelper2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IDragSourceHelper2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IDragSourceHelper2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IDragSourceHelper2_InitializeFromBitmap(This,pshdi,pDataObject)	\
    (This)->lpVtbl -> InitializeFromBitmap(This,pshdi,pDataObject)

#define IDragSourceHelper2_InitializeFromWindow(This,hwnd,ppt,pDataObject)	\
    (This)->lpVtbl -> InitializeFromWindow(This,hwnd,ppt,pDataObject)


#define IDragSourceHelper2_SetFlags(This,dwFlags)	\
    (This)->lpVtbl -> SetFlags(This,dwFlags)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IDragSourceHelper2_SetFlags_Proxy( 
    IDragSourceHelper2 __RPC_FAR * This,
    /* [in] */ DWORD dwFlags);


void __RPC_STUB IDragSourceHelper2_SetFlags_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IDragSourceHelper2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0343 */
/* [local] */ 

#endif  // NTDDI_LONGHORN
#endif  // NTDDI_WIN2K
#ifdef UNICODE
#define IShellLink      IShellLinkW
#else
#define IShellLink      IShellLinkA
#endif
typedef 
enum tagSLR_FLAGS
    {	SLR_NO_UI	= 0x1,
	SLR_ANY_MATCH	= 0x2,
	SLR_UPDATE	= 0x4,
	SLR_NOUPDATE	= 0x8,
	SLR_NOSEARCH	= 0x10,
	SLR_NOTRACK	= 0x20,
	SLR_NOLINKINFO	= 0x40,
	SLR_INVOKE_MSI	= 0x80,
	SLR_NO_UI_WITH_MSG_PUMP	= 0x101
    }	SLR_FLAGS;

typedef 
enum tagSLGP_FLAGS
    {	SLGP_SHORTPATH	= 0x1,
	SLGP_UNCPRIORITY	= 0x2,
	SLGP_RAWPATH	= 0x4,
	SLGP_RELATIVEPRIORITY	= 0x8
    }	SLGP_FLAGS;



extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0343_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0343_v0_0_s_ifspec;

#ifndef __IShellLinkA_INTERFACE_DEFINED__
#define __IShellLinkA_INTERFACE_DEFINED__

/* interface IShellLinkA */
/* [unique][object][uuid] */ 


EXTERN_C const IID IID_IShellLinkA;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000214EE-0000-0000-C000-000000000046")
    IShellLinkA : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetPath( 
            /* [size_is][string][out] */ LPSTR pszFile,
            /* [in] */ int cch,
            /* [unique][out][in] */ WIN32_FIND_DATAA __RPC_FAR *pfd,
            /* [in] */ DWORD fFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetIDList( 
            /* [out] */ PIDLIST_ABSOLUTE __RPC_FAR *ppidl) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetIDList( 
            /* [in] */ PCIDLIST_ABSOLUTE pidl) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDescription( 
            /* [size_is][string][out] */ LPSTR pszName,
            /* [in] */ int cch) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetDescription( 
            /* [string][in] */ LPCSTR pszName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetWorkingDirectory( 
            /* [size_is][string][out] */ LPSTR pszDir,
            /* [in] */ int cch) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetWorkingDirectory( 
            /* [string][in] */ LPCSTR pszDir) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetArguments( 
            /* [size_is][string][out] */ LPSTR pszArgs,
            /* [in] */ int cch) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetArguments( 
            /* [string][in] */ LPCSTR pszArgs) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetHotkey( 
            /* [out] */ WORD __RPC_FAR *pwHotkey) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetHotkey( 
            /* [in] */ WORD wHotkey) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetShowCmd( 
            /* [out] */ int __RPC_FAR *piShowCmd) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetShowCmd( 
            /* [in] */ int iShowCmd) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetIconLocation( 
            /* [size_is][string][out] */ LPSTR pszIconPath,
            /* [in] */ int cch,
            /* [out] */ int __RPC_FAR *piIcon) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetIconLocation( 
            /* [string][in] */ LPCSTR pszIconPath,
            /* [in] */ int iIcon) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetRelativePath( 
            /* [string][in] */ LPCSTR pszPathRel,
            /* [in] */ DWORD dwReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Resolve( 
            /* [unique][in] */ HWND hwnd,
            /* [in] */ DWORD fFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetPath( 
            /* [string][in] */ LPCSTR pszFile) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IShellLinkAVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IShellLinkA __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IShellLinkA __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IShellLinkA __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetPath )( 
            IShellLinkA __RPC_FAR * This,
            /* [size_is][string][out] */ LPSTR pszFile,
            /* [in] */ int cch,
            /* [unique][out][in] */ WIN32_FIND_DATAA __RPC_FAR *pfd,
            /* [in] */ DWORD fFlags);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDList )( 
            IShellLinkA __RPC_FAR * This,
            /* [out] */ PIDLIST_ABSOLUTE __RPC_FAR *ppidl);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetIDList )( 
            IShellLinkA __RPC_FAR * This,
            /* [in] */ PCIDLIST_ABSOLUTE pidl);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetDescription )( 
            IShellLinkA __RPC_FAR * This,
            /* [size_is][string][out] */ LPSTR pszName,
            /* [in] */ int cch);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetDescription )( 
            IShellLinkA __RPC_FAR * This,
            /* [string][in] */ LPCSTR pszName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetWorkingDirectory )( 
            IShellLinkA __RPC_FAR * This,
            /* [size_is][string][out] */ LPSTR pszDir,
            /* [in] */ int cch);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetWorkingDirectory )( 
            IShellLinkA __RPC_FAR * This,
            /* [string][in] */ LPCSTR pszDir);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetArguments )( 
            IShellLinkA __RPC_FAR * This,
            /* [size_is][string][out] */ LPSTR pszArgs,
            /* [in] */ int cch);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetArguments )( 
            IShellLinkA __RPC_FAR * This,
            /* [string][in] */ LPCSTR pszArgs);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetHotkey )( 
            IShellLinkA __RPC_FAR * This,
            /* [out] */ WORD __RPC_FAR *pwHotkey);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetHotkey )( 
            IShellLinkA __RPC_FAR * This,
            /* [in] */ WORD wHotkey);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetShowCmd )( 
            IShellLinkA __RPC_FAR * This,
            /* [out] */ int __RPC_FAR *piShowCmd);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetShowCmd )( 
            IShellLinkA __RPC_FAR * This,
            /* [in] */ int iShowCmd);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIconLocation )( 
            IShellLinkA __RPC_FAR * This,
            /* [size_is][string][out] */ LPSTR pszIconPath,
            /* [in] */ int cch,
            /* [out] */ int __RPC_FAR *piIcon);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetIconLocation )( 
            IShellLinkA __RPC_FAR * This,
            /* [string][in] */ LPCSTR pszIconPath,
            /* [in] */ int iIcon);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetRelativePath )( 
            IShellLinkA __RPC_FAR * This,
            /* [string][in] */ LPCSTR pszPathRel,
            /* [in] */ DWORD dwReserved);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Resolve )( 
            IShellLinkA __RPC_FAR * This,
            /* [unique][in] */ HWND hwnd,
            /* [in] */ DWORD fFlags);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetPath )( 
            IShellLinkA __RPC_FAR * This,
            /* [string][in] */ LPCSTR pszFile);
        
        END_INTERFACE
    } IShellLinkAVtbl;

    interface IShellLinkA
    {
        CONST_VTBL struct IShellLinkAVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IShellLinkA_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IShellLinkA_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IShellLinkA_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IShellLinkA_GetPath(This,pszFile,cch,pfd,fFlags)	\
    (This)->lpVtbl -> GetPath(This,pszFile,cch,pfd,fFlags)

#define IShellLinkA_GetIDList(This,ppidl)	\
    (This)->lpVtbl -> GetIDList(This,ppidl)

#define IShellLinkA_SetIDList(This,pidl)	\
    (This)->lpVtbl -> SetIDList(This,pidl)

#define IShellLinkA_GetDescription(This,pszName,cch)	\
    (This)->lpVtbl -> GetDescription(This,pszName,cch)

#define IShellLinkA_SetDescription(This,pszName)	\
    (This)->lpVtbl -> SetDescription(This,pszName)

#define IShellLinkA_GetWorkingDirectory(This,pszDir,cch)	\
    (This)->lpVtbl -> GetWorkingDirectory(This,pszDir,cch)

#define IShellLinkA_SetWorkingDirectory(This,pszDir)	\
    (This)->lpVtbl -> SetWorkingDirectory(This,pszDir)

#define IShellLinkA_GetArguments(This,pszArgs,cch)	\
    (This)->lpVtbl -> GetArguments(This,pszArgs,cch)

#define IShellLinkA_SetArguments(This,pszArgs)	\
    (This)->lpVtbl -> SetArguments(This,pszArgs)

#define IShellLinkA_GetHotkey(This,pwHotkey)	\
    (This)->lpVtbl -> GetHotkey(This,pwHotkey)

#define IShellLinkA_SetHotkey(This,wHotkey)	\
    (This)->lpVtbl -> SetHotkey(This,wHotkey)

#define IShellLinkA_GetShowCmd(This,piShowCmd)	\
    (This)->lpVtbl -> GetShowCmd(This,piShowCmd)

#define IShellLinkA_SetShowCmd(This,iShowCmd)	\
    (This)->lpVtbl -> SetShowCmd(This,iShowCmd)

#define IShellLinkA_GetIconLocation(This,pszIconPath,cch,piIcon)	\
    (This)->lpVtbl -> GetIconLocation(This,pszIconPath,cch,piIcon)

#define IShellLinkA_SetIconLocation(This,pszIconPath,iIcon)	\
    (This)->lpVtbl -> SetIconLocation(This,pszIconPath,iIcon)

#define IShellLinkA_SetRelativePath(This,pszPathRel,dwReserved)	\
    (This)->lpVtbl -> SetRelativePath(This,pszPathRel,dwReserved)

#define IShellLinkA_Resolve(This,hwnd,fFlags)	\
    (This)->lpVtbl -> Resolve(This,hwnd,fFlags)

#define IShellLinkA_SetPath(This,pszFile)	\
    (This)->lpVtbl -> SetPath(This,pszFile)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IShellLinkA_GetPath_Proxy( 
    IShellLinkA __RPC_FAR * This,
    /* [size_is][string][out] */ LPSTR pszFile,
    /* [in] */ int cch,
    /* [unique][out][in] */ WIN32_FIND_DATAA __RPC_FAR *pfd,
    /* [in] */ DWORD fFlags);


void __RPC_STUB IShellLinkA_GetPath_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkA_GetIDList_Proxy( 
    IShellLinkA __RPC_FAR * This,
    /* [out] */ PIDLIST_ABSOLUTE __RPC_FAR *ppidl);


void __RPC_STUB IShellLinkA_GetIDList_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkA_SetIDList_Proxy( 
    IShellLinkA __RPC_FAR * This,
    /* [in] */ PCIDLIST_ABSOLUTE pidl);


void __RPC_STUB IShellLinkA_SetIDList_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkA_GetDescription_Proxy( 
    IShellLinkA __RPC_FAR * This,
    /* [size_is][string][out] */ LPSTR pszName,
    /* [in] */ int cch);


void __RPC_STUB IShellLinkA_GetDescription_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkA_SetDescription_Proxy( 
    IShellLinkA __RPC_FAR * This,
    /* [string][in] */ LPCSTR pszName);


void __RPC_STUB IShellLinkA_SetDescription_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkA_GetWorkingDirectory_Proxy( 
    IShellLinkA __RPC_FAR * This,
    /* [size_is][string][out] */ LPSTR pszDir,
    /* [in] */ int cch);


void __RPC_STUB IShellLinkA_GetWorkingDirectory_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkA_SetWorkingDirectory_Proxy( 
    IShellLinkA __RPC_FAR * This,
    /* [string][in] */ LPCSTR pszDir);


void __RPC_STUB IShellLinkA_SetWorkingDirectory_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkA_GetArguments_Proxy( 
    IShellLinkA __RPC_FAR * This,
    /* [size_is][string][out] */ LPSTR pszArgs,
    /* [in] */ int cch);


void __RPC_STUB IShellLinkA_GetArguments_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkA_SetArguments_Proxy( 
    IShellLinkA __RPC_FAR * This,
    /* [string][in] */ LPCSTR pszArgs);


void __RPC_STUB IShellLinkA_SetArguments_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkA_GetHotkey_Proxy( 
    IShellLinkA __RPC_FAR * This,
    /* [out] */ WORD __RPC_FAR *pwHotkey);


void __RPC_STUB IShellLinkA_GetHotkey_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkA_SetHotkey_Proxy( 
    IShellLinkA __RPC_FAR * This,
    /* [in] */ WORD wHotkey);


void __RPC_STUB IShellLinkA_SetHotkey_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkA_GetShowCmd_Proxy( 
    IShellLinkA __RPC_FAR * This,
    /* [out] */ int __RPC_FAR *piShowCmd);


void __RPC_STUB IShellLinkA_GetShowCmd_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkA_SetShowCmd_Proxy( 
    IShellLinkA __RPC_FAR * This,
    /* [in] */ int iShowCmd);


void __RPC_STUB IShellLinkA_SetShowCmd_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkA_GetIconLocation_Proxy( 
    IShellLinkA __RPC_FAR * This,
    /* [size_is][string][out] */ LPSTR pszIconPath,
    /* [in] */ int cch,
    /* [out] */ int __RPC_FAR *piIcon);


void __RPC_STUB IShellLinkA_GetIconLocation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkA_SetIconLocation_Proxy( 
    IShellLinkA __RPC_FAR * This,
    /* [string][in] */ LPCSTR pszIconPath,
    /* [in] */ int iIcon);


void __RPC_STUB IShellLinkA_SetIconLocation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkA_SetRelativePath_Proxy( 
    IShellLinkA __RPC_FAR * This,
    /* [string][in] */ LPCSTR pszPathRel,
    /* [in] */ DWORD dwReserved);


void __RPC_STUB IShellLinkA_SetRelativePath_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkA_Resolve_Proxy( 
    IShellLinkA __RPC_FAR * This,
    /* [unique][in] */ HWND hwnd,
    /* [in] */ DWORD fFlags);


void __RPC_STUB IShellLinkA_Resolve_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkA_SetPath_Proxy( 
    IShellLinkA __RPC_FAR * This,
    /* [string][in] */ LPCSTR pszFile);


void __RPC_STUB IShellLinkA_SetPath_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IShellLinkA_INTERFACE_DEFINED__ */


#ifndef __IShellLinkW_INTERFACE_DEFINED__
#define __IShellLinkW_INTERFACE_DEFINED__

/* interface IShellLinkW */
/* [unique][object][uuid] */ 


EXTERN_C const IID IID_IShellLinkW;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000214F9-0000-0000-C000-000000000046")
    IShellLinkW : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetPath( 
            /* [size_is][string][out] */ LPWSTR pszFile,
            /* [in] */ int cch,
            /* [unique][out][in] */ WIN32_FIND_DATAW __RPC_FAR *pfd,
            /* [in] */ DWORD fFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetIDList( 
            /* [out] */ PIDLIST_ABSOLUTE __RPC_FAR *ppidl) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetIDList( 
            /* [unique][in] */ PCIDLIST_ABSOLUTE pidl) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDescription( 
            /* [size_is][string][out] */ LPWSTR pszName,
            int cch) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetDescription( 
            /* [string][in] */ LPCWSTR pszName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetWorkingDirectory( 
            /* [size_is][string][out] */ LPWSTR pszDir,
            int cch) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetWorkingDirectory( 
            /* [string][in] */ LPCWSTR pszDir) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetArguments( 
            /* [size_is][string][out] */ LPWSTR pszArgs,
            /* [in] */ int cch) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetArguments( 
            /* [string][in] */ LPCWSTR pszArgs) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetHotkey( 
            /* [out] */ WORD __RPC_FAR *pwHotkey) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetHotkey( 
            /* [in] */ WORD wHotkey) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetShowCmd( 
            /* [out] */ int __RPC_FAR *piShowCmd) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetShowCmd( 
            /* [in] */ int iShowCmd) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetIconLocation( 
            /* [size_is][string][out] */ LPWSTR pszIconPath,
            /* [in] */ int cch,
            /* [out] */ int __RPC_FAR *piIcon) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetIconLocation( 
            /* [string][in] */ LPCWSTR pszIconPath,
            /* [in] */ int iIcon) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetRelativePath( 
            /* [string][in] */ LPCWSTR pszPathRel,
            /* [in] */ DWORD dwReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Resolve( 
            /* [unique][in] */ HWND hwnd,
            /* [in] */ DWORD fFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetPath( 
            /* [string][in] */ LPCWSTR pszFile) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IShellLinkWVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IShellLinkW __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IShellLinkW __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IShellLinkW __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetPath )( 
            IShellLinkW __RPC_FAR * This,
            /* [size_is][string][out] */ LPWSTR pszFile,
            /* [in] */ int cch,
            /* [unique][out][in] */ WIN32_FIND_DATAW __RPC_FAR *pfd,
            /* [in] */ DWORD fFlags);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDList )( 
            IShellLinkW __RPC_FAR * This,
            /* [out] */ PIDLIST_ABSOLUTE __RPC_FAR *ppidl);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetIDList )( 
            IShellLinkW __RPC_FAR * This,
            /* [unique][in] */ PCIDLIST_ABSOLUTE pidl);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetDescription )( 
            IShellLinkW __RPC_FAR * This,
            /* [size_is][string][out] */ LPWSTR pszName,
            int cch);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetDescription )( 
            IShellLinkW __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetWorkingDirectory )( 
            IShellLinkW __RPC_FAR * This,
            /* [size_is][string][out] */ LPWSTR pszDir,
            int cch);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetWorkingDirectory )( 
            IShellLinkW __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszDir);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetArguments )( 
            IShellLinkW __RPC_FAR * This,
            /* [size_is][string][out] */ LPWSTR pszArgs,
            /* [in] */ int cch);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetArguments )( 
            IShellLinkW __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszArgs);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetHotkey )( 
            IShellLinkW __RPC_FAR * This,
            /* [out] */ WORD __RPC_FAR *pwHotkey);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetHotkey )( 
            IShellLinkW __RPC_FAR * This,
            /* [in] */ WORD wHotkey);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetShowCmd )( 
            IShellLinkW __RPC_FAR * This,
            /* [out] */ int __RPC_FAR *piShowCmd);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetShowCmd )( 
            IShellLinkW __RPC_FAR * This,
            /* [in] */ int iShowCmd);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIconLocation )( 
            IShellLinkW __RPC_FAR * This,
            /* [size_is][string][out] */ LPWSTR pszIconPath,
            /* [in] */ int cch,
            /* [out] */ int __RPC_FAR *piIcon);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetIconLocation )( 
            IShellLinkW __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszIconPath,
            /* [in] */ int iIcon);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetRelativePath )( 
            IShellLinkW __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszPathRel,
            /* [in] */ DWORD dwReserved);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Resolve )( 
            IShellLinkW __RPC_FAR * This,
            /* [unique][in] */ HWND hwnd,
            /* [in] */ DWORD fFlags);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetPath )( 
            IShellLinkW __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszFile);
        
        END_INTERFACE
    } IShellLinkWVtbl;

    interface IShellLinkW
    {
        CONST_VTBL struct IShellLinkWVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IShellLinkW_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IShellLinkW_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IShellLinkW_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IShellLinkW_GetPath(This,pszFile,cch,pfd,fFlags)	\
    (This)->lpVtbl -> GetPath(This,pszFile,cch,pfd,fFlags)

#define IShellLinkW_GetIDList(This,ppidl)	\
    (This)->lpVtbl -> GetIDList(This,ppidl)

#define IShellLinkW_SetIDList(This,pidl)	\
    (This)->lpVtbl -> SetIDList(This,pidl)

#define IShellLinkW_GetDescription(This,pszName,cch)	\
    (This)->lpVtbl -> GetDescription(This,pszName,cch)

#define IShellLinkW_SetDescription(This,pszName)	\
    (This)->lpVtbl -> SetDescription(This,pszName)

#define IShellLinkW_GetWorkingDirectory(This,pszDir,cch)	\
    (This)->lpVtbl -> GetWorkingDirectory(This,pszDir,cch)

#define IShellLinkW_SetWorkingDirectory(This,pszDir)	\
    (This)->lpVtbl -> SetWorkingDirectory(This,pszDir)

#define IShellLinkW_GetArguments(This,pszArgs,cch)	\
    (This)->lpVtbl -> GetArguments(This,pszArgs,cch)

#define IShellLinkW_SetArguments(This,pszArgs)	\
    (This)->lpVtbl -> SetArguments(This,pszArgs)

#define IShellLinkW_GetHotkey(This,pwHotkey)	\
    (This)->lpVtbl -> GetHotkey(This,pwHotkey)

#define IShellLinkW_SetHotkey(This,wHotkey)	\
    (This)->lpVtbl -> SetHotkey(This,wHotkey)

#define IShellLinkW_GetShowCmd(This,piShowCmd)	\
    (This)->lpVtbl -> GetShowCmd(This,piShowCmd)

#define IShellLinkW_SetShowCmd(This,iShowCmd)	\
    (This)->lpVtbl -> SetShowCmd(This,iShowCmd)

#define IShellLinkW_GetIconLocation(This,pszIconPath,cch,piIcon)	\
    (This)->lpVtbl -> GetIconLocation(This,pszIconPath,cch,piIcon)

#define IShellLinkW_SetIconLocation(This,pszIconPath,iIcon)	\
    (This)->lpVtbl -> SetIconLocation(This,pszIconPath,iIcon)

#define IShellLinkW_SetRelativePath(This,pszPathRel,dwReserved)	\
    (This)->lpVtbl -> SetRelativePath(This,pszPathRel,dwReserved)

#define IShellLinkW_Resolve(This,hwnd,fFlags)	\
    (This)->lpVtbl -> Resolve(This,hwnd,fFlags)

#define IShellLinkW_SetPath(This,pszFile)	\
    (This)->lpVtbl -> SetPath(This,pszFile)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IShellLinkW_GetPath_Proxy( 
    IShellLinkW __RPC_FAR * This,
    /* [size_is][string][out] */ LPWSTR pszFile,
    /* [in] */ int cch,
    /* [unique][out][in] */ WIN32_FIND_DATAW __RPC_FAR *pfd,
    /* [in] */ DWORD fFlags);


void __RPC_STUB IShellLinkW_GetPath_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkW_GetIDList_Proxy( 
    IShellLinkW __RPC_FAR * This,
    /* [out] */ PIDLIST_ABSOLUTE __RPC_FAR *ppidl);


void __RPC_STUB IShellLinkW_GetIDList_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkW_SetIDList_Proxy( 
    IShellLinkW __RPC_FAR * This,
    /* [unique][in] */ PCIDLIST_ABSOLUTE pidl);


void __RPC_STUB IShellLinkW_SetIDList_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkW_GetDescription_Proxy( 
    IShellLinkW __RPC_FAR * This,
    /* [size_is][string][out] */ LPWSTR pszName,
    int cch);


void __RPC_STUB IShellLinkW_GetDescription_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkW_SetDescription_Proxy( 
    IShellLinkW __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszName);


void __RPC_STUB IShellLinkW_SetDescription_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkW_GetWorkingDirectory_Proxy( 
    IShellLinkW __RPC_FAR * This,
    /* [size_is][string][out] */ LPWSTR pszDir,
    int cch);


void __RPC_STUB IShellLinkW_GetWorkingDirectory_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkW_SetWorkingDirectory_Proxy( 
    IShellLinkW __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszDir);


void __RPC_STUB IShellLinkW_SetWorkingDirectory_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkW_GetArguments_Proxy( 
    IShellLinkW __RPC_FAR * This,
    /* [size_is][string][out] */ LPWSTR pszArgs,
    /* [in] */ int cch);


void __RPC_STUB IShellLinkW_GetArguments_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkW_SetArguments_Proxy( 
    IShellLinkW __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszArgs);


void __RPC_STUB IShellLinkW_SetArguments_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkW_GetHotkey_Proxy( 
    IShellLinkW __RPC_FAR * This,
    /* [out] */ WORD __RPC_FAR *pwHotkey);


void __RPC_STUB IShellLinkW_GetHotkey_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkW_SetHotkey_Proxy( 
    IShellLinkW __RPC_FAR * This,
    /* [in] */ WORD wHotkey);


void __RPC_STUB IShellLinkW_SetHotkey_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkW_GetShowCmd_Proxy( 
    IShellLinkW __RPC_FAR * This,
    /* [out] */ int __RPC_FAR *piShowCmd);


void __RPC_STUB IShellLinkW_GetShowCmd_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkW_SetShowCmd_Proxy( 
    IShellLinkW __RPC_FAR * This,
    /* [in] */ int iShowCmd);


void __RPC_STUB IShellLinkW_SetShowCmd_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkW_GetIconLocation_Proxy( 
    IShellLinkW __RPC_FAR * This,
    /* [size_is][string][out] */ LPWSTR pszIconPath,
    /* [in] */ int cch,
    /* [out] */ int __RPC_FAR *piIcon);


void __RPC_STUB IShellLinkW_GetIconLocation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkW_SetIconLocation_Proxy( 
    IShellLinkW __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszIconPath,
    /* [in] */ int iIcon);


void __RPC_STUB IShellLinkW_SetIconLocation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkW_SetRelativePath_Proxy( 
    IShellLinkW __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszPathRel,
    /* [in] */ DWORD dwReserved);


void __RPC_STUB IShellLinkW_SetRelativePath_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkW_Resolve_Proxy( 
    IShellLinkW __RPC_FAR * This,
    /* [unique][in] */ HWND hwnd,
    /* [in] */ DWORD fFlags);


void __RPC_STUB IShellLinkW_Resolve_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkW_SetPath_Proxy( 
    IShellLinkW __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszFile);


void __RPC_STUB IShellLinkW_SetPath_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IShellLinkW_INTERFACE_DEFINED__ */


#ifndef __IShellLinkDataList_INTERFACE_DEFINED__
#define __IShellLinkDataList_INTERFACE_DEFINED__

/* interface IShellLinkDataList */
/* [local][unique][object][uuid] */ 


EXTERN_C const IID IID_IShellLinkDataList;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("45e2b4ae-b1c3-11d0-b92f-00a0c90312e1")
    IShellLinkDataList : public IUnknown
    {
    public:
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE AddDataBlock( 
            /* [in] */ void __RPC_FAR *pDataBlock) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE CopyDataBlock( 
            /* [in] */ DWORD dwSig,
            /* [out] */ void __RPC_FAR *__RPC_FAR *ppDataBlock) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveDataBlock( 
            /* [in] */ DWORD dwSig) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFlags( 
            /* [out] */ DWORD __RPC_FAR *pdwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetFlags( 
            /* [in] */ DWORD dwFlags) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IShellLinkDataListVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IShellLinkDataList __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IShellLinkDataList __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IShellLinkDataList __RPC_FAR * This);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AddDataBlock )( 
            IShellLinkDataList __RPC_FAR * This,
            /* [in] */ void __RPC_FAR *pDataBlock);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CopyDataBlock )( 
            IShellLinkDataList __RPC_FAR * This,
            /* [in] */ DWORD dwSig,
            /* [out] */ void __RPC_FAR *__RPC_FAR *ppDataBlock);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RemoveDataBlock )( 
            IShellLinkDataList __RPC_FAR * This,
            /* [in] */ DWORD dwSig);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFlags )( 
            IShellLinkDataList __RPC_FAR * This,
            /* [out] */ DWORD __RPC_FAR *pdwFlags);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFlags )( 
            IShellLinkDataList __RPC_FAR * This,
            /* [in] */ DWORD dwFlags);
        
        END_INTERFACE
    } IShellLinkDataListVtbl;

    interface IShellLinkDataList
    {
        CONST_VTBL struct IShellLinkDataListVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IShellLinkDataList_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IShellLinkDataList_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IShellLinkDataList_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IShellLinkDataList_AddDataBlock(This,pDataBlock)	\
    (This)->lpVtbl -> AddDataBlock(This,pDataBlock)

#define IShellLinkDataList_CopyDataBlock(This,dwSig,ppDataBlock)	\
    (This)->lpVtbl -> CopyDataBlock(This,dwSig,ppDataBlock)

#define IShellLinkDataList_RemoveDataBlock(This,dwSig)	\
    (This)->lpVtbl -> RemoveDataBlock(This,dwSig)

#define IShellLinkDataList_GetFlags(This,pdwFlags)	\
    (This)->lpVtbl -> GetFlags(This,pdwFlags)

#define IShellLinkDataList_SetFlags(This,dwFlags)	\
    (This)->lpVtbl -> SetFlags(This,dwFlags)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [local] */ HRESULT STDMETHODCALLTYPE IShellLinkDataList_AddDataBlock_Proxy( 
    IShellLinkDataList __RPC_FAR * This,
    /* [in] */ void __RPC_FAR *pDataBlock);


void __RPC_STUB IShellLinkDataList_AddDataBlock_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [local] */ HRESULT STDMETHODCALLTYPE IShellLinkDataList_CopyDataBlock_Proxy( 
    IShellLinkDataList __RPC_FAR * This,
    /* [in] */ DWORD dwSig,
    /* [out] */ void __RPC_FAR *__RPC_FAR *ppDataBlock);


void __RPC_STUB IShellLinkDataList_CopyDataBlock_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkDataList_RemoveDataBlock_Proxy( 
    IShellLinkDataList __RPC_FAR * This,
    /* [in] */ DWORD dwSig);


void __RPC_STUB IShellLinkDataList_RemoveDataBlock_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkDataList_GetFlags_Proxy( 
    IShellLinkDataList __RPC_FAR * This,
    /* [out] */ DWORD __RPC_FAR *pdwFlags);


void __RPC_STUB IShellLinkDataList_GetFlags_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkDataList_SetFlags_Proxy( 
    IShellLinkDataList __RPC_FAR * This,
    /* [in] */ DWORD dwFlags);


void __RPC_STUB IShellLinkDataList_SetFlags_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IShellLinkDataList_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0346 */
/* [local] */ 

#if (NTDDI_VERSION >= NTDDI_WIN2K)


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0346_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0346_v0_0_s_ifspec;

#ifndef __IResolveShellLink_INTERFACE_DEFINED__
#define __IResolveShellLink_INTERFACE_DEFINED__

/* interface IResolveShellLink */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IResolveShellLink;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5cd52983-9449-11d2-963a-00c04f79adf0")
    IResolveShellLink : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE ResolveShellLink( 
            /* [in] */ IUnknown __RPC_FAR *punkLink,
            /* [in] */ HWND hwnd,
            /* [in] */ DWORD fFlags) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IResolveShellLinkVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IResolveShellLink __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IResolveShellLink __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IResolveShellLink __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ResolveShellLink )( 
            IResolveShellLink __RPC_FAR * This,
            /* [in] */ IUnknown __RPC_FAR *punkLink,
            /* [in] */ HWND hwnd,
            /* [in] */ DWORD fFlags);
        
        END_INTERFACE
    } IResolveShellLinkVtbl;

    interface IResolveShellLink
    {
        CONST_VTBL struct IResolveShellLinkVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IResolveShellLink_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IResolveShellLink_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IResolveShellLink_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IResolveShellLink_ResolveShellLink(This,punkLink,hwnd,fFlags)	\
    (This)->lpVtbl -> ResolveShellLink(This,punkLink,hwnd,fFlags)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IResolveShellLink_ResolveShellLink_Proxy( 
    IResolveShellLink __RPC_FAR * This,
    /* [in] */ IUnknown __RPC_FAR *punkLink,
    /* [in] */ HWND hwnd,
    /* [in] */ DWORD fFlags);


void __RPC_STUB IResolveShellLink_ResolveShellLink_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IResolveShellLink_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0347 */
/* [local] */ 

#endif  // NTDDI_WIN2K


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0347_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0347_v0_0_s_ifspec;

#ifndef __IActionProgressDialog_INTERFACE_DEFINED__
#define __IActionProgressDialog_INTERFACE_DEFINED__

/* interface IActionProgressDialog */
/* [unique][uuid][object] */ 

/* [v1_enum] */ 
enum tagSPINITF
    {	SPINITF_NORMAL	= 0,
	SPINITF_MODAL	= 0x1,
	SPINITF_NOMINIMIZE	= 0x8
    };
typedef DWORD SPINITF;


EXTERN_C const IID IID_IActionProgressDialog;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("49ff1172-eadc-446d-9285-156453a6431c")
    IActionProgressDialog : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Initialize( 
            /* [in] */ SPINITF flags,
            /* [string][unique][in] */ LPCWSTR pszTitle,
            /* [string][unique][in] */ LPCWSTR pszCancel) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Stop( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IActionProgressDialogVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IActionProgressDialog __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IActionProgressDialog __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IActionProgressDialog __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Initialize )( 
            IActionProgressDialog __RPC_FAR * This,
            /* [in] */ SPINITF flags,
            /* [string][unique][in] */ LPCWSTR pszTitle,
            /* [string][unique][in] */ LPCWSTR pszCancel);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Stop )( 
            IActionProgressDialog __RPC_FAR * This);
        
        END_INTERFACE
    } IActionProgressDialogVtbl;

    interface IActionProgressDialog
    {
        CONST_VTBL struct IActionProgressDialogVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IActionProgressDialog_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IActionProgressDialog_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IActionProgressDialog_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IActionProgressDialog_Initialize(This,flags,pszTitle,pszCancel)	\
    (This)->lpVtbl -> Initialize(This,flags,pszTitle,pszCancel)

#define IActionProgressDialog_Stop(This)	\
    (This)->lpVtbl -> Stop(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IActionProgressDialog_Initialize_Proxy( 
    IActionProgressDialog __RPC_FAR * This,
    /* [in] */ SPINITF flags,
    /* [string][unique][in] */ LPCWSTR pszTitle,
    /* [string][unique][in] */ LPCWSTR pszCancel);


void __RPC_STUB IActionProgressDialog_Initialize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActionProgressDialog_Stop_Proxy( 
    IActionProgressDialog __RPC_FAR * This);


void __RPC_STUB IActionProgressDialog_Stop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IActionProgressDialog_INTERFACE_DEFINED__ */


#ifndef __IHWEventHandler_INTERFACE_DEFINED__
#define __IHWEventHandler_INTERFACE_DEFINED__

/* interface IHWEventHandler */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IHWEventHandler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C1FB73D0-EC3A-4ba2-B512-8CDB9187B6D1")
    IHWEventHandler : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Initialize( 
            /* [string][in] */ LPCWSTR pszParams) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE HandleEvent( 
            /* [string][in] */ LPCWSTR pszDeviceID,
            /* [string][in] */ LPCWSTR pszAltDeviceID,
            /* [string][in] */ LPCWSTR pszEventType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE HandleEventWithContent( 
            /* [string][in] */ LPCWSTR pszDeviceID,
            /* [string][in] */ LPCWSTR pszAltDeviceID,
            /* [string][in] */ LPCWSTR pszEventType,
            /* [string][in] */ LPCWSTR pszContentTypeHandler,
            /* [in] */ IDataObject __RPC_FAR *pdataobject) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHWEventHandlerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IHWEventHandler __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IHWEventHandler __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IHWEventHandler __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Initialize )( 
            IHWEventHandler __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszParams);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *HandleEvent )( 
            IHWEventHandler __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszDeviceID,
            /* [string][in] */ LPCWSTR pszAltDeviceID,
            /* [string][in] */ LPCWSTR pszEventType);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *HandleEventWithContent )( 
            IHWEventHandler __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszDeviceID,
            /* [string][in] */ LPCWSTR pszAltDeviceID,
            /* [string][in] */ LPCWSTR pszEventType,
            /* [string][in] */ LPCWSTR pszContentTypeHandler,
            /* [in] */ IDataObject __RPC_FAR *pdataobject);
        
        END_INTERFACE
    } IHWEventHandlerVtbl;

    interface IHWEventHandler
    {
        CONST_VTBL struct IHWEventHandlerVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHWEventHandler_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHWEventHandler_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHWEventHandler_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHWEventHandler_Initialize(This,pszParams)	\
    (This)->lpVtbl -> Initialize(This,pszParams)

#define IHWEventHandler_HandleEvent(This,pszDeviceID,pszAltDeviceID,pszEventType)	\
    (This)->lpVtbl -> HandleEvent(This,pszDeviceID,pszAltDeviceID,pszEventType)

#define IHWEventHandler_HandleEventWithContent(This,pszDeviceID,pszAltDeviceID,pszEventType,pszContentTypeHandler,pdataobject)	\
    (This)->lpVtbl -> HandleEventWithContent(This,pszDeviceID,pszAltDeviceID,pszEventType,pszContentTypeHandler,pdataobject)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IHWEventHandler_Initialize_Proxy( 
    IHWEventHandler __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszParams);


void __RPC_STUB IHWEventHandler_Initialize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IHWEventHandler_HandleEvent_Proxy( 
    IHWEventHandler __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszDeviceID,
    /* [string][in] */ LPCWSTR pszAltDeviceID,
    /* [string][in] */ LPCWSTR pszEventType);


void __RPC_STUB IHWEventHandler_HandleEvent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IHWEventHandler_HandleEventWithContent_Proxy( 
    IHWEventHandler __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszDeviceID,
    /* [string][in] */ LPCWSTR pszAltDeviceID,
    /* [string][in] */ LPCWSTR pszEventType,
    /* [string][in] */ LPCWSTR pszContentTypeHandler,
    /* [in] */ IDataObject __RPC_FAR *pdataobject);


void __RPC_STUB IHWEventHandler_HandleEventWithContent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHWEventHandler_INTERFACE_DEFINED__ */


#ifndef __IHWEventHandler2_INTERFACE_DEFINED__
#define __IHWEventHandler2_INTERFACE_DEFINED__

/* interface IHWEventHandler2 */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IHWEventHandler2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CFCC809F-295D-42e8-9FFC-424B33C487E6")
    IHWEventHandler2 : public IHWEventHandler
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE HandleEventWithHWND( 
            /* [string][in] */ LPCWSTR pszDeviceID,
            /* [string][in] */ LPCWSTR pszAltDeviceID,
            /* [string][in] */ LPCWSTR pszEventType,
            /* [in] */ HWND hwndOwner) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHWEventHandler2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IHWEventHandler2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IHWEventHandler2 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IHWEventHandler2 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Initialize )( 
            IHWEventHandler2 __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszParams);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *HandleEvent )( 
            IHWEventHandler2 __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszDeviceID,
            /* [string][in] */ LPCWSTR pszAltDeviceID,
            /* [string][in] */ LPCWSTR pszEventType);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *HandleEventWithContent )( 
            IHWEventHandler2 __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszDeviceID,
            /* [string][in] */ LPCWSTR pszAltDeviceID,
            /* [string][in] */ LPCWSTR pszEventType,
            /* [string][in] */ LPCWSTR pszContentTypeHandler,
            /* [in] */ IDataObject __RPC_FAR *pdataobject);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *HandleEventWithHWND )( 
            IHWEventHandler2 __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszDeviceID,
            /* [string][in] */ LPCWSTR pszAltDeviceID,
            /* [string][in] */ LPCWSTR pszEventType,
            /* [in] */ HWND hwndOwner);
        
        END_INTERFACE
    } IHWEventHandler2Vtbl;

    interface IHWEventHandler2
    {
        CONST_VTBL struct IHWEventHandler2Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHWEventHandler2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHWEventHandler2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHWEventHandler2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHWEventHandler2_Initialize(This,pszParams)	\
    (This)->lpVtbl -> Initialize(This,pszParams)

#define IHWEventHandler2_HandleEvent(This,pszDeviceID,pszAltDeviceID,pszEventType)	\
    (This)->lpVtbl -> HandleEvent(This,pszDeviceID,pszAltDeviceID,pszEventType)

#define IHWEventHandler2_HandleEventWithContent(This,pszDeviceID,pszAltDeviceID,pszEventType,pszContentTypeHandler,pdataobject)	\
    (This)->lpVtbl -> HandleEventWithContent(This,pszDeviceID,pszAltDeviceID,pszEventType,pszContentTypeHandler,pdataobject)


#define IHWEventHandler2_HandleEventWithHWND(This,pszDeviceID,pszAltDeviceID,pszEventType,hwndOwner)	\
    (This)->lpVtbl -> HandleEventWithHWND(This,pszDeviceID,pszAltDeviceID,pszEventType,hwndOwner)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IHWEventHandler2_HandleEventWithHWND_Proxy( 
    IHWEventHandler2 __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszDeviceID,
    /* [string][in] */ LPCWSTR pszAltDeviceID,
    /* [string][in] */ LPCWSTR pszEventType,
    /* [in] */ HWND hwndOwner);


void __RPC_STUB IHWEventHandler2_HandleEventWithHWND_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHWEventHandler2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0350 */
/* [local] */ 

#define ARCONTENT_AUTORUNINF             0x00000002   // That's the one we have today, and always had
#define ARCONTENT_AUDIOCD                0x00000004   // Audio CD (not MP3 and the like, the stuff you buy at the store)
#define ARCONTENT_DVDMOVIE               0x00000008   // DVD Movie (not MPEGs, the stuff you buy at the store)
#define ARCONTENT_BLANKCD                0x00000010   // Blank CD-R/CD-RW)
#define ARCONTENT_BLANKDVD               0x00000020   // Blank DVD-R/DVD-RW
#define ARCONTENT_UNKNOWNCONTENT         0x00000040   // Whatever files.  Mean that it's formatted.
#define ARCONTENT_AUTOPLAYPIX            0x00000080   // Any files classified by shell as image. (jpg, bmp, etc.)
#define ARCONTENT_AUTOPLAYMUSIC          0x00000100   // Any files classified by shell as music. (wma, mp3, etc.)
#define ARCONTENT_AUTOPLAYVIDEO          0x00000200   // Any files classified by shell as video. (mpg, avi, etc.)
#if (NTDDI_VERSION >= NTDDI_LONGHORN)
#define ARCONTENT_VCD                    0x00000400   // VCD format
#define ARCONTENT_SVCD                   0x00000800   // Super-VCD format
#define ARCONTENT_DVDAUDIO               0x00001000   // DVD-Audio
#define ARCONTENT_HDDVD                  0x00002000   // HD DVD
#define ARCONTENT_BLURAY                 0x00004000   // Blu-ray Disc
#define ARCONTENT_NONE                   0x00000000   // Empty (but formatted)
#define ARCONTENT_MASK                   0x00007FFE   // Bits that denote valid content types
#define ARCONTENT_PHASE_UNKNOWN          0x00000000   // We can be in any phase.  This is XP behavior.
#define ARCONTENT_PHASE_PRESNIFF         0x10000000   // These are contents we know w/o scanning the media for complete data (e.g. Audio track, DVD Movie).
#define ARCONTENT_PHASE_SNIFFING         0x20000000   // We are in the middle of searching the media.  There could be more contents to be found than currently reported.
#define ARCONTENT_PHASE_FINAL            0x40000000   // We have finished searching; contents we report are final.
#define ARCONTENT_PHASE_MASK             0x70000000   // Bits that denote what phase we are in the Autoplay process.
#endif  // NTDDI_LONGHORN


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0350_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0350_v0_0_s_ifspec;

#ifndef __IQueryCancelAutoPlay_INTERFACE_DEFINED__
#define __IQueryCancelAutoPlay_INTERFACE_DEFINED__

/* interface IQueryCancelAutoPlay */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IQueryCancelAutoPlay;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DDEFE873-6997-4e68-BE26-39B633ADBE12")
    IQueryCancelAutoPlay : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE AllowAutoPlay( 
            /* [string][in] */ LPCWSTR pszPath,
            /* [in] */ DWORD dwContentType,
            /* [string][in] */ LPCWSTR pszLabel,
            /* [in] */ DWORD dwSerialNumber) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IQueryCancelAutoPlayVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IQueryCancelAutoPlay __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IQueryCancelAutoPlay __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IQueryCancelAutoPlay __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AllowAutoPlay )( 
            IQueryCancelAutoPlay __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszPath,
            /* [in] */ DWORD dwContentType,
            /* [string][in] */ LPCWSTR pszLabel,
            /* [in] */ DWORD dwSerialNumber);
        
        END_INTERFACE
    } IQueryCancelAutoPlayVtbl;

    interface IQueryCancelAutoPlay
    {
        CONST_VTBL struct IQueryCancelAutoPlayVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IQueryCancelAutoPlay_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IQueryCancelAutoPlay_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IQueryCancelAutoPlay_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IQueryCancelAutoPlay_AllowAutoPlay(This,pszPath,dwContentType,pszLabel,dwSerialNumber)	\
    (This)->lpVtbl -> AllowAutoPlay(This,pszPath,dwContentType,pszLabel,dwSerialNumber)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IQueryCancelAutoPlay_AllowAutoPlay_Proxy( 
    IQueryCancelAutoPlay __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszPath,
    /* [in] */ DWORD dwContentType,
    /* [string][in] */ LPCWSTR pszLabel,
    /* [in] */ DWORD dwSerialNumber);


void __RPC_STUB IQueryCancelAutoPlay_AllowAutoPlay_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IQueryCancelAutoPlay_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0351 */
/* [local] */ 

#if (NTDDI_VERSION >= NTDDI_LONGHORN)


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0351_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0351_v0_0_s_ifspec;

#ifndef __IDynamicHWHandler_INTERFACE_DEFINED__
#define __IDynamicHWHandler_INTERFACE_DEFINED__

/* interface IDynamicHWHandler */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IDynamicHWHandler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DC2601D7-059E-42fc-A09D-2AFD21B6D5F7")
    IDynamicHWHandler : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetDynamicInfo( 
            /* [string][in] */ LPCWSTR pszDeviceID,
            /* [in] */ DWORD dwContentType,
            /* [string][out] */ LPWSTR __RPC_FAR *ppszAction) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDynamicHWHandlerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IDynamicHWHandler __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IDynamicHWHandler __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IDynamicHWHandler __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetDynamicInfo )( 
            IDynamicHWHandler __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszDeviceID,
            /* [in] */ DWORD dwContentType,
            /* [string][out] */ LPWSTR __RPC_FAR *ppszAction);
        
        END_INTERFACE
    } IDynamicHWHandlerVtbl;

    interface IDynamicHWHandler
    {
        CONST_VTBL struct IDynamicHWHandlerVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDynamicHWHandler_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IDynamicHWHandler_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IDynamicHWHandler_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IDynamicHWHandler_GetDynamicInfo(This,pszDeviceID,dwContentType,ppszAction)	\
    (This)->lpVtbl -> GetDynamicInfo(This,pszDeviceID,dwContentType,ppszAction)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IDynamicHWHandler_GetDynamicInfo_Proxy( 
    IDynamicHWHandler __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszDeviceID,
    /* [in] */ DWORD dwContentType,
    /* [string][out] */ LPWSTR __RPC_FAR *ppszAction);


void __RPC_STUB IDynamicHWHandler_GetDynamicInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IDynamicHWHandler_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0352 */
/* [local] */ 

#endif  // NTDDI_LONGHORN


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0352_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0352_v0_0_s_ifspec;

#ifndef __IActionProgress_INTERFACE_DEFINED__
#define __IActionProgress_INTERFACE_DEFINED__

/* interface IActionProgress */
/* [unique][uuid][object] */ 

/* [v1_enum] */ 
enum tagSPBEGINF
    {	SPBEGINF_NORMAL	= 0,
	SPBEGINF_AUTOTIME	= 0x2,
	SPBEGINF_NOPROGRESSBAR	= 0x10,
	SPBEGINF_MARQUEEPROGRESS	= 0x20,
	SPBEGINF_NOCANCELBUTTON	= 0x40
    };
typedef DWORD SPBEGINF;

typedef /* [v1_enum] */ 
enum _SPACTION
    {	SPACTION_NONE	= 0,
	SPACTION_MOVING	= SPACTION_NONE + 1,
	SPACTION_COPYING	= SPACTION_MOVING + 1,
	SPACTION_RECYCLING	= SPACTION_COPYING + 1,
	SPACTION_APPLYINGATTRIBS	= SPACTION_RECYCLING + 1,
	SPACTION_DOWNLOADING	= SPACTION_APPLYINGATTRIBS + 1,
	SPACTION_SEARCHING_INTERNET	= SPACTION_DOWNLOADING + 1,
	SPACTION_CALCULATING	= SPACTION_SEARCHING_INTERNET + 1,
	SPACTION_UPLOADING	= SPACTION_CALCULATING + 1,
	SPACTION_SEARCHING_FILES	= SPACTION_UPLOADING + 1,
	SPACTION_DELETING	= SPACTION_SEARCHING_FILES + 1,
	SPACTION_RENAMING	= SPACTION_DELETING + 1,
	SPACTION_FORMATTING	= SPACTION_RENAMING + 1
    }	SPACTION;

typedef /* [v1_enum] */ 
enum _SPTEXT
    {	SPTEXT_ACTIONDESCRIPTION	= 1,
	SPTEXT_ACTIONDETAIL	= SPTEXT_ACTIONDESCRIPTION + 1
    }	SPTEXT;


EXTERN_C const IID IID_IActionProgress;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("49ff1173-eadc-446d-9285-156453a6431c")
    IActionProgress : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Begin( 
            /* [in] */ SPACTION action,
            /* [in] */ SPBEGINF flags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UpdateProgress( 
            /* [in] */ ULONGLONG ulCompleted,
            /* [in] */ ULONGLONG ulTotal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UpdateText( 
            /* [in] */ SPTEXT sptext,
            /* [string][in] */ LPCWSTR pszText,
            /* [in] */ BOOL fMayCompact) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE QueryCancel( 
            /* [out] */ BOOL __RPC_FAR *pfCancelled) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ResetCancel( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE End( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IActionProgressVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IActionProgress __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IActionProgress __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IActionProgress __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Begin )( 
            IActionProgress __RPC_FAR * This,
            /* [in] */ SPACTION action,
            /* [in] */ SPBEGINF flags);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *UpdateProgress )( 
            IActionProgress __RPC_FAR * This,
            /* [in] */ ULONGLONG ulCompleted,
            /* [in] */ ULONGLONG ulTotal);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *UpdateText )( 
            IActionProgress __RPC_FAR * This,
            /* [in] */ SPTEXT sptext,
            /* [string][in] */ LPCWSTR pszText,
            /* [in] */ BOOL fMayCompact);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryCancel )( 
            IActionProgress __RPC_FAR * This,
            /* [out] */ BOOL __RPC_FAR *pfCancelled);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ResetCancel )( 
            IActionProgress __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *End )( 
            IActionProgress __RPC_FAR * This);
        
        END_INTERFACE
    } IActionProgressVtbl;

    interface IActionProgress
    {
        CONST_VTBL struct IActionProgressVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IActionProgress_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IActionProgress_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IActionProgress_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IActionProgress_Begin(This,action,flags)	\
    (This)->lpVtbl -> Begin(This,action,flags)

#define IActionProgress_UpdateProgress(This,ulCompleted,ulTotal)	\
    (This)->lpVtbl -> UpdateProgress(This,ulCompleted,ulTotal)

#define IActionProgress_UpdateText(This,sptext,pszText,fMayCompact)	\
    (This)->lpVtbl -> UpdateText(This,sptext,pszText,fMayCompact)

#define IActionProgress_QueryCancel(This,pfCancelled)	\
    (This)->lpVtbl -> QueryCancel(This,pfCancelled)

#define IActionProgress_ResetCancel(This)	\
    (This)->lpVtbl -> ResetCancel(This)

#define IActionProgress_End(This)	\
    (This)->lpVtbl -> End(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IActionProgress_Begin_Proxy( 
    IActionProgress __RPC_FAR * This,
    /* [in] */ SPACTION action,
    /* [in] */ SPBEGINF flags);


void __RPC_STUB IActionProgress_Begin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActionProgress_UpdateProgress_Proxy( 
    IActionProgress __RPC_FAR * This,
    /* [in] */ ULONGLONG ulCompleted,
    /* [in] */ ULONGLONG ulTotal);


void __RPC_STUB IActionProgress_UpdateProgress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActionProgress_UpdateText_Proxy( 
    IActionProgress __RPC_FAR * This,
    /* [in] */ SPTEXT sptext,
    /* [string][in] */ LPCWSTR pszText,
    /* [in] */ BOOL fMayCompact);


void __RPC_STUB IActionProgress_UpdateText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActionProgress_QueryCancel_Proxy( 
    IActionProgress __RPC_FAR * This,
    /* [out] */ BOOL __RPC_FAR *pfCancelled);


void __RPC_STUB IActionProgress_QueryCancel_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActionProgress_ResetCancel_Proxy( 
    IActionProgress __RPC_FAR * This);


void __RPC_STUB IActionProgress_ResetCancel_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActionProgress_End_Proxy( 
    IActionProgress __RPC_FAR * This);


void __RPC_STUB IActionProgress_End_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IActionProgress_INTERFACE_DEFINED__ */


#ifndef __IShellExtInit_INTERFACE_DEFINED__
#define __IShellExtInit_INTERFACE_DEFINED__

/* interface IShellExtInit */
/* [unique][local][object][uuid] */ 


EXTERN_C const IID IID_IShellExtInit;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000214E8-0000-0000-C000-000000000046")
    IShellExtInit : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Initialize( 
            /* [unique][in] */ PCIDLIST_ABSOLUTE pidlFolder,
            /* [unique][in] */ IDataObject __RPC_FAR *pdtobj,
            /* [unique][in] */ HKEY hkeyProgID) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IShellExtInitVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IShellExtInit __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IShellExtInit __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IShellExtInit __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Initialize )( 
            IShellExtInit __RPC_FAR * This,
            /* [unique][in] */ PCIDLIST_ABSOLUTE pidlFolder,
            /* [unique][in] */ IDataObject __RPC_FAR *pdtobj,
            /* [unique][in] */ HKEY hkeyProgID);
        
        END_INTERFACE
    } IShellExtInitVtbl;

    interface IShellExtInit
    {
        CONST_VTBL struct IShellExtInitVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IShellExtInit_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IShellExtInit_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IShellExtInit_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IShellExtInit_Initialize(This,pidlFolder,pdtobj,hkeyProgID)	\
    (This)->lpVtbl -> Initialize(This,pidlFolder,pdtobj,hkeyProgID)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IShellExtInit_Initialize_Proxy( 
    IShellExtInit __RPC_FAR * This,
    /* [unique][in] */ PCIDLIST_ABSOLUTE pidlFolder,
    /* [unique][in] */ IDataObject __RPC_FAR *pdtobj,
    /* [unique][in] */ HKEY hkeyProgID);


void __RPC_STUB IShellExtInit_Initialize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IShellExtInit_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0354 */
/* [local] */ 

typedef IShellExtInit __RPC_FAR *LPSHELLEXTINIT;



extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0354_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0354_v0_0_s_ifspec;

#ifndef __IShellPropSheetExt_INTERFACE_DEFINED__
#define __IShellPropSheetExt_INTERFACE_DEFINED__

/* interface IShellPropSheetExt */
/* [unique][local][object][uuid] */ 


enum tagSHELLPROPSHEETEXTPAGEID
    {	EXPPS_FILETYPES	= 0x1
    };
typedef UINT EXPPS;


EXTERN_C const IID IID_IShellPropSheetExt;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000214E9-0000-0000-C000-000000000046")
    IShellPropSheetExt : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE AddPages( 
            /* [in] */ LPFNSVADDPROPSHEETPAGE pfnAddPage,
            /* [in] */ LPARAM lParam) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplacePage( 
            /* [in] */ EXPPS uPageID,
            /* [in] */ LPFNSVADDPROPSHEETPAGE pfnReplaceWith,
            /* [in] */ LPARAM lParam) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IShellPropSheetExtVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IShellPropSheetExt __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IShellPropSheetExt __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IShellPropSheetExt __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AddPages )( 
            IShellPropSheetExt __RPC_FAR * This,
            /* [in] */ LPFNSVADDPROPSHEETPAGE pfnAddPage,
            /* [in] */ LPARAM lParam);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ReplacePage )( 
            IShellPropSheetExt __RPC_FAR * This,
            /* [in] */ EXPPS uPageID,
            /* [in] */ LPFNSVADDPROPSHEETPAGE pfnReplaceWith,
            /* [in] */ LPARAM lParam);
        
        END_INTERFACE
    } IShellPropSheetExtVtbl;

    interface IShellPropSheetExt
    {
        CONST_VTBL struct IShellPropSheetExtVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IShellPropSheetExt_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IShellPropSheetExt_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IShellPropSheetExt_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IShellPropSheetExt_AddPages(This,pfnAddPage,lParam)	\
    (This)->lpVtbl -> AddPages(This,pfnAddPage,lParam)

#define IShellPropSheetExt_ReplacePage(This,uPageID,pfnReplaceWith,lParam)	\
    (This)->lpVtbl -> ReplacePage(This,uPageID,pfnReplaceWith,lParam)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IShellPropSheetExt_AddPages_Proxy( 
    IShellPropSheetExt __RPC_FAR * This,
    /* [in] */ LPFNSVADDPROPSHEETPAGE pfnAddPage,
    /* [in] */ LPARAM lParam);


void __RPC_STUB IShellPropSheetExt_AddPages_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellPropSheetExt_ReplacePage_Proxy( 
    IShellPropSheetExt __RPC_FAR * This,
    /* [in] */ EXPPS uPageID,
    /* [in] */ LPFNSVADDPROPSHEETPAGE pfnReplaceWith,
    /* [in] */ LPARAM lParam);


void __RPC_STUB IShellPropSheetExt_ReplacePage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IShellPropSheetExt_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0355 */
/* [local] */ 

typedef IShellPropSheetExt __RPC_FAR *LPSHELLPROPSHEETEXT;



extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0355_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0355_v0_0_s_ifspec;

#ifndef __IRemoteComputer_INTERFACE_DEFINED__
#define __IRemoteComputer_INTERFACE_DEFINED__

/* interface IRemoteComputer */
/* [unique][object][uuid][helpstring] */ 


EXTERN_C const IID IID_IRemoteComputer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000214FE-0000-0000-C000-000000000046")
    IRemoteComputer : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Initialize( 
            /* [string][in] */ LPCWSTR pszMachine,
            /* [in] */ BOOL bEnumerating) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IRemoteComputerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IRemoteComputer __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IRemoteComputer __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IRemoteComputer __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Initialize )( 
            IRemoteComputer __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszMachine,
            /* [in] */ BOOL bEnumerating);
        
        END_INTERFACE
    } IRemoteComputerVtbl;

    interface IRemoteComputer
    {
        CONST_VTBL struct IRemoteComputerVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IRemoteComputer_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IRemoteComputer_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IRemoteComputer_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IRemoteComputer_Initialize(This,pszMachine,bEnumerating)	\
    (This)->lpVtbl -> Initialize(This,pszMachine,bEnumerating)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IRemoteComputer_Initialize_Proxy( 
    IRemoteComputer __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszMachine,
    /* [in] */ BOOL bEnumerating);


void __RPC_STUB IRemoteComputer_Initialize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IRemoteComputer_INTERFACE_DEFINED__ */


#ifndef __IQueryContinue_INTERFACE_DEFINED__
#define __IQueryContinue_INTERFACE_DEFINED__

/* interface IQueryContinue */
/* [unique][object][uuid] */ 


EXTERN_C const IID IID_IQueryContinue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7307055c-b24a-486b-9f25-163e597a28a9")
    IQueryContinue : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE QueryContinue( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IQueryContinueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IQueryContinue __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IQueryContinue __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IQueryContinue __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryContinue )( 
            IQueryContinue __RPC_FAR * This);
        
        END_INTERFACE
    } IQueryContinueVtbl;

    interface IQueryContinue
    {
        CONST_VTBL struct IQueryContinueVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IQueryContinue_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IQueryContinue_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IQueryContinue_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IQueryContinue_QueryContinue(This)	\
    (This)->lpVtbl -> QueryContinue(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IQueryContinue_QueryContinue_Proxy( 
    IQueryContinue __RPC_FAR * This);


void __RPC_STUB IQueryContinue_QueryContinue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IQueryContinue_INTERFACE_DEFINED__ */


#ifndef __IUserNotification_INTERFACE_DEFINED__
#define __IUserNotification_INTERFACE_DEFINED__

/* interface IUserNotification */
/* [unique][object][uuid] */ 


EXTERN_C const IID IID_IUserNotification;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("ba9711ba-5893-4787-a7e1-41277151550b")
    IUserNotification : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetBalloonInfo( 
            /* [string][unique][in] */ LPCWSTR pszTitle,
            /* [string][unique][in] */ LPCWSTR pszText,
            /* [in] */ DWORD dwInfoFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetBalloonRetry( 
            /* [in] */ DWORD dwShowTime,
            /* [in] */ DWORD dwInterval,
            /* [in] */ UINT cRetryCount) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetIconInfo( 
            /* [unique][in] */ HICON hIcon,
            /* [string][unique][in] */ LPCWSTR pszToolTip) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Show( 
            /* [unique][in] */ IQueryContinue __RPC_FAR *pqc,
            /* [in] */ DWORD dwContinuePollInterval) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PlaySound( 
            /* [string][in] */ LPCWSTR pszSoundName) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IUserNotificationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IUserNotification __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IUserNotification __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IUserNotification __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetBalloonInfo )( 
            IUserNotification __RPC_FAR * This,
            /* [string][unique][in] */ LPCWSTR pszTitle,
            /* [string][unique][in] */ LPCWSTR pszText,
            /* [in] */ DWORD dwInfoFlags);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetBalloonRetry )( 
            IUserNotification __RPC_FAR * This,
            /* [in] */ DWORD dwShowTime,
            /* [in] */ DWORD dwInterval,
            /* [in] */ UINT cRetryCount);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetIconInfo )( 
            IUserNotification __RPC_FAR * This,
            /* [unique][in] */ HICON hIcon,
            /* [string][unique][in] */ LPCWSTR pszToolTip);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Show )( 
            IUserNotification __RPC_FAR * This,
            /* [unique][in] */ IQueryContinue __RPC_FAR *pqc,
            /* [in] */ DWORD dwContinuePollInterval);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *PlaySound )( 
            IUserNotification __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszSoundName);
        
        END_INTERFACE
    } IUserNotificationVtbl;

    interface IUserNotification
    {
        CONST_VTBL struct IUserNotificationVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IUserNotification_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IUserNotification_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IUserNotification_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IUserNotification_SetBalloonInfo(This,pszTitle,pszText,dwInfoFlags)	\
    (This)->lpVtbl -> SetBalloonInfo(This,pszTitle,pszText,dwInfoFlags)

#define IUserNotification_SetBalloonRetry(This,dwShowTime,dwInterval,cRetryCount)	\
    (This)->lpVtbl -> SetBalloonRetry(This,dwShowTime,dwInterval,cRetryCount)

#define IUserNotification_SetIconInfo(This,hIcon,pszToolTip)	\
    (This)->lpVtbl -> SetIconInfo(This,hIcon,pszToolTip)

#define IUserNotification_Show(This,pqc,dwContinuePollInterval)	\
    (This)->lpVtbl -> Show(This,pqc,dwContinuePollInterval)

#define IUserNotification_PlaySound(This,pszSoundName)	\
    (This)->lpVtbl -> PlaySound(This,pszSoundName)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IUserNotification_SetBalloonInfo_Proxy( 
    IUserNotification __RPC_FAR * This,
    /* [string][unique][in] */ LPCWSTR pszTitle,
    /* [string][unique][in] */ LPCWSTR pszText,
    /* [in] */ DWORD dwInfoFlags);


void __RPC_STUB IUserNotification_SetBalloonInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IUserNotification_SetBalloonRetry_Proxy( 
    IUserNotification __RPC_FAR * This,
    /* [in] */ DWORD dwShowTime,
    /* [in] */ DWORD dwInterval,
    /* [in] */ UINT cRetryCount);


void __RPC_STUB IUserNotification_SetBalloonRetry_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IUserNotification_SetIconInfo_Proxy( 
    IUserNotification __RPC_FAR * This,
    /* [unique][in] */ HICON hIcon,
    /* [string][unique][in] */ LPCWSTR pszToolTip);


void __RPC_STUB IUserNotification_SetIconInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IUserNotification_Show_Proxy( 
    IUserNotification __RPC_FAR * This,
    /* [unique][in] */ IQueryContinue __RPC_FAR *pqc,
    /* [in] */ DWORD dwContinuePollInterval);


void __RPC_STUB IUserNotification_Show_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IUserNotification_PlaySound_Proxy( 
    IUserNotification __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszSoundName);


void __RPC_STUB IUserNotification_PlaySound_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IUserNotification_INTERFACE_DEFINED__ */


#ifndef __IUserNotificationCallback_INTERFACE_DEFINED__
#define __IUserNotificationCallback_INTERFACE_DEFINED__

/* interface IUserNotificationCallback */
/* [object][uuid] */ 


EXTERN_C const IID IID_IUserNotificationCallback;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("19108294-0441-4AFF-8013-FA0A730B0BEA")
    IUserNotificationCallback : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OnBalloonUserClick( 
            /* [in] */ POINT __RPC_FAR *pt) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnLeftClick( 
            /* [in] */ POINT __RPC_FAR *pt) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnContextMenu( 
            /* [in] */ POINT __RPC_FAR *pt) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IUserNotificationCallbackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IUserNotificationCallback __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IUserNotificationCallback __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IUserNotificationCallback __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnBalloonUserClick )( 
            IUserNotificationCallback __RPC_FAR * This,
            /* [in] */ POINT __RPC_FAR *pt);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnLeftClick )( 
            IUserNotificationCallback __RPC_FAR * This,
            /* [in] */ POINT __RPC_FAR *pt);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnContextMenu )( 
            IUserNotificationCallback __RPC_FAR * This,
            /* [in] */ POINT __RPC_FAR *pt);
        
        END_INTERFACE
    } IUserNotificationCallbackVtbl;

    interface IUserNotificationCallback
    {
        CONST_VTBL struct IUserNotificationCallbackVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IUserNotificationCallback_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IUserNotificationCallback_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IUserNotificationCallback_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IUserNotificationCallback_OnBalloonUserClick(This,pt)	\
    (This)->lpVtbl -> OnBalloonUserClick(This,pt)

#define IUserNotificationCallback_OnLeftClick(This,pt)	\
    (This)->lpVtbl -> OnLeftClick(This,pt)

#define IUserNotificationCallback_OnContextMenu(This,pt)	\
    (This)->lpVtbl -> OnContextMenu(This,pt)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IUserNotificationCallback_OnBalloonUserClick_Proxy( 
    IUserNotificationCallback __RPC_FAR * This,
    /* [in] */ POINT __RPC_FAR *pt);


void __RPC_STUB IUserNotificationCallback_OnBalloonUserClick_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IUserNotificationCallback_OnLeftClick_Proxy( 
    IUserNotificationCallback __RPC_FAR * This,
    /* [in] */ POINT __RPC_FAR *pt);


void __RPC_STUB IUserNotificationCallback_OnLeftClick_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IUserNotificationCallback_OnContextMenu_Proxy( 
    IUserNotificationCallback __RPC_FAR * This,
    /* [in] */ POINT __RPC_FAR *pt);


void __RPC_STUB IUserNotificationCallback_OnContextMenu_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IUserNotificationCallback_INTERFACE_DEFINED__ */


#ifndef __IUserNotification2_INTERFACE_DEFINED__
#define __IUserNotification2_INTERFACE_DEFINED__

/* interface IUserNotification2 */
/* [unique][object][uuid] */ 


EXTERN_C const IID IID_IUserNotification2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("215913CC-57EB-4FAB-AB5A-E5FA7BEA2A6C")
    IUserNotification2 : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetBalloonInfo( 
            /* [string][unique][in] */ LPCWSTR pszTitle,
            /* [string][unique][in] */ LPCWSTR pszText,
            /* [in] */ DWORD dwInfoFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetBalloonRetry( 
            /* [in] */ DWORD dwShowTime,
            /* [in] */ DWORD dwInterval,
            /* [in] */ UINT cRetryCount) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetIconInfo( 
            /* [unique][in] */ HICON hIcon,
            /* [string][unique][in] */ LPCWSTR pszToolTip) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Show( 
            /* [unique][in] */ IQueryContinue __RPC_FAR *pqc,
            /* [in] */ DWORD dwContinuePollInterval,
            /* [unique][in] */ IUserNotificationCallback __RPC_FAR *pSink) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PlaySound( 
            /* [string][in] */ LPCWSTR pszSoundName) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IUserNotification2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IUserNotification2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IUserNotification2 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IUserNotification2 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetBalloonInfo )( 
            IUserNotification2 __RPC_FAR * This,
            /* [string][unique][in] */ LPCWSTR pszTitle,
            /* [string][unique][in] */ LPCWSTR pszText,
            /* [in] */ DWORD dwInfoFlags);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetBalloonRetry )( 
            IUserNotification2 __RPC_FAR * This,
            /* [in] */ DWORD dwShowTime,
            /* [in] */ DWORD dwInterval,
            /* [in] */ UINT cRetryCount);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetIconInfo )( 
            IUserNotification2 __RPC_FAR * This,
            /* [unique][in] */ HICON hIcon,
            /* [string][unique][in] */ LPCWSTR pszToolTip);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Show )( 
            IUserNotification2 __RPC_FAR * This,
            /* [unique][in] */ IQueryContinue __RPC_FAR *pqc,
            /* [in] */ DWORD dwContinuePollInterval,
            /* [unique][in] */ IUserNotificationCallback __RPC_FAR *pSink);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *PlaySound )( 
            IUserNotification2 __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszSoundName);
        
        END_INTERFACE
    } IUserNotification2Vtbl;

    interface IUserNotification2
    {
        CONST_VTBL struct IUserNotification2Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IUserNotification2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IUserNotification2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IUserNotification2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IUserNotification2_SetBalloonInfo(This,pszTitle,pszText,dwInfoFlags)	\
    (This)->lpVtbl -> SetBalloonInfo(This,pszTitle,pszText,dwInfoFlags)

#define IUserNotification2_SetBalloonRetry(This,dwShowTime,dwInterval,cRetryCount)	\
    (This)->lpVtbl -> SetBalloonRetry(This,dwShowTime,dwInterval,cRetryCount)

#define IUserNotification2_SetIconInfo(This,hIcon,pszToolTip)	\
    (This)->lpVtbl -> SetIconInfo(This,hIcon,pszToolTip)

#define IUserNotification2_Show(This,pqc,dwContinuePollInterval,pSink)	\
    (This)->lpVtbl -> Show(This,pqc,dwContinuePollInterval,pSink)

#define IUserNotification2_PlaySound(This,pszSoundName)	\
    (This)->lpVtbl -> PlaySound(This,pszSoundName)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IUserNotification2_SetBalloonInfo_Proxy( 
    IUserNotification2 __RPC_FAR * This,
    /* [string][unique][in] */ LPCWSTR pszTitle,
    /* [string][unique][in] */ LPCWSTR pszText,
    /* [in] */ DWORD dwInfoFlags);


void __RPC_STUB IUserNotification2_SetBalloonInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IUserNotification2_SetBalloonRetry_Proxy( 
    IUserNotification2 __RPC_FAR * This,
    /* [in] */ DWORD dwShowTime,
    /* [in] */ DWORD dwInterval,
    /* [in] */ UINT cRetryCount);


void __RPC_STUB IUserNotification2_SetBalloonRetry_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IUserNotification2_SetIconInfo_Proxy( 
    IUserNotification2 __RPC_FAR * This,
    /* [unique][in] */ HICON hIcon,
    /* [string][unique][in] */ LPCWSTR pszToolTip);


void __RPC_STUB IUserNotification2_SetIconInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IUserNotification2_Show_Proxy( 
    IUserNotification2 __RPC_FAR * This,
    /* [unique][in] */ IQueryContinue __RPC_FAR *pqc,
    /* [in] */ DWORD dwContinuePollInterval,
    /* [unique][in] */ IUserNotificationCallback __RPC_FAR *pSink);


void __RPC_STUB IUserNotification2_Show_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IUserNotification2_PlaySound_Proxy( 
    IUserNotification2 __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszSoundName);


void __RPC_STUB IUserNotification2_PlaySound_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IUserNotification2_INTERFACE_DEFINED__ */


#ifndef __IItemNameLimits_INTERFACE_DEFINED__
#define __IItemNameLimits_INTERFACE_DEFINED__

/* interface IItemNameLimits */
/* [object][uuid] */ 


EXTERN_C const IID IID_IItemNameLimits;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1df0d7f1-b267-4d28-8b10-12e23202a5c4")
    IItemNameLimits : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetValidCharacters( 
            /* [string][out] */ LPWSTR __RPC_FAR *ppwszValidChars,
            /* [string][out] */ LPWSTR __RPC_FAR *ppwszInvalidChars) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMaxLength( 
            /* [string][in] */ LPCWSTR pszName,
            /* [out] */ int __RPC_FAR *piMaxNameLen) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IItemNameLimitsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IItemNameLimits __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IItemNameLimits __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IItemNameLimits __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetValidCharacters )( 
            IItemNameLimits __RPC_FAR * This,
            /* [string][out] */ LPWSTR __RPC_FAR *ppwszValidChars,
            /* [string][out] */ LPWSTR __RPC_FAR *ppwszInvalidChars);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetMaxLength )( 
            IItemNameLimits __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszName,
            /* [out] */ int __RPC_FAR *piMaxNameLen);
        
        END_INTERFACE
    } IItemNameLimitsVtbl;

    interface IItemNameLimits
    {
        CONST_VTBL struct IItemNameLimitsVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IItemNameLimits_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IItemNameLimits_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IItemNameLimits_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IItemNameLimits_GetValidCharacters(This,ppwszValidChars,ppwszInvalidChars)	\
    (This)->lpVtbl -> GetValidCharacters(This,ppwszValidChars,ppwszInvalidChars)

#define IItemNameLimits_GetMaxLength(This,pszName,piMaxNameLen)	\
    (This)->lpVtbl -> GetMaxLength(This,pszName,piMaxNameLen)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IItemNameLimits_GetValidCharacters_Proxy( 
    IItemNameLimits __RPC_FAR * This,
    /* [string][out] */ LPWSTR __RPC_FAR *ppwszValidChars,
    /* [string][out] */ LPWSTR __RPC_FAR *ppwszInvalidChars);


void __RPC_STUB IItemNameLimits_GetValidCharacters_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IItemNameLimits_GetMaxLength_Proxy( 
    IItemNameLimits __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszName,
    /* [out] */ int __RPC_FAR *piMaxNameLen);


void __RPC_STUB IItemNameLimits_GetMaxLength_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IItemNameLimits_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0361 */
/* [local] */ 

#if (NTDDI_VERSION >= NTDDI_LONGHORN)


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0361_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0361_v0_0_s_ifspec;

#ifndef __ISearchFolderItemFactory_INTERFACE_DEFINED__
#define __ISearchFolderItemFactory_INTERFACE_DEFINED__

/* interface ISearchFolderItemFactory */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_ISearchFolderItemFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("a0ffbc28-5482-4366-be27-3e81e78e06c2")
    ISearchFolderItemFactory : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetDisplayName( 
            /* [string][in] */ LPCWSTR pszDisplayName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetFolderTypeID( 
            /* [in] */ FOLDERTYPEID ftid) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetFolderLogicalViewMode( 
            /* [in] */ FOLDERLOGICALVIEWMODE flvm) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetIconSize( 
            /* [in] */ int iIconSize) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetVisibleColumns( 
            /* [in] */ UINT cVisibleColumns,
            /* [size_is][in] */ PROPERTYKEY __RPC_FAR *rgKey) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetSortColumns( 
            /* [in] */ UINT cSortColumns,
            /* [size_is][in] */ SORTCOLUMN __RPC_FAR *rgSortColumns) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetGroupColumn( 
            /* [in] */ REFPROPERTYKEY keyGroup) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetStacks( 
            /* [in] */ UINT cStackKeys,
            /* [size_is][in] */ PROPERTYKEY __RPC_FAR *rgStackKeys) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetScope( 
            /* [in] */ IShellItemArray __RPC_FAR *psiaScope) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetCondition( 
            /* [in] */ ICondition __RPC_FAR *pCondition) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetShellItem( 
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetIDList( 
            /* [out] */ PIDLIST_ABSOLUTE __RPC_FAR *ppidl) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ISearchFolderItemFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            ISearchFolderItemFactory __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            ISearchFolderItemFactory __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            ISearchFolderItemFactory __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetDisplayName )( 
            ISearchFolderItemFactory __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszDisplayName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFolderTypeID )( 
            ISearchFolderItemFactory __RPC_FAR * This,
            /* [in] */ FOLDERTYPEID ftid);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFolderLogicalViewMode )( 
            ISearchFolderItemFactory __RPC_FAR * This,
            /* [in] */ FOLDERLOGICALVIEWMODE flvm);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetIconSize )( 
            ISearchFolderItemFactory __RPC_FAR * This,
            /* [in] */ int iIconSize);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVisibleColumns )( 
            ISearchFolderItemFactory __RPC_FAR * This,
            /* [in] */ UINT cVisibleColumns,
            /* [size_is][in] */ PROPERTYKEY __RPC_FAR *rgKey);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetSortColumns )( 
            ISearchFolderItemFactory __RPC_FAR * This,
            /* [in] */ UINT cSortColumns,
            /* [size_is][in] */ SORTCOLUMN __RPC_FAR *rgSortColumns);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetGroupColumn )( 
            ISearchFolderItemFactory __RPC_FAR * This,
            /* [in] */ REFPROPERTYKEY keyGroup);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetStacks )( 
            ISearchFolderItemFactory __RPC_FAR * This,
            /* [in] */ UINT cStackKeys,
            /* [size_is][in] */ PROPERTYKEY __RPC_FAR *rgStackKeys);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetScope )( 
            ISearchFolderItemFactory __RPC_FAR * This,
            /* [in] */ IShellItemArray __RPC_FAR *psiaScope);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetCondition )( 
            ISearchFolderItemFactory __RPC_FAR * This,
            /* [in] */ ICondition __RPC_FAR *pCondition);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetShellItem )( 
            ISearchFolderItemFactory __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDList )( 
            ISearchFolderItemFactory __RPC_FAR * This,
            /* [out] */ PIDLIST_ABSOLUTE __RPC_FAR *ppidl);
        
        END_INTERFACE
    } ISearchFolderItemFactoryVtbl;

    interface ISearchFolderItemFactory
    {
        CONST_VTBL struct ISearchFolderItemFactoryVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISearchFolderItemFactory_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define ISearchFolderItemFactory_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define ISearchFolderItemFactory_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define ISearchFolderItemFactory_SetDisplayName(This,pszDisplayName)	\
    (This)->lpVtbl -> SetDisplayName(This,pszDisplayName)

#define ISearchFolderItemFactory_SetFolderTypeID(This,ftid)	\
    (This)->lpVtbl -> SetFolderTypeID(This,ftid)

#define ISearchFolderItemFactory_SetFolderLogicalViewMode(This,flvm)	\
    (This)->lpVtbl -> SetFolderLogicalViewMode(This,flvm)

#define ISearchFolderItemFactory_SetIconSize(This,iIconSize)	\
    (This)->lpVtbl -> SetIconSize(This,iIconSize)

#define ISearchFolderItemFactory_SetVisibleColumns(This,cVisibleColumns,rgKey)	\
    (This)->lpVtbl -> SetVisibleColumns(This,cVisibleColumns,rgKey)

#define ISearchFolderItemFactory_SetSortColumns(This,cSortColumns,rgSortColumns)	\
    (This)->lpVtbl -> SetSortColumns(This,cSortColumns,rgSortColumns)

#define ISearchFolderItemFactory_SetGroupColumn(This,keyGroup)	\
    (This)->lpVtbl -> SetGroupColumn(This,keyGroup)

#define ISearchFolderItemFactory_SetStacks(This,cStackKeys,rgStackKeys)	\
    (This)->lpVtbl -> SetStacks(This,cStackKeys,rgStackKeys)

#define ISearchFolderItemFactory_SetScope(This,psiaScope)	\
    (This)->lpVtbl -> SetScope(This,psiaScope)

#define ISearchFolderItemFactory_SetCondition(This,pCondition)	\
    (This)->lpVtbl -> SetCondition(This,pCondition)

#define ISearchFolderItemFactory_GetShellItem(This,riid,ppv)	\
    (This)->lpVtbl -> GetShellItem(This,riid,ppv)

#define ISearchFolderItemFactory_GetIDList(This,ppidl)	\
    (This)->lpVtbl -> GetIDList(This,ppidl)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE ISearchFolderItemFactory_SetDisplayName_Proxy( 
    ISearchFolderItemFactory __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszDisplayName);


void __RPC_STUB ISearchFolderItemFactory_SetDisplayName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ISearchFolderItemFactory_SetFolderTypeID_Proxy( 
    ISearchFolderItemFactory __RPC_FAR * This,
    /* [in] */ FOLDERTYPEID ftid);


void __RPC_STUB ISearchFolderItemFactory_SetFolderTypeID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ISearchFolderItemFactory_SetFolderLogicalViewMode_Proxy( 
    ISearchFolderItemFactory __RPC_FAR * This,
    /* [in] */ FOLDERLOGICALVIEWMODE flvm);


void __RPC_STUB ISearchFolderItemFactory_SetFolderLogicalViewMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ISearchFolderItemFactory_SetIconSize_Proxy( 
    ISearchFolderItemFactory __RPC_FAR * This,
    /* [in] */ int iIconSize);


void __RPC_STUB ISearchFolderItemFactory_SetIconSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ISearchFolderItemFactory_SetVisibleColumns_Proxy( 
    ISearchFolderItemFactory __RPC_FAR * This,
    /* [in] */ UINT cVisibleColumns,
    /* [size_is][in] */ PROPERTYKEY __RPC_FAR *rgKey);


void __RPC_STUB ISearchFolderItemFactory_SetVisibleColumns_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ISearchFolderItemFactory_SetSortColumns_Proxy( 
    ISearchFolderItemFactory __RPC_FAR * This,
    /* [in] */ UINT cSortColumns,
    /* [size_is][in] */ SORTCOLUMN __RPC_FAR *rgSortColumns);


void __RPC_STUB ISearchFolderItemFactory_SetSortColumns_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ISearchFolderItemFactory_SetGroupColumn_Proxy( 
    ISearchFolderItemFactory __RPC_FAR * This,
    /* [in] */ REFPROPERTYKEY keyGroup);


void __RPC_STUB ISearchFolderItemFactory_SetGroupColumn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ISearchFolderItemFactory_SetStacks_Proxy( 
    ISearchFolderItemFactory __RPC_FAR * This,
    /* [in] */ UINT cStackKeys,
    /* [size_is][in] */ PROPERTYKEY __RPC_FAR *rgStackKeys);


void __RPC_STUB ISearchFolderItemFactory_SetStacks_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ISearchFolderItemFactory_SetScope_Proxy( 
    ISearchFolderItemFactory __RPC_FAR * This,
    /* [in] */ IShellItemArray __RPC_FAR *psiaScope);


void __RPC_STUB ISearchFolderItemFactory_SetScope_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ISearchFolderItemFactory_SetCondition_Proxy( 
    ISearchFolderItemFactory __RPC_FAR * This,
    /* [in] */ ICondition __RPC_FAR *pCondition);


void __RPC_STUB ISearchFolderItemFactory_SetCondition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ISearchFolderItemFactory_GetShellItem_Proxy( 
    ISearchFolderItemFactory __RPC_FAR * This,
    /* [in] */ REFIID riid,
    /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);


void __RPC_STUB ISearchFolderItemFactory_GetShellItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ISearchFolderItemFactory_GetIDList_Proxy( 
    ISearchFolderItemFactory __RPC_FAR * This,
    /* [out] */ PIDLIST_ABSOLUTE __RPC_FAR *ppidl);


void __RPC_STUB ISearchFolderItemFactory_GetIDList_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __ISearchFolderItemFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0362 */
/* [local] */ 

#endif  // NTDDI_LONGHORN
#if (_WIN32_IE >= 0x0400)
#define IEI_PRIORITY_MAX        ITSAT_MAX_PRIORITY
#define IEI_PRIORITY_MIN        ITSAT_MIN_PRIORITY
#define IEIT_PRIORITY_NORMAL     ITSAT_DEFAULT_PRIORITY
#define IEIFLAG_ASYNC       0x0001      // (deprecated) ask the extractor if it supports ASYNC extract (free threaded)
#define IEIFLAG_CACHE       0x0002      // returned from the extractor if it does NOT cache the thumbnail
#define IEIFLAG_ASPECT      0x0004      // passed to the extractor to beg it to render to the aspect ratio of the supplied rect
#define IEIFLAG_OFFLINE     0x0008      // if the extractor shouldn't hit the net to get any content neede for the rendering
#define IEIFLAG_GLEAM       0x0010      // does the image have a gleam ? this will be returned if it does
#define IEIFLAG_SCREEN      0x0020      // render as if for the screen  (this is exlusive with IEIFLAG_ASPECT )
#define IEIFLAG_ORIGSIZE    0x0040      // render to the approx size passed, but crop if neccessary
#define IEIFLAG_NOSTAMP     0x0080      // returned from the extractor if it does NOT want an icon stamp on the thumbnail
#define IEIFLAG_NOBORDER    0x0100      // returned from the extractor if it does NOT want an a border around the thumbnail
#define IEIFLAG_QUALITY     0x0200      // passed to the Extract method to indicate that a slower, higher quality image is desired, re-compute the thumbnail
#define IEIFLAG_REFRESH     0x0400      // returned from the extractor if it would like to have Refresh Thumbnail available


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0362_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0362_v0_0_s_ifspec;

#ifndef __IExtractImage_INTERFACE_DEFINED__
#define __IExtractImage_INTERFACE_DEFINED__

/* interface IExtractImage */
/* [unique][object][uuid] */ 


EXTERN_C const IID IID_IExtractImage;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("BB2E617C-0920-11d1-9A0B-00C04FC2D6C1")
    IExtractImage : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetLocation( 
            /* [size_is][string][out] */ LPWSTR pszPathBuffer,
            /* [in] */ DWORD cch,
            /* [unique][out][in] */ DWORD __RPC_FAR *pdwPriority,
            /* [in] */ const SIZE __RPC_FAR *prgSize,
            /* [in] */ DWORD dwRecClrDepth,
            /* [out][in] */ DWORD __RPC_FAR *pdwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Extract( 
            /* [out] */ HBITMAP __RPC_FAR *phBmpThumbnail) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IExtractImageVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IExtractImage __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IExtractImage __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IExtractImage __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetLocation )( 
            IExtractImage __RPC_FAR * This,
            /* [size_is][string][out] */ LPWSTR pszPathBuffer,
            /* [in] */ DWORD cch,
            /* [unique][out][in] */ DWORD __RPC_FAR *pdwPriority,
            /* [in] */ const SIZE __RPC_FAR *prgSize,
            /* [in] */ DWORD dwRecClrDepth,
            /* [out][in] */ DWORD __RPC_FAR *pdwFlags);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Extract )( 
            IExtractImage __RPC_FAR * This,
            /* [out] */ HBITMAP __RPC_FAR *phBmpThumbnail);
        
        END_INTERFACE
    } IExtractImageVtbl;

    interface IExtractImage
    {
        CONST_VTBL struct IExtractImageVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IExtractImage_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IExtractImage_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IExtractImage_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IExtractImage_GetLocation(This,pszPathBuffer,cch,pdwPriority,prgSize,dwRecClrDepth,pdwFlags)	\
    (This)->lpVtbl -> GetLocation(This,pszPathBuffer,cch,pdwPriority,prgSize,dwRecClrDepth,pdwFlags)

#define IExtractImage_Extract(This,phBmpThumbnail)	\
    (This)->lpVtbl -> Extract(This,phBmpThumbnail)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IExtractImage_GetLocation_Proxy( 
    IExtractImage __RPC_FAR * This,
    /* [size_is][string][out] */ LPWSTR pszPathBuffer,
    /* [in] */ DWORD cch,
    /* [unique][out][in] */ DWORD __RPC_FAR *pdwPriority,
    /* [in] */ const SIZE __RPC_FAR *prgSize,
    /* [in] */ DWORD dwRecClrDepth,
    /* [out][in] */ DWORD __RPC_FAR *pdwFlags);


void __RPC_STUB IExtractImage_GetLocation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IExtractImage_Extract_Proxy( 
    IExtractImage __RPC_FAR * This,
    /* [out] */ HBITMAP __RPC_FAR *phBmpThumbnail);


void __RPC_STUB IExtractImage_Extract_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IExtractImage_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0363 */
/* [local] */ 

typedef IExtractImage __RPC_FAR *LPEXTRACTIMAGE;

#endif
#if (_WIN32_IE >= 0x0500)


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0363_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0363_v0_0_s_ifspec;

#ifndef __IExtractImage2_INTERFACE_DEFINED__
#define __IExtractImage2_INTERFACE_DEFINED__

/* interface IExtractImage2 */
/* [unique][object][uuid] */ 


EXTERN_C const IID IID_IExtractImage2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("953BB1EE-93B4-11d1-98A3-00C04FB687DA")
    IExtractImage2 : public IExtractImage
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetDateStamp( 
            /* [out] */ FILETIME __RPC_FAR *pDateStamp) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IExtractImage2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IExtractImage2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IExtractImage2 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IExtractImage2 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetLocation )( 
            IExtractImage2 __RPC_FAR * This,
            /* [size_is][string][out] */ LPWSTR pszPathBuffer,
            /* [in] */ DWORD cch,
            /* [unique][out][in] */ DWORD __RPC_FAR *pdwPriority,
            /* [in] */ const SIZE __RPC_FAR *prgSize,
            /* [in] */ DWORD dwRecClrDepth,
            /* [out][in] */ DWORD __RPC_FAR *pdwFlags);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Extract )( 
            IExtractImage2 __RPC_FAR * This,
            /* [out] */ HBITMAP __RPC_FAR *phBmpThumbnail);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetDateStamp )( 
            IExtractImage2 __RPC_FAR * This,
            /* [out] */ FILETIME __RPC_FAR *pDateStamp);
        
        END_INTERFACE
    } IExtractImage2Vtbl;

    interface IExtractImage2
    {
        CONST_VTBL struct IExtractImage2Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IExtractImage2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IExtractImage2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IExtractImage2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IExtractImage2_GetLocation(This,pszPathBuffer,cch,pdwPriority,prgSize,dwRecClrDepth,pdwFlags)	\
    (This)->lpVtbl -> GetLocation(This,pszPathBuffer,cch,pdwPriority,prgSize,dwRecClrDepth,pdwFlags)

#define IExtractImage2_Extract(This,phBmpThumbnail)	\
    (This)->lpVtbl -> Extract(This,phBmpThumbnail)


#define IExtractImage2_GetDateStamp(This,pDateStamp)	\
    (This)->lpVtbl -> GetDateStamp(This,pDateStamp)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IExtractImage2_GetDateStamp_Proxy( 
    IExtractImage2 __RPC_FAR * This,
    /* [out] */ FILETIME __RPC_FAR *pDateStamp);


void __RPC_STUB IExtractImage2_GetDateStamp_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IExtractImage2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0364 */
/* [local] */ 

typedef IExtractImage2 __RPC_FAR *LPEXTRACTIMAGE2;



extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0364_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0364_v0_0_s_ifspec;

#ifndef __IThumbnailHandlerFactory_INTERFACE_DEFINED__
#define __IThumbnailHandlerFactory_INTERFACE_DEFINED__

/* interface IThumbnailHandlerFactory */
/* [unique][object][uuid] */ 


EXTERN_C const IID IID_IThumbnailHandlerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("e35b4b2e-00da-4bc1-9f13-38bc11f5d417")
    IThumbnailHandlerFactory : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetThumbnailHandler( 
            /* [in] */ PCUITEMID_CHILD pidlChild,
            /* [unique][in] */ IBindCtx __RPC_FAR *pbc,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IThumbnailHandlerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IThumbnailHandlerFactory __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IThumbnailHandlerFactory __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IThumbnailHandlerFactory __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetThumbnailHandler )( 
            IThumbnailHandlerFactory __RPC_FAR * This,
            /* [in] */ PCUITEMID_CHILD pidlChild,
            /* [unique][in] */ IBindCtx __RPC_FAR *pbc,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);
        
        END_INTERFACE
    } IThumbnailHandlerFactoryVtbl;

    interface IThumbnailHandlerFactory
    {
        CONST_VTBL struct IThumbnailHandlerFactoryVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IThumbnailHandlerFactory_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IThumbnailHandlerFactory_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IThumbnailHandlerFactory_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IThumbnailHandlerFactory_GetThumbnailHandler(This,pidlChild,pbc,riid,ppv)	\
    (This)->lpVtbl -> GetThumbnailHandler(This,pidlChild,pbc,riid,ppv)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IThumbnailHandlerFactory_GetThumbnailHandler_Proxy( 
    IThumbnailHandlerFactory __RPC_FAR * This,
    /* [in] */ PCUITEMID_CHILD pidlChild,
    /* [unique][in] */ IBindCtx __RPC_FAR *pbc,
    /* [in] */ REFIID riid,
    /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);


void __RPC_STUB IThumbnailHandlerFactory_GetThumbnailHandler_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IThumbnailHandlerFactory_INTERFACE_DEFINED__ */


#ifndef __IParentAndItem_INTERFACE_DEFINED__
#define __IParentAndItem_INTERFACE_DEFINED__

/* interface IParentAndItem */
/* [unique][object][uuid] */ 


EXTERN_C const IID IID_IParentAndItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("b3a4b685-b685-4805-99d9-5dead2873236")
    IParentAndItem : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetParentAndItem( 
            /* [unique][in] */ PCIDLIST_ABSOLUTE pidlParent,
            /* [unique][in] */ IShellFolder __RPC_FAR *psf,
            /* [in] */ PCUITEMID_CHILD pidlChild) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetParentAndItem( 
            /* [out] */ PIDLIST_ABSOLUTE __RPC_FAR *ppidlParent,
            /* [out] */ IShellFolder __RPC_FAR *__RPC_FAR *ppsf,
            /* [out] */ PITEMID_CHILD __RPC_FAR *ppidlChild) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IParentAndItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IParentAndItem __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IParentAndItem __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IParentAndItem __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetParentAndItem )( 
            IParentAndItem __RPC_FAR * This,
            /* [unique][in] */ PCIDLIST_ABSOLUTE pidlParent,
            /* [unique][in] */ IShellFolder __RPC_FAR *psf,
            /* [in] */ PCUITEMID_CHILD pidlChild);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetParentAndItem )( 
            IParentAndItem __RPC_FAR * This,
            /* [out] */ PIDLIST_ABSOLUTE __RPC_FAR *ppidlParent,
            /* [out] */ IShellFolder __RPC_FAR *__RPC_FAR *ppsf,
            /* [out] */ PITEMID_CHILD __RPC_FAR *ppidlChild);
        
        END_INTERFACE
    } IParentAndItemVtbl;

    interface IParentAndItem
    {
        CONST_VTBL struct IParentAndItemVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IParentAndItem_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IParentAndItem_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IParentAndItem_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IParentAndItem_SetParentAndItem(This,pidlParent,psf,pidlChild)	\
    (This)->lpVtbl -> SetParentAndItem(This,pidlParent,psf,pidlChild)

#define IParentAndItem_GetParentAndItem(This,ppidlParent,ppsf,ppidlChild)	\
    (This)->lpVtbl -> GetParentAndItem(This,ppidlParent,ppsf,ppidlChild)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IParentAndItem_SetParentAndItem_Proxy( 
    IParentAndItem __RPC_FAR * This,
    /* [unique][in] */ PCIDLIST_ABSOLUTE pidlParent,
    /* [unique][in] */ IShellFolder __RPC_FAR *psf,
    /* [in] */ PCUITEMID_CHILD pidlChild);


void __RPC_STUB IParentAndItem_SetParentAndItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IParentAndItem_GetParentAndItem_Proxy( 
    IParentAndItem __RPC_FAR * This,
    /* [out] */ PIDLIST_ABSOLUTE __RPC_FAR *ppidlParent,
    /* [out] */ IShellFolder __RPC_FAR *__RPC_FAR *ppsf,
    /* [out] */ PITEMID_CHILD __RPC_FAR *ppidlChild);


void __RPC_STUB IParentAndItem_GetParentAndItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IParentAndItem_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0366 */
/* [local] */ 

#endif


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0366_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0366_v0_0_s_ifspec;

#ifndef __IDockingWindow_INTERFACE_DEFINED__
#define __IDockingWindow_INTERFACE_DEFINED__

/* interface IDockingWindow */
/* [object][uuid] */ 


EXTERN_C const IID IID_IDockingWindow;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("012dd920-7b26-11d0-8ca9-00a0c92dbfe8")
    IDockingWindow : public IOleWindow
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE ShowDW( 
            /* [in] */ BOOL fShow) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CloseDW( 
            /* [in] */ DWORD dwReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ResizeBorderDW( 
            /* [in] */ LPCRECT prcBorder,
            /* [in] */ IUnknown __RPC_FAR *punkToolbarSite,
            /* [in] */ BOOL fReserved) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDockingWindowVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IDockingWindow __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IDockingWindow __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IDockingWindow __RPC_FAR * This);
        
        /* [input_sync] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetWindow )( 
            IDockingWindow __RPC_FAR * This,
            /* [out] */ HWND __RPC_FAR *phwnd);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ContextSensitiveHelp )( 
            IDockingWindow __RPC_FAR * This,
            /* [in] */ BOOL fEnterMode);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ShowDW )( 
            IDockingWindow __RPC_FAR * This,
            /* [in] */ BOOL fShow);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CloseDW )( 
            IDockingWindow __RPC_FAR * This,
            /* [in] */ DWORD dwReserved);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ResizeBorderDW )( 
            IDockingWindow __RPC_FAR * This,
            /* [in] */ LPCRECT prcBorder,
            /* [in] */ IUnknown __RPC_FAR *punkToolbarSite,
            /* [in] */ BOOL fReserved);
        
        END_INTERFACE
    } IDockingWindowVtbl;

    interface IDockingWindow
    {
        CONST_VTBL struct IDockingWindowVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDockingWindow_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IDockingWindow_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IDockingWindow_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IDockingWindow_GetWindow(This,phwnd)	\
    (This)->lpVtbl -> GetWindow(This,phwnd)

#define IDockingWindow_ContextSensitiveHelp(This,fEnterMode)	\
    (This)->lpVtbl -> ContextSensitiveHelp(This,fEnterMode)


#define IDockingWindow_ShowDW(This,fShow)	\
    (This)->lpVtbl -> ShowDW(This,fShow)

#define IDockingWindow_CloseDW(This,dwReserved)	\
    (This)->lpVtbl -> CloseDW(This,dwReserved)

#define IDockingWindow_ResizeBorderDW(This,prcBorder,punkToolbarSite,fReserved)	\
    (This)->lpVtbl -> ResizeBorderDW(This,prcBorder,punkToolbarSite,fReserved)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IDockingWindow_ShowDW_Proxy( 
    IDockingWindow __RPC_FAR * This,
    /* [in] */ BOOL fShow);


void __RPC_STUB IDockingWindow_ShowDW_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IDockingWindow_CloseDW_Proxy( 
    IDockingWindow __RPC_FAR * This,
    /* [in] */ DWORD dwReserved);


void __RPC_STUB IDockingWindow_CloseDW_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IDockingWindow_ResizeBorderDW_Proxy( 
    IDockingWindow __RPC_FAR * This,
    /* [in] */ LPCRECT prcBorder,
    /* [in] */ IUnknown __RPC_FAR *punkToolbarSite,
    /* [in] */ BOOL fReserved);


void __RPC_STUB IDockingWindow_ResizeBorderDW_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IDockingWindow_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0367 */
/* [local] */ 

#define DBIM_MINSIZE    0x0001
#define DBIM_MAXSIZE    0x0002
#define DBIM_INTEGRAL   0x0004
#define DBIM_ACTUAL     0x0008
#define DBIM_TITLE      0x0010
#define DBIM_MODEFLAGS  0x0020
#define DBIM_BKCOLOR    0x0040
#include <pshpack8.h>
typedef struct tagDESKBANDINFO
    {
    DWORD dwMask;
    POINTL ptMinSize;
    POINTL ptMaxSize;
    POINTL ptIntegral;
    POINTL ptActual;
    WCHAR wszTitle[ 256 ];
    DWORD dwModeFlags;
    COLORREF crBkgnd;
    }	DESKBANDINFO;

#include <poppack.h>
#define DBIMF_NORMAL            0x0000
#define DBIMF_FIXED             0x0001
#define DBIMF_FIXEDBMP          0x0004   // a fixed background bitmap (if supported)
#define DBIMF_VARIABLEHEIGHT    0x0008
#define DBIMF_UNDELETEABLE      0x0010
#define DBIMF_DEBOSSED          0x0020
#define DBIMF_BKCOLOR           0x0040
#define DBIMF_USECHEVRON        0x0080
#define DBIMF_BREAK             0x0100
#define DBIMF_ADDTOFRONT        0x0200
#define DBIMF_TOPALIGN          0x0400
#if (NTDDI_VERSION >= NTDDI_LONGHORN)
#define DBIMF_NOGRIPPER         0x0800
#define DBIMF_ALWAYSGRIPPER     0x1000
#define DBIMF_NOMARGINS         0x2000
#endif  // NTDDI_LONGHORN
#define DBIF_VIEWMODE_NORMAL         0x0000
#define DBIF_VIEWMODE_VERTICAL       0x0001
#define DBIF_VIEWMODE_FLOATING       0x0002
#define DBIF_VIEWMODE_TRANSPARENT    0x0004

enum tagDESKBANDCID
    {	DBID_BANDINFOCHANGED	= 0,
	DBID_SHOWONLY	= 1,
	DBID_MAXIMIZEBAND	= 2,
	DBID_PUSHCHEVRON	= 3,
	DBID_DELAYINIT	= 4,
	DBID_FINISHINIT	= 5,
	DBID_SETWINDOWTHEME	= 6,
	DBID_PERMITAUTOHIDE	= 7
    };
#define DBPC_SELECTFIRST    (DWORD)-1
#define DBPC_SELECTLAST     (DWORD)-2
#define CGID_DeskBand IID_IDeskBand


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0367_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0367_v0_0_s_ifspec;

#ifndef __IDeskBand_INTERFACE_DEFINED__
#define __IDeskBand_INTERFACE_DEFINED__

/* interface IDeskBand */
/* [object][uuid] */ 


EXTERN_C const IID IID_IDeskBand;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("EB0FE172-1A3A-11D0-89B3-00A0C90A90AC")
    IDeskBand : public IDockingWindow
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetBandInfo( 
            /* [in] */ DWORD dwBandID,
            /* [in] */ DWORD dwViewMode,
            /* [out][in] */ DESKBANDINFO __RPC_FAR *pdbi) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDeskBandVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IDeskBand __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IDeskBand __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IDeskBand __RPC_FAR * This);
        
        /* [input_sync] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetWindow )( 
            IDeskBand __RPC_FAR * This,
            /* [out] */ HWND __RPC_FAR *phwnd);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ContextSensitiveHelp )( 
            IDeskBand __RPC_FAR * This,
            /* [in] */ BOOL fEnterMode);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ShowDW )( 
            IDeskBand __RPC_FAR * This,
            /* [in] */ BOOL fShow);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CloseDW )( 
            IDeskBand __RPC_FAR * This,
            /* [in] */ DWORD dwReserved);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ResizeBorderDW )( 
            IDeskBand __RPC_FAR * This,
            /* [in] */ LPCRECT prcBorder,
            /* [in] */ IUnknown __RPC_FAR *punkToolbarSite,
            /* [in] */ BOOL fReserved);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetBandInfo )( 
            IDeskBand __RPC_FAR * This,
            /* [in] */ DWORD dwBandID,
            /* [in] */ DWORD dwViewMode,
            /* [out][in] */ DESKBANDINFO __RPC_FAR *pdbi);
        
        END_INTERFACE
    } IDeskBandVtbl;

    interface IDeskBand
    {
        CONST_VTBL struct IDeskBandVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDeskBand_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IDeskBand_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IDeskBand_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IDeskBand_GetWindow(This,phwnd)	\
    (This)->lpVtbl -> GetWindow(This,phwnd)

#define IDeskBand_ContextSensitiveHelp(This,fEnterMode)	\
    (This)->lpVtbl -> ContextSensitiveHelp(This,fEnterMode)


#define IDeskBand_ShowDW(This,fShow)	\
    (This)->lpVtbl -> ShowDW(This,fShow)

#define IDeskBand_CloseDW(This,dwReserved)	\
    (This)->lpVtbl -> CloseDW(This,dwReserved)

#define IDeskBand_ResizeBorderDW(This,prcBorder,punkToolbarSite,fReserved)	\
    (This)->lpVtbl -> ResizeBorderDW(This,prcBorder,punkToolbarSite,fReserved)


#define IDeskBand_GetBandInfo(This,dwBandID,dwViewMode,pdbi)	\
    (This)->lpVtbl -> GetBandInfo(This,dwBandID,dwViewMode,pdbi)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IDeskBand_GetBandInfo_Proxy( 
    IDeskBand __RPC_FAR * This,
    /* [in] */ DWORD dwBandID,
    /* [in] */ DWORD dwViewMode,
    /* [out][in] */ DESKBANDINFO __RPC_FAR *pdbi);


void __RPC_STUB IDeskBand_GetBandInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IDeskBand_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0368 */
/* [local] */ 

#if (NTDDI_VERSION >= NTDDI_LONGHORN)


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0368_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0368_v0_0_s_ifspec;

#ifndef __IDeskBandInfo_INTERFACE_DEFINED__
#define __IDeskBandInfo_INTERFACE_DEFINED__

/* interface IDeskBandInfo */
/* [object][uuid] */ 


EXTERN_C const IID IID_IDeskBandInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("77E425FC-CBF9-4307-BA6A-BB5727745661")
    IDeskBandInfo : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetDefaultBandWidth( 
            /* [in] */ DWORD dwBandID,
            /* [in] */ DWORD dwViewMode,
            /* [out] */ int __RPC_FAR *pnWidth) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDeskBandInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IDeskBandInfo __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IDeskBandInfo __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IDeskBandInfo __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetDefaultBandWidth )( 
            IDeskBandInfo __RPC_FAR * This,
            /* [in] */ DWORD dwBandID,
            /* [in] */ DWORD dwViewMode,
            /* [out] */ int __RPC_FAR *pnWidth);
        
        END_INTERFACE
    } IDeskBandInfoVtbl;

    interface IDeskBandInfo
    {
        CONST_VTBL struct IDeskBandInfoVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDeskBandInfo_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IDeskBandInfo_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IDeskBandInfo_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IDeskBandInfo_GetDefaultBandWidth(This,dwBandID,dwViewMode,pnWidth)	\
    (This)->lpVtbl -> GetDefaultBandWidth(This,dwBandID,dwViewMode,pnWidth)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IDeskBandInfo_GetDefaultBandWidth_Proxy( 
    IDeskBandInfo __RPC_FAR * This,
    /* [in] */ DWORD dwBandID,
    /* [in] */ DWORD dwViewMode,
    /* [out] */ int __RPC_FAR *pnWidth);


void __RPC_STUB IDeskBandInfo_GetDefaultBandWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IDeskBandInfo_INTERFACE_DEFINED__ */


#ifndef __IDeskBand2_INTERFACE_DEFINED__
#define __IDeskBand2_INTERFACE_DEFINED__

/* interface IDeskBand2 */
/* [object][uuid] */ 


EXTERN_C const IID IID_IDeskBand2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("79D16DE4-ABEE-4021-8D9D-9169B261D657")
    IDeskBand2 : public IDeskBand
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE CanRenderComposited( 
            /* [out] */ BOOL __RPC_FAR *pfCanRenderComposited) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetCompositionState( 
            /* [in] */ BOOL fCompositionEnabled) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCompositionState( 
            /* [out] */ BOOL __RPC_FAR *pfCompositionEnabled) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDeskBand2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IDeskBand2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IDeskBand2 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IDeskBand2 __RPC_FAR * This);
        
        /* [input_sync] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetWindow )( 
            IDeskBand2 __RPC_FAR * This,
            /* [out] */ HWND __RPC_FAR *phwnd);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ContextSensitiveHelp )( 
            IDeskBand2 __RPC_FAR * This,
            /* [in] */ BOOL fEnterMode);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ShowDW )( 
            IDeskBand2 __RPC_FAR * This,
            /* [in] */ BOOL fShow);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CloseDW )( 
            IDeskBand2 __RPC_FAR * This,
            /* [in] */ DWORD dwReserved);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ResizeBorderDW )( 
            IDeskBand2 __RPC_FAR * This,
            /* [in] */ LPCRECT prcBorder,
            /* [in] */ IUnknown __RPC_FAR *punkToolbarSite,
            /* [in] */ BOOL fReserved);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetBandInfo )( 
            IDeskBand2 __RPC_FAR * This,
            /* [in] */ DWORD dwBandID,
            /* [in] */ DWORD dwViewMode,
            /* [out][in] */ DESKBANDINFO __RPC_FAR *pdbi);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CanRenderComposited )( 
            IDeskBand2 __RPC_FAR * This,
            /* [out] */ BOOL __RPC_FAR *pfCanRenderComposited);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetCompositionState )( 
            IDeskBand2 __RPC_FAR * This,
            /* [in] */ BOOL fCompositionEnabled);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCompositionState )( 
            IDeskBand2 __RPC_FAR * This,
            /* [out] */ BOOL __RPC_FAR *pfCompositionEnabled);
        
        END_INTERFACE
    } IDeskBand2Vtbl;

    interface IDeskBand2
    {
        CONST_VTBL struct IDeskBand2Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDeskBand2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IDeskBand2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IDeskBand2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IDeskBand2_GetWindow(This,phwnd)	\
    (This)->lpVtbl -> GetWindow(This,phwnd)

#define IDeskBand2_ContextSensitiveHelp(This,fEnterMode)	\
    (This)->lpVtbl -> ContextSensitiveHelp(This,fEnterMode)


#define IDeskBand2_ShowDW(This,fShow)	\
    (This)->lpVtbl -> ShowDW(This,fShow)

#define IDeskBand2_CloseDW(This,dwReserved)	\
    (This)->lpVtbl -> CloseDW(This,dwReserved)

#define IDeskBand2_ResizeBorderDW(This,prcBorder,punkToolbarSite,fReserved)	\
    (This)->lpVtbl -> ResizeBorderDW(This,prcBorder,punkToolbarSite,fReserved)


#define IDeskBand2_GetBandInfo(This,dwBandID,dwViewMode,pdbi)	\
    (This)->lpVtbl -> GetBandInfo(This,dwBandID,dwViewMode,pdbi)


#define IDeskBand2_CanRenderComposited(This,pfCanRenderComposited)	\
    (This)->lpVtbl -> CanRenderComposited(This,pfCanRenderComposited)

#define IDeskBand2_SetCompositionState(This,fCompositionEnabled)	\
    (This)->lpVtbl -> SetCompositionState(This,fCompositionEnabled)

#define IDeskBand2_GetCompositionState(This,pfCompositionEnabled)	\
    (This)->lpVtbl -> GetCompositionState(This,pfCompositionEnabled)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IDeskBand2_CanRenderComposited_Proxy( 
    IDeskBand2 __RPC_FAR * This,
    /* [out] */ BOOL __RPC_FAR *pfCanRenderComposited);


void __RPC_STUB IDeskBand2_CanRenderComposited_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IDeskBand2_SetCompositionState_Proxy( 
    IDeskBand2 __RPC_FAR * This,
    /* [in] */ BOOL fCompositionEnabled);


void __RPC_STUB IDeskBand2_SetCompositionState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IDeskBand2_GetCompositionState_Proxy( 
    IDeskBand2 __RPC_FAR * This,
    /* [out] */ BOOL __RPC_FAR *pfCompositionEnabled);


void __RPC_STUB IDeskBand2_GetCompositionState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IDeskBand2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0370 */
/* [local] */ 

#endif  // NTDDI_LONGHORN


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0370_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0370_v0_0_s_ifspec;

#ifndef __ITaskbarList_INTERFACE_DEFINED__
#define __ITaskbarList_INTERFACE_DEFINED__

/* interface ITaskbarList */
/* [object][uuid] */ 


EXTERN_C const IID IID_ITaskbarList;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("56FDF342-FD6D-11d0-958A-006097C9A090")
    ITaskbarList : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE HrInit( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddTab( 
            /* [in] */ HWND hwnd) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteTab( 
            /* [in] */ HWND hwnd) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ActivateTab( 
            /* [in] */ HWND hwnd) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetActiveAlt( 
            /* [in] */ HWND hwnd) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ITaskbarListVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            ITaskbarList __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            ITaskbarList __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            ITaskbarList __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *HrInit )( 
            ITaskbarList __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AddTab )( 
            ITaskbarList __RPC_FAR * This,
            /* [in] */ HWND hwnd);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DeleteTab )( 
            ITaskbarList __RPC_FAR * This,
            /* [in] */ HWND hwnd);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ActivateTab )( 
            ITaskbarList __RPC_FAR * This,
            /* [in] */ HWND hwnd);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetActiveAlt )( 
            ITaskbarList __RPC_FAR * This,
            /* [in] */ HWND hwnd);
        
        END_INTERFACE
    } ITaskbarListVtbl;

    interface ITaskbarList
    {
        CONST_VTBL struct ITaskbarListVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ITaskbarList_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define ITaskbarList_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define ITaskbarList_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define ITaskbarList_HrInit(This)	\
    (This)->lpVtbl -> HrInit(This)

#define ITaskbarList_AddTab(This,hwnd)	\
    (This)->lpVtbl -> AddTab(This,hwnd)

#define ITaskbarList_DeleteTab(This,hwnd)	\
    (This)->lpVtbl -> DeleteTab(This,hwnd)

#define ITaskbarList_ActivateTab(This,hwnd)	\
    (This)->lpVtbl -> ActivateTab(This,hwnd)

#define ITaskbarList_SetActiveAlt(This,hwnd)	\
    (This)->lpVtbl -> SetActiveAlt(This,hwnd)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE ITaskbarList_HrInit_Proxy( 
    ITaskbarList __RPC_FAR * This);


void __RPC_STUB ITaskbarList_HrInit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ITaskbarList_AddTab_Proxy( 
    ITaskbarList __RPC_FAR * This,
    /* [in] */ HWND hwnd);


void __RPC_STUB ITaskbarList_AddTab_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ITaskbarList_DeleteTab_Proxy( 
    ITaskbarList __RPC_FAR * This,
    /* [in] */ HWND hwnd);


void __RPC_STUB ITaskbarList_DeleteTab_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ITaskbarList_ActivateTab_Proxy( 
    ITaskbarList __RPC_FAR * This,
    /* [in] */ HWND hwnd);


void __RPC_STUB ITaskbarList_ActivateTab_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ITaskbarList_SetActiveAlt_Proxy( 
    ITaskbarList __RPC_FAR * This,
    /* [in] */ HWND hwnd);


void __RPC_STUB ITaskbarList_SetActiveAlt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __ITaskbarList_INTERFACE_DEFINED__ */


#ifndef __ITaskbarList2_INTERFACE_DEFINED__
#define __ITaskbarList2_INTERFACE_DEFINED__

/* interface ITaskbarList2 */
/* [object][uuid] */ 


EXTERN_C const IID IID_ITaskbarList2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("602D4995-B13A-429b-A66E-1935E44F4317")
    ITaskbarList2 : public ITaskbarList
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE MarkFullscreenWindow( 
            /* [in] */ HWND hwnd,
            /* [in] */ BOOL fFullscreen) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ITaskbarList2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            ITaskbarList2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            ITaskbarList2 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            ITaskbarList2 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *HrInit )( 
            ITaskbarList2 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AddTab )( 
            ITaskbarList2 __RPC_FAR * This,
            /* [in] */ HWND hwnd);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DeleteTab )( 
            ITaskbarList2 __RPC_FAR * This,
            /* [in] */ HWND hwnd);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ActivateTab )( 
            ITaskbarList2 __RPC_FAR * This,
            /* [in] */ HWND hwnd);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetActiveAlt )( 
            ITaskbarList2 __RPC_FAR * This,
            /* [in] */ HWND hwnd);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *MarkFullscreenWindow )( 
            ITaskbarList2 __RPC_FAR * This,
            /* [in] */ HWND hwnd,
            /* [in] */ BOOL fFullscreen);
        
        END_INTERFACE
    } ITaskbarList2Vtbl;

    interface ITaskbarList2
    {
        CONST_VTBL struct ITaskbarList2Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ITaskbarList2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define ITaskbarList2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define ITaskbarList2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define ITaskbarList2_HrInit(This)	\
    (This)->lpVtbl -> HrInit(This)

#define ITaskbarList2_AddTab(This,hwnd)	\
    (This)->lpVtbl -> AddTab(This,hwnd)

#define ITaskbarList2_DeleteTab(This,hwnd)	\
    (This)->lpVtbl -> DeleteTab(This,hwnd)

#define ITaskbarList2_ActivateTab(This,hwnd)	\
    (This)->lpVtbl -> ActivateTab(This,hwnd)

#define ITaskbarList2_SetActiveAlt(This,hwnd)	\
    (This)->lpVtbl -> SetActiveAlt(This,hwnd)


#define ITaskbarList2_MarkFullscreenWindow(This,hwnd,fFullscreen)	\
    (This)->lpVtbl -> MarkFullscreenWindow(This,hwnd,fFullscreen)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE ITaskbarList2_MarkFullscreenWindow_Proxy( 
    ITaskbarList2 __RPC_FAR * This,
    /* [in] */ HWND hwnd,
    /* [in] */ BOOL fFullscreen);


void __RPC_STUB ITaskbarList2_MarkFullscreenWindow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __ITaskbarList2_INTERFACE_DEFINED__ */


#ifndef __IStartMenuPinnedList_INTERFACE_DEFINED__
#define __IStartMenuPinnedList_INTERFACE_DEFINED__

/* interface IStartMenuPinnedList */
/* [object][uuid] */ 


EXTERN_C const IID IID_IStartMenuPinnedList;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4CD19ADA-25A5-4A32-B3B7-347BEE5BE36B")
    IStartMenuPinnedList : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE RemoveFromList( 
            /* [in] */ IShellItem __RPC_FAR *pitem) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IStartMenuPinnedListVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IStartMenuPinnedList __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IStartMenuPinnedList __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IStartMenuPinnedList __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RemoveFromList )( 
            IStartMenuPinnedList __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *pitem);
        
        END_INTERFACE
    } IStartMenuPinnedListVtbl;

    interface IStartMenuPinnedList
    {
        CONST_VTBL struct IStartMenuPinnedListVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IStartMenuPinnedList_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IStartMenuPinnedList_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IStartMenuPinnedList_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IStartMenuPinnedList_RemoveFromList(This,pitem)	\
    (This)->lpVtbl -> RemoveFromList(This,pitem)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IStartMenuPinnedList_RemoveFromList_Proxy( 
    IStartMenuPinnedList __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *pitem);


void __RPC_STUB IStartMenuPinnedList_RemoveFromList_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IStartMenuPinnedList_INTERFACE_DEFINED__ */


#ifndef __ICDBurn_INTERFACE_DEFINED__
#define __ICDBurn_INTERFACE_DEFINED__

/* interface ICDBurn */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_ICDBurn;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3d73a659-e5d0-4d42-afc0-5121ba425c8d")
    ICDBurn : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetRecorderDriveLetter( 
            /* [size_is][string][out] */ LPWSTR pszDrive,
            /* [in] */ UINT cch) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Burn( 
            /* [in] */ HWND hwnd) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE HasRecordableDrive( 
            /* [out] */ BOOL __RPC_FAR *pfHasRecorder) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ICDBurnVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            ICDBurn __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            ICDBurn __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            ICDBurn __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetRecorderDriveLetter )( 
            ICDBurn __RPC_FAR * This,
            /* [size_is][string][out] */ LPWSTR pszDrive,
            /* [in] */ UINT cch);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Burn )( 
            ICDBurn __RPC_FAR * This,
            /* [in] */ HWND hwnd);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *HasRecordableDrive )( 
            ICDBurn __RPC_FAR * This,
            /* [out] */ BOOL __RPC_FAR *pfHasRecorder);
        
        END_INTERFACE
    } ICDBurnVtbl;

    interface ICDBurn
    {
        CONST_VTBL struct ICDBurnVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICDBurn_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define ICDBurn_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define ICDBurn_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define ICDBurn_GetRecorderDriveLetter(This,pszDrive,cch)	\
    (This)->lpVtbl -> GetRecorderDriveLetter(This,pszDrive,cch)

#define ICDBurn_Burn(This,hwnd)	\
    (This)->lpVtbl -> Burn(This,hwnd)

#define ICDBurn_HasRecordableDrive(This,pfHasRecorder)	\
    (This)->lpVtbl -> HasRecordableDrive(This,pfHasRecorder)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE ICDBurn_GetRecorderDriveLetter_Proxy( 
    ICDBurn __RPC_FAR * This,
    /* [size_is][string][out] */ LPWSTR pszDrive,
    /* [in] */ UINT cch);


void __RPC_STUB ICDBurn_GetRecorderDriveLetter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ICDBurn_Burn_Proxy( 
    ICDBurn __RPC_FAR * This,
    /* [in] */ HWND hwnd);


void __RPC_STUB ICDBurn_Burn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ICDBurn_HasRecordableDrive_Proxy( 
    ICDBurn __RPC_FAR * This,
    /* [out] */ BOOL __RPC_FAR *pfHasRecorder);


void __RPC_STUB ICDBurn_HasRecordableDrive_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __ICDBurn_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0374 */
/* [local] */ 

#define IDD_WIZEXTN_FIRST    0x5000
#define IDD_WIZEXTN_LAST     0x5100


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0374_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0374_v0_0_s_ifspec;

#ifndef __IWizardSite_INTERFACE_DEFINED__
#define __IWizardSite_INTERFACE_DEFINED__

/* interface IWizardSite */
/* [object][local][helpstring][uuid] */ 


EXTERN_C const IID IID_IWizardSite;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("88960f5b-422f-4e7b-8013-73415381c3c3")
    IWizardSite : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetPreviousPage( 
            /* [out] */ HPROPSHEETPAGE __RPC_FAR *phpage) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNextPage( 
            /* [out] */ HPROPSHEETPAGE __RPC_FAR *phpage) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCancelledPage( 
            /* [out] */ HPROPSHEETPAGE __RPC_FAR *phpage) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IWizardSiteVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IWizardSite __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IWizardSite __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IWizardSite __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetPreviousPage )( 
            IWizardSite __RPC_FAR * This,
            /* [out] */ HPROPSHEETPAGE __RPC_FAR *phpage);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetNextPage )( 
            IWizardSite __RPC_FAR * This,
            /* [out] */ HPROPSHEETPAGE __RPC_FAR *phpage);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCancelledPage )( 
            IWizardSite __RPC_FAR * This,
            /* [out] */ HPROPSHEETPAGE __RPC_FAR *phpage);
        
        END_INTERFACE
    } IWizardSiteVtbl;

    interface IWizardSite
    {
        CONST_VTBL struct IWizardSiteVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IWizardSite_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IWizardSite_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IWizardSite_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IWizardSite_GetPreviousPage(This,phpage)	\
    (This)->lpVtbl -> GetPreviousPage(This,phpage)

#define IWizardSite_GetNextPage(This,phpage)	\
    (This)->lpVtbl -> GetNextPage(This,phpage)

#define IWizardSite_GetCancelledPage(This,phpage)	\
    (This)->lpVtbl -> GetCancelledPage(This,phpage)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IWizardSite_GetPreviousPage_Proxy( 
    IWizardSite __RPC_FAR * This,
    /* [out] */ HPROPSHEETPAGE __RPC_FAR *phpage);


void __RPC_STUB IWizardSite_GetPreviousPage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IWizardSite_GetNextPage_Proxy( 
    IWizardSite __RPC_FAR * This,
    /* [out] */ HPROPSHEETPAGE __RPC_FAR *phpage);


void __RPC_STUB IWizardSite_GetNextPage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IWizardSite_GetCancelledPage_Proxy( 
    IWizardSite __RPC_FAR * This,
    /* [out] */ HPROPSHEETPAGE __RPC_FAR *phpage);


void __RPC_STUB IWizardSite_GetCancelledPage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IWizardSite_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0375 */
/* [local] */ 

#define SID_WizardSite IID_IWizardSite


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0375_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0375_v0_0_s_ifspec;

#ifndef __IWizardExtension_INTERFACE_DEFINED__
#define __IWizardExtension_INTERFACE_DEFINED__

/* interface IWizardExtension */
/* [object][local][helpstring][uuid] */ 


EXTERN_C const IID IID_IWizardExtension;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c02ea696-86cc-491e-9b23-74394a0444a8")
    IWizardExtension : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE AddPages( 
            /* [size_is][out][in] */ HPROPSHEETPAGE __RPC_FAR *aPages,
            /* [in] */ UINT cPages,
            /* [out] */ UINT __RPC_FAR *pnPagesAdded) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFirstPage( 
            /* [out] */ HPROPSHEETPAGE __RPC_FAR *phpage) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLastPage( 
            /* [out] */ HPROPSHEETPAGE __RPC_FAR *phpage) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IWizardExtensionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IWizardExtension __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IWizardExtension __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IWizardExtension __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AddPages )( 
            IWizardExtension __RPC_FAR * This,
            /* [size_is][out][in] */ HPROPSHEETPAGE __RPC_FAR *aPages,
            /* [in] */ UINT cPages,
            /* [out] */ UINT __RPC_FAR *pnPagesAdded);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFirstPage )( 
            IWizardExtension __RPC_FAR * This,
            /* [out] */ HPROPSHEETPAGE __RPC_FAR *phpage);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetLastPage )( 
            IWizardExtension __RPC_FAR * This,
            /* [out] */ HPROPSHEETPAGE __RPC_FAR *phpage);
        
        END_INTERFACE
    } IWizardExtensionVtbl;

    interface IWizardExtension
    {
        CONST_VTBL struct IWizardExtensionVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IWizardExtension_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IWizardExtension_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IWizardExtension_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IWizardExtension_AddPages(This,aPages,cPages,pnPagesAdded)	\
    (This)->lpVtbl -> AddPages(This,aPages,cPages,pnPagesAdded)

#define IWizardExtension_GetFirstPage(This,phpage)	\
    (This)->lpVtbl -> GetFirstPage(This,phpage)

#define IWizardExtension_GetLastPage(This,phpage)	\
    (This)->lpVtbl -> GetLastPage(This,phpage)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IWizardExtension_AddPages_Proxy( 
    IWizardExtension __RPC_FAR * This,
    /* [size_is][out][in] */ HPROPSHEETPAGE __RPC_FAR *aPages,
    /* [in] */ UINT cPages,
    /* [out] */ UINT __RPC_FAR *pnPagesAdded);


void __RPC_STUB IWizardExtension_AddPages_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IWizardExtension_GetFirstPage_Proxy( 
    IWizardExtension __RPC_FAR * This,
    /* [out] */ HPROPSHEETPAGE __RPC_FAR *phpage);


void __RPC_STUB IWizardExtension_GetFirstPage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IWizardExtension_GetLastPage_Proxy( 
    IWizardExtension __RPC_FAR * This,
    /* [out] */ HPROPSHEETPAGE __RPC_FAR *phpage);


void __RPC_STUB IWizardExtension_GetLastPage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IWizardExtension_INTERFACE_DEFINED__ */


#ifndef __IWebWizardExtension_INTERFACE_DEFINED__
#define __IWebWizardExtension_INTERFACE_DEFINED__

/* interface IWebWizardExtension */
/* [object][unique][local][uuid][helpstring] */ 


EXTERN_C const IID IID_IWebWizardExtension;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0e6b3f66-98d1-48c0-a222-fbde74e2fbc5")
    IWebWizardExtension : public IWizardExtension
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetInitialURL( 
            /* [string][in] */ LPCWSTR pszURL) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetErrorURL( 
            /* [string][in] */ LPCWSTR pszErrorURL) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IWebWizardExtensionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IWebWizardExtension __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IWebWizardExtension __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IWebWizardExtension __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AddPages )( 
            IWebWizardExtension __RPC_FAR * This,
            /* [size_is][out][in] */ HPROPSHEETPAGE __RPC_FAR *aPages,
            /* [in] */ UINT cPages,
            /* [out] */ UINT __RPC_FAR *pnPagesAdded);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFirstPage )( 
            IWebWizardExtension __RPC_FAR * This,
            /* [out] */ HPROPSHEETPAGE __RPC_FAR *phpage);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetLastPage )( 
            IWebWizardExtension __RPC_FAR * This,
            /* [out] */ HPROPSHEETPAGE __RPC_FAR *phpage);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetInitialURL )( 
            IWebWizardExtension __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszURL);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetErrorURL )( 
            IWebWizardExtension __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszErrorURL);
        
        END_INTERFACE
    } IWebWizardExtensionVtbl;

    interface IWebWizardExtension
    {
        CONST_VTBL struct IWebWizardExtensionVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IWebWizardExtension_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IWebWizardExtension_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IWebWizardExtension_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IWebWizardExtension_AddPages(This,aPages,cPages,pnPagesAdded)	\
    (This)->lpVtbl -> AddPages(This,aPages,cPages,pnPagesAdded)

#define IWebWizardExtension_GetFirstPage(This,phpage)	\
    (This)->lpVtbl -> GetFirstPage(This,phpage)

#define IWebWizardExtension_GetLastPage(This,phpage)	\
    (This)->lpVtbl -> GetLastPage(This,phpage)


#define IWebWizardExtension_SetInitialURL(This,pszURL)	\
    (This)->lpVtbl -> SetInitialURL(This,pszURL)

#define IWebWizardExtension_SetErrorURL(This,pszErrorURL)	\
    (This)->lpVtbl -> SetErrorURL(This,pszErrorURL)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IWebWizardExtension_SetInitialURL_Proxy( 
    IWebWizardExtension __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszURL);


void __RPC_STUB IWebWizardExtension_SetInitialURL_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IWebWizardExtension_SetErrorURL_Proxy( 
    IWebWizardExtension __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszErrorURL);


void __RPC_STUB IWebWizardExtension_SetErrorURL_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IWebWizardExtension_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0377 */
/* [local] */ 

#define SID_WebWizardHost IID_IWebWizardExtension
#define SHPWHF_NORECOMPRESS             0x00000001  // don't allow/prompt for recompress of streams
#define SHPWHF_NONETPLACECREATE         0x00000002  // don't create a network place when transfer is complete
#define SHPWHF_NOFILESELECTOR           0x00000004  // don't show the file selector
#define SHPWHF_USEMRU                   0x00000008  // For OPW.  Use the Most-Recently-Used Print Provider
#if (NTDDI_VERSION >= NTDDI_LONGHORN)
#define SHPWHF_ANYLOCATION              0x00000100  // allow publishing to any location
#endif  // NTDDI_LONGHORN
#define SHPWHF_VALIDATEVIAWEBFOLDERS    0x00010000  // enable web folders to validate network places (ANP support)


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0377_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0377_v0_0_s_ifspec;

#ifndef __IPublishingWizard_INTERFACE_DEFINED__
#define __IPublishingWizard_INTERFACE_DEFINED__

/* interface IPublishingWizard */
/* [object][unique][local][uuid][helpstring] */ 


EXTERN_C const IID IID_IPublishingWizard;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("aa9198bb-ccec-472d-beed-19a4f6733f7a")
    IPublishingWizard : public IWizardExtension
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Initialize( 
            /* [unique][in] */ IDataObject __RPC_FAR *pdo,
            /* [in] */ DWORD dwOptions,
            /* [string][in] */ LPCWSTR pszServiceScope) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTransferManifest( 
            /* [out] */ HRESULT __RPC_FAR *phrFromTransfer,
            /* [out] */ IXMLDOMDocument __RPC_FAR *__RPC_FAR *pdocManifest) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IPublishingWizardVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IPublishingWizard __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IPublishingWizard __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IPublishingWizard __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AddPages )( 
            IPublishingWizard __RPC_FAR * This,
            /* [size_is][out][in] */ HPROPSHEETPAGE __RPC_FAR *aPages,
            /* [in] */ UINT cPages,
            /* [out] */ UINT __RPC_FAR *pnPagesAdded);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFirstPage )( 
            IPublishingWizard __RPC_FAR * This,
            /* [out] */ HPROPSHEETPAGE __RPC_FAR *phpage);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetLastPage )( 
            IPublishingWizard __RPC_FAR * This,
            /* [out] */ HPROPSHEETPAGE __RPC_FAR *phpage);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Initialize )( 
            IPublishingWizard __RPC_FAR * This,
            /* [unique][in] */ IDataObject __RPC_FAR *pdo,
            /* [in] */ DWORD dwOptions,
            /* [string][in] */ LPCWSTR pszServiceScope);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTransferManifest )( 
            IPublishingWizard __RPC_FAR * This,
            /* [out] */ HRESULT __RPC_FAR *phrFromTransfer,
            /* [out] */ IXMLDOMDocument __RPC_FAR *__RPC_FAR *pdocManifest);
        
        END_INTERFACE
    } IPublishingWizardVtbl;

    interface IPublishingWizard
    {
        CONST_VTBL struct IPublishingWizardVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IPublishingWizard_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IPublishingWizard_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IPublishingWizard_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IPublishingWizard_AddPages(This,aPages,cPages,pnPagesAdded)	\
    (This)->lpVtbl -> AddPages(This,aPages,cPages,pnPagesAdded)

#define IPublishingWizard_GetFirstPage(This,phpage)	\
    (This)->lpVtbl -> GetFirstPage(This,phpage)

#define IPublishingWizard_GetLastPage(This,phpage)	\
    (This)->lpVtbl -> GetLastPage(This,phpage)


#define IPublishingWizard_Initialize(This,pdo,dwOptions,pszServiceScope)	\
    (This)->lpVtbl -> Initialize(This,pdo,dwOptions,pszServiceScope)

#define IPublishingWizard_GetTransferManifest(This,phrFromTransfer,pdocManifest)	\
    (This)->lpVtbl -> GetTransferManifest(This,phrFromTransfer,pdocManifest)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IPublishingWizard_Initialize_Proxy( 
    IPublishingWizard __RPC_FAR * This,
    /* [unique][in] */ IDataObject __RPC_FAR *pdo,
    /* [in] */ DWORD dwOptions,
    /* [string][in] */ LPCWSTR pszServiceScope);


void __RPC_STUB IPublishingWizard_Initialize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IPublishingWizard_GetTransferManifest_Proxy( 
    IPublishingWizard __RPC_FAR * This,
    /* [out] */ HRESULT __RPC_FAR *phrFromTransfer,
    /* [out] */ IXMLDOMDocument __RPC_FAR *__RPC_FAR *pdocManifest);


void __RPC_STUB IPublishingWizard_GetTransferManifest_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IPublishingWizard_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0378 */
/* [local] */ 

#if (NTDDI_VERSION >= NTDDI_WINXP) || (_WIN32_IE >= _WIN32_IE_IE70)


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0378_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0378_v0_0_s_ifspec;

#ifndef __IFolderViewHost_INTERFACE_DEFINED__
#define __IFolderViewHost_INTERFACE_DEFINED__

/* interface IFolderViewHost */
/* [object][local][helpstring][uuid] */ 


EXTERN_C const IID IID_IFolderViewHost;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1ea58f02-d55a-411d-b09e-9e65ac21605b")
    IFolderViewHost : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Initialize( 
            /* [in] */ HWND hwndParent,
            /* [in] */ IDataObject __RPC_FAR *pdo,
            /* [in] */ RECT __RPC_FAR *prc) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IFolderViewHostVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IFolderViewHost __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IFolderViewHost __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IFolderViewHost __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Initialize )( 
            IFolderViewHost __RPC_FAR * This,
            /* [in] */ HWND hwndParent,
            /* [in] */ IDataObject __RPC_FAR *pdo,
            /* [in] */ RECT __RPC_FAR *prc);
        
        END_INTERFACE
    } IFolderViewHostVtbl;

    interface IFolderViewHost
    {
        CONST_VTBL struct IFolderViewHostVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IFolderViewHost_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IFolderViewHost_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IFolderViewHost_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IFolderViewHost_Initialize(This,hwndParent,pdo,prc)	\
    (This)->lpVtbl -> Initialize(This,hwndParent,pdo,prc)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IFolderViewHost_Initialize_Proxy( 
    IFolderViewHost __RPC_FAR * This,
    /* [in] */ HWND hwndParent,
    /* [in] */ IDataObject __RPC_FAR *pdo,
    /* [in] */ RECT __RPC_FAR *prc);


void __RPC_STUB IFolderViewHost_Initialize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IFolderViewHost_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0379 */
/* [local] */ 

#if (_WIN32_IE >= _WIN32_IE_IE70)


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0379_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0379_v0_0_s_ifspec;

#ifndef __IExplorerBrowserEvents_INTERFACE_DEFINED__
#define __IExplorerBrowserEvents_INTERFACE_DEFINED__

/* interface IExplorerBrowserEvents */
/* [local][object][uuid] */ 


EXTERN_C const IID IID_IExplorerBrowserEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("361bbdc7-e6ee-4e13-be58-58e2240c810f")
    IExplorerBrowserEvents : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OnNavigationPending( 
            /* [in] */ PCIDLIST_ABSOLUTE pidlFolder) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnViewCreated( 
            /* [in] */ IShellView __RPC_FAR *psv) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnNavigationComplete( 
            /* [in] */ PCIDLIST_ABSOLUTE pidlFolder) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnNavigationFailed( 
            /* [in] */ PCIDLIST_ABSOLUTE pidlFolder) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IExplorerBrowserEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IExplorerBrowserEvents __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IExplorerBrowserEvents __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IExplorerBrowserEvents __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnNavigationPending )( 
            IExplorerBrowserEvents __RPC_FAR * This,
            /* [in] */ PCIDLIST_ABSOLUTE pidlFolder);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnViewCreated )( 
            IExplorerBrowserEvents __RPC_FAR * This,
            /* [in] */ IShellView __RPC_FAR *psv);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnNavigationComplete )( 
            IExplorerBrowserEvents __RPC_FAR * This,
            /* [in] */ PCIDLIST_ABSOLUTE pidlFolder);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnNavigationFailed )( 
            IExplorerBrowserEvents __RPC_FAR * This,
            /* [in] */ PCIDLIST_ABSOLUTE pidlFolder);
        
        END_INTERFACE
    } IExplorerBrowserEventsVtbl;

    interface IExplorerBrowserEvents
    {
        CONST_VTBL struct IExplorerBrowserEventsVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IExplorerBrowserEvents_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IExplorerBrowserEvents_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IExplorerBrowserEvents_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IExplorerBrowserEvents_OnNavigationPending(This,pidlFolder)	\
    (This)->lpVtbl -> OnNavigationPending(This,pidlFolder)

#define IExplorerBrowserEvents_OnViewCreated(This,psv)	\
    (This)->lpVtbl -> OnViewCreated(This,psv)

#define IExplorerBrowserEvents_OnNavigationComplete(This,pidlFolder)	\
    (This)->lpVtbl -> OnNavigationComplete(This,pidlFolder)

#define IExplorerBrowserEvents_OnNavigationFailed(This,pidlFolder)	\
    (This)->lpVtbl -> OnNavigationFailed(This,pidlFolder)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IExplorerBrowserEvents_OnNavigationPending_Proxy( 
    IExplorerBrowserEvents __RPC_FAR * This,
    /* [in] */ PCIDLIST_ABSOLUTE pidlFolder);


void __RPC_STUB IExplorerBrowserEvents_OnNavigationPending_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IExplorerBrowserEvents_OnViewCreated_Proxy( 
    IExplorerBrowserEvents __RPC_FAR * This,
    /* [in] */ IShellView __RPC_FAR *psv);


void __RPC_STUB IExplorerBrowserEvents_OnViewCreated_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IExplorerBrowserEvents_OnNavigationComplete_Proxy( 
    IExplorerBrowserEvents __RPC_FAR * This,
    /* [in] */ PCIDLIST_ABSOLUTE pidlFolder);


void __RPC_STUB IExplorerBrowserEvents_OnNavigationComplete_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IExplorerBrowserEvents_OnNavigationFailed_Proxy( 
    IExplorerBrowserEvents __RPC_FAR * This,
    /* [in] */ PCIDLIST_ABSOLUTE pidlFolder);


void __RPC_STUB IExplorerBrowserEvents_OnNavigationFailed_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IExplorerBrowserEvents_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0380 */
/* [local] */ 

/* [v1_enum] */ 
enum _EXPLORER_BROWSER_OPTIONS
    {	EBO_NONE	= 0,
	EBO_NAVIGATEONCE	= 0x1,
	EBO_SHOWFRAMES	= 0x2,
	EBO_ALWAYSNAVIGATE	= 0x4,
	EBO_NOTRAVELLOG	= 0x8,
	EBO_NOWRAPPERWINDOW	= 0x10,
	EBO_HTMLSHAREPOINTVIEW	= 0x20
    };
typedef DWORD EXPLORER_BROWSER_OPTIONS;

/* [v1_enum] */ 
enum _EXPLORER_BROWSER_FILL_FLAGS
    {	EBF_NONE	= 0,
	EBF_SELECTFROMDATAOBJECT	= 0x100,
	EBF_NODROPTARGET	= 0x200
    };
typedef DWORD EXPLORER_BROWSER_FILL_FLAGS;



extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0380_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0380_v0_0_s_ifspec;

#ifndef __IExplorerBrowser_INTERFACE_DEFINED__
#define __IExplorerBrowser_INTERFACE_DEFINED__

/* interface IExplorerBrowser */
/* [object][uuid] */ 


EXTERN_C const IID IID_IExplorerBrowser;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("dfd3b6b5-c10c-4be9-85f6-a66969f402f6")
    IExplorerBrowser : public IUnknown
    {
    public:
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE Initialize( 
            /* [in] */ HWND hwndParent,
            /* [in] */ const RECT __RPC_FAR *prc,
            /* [unique][in] */ const FOLDERSETTINGS __RPC_FAR *pfs) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Destroy( void) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE SetRect( 
            /* [unique][out][in] */ HDWP __RPC_FAR *phdwp,
            /* [in] */ RECT rcBrowser) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetPropertyBag( 
            /* [string][in] */ LPCWSTR pszPropertyBag) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetEmptyText( 
            /* [string][in] */ LPCWSTR pszEmptyText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetFolderSettings( 
            /* [in] */ const FOLDERSETTINGS __RPC_FAR *pfs) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Advise( 
            /* [in] */ IExplorerBrowserEvents __RPC_FAR *psbe,
            /* [out] */ DWORD __RPC_FAR *pdwCookie) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Unadvise( 
            /* [in] */ DWORD dwCookie) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetOptions( 
            /* [in] */ EXPLORER_BROWSER_OPTIONS dwFlag) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetOptions( 
            /* [out] */ EXPLORER_BROWSER_OPTIONS __RPC_FAR *pdwFlag) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE BrowseToIDList( 
            /* [in] */ PCUIDLIST_RELATIVE pidl,
            /* [in] */ UINT uFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE BrowseToObject( 
            /* [in] */ IUnknown __RPC_FAR *punk,
            /* [in] */ UINT uFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE FillFromObject( 
            /* [unique][in] */ IUnknown __RPC_FAR *punk,
            /* [in] */ EXPLORER_BROWSER_FILL_FLAGS dwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAll( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCurrentView( 
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IExplorerBrowserVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IExplorerBrowser __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IExplorerBrowser __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IExplorerBrowser __RPC_FAR * This);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Initialize )( 
            IExplorerBrowser __RPC_FAR * This,
            /* [in] */ HWND hwndParent,
            /* [in] */ const RECT __RPC_FAR *prc,
            /* [unique][in] */ const FOLDERSETTINGS __RPC_FAR *pfs);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Destroy )( 
            IExplorerBrowser __RPC_FAR * This);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetRect )( 
            IExplorerBrowser __RPC_FAR * This,
            /* [unique][out][in] */ HDWP __RPC_FAR *phdwp,
            /* [in] */ RECT rcBrowser);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetPropertyBag )( 
            IExplorerBrowser __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszPropertyBag);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetEmptyText )( 
            IExplorerBrowser __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszEmptyText);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFolderSettings )( 
            IExplorerBrowser __RPC_FAR * This,
            /* [in] */ const FOLDERSETTINGS __RPC_FAR *pfs);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Advise )( 
            IExplorerBrowser __RPC_FAR * This,
            /* [in] */ IExplorerBrowserEvents __RPC_FAR *psbe,
            /* [out] */ DWORD __RPC_FAR *pdwCookie);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Unadvise )( 
            IExplorerBrowser __RPC_FAR * This,
            /* [in] */ DWORD dwCookie);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetOptions )( 
            IExplorerBrowser __RPC_FAR * This,
            /* [in] */ EXPLORER_BROWSER_OPTIONS dwFlag);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetOptions )( 
            IExplorerBrowser __RPC_FAR * This,
            /* [out] */ EXPLORER_BROWSER_OPTIONS __RPC_FAR *pdwFlag);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *BrowseToIDList )( 
            IExplorerBrowser __RPC_FAR * This,
            /* [in] */ PCUIDLIST_RELATIVE pidl,
            /* [in] */ UINT uFlags);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *BrowseToObject )( 
            IExplorerBrowser __RPC_FAR * This,
            /* [in] */ IUnknown __RPC_FAR *punk,
            /* [in] */ UINT uFlags);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *FillFromObject )( 
            IExplorerBrowser __RPC_FAR * This,
            /* [unique][in] */ IUnknown __RPC_FAR *punk,
            /* [in] */ EXPLORER_BROWSER_FILL_FLAGS dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RemoveAll )( 
            IExplorerBrowser __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCurrentView )( 
            IExplorerBrowser __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);
        
        END_INTERFACE
    } IExplorerBrowserVtbl;

    interface IExplorerBrowser
    {
        CONST_VTBL struct IExplorerBrowserVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IExplorerBrowser_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IExplorerBrowser_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IExplorerBrowser_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IExplorerBrowser_Initialize(This,hwndParent,prc,pfs)	\
    (This)->lpVtbl -> Initialize(This,hwndParent,prc,pfs)

#define IExplorerBrowser_Destroy(This)	\
    (This)->lpVtbl -> Destroy(This)

#define IExplorerBrowser_SetRect(This,phdwp,rcBrowser)	\
    (This)->lpVtbl -> SetRect(This,phdwp,rcBrowser)

#define IExplorerBrowser_SetPropertyBag(This,pszPropertyBag)	\
    (This)->lpVtbl -> SetPropertyBag(This,pszPropertyBag)

#define IExplorerBrowser_SetEmptyText(This,pszEmptyText)	\
    (This)->lpVtbl -> SetEmptyText(This,pszEmptyText)

#define IExplorerBrowser_SetFolderSettings(This,pfs)	\
    (This)->lpVtbl -> SetFolderSettings(This,pfs)

#define IExplorerBrowser_Advise(This,psbe,pdwCookie)	\
    (This)->lpVtbl -> Advise(This,psbe,pdwCookie)

#define IExplorerBrowser_Unadvise(This,dwCookie)	\
    (This)->lpVtbl -> Unadvise(This,dwCookie)

#define IExplorerBrowser_SetOptions(This,dwFlag)	\
    (This)->lpVtbl -> SetOptions(This,dwFlag)

#define IExplorerBrowser_GetOptions(This,pdwFlag)	\
    (This)->lpVtbl -> GetOptions(This,pdwFlag)

#define IExplorerBrowser_BrowseToIDList(This,pidl,uFlags)	\
    (This)->lpVtbl -> BrowseToIDList(This,pidl,uFlags)

#define IExplorerBrowser_BrowseToObject(This,punk,uFlags)	\
    (This)->lpVtbl -> BrowseToObject(This,punk,uFlags)

#define IExplorerBrowser_FillFromObject(This,punk,dwFlags)	\
    (This)->lpVtbl -> FillFromObject(This,punk,dwFlags)

#define IExplorerBrowser_RemoveAll(This)	\
    (This)->lpVtbl -> RemoveAll(This)

#define IExplorerBrowser_GetCurrentView(This,riid,ppv)	\
    (This)->lpVtbl -> GetCurrentView(This,riid,ppv)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [local] */ HRESULT STDMETHODCALLTYPE IExplorerBrowser_Initialize_Proxy( 
    IExplorerBrowser __RPC_FAR * This,
    /* [in] */ HWND hwndParent,
    /* [in] */ const RECT __RPC_FAR *prc,
    /* [unique][in] */ const FOLDERSETTINGS __RPC_FAR *pfs);


void __RPC_STUB IExplorerBrowser_Initialize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IExplorerBrowser_Destroy_Proxy( 
    IExplorerBrowser __RPC_FAR * This);


void __RPC_STUB IExplorerBrowser_Destroy_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [local] */ HRESULT STDMETHODCALLTYPE IExplorerBrowser_SetRect_Proxy( 
    IExplorerBrowser __RPC_FAR * This,
    /* [unique][out][in] */ HDWP __RPC_FAR *phdwp,
    /* [in] */ RECT rcBrowser);


void __RPC_STUB IExplorerBrowser_SetRect_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IExplorerBrowser_SetPropertyBag_Proxy( 
    IExplorerBrowser __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszPropertyBag);


void __RPC_STUB IExplorerBrowser_SetPropertyBag_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IExplorerBrowser_SetEmptyText_Proxy( 
    IExplorerBrowser __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszEmptyText);


void __RPC_STUB IExplorerBrowser_SetEmptyText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IExplorerBrowser_SetFolderSettings_Proxy( 
    IExplorerBrowser __RPC_FAR * This,
    /* [in] */ const FOLDERSETTINGS __RPC_FAR *pfs);


void __RPC_STUB IExplorerBrowser_SetFolderSettings_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IExplorerBrowser_Advise_Proxy( 
    IExplorerBrowser __RPC_FAR * This,
    /* [in] */ IExplorerBrowserEvents __RPC_FAR *psbe,
    /* [out] */ DWORD __RPC_FAR *pdwCookie);


void __RPC_STUB IExplorerBrowser_Advise_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IExplorerBrowser_Unadvise_Proxy( 
    IExplorerBrowser __RPC_FAR * This,
    /* [in] */ DWORD dwCookie);


void __RPC_STUB IExplorerBrowser_Unadvise_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IExplorerBrowser_SetOptions_Proxy( 
    IExplorerBrowser __RPC_FAR * This,
    /* [in] */ EXPLORER_BROWSER_OPTIONS dwFlag);


void __RPC_STUB IExplorerBrowser_SetOptions_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IExplorerBrowser_GetOptions_Proxy( 
    IExplorerBrowser __RPC_FAR * This,
    /* [out] */ EXPLORER_BROWSER_OPTIONS __RPC_FAR *pdwFlag);


void __RPC_STUB IExplorerBrowser_GetOptions_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IExplorerBrowser_BrowseToIDList_Proxy( 
    IExplorerBrowser __RPC_FAR * This,
    /* [in] */ PCUIDLIST_RELATIVE pidl,
    /* [in] */ UINT uFlags);


void __RPC_STUB IExplorerBrowser_BrowseToIDList_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IExplorerBrowser_BrowseToObject_Proxy( 
    IExplorerBrowser __RPC_FAR * This,
    /* [in] */ IUnknown __RPC_FAR *punk,
    /* [in] */ UINT uFlags);


void __RPC_STUB IExplorerBrowser_BrowseToObject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IExplorerBrowser_FillFromObject_Proxy( 
    IExplorerBrowser __RPC_FAR * This,
    /* [unique][in] */ IUnknown __RPC_FAR *punk,
    /* [in] */ EXPLORER_BROWSER_FILL_FLAGS dwFlags);


void __RPC_STUB IExplorerBrowser_FillFromObject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IExplorerBrowser_RemoveAll_Proxy( 
    IExplorerBrowser __RPC_FAR * This);


void __RPC_STUB IExplorerBrowser_RemoveAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IExplorerBrowser_GetCurrentView_Proxy( 
    IExplorerBrowser __RPC_FAR * This,
    /* [in] */ REFIID riid,
    /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);


void __RPC_STUB IExplorerBrowser_GetCurrentView_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IExplorerBrowser_INTERFACE_DEFINED__ */


#ifndef __IAccessibleObject_INTERFACE_DEFINED__
#define __IAccessibleObject_INTERFACE_DEFINED__

/* interface IAccessibleObject */
/* [object][uuid] */ 


EXTERN_C const IID IID_IAccessibleObject;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("95A391C5-9ED4-4c28-8401-AB9E06719E11")
    IAccessibleObject : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetAccessibleName( 
            /* [string][in] */ LPCWSTR pszName) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAccessibleObjectVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAccessibleObject __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAccessibleObject __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAccessibleObject __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetAccessibleName )( 
            IAccessibleObject __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszName);
        
        END_INTERFACE
    } IAccessibleObjectVtbl;

    interface IAccessibleObject
    {
        CONST_VTBL struct IAccessibleObjectVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAccessibleObject_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAccessibleObject_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAccessibleObject_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAccessibleObject_SetAccessibleName(This,pszName)	\
    (This)->lpVtbl -> SetAccessibleName(This,pszName)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAccessibleObject_SetAccessibleName_Proxy( 
    IAccessibleObject __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszName);


void __RPC_STUB IAccessibleObject_SetAccessibleName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAccessibleObject_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0382 */
/* [local] */ 

#endif  // (_WIN32_IE >= _WIN32_IE_IE70)


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0382_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0382_v0_0_s_ifspec;

#ifndef __IResultsFolder_INTERFACE_DEFINED__
#define __IResultsFolder_INTERFACE_DEFINED__

/* interface IResultsFolder */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IResultsFolder;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("96E5AE6D-6AE1-4b1c-900C-C6480EAA8828")
    IResultsFolder : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE AddItem( 
            /* [in] */ IShellItem __RPC_FAR *psi) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddIDList( 
            /* [in] */ PCIDLIST_ABSOLUTE pidl,
            /* [out] */ PITEMID_CHILD __RPC_FAR *ppidlAdded) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveItem( 
            /* [in] */ IShellItem __RPC_FAR *psi) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveIDList( 
            /* [in] */ PCIDLIST_ABSOLUTE pidl) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAll( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IResultsFolderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IResultsFolder __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IResultsFolder __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IResultsFolder __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AddItem )( 
            IResultsFolder __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psi);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AddIDList )( 
            IResultsFolder __RPC_FAR * This,
            /* [in] */ PCIDLIST_ABSOLUTE pidl,
            /* [out] */ PITEMID_CHILD __RPC_FAR *ppidlAdded);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RemoveItem )( 
            IResultsFolder __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psi);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RemoveIDList )( 
            IResultsFolder __RPC_FAR * This,
            /* [in] */ PCIDLIST_ABSOLUTE pidl);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RemoveAll )( 
            IResultsFolder __RPC_FAR * This);
        
        END_INTERFACE
    } IResultsFolderVtbl;

    interface IResultsFolder
    {
        CONST_VTBL struct IResultsFolderVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IResultsFolder_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IResultsFolder_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IResultsFolder_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IResultsFolder_AddItem(This,psi)	\
    (This)->lpVtbl -> AddItem(This,psi)

#define IResultsFolder_AddIDList(This,pidl,ppidlAdded)	\
    (This)->lpVtbl -> AddIDList(This,pidl,ppidlAdded)

#define IResultsFolder_RemoveItem(This,psi)	\
    (This)->lpVtbl -> RemoveItem(This,psi)

#define IResultsFolder_RemoveIDList(This,pidl)	\
    (This)->lpVtbl -> RemoveIDList(This,pidl)

#define IResultsFolder_RemoveAll(This)	\
    (This)->lpVtbl -> RemoveAll(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IResultsFolder_AddItem_Proxy( 
    IResultsFolder __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psi);


void __RPC_STUB IResultsFolder_AddItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IResultsFolder_AddIDList_Proxy( 
    IResultsFolder __RPC_FAR * This,
    /* [in] */ PCIDLIST_ABSOLUTE pidl,
    /* [out] */ PITEMID_CHILD __RPC_FAR *ppidlAdded);


void __RPC_STUB IResultsFolder_AddIDList_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IResultsFolder_RemoveItem_Proxy( 
    IResultsFolder __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psi);


void __RPC_STUB IResultsFolder_RemoveItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IResultsFolder_RemoveIDList_Proxy( 
    IResultsFolder __RPC_FAR * This,
    /* [in] */ PCIDLIST_ABSOLUTE pidl);


void __RPC_STUB IResultsFolder_RemoveIDList_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IResultsFolder_RemoveAll_Proxy( 
    IResultsFolder __RPC_FAR * This);


void __RPC_STUB IResultsFolder_RemoveAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IResultsFolder_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0383 */
/* [local] */ 

#if (_WIN32_IE >= _WIN32_IE_IE70)


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0383_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0383_v0_0_s_ifspec;

#ifndef __IEnumObjects_INTERFACE_DEFINED__
#define __IEnumObjects_INTERFACE_DEFINED__

/* interface IEnumObjects */
/* [unique][object][uuid][helpstring] */ 


EXTERN_C const IID IID_IEnumObjects;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2c1c7e2e-2d0e-4059-831e-1e6f82335c2e")
    IEnumObjects : public IUnknown
    {
    public:
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE Next( 
            /* [in] */ ULONG celt,
            /* [in] */ REFIID riid,
            /* [iid_is][length_is][size_is][out] */ void __RPC_FAR *__RPC_FAR *rgelt,
            /* [out] */ ULONG __RPC_FAR *pceltFetched) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Skip( 
            /* [in] */ ULONG celt) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clone( 
            /* [out] */ IEnumObjects __RPC_FAR *__RPC_FAR *ppenum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumObjectsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IEnumObjects __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IEnumObjects __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IEnumObjects __RPC_FAR * This);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Next )( 
            IEnumObjects __RPC_FAR * This,
            /* [in] */ ULONG celt,
            /* [in] */ REFIID riid,
            /* [iid_is][length_is][size_is][out] */ void __RPC_FAR *__RPC_FAR *rgelt,
            /* [out] */ ULONG __RPC_FAR *pceltFetched);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Skip )( 
            IEnumObjects __RPC_FAR * This,
            /* [in] */ ULONG celt);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Reset )( 
            IEnumObjects __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Clone )( 
            IEnumObjects __RPC_FAR * This,
            /* [out] */ IEnumObjects __RPC_FAR *__RPC_FAR *ppenum);
        
        END_INTERFACE
    } IEnumObjectsVtbl;

    interface IEnumObjects
    {
        CONST_VTBL struct IEnumObjectsVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumObjects_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IEnumObjects_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IEnumObjects_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IEnumObjects_Next(This,celt,riid,rgelt,pceltFetched)	\
    (This)->lpVtbl -> Next(This,celt,riid,rgelt,pceltFetched)

#define IEnumObjects_Skip(This,celt)	\
    (This)->lpVtbl -> Skip(This,celt)

#define IEnumObjects_Reset(This)	\
    (This)->lpVtbl -> Reset(This)

#define IEnumObjects_Clone(This,ppenum)	\
    (This)->lpVtbl -> Clone(This,ppenum)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [call_as] */ HRESULT STDMETHODCALLTYPE IEnumObjects_RemoteNext_Proxy( 
    IEnumObjects __RPC_FAR * This,
    /* [in] */ ULONG celt,
    /* [in] */ REFIID riid,
    /* [iid_is][size_is][out] */ void __RPC_FAR *__RPC_FAR *rgelt,
    /* [out] */ ULONG __RPC_FAR *pceltFetched);


void __RPC_STUB IEnumObjects_RemoteNext_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumObjects_Skip_Proxy( 
    IEnumObjects __RPC_FAR * This,
    /* [in] */ ULONG celt);


void __RPC_STUB IEnumObjects_Skip_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumObjects_Reset_Proxy( 
    IEnumObjects __RPC_FAR * This);


void __RPC_STUB IEnumObjects_Reset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumObjects_Clone_Proxy( 
    IEnumObjects __RPC_FAR * This,
    /* [out] */ IEnumObjects __RPC_FAR *__RPC_FAR *ppenum);


void __RPC_STUB IEnumObjects_Clone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IEnumObjects_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0384 */
/* [local] */ 

#define OPPROGDLG_ENABLEPAUSE     0x00000080      // Add a pause button (operation can be paused)
#define OPPROGDLG_ALLOWUNDO       0x00000100      // The operation can be undone in the dialog.  (The Stop button becomes Undo)
#define OPPROGDLG_DONTDISPLAYSOURCEPATH   0x00000200  // Don't display the path of source file in progress dialog
#define OPPROGDLG_DONTDISPLAYDESTPATH     0x00000400  // Don't display the path of destination file in progress dialog


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0384_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0384_v0_0_s_ifspec;

#ifndef __IOperationsProgressDialog_INTERFACE_DEFINED__
#define __IOperationsProgressDialog_INTERFACE_DEFINED__

/* interface IOperationsProgressDialog */
/* [unique][object][uuid][helpstring] */ 

/* [v1_enum] */ 
enum tagPDMODE
    {	PDM_RUN	= 0x1,
	PDM_PREFLIGHT	= 0x2,
	PDM_UNDOING	= 0x4,
	PDM_ERRORSBLOCKING	= 0x8,
	PDM_INDETERMINATE	= 0x10
    };
typedef DWORD PDMODE;

typedef /* [v1_enum] */ 
enum tagPDOPSTATUS
    {	PDOPS_RUNNING	= 0x1,
	PDOPS_PAUSED	= 0x2,
	PDOPS_CANCELLED	= 0x3,
	PDOPS_STOPPED	= 0x4,
	PDOPS_ERRORS	= 0x5
    }	PDOPSTATUS;


EXTERN_C const IID IID_IOperationsProgressDialog;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0C9FB851-E5C9-43EB-A370-F0677B13874C")
    IOperationsProgressDialog : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE StartProgressDialog( 
            /* [unique][in] */ HWND hwndParent,
            /* [in] */ DWORD dwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE StopProgressDialog( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetOperation( 
            /* [in] */ SPACTION action) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetMode( 
            /* [in] */ PDMODE mode) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UpdateProgress( 
            /* [in] */ ULONGLONG ullPointsCurrent,
            /* [in] */ ULONGLONG ullPointsTotal,
            /* [in] */ ULONGLONG ullSizeCurrent,
            /* [in] */ ULONGLONG ullSizeTotal,
            /* [in] */ ULONGLONG ullItemsCurrent,
            /* [in] */ ULONGLONG ullItemsTotal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UpdateLocations( 
            /* [unique][in] */ IShellItem __RPC_FAR *psiSource,
            /* [unique][in] */ IShellItem __RPC_FAR *psiTarget,
            /* [unique][in] */ IShellItem __RPC_FAR *psiItem) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ResetTimer( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PauseTimer( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ResumeTimer( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMilliseconds( 
            /* [out] */ ULONGLONG __RPC_FAR *pullElapsed,
            /* [out] */ ULONGLONG __RPC_FAR *pullRemaining) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetOperationStatus( 
            /* [out] */ PDOPSTATUS __RPC_FAR *popstatus) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IOperationsProgressDialogVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IOperationsProgressDialog __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IOperationsProgressDialog __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IOperationsProgressDialog __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *StartProgressDialog )( 
            IOperationsProgressDialog __RPC_FAR * This,
            /* [unique][in] */ HWND hwndParent,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *StopProgressDialog )( 
            IOperationsProgressDialog __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetOperation )( 
            IOperationsProgressDialog __RPC_FAR * This,
            /* [in] */ SPACTION action);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetMode )( 
            IOperationsProgressDialog __RPC_FAR * This,
            /* [in] */ PDMODE mode);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *UpdateProgress )( 
            IOperationsProgressDialog __RPC_FAR * This,
            /* [in] */ ULONGLONG ullPointsCurrent,
            /* [in] */ ULONGLONG ullPointsTotal,
            /* [in] */ ULONGLONG ullSizeCurrent,
            /* [in] */ ULONGLONG ullSizeTotal,
            /* [in] */ ULONGLONG ullItemsCurrent,
            /* [in] */ ULONGLONG ullItemsTotal);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *UpdateLocations )( 
            IOperationsProgressDialog __RPC_FAR * This,
            /* [unique][in] */ IShellItem __RPC_FAR *psiSource,
            /* [unique][in] */ IShellItem __RPC_FAR *psiTarget,
            /* [unique][in] */ IShellItem __RPC_FAR *psiItem);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ResetTimer )( 
            IOperationsProgressDialog __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *PauseTimer )( 
            IOperationsProgressDialog __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ResumeTimer )( 
            IOperationsProgressDialog __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetMilliseconds )( 
            IOperationsProgressDialog __RPC_FAR * This,
            /* [out] */ ULONGLONG __RPC_FAR *pullElapsed,
            /* [out] */ ULONGLONG __RPC_FAR *pullRemaining);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetOperationStatus )( 
            IOperationsProgressDialog __RPC_FAR * This,
            /* [out] */ PDOPSTATUS __RPC_FAR *popstatus);
        
        END_INTERFACE
    } IOperationsProgressDialogVtbl;

    interface IOperationsProgressDialog
    {
        CONST_VTBL struct IOperationsProgressDialogVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IOperationsProgressDialog_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IOperationsProgressDialog_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IOperationsProgressDialog_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IOperationsProgressDialog_StartProgressDialog(This,hwndParent,dwFlags)	\
    (This)->lpVtbl -> StartProgressDialog(This,hwndParent,dwFlags)

#define IOperationsProgressDialog_StopProgressDialog(This)	\
    (This)->lpVtbl -> StopProgressDialog(This)

#define IOperationsProgressDialog_SetOperation(This,action)	\
    (This)->lpVtbl -> SetOperation(This,action)

#define IOperationsProgressDialog_SetMode(This,mode)	\
    (This)->lpVtbl -> SetMode(This,mode)

#define IOperationsProgressDialog_UpdateProgress(This,ullPointsCurrent,ullPointsTotal,ullSizeCurrent,ullSizeTotal,ullItemsCurrent,ullItemsTotal)	\
    (This)->lpVtbl -> UpdateProgress(This,ullPointsCurrent,ullPointsTotal,ullSizeCurrent,ullSizeTotal,ullItemsCurrent,ullItemsTotal)

#define IOperationsProgressDialog_UpdateLocations(This,psiSource,psiTarget,psiItem)	\
    (This)->lpVtbl -> UpdateLocations(This,psiSource,psiTarget,psiItem)

#define IOperationsProgressDialog_ResetTimer(This)	\
    (This)->lpVtbl -> ResetTimer(This)

#define IOperationsProgressDialog_PauseTimer(This)	\
    (This)->lpVtbl -> PauseTimer(This)

#define IOperationsProgressDialog_ResumeTimer(This)	\
    (This)->lpVtbl -> ResumeTimer(This)

#define IOperationsProgressDialog_GetMilliseconds(This,pullElapsed,pullRemaining)	\
    (This)->lpVtbl -> GetMilliseconds(This,pullElapsed,pullRemaining)

#define IOperationsProgressDialog_GetOperationStatus(This,popstatus)	\
    (This)->lpVtbl -> GetOperationStatus(This,popstatus)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IOperationsProgressDialog_StartProgressDialog_Proxy( 
    IOperationsProgressDialog __RPC_FAR * This,
    /* [unique][in] */ HWND hwndParent,
    /* [in] */ DWORD dwFlags);


void __RPC_STUB IOperationsProgressDialog_StartProgressDialog_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IOperationsProgressDialog_StopProgressDialog_Proxy( 
    IOperationsProgressDialog __RPC_FAR * This);


void __RPC_STUB IOperationsProgressDialog_StopProgressDialog_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IOperationsProgressDialog_SetOperation_Proxy( 
    IOperationsProgressDialog __RPC_FAR * This,
    /* [in] */ SPACTION action);


void __RPC_STUB IOperationsProgressDialog_SetOperation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IOperationsProgressDialog_SetMode_Proxy( 
    IOperationsProgressDialog __RPC_FAR * This,
    /* [in] */ PDMODE mode);


void __RPC_STUB IOperationsProgressDialog_SetMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IOperationsProgressDialog_UpdateProgress_Proxy( 
    IOperationsProgressDialog __RPC_FAR * This,
    /* [in] */ ULONGLONG ullPointsCurrent,
    /* [in] */ ULONGLONG ullPointsTotal,
    /* [in] */ ULONGLONG ullSizeCurrent,
    /* [in] */ ULONGLONG ullSizeTotal,
    /* [in] */ ULONGLONG ullItemsCurrent,
    /* [in] */ ULONGLONG ullItemsTotal);


void __RPC_STUB IOperationsProgressDialog_UpdateProgress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IOperationsProgressDialog_UpdateLocations_Proxy( 
    IOperationsProgressDialog __RPC_FAR * This,
    /* [unique][in] */ IShellItem __RPC_FAR *psiSource,
    /* [unique][in] */ IShellItem __RPC_FAR *psiTarget,
    /* [unique][in] */ IShellItem __RPC_FAR *psiItem);


void __RPC_STUB IOperationsProgressDialog_UpdateLocations_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IOperationsProgressDialog_ResetTimer_Proxy( 
    IOperationsProgressDialog __RPC_FAR * This);


void __RPC_STUB IOperationsProgressDialog_ResetTimer_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IOperationsProgressDialog_PauseTimer_Proxy( 
    IOperationsProgressDialog __RPC_FAR * This);


void __RPC_STUB IOperationsProgressDialog_PauseTimer_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IOperationsProgressDialog_ResumeTimer_Proxy( 
    IOperationsProgressDialog __RPC_FAR * This);


void __RPC_STUB IOperationsProgressDialog_ResumeTimer_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IOperationsProgressDialog_GetMilliseconds_Proxy( 
    IOperationsProgressDialog __RPC_FAR * This,
    /* [out] */ ULONGLONG __RPC_FAR *pullElapsed,
    /* [out] */ ULONGLONG __RPC_FAR *pullRemaining);


void __RPC_STUB IOperationsProgressDialog_GetMilliseconds_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IOperationsProgressDialog_GetOperationStatus_Proxy( 
    IOperationsProgressDialog __RPC_FAR * This,
    /* [out] */ PDOPSTATUS __RPC_FAR *popstatus);


void __RPC_STUB IOperationsProgressDialog_GetOperationStatus_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IOperationsProgressDialog_INTERFACE_DEFINED__ */


#ifndef __IOperationsUpdateProgress_INTERFACE_DEFINED__
#define __IOperationsUpdateProgress_INTERFACE_DEFINED__

/* interface IOperationsUpdateProgress */
/* [unique][object][uuid][helpstring] */ 


EXTERN_C const IID IID_IOperationsUpdateProgress;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B5256C5C-F918-49E6-BBB7-A3C254C09FDF")
    IOperationsUpdateProgress : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE AddTreeDone( 
            /* [in] */ int iFiles,
            /* [in] */ int iFolders,
            /* [in] */ LONGLONG llSize,
            /* [in] */ int iPoints) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddTreeTotal( 
            /* [in] */ int iFiles,
            /* [in] */ int iFolders,
            /* [in] */ LONGLONG llSize,
            /* [in] */ int iPoints) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IOperationsUpdateProgressVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IOperationsUpdateProgress __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IOperationsUpdateProgress __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IOperationsUpdateProgress __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AddTreeDone )( 
            IOperationsUpdateProgress __RPC_FAR * This,
            /* [in] */ int iFiles,
            /* [in] */ int iFolders,
            /* [in] */ LONGLONG llSize,
            /* [in] */ int iPoints);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AddTreeTotal )( 
            IOperationsUpdateProgress __RPC_FAR * This,
            /* [in] */ int iFiles,
            /* [in] */ int iFolders,
            /* [in] */ LONGLONG llSize,
            /* [in] */ int iPoints);
        
        END_INTERFACE
    } IOperationsUpdateProgressVtbl;

    interface IOperationsUpdateProgress
    {
        CONST_VTBL struct IOperationsUpdateProgressVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IOperationsUpdateProgress_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IOperationsUpdateProgress_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IOperationsUpdateProgress_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IOperationsUpdateProgress_AddTreeDone(This,iFiles,iFolders,llSize,iPoints)	\
    (This)->lpVtbl -> AddTreeDone(This,iFiles,iFolders,llSize,iPoints)

#define IOperationsUpdateProgress_AddTreeTotal(This,iFiles,iFolders,llSize,iPoints)	\
    (This)->lpVtbl -> AddTreeTotal(This,iFiles,iFolders,llSize,iPoints)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IOperationsUpdateProgress_AddTreeDone_Proxy( 
    IOperationsUpdateProgress __RPC_FAR * This,
    /* [in] */ int iFiles,
    /* [in] */ int iFolders,
    /* [in] */ LONGLONG llSize,
    /* [in] */ int iPoints);


void __RPC_STUB IOperationsUpdateProgress_AddTreeDone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IOperationsUpdateProgress_AddTreeTotal_Proxy( 
    IOperationsUpdateProgress __RPC_FAR * This,
    /* [in] */ int iFiles,
    /* [in] */ int iFolders,
    /* [in] */ LONGLONG llSize,
    /* [in] */ int iPoints);


void __RPC_STUB IOperationsUpdateProgress_AddTreeTotal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IOperationsUpdateProgress_INTERFACE_DEFINED__ */


#ifndef __IIOCancelInformation_INTERFACE_DEFINED__
#define __IIOCancelInformation_INTERFACE_DEFINED__

/* interface IIOCancelInformation */
/* [local][unique][object][uuid][helpstring] */ 


EXTERN_C const IID IID_IIOCancelInformation;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("f5b0bf81-8cb5-4b1b-9449-1a159e0c733c")
    IIOCancelInformation : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetCancelInformation( 
            /* [in] */ DWORD dwThreadID,
            /* [in] */ UINT uMsgCancel) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCancelInformation( 
            /* [out] */ DWORD __RPC_FAR *pdwThreadID,
            /* [out] */ UINT __RPC_FAR *puMsgCancel) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIOCancelInformationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IIOCancelInformation __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IIOCancelInformation __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IIOCancelInformation __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetCancelInformation )( 
            IIOCancelInformation __RPC_FAR * This,
            /* [in] */ DWORD dwThreadID,
            /* [in] */ UINT uMsgCancel);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCancelInformation )( 
            IIOCancelInformation __RPC_FAR * This,
            /* [out] */ DWORD __RPC_FAR *pdwThreadID,
            /* [out] */ UINT __RPC_FAR *puMsgCancel);
        
        END_INTERFACE
    } IIOCancelInformationVtbl;

    interface IIOCancelInformation
    {
        CONST_VTBL struct IIOCancelInformationVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIOCancelInformation_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IIOCancelInformation_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IIOCancelInformation_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IIOCancelInformation_SetCancelInformation(This,dwThreadID,uMsgCancel)	\
    (This)->lpVtbl -> SetCancelInformation(This,dwThreadID,uMsgCancel)

#define IIOCancelInformation_GetCancelInformation(This,pdwThreadID,puMsgCancel)	\
    (This)->lpVtbl -> GetCancelInformation(This,pdwThreadID,puMsgCancel)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IIOCancelInformation_SetCancelInformation_Proxy( 
    IIOCancelInformation __RPC_FAR * This,
    /* [in] */ DWORD dwThreadID,
    /* [in] */ UINT uMsgCancel);


void __RPC_STUB IIOCancelInformation_SetCancelInformation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IIOCancelInformation_GetCancelInformation_Proxy( 
    IIOCancelInformation __RPC_FAR * This,
    /* [out] */ DWORD __RPC_FAR *pdwThreadID,
    /* [out] */ UINT __RPC_FAR *puMsgCancel);


void __RPC_STUB IIOCancelInformation_GetCancelInformation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IIOCancelInformation_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0387 */
/* [local] */ 

#define FOFX_NOSKIPJUNCTIONS         0x00010000  // Don't avoid binding to junctions (like Task folder, Recycle-Bin)
#define FOFX_PREFERHARDLINK          0x00020000  // Create hard link if possible
#define FOFX_SHOWELEVATIONPROMPT     0x00040000  // Show elevation prompts when error UI is disabled (use with FOF_NOERRORUI)
#define FOFX_EARLYFAILURE            0x00100000  // Fail operation as soon as a single error occurs rather than trying to process other items (applies only when using FOF_NOERRORUI)
#define FOFX_PRESERVEFILEEXTENSIONS  0x00200000  // Rename collisions preserve file extns (use with FOF_RENAMEONCOLLISION)
#define FOFX_KEEPNEWERFILE           0x00400000  // Keep newer file on naming conflicts
#define FOFX_NOCOPYHOOKS             0x00800000  // Don't use copy hooks
#define FOFX_NOMINIMIZEBOX           0x01000000  // Don't allow minimizing the progress dialog
#define FOFX_MOVEACLSACROSSVOLUMES   0x02000000  // Copy security information when performing a cross-volume move operation
#define FOFX_DONTDISPLAYSOURCEPATH   0x04000000  // Don't display the path of source file in progress dialog
#define FOFX_DONTDISPLAYDESTPATH     0x08000000  // Don't display the path of destination file in progress dialog


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0387_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0387_v0_0_s_ifspec;

#ifndef __IFileOperation_INTERFACE_DEFINED__
#define __IFileOperation_INTERFACE_DEFINED__

/* interface IFileOperation */
/* [unique][object][uuid][helpstring] */ 


EXTERN_C const IID IID_IFileOperation;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("947aab5f-0a5c-4c13-b4d6-4bf7836fc9f8")
    IFileOperation : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Advise( 
            /* [in] */ IFileOperationProgressSink __RPC_FAR *pfops,
            /* [out] */ DWORD __RPC_FAR *pdwCookie) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Unadvise( 
            /* [in] */ DWORD dwCookie) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetOperationFlags( 
            /* [in] */ DWORD dwOperationFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetProgressMessage( 
            /* [string][in] */ LPCWSTR pszMessage) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetProgressDialog( 
            /* [in] */ IOperationsProgressDialog __RPC_FAR *popd) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetProperties( 
            /* [in] */ IPropertyChangeArray __RPC_FAR *pproparray) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetOwnerWindow( 
            /* [in] */ HWND hwndParent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ApplyPropertiesToItem( 
            /* [in] */ IShellItem __RPC_FAR *psiItem) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ApplyPropertiesToItems( 
            /* [in] */ IUnknown __RPC_FAR *punkItems) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RenameItem( 
            /* [in] */ IShellItem __RPC_FAR *psiItem,
            /* [string][in] */ LPCWSTR pszNewName,
            /* [unique][in] */ IFileOperationProgressSink __RPC_FAR *pfopsItem) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RenameItems( 
            /* [in] */ IUnknown __RPC_FAR *pUnkItems,
            /* [string][in] */ LPCWSTR pszNewName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveItem( 
            /* [in] */ IShellItem __RPC_FAR *psiItem,
            /* [in] */ IShellItem __RPC_FAR *psiDestinationFolder,
            /* [string][unique][in] */ LPCWSTR pszNewName,
            /* [unique][in] */ IFileOperationProgressSink __RPC_FAR *pfopsItem) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveItems( 
            /* [in] */ IUnknown __RPC_FAR *punkItems,
            /* [in] */ IShellItem __RPC_FAR *psiDestinationFolder) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CopyItem( 
            /* [in] */ IShellItem __RPC_FAR *psiItem,
            /* [in] */ IShellItem __RPC_FAR *psiDestinationFolder,
            /* [string][unique][in] */ LPCWSTR pszCopyName,
            /* [unique][in] */ IFileOperationProgressSink __RPC_FAR *pfopsItem) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CopyItems( 
            /* [in] */ IUnknown __RPC_FAR *punkItems,
            /* [in] */ IShellItem __RPC_FAR *psiDestinationFolder) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteItem( 
            /* [in] */ IShellItem __RPC_FAR *psiItem,
            /* [unique][in] */ IFileOperationProgressSink __RPC_FAR *pfopsItem) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteItems( 
            /* [in] */ IUnknown __RPC_FAR *punkItems) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE NewItem( 
            /* [in] */ IShellItem __RPC_FAR *psiDestinationFolder,
            /* [in] */ DWORD dwFileAttributes,
            /* [string][unique][in] */ LPCWSTR pszName,
            /* [string][unique][in] */ LPCWSTR pszTemplateName,
            /* [unique][in] */ IFileOperationProgressSink __RPC_FAR *pfopsItem) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PerformOperations( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAnyOperationsAborted( 
            /* [out] */ BOOL __RPC_FAR *pfAnyOperationsAborted) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IFileOperationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IFileOperation __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IFileOperation __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IFileOperation __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Advise )( 
            IFileOperation __RPC_FAR * This,
            /* [in] */ IFileOperationProgressSink __RPC_FAR *pfops,
            /* [out] */ DWORD __RPC_FAR *pdwCookie);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Unadvise )( 
            IFileOperation __RPC_FAR * This,
            /* [in] */ DWORD dwCookie);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetOperationFlags )( 
            IFileOperation __RPC_FAR * This,
            /* [in] */ DWORD dwOperationFlags);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetProgressMessage )( 
            IFileOperation __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszMessage);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetProgressDialog )( 
            IFileOperation __RPC_FAR * This,
            /* [in] */ IOperationsProgressDialog __RPC_FAR *popd);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetProperties )( 
            IFileOperation __RPC_FAR * This,
            /* [in] */ IPropertyChangeArray __RPC_FAR *pproparray);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetOwnerWindow )( 
            IFileOperation __RPC_FAR * This,
            /* [in] */ HWND hwndParent);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ApplyPropertiesToItem )( 
            IFileOperation __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psiItem);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ApplyPropertiesToItems )( 
            IFileOperation __RPC_FAR * This,
            /* [in] */ IUnknown __RPC_FAR *punkItems);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RenameItem )( 
            IFileOperation __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psiItem,
            /* [string][in] */ LPCWSTR pszNewName,
            /* [unique][in] */ IFileOperationProgressSink __RPC_FAR *pfopsItem);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RenameItems )( 
            IFileOperation __RPC_FAR * This,
            /* [in] */ IUnknown __RPC_FAR *pUnkItems,
            /* [string][in] */ LPCWSTR pszNewName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *MoveItem )( 
            IFileOperation __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psiItem,
            /* [in] */ IShellItem __RPC_FAR *psiDestinationFolder,
            /* [string][unique][in] */ LPCWSTR pszNewName,
            /* [unique][in] */ IFileOperationProgressSink __RPC_FAR *pfopsItem);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *MoveItems )( 
            IFileOperation __RPC_FAR * This,
            /* [in] */ IUnknown __RPC_FAR *punkItems,
            /* [in] */ IShellItem __RPC_FAR *psiDestinationFolder);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CopyItem )( 
            IFileOperation __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psiItem,
            /* [in] */ IShellItem __RPC_FAR *psiDestinationFolder,
            /* [string][unique][in] */ LPCWSTR pszCopyName,
            /* [unique][in] */ IFileOperationProgressSink __RPC_FAR *pfopsItem);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CopyItems )( 
            IFileOperation __RPC_FAR * This,
            /* [in] */ IUnknown __RPC_FAR *punkItems,
            /* [in] */ IShellItem __RPC_FAR *psiDestinationFolder);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DeleteItem )( 
            IFileOperation __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psiItem,
            /* [unique][in] */ IFileOperationProgressSink __RPC_FAR *pfopsItem);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DeleteItems )( 
            IFileOperation __RPC_FAR * This,
            /* [in] */ IUnknown __RPC_FAR *punkItems);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *NewItem )( 
            IFileOperation __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psiDestinationFolder,
            /* [in] */ DWORD dwFileAttributes,
            /* [string][unique][in] */ LPCWSTR pszName,
            /* [string][unique][in] */ LPCWSTR pszTemplateName,
            /* [unique][in] */ IFileOperationProgressSink __RPC_FAR *pfopsItem);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *PerformOperations )( 
            IFileOperation __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetAnyOperationsAborted )( 
            IFileOperation __RPC_FAR * This,
            /* [out] */ BOOL __RPC_FAR *pfAnyOperationsAborted);
        
        END_INTERFACE
    } IFileOperationVtbl;

    interface IFileOperation
    {
        CONST_VTBL struct IFileOperationVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IFileOperation_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IFileOperation_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IFileOperation_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IFileOperation_Advise(This,pfops,pdwCookie)	\
    (This)->lpVtbl -> Advise(This,pfops,pdwCookie)

#define IFileOperation_Unadvise(This,dwCookie)	\
    (This)->lpVtbl -> Unadvise(This,dwCookie)

#define IFileOperation_SetOperationFlags(This,dwOperationFlags)	\
    (This)->lpVtbl -> SetOperationFlags(This,dwOperationFlags)

#define IFileOperation_SetProgressMessage(This,pszMessage)	\
    (This)->lpVtbl -> SetProgressMessage(This,pszMessage)

#define IFileOperation_SetProgressDialog(This,popd)	\
    (This)->lpVtbl -> SetProgressDialog(This,popd)

#define IFileOperation_SetProperties(This,pproparray)	\
    (This)->lpVtbl -> SetProperties(This,pproparray)

#define IFileOperation_SetOwnerWindow(This,hwndParent)	\
    (This)->lpVtbl -> SetOwnerWindow(This,hwndParent)

#define IFileOperation_ApplyPropertiesToItem(This,psiItem)	\
    (This)->lpVtbl -> ApplyPropertiesToItem(This,psiItem)

#define IFileOperation_ApplyPropertiesToItems(This,punkItems)	\
    (This)->lpVtbl -> ApplyPropertiesToItems(This,punkItems)

#define IFileOperation_RenameItem(This,psiItem,pszNewName,pfopsItem)	\
    (This)->lpVtbl -> RenameItem(This,psiItem,pszNewName,pfopsItem)

#define IFileOperation_RenameItems(This,pUnkItems,pszNewName)	\
    (This)->lpVtbl -> RenameItems(This,pUnkItems,pszNewName)

#define IFileOperation_MoveItem(This,psiItem,psiDestinationFolder,pszNewName,pfopsItem)	\
    (This)->lpVtbl -> MoveItem(This,psiItem,psiDestinationFolder,pszNewName,pfopsItem)

#define IFileOperation_MoveItems(This,punkItems,psiDestinationFolder)	\
    (This)->lpVtbl -> MoveItems(This,punkItems,psiDestinationFolder)

#define IFileOperation_CopyItem(This,psiItem,psiDestinationFolder,pszCopyName,pfopsItem)	\
    (This)->lpVtbl -> CopyItem(This,psiItem,psiDestinationFolder,pszCopyName,pfopsItem)

#define IFileOperation_CopyItems(This,punkItems,psiDestinationFolder)	\
    (This)->lpVtbl -> CopyItems(This,punkItems,psiDestinationFolder)

#define IFileOperation_DeleteItem(This,psiItem,pfopsItem)	\
    (This)->lpVtbl -> DeleteItem(This,psiItem,pfopsItem)

#define IFileOperation_DeleteItems(This,punkItems)	\
    (This)->lpVtbl -> DeleteItems(This,punkItems)

#define IFileOperation_NewItem(This,psiDestinationFolder,dwFileAttributes,pszName,pszTemplateName,pfopsItem)	\
    (This)->lpVtbl -> NewItem(This,psiDestinationFolder,dwFileAttributes,pszName,pszTemplateName,pfopsItem)

#define IFileOperation_PerformOperations(This)	\
    (This)->lpVtbl -> PerformOperations(This)

#define IFileOperation_GetAnyOperationsAborted(This,pfAnyOperationsAborted)	\
    (This)->lpVtbl -> GetAnyOperationsAborted(This,pfAnyOperationsAborted)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IFileOperation_Advise_Proxy( 
    IFileOperation __RPC_FAR * This,
    /* [in] */ IFileOperationProgressSink __RPC_FAR *pfops,
    /* [out] */ DWORD __RPC_FAR *pdwCookie);


void __RPC_STUB IFileOperation_Advise_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileOperation_Unadvise_Proxy( 
    IFileOperation __RPC_FAR * This,
    /* [in] */ DWORD dwCookie);


void __RPC_STUB IFileOperation_Unadvise_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileOperation_SetOperationFlags_Proxy( 
    IFileOperation __RPC_FAR * This,
    /* [in] */ DWORD dwOperationFlags);


void __RPC_STUB IFileOperation_SetOperationFlags_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileOperation_SetProgressMessage_Proxy( 
    IFileOperation __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszMessage);


void __RPC_STUB IFileOperation_SetProgressMessage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileOperation_SetProgressDialog_Proxy( 
    IFileOperation __RPC_FAR * This,
    /* [in] */ IOperationsProgressDialog __RPC_FAR *popd);


void __RPC_STUB IFileOperation_SetProgressDialog_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileOperation_SetProperties_Proxy( 
    IFileOperation __RPC_FAR * This,
    /* [in] */ IPropertyChangeArray __RPC_FAR *pproparray);


void __RPC_STUB IFileOperation_SetProperties_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileOperation_SetOwnerWindow_Proxy( 
    IFileOperation __RPC_FAR * This,
    /* [in] */ HWND hwndParent);


void __RPC_STUB IFileOperation_SetOwnerWindow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileOperation_ApplyPropertiesToItem_Proxy( 
    IFileOperation __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psiItem);


void __RPC_STUB IFileOperation_ApplyPropertiesToItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileOperation_ApplyPropertiesToItems_Proxy( 
    IFileOperation __RPC_FAR * This,
    /* [in] */ IUnknown __RPC_FAR *punkItems);


void __RPC_STUB IFileOperation_ApplyPropertiesToItems_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileOperation_RenameItem_Proxy( 
    IFileOperation __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psiItem,
    /* [string][in] */ LPCWSTR pszNewName,
    /* [unique][in] */ IFileOperationProgressSink __RPC_FAR *pfopsItem);


void __RPC_STUB IFileOperation_RenameItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileOperation_RenameItems_Proxy( 
    IFileOperation __RPC_FAR * This,
    /* [in] */ IUnknown __RPC_FAR *pUnkItems,
    /* [string][in] */ LPCWSTR pszNewName);


void __RPC_STUB IFileOperation_RenameItems_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileOperation_MoveItem_Proxy( 
    IFileOperation __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psiItem,
    /* [in] */ IShellItem __RPC_FAR *psiDestinationFolder,
    /* [string][unique][in] */ LPCWSTR pszNewName,
    /* [unique][in] */ IFileOperationProgressSink __RPC_FAR *pfopsItem);


void __RPC_STUB IFileOperation_MoveItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileOperation_MoveItems_Proxy( 
    IFileOperation __RPC_FAR * This,
    /* [in] */ IUnknown __RPC_FAR *punkItems,
    /* [in] */ IShellItem __RPC_FAR *psiDestinationFolder);


void __RPC_STUB IFileOperation_MoveItems_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileOperation_CopyItem_Proxy( 
    IFileOperation __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psiItem,
    /* [in] */ IShellItem __RPC_FAR *psiDestinationFolder,
    /* [string][unique][in] */ LPCWSTR pszCopyName,
    /* [unique][in] */ IFileOperationProgressSink __RPC_FAR *pfopsItem);


void __RPC_STUB IFileOperation_CopyItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileOperation_CopyItems_Proxy( 
    IFileOperation __RPC_FAR * This,
    /* [in] */ IUnknown __RPC_FAR *punkItems,
    /* [in] */ IShellItem __RPC_FAR *psiDestinationFolder);


void __RPC_STUB IFileOperation_CopyItems_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileOperation_DeleteItem_Proxy( 
    IFileOperation __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psiItem,
    /* [unique][in] */ IFileOperationProgressSink __RPC_FAR *pfopsItem);


void __RPC_STUB IFileOperation_DeleteItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileOperation_DeleteItems_Proxy( 
    IFileOperation __RPC_FAR * This,
    /* [in] */ IUnknown __RPC_FAR *punkItems);


void __RPC_STUB IFileOperation_DeleteItems_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileOperation_NewItem_Proxy( 
    IFileOperation __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psiDestinationFolder,
    /* [in] */ DWORD dwFileAttributes,
    /* [string][unique][in] */ LPCWSTR pszName,
    /* [string][unique][in] */ LPCWSTR pszTemplateName,
    /* [unique][in] */ IFileOperationProgressSink __RPC_FAR *pfopsItem);


void __RPC_STUB IFileOperation_NewItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileOperation_PerformOperations_Proxy( 
    IFileOperation __RPC_FAR * This);


void __RPC_STUB IFileOperation_PerformOperations_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileOperation_GetAnyOperationsAborted_Proxy( 
    IFileOperation __RPC_FAR * This,
    /* [out] */ BOOL __RPC_FAR *pfAnyOperationsAborted);


void __RPC_STUB IFileOperation_GetAnyOperationsAborted_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IFileOperation_INTERFACE_DEFINED__ */


#ifndef __IObjectProvider_INTERFACE_DEFINED__
#define __IObjectProvider_INTERFACE_DEFINED__

/* interface IObjectProvider */
/* [unique][object][uuid] */ 


EXTERN_C const IID IID_IObjectProvider;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("a6087428-3be3-4d73-b308-7c04a540bf1a")
    IObjectProvider : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE QueryObject( 
            /* [in] */ REFGUID guidObject,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvOut) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IObjectProviderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IObjectProvider __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IObjectProvider __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IObjectProvider __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryObject )( 
            IObjectProvider __RPC_FAR * This,
            /* [in] */ REFGUID guidObject,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvOut);
        
        END_INTERFACE
    } IObjectProviderVtbl;

    interface IObjectProvider
    {
        CONST_VTBL struct IObjectProviderVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IObjectProvider_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IObjectProvider_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IObjectProvider_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IObjectProvider_QueryObject(This,guidObject,riid,ppvOut)	\
    (This)->lpVtbl -> QueryObject(This,guidObject,riid,ppvOut)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IObjectProvider_QueryObject_Proxy( 
    IObjectProvider __RPC_FAR * This,
    /* [in] */ REFGUID guidObject,
    /* [in] */ REFIID riid,
    /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvOut);


void __RPC_STUB IObjectProvider_QueryObject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IObjectProvider_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0389 */
/* [local] */ 

#endif  // (_WIN32_IE >= _WIN32_IE_IE70)


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0389_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0389_v0_0_s_ifspec;

#ifndef __INamespaceWalkCB_INTERFACE_DEFINED__
#define __INamespaceWalkCB_INTERFACE_DEFINED__

/* interface INamespaceWalkCB */
/* [object][helpstring][uuid] */ 


EXTERN_C const IID IID_INamespaceWalkCB;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("d92995f8-cf5e-4a76-bf59-ead39ea2b97e")
    INamespaceWalkCB : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE FoundItem( 
            /* [in] */ IShellFolder __RPC_FAR *psf,
            /* [in] */ PCUITEMID_CHILD pidl) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnterFolder( 
            /* [in] */ IShellFolder __RPC_FAR *psf,
            /* [in] */ PCUITEMID_CHILD pidl) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE LeaveFolder( 
            /* [in] */ IShellFolder __RPC_FAR *psf,
            /* [in] */ PCUITEMID_CHILD pidl) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InitializeProgressDialog( 
            /* [string][out] */ LPWSTR __RPC_FAR *ppszTitle,
            /* [string][out] */ LPWSTR __RPC_FAR *ppszCancel) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct INamespaceWalkCBVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            INamespaceWalkCB __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            INamespaceWalkCB __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            INamespaceWalkCB __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *FoundItem )( 
            INamespaceWalkCB __RPC_FAR * This,
            /* [in] */ IShellFolder __RPC_FAR *psf,
            /* [in] */ PCUITEMID_CHILD pidl);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *EnterFolder )( 
            INamespaceWalkCB __RPC_FAR * This,
            /* [in] */ IShellFolder __RPC_FAR *psf,
            /* [in] */ PCUITEMID_CHILD pidl);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *LeaveFolder )( 
            INamespaceWalkCB __RPC_FAR * This,
            /* [in] */ IShellFolder __RPC_FAR *psf,
            /* [in] */ PCUITEMID_CHILD pidl);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *InitializeProgressDialog )( 
            INamespaceWalkCB __RPC_FAR * This,
            /* [string][out] */ LPWSTR __RPC_FAR *ppszTitle,
            /* [string][out] */ LPWSTR __RPC_FAR *ppszCancel);
        
        END_INTERFACE
    } INamespaceWalkCBVtbl;

    interface INamespaceWalkCB
    {
        CONST_VTBL struct INamespaceWalkCBVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define INamespaceWalkCB_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define INamespaceWalkCB_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define INamespaceWalkCB_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define INamespaceWalkCB_FoundItem(This,psf,pidl)	\
    (This)->lpVtbl -> FoundItem(This,psf,pidl)

#define INamespaceWalkCB_EnterFolder(This,psf,pidl)	\
    (This)->lpVtbl -> EnterFolder(This,psf,pidl)

#define INamespaceWalkCB_LeaveFolder(This,psf,pidl)	\
    (This)->lpVtbl -> LeaveFolder(This,psf,pidl)

#define INamespaceWalkCB_InitializeProgressDialog(This,ppszTitle,ppszCancel)	\
    (This)->lpVtbl -> InitializeProgressDialog(This,ppszTitle,ppszCancel)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE INamespaceWalkCB_FoundItem_Proxy( 
    INamespaceWalkCB __RPC_FAR * This,
    /* [in] */ IShellFolder __RPC_FAR *psf,
    /* [in] */ PCUITEMID_CHILD pidl);


void __RPC_STUB INamespaceWalkCB_FoundItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INamespaceWalkCB_EnterFolder_Proxy( 
    INamespaceWalkCB __RPC_FAR * This,
    /* [in] */ IShellFolder __RPC_FAR *psf,
    /* [in] */ PCUITEMID_CHILD pidl);


void __RPC_STUB INamespaceWalkCB_EnterFolder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INamespaceWalkCB_LeaveFolder_Proxy( 
    INamespaceWalkCB __RPC_FAR * This,
    /* [in] */ IShellFolder __RPC_FAR *psf,
    /* [in] */ PCUITEMID_CHILD pidl);


void __RPC_STUB INamespaceWalkCB_LeaveFolder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INamespaceWalkCB_InitializeProgressDialog_Proxy( 
    INamespaceWalkCB __RPC_FAR * This,
    /* [string][out] */ LPWSTR __RPC_FAR *ppszTitle,
    /* [string][out] */ LPWSTR __RPC_FAR *ppszCancel);


void __RPC_STUB INamespaceWalkCB_InitializeProgressDialog_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __INamespaceWalkCB_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0390 */
/* [local] */ 

#if (_WIN32_IE >= _WIN32_IE_IE70)


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0390_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0390_v0_0_s_ifspec;

#ifndef __INamespaceWalkCB2_INTERFACE_DEFINED__
#define __INamespaceWalkCB2_INTERFACE_DEFINED__

/* interface INamespaceWalkCB2 */
/* [object][uuid] */ 


EXTERN_C const IID IID_INamespaceWalkCB2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7ac7492b-c38e-438a-87db-68737844ff70")
    INamespaceWalkCB2 : public INamespaceWalkCB
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE WalkComplete( 
            /* [in] */ HRESULT hr) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct INamespaceWalkCB2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            INamespaceWalkCB2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            INamespaceWalkCB2 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            INamespaceWalkCB2 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *FoundItem )( 
            INamespaceWalkCB2 __RPC_FAR * This,
            /* [in] */ IShellFolder __RPC_FAR *psf,
            /* [in] */ PCUITEMID_CHILD pidl);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *EnterFolder )( 
            INamespaceWalkCB2 __RPC_FAR * This,
            /* [in] */ IShellFolder __RPC_FAR *psf,
            /* [in] */ PCUITEMID_CHILD pidl);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *LeaveFolder )( 
            INamespaceWalkCB2 __RPC_FAR * This,
            /* [in] */ IShellFolder __RPC_FAR *psf,
            /* [in] */ PCUITEMID_CHILD pidl);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *InitializeProgressDialog )( 
            INamespaceWalkCB2 __RPC_FAR * This,
            /* [string][out] */ LPWSTR __RPC_FAR *ppszTitle,
            /* [string][out] */ LPWSTR __RPC_FAR *ppszCancel);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *WalkComplete )( 
            INamespaceWalkCB2 __RPC_FAR * This,
            /* [in] */ HRESULT hr);
        
        END_INTERFACE
    } INamespaceWalkCB2Vtbl;

    interface INamespaceWalkCB2
    {
        CONST_VTBL struct INamespaceWalkCB2Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define INamespaceWalkCB2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define INamespaceWalkCB2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define INamespaceWalkCB2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define INamespaceWalkCB2_FoundItem(This,psf,pidl)	\
    (This)->lpVtbl -> FoundItem(This,psf,pidl)

#define INamespaceWalkCB2_EnterFolder(This,psf,pidl)	\
    (This)->lpVtbl -> EnterFolder(This,psf,pidl)

#define INamespaceWalkCB2_LeaveFolder(This,psf,pidl)	\
    (This)->lpVtbl -> LeaveFolder(This,psf,pidl)

#define INamespaceWalkCB2_InitializeProgressDialog(This,ppszTitle,ppszCancel)	\
    (This)->lpVtbl -> InitializeProgressDialog(This,ppszTitle,ppszCancel)


#define INamespaceWalkCB2_WalkComplete(This,hr)	\
    (This)->lpVtbl -> WalkComplete(This,hr)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE INamespaceWalkCB2_WalkComplete_Proxy( 
    INamespaceWalkCB2 __RPC_FAR * This,
    /* [in] */ HRESULT hr);


void __RPC_STUB INamespaceWalkCB2_WalkComplete_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __INamespaceWalkCB2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0391 */
/* [local] */ 

#endif  // (_WIN32_IE >= _WIN32_IE_IE70)


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0391_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0391_v0_0_s_ifspec;

#ifndef __INamespaceWalk_INTERFACE_DEFINED__
#define __INamespaceWalk_INTERFACE_DEFINED__

/* interface INamespaceWalk */
/* [object][helpstring][uuid] */ 


enum tagNAMESPACEWALKFLAG
    {	NSWF_NONE_IMPLIES_ALL	= 0x1,
	NSWF_ONE_IMPLIES_ALL	= 0x2,
	NSWF_DONT_TRAVERSE_LINKS	= 0x4,
	NSWF_DONT_ACCUMULATE_RESULT	= 0x8,
	NSWF_TRAVERSE_STREAM_JUNCTIONS	= 0x10,
	NSWF_FILESYSTEM_ONLY	= 0x20,
	NSWF_SHOW_PROGRESS	= 0x40,
	NSWF_FLAG_VIEWORDER	= 0x80,
	NSWF_IGNORE_AUTOPLAY_HIDA	= 0x100,
	NSWF_ASYNC	= 0x200,
	NSWF_DONT_RESOLVE_LINKS	= 0x400,
	NSWF_ACCUMULATE_FOLDERS	= 0x800,
	NSWF_DONT_SORT	= 0x1000,
	NSWF_USE_TRANSFER_MEDIUM	= 0x2000
    };

EXTERN_C const IID IID_INamespaceWalk;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("57ced8a7-3f4a-432c-9350-30f24483f74f")
    INamespaceWalk : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Walk( 
            /* [in] */ IUnknown __RPC_FAR *punkToWalk,
            /* [in] */ DWORD dwFlags,
            /* [in] */ int cDepth,
            /* [unique][in] */ INamespaceWalkCB __RPC_FAR *pnswcb) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetIDArrayResult( 
            /* [out] */ UINT __RPC_FAR *pcItems,
            /* [size_is][size_is][out] */ PIDLIST_ABSOLUTE __RPC_FAR *__RPC_FAR *prgpidl) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct INamespaceWalkVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            INamespaceWalk __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            INamespaceWalk __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            INamespaceWalk __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Walk )( 
            INamespaceWalk __RPC_FAR * This,
            /* [in] */ IUnknown __RPC_FAR *punkToWalk,
            /* [in] */ DWORD dwFlags,
            /* [in] */ int cDepth,
            /* [unique][in] */ INamespaceWalkCB __RPC_FAR *pnswcb);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDArrayResult )( 
            INamespaceWalk __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pcItems,
            /* [size_is][size_is][out] */ PIDLIST_ABSOLUTE __RPC_FAR *__RPC_FAR *prgpidl);
        
        END_INTERFACE
    } INamespaceWalkVtbl;

    interface INamespaceWalk
    {
        CONST_VTBL struct INamespaceWalkVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define INamespaceWalk_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define INamespaceWalk_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define INamespaceWalk_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define INamespaceWalk_Walk(This,punkToWalk,dwFlags,cDepth,pnswcb)	\
    (This)->lpVtbl -> Walk(This,punkToWalk,dwFlags,cDepth,pnswcb)

#define INamespaceWalk_GetIDArrayResult(This,pcItems,prgpidl)	\
    (This)->lpVtbl -> GetIDArrayResult(This,pcItems,prgpidl)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE INamespaceWalk_Walk_Proxy( 
    INamespaceWalk __RPC_FAR * This,
    /* [in] */ IUnknown __RPC_FAR *punkToWalk,
    /* [in] */ DWORD dwFlags,
    /* [in] */ int cDepth,
    /* [unique][in] */ INamespaceWalkCB __RPC_FAR *pnswcb);


void __RPC_STUB INamespaceWalk_Walk_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INamespaceWalk_GetIDArrayResult_Proxy( 
    INamespaceWalk __RPC_FAR * This,
    /* [out] */ UINT __RPC_FAR *pcItems,
    /* [size_is][size_is][out] */ PIDLIST_ABSOLUTE __RPC_FAR *__RPC_FAR *prgpidl);


void __RPC_STUB INamespaceWalk_GetIDArrayResult_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __INamespaceWalk_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0392 */
/* [local] */ 

#endif  // NTDDI_WINXP || (_WIN32_IE >= _WIN32_IE_IE70)
_inline void FreeIDListArray(PIDLIST_RELATIVE *ppidls, UINT cItems)
{                                        
     UINT i;                             
     for (i = 0; i < cItems; i++)        
     {                                   
         CoTaskMemFree(ppidls[i]);       
     }                                   
     CoTaskMemFree(ppidls);              
}                                        
#if defined(STRICT_TYPED_ITEMIDS) && defined(__cplusplus)
_inline void FreeIDListArrayFull(PIDLIST_ABSOLUTE *ppidls, UINT cItems)
{                                        
     for (UINT i = 0; i < cItems; i++)   
     {                                   
         CoTaskMemFree(ppidls[i]);       
     }                                   
     CoTaskMemFree(ppidls);              
}                                        
_inline void FreeIDListArrayChild(PITEMID_CHILD *ppidls, UINT cItems)
{                                        
     for (UINT i = 0; i < cItems; i++)   
     {                                   
         CoTaskMemFree(ppidls[i]);       
     }                                   
     CoTaskMemFree(ppidls);              
}                                        
#else //  defined(STRICT_TYPED_ITEMIDS) && defined(__cplusplus)
#define FreeIDListArrayFull FreeIDListArray
#define FreeIDListArrayChild FreeIDListArray
#endif //  defined(STRICT_TYPED_ITEMIDS) && defined(__cplusplus)
#define ACDD_VISIBLE        0x0001


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0392_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0392_v0_0_s_ifspec;

#ifndef __IAutoCompleteDropDown_INTERFACE_DEFINED__
#define __IAutoCompleteDropDown_INTERFACE_DEFINED__

/* interface IAutoCompleteDropDown */
/* [unique][object][uuid] */ 


EXTERN_C const IID IID_IAutoCompleteDropDown;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3CD141F4-3C6A-11d2-BCAA-00C04FD929DB")
    IAutoCompleteDropDown : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetDropDownStatus( 
            /* [out] */ DWORD __RPC_FAR *pdwFlags,
            /* [string][out] */ LPWSTR __RPC_FAR *ppwszString) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ResetEnumerator( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAutoCompleteDropDownVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAutoCompleteDropDown __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAutoCompleteDropDown __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAutoCompleteDropDown __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetDropDownStatus )( 
            IAutoCompleteDropDown __RPC_FAR * This,
            /* [out] */ DWORD __RPC_FAR *pdwFlags,
            /* [string][out] */ LPWSTR __RPC_FAR *ppwszString);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ResetEnumerator )( 
            IAutoCompleteDropDown __RPC_FAR * This);
        
        END_INTERFACE
    } IAutoCompleteDropDownVtbl;

    interface IAutoCompleteDropDown
    {
        CONST_VTBL struct IAutoCompleteDropDownVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAutoCompleteDropDown_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAutoCompleteDropDown_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAutoCompleteDropDown_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAutoCompleteDropDown_GetDropDownStatus(This,pdwFlags,ppwszString)	\
    (This)->lpVtbl -> GetDropDownStatus(This,pdwFlags,ppwszString)

#define IAutoCompleteDropDown_ResetEnumerator(This)	\
    (This)->lpVtbl -> ResetEnumerator(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAutoCompleteDropDown_GetDropDownStatus_Proxy( 
    IAutoCompleteDropDown __RPC_FAR * This,
    /* [out] */ DWORD __RPC_FAR *pdwFlags,
    /* [string][out] */ LPWSTR __RPC_FAR *ppwszString);


void __RPC_STUB IAutoCompleteDropDown_GetDropDownStatus_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAutoCompleteDropDown_ResetEnumerator_Proxy( 
    IAutoCompleteDropDown __RPC_FAR * This);


void __RPC_STUB IAutoCompleteDropDown_ResetEnumerator_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAutoCompleteDropDown_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0393 */
/* [local] */ 

#if (_WIN32_IE >= _WIN32_IE_IE40)
#include <pshpack8.h>
typedef struct tagBANDSITEINFO
    {
    DWORD dwMask;
    DWORD dwState;
    DWORD dwStyle;
    }	BANDSITEINFO;

#include <poppack.h>

enum tagBANDSITECID
    {	BSID_BANDADDED	= 0,
	BSID_BANDREMOVED	= BSID_BANDADDED + 1
    };
#define BSIM_STATE          0x00000001
#define BSIM_STYLE          0x00000002
#define BSSF_VISIBLE        0x00000001
#define BSSF_NOTITLE        0x00000002
#define BSSF_UNDELETEABLE   0x00001000
#define BSIS_AUTOGRIPPER               0x00000000
#define BSIS_NOGRIPPER                 0x00000001
#define BSIS_ALWAYSGRIPPER             0x00000002
#define BSIS_LEFTALIGN                 0x00000004
#define BSIS_SINGLECLICK               0x00000008
#define BSIS_NOCONTEXTMENU             0x00000010
#define BSIS_NODROPTARGET              0x00000020
#define BSIS_NOCAPTION                 0x00000040
#define BSIS_PREFERNOLINEBREAK         0x00000080
#define BSIS_LOCKED                    0x00000100
#if (_WIN32_IE >= _WIN32_IE_IE70)
#define BSIS_PRESERVEORDERDURINGLAYOUT 0x00000200
#endif  // _WIN32_IE_IE70
#define SID_SBandSite IID_IBandSite
#define CGID_BandSite IID_IBandSite


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0393_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0393_v0_0_s_ifspec;

#ifndef __IBandSite_INTERFACE_DEFINED__
#define __IBandSite_INTERFACE_DEFINED__

/* interface IBandSite */
/* [uuid][object] */ 


EXTERN_C const IID IID_IBandSite;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4CF504B0-DE96-11D0-8B3F-00A0C911E8E5")
    IBandSite : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE AddBand( 
            /* [in] */ IUnknown __RPC_FAR *punk) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnumBands( 
            /* [in] */ UINT uBand,
            /* [out] */ DWORD __RPC_FAR *pdwBandID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE QueryBand( 
            /* [in] */ DWORD dwBandID,
            /* [out] */ IDeskBand __RPC_FAR *__RPC_FAR *ppstb,
            /* [out] */ DWORD __RPC_FAR *pdwState,
            /* [size_is][string][out] */ LPWSTR pszName,
            /* [in] */ int cchName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetBandState( 
            /* [in] */ DWORD dwBandID,
            /* [in] */ DWORD dwMask,
            /* [in] */ DWORD dwState) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveBand( 
            /* [in] */ DWORD dwBandID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetBandObject( 
            /* [in] */ DWORD dwBandID,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetBandSiteInfo( 
            /* [in] */ const BANDSITEINFO __RPC_FAR *pbsinfo) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetBandSiteInfo( 
            /* [out][in] */ BANDSITEINFO __RPC_FAR *pbsinfo) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBandSiteVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IBandSite __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IBandSite __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IBandSite __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AddBand )( 
            IBandSite __RPC_FAR * This,
            /* [in] */ IUnknown __RPC_FAR *punk);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *EnumBands )( 
            IBandSite __RPC_FAR * This,
            /* [in] */ UINT uBand,
            /* [out] */ DWORD __RPC_FAR *pdwBandID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryBand )( 
            IBandSite __RPC_FAR * This,
            /* [in] */ DWORD dwBandID,
            /* [out] */ IDeskBand __RPC_FAR *__RPC_FAR *ppstb,
            /* [out] */ DWORD __RPC_FAR *pdwState,
            /* [size_is][string][out] */ LPWSTR pszName,
            /* [in] */ int cchName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetBandState )( 
            IBandSite __RPC_FAR * This,
            /* [in] */ DWORD dwBandID,
            /* [in] */ DWORD dwMask,
            /* [in] */ DWORD dwState);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RemoveBand )( 
            IBandSite __RPC_FAR * This,
            /* [in] */ DWORD dwBandID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetBandObject )( 
            IBandSite __RPC_FAR * This,
            /* [in] */ DWORD dwBandID,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetBandSiteInfo )( 
            IBandSite __RPC_FAR * This,
            /* [in] */ const BANDSITEINFO __RPC_FAR *pbsinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetBandSiteInfo )( 
            IBandSite __RPC_FAR * This,
            /* [out][in] */ BANDSITEINFO __RPC_FAR *pbsinfo);
        
        END_INTERFACE
    } IBandSiteVtbl;

    interface IBandSite
    {
        CONST_VTBL struct IBandSiteVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBandSite_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IBandSite_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IBandSite_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IBandSite_AddBand(This,punk)	\
    (This)->lpVtbl -> AddBand(This,punk)

#define IBandSite_EnumBands(This,uBand,pdwBandID)	\
    (This)->lpVtbl -> EnumBands(This,uBand,pdwBandID)

#define IBandSite_QueryBand(This,dwBandID,ppstb,pdwState,pszName,cchName)	\
    (This)->lpVtbl -> QueryBand(This,dwBandID,ppstb,pdwState,pszName,cchName)

#define IBandSite_SetBandState(This,dwBandID,dwMask,dwState)	\
    (This)->lpVtbl -> SetBandState(This,dwBandID,dwMask,dwState)

#define IBandSite_RemoveBand(This,dwBandID)	\
    (This)->lpVtbl -> RemoveBand(This,dwBandID)

#define IBandSite_GetBandObject(This,dwBandID,riid,ppv)	\
    (This)->lpVtbl -> GetBandObject(This,dwBandID,riid,ppv)

#define IBandSite_SetBandSiteInfo(This,pbsinfo)	\
    (This)->lpVtbl -> SetBandSiteInfo(This,pbsinfo)

#define IBandSite_GetBandSiteInfo(This,pbsinfo)	\
    (This)->lpVtbl -> GetBandSiteInfo(This,pbsinfo)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IBandSite_AddBand_Proxy( 
    IBandSite __RPC_FAR * This,
    /* [in] */ IUnknown __RPC_FAR *punk);


void __RPC_STUB IBandSite_AddBand_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBandSite_EnumBands_Proxy( 
    IBandSite __RPC_FAR * This,
    /* [in] */ UINT uBand,
    /* [out] */ DWORD __RPC_FAR *pdwBandID);


void __RPC_STUB IBandSite_EnumBands_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBandSite_QueryBand_Proxy( 
    IBandSite __RPC_FAR * This,
    /* [in] */ DWORD dwBandID,
    /* [out] */ IDeskBand __RPC_FAR *__RPC_FAR *ppstb,
    /* [out] */ DWORD __RPC_FAR *pdwState,
    /* [size_is][string][out] */ LPWSTR pszName,
    /* [in] */ int cchName);


void __RPC_STUB IBandSite_QueryBand_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBandSite_SetBandState_Proxy( 
    IBandSite __RPC_FAR * This,
    /* [in] */ DWORD dwBandID,
    /* [in] */ DWORD dwMask,
    /* [in] */ DWORD dwState);


void __RPC_STUB IBandSite_SetBandState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBandSite_RemoveBand_Proxy( 
    IBandSite __RPC_FAR * This,
    /* [in] */ DWORD dwBandID);


void __RPC_STUB IBandSite_RemoveBand_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBandSite_GetBandObject_Proxy( 
    IBandSite __RPC_FAR * This,
    /* [in] */ DWORD dwBandID,
    /* [in] */ REFIID riid,
    /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);


void __RPC_STUB IBandSite_GetBandObject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBandSite_SetBandSiteInfo_Proxy( 
    IBandSite __RPC_FAR * This,
    /* [in] */ const BANDSITEINFO __RPC_FAR *pbsinfo);


void __RPC_STUB IBandSite_SetBandSiteInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBandSite_GetBandSiteInfo_Proxy( 
    IBandSite __RPC_FAR * This,
    /* [out][in] */ BANDSITEINFO __RPC_FAR *pbsinfo);


void __RPC_STUB IBandSite_GetBandSiteInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IBandSite_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0394 */
/* [local] */ 

#endif // _WIN32_IE_IE40
#if (NTDDI_VERSION >= NTDDI_WINXP)


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0394_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0394_v0_0_s_ifspec;

#ifndef __IModalWindow_INTERFACE_DEFINED__
#define __IModalWindow_INTERFACE_DEFINED__

/* interface IModalWindow */
/* [unique][object][uuid][helpstring] */ 


EXTERN_C const IID IID_IModalWindow;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("b4db1657-70d7-485e-8e3e-6fcb5a5c1802")
    IModalWindow : public IUnknown
    {
    public:
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE Show( 
            /* [in] */ HWND hwndParent) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IModalWindowVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IModalWindow __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IModalWindow __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IModalWindow __RPC_FAR * This);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Show )( 
            IModalWindow __RPC_FAR * This,
            /* [in] */ HWND hwndParent);
        
        END_INTERFACE
    } IModalWindowVtbl;

    interface IModalWindow
    {
        CONST_VTBL struct IModalWindowVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IModalWindow_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IModalWindow_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IModalWindow_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IModalWindow_Show(This,hwndParent)	\
    (This)->lpVtbl -> Show(This,hwndParent)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [call_as] */ HRESULT STDMETHODCALLTYPE IModalWindow_RemoteShow_Proxy( 
    IModalWindow __RPC_FAR * This,
    /* [in] */ HWND hwndParent);


void __RPC_STUB IModalWindow_RemoteShow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IModalWindow_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0395 */
/* [local] */ 

#define PROPSTR_EXTENSIONCOMPLETIONSTATE L"ExtensionCompletionState"

enum tagCDBURNINGEXTENSIONRET
    {	CDBE_RET_DEFAULT	= 0,
	CDBE_RET_DONTRUNOTHEREXTS	= 0x1,
	CDBE_RET_STOPWIZARD	= 0x2
    };
#define SID_CDWizardHost IID_ICDBurnExt

enum tagCDBURNINGEXTENSIONACTION
    {	CDBE_TYPE_MUSIC	= 0x1,
	CDBE_TYPE_DATA	= 0x2,
	CDBE_TYPE_ALL	= 0xffffffff
    };
typedef DWORD CDBE_ACTIONS;



extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0395_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0395_v0_0_s_ifspec;

#ifndef __ICDBurnExt_INTERFACE_DEFINED__
#define __ICDBurnExt_INTERFACE_DEFINED__

/* interface ICDBurnExt */
/* [object][helpstring][uuid] */ 


EXTERN_C const IID IID_ICDBurnExt;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2271dcca-74fc-4414-8fb7-c56b05ace2d7")
    ICDBurnExt : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetSupportedActionTypes( 
            /* [out] */ CDBE_ACTIONS __RPC_FAR *pdwActions) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ICDBurnExtVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            ICDBurnExt __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            ICDBurnExt __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            ICDBurnExt __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSupportedActionTypes )( 
            ICDBurnExt __RPC_FAR * This,
            /* [out] */ CDBE_ACTIONS __RPC_FAR *pdwActions);
        
        END_INTERFACE
    } ICDBurnExtVtbl;

    interface ICDBurnExt
    {
        CONST_VTBL struct ICDBurnExtVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICDBurnExt_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define ICDBurnExt_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define ICDBurnExt_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define ICDBurnExt_GetSupportedActionTypes(This,pdwActions)	\
    (This)->lpVtbl -> GetSupportedActionTypes(This,pdwActions)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE ICDBurnExt_GetSupportedActionTypes_Proxy( 
    ICDBurnExt __RPC_FAR * This,
    /* [out] */ CDBE_ACTIONS __RPC_FAR *pdwActions);


void __RPC_STUB ICDBurnExt_GetSupportedActionTypes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __ICDBurnExt_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0396 */
/* [local] */ 

#endif  // NTDDI_WINXP


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0396_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0396_v0_0_s_ifspec;

#ifndef __IContextMenuSite_INTERFACE_DEFINED__
#define __IContextMenuSite_INTERFACE_DEFINED__

/* interface IContextMenuSite */
/* [unique][object][uuid] */ 


EXTERN_C const IID IID_IContextMenuSite;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0811AEBE-0B87-4C54-9E72-548CF649016B")
    IContextMenuSite : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE DoContextMenuPopup( 
            /* [in] */ IUnknown __RPC_FAR *punkContextMenu,
            /* [in] */ UINT fFlags,
            /* [in] */ POINT pt) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IContextMenuSiteVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IContextMenuSite __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IContextMenuSite __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IContextMenuSite __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DoContextMenuPopup )( 
            IContextMenuSite __RPC_FAR * This,
            /* [in] */ IUnknown __RPC_FAR *punkContextMenu,
            /* [in] */ UINT fFlags,
            /* [in] */ POINT pt);
        
        END_INTERFACE
    } IContextMenuSiteVtbl;

    interface IContextMenuSite
    {
        CONST_VTBL struct IContextMenuSiteVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IContextMenuSite_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IContextMenuSite_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IContextMenuSite_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IContextMenuSite_DoContextMenuPopup(This,punkContextMenu,fFlags,pt)	\
    (This)->lpVtbl -> DoContextMenuPopup(This,punkContextMenu,fFlags,pt)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IContextMenuSite_DoContextMenuPopup_Proxy( 
    IContextMenuSite __RPC_FAR * This,
    /* [in] */ IUnknown __RPC_FAR *punkContextMenu,
    /* [in] */ UINT fFlags,
    /* [in] */ POINT pt);


void __RPC_STUB IContextMenuSite_DoContextMenuPopup_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IContextMenuSite_INTERFACE_DEFINED__ */


#ifndef __IEnumReadyCallback_INTERFACE_DEFINED__
#define __IEnumReadyCallback_INTERFACE_DEFINED__

/* interface IEnumReadyCallback */
/* [local][unique][object][uuid] */ 


EXTERN_C const IID IID_IEnumReadyCallback;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("61E00D45-8FFF-4e60-924E-6537B61612DD")
    IEnumReadyCallback : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE EnumReady( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumReadyCallbackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IEnumReadyCallback __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IEnumReadyCallback __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IEnumReadyCallback __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *EnumReady )( 
            IEnumReadyCallback __RPC_FAR * This);
        
        END_INTERFACE
    } IEnumReadyCallbackVtbl;

    interface IEnumReadyCallback
    {
        CONST_VTBL struct IEnumReadyCallbackVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumReadyCallback_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IEnumReadyCallback_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IEnumReadyCallback_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IEnumReadyCallback_EnumReady(This)	\
    (This)->lpVtbl -> EnumReady(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IEnumReadyCallback_EnumReady_Proxy( 
    IEnumReadyCallback __RPC_FAR * This);


void __RPC_STUB IEnumReadyCallback_EnumReady_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IEnumReadyCallback_INTERFACE_DEFINED__ */


#ifndef __IEnumerableView_INTERFACE_DEFINED__
#define __IEnumerableView_INTERFACE_DEFINED__

/* interface IEnumerableView */
/* [object][local][helpstring][uuid] */ 


EXTERN_C const IID IID_IEnumerableView;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8C8BF236-1AEC-495f-9894-91D57C3C686F")
    IEnumerableView : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetEnumReadyCallback( 
            /* [in] */ IEnumReadyCallback __RPC_FAR *percb) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateEnumIDListFromContents( 
            /* [in] */ PCIDLIST_ABSOLUTE pidlFolder,
            /* [in] */ DWORD dwEnumFlags,
            /* [out] */ IEnumIDList __RPC_FAR *__RPC_FAR *ppEnumIDList) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumerableViewVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IEnumerableView __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IEnumerableView __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IEnumerableView __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetEnumReadyCallback )( 
            IEnumerableView __RPC_FAR * This,
            /* [in] */ IEnumReadyCallback __RPC_FAR *percb);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CreateEnumIDListFromContents )( 
            IEnumerableView __RPC_FAR * This,
            /* [in] */ PCIDLIST_ABSOLUTE pidlFolder,
            /* [in] */ DWORD dwEnumFlags,
            /* [out] */ IEnumIDList __RPC_FAR *__RPC_FAR *ppEnumIDList);
        
        END_INTERFACE
    } IEnumerableViewVtbl;

    interface IEnumerableView
    {
        CONST_VTBL struct IEnumerableViewVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumerableView_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IEnumerableView_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IEnumerableView_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IEnumerableView_SetEnumReadyCallback(This,percb)	\
    (This)->lpVtbl -> SetEnumReadyCallback(This,percb)

#define IEnumerableView_CreateEnumIDListFromContents(This,pidlFolder,dwEnumFlags,ppEnumIDList)	\
    (This)->lpVtbl -> CreateEnumIDListFromContents(This,pidlFolder,dwEnumFlags,ppEnumIDList)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IEnumerableView_SetEnumReadyCallback_Proxy( 
    IEnumerableView __RPC_FAR * This,
    /* [in] */ IEnumReadyCallback __RPC_FAR *percb);


void __RPC_STUB IEnumerableView_SetEnumReadyCallback_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumerableView_CreateEnumIDListFromContents_Proxy( 
    IEnumerableView __RPC_FAR * This,
    /* [in] */ PCIDLIST_ABSOLUTE pidlFolder,
    /* [in] */ DWORD dwEnumFlags,
    /* [out] */ IEnumIDList __RPC_FAR *__RPC_FAR *ppEnumIDList);


void __RPC_STUB IEnumerableView_CreateEnumIDListFromContents_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IEnumerableView_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0399 */
/* [local] */ 

#define SID_EnumerableView IID_IEnumerableView
#if (NTDDI_VERSION >= NTDDI_WINXP) || (_WIN32_IE >= _WIN32_IE_IE70)


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0399_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0399_v0_0_s_ifspec;

#ifndef __IInsertItem_INTERFACE_DEFINED__
#define __IInsertItem_INTERFACE_DEFINED__

/* interface IInsertItem */
/* [local][object][uuid][helpstring] */ 


EXTERN_C const IID IID_IInsertItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D2B57227-3D23-4b95-93C0-492BD454C356")
    IInsertItem : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE InsertItem( 
            /* [in] */ PCUIDLIST_RELATIVE pidl) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IInsertItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IInsertItem __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IInsertItem __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IInsertItem __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *InsertItem )( 
            IInsertItem __RPC_FAR * This,
            /* [in] */ PCUIDLIST_RELATIVE pidl);
        
        END_INTERFACE
    } IInsertItemVtbl;

    interface IInsertItem
    {
        CONST_VTBL struct IInsertItemVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IInsertItem_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IInsertItem_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IInsertItem_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IInsertItem_InsertItem(This,pidl)	\
    (This)->lpVtbl -> InsertItem(This,pidl)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IInsertItem_InsertItem_Proxy( 
    IInsertItem __RPC_FAR * This,
    /* [in] */ PCUIDLIST_RELATIVE pidl);


void __RPC_STUB IInsertItem_InsertItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IInsertItem_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0400 */
/* [local] */ 

#if (NTDDI_VERSION >= NTDDI_WINXP)


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0400_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0400_v0_0_s_ifspec;

#ifndef __IMenuBand_INTERFACE_DEFINED__
#define __IMenuBand_INTERFACE_DEFINED__

/* interface IMenuBand */
/* [local][unique][object][uuid] */ 


enum tagMENUBANDHANDLERCID
    {	MBHANDCID_PIDLSELECT	= 0
    };

EXTERN_C const IID IID_IMenuBand;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("568804CD-CBD7-11d0-9816-00C04FD91972")
    IMenuBand : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE IsMenuMessage( 
            /* [in] */ MSG __RPC_FAR *pmsg) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE TranslateMenuMessage( 
            /* [out][in] */ MSG __RPC_FAR *pmsg,
            /* [out] */ LRESULT __RPC_FAR *plRet) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMenuBandVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IMenuBand __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IMenuBand __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IMenuBand __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *IsMenuMessage )( 
            IMenuBand __RPC_FAR * This,
            /* [in] */ MSG __RPC_FAR *pmsg);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *TranslateMenuMessage )( 
            IMenuBand __RPC_FAR * This,
            /* [out][in] */ MSG __RPC_FAR *pmsg,
            /* [out] */ LRESULT __RPC_FAR *plRet);
        
        END_INTERFACE
    } IMenuBandVtbl;

    interface IMenuBand
    {
        CONST_VTBL struct IMenuBandVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMenuBand_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMenuBand_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMenuBand_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMenuBand_IsMenuMessage(This,pmsg)	\
    (This)->lpVtbl -> IsMenuMessage(This,pmsg)

#define IMenuBand_TranslateMenuMessage(This,pmsg,plRet)	\
    (This)->lpVtbl -> TranslateMenuMessage(This,pmsg,plRet)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IMenuBand_IsMenuMessage_Proxy( 
    IMenuBand __RPC_FAR * This,
    /* [in] */ MSG __RPC_FAR *pmsg);


void __RPC_STUB IMenuBand_IsMenuMessage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMenuBand_TranslateMenuMessage_Proxy( 
    IMenuBand __RPC_FAR * This,
    /* [out][in] */ MSG __RPC_FAR *pmsg,
    /* [out] */ LRESULT __RPC_FAR *plRet);


void __RPC_STUB IMenuBand_TranslateMenuMessage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMenuBand_INTERFACE_DEFINED__ */


#ifndef __IFolderBandPriv_INTERFACE_DEFINED__
#define __IFolderBandPriv_INTERFACE_DEFINED__

/* interface IFolderBandPriv */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IFolderBandPriv;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("47c01f95-e185-412c-b5c5-4f27df965aea")
    IFolderBandPriv : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetCascade( 
            /* [in] */ BOOL fCascade) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAccelerators( 
            /* [in] */ BOOL fAccelerators) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetNoIcons( 
            /* [in] */ BOOL fNoIcons) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetNoText( 
            /* [in] */ BOOL fNoText) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IFolderBandPrivVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IFolderBandPriv __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IFolderBandPriv __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IFolderBandPriv __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetCascade )( 
            IFolderBandPriv __RPC_FAR * This,
            /* [in] */ BOOL fCascade);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetAccelerators )( 
            IFolderBandPriv __RPC_FAR * This,
            /* [in] */ BOOL fAccelerators);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetNoIcons )( 
            IFolderBandPriv __RPC_FAR * This,
            /* [in] */ BOOL fNoIcons);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetNoText )( 
            IFolderBandPriv __RPC_FAR * This,
            /* [in] */ BOOL fNoText);
        
        END_INTERFACE
    } IFolderBandPrivVtbl;

    interface IFolderBandPriv
    {
        CONST_VTBL struct IFolderBandPrivVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IFolderBandPriv_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IFolderBandPriv_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IFolderBandPriv_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IFolderBandPriv_SetCascade(This,fCascade)	\
    (This)->lpVtbl -> SetCascade(This,fCascade)

#define IFolderBandPriv_SetAccelerators(This,fAccelerators)	\
    (This)->lpVtbl -> SetAccelerators(This,fAccelerators)

#define IFolderBandPriv_SetNoIcons(This,fNoIcons)	\
    (This)->lpVtbl -> SetNoIcons(This,fNoIcons)

#define IFolderBandPriv_SetNoText(This,fNoText)	\
    (This)->lpVtbl -> SetNoText(This,fNoText)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IFolderBandPriv_SetCascade_Proxy( 
    IFolderBandPriv __RPC_FAR * This,
    /* [in] */ BOOL fCascade);


void __RPC_STUB IFolderBandPriv_SetCascade_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderBandPriv_SetAccelerators_Proxy( 
    IFolderBandPriv __RPC_FAR * This,
    /* [in] */ BOOL fAccelerators);


void __RPC_STUB IFolderBandPriv_SetAccelerators_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderBandPriv_SetNoIcons_Proxy( 
    IFolderBandPriv __RPC_FAR * This,
    /* [in] */ BOOL fNoIcons);


void __RPC_STUB IFolderBandPriv_SetNoIcons_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderBandPriv_SetNoText_Proxy( 
    IFolderBandPriv __RPC_FAR * This,
    /* [in] */ BOOL fNoText);


void __RPC_STUB IFolderBandPriv_SetNoText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IFolderBandPriv_INTERFACE_DEFINED__ */


#ifndef __IRegTreeItem_INTERFACE_DEFINED__
#define __IRegTreeItem_INTERFACE_DEFINED__

/* interface IRegTreeItem */
/* [object][local][helpstring][uuid] */ 


EXTERN_C const IID IID_IRegTreeItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A9521922-0812-4d44-9EC3-7FD38C726F3D")
    IRegTreeItem : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCheckState( 
            /* [out] */ BOOL __RPC_FAR *pbCheck) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetCheckState( 
            /* [in] */ BOOL bCheck) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IRegTreeItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IRegTreeItem __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IRegTreeItem __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IRegTreeItem __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCheckState )( 
            IRegTreeItem __RPC_FAR * This,
            /* [out] */ BOOL __RPC_FAR *pbCheck);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetCheckState )( 
            IRegTreeItem __RPC_FAR * This,
            /* [in] */ BOOL bCheck);
        
        END_INTERFACE
    } IRegTreeItemVtbl;

    interface IRegTreeItem
    {
        CONST_VTBL struct IRegTreeItemVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IRegTreeItem_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IRegTreeItem_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IRegTreeItem_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IRegTreeItem_GetCheckState(This,pbCheck)	\
    (This)->lpVtbl -> GetCheckState(This,pbCheck)

#define IRegTreeItem_SetCheckState(This,bCheck)	\
    (This)->lpVtbl -> SetCheckState(This,bCheck)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IRegTreeItem_GetCheckState_Proxy( 
    IRegTreeItem __RPC_FAR * This,
    /* [out] */ BOOL __RPC_FAR *pbCheck);


void __RPC_STUB IRegTreeItem_GetCheckState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IRegTreeItem_SetCheckState_Proxy( 
    IRegTreeItem __RPC_FAR * This,
    /* [in] */ BOOL bCheck);


void __RPC_STUB IRegTreeItem_SetCheckState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IRegTreeItem_INTERFACE_DEFINED__ */


#ifndef __IImageRecompress_INTERFACE_DEFINED__
#define __IImageRecompress_INTERFACE_DEFINED__

/* interface IImageRecompress */
/* [object][unique][helpstring][uuid] */ 


EXTERN_C const IID IID_IImageRecompress;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("505f1513-6b3e-4892-a272-59f8889a4d3e")
    IImageRecompress : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE RecompressImage( 
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [in] */ int cx,
            /* [in] */ int cy,
            /* [in] */ int iQuality,
            /* [in] */ IStorage __RPC_FAR *pstg,
            /* [out] */ IStream __RPC_FAR *__RPC_FAR *ppstrmOut) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IImageRecompressVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IImageRecompress __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IImageRecompress __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IImageRecompress __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RecompressImage )( 
            IImageRecompress __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [in] */ int cx,
            /* [in] */ int cy,
            /* [in] */ int iQuality,
            /* [in] */ IStorage __RPC_FAR *pstg,
            /* [out] */ IStream __RPC_FAR *__RPC_FAR *ppstrmOut);
        
        END_INTERFACE
    } IImageRecompressVtbl;

    interface IImageRecompress
    {
        CONST_VTBL struct IImageRecompressVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IImageRecompress_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IImageRecompress_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IImageRecompress_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IImageRecompress_RecompressImage(This,psi,cx,cy,iQuality,pstg,ppstrmOut)	\
    (This)->lpVtbl -> RecompressImage(This,psi,cx,cy,iQuality,pstg,ppstrmOut)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IImageRecompress_RecompressImage_Proxy( 
    IImageRecompress __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psi,
    /* [in] */ int cx,
    /* [in] */ int cy,
    /* [in] */ int iQuality,
    /* [in] */ IStorage __RPC_FAR *pstg,
    /* [out] */ IStream __RPC_FAR *__RPC_FAR *ppstrmOut);


void __RPC_STUB IImageRecompress_RecompressImage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IImageRecompress_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0404 */
/* [local] */ 

#endif  // NTDDI_WINXP
#endif  // NTDDI_WINXP) || (_WIN32_IE >= _WIN32_IE_IE70)
#if (_WIN32_IE >= _WIN32_IE_IE60)


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0404_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0404_v0_0_s_ifspec;

#ifndef __IDeskBar_INTERFACE_DEFINED__
#define __IDeskBar_INTERFACE_DEFINED__

/* interface IDeskBar */
/* [local][unique][object][uuid] */ 


EXTERN_C const IID IID_IDeskBar;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("EB0FE173-1A3A-11D0-89B3-00A0C90A90AC")
    IDeskBar : public IOleWindow
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetClient( 
            /* [in] */ IUnknown __RPC_FAR *punkClient) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetClient( 
            /* [out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkClient) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnPosRectChangeDB( 
            /* [in] */ RECT __RPC_FAR *prc) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDeskBarVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IDeskBar __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IDeskBar __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IDeskBar __RPC_FAR * This);
        
        /* [input_sync] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetWindow )( 
            IDeskBar __RPC_FAR * This,
            /* [out] */ HWND __RPC_FAR *phwnd);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ContextSensitiveHelp )( 
            IDeskBar __RPC_FAR * This,
            /* [in] */ BOOL fEnterMode);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetClient )( 
            IDeskBar __RPC_FAR * This,
            /* [in] */ IUnknown __RPC_FAR *punkClient);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetClient )( 
            IDeskBar __RPC_FAR * This,
            /* [out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkClient);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnPosRectChangeDB )( 
            IDeskBar __RPC_FAR * This,
            /* [in] */ RECT __RPC_FAR *prc);
        
        END_INTERFACE
    } IDeskBarVtbl;

    interface IDeskBar
    {
        CONST_VTBL struct IDeskBarVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDeskBar_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IDeskBar_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IDeskBar_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IDeskBar_GetWindow(This,phwnd)	\
    (This)->lpVtbl -> GetWindow(This,phwnd)

#define IDeskBar_ContextSensitiveHelp(This,fEnterMode)	\
    (This)->lpVtbl -> ContextSensitiveHelp(This,fEnterMode)


#define IDeskBar_SetClient(This,punkClient)	\
    (This)->lpVtbl -> SetClient(This,punkClient)

#define IDeskBar_GetClient(This,ppunkClient)	\
    (This)->lpVtbl -> GetClient(This,ppunkClient)

#define IDeskBar_OnPosRectChangeDB(This,prc)	\
    (This)->lpVtbl -> OnPosRectChangeDB(This,prc)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IDeskBar_SetClient_Proxy( 
    IDeskBar __RPC_FAR * This,
    /* [in] */ IUnknown __RPC_FAR *punkClient);


void __RPC_STUB IDeskBar_SetClient_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IDeskBar_GetClient_Proxy( 
    IDeskBar __RPC_FAR * This,
    /* [out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkClient);


void __RPC_STUB IDeskBar_GetClient_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IDeskBar_OnPosRectChangeDB_Proxy( 
    IDeskBar __RPC_FAR * This,
    /* [in] */ RECT __RPC_FAR *prc);


void __RPC_STUB IDeskBar_OnPosRectChangeDB_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IDeskBar_INTERFACE_DEFINED__ */


#ifndef __IMenuPopup_INTERFACE_DEFINED__
#define __IMenuPopup_INTERFACE_DEFINED__

/* interface IMenuPopup */
/* [local][unique][object][uuid] */ 


enum tagMENUPOPUPSELECT
    {	MPOS_EXECUTE	= 0,
	MPOS_FULLCANCEL	= MPOS_EXECUTE + 1,
	MPOS_CANCELLEVEL	= MPOS_FULLCANCEL + 1,
	MPOS_SELECTLEFT	= MPOS_CANCELLEVEL + 1,
	MPOS_SELECTRIGHT	= MPOS_SELECTLEFT + 1,
	MPOS_CHILDTRACKING	= MPOS_SELECTRIGHT + 1
    };

enum tagMENUPOPUPPOPUPFLAGS
    {	MPPF_SETFOCUS	= 0x1,
	MPPF_INITIALSELECT	= 0x2,
	MPPF_NOANIMATE	= 0x4,
	MPPF_KEYBOARD	= 0x10,
	MPPF_REPOSITION	= 0x20,
	MPPF_FORCEZORDER	= 0x40,
	MPPF_FINALSELECT	= 0x80,
	MPPF_TOP	= 0x20000000,
	MPPF_LEFT	= 0x40000000,
	MPPF_RIGHT	= 0x60000000,
	MPPF_BOTTOM	= 0x80000000,
	MPPF_POS_MASK	= 0xe0000000,
	MPPF_ALIGN_LEFT	= 0x2000000,
	MPPF_ALIGN_RIGHT	= 0x4000000
    };
typedef int MP_POPUPFLAGS;


EXTERN_C const IID IID_IMenuPopup;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D1E7AFEB-6A2E-11d0-8C78-00C04FD918B4")
    IMenuPopup : public IDeskBar
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Popup( 
            /* [in] */ POINTL __RPC_FAR *ppt,
            /* [in] */ RECTL __RPC_FAR *prcExclude,
            /* [in] */ MP_POPUPFLAGS dwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnSelect( 
            /* [in] */ DWORD dwSelectType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetSubMenu( 
            /* [in] */ IMenuPopup __RPC_FAR *pmp,
            /* [in] */ BOOL fSet) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMenuPopupVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IMenuPopup __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IMenuPopup __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IMenuPopup __RPC_FAR * This);
        
        /* [input_sync] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetWindow )( 
            IMenuPopup __RPC_FAR * This,
            /* [out] */ HWND __RPC_FAR *phwnd);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ContextSensitiveHelp )( 
            IMenuPopup __RPC_FAR * This,
            /* [in] */ BOOL fEnterMode);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetClient )( 
            IMenuPopup __RPC_FAR * This,
            /* [in] */ IUnknown __RPC_FAR *punkClient);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetClient )( 
            IMenuPopup __RPC_FAR * This,
            /* [out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkClient);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnPosRectChangeDB )( 
            IMenuPopup __RPC_FAR * This,
            /* [in] */ RECT __RPC_FAR *prc);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Popup )( 
            IMenuPopup __RPC_FAR * This,
            /* [in] */ POINTL __RPC_FAR *ppt,
            /* [in] */ RECTL __RPC_FAR *prcExclude,
            /* [in] */ MP_POPUPFLAGS dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnSelect )( 
            IMenuPopup __RPC_FAR * This,
            /* [in] */ DWORD dwSelectType);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetSubMenu )( 
            IMenuPopup __RPC_FAR * This,
            /* [in] */ IMenuPopup __RPC_FAR *pmp,
            /* [in] */ BOOL fSet);
        
        END_INTERFACE
    } IMenuPopupVtbl;

    interface IMenuPopup
    {
        CONST_VTBL struct IMenuPopupVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMenuPopup_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMenuPopup_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMenuPopup_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMenuPopup_GetWindow(This,phwnd)	\
    (This)->lpVtbl -> GetWindow(This,phwnd)

#define IMenuPopup_ContextSensitiveHelp(This,fEnterMode)	\
    (This)->lpVtbl -> ContextSensitiveHelp(This,fEnterMode)


#define IMenuPopup_SetClient(This,punkClient)	\
    (This)->lpVtbl -> SetClient(This,punkClient)

#define IMenuPopup_GetClient(This,ppunkClient)	\
    (This)->lpVtbl -> GetClient(This,ppunkClient)

#define IMenuPopup_OnPosRectChangeDB(This,prc)	\
    (This)->lpVtbl -> OnPosRectChangeDB(This,prc)


#define IMenuPopup_Popup(This,ppt,prcExclude,dwFlags)	\
    (This)->lpVtbl -> Popup(This,ppt,prcExclude,dwFlags)

#define IMenuPopup_OnSelect(This,dwSelectType)	\
    (This)->lpVtbl -> OnSelect(This,dwSelectType)

#define IMenuPopup_SetSubMenu(This,pmp,fSet)	\
    (This)->lpVtbl -> SetSubMenu(This,pmp,fSet)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IMenuPopup_Popup_Proxy( 
    IMenuPopup __RPC_FAR * This,
    /* [in] */ POINTL __RPC_FAR *ppt,
    /* [in] */ RECTL __RPC_FAR *prcExclude,
    /* [in] */ MP_POPUPFLAGS dwFlags);


void __RPC_STUB IMenuPopup_Popup_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMenuPopup_OnSelect_Proxy( 
    IMenuPopup __RPC_FAR * This,
    /* [in] */ DWORD dwSelectType);


void __RPC_STUB IMenuPopup_OnSelect_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMenuPopup_SetSubMenu_Proxy( 
    IMenuPopup __RPC_FAR * This,
    /* [in] */ IMenuPopup __RPC_FAR *pmp,
    /* [in] */ BOOL fSet);


void __RPC_STUB IMenuPopup_SetSubMenu_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMenuPopup_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0406 */
/* [local] */ 

#endif  // _WIN32_IE_IE60
#if (NTDDI_VERSION >= NTDDI_LONGHORN)
typedef /* [helpstring] */ 
enum tagFILE_USAGE_TYPE
    {	FUT_PLAYING	= 0,
	FUT_EDITING	= FUT_PLAYING + 1,
	FUT_GENERIC	= FUT_EDITING + 1
    }	FILE_USAGE_TYPE;

#define OF_CAP_CANSWITCHTO     0x0001
#define OF_CAP_CANCLOSE        0x0002


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0406_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0406_v0_0_s_ifspec;

#ifndef __IFileIsInUse_INTERFACE_DEFINED__
#define __IFileIsInUse_INTERFACE_DEFINED__

/* interface IFileIsInUse */
/* [object][unique][uuid] */ 


EXTERN_C const IID IID_IFileIsInUse;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("64a1cbf0-3a1a-4461-9158-376969693950")
    IFileIsInUse : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAppName( 
            /* [string][out] */ LPWSTR __RPC_FAR *ppszName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetUsage( 
            /* [out] */ FILE_USAGE_TYPE __RPC_FAR *pfut) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCapabilities( 
            /* [out] */ DWORD __RPC_FAR *pdwCapFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSwitchToHWND( 
            /* [out] */ HWND __RPC_FAR *phwnd) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CloseFile( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IFileIsInUseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IFileIsInUse __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IFileIsInUse __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IFileIsInUse __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetAppName )( 
            IFileIsInUse __RPC_FAR * This,
            /* [string][out] */ LPWSTR __RPC_FAR *ppszName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetUsage )( 
            IFileIsInUse __RPC_FAR * This,
            /* [out] */ FILE_USAGE_TYPE __RPC_FAR *pfut);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCapabilities )( 
            IFileIsInUse __RPC_FAR * This,
            /* [out] */ DWORD __RPC_FAR *pdwCapFlags);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSwitchToHWND )( 
            IFileIsInUse __RPC_FAR * This,
            /* [out] */ HWND __RPC_FAR *phwnd);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CloseFile )( 
            IFileIsInUse __RPC_FAR * This);
        
        END_INTERFACE
    } IFileIsInUseVtbl;

    interface IFileIsInUse
    {
        CONST_VTBL struct IFileIsInUseVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IFileIsInUse_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IFileIsInUse_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IFileIsInUse_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IFileIsInUse_GetAppName(This,ppszName)	\
    (This)->lpVtbl -> GetAppName(This,ppszName)

#define IFileIsInUse_GetUsage(This,pfut)	\
    (This)->lpVtbl -> GetUsage(This,pfut)

#define IFileIsInUse_GetCapabilities(This,pdwCapFlags)	\
    (This)->lpVtbl -> GetCapabilities(This,pdwCapFlags)

#define IFileIsInUse_GetSwitchToHWND(This,phwnd)	\
    (This)->lpVtbl -> GetSwitchToHWND(This,phwnd)

#define IFileIsInUse_CloseFile(This)	\
    (This)->lpVtbl -> CloseFile(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IFileIsInUse_GetAppName_Proxy( 
    IFileIsInUse __RPC_FAR * This,
    /* [string][out] */ LPWSTR __RPC_FAR *ppszName);


void __RPC_STUB IFileIsInUse_GetAppName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileIsInUse_GetUsage_Proxy( 
    IFileIsInUse __RPC_FAR * This,
    /* [out] */ FILE_USAGE_TYPE __RPC_FAR *pfut);


void __RPC_STUB IFileIsInUse_GetUsage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileIsInUse_GetCapabilities_Proxy( 
    IFileIsInUse __RPC_FAR * This,
    /* [out] */ DWORD __RPC_FAR *pdwCapFlags);


void __RPC_STUB IFileIsInUse_GetCapabilities_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileIsInUse_GetSwitchToHWND_Proxy( 
    IFileIsInUse __RPC_FAR * This,
    /* [out] */ HWND __RPC_FAR *phwnd);


void __RPC_STUB IFileIsInUse_GetSwitchToHWND_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileIsInUse_CloseFile_Proxy( 
    IFileIsInUse __RPC_FAR * This);


void __RPC_STUB IFileIsInUse_CloseFile_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IFileIsInUse_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0407 */
/* [local] */ 


typedef /* [v1_enum] */ 
enum tagFDE_OVERWRITE_RESPONSE
    {	FDEOR_DEFAULT	= 0,
	FDEOR_ACCEPT	= 0x1,
	FDEOR_REFUSE	= 0x2
    }	FDE_OVERWRITE_RESPONSE;

typedef /* [v1_enum] */ 
enum tagFDE_SHAREVIOLATION_RESPONSE
    {	FDESVR_DEFAULT	= 0,
	FDESVR_ACCEPT	= 0x1,
	FDESVR_REFUSE	= 0x2
    }	FDE_SHAREVIOLATION_RESPONSE;

typedef /* [v1_enum] */ 
enum tagFDAP
    {	FDAP_BOTTOM	= 0,
	FDAP_TOP	= 0x1
    }	FDAP;



extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0407_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0407_v0_0_s_ifspec;

#ifndef __IFileDialogEvents_INTERFACE_DEFINED__
#define __IFileDialogEvents_INTERFACE_DEFINED__

/* interface IFileDialogEvents */
/* [unique][object][uuid] */ 


EXTERN_C const IID IID_IFileDialogEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("973510db-7d7f-452b-8975-74a85828d354")
    IFileDialogEvents : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OnFileOk( 
            /* [in] */ IFileDialog __RPC_FAR *pfd) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnFolderChanging( 
            /* [in] */ IFileDialog __RPC_FAR *pfd,
            /* [in] */ IShellItem __RPC_FAR *psiFolder) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnFolderChange( 
            /* [in] */ IFileDialog __RPC_FAR *pfd) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnSelectionChange( 
            /* [in] */ IFileDialog __RPC_FAR *pfd) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnShareViolation( 
            /* [in] */ IFileDialog __RPC_FAR *pfd,
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [out] */ FDE_SHAREVIOLATION_RESPONSE __RPC_FAR *pResponse) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnTypeChange( 
            /* [in] */ IFileDialog __RPC_FAR *pfd) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnOverwrite( 
            /* [in] */ IFileDialog __RPC_FAR *pfd,
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [out] */ FDE_OVERWRITE_RESPONSE __RPC_FAR *pResponse) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IFileDialogEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IFileDialogEvents __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IFileDialogEvents __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IFileDialogEvents __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnFileOk )( 
            IFileDialogEvents __RPC_FAR * This,
            /* [in] */ IFileDialog __RPC_FAR *pfd);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnFolderChanging )( 
            IFileDialogEvents __RPC_FAR * This,
            /* [in] */ IFileDialog __RPC_FAR *pfd,
            /* [in] */ IShellItem __RPC_FAR *psiFolder);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnFolderChange )( 
            IFileDialogEvents __RPC_FAR * This,
            /* [in] */ IFileDialog __RPC_FAR *pfd);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnSelectionChange )( 
            IFileDialogEvents __RPC_FAR * This,
            /* [in] */ IFileDialog __RPC_FAR *pfd);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnShareViolation )( 
            IFileDialogEvents __RPC_FAR * This,
            /* [in] */ IFileDialog __RPC_FAR *pfd,
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [out] */ FDE_SHAREVIOLATION_RESPONSE __RPC_FAR *pResponse);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnTypeChange )( 
            IFileDialogEvents __RPC_FAR * This,
            /* [in] */ IFileDialog __RPC_FAR *pfd);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnOverwrite )( 
            IFileDialogEvents __RPC_FAR * This,
            /* [in] */ IFileDialog __RPC_FAR *pfd,
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [out] */ FDE_OVERWRITE_RESPONSE __RPC_FAR *pResponse);
        
        END_INTERFACE
    } IFileDialogEventsVtbl;

    interface IFileDialogEvents
    {
        CONST_VTBL struct IFileDialogEventsVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IFileDialogEvents_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IFileDialogEvents_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IFileDialogEvents_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IFileDialogEvents_OnFileOk(This,pfd)	\
    (This)->lpVtbl -> OnFileOk(This,pfd)

#define IFileDialogEvents_OnFolderChanging(This,pfd,psiFolder)	\
    (This)->lpVtbl -> OnFolderChanging(This,pfd,psiFolder)

#define IFileDialogEvents_OnFolderChange(This,pfd)	\
    (This)->lpVtbl -> OnFolderChange(This,pfd)

#define IFileDialogEvents_OnSelectionChange(This,pfd)	\
    (This)->lpVtbl -> OnSelectionChange(This,pfd)

#define IFileDialogEvents_OnShareViolation(This,pfd,psi,pResponse)	\
    (This)->lpVtbl -> OnShareViolation(This,pfd,psi,pResponse)

#define IFileDialogEvents_OnTypeChange(This,pfd)	\
    (This)->lpVtbl -> OnTypeChange(This,pfd)

#define IFileDialogEvents_OnOverwrite(This,pfd,psi,pResponse)	\
    (This)->lpVtbl -> OnOverwrite(This,pfd,psi,pResponse)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IFileDialogEvents_OnFileOk_Proxy( 
    IFileDialogEvents __RPC_FAR * This,
    /* [in] */ IFileDialog __RPC_FAR *pfd);


void __RPC_STUB IFileDialogEvents_OnFileOk_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialogEvents_OnFolderChanging_Proxy( 
    IFileDialogEvents __RPC_FAR * This,
    /* [in] */ IFileDialog __RPC_FAR *pfd,
    /* [in] */ IShellItem __RPC_FAR *psiFolder);


void __RPC_STUB IFileDialogEvents_OnFolderChanging_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialogEvents_OnFolderChange_Proxy( 
    IFileDialogEvents __RPC_FAR * This,
    /* [in] */ IFileDialog __RPC_FAR *pfd);


void __RPC_STUB IFileDialogEvents_OnFolderChange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialogEvents_OnSelectionChange_Proxy( 
    IFileDialogEvents __RPC_FAR * This,
    /* [in] */ IFileDialog __RPC_FAR *pfd);


void __RPC_STUB IFileDialogEvents_OnSelectionChange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialogEvents_OnShareViolation_Proxy( 
    IFileDialogEvents __RPC_FAR * This,
    /* [in] */ IFileDialog __RPC_FAR *pfd,
    /* [in] */ IShellItem __RPC_FAR *psi,
    /* [out] */ FDE_SHAREVIOLATION_RESPONSE __RPC_FAR *pResponse);


void __RPC_STUB IFileDialogEvents_OnShareViolation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialogEvents_OnTypeChange_Proxy( 
    IFileDialogEvents __RPC_FAR * This,
    /* [in] */ IFileDialog __RPC_FAR *pfd);


void __RPC_STUB IFileDialogEvents_OnTypeChange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialogEvents_OnOverwrite_Proxy( 
    IFileDialogEvents __RPC_FAR * This,
    /* [in] */ IFileDialog __RPC_FAR *pfd,
    /* [in] */ IShellItem __RPC_FAR *psi,
    /* [out] */ FDE_OVERWRITE_RESPONSE __RPC_FAR *pResponse);


void __RPC_STUB IFileDialogEvents_OnOverwrite_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IFileDialogEvents_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0408 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0408_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0408_v0_0_s_ifspec;

#ifndef __IFileDialog_INTERFACE_DEFINED__
#define __IFileDialog_INTERFACE_DEFINED__

/* interface IFileDialog */
/* [unique][object][uuid] */ 


enum tagFILEOPENDIALOGOPTIONS
    {	FOS_OVERWRITEPROMPT	= 0x2,
	FOS_STRICTFILETYPES	= 0x4,
	FOS_NOCHANGEDIR	= 0x8,
	FOS_PICKFOLDERS	= 0x20,
	FOS_FORCEFILESYSTEM	= 0x40,
	FOS_ALLNONSTORAGEITEMS	= 0x80,
	FOS_NOVALIDATE	= 0x100,
	FOS_ALLOWMULTISELECT	= 0x200,
	FOS_PATHMUSTEXIST	= 0x800,
	FOS_FILEMUSTEXIST	= 0x1000,
	FOS_CREATEPROMPT	= 0x2000,
	FOS_SHAREAWARE	= 0x4000,
	FOS_NOREADONLYRETURN	= 0x8000,
	FOS_NOTESTFILECREATE	= 0x10000,
	FOS_HIDEMRUPLACES	= 0x20000,
	FOS_HIDEPINNEDPLACES	= 0x40000,
	FOS_NODEREFERENCELINKS	= 0x100000,
	FOS_DONTADDTORECENT	= 0x2000000,
	FOS_FORCESHOWHIDDEN	= 0x10000000,
	FOS_DEFAULTNOMINIMODE	= 0x20000000,
	FOS_FORCEPREVIEWPANEON	= 0x40000000
    };

EXTERN_C const IID IID_IFileDialog;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("42f85136-db7e-439c-85f1-e4075d135fc8")
    IFileDialog : public IModalWindow
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetFileTypes( 
            /* [in] */ UINT cFileTypes,
            /* [size_is][in] */ const COMDLG_FILTERSPEC __RPC_FAR *rgFilterSpec) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetFileTypeIndex( 
            /* [in] */ UINT iFileType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFileTypeIndex( 
            /* [out] */ UINT __RPC_FAR *piFileType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Advise( 
            /* [in] */ IFileDialogEvents __RPC_FAR *pfde,
            /* [out] */ DWORD __RPC_FAR *pdwCookie) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Unadvise( 
            /* [in] */ DWORD dwCookie) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetOptions( 
            /* [in] */ DWORD fos) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetOptions( 
            /* [out] */ DWORD __RPC_FAR *pfos) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetDefaultFolder( 
            /* [in] */ IShellItem __RPC_FAR *psi) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetFolder( 
            /* [in] */ IShellItem __RPC_FAR *psi) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFolder( 
            /* [out] */ IShellItem __RPC_FAR *__RPC_FAR *ppsi) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCurrentSelection( 
            /* [out] */ IShellItem __RPC_FAR *__RPC_FAR *ppsi) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetFileName( 
            /* [string][in] */ LPCWSTR pszName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFileName( 
            /* [string][out] */ LPWSTR __RPC_FAR *pszName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetTitle( 
            /* [string][in] */ LPCWSTR pszTitle) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetOkButtonLabel( 
            /* [string][in] */ LPCWSTR pszText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetFileNameLabel( 
            /* [string][in] */ LPCWSTR pszLabel) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetResult( 
            /* [out] */ IShellItem __RPC_FAR *__RPC_FAR *ppsi) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddPlace( 
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [in] */ FDAP fdap) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetDefaultExtension( 
            /* [string][in] */ LPCWSTR pszDefaultExtension) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Close( 
            /* [in] */ HRESULT hr) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetClientGuid( 
            /* [in] */ REFGUID guid) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ClearClientData( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetFilter( 
            /* [in] */ IShellItemFilter __RPC_FAR *pFilter) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IFileDialogVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IFileDialog __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IFileDialog __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IFileDialog __RPC_FAR * This);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Show )( 
            IFileDialog __RPC_FAR * This,
            /* [in] */ HWND hwndParent);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFileTypes )( 
            IFileDialog __RPC_FAR * This,
            /* [in] */ UINT cFileTypes,
            /* [size_is][in] */ const COMDLG_FILTERSPEC __RPC_FAR *rgFilterSpec);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFileTypeIndex )( 
            IFileDialog __RPC_FAR * This,
            /* [in] */ UINT iFileType);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFileTypeIndex )( 
            IFileDialog __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *piFileType);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Advise )( 
            IFileDialog __RPC_FAR * This,
            /* [in] */ IFileDialogEvents __RPC_FAR *pfde,
            /* [out] */ DWORD __RPC_FAR *pdwCookie);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Unadvise )( 
            IFileDialog __RPC_FAR * This,
            /* [in] */ DWORD dwCookie);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetOptions )( 
            IFileDialog __RPC_FAR * This,
            /* [in] */ DWORD fos);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetOptions )( 
            IFileDialog __RPC_FAR * This,
            /* [out] */ DWORD __RPC_FAR *pfos);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetDefaultFolder )( 
            IFileDialog __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psi);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFolder )( 
            IFileDialog __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psi);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFolder )( 
            IFileDialog __RPC_FAR * This,
            /* [out] */ IShellItem __RPC_FAR *__RPC_FAR *ppsi);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCurrentSelection )( 
            IFileDialog __RPC_FAR * This,
            /* [out] */ IShellItem __RPC_FAR *__RPC_FAR *ppsi);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFileName )( 
            IFileDialog __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFileName )( 
            IFileDialog __RPC_FAR * This,
            /* [string][out] */ LPWSTR __RPC_FAR *pszName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetTitle )( 
            IFileDialog __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszTitle);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetOkButtonLabel )( 
            IFileDialog __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszText);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFileNameLabel )( 
            IFileDialog __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszLabel);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetResult )( 
            IFileDialog __RPC_FAR * This,
            /* [out] */ IShellItem __RPC_FAR *__RPC_FAR *ppsi);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AddPlace )( 
            IFileDialog __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [in] */ FDAP fdap);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetDefaultExtension )( 
            IFileDialog __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszDefaultExtension);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Close )( 
            IFileDialog __RPC_FAR * This,
            /* [in] */ HRESULT hr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetClientGuid )( 
            IFileDialog __RPC_FAR * This,
            /* [in] */ REFGUID guid);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ClearClientData )( 
            IFileDialog __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFilter )( 
            IFileDialog __RPC_FAR * This,
            /* [in] */ IShellItemFilter __RPC_FAR *pFilter);
        
        END_INTERFACE
    } IFileDialogVtbl;

    interface IFileDialog
    {
        CONST_VTBL struct IFileDialogVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IFileDialog_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IFileDialog_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IFileDialog_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IFileDialog_Show(This,hwndParent)	\
    (This)->lpVtbl -> Show(This,hwndParent)


#define IFileDialog_SetFileTypes(This,cFileTypes,rgFilterSpec)	\
    (This)->lpVtbl -> SetFileTypes(This,cFileTypes,rgFilterSpec)

#define IFileDialog_SetFileTypeIndex(This,iFileType)	\
    (This)->lpVtbl -> SetFileTypeIndex(This,iFileType)

#define IFileDialog_GetFileTypeIndex(This,piFileType)	\
    (This)->lpVtbl -> GetFileTypeIndex(This,piFileType)

#define IFileDialog_Advise(This,pfde,pdwCookie)	\
    (This)->lpVtbl -> Advise(This,pfde,pdwCookie)

#define IFileDialog_Unadvise(This,dwCookie)	\
    (This)->lpVtbl -> Unadvise(This,dwCookie)

#define IFileDialog_SetOptions(This,fos)	\
    (This)->lpVtbl -> SetOptions(This,fos)

#define IFileDialog_GetOptions(This,pfos)	\
    (This)->lpVtbl -> GetOptions(This,pfos)

#define IFileDialog_SetDefaultFolder(This,psi)	\
    (This)->lpVtbl -> SetDefaultFolder(This,psi)

#define IFileDialog_SetFolder(This,psi)	\
    (This)->lpVtbl -> SetFolder(This,psi)

#define IFileDialog_GetFolder(This,ppsi)	\
    (This)->lpVtbl -> GetFolder(This,ppsi)

#define IFileDialog_GetCurrentSelection(This,ppsi)	\
    (This)->lpVtbl -> GetCurrentSelection(This,ppsi)

#define IFileDialog_SetFileName(This,pszName)	\
    (This)->lpVtbl -> SetFileName(This,pszName)

#define IFileDialog_GetFileName(This,pszName)	\
    (This)->lpVtbl -> GetFileName(This,pszName)

#define IFileDialog_SetTitle(This,pszTitle)	\
    (This)->lpVtbl -> SetTitle(This,pszTitle)

#define IFileDialog_SetOkButtonLabel(This,pszText)	\
    (This)->lpVtbl -> SetOkButtonLabel(This,pszText)

#define IFileDialog_SetFileNameLabel(This,pszLabel)	\
    (This)->lpVtbl -> SetFileNameLabel(This,pszLabel)

#define IFileDialog_GetResult(This,ppsi)	\
    (This)->lpVtbl -> GetResult(This,ppsi)

#define IFileDialog_AddPlace(This,psi,fdap)	\
    (This)->lpVtbl -> AddPlace(This,psi,fdap)

#define IFileDialog_SetDefaultExtension(This,pszDefaultExtension)	\
    (This)->lpVtbl -> SetDefaultExtension(This,pszDefaultExtension)

#define IFileDialog_Close(This,hr)	\
    (This)->lpVtbl -> Close(This,hr)

#define IFileDialog_SetClientGuid(This,guid)	\
    (This)->lpVtbl -> SetClientGuid(This,guid)

#define IFileDialog_ClearClientData(This)	\
    (This)->lpVtbl -> ClearClientData(This)

#define IFileDialog_SetFilter(This,pFilter)	\
    (This)->lpVtbl -> SetFilter(This,pFilter)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IFileDialog_SetFileTypes_Proxy( 
    IFileDialog __RPC_FAR * This,
    /* [in] */ UINT cFileTypes,
    /* [size_is][in] */ const COMDLG_FILTERSPEC __RPC_FAR *rgFilterSpec);


void __RPC_STUB IFileDialog_SetFileTypes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialog_SetFileTypeIndex_Proxy( 
    IFileDialog __RPC_FAR * This,
    /* [in] */ UINT iFileType);


void __RPC_STUB IFileDialog_SetFileTypeIndex_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialog_GetFileTypeIndex_Proxy( 
    IFileDialog __RPC_FAR * This,
    /* [out] */ UINT __RPC_FAR *piFileType);


void __RPC_STUB IFileDialog_GetFileTypeIndex_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialog_Advise_Proxy( 
    IFileDialog __RPC_FAR * This,
    /* [in] */ IFileDialogEvents __RPC_FAR *pfde,
    /* [out] */ DWORD __RPC_FAR *pdwCookie);


void __RPC_STUB IFileDialog_Advise_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialog_Unadvise_Proxy( 
    IFileDialog __RPC_FAR * This,
    /* [in] */ DWORD dwCookie);


void __RPC_STUB IFileDialog_Unadvise_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialog_SetOptions_Proxy( 
    IFileDialog __RPC_FAR * This,
    /* [in] */ DWORD fos);


void __RPC_STUB IFileDialog_SetOptions_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialog_GetOptions_Proxy( 
    IFileDialog __RPC_FAR * This,
    /* [out] */ DWORD __RPC_FAR *pfos);


void __RPC_STUB IFileDialog_GetOptions_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialog_SetDefaultFolder_Proxy( 
    IFileDialog __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psi);


void __RPC_STUB IFileDialog_SetDefaultFolder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialog_SetFolder_Proxy( 
    IFileDialog __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psi);


void __RPC_STUB IFileDialog_SetFolder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialog_GetFolder_Proxy( 
    IFileDialog __RPC_FAR * This,
    /* [out] */ IShellItem __RPC_FAR *__RPC_FAR *ppsi);


void __RPC_STUB IFileDialog_GetFolder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialog_GetCurrentSelection_Proxy( 
    IFileDialog __RPC_FAR * This,
    /* [out] */ IShellItem __RPC_FAR *__RPC_FAR *ppsi);


void __RPC_STUB IFileDialog_GetCurrentSelection_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialog_SetFileName_Proxy( 
    IFileDialog __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszName);


void __RPC_STUB IFileDialog_SetFileName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialog_GetFileName_Proxy( 
    IFileDialog __RPC_FAR * This,
    /* [string][out] */ LPWSTR __RPC_FAR *pszName);


void __RPC_STUB IFileDialog_GetFileName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialog_SetTitle_Proxy( 
    IFileDialog __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszTitle);


void __RPC_STUB IFileDialog_SetTitle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialog_SetOkButtonLabel_Proxy( 
    IFileDialog __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszText);


void __RPC_STUB IFileDialog_SetOkButtonLabel_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialog_SetFileNameLabel_Proxy( 
    IFileDialog __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszLabel);


void __RPC_STUB IFileDialog_SetFileNameLabel_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialog_GetResult_Proxy( 
    IFileDialog __RPC_FAR * This,
    /* [out] */ IShellItem __RPC_FAR *__RPC_FAR *ppsi);


void __RPC_STUB IFileDialog_GetResult_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialog_AddPlace_Proxy( 
    IFileDialog __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psi,
    /* [in] */ FDAP fdap);


void __RPC_STUB IFileDialog_AddPlace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialog_SetDefaultExtension_Proxy( 
    IFileDialog __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszDefaultExtension);


void __RPC_STUB IFileDialog_SetDefaultExtension_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialog_Close_Proxy( 
    IFileDialog __RPC_FAR * This,
    /* [in] */ HRESULT hr);


void __RPC_STUB IFileDialog_Close_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialog_SetClientGuid_Proxy( 
    IFileDialog __RPC_FAR * This,
    /* [in] */ REFGUID guid);


void __RPC_STUB IFileDialog_SetClientGuid_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialog_ClearClientData_Proxy( 
    IFileDialog __RPC_FAR * This);


void __RPC_STUB IFileDialog_ClearClientData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialog_SetFilter_Proxy( 
    IFileDialog __RPC_FAR * This,
    /* [in] */ IShellItemFilter __RPC_FAR *pFilter);


void __RPC_STUB IFileDialog_SetFilter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IFileDialog_INTERFACE_DEFINED__ */


#ifndef __IFileSaveDialog_INTERFACE_DEFINED__
#define __IFileSaveDialog_INTERFACE_DEFINED__

/* interface IFileSaveDialog */
/* [unique][object][uuid] */ 


EXTERN_C const IID IID_IFileSaveDialog;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("84bccd23-5fde-4cdb-aea4-af64b83d78ab")
    IFileSaveDialog : public IFileDialog
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetSaveAsItem( 
            /* [in] */ IShellItem __RPC_FAR *psi) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetProperties( 
            /* [in] */ IPropertyStore __RPC_FAR *pStore) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetCollectedProperties( 
            /* [in] */ IPropertyDescriptionList __RPC_FAR *pList,
            /* [in] */ BOOL fAppendDefault) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetProperties( 
            /* [out] */ IPropertyStore __RPC_FAR *__RPC_FAR *ppStore) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ApplyProperties( 
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [in] */ IPropertyStore __RPC_FAR *pStore,
            /* [unique][in] */ HWND hwnd,
            /* [unique][in] */ IFileOperationProgressSink __RPC_FAR *pSink) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IFileSaveDialogVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IFileSaveDialog __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IFileSaveDialog __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IFileSaveDialog __RPC_FAR * This);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Show )( 
            IFileSaveDialog __RPC_FAR * This,
            /* [in] */ HWND hwndParent);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFileTypes )( 
            IFileSaveDialog __RPC_FAR * This,
            /* [in] */ UINT cFileTypes,
            /* [size_is][in] */ const COMDLG_FILTERSPEC __RPC_FAR *rgFilterSpec);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFileTypeIndex )( 
            IFileSaveDialog __RPC_FAR * This,
            /* [in] */ UINT iFileType);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFileTypeIndex )( 
            IFileSaveDialog __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *piFileType);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Advise )( 
            IFileSaveDialog __RPC_FAR * This,
            /* [in] */ IFileDialogEvents __RPC_FAR *pfde,
            /* [out] */ DWORD __RPC_FAR *pdwCookie);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Unadvise )( 
            IFileSaveDialog __RPC_FAR * This,
            /* [in] */ DWORD dwCookie);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetOptions )( 
            IFileSaveDialog __RPC_FAR * This,
            /* [in] */ DWORD fos);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetOptions )( 
            IFileSaveDialog __RPC_FAR * This,
            /* [out] */ DWORD __RPC_FAR *pfos);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetDefaultFolder )( 
            IFileSaveDialog __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psi);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFolder )( 
            IFileSaveDialog __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psi);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFolder )( 
            IFileSaveDialog __RPC_FAR * This,
            /* [out] */ IShellItem __RPC_FAR *__RPC_FAR *ppsi);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCurrentSelection )( 
            IFileSaveDialog __RPC_FAR * This,
            /* [out] */ IShellItem __RPC_FAR *__RPC_FAR *ppsi);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFileName )( 
            IFileSaveDialog __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFileName )( 
            IFileSaveDialog __RPC_FAR * This,
            /* [string][out] */ LPWSTR __RPC_FAR *pszName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetTitle )( 
            IFileSaveDialog __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszTitle);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetOkButtonLabel )( 
            IFileSaveDialog __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszText);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFileNameLabel )( 
            IFileSaveDialog __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszLabel);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetResult )( 
            IFileSaveDialog __RPC_FAR * This,
            /* [out] */ IShellItem __RPC_FAR *__RPC_FAR *ppsi);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AddPlace )( 
            IFileSaveDialog __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [in] */ FDAP fdap);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetDefaultExtension )( 
            IFileSaveDialog __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszDefaultExtension);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Close )( 
            IFileSaveDialog __RPC_FAR * This,
            /* [in] */ HRESULT hr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetClientGuid )( 
            IFileSaveDialog __RPC_FAR * This,
            /* [in] */ REFGUID guid);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ClearClientData )( 
            IFileSaveDialog __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFilter )( 
            IFileSaveDialog __RPC_FAR * This,
            /* [in] */ IShellItemFilter __RPC_FAR *pFilter);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetSaveAsItem )( 
            IFileSaveDialog __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psi);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetProperties )( 
            IFileSaveDialog __RPC_FAR * This,
            /* [in] */ IPropertyStore __RPC_FAR *pStore);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetCollectedProperties )( 
            IFileSaveDialog __RPC_FAR * This,
            /* [in] */ IPropertyDescriptionList __RPC_FAR *pList,
            /* [in] */ BOOL fAppendDefault);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetProperties )( 
            IFileSaveDialog __RPC_FAR * This,
            /* [out] */ IPropertyStore __RPC_FAR *__RPC_FAR *ppStore);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ApplyProperties )( 
            IFileSaveDialog __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [in] */ IPropertyStore __RPC_FAR *pStore,
            /* [unique][in] */ HWND hwnd,
            /* [unique][in] */ IFileOperationProgressSink __RPC_FAR *pSink);
        
        END_INTERFACE
    } IFileSaveDialogVtbl;

    interface IFileSaveDialog
    {
        CONST_VTBL struct IFileSaveDialogVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IFileSaveDialog_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IFileSaveDialog_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IFileSaveDialog_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IFileSaveDialog_Show(This,hwndParent)	\
    (This)->lpVtbl -> Show(This,hwndParent)


#define IFileSaveDialog_SetFileTypes(This,cFileTypes,rgFilterSpec)	\
    (This)->lpVtbl -> SetFileTypes(This,cFileTypes,rgFilterSpec)

#define IFileSaveDialog_SetFileTypeIndex(This,iFileType)	\
    (This)->lpVtbl -> SetFileTypeIndex(This,iFileType)

#define IFileSaveDialog_GetFileTypeIndex(This,piFileType)	\
    (This)->lpVtbl -> GetFileTypeIndex(This,piFileType)

#define IFileSaveDialog_Advise(This,pfde,pdwCookie)	\
    (This)->lpVtbl -> Advise(This,pfde,pdwCookie)

#define IFileSaveDialog_Unadvise(This,dwCookie)	\
    (This)->lpVtbl -> Unadvise(This,dwCookie)

#define IFileSaveDialog_SetOptions(This,fos)	\
    (This)->lpVtbl -> SetOptions(This,fos)

#define IFileSaveDialog_GetOptions(This,pfos)	\
    (This)->lpVtbl -> GetOptions(This,pfos)

#define IFileSaveDialog_SetDefaultFolder(This,psi)	\
    (This)->lpVtbl -> SetDefaultFolder(This,psi)

#define IFileSaveDialog_SetFolder(This,psi)	\
    (This)->lpVtbl -> SetFolder(This,psi)

#define IFileSaveDialog_GetFolder(This,ppsi)	\
    (This)->lpVtbl -> GetFolder(This,ppsi)

#define IFileSaveDialog_GetCurrentSelection(This,ppsi)	\
    (This)->lpVtbl -> GetCurrentSelection(This,ppsi)

#define IFileSaveDialog_SetFileName(This,pszName)	\
    (This)->lpVtbl -> SetFileName(This,pszName)

#define IFileSaveDialog_GetFileName(This,pszName)	\
    (This)->lpVtbl -> GetFileName(This,pszName)

#define IFileSaveDialog_SetTitle(This,pszTitle)	\
    (This)->lpVtbl -> SetTitle(This,pszTitle)

#define IFileSaveDialog_SetOkButtonLabel(This,pszText)	\
    (This)->lpVtbl -> SetOkButtonLabel(This,pszText)

#define IFileSaveDialog_SetFileNameLabel(This,pszLabel)	\
    (This)->lpVtbl -> SetFileNameLabel(This,pszLabel)

#define IFileSaveDialog_GetResult(This,ppsi)	\
    (This)->lpVtbl -> GetResult(This,ppsi)

#define IFileSaveDialog_AddPlace(This,psi,fdap)	\
    (This)->lpVtbl -> AddPlace(This,psi,fdap)

#define IFileSaveDialog_SetDefaultExtension(This,pszDefaultExtension)	\
    (This)->lpVtbl -> SetDefaultExtension(This,pszDefaultExtension)

#define IFileSaveDialog_Close(This,hr)	\
    (This)->lpVtbl -> Close(This,hr)

#define IFileSaveDialog_SetClientGuid(This,guid)	\
    (This)->lpVtbl -> SetClientGuid(This,guid)

#define IFileSaveDialog_ClearClientData(This)	\
    (This)->lpVtbl -> ClearClientData(This)

#define IFileSaveDialog_SetFilter(This,pFilter)	\
    (This)->lpVtbl -> SetFilter(This,pFilter)


#define IFileSaveDialog_SetSaveAsItem(This,psi)	\
    (This)->lpVtbl -> SetSaveAsItem(This,psi)

#define IFileSaveDialog_SetProperties(This,pStore)	\
    (This)->lpVtbl -> SetProperties(This,pStore)

#define IFileSaveDialog_SetCollectedProperties(This,pList,fAppendDefault)	\
    (This)->lpVtbl -> SetCollectedProperties(This,pList,fAppendDefault)

#define IFileSaveDialog_GetProperties(This,ppStore)	\
    (This)->lpVtbl -> GetProperties(This,ppStore)

#define IFileSaveDialog_ApplyProperties(This,psi,pStore,hwnd,pSink)	\
    (This)->lpVtbl -> ApplyProperties(This,psi,pStore,hwnd,pSink)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IFileSaveDialog_SetSaveAsItem_Proxy( 
    IFileSaveDialog __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psi);


void __RPC_STUB IFileSaveDialog_SetSaveAsItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileSaveDialog_SetProperties_Proxy( 
    IFileSaveDialog __RPC_FAR * This,
    /* [in] */ IPropertyStore __RPC_FAR *pStore);


void __RPC_STUB IFileSaveDialog_SetProperties_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileSaveDialog_SetCollectedProperties_Proxy( 
    IFileSaveDialog __RPC_FAR * This,
    /* [in] */ IPropertyDescriptionList __RPC_FAR *pList,
    /* [in] */ BOOL fAppendDefault);


void __RPC_STUB IFileSaveDialog_SetCollectedProperties_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileSaveDialog_GetProperties_Proxy( 
    IFileSaveDialog __RPC_FAR * This,
    /* [out] */ IPropertyStore __RPC_FAR *__RPC_FAR *ppStore);


void __RPC_STUB IFileSaveDialog_GetProperties_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileSaveDialog_ApplyProperties_Proxy( 
    IFileSaveDialog __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psi,
    /* [in] */ IPropertyStore __RPC_FAR *pStore,
    /* [unique][in] */ HWND hwnd,
    /* [unique][in] */ IFileOperationProgressSink __RPC_FAR *pSink);


void __RPC_STUB IFileSaveDialog_ApplyProperties_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IFileSaveDialog_INTERFACE_DEFINED__ */


#ifndef __IFileOpenDialog_INTERFACE_DEFINED__
#define __IFileOpenDialog_INTERFACE_DEFINED__

/* interface IFileOpenDialog */
/* [unique][object][uuid] */ 


EXTERN_C const IID IID_IFileOpenDialog;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("d57c7288-d4ad-4768-be02-9d969532d960")
    IFileOpenDialog : public IFileDialog
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetResults( 
            /* [out] */ IShellItemArray __RPC_FAR *__RPC_FAR *ppenum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSelectedItems( 
            /* [out] */ IShellItemArray __RPC_FAR *__RPC_FAR *ppsai) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IFileOpenDialogVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IFileOpenDialog __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IFileOpenDialog __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IFileOpenDialog __RPC_FAR * This);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Show )( 
            IFileOpenDialog __RPC_FAR * This,
            /* [in] */ HWND hwndParent);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFileTypes )( 
            IFileOpenDialog __RPC_FAR * This,
            /* [in] */ UINT cFileTypes,
            /* [size_is][in] */ const COMDLG_FILTERSPEC __RPC_FAR *rgFilterSpec);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFileTypeIndex )( 
            IFileOpenDialog __RPC_FAR * This,
            /* [in] */ UINT iFileType);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFileTypeIndex )( 
            IFileOpenDialog __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *piFileType);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Advise )( 
            IFileOpenDialog __RPC_FAR * This,
            /* [in] */ IFileDialogEvents __RPC_FAR *pfde,
            /* [out] */ DWORD __RPC_FAR *pdwCookie);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Unadvise )( 
            IFileOpenDialog __RPC_FAR * This,
            /* [in] */ DWORD dwCookie);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetOptions )( 
            IFileOpenDialog __RPC_FAR * This,
            /* [in] */ DWORD fos);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetOptions )( 
            IFileOpenDialog __RPC_FAR * This,
            /* [out] */ DWORD __RPC_FAR *pfos);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetDefaultFolder )( 
            IFileOpenDialog __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psi);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFolder )( 
            IFileOpenDialog __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psi);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFolder )( 
            IFileOpenDialog __RPC_FAR * This,
            /* [out] */ IShellItem __RPC_FAR *__RPC_FAR *ppsi);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCurrentSelection )( 
            IFileOpenDialog __RPC_FAR * This,
            /* [out] */ IShellItem __RPC_FAR *__RPC_FAR *ppsi);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFileName )( 
            IFileOpenDialog __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFileName )( 
            IFileOpenDialog __RPC_FAR * This,
            /* [string][out] */ LPWSTR __RPC_FAR *pszName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetTitle )( 
            IFileOpenDialog __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszTitle);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetOkButtonLabel )( 
            IFileOpenDialog __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszText);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFileNameLabel )( 
            IFileOpenDialog __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszLabel);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetResult )( 
            IFileOpenDialog __RPC_FAR * This,
            /* [out] */ IShellItem __RPC_FAR *__RPC_FAR *ppsi);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AddPlace )( 
            IFileOpenDialog __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [in] */ FDAP fdap);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetDefaultExtension )( 
            IFileOpenDialog __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszDefaultExtension);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Close )( 
            IFileOpenDialog __RPC_FAR * This,
            /* [in] */ HRESULT hr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetClientGuid )( 
            IFileOpenDialog __RPC_FAR * This,
            /* [in] */ REFGUID guid);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ClearClientData )( 
            IFileOpenDialog __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFilter )( 
            IFileOpenDialog __RPC_FAR * This,
            /* [in] */ IShellItemFilter __RPC_FAR *pFilter);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetResults )( 
            IFileOpenDialog __RPC_FAR * This,
            /* [out] */ IShellItemArray __RPC_FAR *__RPC_FAR *ppenum);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSelectedItems )( 
            IFileOpenDialog __RPC_FAR * This,
            /* [out] */ IShellItemArray __RPC_FAR *__RPC_FAR *ppsai);
        
        END_INTERFACE
    } IFileOpenDialogVtbl;

    interface IFileOpenDialog
    {
        CONST_VTBL struct IFileOpenDialogVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IFileOpenDialog_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IFileOpenDialog_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IFileOpenDialog_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IFileOpenDialog_Show(This,hwndParent)	\
    (This)->lpVtbl -> Show(This,hwndParent)


#define IFileOpenDialog_SetFileTypes(This,cFileTypes,rgFilterSpec)	\
    (This)->lpVtbl -> SetFileTypes(This,cFileTypes,rgFilterSpec)

#define IFileOpenDialog_SetFileTypeIndex(This,iFileType)	\
    (This)->lpVtbl -> SetFileTypeIndex(This,iFileType)

#define IFileOpenDialog_GetFileTypeIndex(This,piFileType)	\
    (This)->lpVtbl -> GetFileTypeIndex(This,piFileType)

#define IFileOpenDialog_Advise(This,pfde,pdwCookie)	\
    (This)->lpVtbl -> Advise(This,pfde,pdwCookie)

#define IFileOpenDialog_Unadvise(This,dwCookie)	\
    (This)->lpVtbl -> Unadvise(This,dwCookie)

#define IFileOpenDialog_SetOptions(This,fos)	\
    (This)->lpVtbl -> SetOptions(This,fos)

#define IFileOpenDialog_GetOptions(This,pfos)	\
    (This)->lpVtbl -> GetOptions(This,pfos)

#define IFileOpenDialog_SetDefaultFolder(This,psi)	\
    (This)->lpVtbl -> SetDefaultFolder(This,psi)

#define IFileOpenDialog_SetFolder(This,psi)	\
    (This)->lpVtbl -> SetFolder(This,psi)

#define IFileOpenDialog_GetFolder(This,ppsi)	\
    (This)->lpVtbl -> GetFolder(This,ppsi)

#define IFileOpenDialog_GetCurrentSelection(This,ppsi)	\
    (This)->lpVtbl -> GetCurrentSelection(This,ppsi)

#define IFileOpenDialog_SetFileName(This,pszName)	\
    (This)->lpVtbl -> SetFileName(This,pszName)

#define IFileOpenDialog_GetFileName(This,pszName)	\
    (This)->lpVtbl -> GetFileName(This,pszName)

#define IFileOpenDialog_SetTitle(This,pszTitle)	\
    (This)->lpVtbl -> SetTitle(This,pszTitle)

#define IFileOpenDialog_SetOkButtonLabel(This,pszText)	\
    (This)->lpVtbl -> SetOkButtonLabel(This,pszText)

#define IFileOpenDialog_SetFileNameLabel(This,pszLabel)	\
    (This)->lpVtbl -> SetFileNameLabel(This,pszLabel)

#define IFileOpenDialog_GetResult(This,ppsi)	\
    (This)->lpVtbl -> GetResult(This,ppsi)

#define IFileOpenDialog_AddPlace(This,psi,fdap)	\
    (This)->lpVtbl -> AddPlace(This,psi,fdap)

#define IFileOpenDialog_SetDefaultExtension(This,pszDefaultExtension)	\
    (This)->lpVtbl -> SetDefaultExtension(This,pszDefaultExtension)

#define IFileOpenDialog_Close(This,hr)	\
    (This)->lpVtbl -> Close(This,hr)

#define IFileOpenDialog_SetClientGuid(This,guid)	\
    (This)->lpVtbl -> SetClientGuid(This,guid)

#define IFileOpenDialog_ClearClientData(This)	\
    (This)->lpVtbl -> ClearClientData(This)

#define IFileOpenDialog_SetFilter(This,pFilter)	\
    (This)->lpVtbl -> SetFilter(This,pFilter)


#define IFileOpenDialog_GetResults(This,ppenum)	\
    (This)->lpVtbl -> GetResults(This,ppenum)

#define IFileOpenDialog_GetSelectedItems(This,ppsai)	\
    (This)->lpVtbl -> GetSelectedItems(This,ppsai)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IFileOpenDialog_GetResults_Proxy( 
    IFileOpenDialog __RPC_FAR * This,
    /* [out] */ IShellItemArray __RPC_FAR *__RPC_FAR *ppenum);


void __RPC_STUB IFileOpenDialog_GetResults_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileOpenDialog_GetSelectedItems_Proxy( 
    IFileOpenDialog __RPC_FAR * This,
    /* [out] */ IShellItemArray __RPC_FAR *__RPC_FAR *ppsai);


void __RPC_STUB IFileOpenDialog_GetSelectedItems_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IFileOpenDialog_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0411 */
/* [local] */ 

typedef /* [v1_enum] */ 
enum tagCDCONTROLSTATE
    {	CDCS_INACTIVE	= 0,
	CDCS_ENABLED	= 0x1,
	CDCS_VISIBLE	= 0x2
    }	CDCONTROLSTATE;

typedef DWORD CDCONTROLSTATEF;



extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0411_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0411_v0_0_s_ifspec;

#ifndef __IFileDialogCustomize_INTERFACE_DEFINED__
#define __IFileDialogCustomize_INTERFACE_DEFINED__

/* interface IFileDialogCustomize */
/* [unique][object][uuid] */ 


EXTERN_C const IID IID_IFileDialogCustomize;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("e6fdd21a-163f-4975-9c8c-a69f1ba37034")
    IFileDialogCustomize : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE EnableOpenDropDown( 
            /* [in] */ DWORD dwIDCtl) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddMenu( 
            /* [in] */ DWORD dwIDCtl,
            /* [string][in] */ LPCWSTR pszLabel) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddPushButton( 
            /* [in] */ DWORD dwIDCtl,
            /* [string][in] */ LPCWSTR pszLabel) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddComboBox( 
            /* [in] */ DWORD dwIDCtl) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddRadioButtonList( 
            /* [in] */ DWORD dwIDCtl) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddCheckButton( 
            /* [in] */ DWORD dwIDCtl,
            /* [string][in] */ LPCWSTR pszLabel,
            /* [in] */ BOOL bChecked) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddEditBox( 
            /* [in] */ DWORD dwIDCtl,
            /* [string][in] */ LPCWSTR pszText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddSeparator( 
            /* [in] */ DWORD dwIDCtl) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddText( 
            /* [in] */ DWORD dwIDCtl,
            /* [string][in] */ LPCWSTR pszText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetControlLabel( 
            /* [in] */ DWORD dwIDCtl,
            /* [string][in] */ LPCWSTR pszLabel) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetControlState( 
            /* [in] */ DWORD dwIDCtl,
            /* [out] */ CDCONTROLSTATEF __RPC_FAR *pdwState) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetControlState( 
            /* [in] */ DWORD dwIDCtl,
            /* [in] */ CDCONTROLSTATEF dwState) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEditBoxText( 
            /* [in] */ DWORD dwIDCtl,
            /* [string][out] */ WCHAR __RPC_FAR *__RPC_FAR *ppszText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetEditBoxText( 
            /* [in] */ DWORD dwIDCtl,
            /* [string][in] */ LPCWSTR pszText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCheckButtonState( 
            /* [in] */ DWORD dwIDCtl,
            /* [out] */ BOOL __RPC_FAR *pbChecked) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetCheckButtonState( 
            /* [in] */ DWORD dwIDCtl,
            /* [in] */ BOOL bChecked) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddControlItem( 
            /* [in] */ DWORD dwIDCtl,
            /* [in] */ DWORD dwIDItem,
            /* [in] */ LPCWSTR pszLabel) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveControlItem( 
            /* [in] */ DWORD dwIDCtl,
            /* [in] */ DWORD dwIDItem) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAllControlItems( 
            /* [in] */ DWORD dwIDCtl) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetControlItemState( 
            /* [in] */ DWORD dwIDCtl,
            /* [in] */ DWORD dwIDItem,
            /* [out] */ CDCONTROLSTATEF __RPC_FAR *pdwState) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetControlItemState( 
            /* [in] */ DWORD dwIDCtl,
            /* [in] */ DWORD dwIDItem,
            /* [in] */ CDCONTROLSTATEF dwState) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSelectedControlItem( 
            /* [in] */ DWORD dwIDCtl,
            /* [out] */ DWORD __RPC_FAR *pdwIDItem) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetSelectedControlItem( 
            /* [in] */ DWORD dwIDCtl,
            /* [in] */ DWORD dwIDItem) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE StartVisualGroup( 
            /* [in] */ DWORD dwIDCtl,
            /* [string][in] */ LPCWSTR pszLabel) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EndVisualGroup( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MakeProminent( 
            /* [in] */ DWORD dwIDCtl) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetControlItemText( 
            /* [in] */ DWORD dwIDCtl,
            /* [in] */ DWORD dwIDItem,
            /* [string][in] */ LPCWSTR pszLabel) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IFileDialogCustomizeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IFileDialogCustomize __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IFileDialogCustomize __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IFileDialogCustomize __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *EnableOpenDropDown )( 
            IFileDialogCustomize __RPC_FAR * This,
            /* [in] */ DWORD dwIDCtl);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AddMenu )( 
            IFileDialogCustomize __RPC_FAR * This,
            /* [in] */ DWORD dwIDCtl,
            /* [string][in] */ LPCWSTR pszLabel);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AddPushButton )( 
            IFileDialogCustomize __RPC_FAR * This,
            /* [in] */ DWORD dwIDCtl,
            /* [string][in] */ LPCWSTR pszLabel);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AddComboBox )( 
            IFileDialogCustomize __RPC_FAR * This,
            /* [in] */ DWORD dwIDCtl);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AddRadioButtonList )( 
            IFileDialogCustomize __RPC_FAR * This,
            /* [in] */ DWORD dwIDCtl);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AddCheckButton )( 
            IFileDialogCustomize __RPC_FAR * This,
            /* [in] */ DWORD dwIDCtl,
            /* [string][in] */ LPCWSTR pszLabel,
            /* [in] */ BOOL bChecked);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AddEditBox )( 
            IFileDialogCustomize __RPC_FAR * This,
            /* [in] */ DWORD dwIDCtl,
            /* [string][in] */ LPCWSTR pszText);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AddSeparator )( 
            IFileDialogCustomize __RPC_FAR * This,
            /* [in] */ DWORD dwIDCtl);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AddText )( 
            IFileDialogCustomize __RPC_FAR * This,
            /* [in] */ DWORD dwIDCtl,
            /* [string][in] */ LPCWSTR pszText);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetControlLabel )( 
            IFileDialogCustomize __RPC_FAR * This,
            /* [in] */ DWORD dwIDCtl,
            /* [string][in] */ LPCWSTR pszLabel);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetControlState )( 
            IFileDialogCustomize __RPC_FAR * This,
            /* [in] */ DWORD dwIDCtl,
            /* [out] */ CDCONTROLSTATEF __RPC_FAR *pdwState);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetControlState )( 
            IFileDialogCustomize __RPC_FAR * This,
            /* [in] */ DWORD dwIDCtl,
            /* [in] */ CDCONTROLSTATEF dwState);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetEditBoxText )( 
            IFileDialogCustomize __RPC_FAR * This,
            /* [in] */ DWORD dwIDCtl,
            /* [string][out] */ WCHAR __RPC_FAR *__RPC_FAR *ppszText);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetEditBoxText )( 
            IFileDialogCustomize __RPC_FAR * This,
            /* [in] */ DWORD dwIDCtl,
            /* [string][in] */ LPCWSTR pszText);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCheckButtonState )( 
            IFileDialogCustomize __RPC_FAR * This,
            /* [in] */ DWORD dwIDCtl,
            /* [out] */ BOOL __RPC_FAR *pbChecked);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetCheckButtonState )( 
            IFileDialogCustomize __RPC_FAR * This,
            /* [in] */ DWORD dwIDCtl,
            /* [in] */ BOOL bChecked);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AddControlItem )( 
            IFileDialogCustomize __RPC_FAR * This,
            /* [in] */ DWORD dwIDCtl,
            /* [in] */ DWORD dwIDItem,
            /* [in] */ LPCWSTR pszLabel);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RemoveControlItem )( 
            IFileDialogCustomize __RPC_FAR * This,
            /* [in] */ DWORD dwIDCtl,
            /* [in] */ DWORD dwIDItem);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RemoveAllControlItems )( 
            IFileDialogCustomize __RPC_FAR * This,
            /* [in] */ DWORD dwIDCtl);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetControlItemState )( 
            IFileDialogCustomize __RPC_FAR * This,
            /* [in] */ DWORD dwIDCtl,
            /* [in] */ DWORD dwIDItem,
            /* [out] */ CDCONTROLSTATEF __RPC_FAR *pdwState);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetControlItemState )( 
            IFileDialogCustomize __RPC_FAR * This,
            /* [in] */ DWORD dwIDCtl,
            /* [in] */ DWORD dwIDItem,
            /* [in] */ CDCONTROLSTATEF dwState);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSelectedControlItem )( 
            IFileDialogCustomize __RPC_FAR * This,
            /* [in] */ DWORD dwIDCtl,
            /* [out] */ DWORD __RPC_FAR *pdwIDItem);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetSelectedControlItem )( 
            IFileDialogCustomize __RPC_FAR * This,
            /* [in] */ DWORD dwIDCtl,
            /* [in] */ DWORD dwIDItem);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *StartVisualGroup )( 
            IFileDialogCustomize __RPC_FAR * This,
            /* [in] */ DWORD dwIDCtl,
            /* [string][in] */ LPCWSTR pszLabel);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *EndVisualGroup )( 
            IFileDialogCustomize __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *MakeProminent )( 
            IFileDialogCustomize __RPC_FAR * This,
            /* [in] */ DWORD dwIDCtl);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetControlItemText )( 
            IFileDialogCustomize __RPC_FAR * This,
            /* [in] */ DWORD dwIDCtl,
            /* [in] */ DWORD dwIDItem,
            /* [string][in] */ LPCWSTR pszLabel);
        
        END_INTERFACE
    } IFileDialogCustomizeVtbl;

    interface IFileDialogCustomize
    {
        CONST_VTBL struct IFileDialogCustomizeVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IFileDialogCustomize_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IFileDialogCustomize_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IFileDialogCustomize_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IFileDialogCustomize_EnableOpenDropDown(This,dwIDCtl)	\
    (This)->lpVtbl -> EnableOpenDropDown(This,dwIDCtl)

#define IFileDialogCustomize_AddMenu(This,dwIDCtl,pszLabel)	\
    (This)->lpVtbl -> AddMenu(This,dwIDCtl,pszLabel)

#define IFileDialogCustomize_AddPushButton(This,dwIDCtl,pszLabel)	\
    (This)->lpVtbl -> AddPushButton(This,dwIDCtl,pszLabel)

#define IFileDialogCustomize_AddComboBox(This,dwIDCtl)	\
    (This)->lpVtbl -> AddComboBox(This,dwIDCtl)

#define IFileDialogCustomize_AddRadioButtonList(This,dwIDCtl)	\
    (This)->lpVtbl -> AddRadioButtonList(This,dwIDCtl)

#define IFileDialogCustomize_AddCheckButton(This,dwIDCtl,pszLabel,bChecked)	\
    (This)->lpVtbl -> AddCheckButton(This,dwIDCtl,pszLabel,bChecked)

#define IFileDialogCustomize_AddEditBox(This,dwIDCtl,pszText)	\
    (This)->lpVtbl -> AddEditBox(This,dwIDCtl,pszText)

#define IFileDialogCustomize_AddSeparator(This,dwIDCtl)	\
    (This)->lpVtbl -> AddSeparator(This,dwIDCtl)

#define IFileDialogCustomize_AddText(This,dwIDCtl,pszText)	\
    (This)->lpVtbl -> AddText(This,dwIDCtl,pszText)

#define IFileDialogCustomize_SetControlLabel(This,dwIDCtl,pszLabel)	\
    (This)->lpVtbl -> SetControlLabel(This,dwIDCtl,pszLabel)

#define IFileDialogCustomize_GetControlState(This,dwIDCtl,pdwState)	\
    (This)->lpVtbl -> GetControlState(This,dwIDCtl,pdwState)

#define IFileDialogCustomize_SetControlState(This,dwIDCtl,dwState)	\
    (This)->lpVtbl -> SetControlState(This,dwIDCtl,dwState)

#define IFileDialogCustomize_GetEditBoxText(This,dwIDCtl,ppszText)	\
    (This)->lpVtbl -> GetEditBoxText(This,dwIDCtl,ppszText)

#define IFileDialogCustomize_SetEditBoxText(This,dwIDCtl,pszText)	\
    (This)->lpVtbl -> SetEditBoxText(This,dwIDCtl,pszText)

#define IFileDialogCustomize_GetCheckButtonState(This,dwIDCtl,pbChecked)	\
    (This)->lpVtbl -> GetCheckButtonState(This,dwIDCtl,pbChecked)

#define IFileDialogCustomize_SetCheckButtonState(This,dwIDCtl,bChecked)	\
    (This)->lpVtbl -> SetCheckButtonState(This,dwIDCtl,bChecked)

#define IFileDialogCustomize_AddControlItem(This,dwIDCtl,dwIDItem,pszLabel)	\
    (This)->lpVtbl -> AddControlItem(This,dwIDCtl,dwIDItem,pszLabel)

#define IFileDialogCustomize_RemoveControlItem(This,dwIDCtl,dwIDItem)	\
    (This)->lpVtbl -> RemoveControlItem(This,dwIDCtl,dwIDItem)

#define IFileDialogCustomize_RemoveAllControlItems(This,dwIDCtl)	\
    (This)->lpVtbl -> RemoveAllControlItems(This,dwIDCtl)

#define IFileDialogCustomize_GetControlItemState(This,dwIDCtl,dwIDItem,pdwState)	\
    (This)->lpVtbl -> GetControlItemState(This,dwIDCtl,dwIDItem,pdwState)

#define IFileDialogCustomize_SetControlItemState(This,dwIDCtl,dwIDItem,dwState)	\
    (This)->lpVtbl -> SetControlItemState(This,dwIDCtl,dwIDItem,dwState)

#define IFileDialogCustomize_GetSelectedControlItem(This,dwIDCtl,pdwIDItem)	\
    (This)->lpVtbl -> GetSelectedControlItem(This,dwIDCtl,pdwIDItem)

#define IFileDialogCustomize_SetSelectedControlItem(This,dwIDCtl,dwIDItem)	\
    (This)->lpVtbl -> SetSelectedControlItem(This,dwIDCtl,dwIDItem)

#define IFileDialogCustomize_StartVisualGroup(This,dwIDCtl,pszLabel)	\
    (This)->lpVtbl -> StartVisualGroup(This,dwIDCtl,pszLabel)

#define IFileDialogCustomize_EndVisualGroup(This)	\
    (This)->lpVtbl -> EndVisualGroup(This)

#define IFileDialogCustomize_MakeProminent(This,dwIDCtl)	\
    (This)->lpVtbl -> MakeProminent(This,dwIDCtl)

#define IFileDialogCustomize_SetControlItemText(This,dwIDCtl,dwIDItem,pszLabel)	\
    (This)->lpVtbl -> SetControlItemText(This,dwIDCtl,dwIDItem,pszLabel)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IFileDialogCustomize_EnableOpenDropDown_Proxy( 
    IFileDialogCustomize __RPC_FAR * This,
    /* [in] */ DWORD dwIDCtl);


void __RPC_STUB IFileDialogCustomize_EnableOpenDropDown_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialogCustomize_AddMenu_Proxy( 
    IFileDialogCustomize __RPC_FAR * This,
    /* [in] */ DWORD dwIDCtl,
    /* [string][in] */ LPCWSTR pszLabel);


void __RPC_STUB IFileDialogCustomize_AddMenu_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialogCustomize_AddPushButton_Proxy( 
    IFileDialogCustomize __RPC_FAR * This,
    /* [in] */ DWORD dwIDCtl,
    /* [string][in] */ LPCWSTR pszLabel);


void __RPC_STUB IFileDialogCustomize_AddPushButton_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialogCustomize_AddComboBox_Proxy( 
    IFileDialogCustomize __RPC_FAR * This,
    /* [in] */ DWORD dwIDCtl);


void __RPC_STUB IFileDialogCustomize_AddComboBox_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialogCustomize_AddRadioButtonList_Proxy( 
    IFileDialogCustomize __RPC_FAR * This,
    /* [in] */ DWORD dwIDCtl);


void __RPC_STUB IFileDialogCustomize_AddRadioButtonList_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialogCustomize_AddCheckButton_Proxy( 
    IFileDialogCustomize __RPC_FAR * This,
    /* [in] */ DWORD dwIDCtl,
    /* [string][in] */ LPCWSTR pszLabel,
    /* [in] */ BOOL bChecked);


void __RPC_STUB IFileDialogCustomize_AddCheckButton_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialogCustomize_AddEditBox_Proxy( 
    IFileDialogCustomize __RPC_FAR * This,
    /* [in] */ DWORD dwIDCtl,
    /* [string][in] */ LPCWSTR pszText);


void __RPC_STUB IFileDialogCustomize_AddEditBox_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialogCustomize_AddSeparator_Proxy( 
    IFileDialogCustomize __RPC_FAR * This,
    /* [in] */ DWORD dwIDCtl);


void __RPC_STUB IFileDialogCustomize_AddSeparator_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialogCustomize_AddText_Proxy( 
    IFileDialogCustomize __RPC_FAR * This,
    /* [in] */ DWORD dwIDCtl,
    /* [string][in] */ LPCWSTR pszText);


void __RPC_STUB IFileDialogCustomize_AddText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialogCustomize_SetControlLabel_Proxy( 
    IFileDialogCustomize __RPC_FAR * This,
    /* [in] */ DWORD dwIDCtl,
    /* [string][in] */ LPCWSTR pszLabel);


void __RPC_STUB IFileDialogCustomize_SetControlLabel_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialogCustomize_GetControlState_Proxy( 
    IFileDialogCustomize __RPC_FAR * This,
    /* [in] */ DWORD dwIDCtl,
    /* [out] */ CDCONTROLSTATEF __RPC_FAR *pdwState);


void __RPC_STUB IFileDialogCustomize_GetControlState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialogCustomize_SetControlState_Proxy( 
    IFileDialogCustomize __RPC_FAR * This,
    /* [in] */ DWORD dwIDCtl,
    /* [in] */ CDCONTROLSTATEF dwState);


void __RPC_STUB IFileDialogCustomize_SetControlState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialogCustomize_GetEditBoxText_Proxy( 
    IFileDialogCustomize __RPC_FAR * This,
    /* [in] */ DWORD dwIDCtl,
    /* [string][out] */ WCHAR __RPC_FAR *__RPC_FAR *ppszText);


void __RPC_STUB IFileDialogCustomize_GetEditBoxText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialogCustomize_SetEditBoxText_Proxy( 
    IFileDialogCustomize __RPC_FAR * This,
    /* [in] */ DWORD dwIDCtl,
    /* [string][in] */ LPCWSTR pszText);


void __RPC_STUB IFileDialogCustomize_SetEditBoxText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialogCustomize_GetCheckButtonState_Proxy( 
    IFileDialogCustomize __RPC_FAR * This,
    /* [in] */ DWORD dwIDCtl,
    /* [out] */ BOOL __RPC_FAR *pbChecked);


void __RPC_STUB IFileDialogCustomize_GetCheckButtonState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialogCustomize_SetCheckButtonState_Proxy( 
    IFileDialogCustomize __RPC_FAR * This,
    /* [in] */ DWORD dwIDCtl,
    /* [in] */ BOOL bChecked);


void __RPC_STUB IFileDialogCustomize_SetCheckButtonState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialogCustomize_AddControlItem_Proxy( 
    IFileDialogCustomize __RPC_FAR * This,
    /* [in] */ DWORD dwIDCtl,
    /* [in] */ DWORD dwIDItem,
    /* [in] */ LPCWSTR pszLabel);


void __RPC_STUB IFileDialogCustomize_AddControlItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialogCustomize_RemoveControlItem_Proxy( 
    IFileDialogCustomize __RPC_FAR * This,
    /* [in] */ DWORD dwIDCtl,
    /* [in] */ DWORD dwIDItem);


void __RPC_STUB IFileDialogCustomize_RemoveControlItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialogCustomize_RemoveAllControlItems_Proxy( 
    IFileDialogCustomize __RPC_FAR * This,
    /* [in] */ DWORD dwIDCtl);


void __RPC_STUB IFileDialogCustomize_RemoveAllControlItems_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialogCustomize_GetControlItemState_Proxy( 
    IFileDialogCustomize __RPC_FAR * This,
    /* [in] */ DWORD dwIDCtl,
    /* [in] */ DWORD dwIDItem,
    /* [out] */ CDCONTROLSTATEF __RPC_FAR *pdwState);


void __RPC_STUB IFileDialogCustomize_GetControlItemState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialogCustomize_SetControlItemState_Proxy( 
    IFileDialogCustomize __RPC_FAR * This,
    /* [in] */ DWORD dwIDCtl,
    /* [in] */ DWORD dwIDItem,
    /* [in] */ CDCONTROLSTATEF dwState);


void __RPC_STUB IFileDialogCustomize_SetControlItemState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialogCustomize_GetSelectedControlItem_Proxy( 
    IFileDialogCustomize __RPC_FAR * This,
    /* [in] */ DWORD dwIDCtl,
    /* [out] */ DWORD __RPC_FAR *pdwIDItem);


void __RPC_STUB IFileDialogCustomize_GetSelectedControlItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialogCustomize_SetSelectedControlItem_Proxy( 
    IFileDialogCustomize __RPC_FAR * This,
    /* [in] */ DWORD dwIDCtl,
    /* [in] */ DWORD dwIDItem);


void __RPC_STUB IFileDialogCustomize_SetSelectedControlItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialogCustomize_StartVisualGroup_Proxy( 
    IFileDialogCustomize __RPC_FAR * This,
    /* [in] */ DWORD dwIDCtl,
    /* [string][in] */ LPCWSTR pszLabel);


void __RPC_STUB IFileDialogCustomize_StartVisualGroup_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialogCustomize_EndVisualGroup_Proxy( 
    IFileDialogCustomize __RPC_FAR * This);


void __RPC_STUB IFileDialogCustomize_EndVisualGroup_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialogCustomize_MakeProminent_Proxy( 
    IFileDialogCustomize __RPC_FAR * This,
    /* [in] */ DWORD dwIDCtl);


void __RPC_STUB IFileDialogCustomize_MakeProminent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialogCustomize_SetControlItemText_Proxy( 
    IFileDialogCustomize __RPC_FAR * This,
    /* [in] */ DWORD dwIDCtl,
    /* [in] */ DWORD dwIDItem,
    /* [string][in] */ LPCWSTR pszLabel);


void __RPC_STUB IFileDialogCustomize_SetControlItemText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IFileDialogCustomize_INTERFACE_DEFINED__ */


#ifndef __IFileDialogControlEvents_INTERFACE_DEFINED__
#define __IFileDialogControlEvents_INTERFACE_DEFINED__

/* interface IFileDialogControlEvents */
/* [unique][object][uuid] */ 


EXTERN_C const IID IID_IFileDialogControlEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("36116642-D713-4b97-9B83-7484A9D00433")
    IFileDialogControlEvents : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OnItemSelected( 
            /* [in] */ IFileDialogCustomize __RPC_FAR *pfdc,
            /* [in] */ DWORD dwIDCtl,
            /* [in] */ DWORD dwIDItem) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnButtonClicked( 
            /* [in] */ IFileDialogCustomize __RPC_FAR *pfdc,
            /* [in] */ DWORD dwIDCtl) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnCheckButtonToggled( 
            /* [in] */ IFileDialogCustomize __RPC_FAR *pfdc,
            /* [in] */ DWORD dwIDCtl,
            /* [in] */ BOOL bChecked) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnControlActivating( 
            /* [in] */ IFileDialogCustomize __RPC_FAR *pfdc,
            /* [in] */ DWORD dwIDCtl) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IFileDialogControlEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IFileDialogControlEvents __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IFileDialogControlEvents __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IFileDialogControlEvents __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnItemSelected )( 
            IFileDialogControlEvents __RPC_FAR * This,
            /* [in] */ IFileDialogCustomize __RPC_FAR *pfdc,
            /* [in] */ DWORD dwIDCtl,
            /* [in] */ DWORD dwIDItem);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnButtonClicked )( 
            IFileDialogControlEvents __RPC_FAR * This,
            /* [in] */ IFileDialogCustomize __RPC_FAR *pfdc,
            /* [in] */ DWORD dwIDCtl);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnCheckButtonToggled )( 
            IFileDialogControlEvents __RPC_FAR * This,
            /* [in] */ IFileDialogCustomize __RPC_FAR *pfdc,
            /* [in] */ DWORD dwIDCtl,
            /* [in] */ BOOL bChecked);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnControlActivating )( 
            IFileDialogControlEvents __RPC_FAR * This,
            /* [in] */ IFileDialogCustomize __RPC_FAR *pfdc,
            /* [in] */ DWORD dwIDCtl);
        
        END_INTERFACE
    } IFileDialogControlEventsVtbl;

    interface IFileDialogControlEvents
    {
        CONST_VTBL struct IFileDialogControlEventsVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IFileDialogControlEvents_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IFileDialogControlEvents_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IFileDialogControlEvents_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IFileDialogControlEvents_OnItemSelected(This,pfdc,dwIDCtl,dwIDItem)	\
    (This)->lpVtbl -> OnItemSelected(This,pfdc,dwIDCtl,dwIDItem)

#define IFileDialogControlEvents_OnButtonClicked(This,pfdc,dwIDCtl)	\
    (This)->lpVtbl -> OnButtonClicked(This,pfdc,dwIDCtl)

#define IFileDialogControlEvents_OnCheckButtonToggled(This,pfdc,dwIDCtl,bChecked)	\
    (This)->lpVtbl -> OnCheckButtonToggled(This,pfdc,dwIDCtl,bChecked)

#define IFileDialogControlEvents_OnControlActivating(This,pfdc,dwIDCtl)	\
    (This)->lpVtbl -> OnControlActivating(This,pfdc,dwIDCtl)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IFileDialogControlEvents_OnItemSelected_Proxy( 
    IFileDialogControlEvents __RPC_FAR * This,
    /* [in] */ IFileDialogCustomize __RPC_FAR *pfdc,
    /* [in] */ DWORD dwIDCtl,
    /* [in] */ DWORD dwIDItem);


void __RPC_STUB IFileDialogControlEvents_OnItemSelected_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialogControlEvents_OnButtonClicked_Proxy( 
    IFileDialogControlEvents __RPC_FAR * This,
    /* [in] */ IFileDialogCustomize __RPC_FAR *pfdc,
    /* [in] */ DWORD dwIDCtl);


void __RPC_STUB IFileDialogControlEvents_OnButtonClicked_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialogControlEvents_OnCheckButtonToggled_Proxy( 
    IFileDialogControlEvents __RPC_FAR * This,
    /* [in] */ IFileDialogCustomize __RPC_FAR *pfdc,
    /* [in] */ DWORD dwIDCtl,
    /* [in] */ BOOL bChecked);


void __RPC_STUB IFileDialogControlEvents_OnCheckButtonToggled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileDialogControlEvents_OnControlActivating_Proxy( 
    IFileDialogControlEvents __RPC_FAR * This,
    /* [in] */ IFileDialogCustomize __RPC_FAR *pfdc,
    /* [in] */ DWORD dwIDCtl);


void __RPC_STUB IFileDialogControlEvents_OnControlActivating_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IFileDialogControlEvents_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0413 */
/* [local] */ 

typedef /* [v1_enum] */ 
enum tagASSOCIATIONLEVEL
    {	AL_MACHINE	= 0,
	AL_EFFECTIVE	= AL_MACHINE + 1,
	AL_USER	= AL_EFFECTIVE + 1
    }	ASSOCIATIONLEVEL;

typedef /* [v1_enum] */ 
enum tagASSOCIATIONTYPE
    {	AT_FILEEXTENSION	= 0,
	AT_URLPROTOCOL	= AT_FILEEXTENSION + 1,
	AT_STARTMENUCLIENT	= AT_URLPROTOCOL + 1,
	AT_MIMETYPE	= AT_STARTMENUCLIENT + 1
    }	ASSOCIATIONTYPE;



extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0413_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0413_v0_0_s_ifspec;

#ifndef __IApplicationAssociationRegistration_INTERFACE_DEFINED__
#define __IApplicationAssociationRegistration_INTERFACE_DEFINED__

/* interface IApplicationAssociationRegistration */
/* [helpstring][unique][uuid][object] */ 


EXTERN_C const IID IID_IApplicationAssociationRegistration;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4e530b0a-e611-4c77-a3ac-9031d022281b")
    IApplicationAssociationRegistration : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE QueryCurrentDefault( 
            /* [string][in] */ LPCWSTR pszQuery,
            /* [in] */ ASSOCIATIONTYPE atQueryType,
            /* [in] */ ASSOCIATIONLEVEL alQueryLevel,
            /* [string][out] */ LPWSTR __RPC_FAR *ppszAssociation) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE QueryAppIsDefault( 
            /* [string][in] */ LPCWSTR pszQuery,
            /* [in] */ ASSOCIATIONTYPE atQueryType,
            /* [in] */ ASSOCIATIONLEVEL alQueryLevel,
            /* [string][in] */ LPCWSTR pszAppRegistryName,
            /* [out] */ BOOL __RPC_FAR *pfDefault) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE QueryAppIsDefaultAll( 
            /* [in] */ ASSOCIATIONLEVEL alQueryLevel,
            /* [string][in] */ LPCWSTR pszAppRegistryName,
            /* [out] */ BOOL __RPC_FAR *pfDefault) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAppAsDefault( 
            /* [string][in] */ LPCWSTR pszAppRegistryName,
            /* [string][in] */ LPCWSTR pszSet,
            /* [in] */ ASSOCIATIONTYPE atSetType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAppAsDefaultAll( 
            /* [string][in] */ LPCWSTR pszAppRegistryName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ClearUserAssociations( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IApplicationAssociationRegistrationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IApplicationAssociationRegistration __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IApplicationAssociationRegistration __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IApplicationAssociationRegistration __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryCurrentDefault )( 
            IApplicationAssociationRegistration __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszQuery,
            /* [in] */ ASSOCIATIONTYPE atQueryType,
            /* [in] */ ASSOCIATIONLEVEL alQueryLevel,
            /* [string][out] */ LPWSTR __RPC_FAR *ppszAssociation);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryAppIsDefault )( 
            IApplicationAssociationRegistration __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszQuery,
            /* [in] */ ASSOCIATIONTYPE atQueryType,
            /* [in] */ ASSOCIATIONLEVEL alQueryLevel,
            /* [string][in] */ LPCWSTR pszAppRegistryName,
            /* [out] */ BOOL __RPC_FAR *pfDefault);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryAppIsDefaultAll )( 
            IApplicationAssociationRegistration __RPC_FAR * This,
            /* [in] */ ASSOCIATIONLEVEL alQueryLevel,
            /* [string][in] */ LPCWSTR pszAppRegistryName,
            /* [out] */ BOOL __RPC_FAR *pfDefault);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetAppAsDefault )( 
            IApplicationAssociationRegistration __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszAppRegistryName,
            /* [string][in] */ LPCWSTR pszSet,
            /* [in] */ ASSOCIATIONTYPE atSetType);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetAppAsDefaultAll )( 
            IApplicationAssociationRegistration __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszAppRegistryName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ClearUserAssociations )( 
            IApplicationAssociationRegistration __RPC_FAR * This);
        
        END_INTERFACE
    } IApplicationAssociationRegistrationVtbl;

    interface IApplicationAssociationRegistration
    {
        CONST_VTBL struct IApplicationAssociationRegistrationVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IApplicationAssociationRegistration_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IApplicationAssociationRegistration_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IApplicationAssociationRegistration_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IApplicationAssociationRegistration_QueryCurrentDefault(This,pszQuery,atQueryType,alQueryLevel,ppszAssociation)	\
    (This)->lpVtbl -> QueryCurrentDefault(This,pszQuery,atQueryType,alQueryLevel,ppszAssociation)

#define IApplicationAssociationRegistration_QueryAppIsDefault(This,pszQuery,atQueryType,alQueryLevel,pszAppRegistryName,pfDefault)	\
    (This)->lpVtbl -> QueryAppIsDefault(This,pszQuery,atQueryType,alQueryLevel,pszAppRegistryName,pfDefault)

#define IApplicationAssociationRegistration_QueryAppIsDefaultAll(This,alQueryLevel,pszAppRegistryName,pfDefault)	\
    (This)->lpVtbl -> QueryAppIsDefaultAll(This,alQueryLevel,pszAppRegistryName,pfDefault)

#define IApplicationAssociationRegistration_SetAppAsDefault(This,pszAppRegistryName,pszSet,atSetType)	\
    (This)->lpVtbl -> SetAppAsDefault(This,pszAppRegistryName,pszSet,atSetType)

#define IApplicationAssociationRegistration_SetAppAsDefaultAll(This,pszAppRegistryName)	\
    (This)->lpVtbl -> SetAppAsDefaultAll(This,pszAppRegistryName)

#define IApplicationAssociationRegistration_ClearUserAssociations(This)	\
    (This)->lpVtbl -> ClearUserAssociations(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IApplicationAssociationRegistration_QueryCurrentDefault_Proxy( 
    IApplicationAssociationRegistration __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszQuery,
    /* [in] */ ASSOCIATIONTYPE atQueryType,
    /* [in] */ ASSOCIATIONLEVEL alQueryLevel,
    /* [string][out] */ LPWSTR __RPC_FAR *ppszAssociation);


void __RPC_STUB IApplicationAssociationRegistration_QueryCurrentDefault_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IApplicationAssociationRegistration_QueryAppIsDefault_Proxy( 
    IApplicationAssociationRegistration __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszQuery,
    /* [in] */ ASSOCIATIONTYPE atQueryType,
    /* [in] */ ASSOCIATIONLEVEL alQueryLevel,
    /* [string][in] */ LPCWSTR pszAppRegistryName,
    /* [out] */ BOOL __RPC_FAR *pfDefault);


void __RPC_STUB IApplicationAssociationRegistration_QueryAppIsDefault_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IApplicationAssociationRegistration_QueryAppIsDefaultAll_Proxy( 
    IApplicationAssociationRegistration __RPC_FAR * This,
    /* [in] */ ASSOCIATIONLEVEL alQueryLevel,
    /* [string][in] */ LPCWSTR pszAppRegistryName,
    /* [out] */ BOOL __RPC_FAR *pfDefault);


void __RPC_STUB IApplicationAssociationRegistration_QueryAppIsDefaultAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IApplicationAssociationRegistration_SetAppAsDefault_Proxy( 
    IApplicationAssociationRegistration __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszAppRegistryName,
    /* [string][in] */ LPCWSTR pszSet,
    /* [in] */ ASSOCIATIONTYPE atSetType);


void __RPC_STUB IApplicationAssociationRegistration_SetAppAsDefault_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IApplicationAssociationRegistration_SetAppAsDefaultAll_Proxy( 
    IApplicationAssociationRegistration __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszAppRegistryName);


void __RPC_STUB IApplicationAssociationRegistration_SetAppAsDefaultAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IApplicationAssociationRegistration_ClearUserAssociations_Proxy( 
    IApplicationAssociationRegistration __RPC_FAR * This);


void __RPC_STUB IApplicationAssociationRegistration_ClearUserAssociations_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IApplicationAssociationRegistration_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0414 */
/* [local] */ 

SHSTDAPI SHCreateAssociationRegistration(__in REFIID riid, __deref_out void **ppv);


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0414_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0414_v0_0_s_ifspec;

#ifndef __IApplicationAssociationRegistrationUI_INTERFACE_DEFINED__
#define __IApplicationAssociationRegistrationUI_INTERFACE_DEFINED__

/* interface IApplicationAssociationRegistrationUI */
/* [helpstring][unique][uuid][object] */ 


EXTERN_C const IID IID_IApplicationAssociationRegistrationUI;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1f76a169-f994-40ac-8fc8-0959e8874710")
    IApplicationAssociationRegistrationUI : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE LaunchAdvancedAssociationUI( 
            /* [string][in] */ LPCWSTR pszAppRegistryName) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IApplicationAssociationRegistrationUIVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IApplicationAssociationRegistrationUI __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IApplicationAssociationRegistrationUI __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IApplicationAssociationRegistrationUI __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *LaunchAdvancedAssociationUI )( 
            IApplicationAssociationRegistrationUI __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszAppRegistryName);
        
        END_INTERFACE
    } IApplicationAssociationRegistrationUIVtbl;

    interface IApplicationAssociationRegistrationUI
    {
        CONST_VTBL struct IApplicationAssociationRegistrationUIVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IApplicationAssociationRegistrationUI_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IApplicationAssociationRegistrationUI_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IApplicationAssociationRegistrationUI_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IApplicationAssociationRegistrationUI_LaunchAdvancedAssociationUI(This,pszAppRegistryName)	\
    (This)->lpVtbl -> LaunchAdvancedAssociationUI(This,pszAppRegistryName)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IApplicationAssociationRegistrationUI_LaunchAdvancedAssociationUI_Proxy( 
    IApplicationAssociationRegistrationUI __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszAppRegistryName);


void __RPC_STUB IApplicationAssociationRegistrationUI_LaunchAdvancedAssociationUI_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IApplicationAssociationRegistrationUI_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0415 */
/* [local] */ 

#endif  // NTDDI_LONGHORN
#include <pshpack1.h>
typedef struct tagDELEGATEITEMID
    {
    WORD cbSize;
    WORD wOuter;
    WORD cbInner;
    BYTE rgb[ 1 ];
    }	DELEGATEITEMID;

#include <poppack.h>
typedef const UNALIGNED DELEGATEITEMID *PCDELEGATEITEMID;
typedef UNALIGNED DELEGATEITEMID *PDELEGATEITEMID;


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0415_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0415_v0_0_s_ifspec;

#ifndef __IDelegateFolder_INTERFACE_DEFINED__
#define __IDelegateFolder_INTERFACE_DEFINED__

/* interface IDelegateFolder */
/* [unique][local][object][uuid][helpstring] */ 


EXTERN_C const IID IID_IDelegateFolder;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("ADD8BA80-002B-11D0-8F0F-00C04FD7D062")
    IDelegateFolder : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetItemAlloc( 
            /* [in] */ IMalloc __RPC_FAR *pmalloc) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDelegateFolderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IDelegateFolder __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IDelegateFolder __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IDelegateFolder __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetItemAlloc )( 
            IDelegateFolder __RPC_FAR * This,
            /* [in] */ IMalloc __RPC_FAR *pmalloc);
        
        END_INTERFACE
    } IDelegateFolderVtbl;

    interface IDelegateFolder
    {
        CONST_VTBL struct IDelegateFolderVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDelegateFolder_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IDelegateFolder_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IDelegateFolder_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IDelegateFolder_SetItemAlloc(This,pmalloc)	\
    (This)->lpVtbl -> SetItemAlloc(This,pmalloc)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IDelegateFolder_SetItemAlloc_Proxy( 
    IDelegateFolder __RPC_FAR * This,
    /* [in] */ IMalloc __RPC_FAR *pmalloc);


void __RPC_STUB IDelegateFolder_SetItemAlloc_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IDelegateFolder_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0416 */
/* [local] */ 

#if (_WIN32_IE >= _WIN32_IE_IE60)
// INTERFACE: IBrowserFrameOptions
//
// This interface was implemented so a browser or host can ask a ShellView/ShelNameSpace what
// kind of 'Behavior' is appropriate for that view.
//
//    IBrowserFrameOptions::GetBrowserOptions()
//       dwMask is the logical OR of bits to look for.  pdwOptions is not optional and
//       it's return value will always equal or will be a subset of dwMask.
//       If the function succeeds, the return value must be S_OK and pdwOptions needs to be filled in.
//       If the function fails, pdwOptions needs to be filled in with BFO_NONE.
//


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0416_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0416_v0_0_s_ifspec;

#ifndef __IBrowserFrameOptions_INTERFACE_DEFINED__
#define __IBrowserFrameOptions_INTERFACE_DEFINED__

/* interface IBrowserFrameOptions */
/* [local][object][uuid] */ 

typedef /* [unique] */ IBrowserFrameOptions __RPC_FAR *LPBROWSERFRAMEOPTIONS;


enum tagBROWSERFRAMEOPTIONS
    {	BFO_NONE	= 0,
	BFO_BROWSER_PERSIST_SETTINGS	= 0x1,
	BFO_RENAME_FOLDER_OPTIONS_TOINTERNET	= 0x2,
	BFO_BOTH_OPTIONS	= 0x4,
	BIF_PREFER_INTERNET_SHORTCUT	= 0x8,
	BFO_BROWSE_NO_IN_NEW_PROCESS	= 0x10,
	BFO_ENABLE_HYPERLINK_TRACKING	= 0x20,
	BFO_USE_IE_OFFLINE_SUPPORT	= 0x40,
	BFO_SUBSTITUE_INTERNET_START_PAGE	= 0x80,
	BFO_USE_IE_LOGOBANDING	= 0x100,
	BFO_ADD_IE_TOCAPTIONBAR	= 0x200,
	BFO_USE_DIALUP_REF	= 0x400,
	BFO_USE_IE_TOOLBAR	= 0x800,
	BFO_NO_PARENT_FOLDER_SUPPORT	= 0x1000,
	BFO_NO_REOPEN_NEXT_RESTART	= 0x2000,
	BFO_GO_HOME_PAGE	= 0x4000,
	BFO_PREFER_IEPROCESS	= 0x8000,
	BFO_SHOW_NAVIGATION_CANCELLED	= 0x10000,
	BFO_USE_IE_STATUSBAR	= 0x20000,
	BFO_QUERY_ALL	= 0xffffffff
    };
typedef DWORD BROWSERFRAMEOPTIONS;


EXTERN_C const IID IID_IBrowserFrameOptions;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("10DF43C8-1DBE-11d3-8B34-006097DF5BD4")
    IBrowserFrameOptions : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetFrameOptions( 
            /* [in] */ BROWSERFRAMEOPTIONS dwMask,
            /* [out] */ BROWSERFRAMEOPTIONS __RPC_FAR *pdwOptions) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBrowserFrameOptionsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IBrowserFrameOptions __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IBrowserFrameOptions __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IBrowserFrameOptions __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFrameOptions )( 
            IBrowserFrameOptions __RPC_FAR * This,
            /* [in] */ BROWSERFRAMEOPTIONS dwMask,
            /* [out] */ BROWSERFRAMEOPTIONS __RPC_FAR *pdwOptions);
        
        END_INTERFACE
    } IBrowserFrameOptionsVtbl;

    interface IBrowserFrameOptions
    {
        CONST_VTBL struct IBrowserFrameOptionsVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBrowserFrameOptions_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IBrowserFrameOptions_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IBrowserFrameOptions_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IBrowserFrameOptions_GetFrameOptions(This,dwMask,pdwOptions)	\
    (This)->lpVtbl -> GetFrameOptions(This,dwMask,pdwOptions)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IBrowserFrameOptions_GetFrameOptions_Proxy( 
    IBrowserFrameOptions __RPC_FAR * This,
    /* [in] */ BROWSERFRAMEOPTIONS dwMask,
    /* [out] */ BROWSERFRAMEOPTIONS __RPC_FAR *pdwOptions);


void __RPC_STUB IBrowserFrameOptions_GetFrameOptions_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IBrowserFrameOptions_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0417 */
/* [local] */ 

#endif  // _WIN32_IE_IE60
#if (_WIN32_IE >= _WIN32_IE_IE60SP2)
typedef 
enum tagNWMF
    {	NWMF_UNLOADING	= 0x1,
	NWMF_USERINITED	= 0x2,
	NWMF_FIRST	= 0x4,
	NWMF_OVERRIDEKEY	= 0x8,
	NWMF_SHOWHELP	= 0x10,
	NWMF_HTMLDIALOG	= 0x20,
	NWMF_FROMDIALOGCHILD	= 0x40,
	NWMF_USERREQUESTED	= 0x80,
	NWMF_USERALLOWED	= 0x100,
	NWMF_FORCEWINDOW	= 0x10000,
	NWMF_FORCETAB	= 0x20000,
	NWMF_SUGGESTWINDOW	= 0x40000,
	NWMF_SUGGESTTAB	= 0x80000,
	NWMF_INACTIVETAB	= 0x100000
    }	NWMF;

#define SID_SNewWindowManager IID_INewWindowManager


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0417_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0417_v0_0_s_ifspec;

#ifndef __INewWindowManager_INTERFACE_DEFINED__
#define __INewWindowManager_INTERFACE_DEFINED__

/* interface INewWindowManager */
/* [unique][object][uuid] */ 


EXTERN_C const IID IID_INewWindowManager;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D2BC4C84-3F72-4a52-A604-7BCBF3982CBB")
    INewWindowManager : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE EvaluateNewWindow( 
            /* [string][in] */ LPCWSTR pszUrl,
            /* [string][in] */ LPCWSTR pszName,
            /* [string][in] */ LPCWSTR pszUrlContext,
            /* [string][in] */ LPCWSTR pszFeatures,
            /* [in] */ BOOL fReplace,
            /* [in] */ DWORD dwFlags,
            /* [in] */ DWORD dwUserActionTime) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct INewWindowManagerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            INewWindowManager __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            INewWindowManager __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            INewWindowManager __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *EvaluateNewWindow )( 
            INewWindowManager __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszUrl,
            /* [string][in] */ LPCWSTR pszName,
            /* [string][in] */ LPCWSTR pszUrlContext,
            /* [string][in] */ LPCWSTR pszFeatures,
            /* [in] */ BOOL fReplace,
            /* [in] */ DWORD dwFlags,
            /* [in] */ DWORD dwUserActionTime);
        
        END_INTERFACE
    } INewWindowManagerVtbl;

    interface INewWindowManager
    {
        CONST_VTBL struct INewWindowManagerVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define INewWindowManager_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define INewWindowManager_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define INewWindowManager_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define INewWindowManager_EvaluateNewWindow(This,pszUrl,pszName,pszUrlContext,pszFeatures,fReplace,dwFlags,dwUserActionTime)	\
    (This)->lpVtbl -> EvaluateNewWindow(This,pszUrl,pszName,pszUrlContext,pszFeatures,fReplace,dwFlags,dwUserActionTime)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE INewWindowManager_EvaluateNewWindow_Proxy( 
    INewWindowManager __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszUrl,
    /* [string][in] */ LPCWSTR pszName,
    /* [string][in] */ LPCWSTR pszUrlContext,
    /* [string][in] */ LPCWSTR pszFeatures,
    /* [in] */ BOOL fReplace,
    /* [in] */ DWORD dwFlags,
    /* [in] */ DWORD dwUserActionTime);


void __RPC_STUB INewWindowManager_EvaluateNewWindow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __INewWindowManager_INTERFACE_DEFINED__ */


#ifndef __IAttachmentExecute_INTERFACE_DEFINED__
#define __IAttachmentExecute_INTERFACE_DEFINED__

/* interface IAttachmentExecute */
/* [unique][local][uuid][object] */ 

typedef 
enum tagATTACHMENT_PROMPT
    {	ATTACHMENT_PROMPT_NONE	= 0,
	ATTACHMENT_PROMPT_SAVE	= 0x1,
	ATTACHMENT_PROMPT_EXEC	= 0x2,
	ATTACHMENT_PROMPT_EXEC_OR_SAVE	= 0x3
    }	ATTACHMENT_PROMPT;

typedef 
enum tagATTACHMENT_ACTION
    {	ATTACHMENT_ACTION_CANCEL	= 0,
	ATTACHMENT_ACTION_SAVE	= 0x1,
	ATTACHMENT_ACTION_EXEC	= 0x2
    }	ATTACHMENT_ACTION;


EXTERN_C const IID IID_IAttachmentExecute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("73db1241-1e85-4581-8e4f-a81e1d0f8c57")
    IAttachmentExecute : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetClientTitle( 
            /* [string][in] */ LPCWSTR pszTitle) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetClientGuid( 
            /* [in] */ REFGUID guid) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetLocalPath( 
            /* [string][in] */ LPCWSTR pszLocalPath) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetFileName( 
            /* [string][in] */ LPCWSTR pszFileName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetSource( 
            /* [string][in] */ LPCWSTR pszSource) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetReferrer( 
            /* [string][in] */ LPCWSTR pszReferrer) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CheckPolicy( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Prompt( 
            /* [in] */ HWND hwnd,
            /* [in] */ ATTACHMENT_PROMPT prompt,
            /* [out] */ ATTACHMENT_ACTION __RPC_FAR *paction) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Save( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Execute( 
            /* [in] */ HWND hwnd,
            /* [string][in] */ LPCWSTR pszVerb,
            /* [out] */ HANDLE __RPC_FAR *phProcess) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SaveWithUI( 
            /* [in] */ HWND hwnd) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ClearClientState( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAttachmentExecuteVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAttachmentExecute __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAttachmentExecute __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAttachmentExecute __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetClientTitle )( 
            IAttachmentExecute __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszTitle);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetClientGuid )( 
            IAttachmentExecute __RPC_FAR * This,
            /* [in] */ REFGUID guid);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetLocalPath )( 
            IAttachmentExecute __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszLocalPath);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFileName )( 
            IAttachmentExecute __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszFileName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetSource )( 
            IAttachmentExecute __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszSource);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetReferrer )( 
            IAttachmentExecute __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszReferrer);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CheckPolicy )( 
            IAttachmentExecute __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Prompt )( 
            IAttachmentExecute __RPC_FAR * This,
            /* [in] */ HWND hwnd,
            /* [in] */ ATTACHMENT_PROMPT prompt,
            /* [out] */ ATTACHMENT_ACTION __RPC_FAR *paction);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Save )( 
            IAttachmentExecute __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Execute )( 
            IAttachmentExecute __RPC_FAR * This,
            /* [in] */ HWND hwnd,
            /* [string][in] */ LPCWSTR pszVerb,
            /* [out] */ HANDLE __RPC_FAR *phProcess);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SaveWithUI )( 
            IAttachmentExecute __RPC_FAR * This,
            /* [in] */ HWND hwnd);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ClearClientState )( 
            IAttachmentExecute __RPC_FAR * This);
        
        END_INTERFACE
    } IAttachmentExecuteVtbl;

    interface IAttachmentExecute
    {
        CONST_VTBL struct IAttachmentExecuteVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAttachmentExecute_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAttachmentExecute_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAttachmentExecute_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAttachmentExecute_SetClientTitle(This,pszTitle)	\
    (This)->lpVtbl -> SetClientTitle(This,pszTitle)

#define IAttachmentExecute_SetClientGuid(This,guid)	\
    (This)->lpVtbl -> SetClientGuid(This,guid)

#define IAttachmentExecute_SetLocalPath(This,pszLocalPath)	\
    (This)->lpVtbl -> SetLocalPath(This,pszLocalPath)

#define IAttachmentExecute_SetFileName(This,pszFileName)	\
    (This)->lpVtbl -> SetFileName(This,pszFileName)

#define IAttachmentExecute_SetSource(This,pszSource)	\
    (This)->lpVtbl -> SetSource(This,pszSource)

#define IAttachmentExecute_SetReferrer(This,pszReferrer)	\
    (This)->lpVtbl -> SetReferrer(This,pszReferrer)

#define IAttachmentExecute_CheckPolicy(This)	\
    (This)->lpVtbl -> CheckPolicy(This)

#define IAttachmentExecute_Prompt(This,hwnd,prompt,paction)	\
    (This)->lpVtbl -> Prompt(This,hwnd,prompt,paction)

#define IAttachmentExecute_Save(This)	\
    (This)->lpVtbl -> Save(This)

#define IAttachmentExecute_Execute(This,hwnd,pszVerb,phProcess)	\
    (This)->lpVtbl -> Execute(This,hwnd,pszVerb,phProcess)

#define IAttachmentExecute_SaveWithUI(This,hwnd)	\
    (This)->lpVtbl -> SaveWithUI(This,hwnd)

#define IAttachmentExecute_ClearClientState(This)	\
    (This)->lpVtbl -> ClearClientState(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAttachmentExecute_SetClientTitle_Proxy( 
    IAttachmentExecute __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszTitle);


void __RPC_STUB IAttachmentExecute_SetClientTitle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAttachmentExecute_SetClientGuid_Proxy( 
    IAttachmentExecute __RPC_FAR * This,
    /* [in] */ REFGUID guid);


void __RPC_STUB IAttachmentExecute_SetClientGuid_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAttachmentExecute_SetLocalPath_Proxy( 
    IAttachmentExecute __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszLocalPath);


void __RPC_STUB IAttachmentExecute_SetLocalPath_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAttachmentExecute_SetFileName_Proxy( 
    IAttachmentExecute __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszFileName);


void __RPC_STUB IAttachmentExecute_SetFileName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAttachmentExecute_SetSource_Proxy( 
    IAttachmentExecute __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszSource);


void __RPC_STUB IAttachmentExecute_SetSource_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAttachmentExecute_SetReferrer_Proxy( 
    IAttachmentExecute __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszReferrer);


void __RPC_STUB IAttachmentExecute_SetReferrer_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAttachmentExecute_CheckPolicy_Proxy( 
    IAttachmentExecute __RPC_FAR * This);


void __RPC_STUB IAttachmentExecute_CheckPolicy_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAttachmentExecute_Prompt_Proxy( 
    IAttachmentExecute __RPC_FAR * This,
    /* [in] */ HWND hwnd,
    /* [in] */ ATTACHMENT_PROMPT prompt,
    /* [out] */ ATTACHMENT_ACTION __RPC_FAR *paction);


void __RPC_STUB IAttachmentExecute_Prompt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAttachmentExecute_Save_Proxy( 
    IAttachmentExecute __RPC_FAR * This);


void __RPC_STUB IAttachmentExecute_Save_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAttachmentExecute_Execute_Proxy( 
    IAttachmentExecute __RPC_FAR * This,
    /* [in] */ HWND hwnd,
    /* [string][in] */ LPCWSTR pszVerb,
    /* [out] */ HANDLE __RPC_FAR *phProcess);


void __RPC_STUB IAttachmentExecute_Execute_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAttachmentExecute_SaveWithUI_Proxy( 
    IAttachmentExecute __RPC_FAR * This,
    /* [in] */ HWND hwnd);


void __RPC_STUB IAttachmentExecute_SaveWithUI_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAttachmentExecute_ClearClientState_Proxy( 
    IAttachmentExecute __RPC_FAR * This);


void __RPC_STUB IAttachmentExecute_ClearClientState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAttachmentExecute_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0419 */
/* [local] */ 

#endif  // _WIN32_IE_IE60SP2
#if (_WIN32_IE >= _WIN32_IE_IE60)
#include <pshpack8.h>
typedef struct tagSMDATA
    {
    DWORD dwMask;
    DWORD dwFlags;
    HMENU hmenu;
    HWND hwnd;
    UINT uId;
    UINT uIdParent;
    UINT uIdAncestor;
    IUnknown __RPC_FAR *punk;
    PIDLIST_ABSOLUTE pidlFolder;
    PUITEMID_CHILD pidlItem;
    IShellFolder __RPC_FAR *psf;
    void __RPC_FAR *pvUserData;
    }	SMDATA;

typedef struct tagSMDATA __RPC_FAR *LPSMDATA;

// Mask
#define SMDM_SHELLFOLDER               0x00000001  // This is for an item in the band
#define SMDM_HMENU                     0x00000002  // This is for the Band itself
#define SMDM_TOOLBAR                   0x00000004  // Plain toolbar, not associated with a shell folder or hmenu
// Flags (bitmask)
typedef struct tagSMINFO
    {
    DWORD dwMask;
    DWORD dwType;
    DWORD dwFlags;
    int iIcon;
    }	SMINFO;

typedef struct tagSMINFO __RPC_FAR *PSMINFO;

typedef struct tagSHCSCHANGENOTIFYSTRUCT
    {
    LONG lEvent;
    PCIDLIST_ABSOLUTE pidl1;
    PCIDLIST_ABSOLUTE pidl2;
    }	SMCSHCHANGENOTIFYSTRUCT;

typedef struct tagSHCSCHANGENOTIFYSTRUCT __RPC_FAR *PSMCSHCHANGENOTIFYSTRUCT;

#include <poppack.h>

enum tagSMINFOMASK
    {	SMIM_TYPE	= 0x1,
	SMIM_FLAGS	= 0x2,
	SMIM_ICON	= 0x4
    };

enum tagSMINFOTYPE
    {	SMIT_SEPARATOR	= 0x1,
	SMIT_STRING	= 0x2
    };

enum tagSMINFOFLAGS
    {	SMIF_ICON	= 0x1,
	SMIF_ACCELERATOR	= 0x2,
	SMIF_DROPTARGET	= 0x4,
	SMIF_SUBMENU	= 0x8,
	SMIF_CHECKED	= 0x20,
	SMIF_DROPCASCADE	= 0x40,
	SMIF_HIDDEN	= 0x80,
	SMIF_DISABLED	= 0x100,
	SMIF_TRACKPOPUP	= 0x200,
	SMIF_DEMOTED	= 0x400,
	SMIF_ALTSTATE	= 0x800,
	SMIF_DRAGNDROP	= 0x1000,
	SMIF_NEW	= 0x2000
    };
#define SMC_INITMENU            0x00000001  // The callback is called to init a menuband
#define SMC_CREATE              0x00000002
#define SMC_EXITMENU            0x00000003  // The callback is called when menu is collapsing
#define SMC_GETINFO             0x00000005  // The callback is called to return DWORD values
#define SMC_GETSFINFO           0x00000006  // The callback is called to return DWORD values
#define SMC_GETOBJECT           0x00000007  // The callback is called to get some object
#define SMC_GETSFOBJECT         0x00000008  // The callback is called to get some object
#define SMC_SFEXEC              0x00000009  // The callback is called to execute an shell folder item
#define SMC_SFSELECTITEM        0x0000000A  // The callback is called when an item is selected
#define SMC_REFRESH             0x00000010  // Menus have completely refreshed. Reset your state.
#define SMC_DEMOTE              0x00000011  // Demote an item
#define SMC_PROMOTE             0x00000012  // Promote an item, wParam = SMINV_* flag
#define SMC_DEFAULTICON         0x00000016  // Returns Default icon location in wParam, index in lParam
#define SMC_NEWITEM             0x00000017  // Notifies item is not in the order stream.
#define SMC_CHEVRONEXPAND       0x00000019  // Notifies of a expansion via the chevron
#define SMC_DISPLAYCHEVRONTIP   0x0000002A  // S_OK display, S_FALSE not.
#define SMC_SETSFOBJECT         0x0000002D  // Called to save the passed object
#define SMC_SHCHANGENOTIFY      0x0000002E  // Called when a Change notify is received. lParam points to SMCSHCHANGENOTIFYSTRUCT
#define SMC_CHEVRONGETTIP       0x0000002F  // Called to get the chevron tip text. wParam = Tip title, Lparam = TipText Both MAX_PATH
#define SMC_SFDDRESTRICTED      0x00000030  // Called requesting if it's ok to drop. wParam = IDropTarget.
#if (_WIN32_IE >= _WIN32_IE_IE70)
#define SMC_SFEXEC_MIDDLE       0x00000031  // Same as SFEXEC, but the middle mouse button caused the exec.
#define SMC_GETAUTOEXPANDSTATE  0x00000041  // callback returns the default autoexpand state lParam = LPDWORD to recieve flags
#define SMC_AUTOEXPANDCHANGE    0x00000042  // Notify that the menu is expanding/contracting
#define SMC_GETCONTEXTMENUMODIFIER 0x00000043  // Used to add items to a context menu
#define SMC_GETBKCONTEXTMENU    0x00000044  // used to get a context menu to display when user right clicks on the background
#define SMC_OPEN                0x00000045  // allows client to overwrite open/explore verb action on an item
// Flags for return value from SMC_GETAUTOEXPANDSTATE and SMC_AUTOEXPANDCHANGE:
#define SMAE_EXPANDED           0x00000001  // The menu is or should start expanded
#define SMAE_CONTRACTED         0x00000002  // The menu is or should start contracted
                                            // SMAE_EXPANDED and SMAE_CONTRACTED are mutually exclusive
#define SMAE_USER               0x00000004  // Indicates that the menu expansion/contraction is a reflection
                                            // of user choice
#define SMAE_VALID              0x00000007
#endif  // _WIN32_IE_IE70


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0419_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0419_v0_0_s_ifspec;

#ifndef __IShellMenuCallback_INTERFACE_DEFINED__
#define __IShellMenuCallback_INTERFACE_DEFINED__

/* interface IShellMenuCallback */
/* [local][unique][object][uuid] */ 


EXTERN_C const IID IID_IShellMenuCallback;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4CA300A1-9B8D-11d1-8B22-00C04FD918D0")
    IShellMenuCallback : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE CallbackSM( 
            /* [out][in] */ LPSMDATA psmd,
            /* [in] */ UINT uMsg,
            /* [in] */ WPARAM wParam,
            /* [in] */ LPARAM lParam) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IShellMenuCallbackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IShellMenuCallback __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IShellMenuCallback __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IShellMenuCallback __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CallbackSM )( 
            IShellMenuCallback __RPC_FAR * This,
            /* [out][in] */ LPSMDATA psmd,
            /* [in] */ UINT uMsg,
            /* [in] */ WPARAM wParam,
            /* [in] */ LPARAM lParam);
        
        END_INTERFACE
    } IShellMenuCallbackVtbl;

    interface IShellMenuCallback
    {
        CONST_VTBL struct IShellMenuCallbackVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IShellMenuCallback_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IShellMenuCallback_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IShellMenuCallback_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IShellMenuCallback_CallbackSM(This,psmd,uMsg,wParam,lParam)	\
    (This)->lpVtbl -> CallbackSM(This,psmd,uMsg,wParam,lParam)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IShellMenuCallback_CallbackSM_Proxy( 
    IShellMenuCallback __RPC_FAR * This,
    /* [out][in] */ LPSMDATA psmd,
    /* [in] */ UINT uMsg,
    /* [in] */ WPARAM wParam,
    /* [in] */ LPARAM lParam);


void __RPC_STUB IShellMenuCallback_CallbackSM_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IShellMenuCallback_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0420 */
/* [local] */ 

#define SMINIT_DEFAULT              0x00000000  // No Options
#define SMINIT_RESTRICT_DRAGDROP    0x00000002  // Don't allow Drag and Drop
#define SMINIT_TOPLEVEL             0x00000004  // This is the top band.
#define SMINIT_CACHED               0x00000010
#if (_WIN32_IE >= _WIN32_IE_IE70)
#define SMINIT_AUTOEXPAND           0x00000100  // automatically expand/contract menu band
#define SMINIT_AUTOTOOLTIP          0x00000200  // regular tooltip support
#define SMINIT_DROPONCONTAINER      0x00000400  // allow drop on a container
#endif  // _WIN32_IE_IE70
#define SMINIT_VERTICAL             0x10000000  // This is a vertical menu
#define SMINIT_HORIZONTAL           0x20000000  // This is a horizontal menu    (does not inherit)
#define ANCESTORDEFAULT      (UINT)-1
#define SMSET_TOP                   0x10000000    // Bias this namespace to the top of the menu
#define SMSET_BOTTOM                0x20000000    // Bias this namespace to the bottom of the menu
#define SMSET_DONTOWN               0x00000001    // The Menuband doesn't own the non-ref counted object
#define SMINV_REFRESH        0x00000001
#define SMINV_ID             0x00000008


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0420_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0420_v0_0_s_ifspec;

#ifndef __IShellMenu_INTERFACE_DEFINED__
#define __IShellMenu_INTERFACE_DEFINED__

/* interface IShellMenu */
/* [local][unique][object][uuid] */ 


EXTERN_C const IID IID_IShellMenu;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("EE1F7637-E138-11d1-8379-00C04FD918D0")
    IShellMenu : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Initialize( 
            /* [in] */ IShellMenuCallback __RPC_FAR *psmc,
            /* [in] */ UINT uId,
            /* [in] */ UINT uIdAncestor,
            /* [in] */ DWORD dwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMenuInfo( 
            /* [out] */ IShellMenuCallback __RPC_FAR *__RPC_FAR *ppsmc,
            /* [out] */ UINT __RPC_FAR *puId,
            /* [out] */ UINT __RPC_FAR *puIdAncestor,
            /* [out] */ DWORD __RPC_FAR *pdwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetShellFolder( 
            /* [in] */ IShellFolder __RPC_FAR *psf,
            /* [in] */ PCIDLIST_ABSOLUTE pidlFolder,
            /* [in] */ HKEY hKey,
            /* [in] */ DWORD dwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetShellFolder( 
            /* [out] */ DWORD __RPC_FAR *pdwFlags,
            /* [out] */ PIDLIST_ABSOLUTE __RPC_FAR *ppidl,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetMenu( 
            /* [in] */ HMENU hmenu,
            /* [in] */ HWND hwnd,
            /* [in] */ DWORD dwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMenu( 
            /* [out] */ HMENU __RPC_FAR *phmenu,
            /* [out] */ HWND __RPC_FAR *phwnd,
            /* [out] */ DWORD __RPC_FAR *pdwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InvalidateItem( 
            /* [in] */ LPSMDATA psmd,
            /* [in] */ DWORD dwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetState( 
            /* [out] */ LPSMDATA psmd) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetMenuToolbar( 
            /* [in] */ IUnknown __RPC_FAR *punk,
            /* [in] */ DWORD dwFlags) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IShellMenuVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IShellMenu __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IShellMenu __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IShellMenu __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Initialize )( 
            IShellMenu __RPC_FAR * This,
            /* [in] */ IShellMenuCallback __RPC_FAR *psmc,
            /* [in] */ UINT uId,
            /* [in] */ UINT uIdAncestor,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetMenuInfo )( 
            IShellMenu __RPC_FAR * This,
            /* [out] */ IShellMenuCallback __RPC_FAR *__RPC_FAR *ppsmc,
            /* [out] */ UINT __RPC_FAR *puId,
            /* [out] */ UINT __RPC_FAR *puIdAncestor,
            /* [out] */ DWORD __RPC_FAR *pdwFlags);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetShellFolder )( 
            IShellMenu __RPC_FAR * This,
            /* [in] */ IShellFolder __RPC_FAR *psf,
            /* [in] */ PCIDLIST_ABSOLUTE pidlFolder,
            /* [in] */ HKEY hKey,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetShellFolder )( 
            IShellMenu __RPC_FAR * This,
            /* [out] */ DWORD __RPC_FAR *pdwFlags,
            /* [out] */ PIDLIST_ABSOLUTE __RPC_FAR *ppidl,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetMenu )( 
            IShellMenu __RPC_FAR * This,
            /* [in] */ HMENU hmenu,
            /* [in] */ HWND hwnd,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetMenu )( 
            IShellMenu __RPC_FAR * This,
            /* [out] */ HMENU __RPC_FAR *phmenu,
            /* [out] */ HWND __RPC_FAR *phwnd,
            /* [out] */ DWORD __RPC_FAR *pdwFlags);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *InvalidateItem )( 
            IShellMenu __RPC_FAR * This,
            /* [in] */ LPSMDATA psmd,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetState )( 
            IShellMenu __RPC_FAR * This,
            /* [out] */ LPSMDATA psmd);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetMenuToolbar )( 
            IShellMenu __RPC_FAR * This,
            /* [in] */ IUnknown __RPC_FAR *punk,
            /* [in] */ DWORD dwFlags);
        
        END_INTERFACE
    } IShellMenuVtbl;

    interface IShellMenu
    {
        CONST_VTBL struct IShellMenuVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IShellMenu_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IShellMenu_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IShellMenu_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IShellMenu_Initialize(This,psmc,uId,uIdAncestor,dwFlags)	\
    (This)->lpVtbl -> Initialize(This,psmc,uId,uIdAncestor,dwFlags)

#define IShellMenu_GetMenuInfo(This,ppsmc,puId,puIdAncestor,pdwFlags)	\
    (This)->lpVtbl -> GetMenuInfo(This,ppsmc,puId,puIdAncestor,pdwFlags)

#define IShellMenu_SetShellFolder(This,psf,pidlFolder,hKey,dwFlags)	\
    (This)->lpVtbl -> SetShellFolder(This,psf,pidlFolder,hKey,dwFlags)

#define IShellMenu_GetShellFolder(This,pdwFlags,ppidl,riid,ppv)	\
    (This)->lpVtbl -> GetShellFolder(This,pdwFlags,ppidl,riid,ppv)

#define IShellMenu_SetMenu(This,hmenu,hwnd,dwFlags)	\
    (This)->lpVtbl -> SetMenu(This,hmenu,hwnd,dwFlags)

#define IShellMenu_GetMenu(This,phmenu,phwnd,pdwFlags)	\
    (This)->lpVtbl -> GetMenu(This,phmenu,phwnd,pdwFlags)

#define IShellMenu_InvalidateItem(This,psmd,dwFlags)	\
    (This)->lpVtbl -> InvalidateItem(This,psmd,dwFlags)

#define IShellMenu_GetState(This,psmd)	\
    (This)->lpVtbl -> GetState(This,psmd)

#define IShellMenu_SetMenuToolbar(This,punk,dwFlags)	\
    (This)->lpVtbl -> SetMenuToolbar(This,punk,dwFlags)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IShellMenu_Initialize_Proxy( 
    IShellMenu __RPC_FAR * This,
    /* [in] */ IShellMenuCallback __RPC_FAR *psmc,
    /* [in] */ UINT uId,
    /* [in] */ UINT uIdAncestor,
    /* [in] */ DWORD dwFlags);


void __RPC_STUB IShellMenu_Initialize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellMenu_GetMenuInfo_Proxy( 
    IShellMenu __RPC_FAR * This,
    /* [out] */ IShellMenuCallback __RPC_FAR *__RPC_FAR *ppsmc,
    /* [out] */ UINT __RPC_FAR *puId,
    /* [out] */ UINT __RPC_FAR *puIdAncestor,
    /* [out] */ DWORD __RPC_FAR *pdwFlags);


void __RPC_STUB IShellMenu_GetMenuInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellMenu_SetShellFolder_Proxy( 
    IShellMenu __RPC_FAR * This,
    /* [in] */ IShellFolder __RPC_FAR *psf,
    /* [in] */ PCIDLIST_ABSOLUTE pidlFolder,
    /* [in] */ HKEY hKey,
    /* [in] */ DWORD dwFlags);


void __RPC_STUB IShellMenu_SetShellFolder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellMenu_GetShellFolder_Proxy( 
    IShellMenu __RPC_FAR * This,
    /* [out] */ DWORD __RPC_FAR *pdwFlags,
    /* [out] */ PIDLIST_ABSOLUTE __RPC_FAR *ppidl,
    /* [in] */ REFIID riid,
    /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);


void __RPC_STUB IShellMenu_GetShellFolder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellMenu_SetMenu_Proxy( 
    IShellMenu __RPC_FAR * This,
    /* [in] */ HMENU hmenu,
    /* [in] */ HWND hwnd,
    /* [in] */ DWORD dwFlags);


void __RPC_STUB IShellMenu_SetMenu_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellMenu_GetMenu_Proxy( 
    IShellMenu __RPC_FAR * This,
    /* [out] */ HMENU __RPC_FAR *phmenu,
    /* [out] */ HWND __RPC_FAR *phwnd,
    /* [out] */ DWORD __RPC_FAR *pdwFlags);


void __RPC_STUB IShellMenu_GetMenu_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellMenu_InvalidateItem_Proxy( 
    IShellMenu __RPC_FAR * This,
    /* [in] */ LPSMDATA psmd,
    /* [in] */ DWORD dwFlags);


void __RPC_STUB IShellMenu_InvalidateItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellMenu_GetState_Proxy( 
    IShellMenu __RPC_FAR * This,
    /* [out] */ LPSMDATA psmd);


void __RPC_STUB IShellMenu_GetState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellMenu_SetMenuToolbar_Proxy( 
    IShellMenu __RPC_FAR * This,
    /* [in] */ IUnknown __RPC_FAR *punk,
    /* [in] */ DWORD dwFlags);


void __RPC_STUB IShellMenu_SetMenuToolbar_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IShellMenu_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0421 */
/* [local] */ 

#endif  // _WIN32_IE_IE60


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0421_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0421_v0_0_s_ifspec;

#ifndef __IShellRunDll_INTERFACE_DEFINED__
#define __IShellRunDll_INTERFACE_DEFINED__

/* interface IShellRunDll */
/* [local][ref][object][uuid] */ 


EXTERN_C const IID IID_IShellRunDll;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("fce4bde0-4b68-4b80-8e9c-7426315a7388")
    IShellRunDll : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Run( 
            /* [string][in] */ LPCWSTR pszArgs) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IShellRunDllVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IShellRunDll __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IShellRunDll __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IShellRunDll __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Run )( 
            IShellRunDll __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszArgs);
        
        END_INTERFACE
    } IShellRunDllVtbl;

    interface IShellRunDll
    {
        CONST_VTBL struct IShellRunDllVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IShellRunDll_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IShellRunDll_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IShellRunDll_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IShellRunDll_Run(This,pszArgs)	\
    (This)->lpVtbl -> Run(This,pszArgs)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IShellRunDll_Run_Proxy( 
    IShellRunDll __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszArgs);


void __RPC_STUB IShellRunDll_Run_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IShellRunDll_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0422 */
/* [local] */ 

#if (NTDDI_VERSION >= NTDDI_LONGHORN)
/* [v1_enum] */ 
enum tagKF_CATEGORY
    {	KF_CATEGORY_VIRTUAL	= 0x1,
	KF_CATEGORY_FIXED	= 0x2,
	KF_CATEGORY_COMMON	= 0x3,
	KF_CATEGORY_PERUSER	= 0x4
    };
typedef enum tagKF_CATEGORY KF_CATEGORY;

/* [v1_enum] */ 
enum tagKF_DEFINITION_FLAGS
    {	KFDF_LOCAL_REDIRECT_ONLY	= 0x2,
	KFDF_ROAMABLE	= 0x4,
	KFDF_PRECREATE	= 0x8
    };
typedef DWORD KF_DEFINITION_FLAGS;

/* [v1_enum] */ 
enum tagKF_REDIRECT_FLAGS
    {	KF_REDIRECT_USER_EXCLUSIVE	= 0x1,
	KF_REDIRECT_COPY_SOURCE_DACL	= 0x2,
	KF_REDIRECT_OWNER_USER	= 0x4,
	KF_REDIRECT_SET_OWNER_EXPLICIT	= 0x8,
	KF_REDIRECT_CHECK_ONLY	= 0x10,
	KF_REDIRECT_WITH_UI	= 0x20,
	KF_REDIRECT_UNPIN	= 0x40,
	KF_REDIRECT_PIN	= 0x80,
	KF_REDIRECT_COPY_CONTENTS	= 0x200,
	KF_REDIRECT_DEL_SOURCE_CONTENTS	= 0x400,
	KF_REDIRECT_EXCLUDE_ALL_KNOWN_SUBFOLDERS	= 0x800
    };
typedef DWORD KF_REDIRECT_FLAGS;

/* [v1_enum] */ 
enum tagKF_REDIRECTION_CAPABILITIES
    {	KF_REDIRECTION_CAPABILITIES_ALLOW_ALL	= 0xff,
	KF_REDIRECTION_CAPABILITIES_REDIRECTABLE	= 0x1,
	KF_REDIRECTION_CAPABILITIES_DENY_ALL	= 0xfff00,
	KF_REDIRECTION_CAPABILITIES_DENY_POLICY_REDIRECTED	= 0x100,
	KF_REDIRECTION_CAPABILITIES_DENY_POLICY	= 0x200,
	KF_REDIRECTION_CAPABILITIES_DENY_PERMISSIONS	= 0x400
    };
typedef DWORD KF_REDIRECTION_CAPABILITIES;

typedef struct tagKNOWNFOLDER_DEFINITION
    {
    KF_CATEGORY category;
    LPWSTR pszName;
    LPWSTR pszDescription;
    KNOWNFOLDERID fidParent;
    LPWSTR pszRelativePath;
    LPWSTR pszParsingName;
    LPWSTR pszTooltip;
    LPWSTR pszLocalizedName;
    LPWSTR pszIcon;
    LPWSTR pszSecurity;
    DWORD dwAttributes;
    KF_DEFINITION_FLAGS kfdFlags;
    FOLDERTYPEID ftidType;
    }	KNOWNFOLDER_DEFINITION;



extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0422_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0422_v0_0_s_ifspec;

#ifndef __IKnownFolder_INTERFACE_DEFINED__
#define __IKnownFolder_INTERFACE_DEFINED__

/* interface IKnownFolder */
/* [ref][version][object][helpstring][uuid] */ 


EXTERN_C const IID IID_IKnownFolder;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3AA7AF7E-9B36-420c-A8E3-F77D4674A488")
    IKnownFolder : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetId( 
            /* [out] */ KNOWNFOLDERID __RPC_FAR *pkfid) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCategory( 
            /* [out] */ KF_CATEGORY __RPC_FAR *pCategory) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetShellItem( 
            /* [in] */ DWORD dwFlags,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPath( 
            /* [in] */ DWORD dwFlags,
            /* [string][out] */ LPWSTR __RPC_FAR *ppszPath) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetPath( 
            /* [in] */ DWORD dwFlags,
            /* [string][in] */ LPCWSTR pszPath) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetIDList( 
            /* [in] */ DWORD dwFlags,
            /* [out] */ PIDLIST_ABSOLUTE __RPC_FAR *ppidl) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFolderType( 
            /* [out] */ FOLDERTYPEID __RPC_FAR *pftid) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRedirectionCapabilities( 
            /* [out] */ KF_REDIRECTION_CAPABILITIES __RPC_FAR *pCapabilities) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFolderDefinition( 
            /* [out] */ KNOWNFOLDER_DEFINITION __RPC_FAR *pKFD) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IKnownFolderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IKnownFolder __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IKnownFolder __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IKnownFolder __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetId )( 
            IKnownFolder __RPC_FAR * This,
            /* [out] */ KNOWNFOLDERID __RPC_FAR *pkfid);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCategory )( 
            IKnownFolder __RPC_FAR * This,
            /* [out] */ KF_CATEGORY __RPC_FAR *pCategory);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetShellItem )( 
            IKnownFolder __RPC_FAR * This,
            /* [in] */ DWORD dwFlags,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetPath )( 
            IKnownFolder __RPC_FAR * This,
            /* [in] */ DWORD dwFlags,
            /* [string][out] */ LPWSTR __RPC_FAR *ppszPath);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetPath )( 
            IKnownFolder __RPC_FAR * This,
            /* [in] */ DWORD dwFlags,
            /* [string][in] */ LPCWSTR pszPath);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDList )( 
            IKnownFolder __RPC_FAR * This,
            /* [in] */ DWORD dwFlags,
            /* [out] */ PIDLIST_ABSOLUTE __RPC_FAR *ppidl);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFolderType )( 
            IKnownFolder __RPC_FAR * This,
            /* [out] */ FOLDERTYPEID __RPC_FAR *pftid);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetRedirectionCapabilities )( 
            IKnownFolder __RPC_FAR * This,
            /* [out] */ KF_REDIRECTION_CAPABILITIES __RPC_FAR *pCapabilities);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFolderDefinition )( 
            IKnownFolder __RPC_FAR * This,
            /* [out] */ KNOWNFOLDER_DEFINITION __RPC_FAR *pKFD);
        
        END_INTERFACE
    } IKnownFolderVtbl;

    interface IKnownFolder
    {
        CONST_VTBL struct IKnownFolderVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IKnownFolder_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IKnownFolder_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IKnownFolder_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IKnownFolder_GetId(This,pkfid)	\
    (This)->lpVtbl -> GetId(This,pkfid)

#define IKnownFolder_GetCategory(This,pCategory)	\
    (This)->lpVtbl -> GetCategory(This,pCategory)

#define IKnownFolder_GetShellItem(This,dwFlags,riid,ppv)	\
    (This)->lpVtbl -> GetShellItem(This,dwFlags,riid,ppv)

#define IKnownFolder_GetPath(This,dwFlags,ppszPath)	\
    (This)->lpVtbl -> GetPath(This,dwFlags,ppszPath)

#define IKnownFolder_SetPath(This,dwFlags,pszPath)	\
    (This)->lpVtbl -> SetPath(This,dwFlags,pszPath)

#define IKnownFolder_GetIDList(This,dwFlags,ppidl)	\
    (This)->lpVtbl -> GetIDList(This,dwFlags,ppidl)

#define IKnownFolder_GetFolderType(This,pftid)	\
    (This)->lpVtbl -> GetFolderType(This,pftid)

#define IKnownFolder_GetRedirectionCapabilities(This,pCapabilities)	\
    (This)->lpVtbl -> GetRedirectionCapabilities(This,pCapabilities)

#define IKnownFolder_GetFolderDefinition(This,pKFD)	\
    (This)->lpVtbl -> GetFolderDefinition(This,pKFD)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IKnownFolder_GetId_Proxy( 
    IKnownFolder __RPC_FAR * This,
    /* [out] */ KNOWNFOLDERID __RPC_FAR *pkfid);


void __RPC_STUB IKnownFolder_GetId_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IKnownFolder_GetCategory_Proxy( 
    IKnownFolder __RPC_FAR * This,
    /* [out] */ KF_CATEGORY __RPC_FAR *pCategory);


void __RPC_STUB IKnownFolder_GetCategory_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IKnownFolder_GetShellItem_Proxy( 
    IKnownFolder __RPC_FAR * This,
    /* [in] */ DWORD dwFlags,
    /* [in] */ REFIID riid,
    /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);


void __RPC_STUB IKnownFolder_GetShellItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IKnownFolder_GetPath_Proxy( 
    IKnownFolder __RPC_FAR * This,
    /* [in] */ DWORD dwFlags,
    /* [string][out] */ LPWSTR __RPC_FAR *ppszPath);


void __RPC_STUB IKnownFolder_GetPath_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IKnownFolder_SetPath_Proxy( 
    IKnownFolder __RPC_FAR * This,
    /* [in] */ DWORD dwFlags,
    /* [string][in] */ LPCWSTR pszPath);


void __RPC_STUB IKnownFolder_SetPath_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IKnownFolder_GetIDList_Proxy( 
    IKnownFolder __RPC_FAR * This,
    /* [in] */ DWORD dwFlags,
    /* [out] */ PIDLIST_ABSOLUTE __RPC_FAR *ppidl);


void __RPC_STUB IKnownFolder_GetIDList_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IKnownFolder_GetFolderType_Proxy( 
    IKnownFolder __RPC_FAR * This,
    /* [out] */ FOLDERTYPEID __RPC_FAR *pftid);


void __RPC_STUB IKnownFolder_GetFolderType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IKnownFolder_GetRedirectionCapabilities_Proxy( 
    IKnownFolder __RPC_FAR * This,
    /* [out] */ KF_REDIRECTION_CAPABILITIES __RPC_FAR *pCapabilities);


void __RPC_STUB IKnownFolder_GetRedirectionCapabilities_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IKnownFolder_GetFolderDefinition_Proxy( 
    IKnownFolder __RPC_FAR * This,
    /* [out] */ KNOWNFOLDER_DEFINITION __RPC_FAR *pKFD);


void __RPC_STUB IKnownFolder_GetFolderDefinition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IKnownFolder_INTERFACE_DEFINED__ */


#ifndef __IKnownFolderManager_INTERFACE_DEFINED__
#define __IKnownFolderManager_INTERFACE_DEFINED__

/* interface IKnownFolderManager */
/* [ref][version][object][helpstring][uuid] */ 

typedef /* [v1_enum] */ 
enum tagFFFP_MODE
    {	FFFP_EXACTMATCH	= 0,
	FFFP_NEARESTPARENTMATCH	= FFFP_EXACTMATCH + 1
    }	FFFP_MODE;


EXTERN_C const IID IID_IKnownFolderManager;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8BE2D872-86AA-4d47-B776-32CCA40C7018")
    IKnownFolderManager : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE FolderIdFromCsidl( 
            /* [in] */ int nCsidl,
            /* [out] */ KNOWNFOLDERID __RPC_FAR *pfid) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE FolderIdToCsidl( 
            /* [in] */ REFKNOWNFOLDERID rfid,
            /* [out] */ int __RPC_FAR *pnCsidl) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFolderIds( 
            /* [size_is][size_is][out] */ KNOWNFOLDERID __RPC_FAR *__RPC_FAR *ppKFId,
            /* [out][in] */ UINT __RPC_FAR *pCount) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFolder( 
            /* [in] */ REFKNOWNFOLDERID rfid,
            /* [out] */ IKnownFolder __RPC_FAR *__RPC_FAR *ppkf) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFolderByName( 
            /* [string][in] */ LPCWSTR pszCanonicalName,
            /* [out] */ IKnownFolder __RPC_FAR *__RPC_FAR *ppkf) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RegisterFolder( 
            /* [in] */ REFKNOWNFOLDERID rfid,
            /* [in] */ const KNOWNFOLDER_DEFINITION __RPC_FAR *pKFD) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UnregisterFolder( 
            /* [in] */ REFKNOWNFOLDERID rfid) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE FindFolderFromPath( 
            /* [string][in] */ LPCWSTR pszPath,
            /* [in] */ FFFP_MODE mode,
            /* [out] */ IKnownFolder __RPC_FAR *__RPC_FAR *ppkf) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE FindFolderFromIDList( 
            /* [in] */ PCIDLIST_ABSOLUTE pidl,
            /* [out] */ IKnownFolder __RPC_FAR *__RPC_FAR *ppkf) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Redirect( 
            /* [in] */ REFKNOWNFOLDERID rfid,
            /* [unique][in] */ HWND hwnd,
            /* [in] */ KF_REDIRECT_FLAGS flags,
            /* [string][unique][in] */ LPCWSTR pszTargetPath,
            /* [in] */ UINT cFolders,
            /* [unique][size_is][in] */ const KNOWNFOLDERID __RPC_FAR *pExclusion,
            /* [string][out] */ LPWSTR __RPC_FAR *ppszError) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IKnownFolderManagerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IKnownFolderManager __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IKnownFolderManager __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IKnownFolderManager __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *FolderIdFromCsidl )( 
            IKnownFolderManager __RPC_FAR * This,
            /* [in] */ int nCsidl,
            /* [out] */ KNOWNFOLDERID __RPC_FAR *pfid);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *FolderIdToCsidl )( 
            IKnownFolderManager __RPC_FAR * This,
            /* [in] */ REFKNOWNFOLDERID rfid,
            /* [out] */ int __RPC_FAR *pnCsidl);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFolderIds )( 
            IKnownFolderManager __RPC_FAR * This,
            /* [size_is][size_is][out] */ KNOWNFOLDERID __RPC_FAR *__RPC_FAR *ppKFId,
            /* [out][in] */ UINT __RPC_FAR *pCount);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFolder )( 
            IKnownFolderManager __RPC_FAR * This,
            /* [in] */ REFKNOWNFOLDERID rfid,
            /* [out] */ IKnownFolder __RPC_FAR *__RPC_FAR *ppkf);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFolderByName )( 
            IKnownFolderManager __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszCanonicalName,
            /* [out] */ IKnownFolder __RPC_FAR *__RPC_FAR *ppkf);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RegisterFolder )( 
            IKnownFolderManager __RPC_FAR * This,
            /* [in] */ REFKNOWNFOLDERID rfid,
            /* [in] */ const KNOWNFOLDER_DEFINITION __RPC_FAR *pKFD);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *UnregisterFolder )( 
            IKnownFolderManager __RPC_FAR * This,
            /* [in] */ REFKNOWNFOLDERID rfid);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *FindFolderFromPath )( 
            IKnownFolderManager __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszPath,
            /* [in] */ FFFP_MODE mode,
            /* [out] */ IKnownFolder __RPC_FAR *__RPC_FAR *ppkf);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *FindFolderFromIDList )( 
            IKnownFolderManager __RPC_FAR * This,
            /* [in] */ PCIDLIST_ABSOLUTE pidl,
            /* [out] */ IKnownFolder __RPC_FAR *__RPC_FAR *ppkf);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Redirect )( 
            IKnownFolderManager __RPC_FAR * This,
            /* [in] */ REFKNOWNFOLDERID rfid,
            /* [unique][in] */ HWND hwnd,
            /* [in] */ KF_REDIRECT_FLAGS flags,
            /* [string][unique][in] */ LPCWSTR pszTargetPath,
            /* [in] */ UINT cFolders,
            /* [unique][size_is][in] */ const KNOWNFOLDERID __RPC_FAR *pExclusion,
            /* [string][out] */ LPWSTR __RPC_FAR *ppszError);
        
        END_INTERFACE
    } IKnownFolderManagerVtbl;

    interface IKnownFolderManager
    {
        CONST_VTBL struct IKnownFolderManagerVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IKnownFolderManager_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IKnownFolderManager_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IKnownFolderManager_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IKnownFolderManager_FolderIdFromCsidl(This,nCsidl,pfid)	\
    (This)->lpVtbl -> FolderIdFromCsidl(This,nCsidl,pfid)

#define IKnownFolderManager_FolderIdToCsidl(This,rfid,pnCsidl)	\
    (This)->lpVtbl -> FolderIdToCsidl(This,rfid,pnCsidl)

#define IKnownFolderManager_GetFolderIds(This,ppKFId,pCount)	\
    (This)->lpVtbl -> GetFolderIds(This,ppKFId,pCount)

#define IKnownFolderManager_GetFolder(This,rfid,ppkf)	\
    (This)->lpVtbl -> GetFolder(This,rfid,ppkf)

#define IKnownFolderManager_GetFolderByName(This,pszCanonicalName,ppkf)	\
    (This)->lpVtbl -> GetFolderByName(This,pszCanonicalName,ppkf)

#define IKnownFolderManager_RegisterFolder(This,rfid,pKFD)	\
    (This)->lpVtbl -> RegisterFolder(This,rfid,pKFD)

#define IKnownFolderManager_UnregisterFolder(This,rfid)	\
    (This)->lpVtbl -> UnregisterFolder(This,rfid)

#define IKnownFolderManager_FindFolderFromPath(This,pszPath,mode,ppkf)	\
    (This)->lpVtbl -> FindFolderFromPath(This,pszPath,mode,ppkf)

#define IKnownFolderManager_FindFolderFromIDList(This,pidl,ppkf)	\
    (This)->lpVtbl -> FindFolderFromIDList(This,pidl,ppkf)

#define IKnownFolderManager_Redirect(This,rfid,hwnd,flags,pszTargetPath,cFolders,pExclusion,ppszError)	\
    (This)->lpVtbl -> Redirect(This,rfid,hwnd,flags,pszTargetPath,cFolders,pExclusion,ppszError)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IKnownFolderManager_FolderIdFromCsidl_Proxy( 
    IKnownFolderManager __RPC_FAR * This,
    /* [in] */ int nCsidl,
    /* [out] */ KNOWNFOLDERID __RPC_FAR *pfid);


void __RPC_STUB IKnownFolderManager_FolderIdFromCsidl_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IKnownFolderManager_FolderIdToCsidl_Proxy( 
    IKnownFolderManager __RPC_FAR * This,
    /* [in] */ REFKNOWNFOLDERID rfid,
    /* [out] */ int __RPC_FAR *pnCsidl);


void __RPC_STUB IKnownFolderManager_FolderIdToCsidl_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IKnownFolderManager_GetFolderIds_Proxy( 
    IKnownFolderManager __RPC_FAR * This,
    /* [size_is][size_is][out] */ KNOWNFOLDERID __RPC_FAR *__RPC_FAR *ppKFId,
    /* [out][in] */ UINT __RPC_FAR *pCount);


void __RPC_STUB IKnownFolderManager_GetFolderIds_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IKnownFolderManager_GetFolder_Proxy( 
    IKnownFolderManager __RPC_FAR * This,
    /* [in] */ REFKNOWNFOLDERID rfid,
    /* [out] */ IKnownFolder __RPC_FAR *__RPC_FAR *ppkf);


void __RPC_STUB IKnownFolderManager_GetFolder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IKnownFolderManager_GetFolderByName_Proxy( 
    IKnownFolderManager __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszCanonicalName,
    /* [out] */ IKnownFolder __RPC_FAR *__RPC_FAR *ppkf);


void __RPC_STUB IKnownFolderManager_GetFolderByName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IKnownFolderManager_RegisterFolder_Proxy( 
    IKnownFolderManager __RPC_FAR * This,
    /* [in] */ REFKNOWNFOLDERID rfid,
    /* [in] */ const KNOWNFOLDER_DEFINITION __RPC_FAR *pKFD);


void __RPC_STUB IKnownFolderManager_RegisterFolder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IKnownFolderManager_UnregisterFolder_Proxy( 
    IKnownFolderManager __RPC_FAR * This,
    /* [in] */ REFKNOWNFOLDERID rfid);


void __RPC_STUB IKnownFolderManager_UnregisterFolder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IKnownFolderManager_FindFolderFromPath_Proxy( 
    IKnownFolderManager __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszPath,
    /* [in] */ FFFP_MODE mode,
    /* [out] */ IKnownFolder __RPC_FAR *__RPC_FAR *ppkf);


void __RPC_STUB IKnownFolderManager_FindFolderFromPath_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IKnownFolderManager_FindFolderFromIDList_Proxy( 
    IKnownFolderManager __RPC_FAR * This,
    /* [in] */ PCIDLIST_ABSOLUTE pidl,
    /* [out] */ IKnownFolder __RPC_FAR *__RPC_FAR *ppkf);


void __RPC_STUB IKnownFolderManager_FindFolderFromIDList_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IKnownFolderManager_Redirect_Proxy( 
    IKnownFolderManager __RPC_FAR * This,
    /* [in] */ REFKNOWNFOLDERID rfid,
    /* [unique][in] */ HWND hwnd,
    /* [in] */ KF_REDIRECT_FLAGS flags,
    /* [string][unique][in] */ LPCWSTR pszTargetPath,
    /* [in] */ UINT cFolders,
    /* [unique][size_is][in] */ const KNOWNFOLDERID __RPC_FAR *pExclusion,
    /* [string][out] */ LPWSTR __RPC_FAR *ppszError);


void __RPC_STUB IKnownFolderManager_Redirect_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IKnownFolderManager_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0424 */
/* [local] */ 

_inline void FreeKnownFolderDefinitionFields(KNOWNFOLDER_DEFINITION *pKFD)
{
    CoTaskMemFree(pKFD->pszName);
    CoTaskMemFree(pKFD->pszDescription);
    CoTaskMemFree(pKFD->pszRelativePath);
    CoTaskMemFree(pKFD->pszParsingName);
    CoTaskMemFree(pKFD->pszTooltip);
    CoTaskMemFree(pKFD->pszLocalizedName);
    CoTaskMemFree(pKFD->pszIcon);
    CoTaskMemFree(pKFD->pszSecurity);
}
typedef /* [v1_enum] */ 
enum _tagSHARE_ROLE
    {	SHARE_ROLE_INVALID	= -1,
	SHARE_ROLE_READER	= 0,
	SHARE_ROLE_CONTRIBUTOR	= 1,
	SHARE_ROLE_CO_OWNER	= 2,
	SHARE_ROLE_OWNER	= 3,
	SHARE_ROLE_CUSTOM	= 4,
	SHARE_ROLE_MIXED	= 5
    }	SHARE_ROLE;

typedef /* [v1_enum] */ 
enum _tagDEF_SHARE_ID
    {	DEFSHAREID_USERS	= 1,
	DEFSHAREID_PUBLIC	= 2
    }	DEF_SHARE_ID;



extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0424_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0424_v0_0_s_ifspec;

#ifndef __ISharingConfigurationManager_INTERFACE_DEFINED__
#define __ISharingConfigurationManager_INTERFACE_DEFINED__

/* interface ISharingConfigurationManager */
/* [helpstring][uuid][object] */ 


EXTERN_C const IID IID_ISharingConfigurationManager;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B4CD448A-9C86-4466-9201-2E62105B87AE")
    ISharingConfigurationManager : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE CreateShare( 
            /* [in] */ DEF_SHARE_ID dsid,
            /* [in] */ SHARE_ROLE role) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteShare( 
            /* [in] */ DEF_SHARE_ID dsid) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ShareExists( 
            /* [in] */ DEF_SHARE_ID dsid) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSharePermissions( 
            /* [in] */ DEF_SHARE_ID dsid,
            /* [out] */ SHARE_ROLE __RPC_FAR *pRole) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SharePrinters( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE StopSharingPrinters( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ArePrintersShared( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ISharingConfigurationManagerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            ISharingConfigurationManager __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            ISharingConfigurationManager __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            ISharingConfigurationManager __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CreateShare )( 
            ISharingConfigurationManager __RPC_FAR * This,
            /* [in] */ DEF_SHARE_ID dsid,
            /* [in] */ SHARE_ROLE role);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DeleteShare )( 
            ISharingConfigurationManager __RPC_FAR * This,
            /* [in] */ DEF_SHARE_ID dsid);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ShareExists )( 
            ISharingConfigurationManager __RPC_FAR * This,
            /* [in] */ DEF_SHARE_ID dsid);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSharePermissions )( 
            ISharingConfigurationManager __RPC_FAR * This,
            /* [in] */ DEF_SHARE_ID dsid,
            /* [out] */ SHARE_ROLE __RPC_FAR *pRole);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SharePrinters )( 
            ISharingConfigurationManager __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *StopSharingPrinters )( 
            ISharingConfigurationManager __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ArePrintersShared )( 
            ISharingConfigurationManager __RPC_FAR * This);
        
        END_INTERFACE
    } ISharingConfigurationManagerVtbl;

    interface ISharingConfigurationManager
    {
        CONST_VTBL struct ISharingConfigurationManagerVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISharingConfigurationManager_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define ISharingConfigurationManager_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define ISharingConfigurationManager_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define ISharingConfigurationManager_CreateShare(This,dsid,role)	\
    (This)->lpVtbl -> CreateShare(This,dsid,role)

#define ISharingConfigurationManager_DeleteShare(This,dsid)	\
    (This)->lpVtbl -> DeleteShare(This,dsid)

#define ISharingConfigurationManager_ShareExists(This,dsid)	\
    (This)->lpVtbl -> ShareExists(This,dsid)

#define ISharingConfigurationManager_GetSharePermissions(This,dsid,pRole)	\
    (This)->lpVtbl -> GetSharePermissions(This,dsid,pRole)

#define ISharingConfigurationManager_SharePrinters(This)	\
    (This)->lpVtbl -> SharePrinters(This)

#define ISharingConfigurationManager_StopSharingPrinters(This)	\
    (This)->lpVtbl -> StopSharingPrinters(This)

#define ISharingConfigurationManager_ArePrintersShared(This)	\
    (This)->lpVtbl -> ArePrintersShared(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE ISharingConfigurationManager_CreateShare_Proxy( 
    ISharingConfigurationManager __RPC_FAR * This,
    /* [in] */ DEF_SHARE_ID dsid,
    /* [in] */ SHARE_ROLE role);


void __RPC_STUB ISharingConfigurationManager_CreateShare_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ISharingConfigurationManager_DeleteShare_Proxy( 
    ISharingConfigurationManager __RPC_FAR * This,
    /* [in] */ DEF_SHARE_ID dsid);


void __RPC_STUB ISharingConfigurationManager_DeleteShare_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ISharingConfigurationManager_ShareExists_Proxy( 
    ISharingConfigurationManager __RPC_FAR * This,
    /* [in] */ DEF_SHARE_ID dsid);


void __RPC_STUB ISharingConfigurationManager_ShareExists_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ISharingConfigurationManager_GetSharePermissions_Proxy( 
    ISharingConfigurationManager __RPC_FAR * This,
    /* [in] */ DEF_SHARE_ID dsid,
    /* [out] */ SHARE_ROLE __RPC_FAR *pRole);


void __RPC_STUB ISharingConfigurationManager_GetSharePermissions_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ISharingConfigurationManager_SharePrinters_Proxy( 
    ISharingConfigurationManager __RPC_FAR * This);


void __RPC_STUB ISharingConfigurationManager_SharePrinters_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ISharingConfigurationManager_StopSharingPrinters_Proxy( 
    ISharingConfigurationManager __RPC_FAR * This);


void __RPC_STUB ISharingConfigurationManager_StopSharingPrinters_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ISharingConfigurationManager_ArePrintersShared_Proxy( 
    ISharingConfigurationManager __RPC_FAR * This);


void __RPC_STUB ISharingConfigurationManager_ArePrintersShared_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __ISharingConfigurationManager_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0425 */
/* [local] */ 

#endif  // NTDDI_LONGHORN


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0425_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0425_v0_0_s_ifspec;

#ifndef __IPreviousVersionsInfo_INTERFACE_DEFINED__
#define __IPreviousVersionsInfo_INTERFACE_DEFINED__

/* interface IPreviousVersionsInfo */
/* [local][unique][uuid][object] */ 


EXTERN_C const IID IID_IPreviousVersionsInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("76e54780-ad74-48e3-a695-3ba9a0aff10d")
    IPreviousVersionsInfo : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE AreSnapshotsAvailable( 
            /* [string][in] */ LPCWSTR pszPath,
            /* [in] */ BOOL fOkToBeSlow,
            /* [out] */ BOOL __RPC_FAR *pfAvailable) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IPreviousVersionsInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IPreviousVersionsInfo __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IPreviousVersionsInfo __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IPreviousVersionsInfo __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AreSnapshotsAvailable )( 
            IPreviousVersionsInfo __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszPath,
            /* [in] */ BOOL fOkToBeSlow,
            /* [out] */ BOOL __RPC_FAR *pfAvailable);
        
        END_INTERFACE
    } IPreviousVersionsInfoVtbl;

    interface IPreviousVersionsInfo
    {
        CONST_VTBL struct IPreviousVersionsInfoVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IPreviousVersionsInfo_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IPreviousVersionsInfo_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IPreviousVersionsInfo_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IPreviousVersionsInfo_AreSnapshotsAvailable(This,pszPath,fOkToBeSlow,pfAvailable)	\
    (This)->lpVtbl -> AreSnapshotsAvailable(This,pszPath,fOkToBeSlow,pfAvailable)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IPreviousVersionsInfo_AreSnapshotsAvailable_Proxy( 
    IPreviousVersionsInfo __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszPath,
    /* [in] */ BOOL fOkToBeSlow,
    /* [out] */ BOOL __RPC_FAR *pfAvailable);


void __RPC_STUB IPreviousVersionsInfo_AreSnapshotsAvailable_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IPreviousVersionsInfo_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0426 */
/* [local] */ 

#if (_WIN32_IE >= _WIN32_IE_IE70)


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0426_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0426_v0_0_s_ifspec;

#ifndef __IRelatedItem_INTERFACE_DEFINED__
#define __IRelatedItem_INTERFACE_DEFINED__

/* interface IRelatedItem */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IRelatedItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("a73ce67a-8ab1-44f1-8d43-d2fcbf6b1cd0")
    IRelatedItem : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetItemIDList( 
            /* [out] */ PIDLIST_ABSOLUTE __RPC_FAR *ppidl) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetItem( 
            /* [out] */ IShellItem __RPC_FAR *__RPC_FAR *ppsi) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IRelatedItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IRelatedItem __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IRelatedItem __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IRelatedItem __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetItemIDList )( 
            IRelatedItem __RPC_FAR * This,
            /* [out] */ PIDLIST_ABSOLUTE __RPC_FAR *ppidl);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetItem )( 
            IRelatedItem __RPC_FAR * This,
            /* [out] */ IShellItem __RPC_FAR *__RPC_FAR *ppsi);
        
        END_INTERFACE
    } IRelatedItemVtbl;

    interface IRelatedItem
    {
        CONST_VTBL struct IRelatedItemVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IRelatedItem_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IRelatedItem_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IRelatedItem_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IRelatedItem_GetItemIDList(This,ppidl)	\
    (This)->lpVtbl -> GetItemIDList(This,ppidl)

#define IRelatedItem_GetItem(This,ppsi)	\
    (This)->lpVtbl -> GetItem(This,ppsi)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IRelatedItem_GetItemIDList_Proxy( 
    IRelatedItem __RPC_FAR * This,
    /* [out] */ PIDLIST_ABSOLUTE __RPC_FAR *ppidl);


void __RPC_STUB IRelatedItem_GetItemIDList_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IRelatedItem_GetItem_Proxy( 
    IRelatedItem __RPC_FAR * This,
    /* [out] */ IShellItem __RPC_FAR *__RPC_FAR *ppsi);


void __RPC_STUB IRelatedItem_GetItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IRelatedItem_INTERFACE_DEFINED__ */


#ifndef __IIdentityName_INTERFACE_DEFINED__
#define __IIdentityName_INTERFACE_DEFINED__

/* interface IIdentityName */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IIdentityName;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7d903fca-d6f9-4810-8332-946c0177e247")
    IIdentityName : public IRelatedItem
    {
    public:
    };
    
#else 	/* C style interface */

    typedef struct IIdentityNameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IIdentityName __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IIdentityName __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IIdentityName __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetItemIDList )( 
            IIdentityName __RPC_FAR * This,
            /* [out] */ PIDLIST_ABSOLUTE __RPC_FAR *ppidl);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetItem )( 
            IIdentityName __RPC_FAR * This,
            /* [out] */ IShellItem __RPC_FAR *__RPC_FAR *ppsi);
        
        END_INTERFACE
    } IIdentityNameVtbl;

    interface IIdentityName
    {
        CONST_VTBL struct IIdentityNameVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIdentityName_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IIdentityName_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IIdentityName_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IIdentityName_GetItemIDList(This,ppidl)	\
    (This)->lpVtbl -> GetItemIDList(This,ppidl)

#define IIdentityName_GetItem(This,ppsi)	\
    (This)->lpVtbl -> GetItem(This,ppsi)


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIdentityName_INTERFACE_DEFINED__ */


#ifndef __ICurrentItem_INTERFACE_DEFINED__
#define __ICurrentItem_INTERFACE_DEFINED__

/* interface ICurrentItem */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_ICurrentItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("240a7174-d653-4a1d-a6d3-d4943cfbfe3d")
    ICurrentItem : public IRelatedItem
    {
    public:
    };
    
#else 	/* C style interface */

    typedef struct ICurrentItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            ICurrentItem __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            ICurrentItem __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            ICurrentItem __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetItemIDList )( 
            ICurrentItem __RPC_FAR * This,
            /* [out] */ PIDLIST_ABSOLUTE __RPC_FAR *ppidl);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetItem )( 
            ICurrentItem __RPC_FAR * This,
            /* [out] */ IShellItem __RPC_FAR *__RPC_FAR *ppsi);
        
        END_INTERFACE
    } ICurrentItemVtbl;

    interface ICurrentItem
    {
        CONST_VTBL struct ICurrentItemVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICurrentItem_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define ICurrentItem_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define ICurrentItem_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define ICurrentItem_GetItemIDList(This,ppidl)	\
    (This)->lpVtbl -> GetItemIDList(This,ppidl)

#define ICurrentItem_GetItem(This,ppsi)	\
    (This)->lpVtbl -> GetItem(This,ppsi)


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICurrentItem_INTERFACE_DEFINED__ */


#ifndef __ITransferMediumItem_INTERFACE_DEFINED__
#define __ITransferMediumItem_INTERFACE_DEFINED__

/* interface ITransferMediumItem */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_ITransferMediumItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("77f295d5-2d6f-4e19-b8ae-322f3e721ab5")
    ITransferMediumItem : public IRelatedItem
    {
    public:
    };
    
#else 	/* C style interface */

    typedef struct ITransferMediumItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            ITransferMediumItem __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            ITransferMediumItem __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            ITransferMediumItem __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetItemIDList )( 
            ITransferMediumItem __RPC_FAR * This,
            /* [out] */ PIDLIST_ABSOLUTE __RPC_FAR *ppidl);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetItem )( 
            ITransferMediumItem __RPC_FAR * This,
            /* [out] */ IShellItem __RPC_FAR *__RPC_FAR *ppsi);
        
        END_INTERFACE
    } ITransferMediumItemVtbl;

    interface ITransferMediumItem
    {
        CONST_VTBL struct ITransferMediumItemVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ITransferMediumItem_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define ITransferMediumItem_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define ITransferMediumItem_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define ITransferMediumItem_GetItemIDList(This,ppidl)	\
    (This)->lpVtbl -> GetItemIDList(This,ppidl)

#define ITransferMediumItem_GetItem(This,ppsi)	\
    (This)->lpVtbl -> GetItem(This,ppsi)


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ITransferMediumItem_INTERFACE_DEFINED__ */


#ifndef __IUseToBrowseItem_INTERFACE_DEFINED__
#define __IUseToBrowseItem_INTERFACE_DEFINED__

/* interface IUseToBrowseItem */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IUseToBrowseItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("05edda5c-98a3-4717-8adb-c5e7da991eb1")
    IUseToBrowseItem : public IRelatedItem
    {
    public:
    };
    
#else 	/* C style interface */

    typedef struct IUseToBrowseItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IUseToBrowseItem __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IUseToBrowseItem __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IUseToBrowseItem __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetItemIDList )( 
            IUseToBrowseItem __RPC_FAR * This,
            /* [out] */ PIDLIST_ABSOLUTE __RPC_FAR *ppidl);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetItem )( 
            IUseToBrowseItem __RPC_FAR * This,
            /* [out] */ IShellItem __RPC_FAR *__RPC_FAR *ppsi);
        
        END_INTERFACE
    } IUseToBrowseItemVtbl;

    interface IUseToBrowseItem
    {
        CONST_VTBL struct IUseToBrowseItemVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IUseToBrowseItem_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IUseToBrowseItem_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IUseToBrowseItem_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IUseToBrowseItem_GetItemIDList(This,ppidl)	\
    (This)->lpVtbl -> GetItemIDList(This,ppidl)

#define IUseToBrowseItem_GetItem(This,ppsi)	\
    (This)->lpVtbl -> GetItem(This,ppsi)


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IUseToBrowseItem_INTERFACE_DEFINED__ */


#ifndef __IDisplayItem_INTERFACE_DEFINED__
#define __IDisplayItem_INTERFACE_DEFINED__

/* interface IDisplayItem */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IDisplayItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c6fd5997-9f6b-4888-8703-94e80e8cde3f")
    IDisplayItem : public IRelatedItem
    {
    public:
    };
    
#else 	/* C style interface */

    typedef struct IDisplayItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IDisplayItem __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IDisplayItem __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IDisplayItem __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetItemIDList )( 
            IDisplayItem __RPC_FAR * This,
            /* [out] */ PIDLIST_ABSOLUTE __RPC_FAR *ppidl);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetItem )( 
            IDisplayItem __RPC_FAR * This,
            /* [out] */ IShellItem __RPC_FAR *__RPC_FAR *ppsi);
        
        END_INTERFACE
    } IDisplayItemVtbl;

    interface IDisplayItem
    {
        CONST_VTBL struct IDisplayItemVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDisplayItem_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IDisplayItem_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IDisplayItem_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IDisplayItem_GetItemIDList(This,ppidl)	\
    (This)->lpVtbl -> GetItemIDList(This,ppidl)

#define IDisplayItem_GetItem(This,ppsi)	\
    (This)->lpVtbl -> GetItem(This,ppsi)


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDisplayItem_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0432 */
/* [local] */ 

#endif  // (_WIN32_IE >= _WIN32_IE_IE70)


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0432_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0432_v0_0_s_ifspec;

#ifndef __IDestinationStreamFactory_INTERFACE_DEFINED__
#define __IDestinationStreamFactory_INTERFACE_DEFINED__

/* interface IDestinationStreamFactory */
/* [unique][object][uuid] */ 


EXTERN_C const IID IID_IDestinationStreamFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8a87781b-39a7-4a1f-aab3-a39b9c34a7d9")
    IDestinationStreamFactory : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetDestinationStream( 
            /* [out] */ IStream __RPC_FAR *__RPC_FAR *ppstm) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDestinationStreamFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IDestinationStreamFactory __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IDestinationStreamFactory __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IDestinationStreamFactory __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetDestinationStream )( 
            IDestinationStreamFactory __RPC_FAR * This,
            /* [out] */ IStream __RPC_FAR *__RPC_FAR *ppstm);
        
        END_INTERFACE
    } IDestinationStreamFactoryVtbl;

    interface IDestinationStreamFactory
    {
        CONST_VTBL struct IDestinationStreamFactoryVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDestinationStreamFactory_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IDestinationStreamFactory_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IDestinationStreamFactory_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IDestinationStreamFactory_GetDestinationStream(This,ppstm)	\
    (This)->lpVtbl -> GetDestinationStream(This,ppstm)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IDestinationStreamFactory_GetDestinationStream_Proxy( 
    IDestinationStreamFactory __RPC_FAR * This,
    /* [out] */ IStream __RPC_FAR *__RPC_FAR *ppstm);


void __RPC_STUB IDestinationStreamFactory_GetDestinationStream_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IDestinationStreamFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0433 */
/* [local] */ 

#if (_WIN32_IE >= _WIN32_IE_IE70)


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0433_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0433_v0_0_s_ifspec;

#ifndef __IShellItemFilter_INTERFACE_DEFINED__
#define __IShellItemFilter_INTERFACE_DEFINED__

/* interface IShellItemFilter */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IShellItemFilter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2659B475-EEB8-48b7-8F07-B378810F48CF")
    IShellItemFilter : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE IncludeItem( 
            /* [in] */ IShellItem __RPC_FAR *psi) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEnumFlagsForItem( 
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [out] */ SHCONTF __RPC_FAR *pgrfFlags) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IShellItemFilterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IShellItemFilter __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IShellItemFilter __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IShellItemFilter __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *IncludeItem )( 
            IShellItemFilter __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psi);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetEnumFlagsForItem )( 
            IShellItemFilter __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [out] */ SHCONTF __RPC_FAR *pgrfFlags);
        
        END_INTERFACE
    } IShellItemFilterVtbl;

    interface IShellItemFilter
    {
        CONST_VTBL struct IShellItemFilterVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IShellItemFilter_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IShellItemFilter_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IShellItemFilter_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IShellItemFilter_IncludeItem(This,psi)	\
    (This)->lpVtbl -> IncludeItem(This,psi)

#define IShellItemFilter_GetEnumFlagsForItem(This,psi,pgrfFlags)	\
    (This)->lpVtbl -> GetEnumFlagsForItem(This,psi,pgrfFlags)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IShellItemFilter_IncludeItem_Proxy( 
    IShellItemFilter __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psi);


void __RPC_STUB IShellItemFilter_IncludeItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellItemFilter_GetEnumFlagsForItem_Proxy( 
    IShellItemFilter __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psi,
    /* [out] */ SHCONTF __RPC_FAR *pgrfFlags);


void __RPC_STUB IShellItemFilter_GetEnumFlagsForItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IShellItemFilter_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0434 */
/* [local] */ 

#endif  // (_WIN32_IE >= _WIN32_IE_IE70)


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0434_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0434_v0_0_s_ifspec;

#ifndef __INameSpaceTreeControl_INTERFACE_DEFINED__
#define __INameSpaceTreeControl_INTERFACE_DEFINED__

/* interface INameSpaceTreeControl */
/* [local][uuid][object] */ 

typedef DWORD NSTCSTYLE;

/* [v1_enum] */ 
enum tagNSTCSTYLE
    {	NSTCS_HASEXPANDOS	= 0x1,
	NSTCS_HASLINES	= 0x2,
	NSTCS_SINGLECLICKEXPAND	= 0x4,
	NSTCS_FULLROWSELECT	= 0x8,
	NSTCS_SPRINGEXPAND	= 0x10,
	NSTCS_HORIZONTALSCROLL	= 0x20,
	NSTCS_ROOTHASEXPANDO	= 0x40,
	NSTCS_SHOWSELECTIONALWAYS	= 0x80,
	NSTCS_NOINFOTIP	= 0x200,
	NSTCS_EVENHEIGHT	= 0x400,
	NSTCS_NOREPLACEOPEN	= 0x800,
	NSTCS_DISABLEDRAGDROP	= 0x1000,
	NSTCS_NOORDERSTREAM	= 0x2000,
	NSTCS_RICHTOOLTIP	= 0x4000,
	NSTCS_BORDER	= 0x8000,
	NSTCS_NOEDITLABELS	= 0x10000,
	NSTCS_TABSTOP	= 0x20000,
	NSTCS_FAVORITESMODE	= 0x80000,
	NSTCS_AUTOHSCROLL	= 0x100000,
	NSTCS_FADEINOUTEXPANDOS	= 0x200000,
	NSTCS_EMPTYTEXT	= 0x400000,
	NSTCS_CHECKBOXES	= 0x800000,
	NSTCS_PARTIALCHECKBOXES	= 0x1000000,
	NSTCS_EXCLUSIONCHECKBOXES	= 0x2000000,
	NSTCS_DIMMEDCHECKBOXES	= 0x4000000,
	NSTCS_NOINDENTCHECKS	= 0x8000000,
	NSTCS_ALLOWJUNCTIONS	= 0x10000000,
	NSTCS_SHOWTABSBUTTON	= 0x20000000,
	NSTCS_SHOWDELETEBUTTON	= 0x40000000,
	NSTCS_SHOWREFRESHBUTTON	= 0x80000000
    };
typedef DWORD NSTCROOTSTYLE;

/* [v1_enum] */ 
enum tagNSTCROOTSTYLE
    {	NSTCRS_VISIBLE	= 0,
	NSTCRS_HIDDEN	= 0x1,
	NSTCRS_EXPANDED	= 0x2
    };
typedef DWORD NSTCITEMSTATE;

/* [v1_enum] */ 
enum tagNSTCITEMSTATE
    {	NSTCIS_NONE	= 0,
	NSTCIS_SELECTED	= 0x1,
	NSTCIS_EXPANDED	= 0x2,
	NSTCIS_BOLD	= 0x4,
	NSTCIS_DISABLED	= 0x8
    };
typedef DWORD NSTCGNI;

/* [v1_enum] */ 
enum tagNSTCGNI
    {	NSTCGNI_NEXT	= 0,
	NSTCGNI_NEXTVISIBLE	= 0x1,
	NSTCGNI_PREV	= 0x2,
	NSTCGNI_PREVVISIBLE	= 0x3,
	NSTCGNI_PARENT	= 0x4,
	NSTCGNI_CHILD	= 0x5,
	NSTCGNI_FIRSTVISIBLE	= 0x6,
	NSTCGNI_LASTVISIBLE	= 0x7
    };

EXTERN_C const IID IID_INameSpaceTreeControl;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("028212A3-B627-47e9-8856-C14265554E4F")
    INameSpaceTreeControl : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Initialize( 
            /* [in] */ HWND hwndParent,
            /* [unique][in] */ RECT __RPC_FAR *prc,
            /* [in] */ NSTCSTYLE nsctsFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE TreeAdvise( 
            /* [in] */ IUnknown __RPC_FAR *punk,
            /* [out] */ DWORD __RPC_FAR *pdwCookie) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE TreeUnadvise( 
            /* [in] */ DWORD dwCookie) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AppendRoot( 
            /* [in] */ IShellItem __RPC_FAR *psiRoot,
            /* [in] */ SHCONTF grfEnumFlags,
            /* [in] */ NSTCROOTSTYLE grfRootStyle,
            /* [unique][in] */ IShellItemFilter __RPC_FAR *pif) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertRoot( 
            /* [in] */ int iIndex,
            /* [in] */ IShellItem __RPC_FAR *psiRoot,
            /* [in] */ SHCONTF grfEnumFlags,
            /* [in] */ NSTCROOTSTYLE grfRootStyle,
            /* [unique][in] */ IShellItemFilter __RPC_FAR *pif) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveRoot( 
            /* [in] */ IShellItem __RPC_FAR *psiRoot) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAllRoots( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRootItems( 
            /* [out] */ IShellItemArray __RPC_FAR *__RPC_FAR *ppsiaRootItems) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetItemState( 
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [in] */ NSTCITEMSTATE nstcisMask,
            /* [in] */ NSTCITEMSTATE nstcisFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetItemState( 
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [in] */ NSTCITEMSTATE nstcisMask,
            /* [out] */ NSTCITEMSTATE __RPC_FAR *pnstcisFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSelectedItems( 
            /* [out] */ IShellItemArray __RPC_FAR *__RPC_FAR *psiaItems) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetItemCustomState( 
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [out] */ int __RPC_FAR *piStateNumber) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetItemCustomState( 
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [in] */ int iStateNumber) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnsureItemVisible( 
            /* [in] */ IShellItem __RPC_FAR *psi) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetTheme( 
            /* [string][in] */ LPCWSTR pszTheme) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNextItem( 
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [in] */ NSTCGNI nstcgi,
            /* [out] */ IShellItem __RPC_FAR *__RPC_FAR *ppsiNext) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE HitTest( 
            /* [in] */ POINT __RPC_FAR *ppt,
            /* [out] */ IShellItem __RPC_FAR *__RPC_FAR *ppsiOut) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetItemRect( 
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [out] */ RECT __RPC_FAR *prect) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CollapseAll( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct INameSpaceTreeControlVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            INameSpaceTreeControl __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            INameSpaceTreeControl __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            INameSpaceTreeControl __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Initialize )( 
            INameSpaceTreeControl __RPC_FAR * This,
            /* [in] */ HWND hwndParent,
            /* [unique][in] */ RECT __RPC_FAR *prc,
            /* [in] */ NSTCSTYLE nsctsFlags);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *TreeAdvise )( 
            INameSpaceTreeControl __RPC_FAR * This,
            /* [in] */ IUnknown __RPC_FAR *punk,
            /* [out] */ DWORD __RPC_FAR *pdwCookie);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *TreeUnadvise )( 
            INameSpaceTreeControl __RPC_FAR * This,
            /* [in] */ DWORD dwCookie);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AppendRoot )( 
            INameSpaceTreeControl __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psiRoot,
            /* [in] */ SHCONTF grfEnumFlags,
            /* [in] */ NSTCROOTSTYLE grfRootStyle,
            /* [unique][in] */ IShellItemFilter __RPC_FAR *pif);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *InsertRoot )( 
            INameSpaceTreeControl __RPC_FAR * This,
            /* [in] */ int iIndex,
            /* [in] */ IShellItem __RPC_FAR *psiRoot,
            /* [in] */ SHCONTF grfEnumFlags,
            /* [in] */ NSTCROOTSTYLE grfRootStyle,
            /* [unique][in] */ IShellItemFilter __RPC_FAR *pif);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RemoveRoot )( 
            INameSpaceTreeControl __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psiRoot);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RemoveAllRoots )( 
            INameSpaceTreeControl __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetRootItems )( 
            INameSpaceTreeControl __RPC_FAR * This,
            /* [out] */ IShellItemArray __RPC_FAR *__RPC_FAR *ppsiaRootItems);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetItemState )( 
            INameSpaceTreeControl __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [in] */ NSTCITEMSTATE nstcisMask,
            /* [in] */ NSTCITEMSTATE nstcisFlags);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetItemState )( 
            INameSpaceTreeControl __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [in] */ NSTCITEMSTATE nstcisMask,
            /* [out] */ NSTCITEMSTATE __RPC_FAR *pnstcisFlags);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSelectedItems )( 
            INameSpaceTreeControl __RPC_FAR * This,
            /* [out] */ IShellItemArray __RPC_FAR *__RPC_FAR *psiaItems);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetItemCustomState )( 
            INameSpaceTreeControl __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [out] */ int __RPC_FAR *piStateNumber);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetItemCustomState )( 
            INameSpaceTreeControl __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [in] */ int iStateNumber);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *EnsureItemVisible )( 
            INameSpaceTreeControl __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psi);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetTheme )( 
            INameSpaceTreeControl __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszTheme);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetNextItem )( 
            INameSpaceTreeControl __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [in] */ NSTCGNI nstcgi,
            /* [out] */ IShellItem __RPC_FAR *__RPC_FAR *ppsiNext);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *HitTest )( 
            INameSpaceTreeControl __RPC_FAR * This,
            /* [in] */ POINT __RPC_FAR *ppt,
            /* [out] */ IShellItem __RPC_FAR *__RPC_FAR *ppsiOut);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetItemRect )( 
            INameSpaceTreeControl __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [out] */ RECT __RPC_FAR *prect);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CollapseAll )( 
            INameSpaceTreeControl __RPC_FAR * This);
        
        END_INTERFACE
    } INameSpaceTreeControlVtbl;

    interface INameSpaceTreeControl
    {
        CONST_VTBL struct INameSpaceTreeControlVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define INameSpaceTreeControl_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define INameSpaceTreeControl_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define INameSpaceTreeControl_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define INameSpaceTreeControl_Initialize(This,hwndParent,prc,nsctsFlags)	\
    (This)->lpVtbl -> Initialize(This,hwndParent,prc,nsctsFlags)

#define INameSpaceTreeControl_TreeAdvise(This,punk,pdwCookie)	\
    (This)->lpVtbl -> TreeAdvise(This,punk,pdwCookie)

#define INameSpaceTreeControl_TreeUnadvise(This,dwCookie)	\
    (This)->lpVtbl -> TreeUnadvise(This,dwCookie)

#define INameSpaceTreeControl_AppendRoot(This,psiRoot,grfEnumFlags,grfRootStyle,pif)	\
    (This)->lpVtbl -> AppendRoot(This,psiRoot,grfEnumFlags,grfRootStyle,pif)

#define INameSpaceTreeControl_InsertRoot(This,iIndex,psiRoot,grfEnumFlags,grfRootStyle,pif)	\
    (This)->lpVtbl -> InsertRoot(This,iIndex,psiRoot,grfEnumFlags,grfRootStyle,pif)

#define INameSpaceTreeControl_RemoveRoot(This,psiRoot)	\
    (This)->lpVtbl -> RemoveRoot(This,psiRoot)

#define INameSpaceTreeControl_RemoveAllRoots(This)	\
    (This)->lpVtbl -> RemoveAllRoots(This)

#define INameSpaceTreeControl_GetRootItems(This,ppsiaRootItems)	\
    (This)->lpVtbl -> GetRootItems(This,ppsiaRootItems)

#define INameSpaceTreeControl_SetItemState(This,psi,nstcisMask,nstcisFlags)	\
    (This)->lpVtbl -> SetItemState(This,psi,nstcisMask,nstcisFlags)

#define INameSpaceTreeControl_GetItemState(This,psi,nstcisMask,pnstcisFlags)	\
    (This)->lpVtbl -> GetItemState(This,psi,nstcisMask,pnstcisFlags)

#define INameSpaceTreeControl_GetSelectedItems(This,psiaItems)	\
    (This)->lpVtbl -> GetSelectedItems(This,psiaItems)

#define INameSpaceTreeControl_GetItemCustomState(This,psi,piStateNumber)	\
    (This)->lpVtbl -> GetItemCustomState(This,psi,piStateNumber)

#define INameSpaceTreeControl_SetItemCustomState(This,psi,iStateNumber)	\
    (This)->lpVtbl -> SetItemCustomState(This,psi,iStateNumber)

#define INameSpaceTreeControl_EnsureItemVisible(This,psi)	\
    (This)->lpVtbl -> EnsureItemVisible(This,psi)

#define INameSpaceTreeControl_SetTheme(This,pszTheme)	\
    (This)->lpVtbl -> SetTheme(This,pszTheme)

#define INameSpaceTreeControl_GetNextItem(This,psi,nstcgi,ppsiNext)	\
    (This)->lpVtbl -> GetNextItem(This,psi,nstcgi,ppsiNext)

#define INameSpaceTreeControl_HitTest(This,ppt,ppsiOut)	\
    (This)->lpVtbl -> HitTest(This,ppt,ppsiOut)

#define INameSpaceTreeControl_GetItemRect(This,psi,prect)	\
    (This)->lpVtbl -> GetItemRect(This,psi,prect)

#define INameSpaceTreeControl_CollapseAll(This)	\
    (This)->lpVtbl -> CollapseAll(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE INameSpaceTreeControl_Initialize_Proxy( 
    INameSpaceTreeControl __RPC_FAR * This,
    /* [in] */ HWND hwndParent,
    /* [unique][in] */ RECT __RPC_FAR *prc,
    /* [in] */ NSTCSTYLE nsctsFlags);


void __RPC_STUB INameSpaceTreeControl_Initialize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INameSpaceTreeControl_TreeAdvise_Proxy( 
    INameSpaceTreeControl __RPC_FAR * This,
    /* [in] */ IUnknown __RPC_FAR *punk,
    /* [out] */ DWORD __RPC_FAR *pdwCookie);


void __RPC_STUB INameSpaceTreeControl_TreeAdvise_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INameSpaceTreeControl_TreeUnadvise_Proxy( 
    INameSpaceTreeControl __RPC_FAR * This,
    /* [in] */ DWORD dwCookie);


void __RPC_STUB INameSpaceTreeControl_TreeUnadvise_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INameSpaceTreeControl_AppendRoot_Proxy( 
    INameSpaceTreeControl __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psiRoot,
    /* [in] */ SHCONTF grfEnumFlags,
    /* [in] */ NSTCROOTSTYLE grfRootStyle,
    /* [unique][in] */ IShellItemFilter __RPC_FAR *pif);


void __RPC_STUB INameSpaceTreeControl_AppendRoot_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INameSpaceTreeControl_InsertRoot_Proxy( 
    INameSpaceTreeControl __RPC_FAR * This,
    /* [in] */ int iIndex,
    /* [in] */ IShellItem __RPC_FAR *psiRoot,
    /* [in] */ SHCONTF grfEnumFlags,
    /* [in] */ NSTCROOTSTYLE grfRootStyle,
    /* [unique][in] */ IShellItemFilter __RPC_FAR *pif);


void __RPC_STUB INameSpaceTreeControl_InsertRoot_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INameSpaceTreeControl_RemoveRoot_Proxy( 
    INameSpaceTreeControl __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psiRoot);


void __RPC_STUB INameSpaceTreeControl_RemoveRoot_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INameSpaceTreeControl_RemoveAllRoots_Proxy( 
    INameSpaceTreeControl __RPC_FAR * This);


void __RPC_STUB INameSpaceTreeControl_RemoveAllRoots_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INameSpaceTreeControl_GetRootItems_Proxy( 
    INameSpaceTreeControl __RPC_FAR * This,
    /* [out] */ IShellItemArray __RPC_FAR *__RPC_FAR *ppsiaRootItems);


void __RPC_STUB INameSpaceTreeControl_GetRootItems_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INameSpaceTreeControl_SetItemState_Proxy( 
    INameSpaceTreeControl __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psi,
    /* [in] */ NSTCITEMSTATE nstcisMask,
    /* [in] */ NSTCITEMSTATE nstcisFlags);


void __RPC_STUB INameSpaceTreeControl_SetItemState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INameSpaceTreeControl_GetItemState_Proxy( 
    INameSpaceTreeControl __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psi,
    /* [in] */ NSTCITEMSTATE nstcisMask,
    /* [out] */ NSTCITEMSTATE __RPC_FAR *pnstcisFlags);


void __RPC_STUB INameSpaceTreeControl_GetItemState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INameSpaceTreeControl_GetSelectedItems_Proxy( 
    INameSpaceTreeControl __RPC_FAR * This,
    /* [out] */ IShellItemArray __RPC_FAR *__RPC_FAR *psiaItems);


void __RPC_STUB INameSpaceTreeControl_GetSelectedItems_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INameSpaceTreeControl_GetItemCustomState_Proxy( 
    INameSpaceTreeControl __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psi,
    /* [out] */ int __RPC_FAR *piStateNumber);


void __RPC_STUB INameSpaceTreeControl_GetItemCustomState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INameSpaceTreeControl_SetItemCustomState_Proxy( 
    INameSpaceTreeControl __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psi,
    /* [in] */ int iStateNumber);


void __RPC_STUB INameSpaceTreeControl_SetItemCustomState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INameSpaceTreeControl_EnsureItemVisible_Proxy( 
    INameSpaceTreeControl __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psi);


void __RPC_STUB INameSpaceTreeControl_EnsureItemVisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INameSpaceTreeControl_SetTheme_Proxy( 
    INameSpaceTreeControl __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszTheme);


void __RPC_STUB INameSpaceTreeControl_SetTheme_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INameSpaceTreeControl_GetNextItem_Proxy( 
    INameSpaceTreeControl __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psi,
    /* [in] */ NSTCGNI nstcgi,
    /* [out] */ IShellItem __RPC_FAR *__RPC_FAR *ppsiNext);


void __RPC_STUB INameSpaceTreeControl_GetNextItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INameSpaceTreeControl_HitTest_Proxy( 
    INameSpaceTreeControl __RPC_FAR * This,
    /* [in] */ POINT __RPC_FAR *ppt,
    /* [out] */ IShellItem __RPC_FAR *__RPC_FAR *ppsiOut);


void __RPC_STUB INameSpaceTreeControl_HitTest_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INameSpaceTreeControl_GetItemRect_Proxy( 
    INameSpaceTreeControl __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psi,
    /* [out] */ RECT __RPC_FAR *prect);


void __RPC_STUB INameSpaceTreeControl_GetItemRect_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INameSpaceTreeControl_CollapseAll_Proxy( 
    INameSpaceTreeControl __RPC_FAR * This);


void __RPC_STUB INameSpaceTreeControl_CollapseAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __INameSpaceTreeControl_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0435 */
/* [local] */ 

#define SID_SNavigationPane IID_INameSpaceTreeControl   // nearest service that you can proffer to
#define ISLBUTTON(x) (NSTCECT_LBUTTON == ((x) & NSTCECT_BUTTON))
#define ISMBUTTON(x) (NSTCECT_MBUTTON == ((x) & NSTCECT_BUTTON))
#define ISRBUTTON(x) (NSTCECT_RBUTTON == ((x) & NSTCECT_BUTTON))
#define ISDBLCLICK(x) (NSTCECT_DBLCLICK == ((x) & NSTCECT_DBLCLICK))


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0435_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0435_v0_0_s_ifspec;

#ifndef __INameSpaceTreeControlEvents_INTERFACE_DEFINED__
#define __INameSpaceTreeControlEvents_INTERFACE_DEFINED__

/* interface INameSpaceTreeControlEvents */
/* [local][uuid][object] */ 

typedef DWORD NSTCEHITTEST;

/* [v1_enum] */ 
enum tagNSTCEHITTEST
    {	NSTCEHT_NOWHERE	= 0x1,
	NSTCEHT_ONITEMICON	= 0x2,
	NSTCEHT_ONITEMLABEL	= 0x4,
	NSTCEHT_ONITEMINDENT	= 0x8,
	NSTCEHT_ONITEMBUTTON	= 0x10,
	NSTCEHT_ONITEMRIGHT	= 0x20,
	NSTCEHT_ONITEMSTATEICON	= 0x40,
	NSTCEHT_ONITEM	= 0x46,
	NSTCEHT_ONITEMTABBUTTON	= 0x1000
    };
typedef DWORD NSTCECLICKTYPE;

/* [v1_enum] */ 
enum tagNSTCECLICKTYPE
    {	NSTCECT_LBUTTON	= 0x1,
	NSTCECT_MBUTTON	= 0x2,
	NSTCECT_RBUTTON	= 0x3,
	NSTCECT_BUTTON	= 0x3,
	NSTCECT_DBLCLICK	= 0x4
    };

EXTERN_C const IID IID_INameSpaceTreeControlEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("93D77985-B3D8-4484-8318-672CDDA002CE")
    INameSpaceTreeControlEvents : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OnItemClick( 
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [in] */ NSTCEHITTEST nstceHitTest,
            /* [in] */ NSTCECLICKTYPE nstceClickType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnPropertyItemCommit( 
            /* [in] */ IShellItem __RPC_FAR *psi) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnItemStateChanging( 
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [in] */ NSTCITEMSTATE nstcisMask,
            /* [in] */ NSTCITEMSTATE nstcisState) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnItemStateChanged( 
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [in] */ NSTCITEMSTATE nstcisMask,
            /* [in] */ NSTCITEMSTATE nstcisState) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnSelectionChanged( 
            /* [in] */ IShellItemArray __RPC_FAR *psiaSelection) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnKeyboardInput( 
            /* [in] */ UINT uMsg,
            /* [in] */ WPARAM wParam,
            /* [in] */ LPARAM lParam) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnBeforeExpand( 
            /* [in] */ IShellItem __RPC_FAR *psi) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnAfterExpand( 
            /* [in] */ IShellItem __RPC_FAR *psi) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnBeginLabelEdit( 
            /* [in] */ IShellItem __RPC_FAR *psi) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnEndLabelEdit( 
            /* [in] */ IShellItem __RPC_FAR *psi) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnGetToolTip( 
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [size_is][string][out] */ LPWSTR pszTip,
            /* [in] */ int cchTip) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnBeforeItemDelete( 
            /* [in] */ IShellItem __RPC_FAR *psi) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnItemAdded( 
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [in] */ BOOL fIsRoot) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnItemDeleted( 
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [in] */ BOOL fIsRoot) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnBeforeContextMenu( 
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnAfterContextMenu( 
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [in] */ IContextMenu __RPC_FAR *pcmIn,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnBeforeStateImageChange( 
            /* [in] */ IShellItem __RPC_FAR *psi) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnGetDefaultIconIndex( 
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [out] */ int __RPC_FAR *piDefaultIcon,
            /* [out] */ int __RPC_FAR *piOpenIcon) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct INameSpaceTreeControlEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            INameSpaceTreeControlEvents __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            INameSpaceTreeControlEvents __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            INameSpaceTreeControlEvents __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnItemClick )( 
            INameSpaceTreeControlEvents __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [in] */ NSTCEHITTEST nstceHitTest,
            /* [in] */ NSTCECLICKTYPE nstceClickType);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnPropertyItemCommit )( 
            INameSpaceTreeControlEvents __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psi);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnItemStateChanging )( 
            INameSpaceTreeControlEvents __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [in] */ NSTCITEMSTATE nstcisMask,
            /* [in] */ NSTCITEMSTATE nstcisState);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnItemStateChanged )( 
            INameSpaceTreeControlEvents __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [in] */ NSTCITEMSTATE nstcisMask,
            /* [in] */ NSTCITEMSTATE nstcisState);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnSelectionChanged )( 
            INameSpaceTreeControlEvents __RPC_FAR * This,
            /* [in] */ IShellItemArray __RPC_FAR *psiaSelection);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnKeyboardInput )( 
            INameSpaceTreeControlEvents __RPC_FAR * This,
            /* [in] */ UINT uMsg,
            /* [in] */ WPARAM wParam,
            /* [in] */ LPARAM lParam);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnBeforeExpand )( 
            INameSpaceTreeControlEvents __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psi);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnAfterExpand )( 
            INameSpaceTreeControlEvents __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psi);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnBeginLabelEdit )( 
            INameSpaceTreeControlEvents __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psi);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnEndLabelEdit )( 
            INameSpaceTreeControlEvents __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psi);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnGetToolTip )( 
            INameSpaceTreeControlEvents __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [size_is][string][out] */ LPWSTR pszTip,
            /* [in] */ int cchTip);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnBeforeItemDelete )( 
            INameSpaceTreeControlEvents __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psi);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnItemAdded )( 
            INameSpaceTreeControlEvents __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [in] */ BOOL fIsRoot);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnItemDeleted )( 
            INameSpaceTreeControlEvents __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [in] */ BOOL fIsRoot);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnBeforeContextMenu )( 
            INameSpaceTreeControlEvents __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnAfterContextMenu )( 
            INameSpaceTreeControlEvents __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [in] */ IContextMenu __RPC_FAR *pcmIn,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnBeforeStateImageChange )( 
            INameSpaceTreeControlEvents __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psi);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnGetDefaultIconIndex )( 
            INameSpaceTreeControlEvents __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [out] */ int __RPC_FAR *piDefaultIcon,
            /* [out] */ int __RPC_FAR *piOpenIcon);
        
        END_INTERFACE
    } INameSpaceTreeControlEventsVtbl;

    interface INameSpaceTreeControlEvents
    {
        CONST_VTBL struct INameSpaceTreeControlEventsVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define INameSpaceTreeControlEvents_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define INameSpaceTreeControlEvents_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define INameSpaceTreeControlEvents_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define INameSpaceTreeControlEvents_OnItemClick(This,psi,nstceHitTest,nstceClickType)	\
    (This)->lpVtbl -> OnItemClick(This,psi,nstceHitTest,nstceClickType)

#define INameSpaceTreeControlEvents_OnPropertyItemCommit(This,psi)	\
    (This)->lpVtbl -> OnPropertyItemCommit(This,psi)

#define INameSpaceTreeControlEvents_OnItemStateChanging(This,psi,nstcisMask,nstcisState)	\
    (This)->lpVtbl -> OnItemStateChanging(This,psi,nstcisMask,nstcisState)

#define INameSpaceTreeControlEvents_OnItemStateChanged(This,psi,nstcisMask,nstcisState)	\
    (This)->lpVtbl -> OnItemStateChanged(This,psi,nstcisMask,nstcisState)

#define INameSpaceTreeControlEvents_OnSelectionChanged(This,psiaSelection)	\
    (This)->lpVtbl -> OnSelectionChanged(This,psiaSelection)

#define INameSpaceTreeControlEvents_OnKeyboardInput(This,uMsg,wParam,lParam)	\
    (This)->lpVtbl -> OnKeyboardInput(This,uMsg,wParam,lParam)

#define INameSpaceTreeControlEvents_OnBeforeExpand(This,psi)	\
    (This)->lpVtbl -> OnBeforeExpand(This,psi)

#define INameSpaceTreeControlEvents_OnAfterExpand(This,psi)	\
    (This)->lpVtbl -> OnAfterExpand(This,psi)

#define INameSpaceTreeControlEvents_OnBeginLabelEdit(This,psi)	\
    (This)->lpVtbl -> OnBeginLabelEdit(This,psi)

#define INameSpaceTreeControlEvents_OnEndLabelEdit(This,psi)	\
    (This)->lpVtbl -> OnEndLabelEdit(This,psi)

#define INameSpaceTreeControlEvents_OnGetToolTip(This,psi,pszTip,cchTip)	\
    (This)->lpVtbl -> OnGetToolTip(This,psi,pszTip,cchTip)

#define INameSpaceTreeControlEvents_OnBeforeItemDelete(This,psi)	\
    (This)->lpVtbl -> OnBeforeItemDelete(This,psi)

#define INameSpaceTreeControlEvents_OnItemAdded(This,psi,fIsRoot)	\
    (This)->lpVtbl -> OnItemAdded(This,psi,fIsRoot)

#define INameSpaceTreeControlEvents_OnItemDeleted(This,psi,fIsRoot)	\
    (This)->lpVtbl -> OnItemDeleted(This,psi,fIsRoot)

#define INameSpaceTreeControlEvents_OnBeforeContextMenu(This,psi,riid,ppv)	\
    (This)->lpVtbl -> OnBeforeContextMenu(This,psi,riid,ppv)

#define INameSpaceTreeControlEvents_OnAfterContextMenu(This,psi,pcmIn,riid,ppv)	\
    (This)->lpVtbl -> OnAfterContextMenu(This,psi,pcmIn,riid,ppv)

#define INameSpaceTreeControlEvents_OnBeforeStateImageChange(This,psi)	\
    (This)->lpVtbl -> OnBeforeStateImageChange(This,psi)

#define INameSpaceTreeControlEvents_OnGetDefaultIconIndex(This,psi,piDefaultIcon,piOpenIcon)	\
    (This)->lpVtbl -> OnGetDefaultIconIndex(This,psi,piDefaultIcon,piOpenIcon)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE INameSpaceTreeControlEvents_OnItemClick_Proxy( 
    INameSpaceTreeControlEvents __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psi,
    /* [in] */ NSTCEHITTEST nstceHitTest,
    /* [in] */ NSTCECLICKTYPE nstceClickType);


void __RPC_STUB INameSpaceTreeControlEvents_OnItemClick_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INameSpaceTreeControlEvents_OnPropertyItemCommit_Proxy( 
    INameSpaceTreeControlEvents __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psi);


void __RPC_STUB INameSpaceTreeControlEvents_OnPropertyItemCommit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INameSpaceTreeControlEvents_OnItemStateChanging_Proxy( 
    INameSpaceTreeControlEvents __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psi,
    /* [in] */ NSTCITEMSTATE nstcisMask,
    /* [in] */ NSTCITEMSTATE nstcisState);


void __RPC_STUB INameSpaceTreeControlEvents_OnItemStateChanging_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INameSpaceTreeControlEvents_OnItemStateChanged_Proxy( 
    INameSpaceTreeControlEvents __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psi,
    /* [in] */ NSTCITEMSTATE nstcisMask,
    /* [in] */ NSTCITEMSTATE nstcisState);


void __RPC_STUB INameSpaceTreeControlEvents_OnItemStateChanged_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INameSpaceTreeControlEvents_OnSelectionChanged_Proxy( 
    INameSpaceTreeControlEvents __RPC_FAR * This,
    /* [in] */ IShellItemArray __RPC_FAR *psiaSelection);


void __RPC_STUB INameSpaceTreeControlEvents_OnSelectionChanged_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INameSpaceTreeControlEvents_OnKeyboardInput_Proxy( 
    INameSpaceTreeControlEvents __RPC_FAR * This,
    /* [in] */ UINT uMsg,
    /* [in] */ WPARAM wParam,
    /* [in] */ LPARAM lParam);


void __RPC_STUB INameSpaceTreeControlEvents_OnKeyboardInput_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INameSpaceTreeControlEvents_OnBeforeExpand_Proxy( 
    INameSpaceTreeControlEvents __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psi);


void __RPC_STUB INameSpaceTreeControlEvents_OnBeforeExpand_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INameSpaceTreeControlEvents_OnAfterExpand_Proxy( 
    INameSpaceTreeControlEvents __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psi);


void __RPC_STUB INameSpaceTreeControlEvents_OnAfterExpand_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INameSpaceTreeControlEvents_OnBeginLabelEdit_Proxy( 
    INameSpaceTreeControlEvents __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psi);


void __RPC_STUB INameSpaceTreeControlEvents_OnBeginLabelEdit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INameSpaceTreeControlEvents_OnEndLabelEdit_Proxy( 
    INameSpaceTreeControlEvents __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psi);


void __RPC_STUB INameSpaceTreeControlEvents_OnEndLabelEdit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INameSpaceTreeControlEvents_OnGetToolTip_Proxy( 
    INameSpaceTreeControlEvents __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psi,
    /* [size_is][string][out] */ LPWSTR pszTip,
    /* [in] */ int cchTip);


void __RPC_STUB INameSpaceTreeControlEvents_OnGetToolTip_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INameSpaceTreeControlEvents_OnBeforeItemDelete_Proxy( 
    INameSpaceTreeControlEvents __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psi);


void __RPC_STUB INameSpaceTreeControlEvents_OnBeforeItemDelete_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INameSpaceTreeControlEvents_OnItemAdded_Proxy( 
    INameSpaceTreeControlEvents __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psi,
    /* [in] */ BOOL fIsRoot);


void __RPC_STUB INameSpaceTreeControlEvents_OnItemAdded_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INameSpaceTreeControlEvents_OnItemDeleted_Proxy( 
    INameSpaceTreeControlEvents __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psi,
    /* [in] */ BOOL fIsRoot);


void __RPC_STUB INameSpaceTreeControlEvents_OnItemDeleted_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INameSpaceTreeControlEvents_OnBeforeContextMenu_Proxy( 
    INameSpaceTreeControlEvents __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psi,
    /* [in] */ REFIID riid,
    /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);


void __RPC_STUB INameSpaceTreeControlEvents_OnBeforeContextMenu_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INameSpaceTreeControlEvents_OnAfterContextMenu_Proxy( 
    INameSpaceTreeControlEvents __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psi,
    /* [in] */ IContextMenu __RPC_FAR *pcmIn,
    /* [in] */ REFIID riid,
    /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);


void __RPC_STUB INameSpaceTreeControlEvents_OnAfterContextMenu_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INameSpaceTreeControlEvents_OnBeforeStateImageChange_Proxy( 
    INameSpaceTreeControlEvents __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psi);


void __RPC_STUB INameSpaceTreeControlEvents_OnBeforeStateImageChange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INameSpaceTreeControlEvents_OnGetDefaultIconIndex_Proxy( 
    INameSpaceTreeControlEvents __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psi,
    /* [out] */ int __RPC_FAR *piDefaultIcon,
    /* [out] */ int __RPC_FAR *piOpenIcon);


void __RPC_STUB INameSpaceTreeControlEvents_OnGetDefaultIconIndex_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __INameSpaceTreeControlEvents_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0436 */
/* [local] */ 

#define NSTCDHPOS_ONTOP  -1


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0436_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0436_v0_0_s_ifspec;

#ifndef __INameSpaceTreeControlDropHandler_INTERFACE_DEFINED__
#define __INameSpaceTreeControlDropHandler_INTERFACE_DEFINED__

/* interface INameSpaceTreeControlDropHandler */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_INameSpaceTreeControlDropHandler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F9C665D6-C2F2-4c19-BF33-8322D7352F51")
    INameSpaceTreeControlDropHandler : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OnDragEnter( 
            /* [unique][in] */ IShellItem __RPC_FAR *psiOver,
            /* [in] */ IShellItemArray __RPC_FAR *psiaData,
            /* [in] */ BOOL fOutsideSource,
            /* [in] */ DWORD grfKeyState,
            /* [out][in] */ DWORD __RPC_FAR *pdwEffect) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnDragOver( 
            /* [unique][in] */ IShellItem __RPC_FAR *psiOver,
            /* [in] */ IShellItemArray __RPC_FAR *psiaData,
            /* [in] */ DWORD grfKeyState,
            /* [out][in] */ DWORD __RPC_FAR *pdwEffect) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnDragPosition( 
            /* [unique][in] */ IShellItem __RPC_FAR *psiOver,
            /* [in] */ IShellItemArray __RPC_FAR *psiaData,
            /* [in] */ int iNewPosition,
            /* [in] */ int iOldPosition) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnDrop( 
            /* [unique][in] */ IShellItem __RPC_FAR *psiOver,
            /* [in] */ IShellItemArray __RPC_FAR *psiaData,
            /* [in] */ int iPosition,
            /* [in] */ DWORD grfKeyState,
            /* [out][in] */ DWORD __RPC_FAR *pdwEffect) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnDropPosition( 
            /* [unique][in] */ IShellItem __RPC_FAR *psiOver,
            /* [in] */ IShellItemArray __RPC_FAR *psiaData,
            /* [in] */ int iNewPosition,
            /* [in] */ int iOldPosition) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnDragLeave( 
            /* [unique][in] */ IShellItem __RPC_FAR *psiOver) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct INameSpaceTreeControlDropHandlerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            INameSpaceTreeControlDropHandler __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            INameSpaceTreeControlDropHandler __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            INameSpaceTreeControlDropHandler __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnDragEnter )( 
            INameSpaceTreeControlDropHandler __RPC_FAR * This,
            /* [unique][in] */ IShellItem __RPC_FAR *psiOver,
            /* [in] */ IShellItemArray __RPC_FAR *psiaData,
            /* [in] */ BOOL fOutsideSource,
            /* [in] */ DWORD grfKeyState,
            /* [out][in] */ DWORD __RPC_FAR *pdwEffect);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnDragOver )( 
            INameSpaceTreeControlDropHandler __RPC_FAR * This,
            /* [unique][in] */ IShellItem __RPC_FAR *psiOver,
            /* [in] */ IShellItemArray __RPC_FAR *psiaData,
            /* [in] */ DWORD grfKeyState,
            /* [out][in] */ DWORD __RPC_FAR *pdwEffect);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnDragPosition )( 
            INameSpaceTreeControlDropHandler __RPC_FAR * This,
            /* [unique][in] */ IShellItem __RPC_FAR *psiOver,
            /* [in] */ IShellItemArray __RPC_FAR *psiaData,
            /* [in] */ int iNewPosition,
            /* [in] */ int iOldPosition);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnDrop )( 
            INameSpaceTreeControlDropHandler __RPC_FAR * This,
            /* [unique][in] */ IShellItem __RPC_FAR *psiOver,
            /* [in] */ IShellItemArray __RPC_FAR *psiaData,
            /* [in] */ int iPosition,
            /* [in] */ DWORD grfKeyState,
            /* [out][in] */ DWORD __RPC_FAR *pdwEffect);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnDropPosition )( 
            INameSpaceTreeControlDropHandler __RPC_FAR * This,
            /* [unique][in] */ IShellItem __RPC_FAR *psiOver,
            /* [in] */ IShellItemArray __RPC_FAR *psiaData,
            /* [in] */ int iNewPosition,
            /* [in] */ int iOldPosition);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnDragLeave )( 
            INameSpaceTreeControlDropHandler __RPC_FAR * This,
            /* [unique][in] */ IShellItem __RPC_FAR *psiOver);
        
        END_INTERFACE
    } INameSpaceTreeControlDropHandlerVtbl;

    interface INameSpaceTreeControlDropHandler
    {
        CONST_VTBL struct INameSpaceTreeControlDropHandlerVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define INameSpaceTreeControlDropHandler_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define INameSpaceTreeControlDropHandler_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define INameSpaceTreeControlDropHandler_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define INameSpaceTreeControlDropHandler_OnDragEnter(This,psiOver,psiaData,fOutsideSource,grfKeyState,pdwEffect)	\
    (This)->lpVtbl -> OnDragEnter(This,psiOver,psiaData,fOutsideSource,grfKeyState,pdwEffect)

#define INameSpaceTreeControlDropHandler_OnDragOver(This,psiOver,psiaData,grfKeyState,pdwEffect)	\
    (This)->lpVtbl -> OnDragOver(This,psiOver,psiaData,grfKeyState,pdwEffect)

#define INameSpaceTreeControlDropHandler_OnDragPosition(This,psiOver,psiaData,iNewPosition,iOldPosition)	\
    (This)->lpVtbl -> OnDragPosition(This,psiOver,psiaData,iNewPosition,iOldPosition)

#define INameSpaceTreeControlDropHandler_OnDrop(This,psiOver,psiaData,iPosition,grfKeyState,pdwEffect)	\
    (This)->lpVtbl -> OnDrop(This,psiOver,psiaData,iPosition,grfKeyState,pdwEffect)

#define INameSpaceTreeControlDropHandler_OnDropPosition(This,psiOver,psiaData,iNewPosition,iOldPosition)	\
    (This)->lpVtbl -> OnDropPosition(This,psiOver,psiaData,iNewPosition,iOldPosition)

#define INameSpaceTreeControlDropHandler_OnDragLeave(This,psiOver)	\
    (This)->lpVtbl -> OnDragLeave(This,psiOver)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE INameSpaceTreeControlDropHandler_OnDragEnter_Proxy( 
    INameSpaceTreeControlDropHandler __RPC_FAR * This,
    /* [unique][in] */ IShellItem __RPC_FAR *psiOver,
    /* [in] */ IShellItemArray __RPC_FAR *psiaData,
    /* [in] */ BOOL fOutsideSource,
    /* [in] */ DWORD grfKeyState,
    /* [out][in] */ DWORD __RPC_FAR *pdwEffect);


void __RPC_STUB INameSpaceTreeControlDropHandler_OnDragEnter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INameSpaceTreeControlDropHandler_OnDragOver_Proxy( 
    INameSpaceTreeControlDropHandler __RPC_FAR * This,
    /* [unique][in] */ IShellItem __RPC_FAR *psiOver,
    /* [in] */ IShellItemArray __RPC_FAR *psiaData,
    /* [in] */ DWORD grfKeyState,
    /* [out][in] */ DWORD __RPC_FAR *pdwEffect);


void __RPC_STUB INameSpaceTreeControlDropHandler_OnDragOver_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INameSpaceTreeControlDropHandler_OnDragPosition_Proxy( 
    INameSpaceTreeControlDropHandler __RPC_FAR * This,
    /* [unique][in] */ IShellItem __RPC_FAR *psiOver,
    /* [in] */ IShellItemArray __RPC_FAR *psiaData,
    /* [in] */ int iNewPosition,
    /* [in] */ int iOldPosition);


void __RPC_STUB INameSpaceTreeControlDropHandler_OnDragPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INameSpaceTreeControlDropHandler_OnDrop_Proxy( 
    INameSpaceTreeControlDropHandler __RPC_FAR * This,
    /* [unique][in] */ IShellItem __RPC_FAR *psiOver,
    /* [in] */ IShellItemArray __RPC_FAR *psiaData,
    /* [in] */ int iPosition,
    /* [in] */ DWORD grfKeyState,
    /* [out][in] */ DWORD __RPC_FAR *pdwEffect);


void __RPC_STUB INameSpaceTreeControlDropHandler_OnDrop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INameSpaceTreeControlDropHandler_OnDropPosition_Proxy( 
    INameSpaceTreeControlDropHandler __RPC_FAR * This,
    /* [unique][in] */ IShellItem __RPC_FAR *psiOver,
    /* [in] */ IShellItemArray __RPC_FAR *psiaData,
    /* [in] */ int iNewPosition,
    /* [in] */ int iOldPosition);


void __RPC_STUB INameSpaceTreeControlDropHandler_OnDropPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INameSpaceTreeControlDropHandler_OnDragLeave_Proxy( 
    INameSpaceTreeControlDropHandler __RPC_FAR * This,
    /* [unique][in] */ IShellItem __RPC_FAR *psiOver);


void __RPC_STUB INameSpaceTreeControlDropHandler_OnDragLeave_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __INameSpaceTreeControlDropHandler_INTERFACE_DEFINED__ */


#ifndef __INameSpaceTreeAccessible_INTERFACE_DEFINED__
#define __INameSpaceTreeAccessible_INTERFACE_DEFINED__

/* interface INameSpaceTreeAccessible */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_INameSpaceTreeAccessible;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("71f312de-43ed-4190-8477-e9536b82350b")
    INameSpaceTreeAccessible : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OnGetDefaultAccessibilityAction( 
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [out] */ BSTR __RPC_FAR *pbstrDefaultAction) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnDoDefaultAccessibilityAction( 
            /* [in] */ IShellItem __RPC_FAR *psi) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnGetAccessibilityRole( 
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [out] */ VARIANT __RPC_FAR *pvarRole) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct INameSpaceTreeAccessibleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            INameSpaceTreeAccessible __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            INameSpaceTreeAccessible __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            INameSpaceTreeAccessible __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnGetDefaultAccessibilityAction )( 
            INameSpaceTreeAccessible __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [out] */ BSTR __RPC_FAR *pbstrDefaultAction);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnDoDefaultAccessibilityAction )( 
            INameSpaceTreeAccessible __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psi);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnGetAccessibilityRole )( 
            INameSpaceTreeAccessible __RPC_FAR * This,
            /* [in] */ IShellItem __RPC_FAR *psi,
            /* [out] */ VARIANT __RPC_FAR *pvarRole);
        
        END_INTERFACE
    } INameSpaceTreeAccessibleVtbl;

    interface INameSpaceTreeAccessible
    {
        CONST_VTBL struct INameSpaceTreeAccessibleVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define INameSpaceTreeAccessible_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define INameSpaceTreeAccessible_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define INameSpaceTreeAccessible_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define INameSpaceTreeAccessible_OnGetDefaultAccessibilityAction(This,psi,pbstrDefaultAction)	\
    (This)->lpVtbl -> OnGetDefaultAccessibilityAction(This,psi,pbstrDefaultAction)

#define INameSpaceTreeAccessible_OnDoDefaultAccessibilityAction(This,psi)	\
    (This)->lpVtbl -> OnDoDefaultAccessibilityAction(This,psi)

#define INameSpaceTreeAccessible_OnGetAccessibilityRole(This,psi,pvarRole)	\
    (This)->lpVtbl -> OnGetAccessibilityRole(This,psi,pvarRole)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE INameSpaceTreeAccessible_OnGetDefaultAccessibilityAction_Proxy( 
    INameSpaceTreeAccessible __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psi,
    /* [out] */ BSTR __RPC_FAR *pbstrDefaultAction);


void __RPC_STUB INameSpaceTreeAccessible_OnGetDefaultAccessibilityAction_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INameSpaceTreeAccessible_OnDoDefaultAccessibilityAction_Proxy( 
    INameSpaceTreeAccessible __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psi);


void __RPC_STUB INameSpaceTreeAccessible_OnDoDefaultAccessibilityAction_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INameSpaceTreeAccessible_OnGetAccessibilityRole_Proxy( 
    INameSpaceTreeAccessible __RPC_FAR * This,
    /* [in] */ IShellItem __RPC_FAR *psi,
    /* [out] */ VARIANT __RPC_FAR *pvarRole);


void __RPC_STUB INameSpaceTreeAccessible_OnGetAccessibilityRole_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __INameSpaceTreeAccessible_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0438 */
/* [local] */ 

#ifdef MIDL_PASS
typedef IUnknown __RPC_FAR *HIMAGELIST;

#endif


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0438_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0438_v0_0_s_ifspec;

#ifndef __INameSpaceTreeControlCustomDraw_INTERFACE_DEFINED__
#define __INameSpaceTreeControlCustomDraw_INTERFACE_DEFINED__

/* interface INameSpaceTreeControlCustomDraw */
/* [local][uuid][object] */ 

typedef struct tagNSTCCUSTOMDRAW
    {
    IShellItem __RPC_FAR *psi;
    UINT uItemState;
    NSTCITEMSTATE nstcis;
    LPCWSTR pszText;
    int iImage;
    HIMAGELIST himl;
    int iLevel;
    int iIndent;
    }	NSTCCUSTOMDRAW;


EXTERN_C const IID IID_INameSpaceTreeControlCustomDraw;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2D3BA758-33EE-42d5-BB7B-5F3431D86C78")
    INameSpaceTreeControlCustomDraw : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE PrePaint( 
            /* [in] */ HDC hdc,
            /* [in] */ RECT __RPC_FAR *prc,
            /* [out] */ LRESULT __RPC_FAR *plres) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PostPaint( 
            /* [in] */ HDC hdc,
            /* [in] */ RECT __RPC_FAR *prc) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ItemPrePaint( 
            /* [in] */ HDC hdc,
            /* [in] */ RECT __RPC_FAR *prc,
            /* [in] */ NSTCCUSTOMDRAW __RPC_FAR *pnstccdItem,
            /* [out][in] */ COLORREF __RPC_FAR *pclrText,
            /* [out][in] */ COLORREF __RPC_FAR *pclrTextBk,
            /* [out] */ LRESULT __RPC_FAR *plres) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ItemPostPaint( 
            /* [in] */ HDC hdc,
            /* [in] */ RECT __RPC_FAR *prc,
            /* [in] */ NSTCCUSTOMDRAW __RPC_FAR *pnstccdItem) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct INameSpaceTreeControlCustomDrawVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            INameSpaceTreeControlCustomDraw __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            INameSpaceTreeControlCustomDraw __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            INameSpaceTreeControlCustomDraw __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *PrePaint )( 
            INameSpaceTreeControlCustomDraw __RPC_FAR * This,
            /* [in] */ HDC hdc,
            /* [in] */ RECT __RPC_FAR *prc,
            /* [out] */ LRESULT __RPC_FAR *plres);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *PostPaint )( 
            INameSpaceTreeControlCustomDraw __RPC_FAR * This,
            /* [in] */ HDC hdc,
            /* [in] */ RECT __RPC_FAR *prc);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ItemPrePaint )( 
            INameSpaceTreeControlCustomDraw __RPC_FAR * This,
            /* [in] */ HDC hdc,
            /* [in] */ RECT __RPC_FAR *prc,
            /* [in] */ NSTCCUSTOMDRAW __RPC_FAR *pnstccdItem,
            /* [out][in] */ COLORREF __RPC_FAR *pclrText,
            /* [out][in] */ COLORREF __RPC_FAR *pclrTextBk,
            /* [out] */ LRESULT __RPC_FAR *plres);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ItemPostPaint )( 
            INameSpaceTreeControlCustomDraw __RPC_FAR * This,
            /* [in] */ HDC hdc,
            /* [in] */ RECT __RPC_FAR *prc,
            /* [in] */ NSTCCUSTOMDRAW __RPC_FAR *pnstccdItem);
        
        END_INTERFACE
    } INameSpaceTreeControlCustomDrawVtbl;

    interface INameSpaceTreeControlCustomDraw
    {
        CONST_VTBL struct INameSpaceTreeControlCustomDrawVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define INameSpaceTreeControlCustomDraw_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define INameSpaceTreeControlCustomDraw_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define INameSpaceTreeControlCustomDraw_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define INameSpaceTreeControlCustomDraw_PrePaint(This,hdc,prc,plres)	\
    (This)->lpVtbl -> PrePaint(This,hdc,prc,plres)

#define INameSpaceTreeControlCustomDraw_PostPaint(This,hdc,prc)	\
    (This)->lpVtbl -> PostPaint(This,hdc,prc)

#define INameSpaceTreeControlCustomDraw_ItemPrePaint(This,hdc,prc,pnstccdItem,pclrText,pclrTextBk,plres)	\
    (This)->lpVtbl -> ItemPrePaint(This,hdc,prc,pnstccdItem,pclrText,pclrTextBk,plres)

#define INameSpaceTreeControlCustomDraw_ItemPostPaint(This,hdc,prc,pnstccdItem)	\
    (This)->lpVtbl -> ItemPostPaint(This,hdc,prc,pnstccdItem)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE INameSpaceTreeControlCustomDraw_PrePaint_Proxy( 
    INameSpaceTreeControlCustomDraw __RPC_FAR * This,
    /* [in] */ HDC hdc,
    /* [in] */ RECT __RPC_FAR *prc,
    /* [out] */ LRESULT __RPC_FAR *plres);


void __RPC_STUB INameSpaceTreeControlCustomDraw_PrePaint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INameSpaceTreeControlCustomDraw_PostPaint_Proxy( 
    INameSpaceTreeControlCustomDraw __RPC_FAR * This,
    /* [in] */ HDC hdc,
    /* [in] */ RECT __RPC_FAR *prc);


void __RPC_STUB INameSpaceTreeControlCustomDraw_PostPaint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INameSpaceTreeControlCustomDraw_ItemPrePaint_Proxy( 
    INameSpaceTreeControlCustomDraw __RPC_FAR * This,
    /* [in] */ HDC hdc,
    /* [in] */ RECT __RPC_FAR *prc,
    /* [in] */ NSTCCUSTOMDRAW __RPC_FAR *pnstccdItem,
    /* [out][in] */ COLORREF __RPC_FAR *pclrText,
    /* [out][in] */ COLORREF __RPC_FAR *pclrTextBk,
    /* [out] */ LRESULT __RPC_FAR *plres);


void __RPC_STUB INameSpaceTreeControlCustomDraw_ItemPrePaint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INameSpaceTreeControlCustomDraw_ItemPostPaint_Proxy( 
    INameSpaceTreeControlCustomDraw __RPC_FAR * This,
    /* [in] */ HDC hdc,
    /* [in] */ RECT __RPC_FAR *prc,
    /* [in] */ NSTCCUSTOMDRAW __RPC_FAR *pnstccdItem);


void __RPC_STUB INameSpaceTreeControlCustomDraw_ItemPostPaint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __INameSpaceTreeControlCustomDraw_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0439 */
/* [local] */ 

#define E_PREVIEWHANDLER_DRM_FAIL _HRESULT_TYPEDEF_(0x86420001L)
#define E_PREVIEWHANDLER_NOAUTH   _HRESULT_TYPEDEF_(0x86420002L)
#define E_PREVIEWHANDLER_NOTFOUND _HRESULT_TYPEDEF_(0x86420003L)
#define E_PREVIEWHANDLER_CORRUPT  _HRESULT_TYPEDEF_(0x86420004L)


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0439_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0439_v0_0_s_ifspec;

#ifndef __IPreviewHandler_INTERFACE_DEFINED__
#define __IPreviewHandler_INTERFACE_DEFINED__

/* interface IPreviewHandler */
/* [uuid][object] */ 


EXTERN_C const IID IID_IPreviewHandler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8895b1c6-b41f-4c1c-a562-0d564250836f")
    IPreviewHandler : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetWindow( 
            /* [in] */ HWND hwnd,
            /* [in] */ const RECT __RPC_FAR *prc) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetRect( 
            /* [in] */ const RECT __RPC_FAR *prc) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DoPreview( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Unload( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetFocus( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE QueryFocus( 
            /* [out] */ HWND __RPC_FAR *phwnd) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE TranslateAccelerator( 
            /* [in] */ MSG __RPC_FAR *pmsg) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IPreviewHandlerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IPreviewHandler __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IPreviewHandler __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IPreviewHandler __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetWindow )( 
            IPreviewHandler __RPC_FAR * This,
            /* [in] */ HWND hwnd,
            /* [in] */ const RECT __RPC_FAR *prc);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetRect )( 
            IPreviewHandler __RPC_FAR * This,
            /* [in] */ const RECT __RPC_FAR *prc);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DoPreview )( 
            IPreviewHandler __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Unload )( 
            IPreviewHandler __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFocus )( 
            IPreviewHandler __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryFocus )( 
            IPreviewHandler __RPC_FAR * This,
            /* [out] */ HWND __RPC_FAR *phwnd);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *TranslateAccelerator )( 
            IPreviewHandler __RPC_FAR * This,
            /* [in] */ MSG __RPC_FAR *pmsg);
        
        END_INTERFACE
    } IPreviewHandlerVtbl;

    interface IPreviewHandler
    {
        CONST_VTBL struct IPreviewHandlerVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IPreviewHandler_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IPreviewHandler_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IPreviewHandler_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IPreviewHandler_SetWindow(This,hwnd,prc)	\
    (This)->lpVtbl -> SetWindow(This,hwnd,prc)

#define IPreviewHandler_SetRect(This,prc)	\
    (This)->lpVtbl -> SetRect(This,prc)

#define IPreviewHandler_DoPreview(This)	\
    (This)->lpVtbl -> DoPreview(This)

#define IPreviewHandler_Unload(This)	\
    (This)->lpVtbl -> Unload(This)

#define IPreviewHandler_SetFocus(This)	\
    (This)->lpVtbl -> SetFocus(This)

#define IPreviewHandler_QueryFocus(This,phwnd)	\
    (This)->lpVtbl -> QueryFocus(This,phwnd)

#define IPreviewHandler_TranslateAccelerator(This,pmsg)	\
    (This)->lpVtbl -> TranslateAccelerator(This,pmsg)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IPreviewHandler_SetWindow_Proxy( 
    IPreviewHandler __RPC_FAR * This,
    /* [in] */ HWND hwnd,
    /* [in] */ const RECT __RPC_FAR *prc);


void __RPC_STUB IPreviewHandler_SetWindow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IPreviewHandler_SetRect_Proxy( 
    IPreviewHandler __RPC_FAR * This,
    /* [in] */ const RECT __RPC_FAR *prc);


void __RPC_STUB IPreviewHandler_SetRect_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IPreviewHandler_DoPreview_Proxy( 
    IPreviewHandler __RPC_FAR * This);


void __RPC_STUB IPreviewHandler_DoPreview_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IPreviewHandler_Unload_Proxy( 
    IPreviewHandler __RPC_FAR * This);


void __RPC_STUB IPreviewHandler_Unload_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IPreviewHandler_SetFocus_Proxy( 
    IPreviewHandler __RPC_FAR * This);


void __RPC_STUB IPreviewHandler_SetFocus_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IPreviewHandler_QueryFocus_Proxy( 
    IPreviewHandler __RPC_FAR * This,
    /* [out] */ HWND __RPC_FAR *phwnd);


void __RPC_STUB IPreviewHandler_QueryFocus_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IPreviewHandler_TranslateAccelerator_Proxy( 
    IPreviewHandler __RPC_FAR * This,
    /* [in] */ MSG __RPC_FAR *pmsg);


void __RPC_STUB IPreviewHandler_TranslateAccelerator_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IPreviewHandler_INTERFACE_DEFINED__ */


#ifndef __IPreviewHandlerFrame_INTERFACE_DEFINED__
#define __IPreviewHandlerFrame_INTERFACE_DEFINED__

/* interface IPreviewHandlerFrame */
/* [unique][uuid][object] */ 

typedef /* [public][public] */ struct __MIDL_IPreviewHandlerFrame_0001
    {
    HACCEL haccel;
    UINT cAccelEntries;
    }	PREVIEWHANDLERFRAMEINFO;


EXTERN_C const IID IID_IPreviewHandlerFrame;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("fec87aaf-35f9-447a-adb7-20234491401a")
    IPreviewHandlerFrame : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetWindowContext( 
            /* [out] */ PREVIEWHANDLERFRAMEINFO __RPC_FAR *pinfo) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE TranslateAccelerator( 
            /* [in] */ MSG __RPC_FAR *pmsg) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IPreviewHandlerFrameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IPreviewHandlerFrame __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IPreviewHandlerFrame __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IPreviewHandlerFrame __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetWindowContext )( 
            IPreviewHandlerFrame __RPC_FAR * This,
            /* [out] */ PREVIEWHANDLERFRAMEINFO __RPC_FAR *pinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *TranslateAccelerator )( 
            IPreviewHandlerFrame __RPC_FAR * This,
            /* [in] */ MSG __RPC_FAR *pmsg);
        
        END_INTERFACE
    } IPreviewHandlerFrameVtbl;

    interface IPreviewHandlerFrame
    {
        CONST_VTBL struct IPreviewHandlerFrameVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IPreviewHandlerFrame_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IPreviewHandlerFrame_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IPreviewHandlerFrame_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IPreviewHandlerFrame_GetWindowContext(This,pinfo)	\
    (This)->lpVtbl -> GetWindowContext(This,pinfo)

#define IPreviewHandlerFrame_TranslateAccelerator(This,pmsg)	\
    (This)->lpVtbl -> TranslateAccelerator(This,pmsg)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IPreviewHandlerFrame_GetWindowContext_Proxy( 
    IPreviewHandlerFrame __RPC_FAR * This,
    /* [out] */ PREVIEWHANDLERFRAMEINFO __RPC_FAR *pinfo);


void __RPC_STUB IPreviewHandlerFrame_GetWindowContext_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IPreviewHandlerFrame_TranslateAccelerator_Proxy( 
    IPreviewHandlerFrame __RPC_FAR * This,
    /* [in] */ MSG __RPC_FAR *pmsg);


void __RPC_STUB IPreviewHandlerFrame_TranslateAccelerator_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IPreviewHandlerFrame_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0441 */
/* [local] */ 

#if (NTDDI_VERSION >= NTDDI_LONGHORN)


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0441_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0441_v0_0_s_ifspec;

#ifndef __ITrayDeskBand_INTERFACE_DEFINED__
#define __ITrayDeskBand_INTERFACE_DEFINED__

/* interface ITrayDeskBand */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_ITrayDeskBand;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6D67E846-5B9C-4db8-9CBC-DDE12F4254F1")
    ITrayDeskBand : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE ShowDeskBand( 
            /* [in] */ REFCLSID clsid) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE HideDeskBand( 
            /* [in] */ REFCLSID clsid) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsDeskBandShown( 
            /* [in] */ REFCLSID clsid) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeskBandRegistrationChanged( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ITrayDeskBandVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            ITrayDeskBand __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            ITrayDeskBand __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            ITrayDeskBand __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ShowDeskBand )( 
            ITrayDeskBand __RPC_FAR * This,
            /* [in] */ REFCLSID clsid);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *HideDeskBand )( 
            ITrayDeskBand __RPC_FAR * This,
            /* [in] */ REFCLSID clsid);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *IsDeskBandShown )( 
            ITrayDeskBand __RPC_FAR * This,
            /* [in] */ REFCLSID clsid);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DeskBandRegistrationChanged )( 
            ITrayDeskBand __RPC_FAR * This);
        
        END_INTERFACE
    } ITrayDeskBandVtbl;

    interface ITrayDeskBand
    {
        CONST_VTBL struct ITrayDeskBandVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ITrayDeskBand_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define ITrayDeskBand_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define ITrayDeskBand_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define ITrayDeskBand_ShowDeskBand(This,clsid)	\
    (This)->lpVtbl -> ShowDeskBand(This,clsid)

#define ITrayDeskBand_HideDeskBand(This,clsid)	\
    (This)->lpVtbl -> HideDeskBand(This,clsid)

#define ITrayDeskBand_IsDeskBandShown(This,clsid)	\
    (This)->lpVtbl -> IsDeskBandShown(This,clsid)

#define ITrayDeskBand_DeskBandRegistrationChanged(This)	\
    (This)->lpVtbl -> DeskBandRegistrationChanged(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE ITrayDeskBand_ShowDeskBand_Proxy( 
    ITrayDeskBand __RPC_FAR * This,
    /* [in] */ REFCLSID clsid);


void __RPC_STUB ITrayDeskBand_ShowDeskBand_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ITrayDeskBand_HideDeskBand_Proxy( 
    ITrayDeskBand __RPC_FAR * This,
    /* [in] */ REFCLSID clsid);


void __RPC_STUB ITrayDeskBand_HideDeskBand_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ITrayDeskBand_IsDeskBandShown_Proxy( 
    ITrayDeskBand __RPC_FAR * This,
    /* [in] */ REFCLSID clsid);


void __RPC_STUB ITrayDeskBand_IsDeskBandShown_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ITrayDeskBand_DeskBandRegistrationChanged_Proxy( 
    ITrayDeskBand __RPC_FAR * This);


void __RPC_STUB ITrayDeskBand_DeskBandRegistrationChanged_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __ITrayDeskBand_INTERFACE_DEFINED__ */


#ifndef __IBandHost_INTERFACE_DEFINED__
#define __IBandHost_INTERFACE_DEFINED__

/* interface IBandHost */
/* [unique][object][uuid] */ 


EXTERN_C const IID IID_IBandHost;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B9075C7C-D48E-403f-AB99-D6C77A1084AC")
    IBandHost : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE CreateBand( 
            /* [in] */ REFCLSID rclsidBand,
            /* [in] */ BOOL fAvailable,
            /* [in] */ BOOL fVisible,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetBandAvailability( 
            /* [in] */ REFCLSID rclsidBand,
            /* [in] */ BOOL fAvailable) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DestroyBand( 
            /* [in] */ REFCLSID rclsidBand) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBandHostVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IBandHost __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IBandHost __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IBandHost __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CreateBand )( 
            IBandHost __RPC_FAR * This,
            /* [in] */ REFCLSID rclsidBand,
            /* [in] */ BOOL fAvailable,
            /* [in] */ BOOL fVisible,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetBandAvailability )( 
            IBandHost __RPC_FAR * This,
            /* [in] */ REFCLSID rclsidBand,
            /* [in] */ BOOL fAvailable);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DestroyBand )( 
            IBandHost __RPC_FAR * This,
            /* [in] */ REFCLSID rclsidBand);
        
        END_INTERFACE
    } IBandHostVtbl;

    interface IBandHost
    {
        CONST_VTBL struct IBandHostVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBandHost_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IBandHost_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IBandHost_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IBandHost_CreateBand(This,rclsidBand,fAvailable,fVisible,riid,ppv)	\
    (This)->lpVtbl -> CreateBand(This,rclsidBand,fAvailable,fVisible,riid,ppv)

#define IBandHost_SetBandAvailability(This,rclsidBand,fAvailable)	\
    (This)->lpVtbl -> SetBandAvailability(This,rclsidBand,fAvailable)

#define IBandHost_DestroyBand(This,rclsidBand)	\
    (This)->lpVtbl -> DestroyBand(This,rclsidBand)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IBandHost_CreateBand_Proxy( 
    IBandHost __RPC_FAR * This,
    /* [in] */ REFCLSID rclsidBand,
    /* [in] */ BOOL fAvailable,
    /* [in] */ BOOL fVisible,
    /* [in] */ REFIID riid,
    /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);


void __RPC_STUB IBandHost_CreateBand_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBandHost_SetBandAvailability_Proxy( 
    IBandHost __RPC_FAR * This,
    /* [in] */ REFCLSID rclsidBand,
    /* [in] */ BOOL fAvailable);


void __RPC_STUB IBandHost_SetBandAvailability_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBandHost_DestroyBand_Proxy( 
    IBandHost __RPC_FAR * This,
    /* [in] */ REFCLSID rclsidBand);


void __RPC_STUB IBandHost_DestroyBand_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IBandHost_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0443 */
/* [local] */ 

#define SID_SBandHost IID_IBandHost
typedef GUID EXPLORERPANE;

#if 0
typedef EXPLORERPANE __RPC_FAR *REFEXPLORERPANE;

#endif // 0
#ifdef __cplusplus
#define REFEXPLORERPANE const EXPLORERPANE &
#else // !__cplusplus
#define REFEXPLORERPANE const EXPLORERPANE * __MIDL_CONST
#endif // __cplusplus


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0443_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0443_v0_0_s_ifspec;

#ifndef __IExplorerPaneVisibility_INTERFACE_DEFINED__
#define __IExplorerPaneVisibility_INTERFACE_DEFINED__

/* interface IExplorerPaneVisibility */
/* [unique][local][uuid][object] */ 


enum tagEXPLORERPANESTATE
    {	EPS_DONTCARE	= 0,
	EPS_DEFAULT_ON	= 0x1,
	EPS_DEFAULT_OFF	= 0x2,
	EPS_STATEMASK	= 0xffff,
	EPS_INITIALSTATE	= 0x10000,
	EPS_FORCE	= 0x20000
    };
typedef DWORD EXPLORERPANESTATE;


EXTERN_C const IID IID_IExplorerPaneVisibility;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("e07010ec-bc17-44c0-97b0-46c7c95b9edc")
    IExplorerPaneVisibility : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetPaneState( 
            /* [in] */ REFEXPLORERPANE ep,
            /* [out] */ EXPLORERPANESTATE __RPC_FAR *peps) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IExplorerPaneVisibilityVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IExplorerPaneVisibility __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IExplorerPaneVisibility __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IExplorerPaneVisibility __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetPaneState )( 
            IExplorerPaneVisibility __RPC_FAR * This,
            /* [in] */ REFEXPLORERPANE ep,
            /* [out] */ EXPLORERPANESTATE __RPC_FAR *peps);
        
        END_INTERFACE
    } IExplorerPaneVisibilityVtbl;

    interface IExplorerPaneVisibility
    {
        CONST_VTBL struct IExplorerPaneVisibilityVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IExplorerPaneVisibility_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IExplorerPaneVisibility_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IExplorerPaneVisibility_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IExplorerPaneVisibility_GetPaneState(This,ep,peps)	\
    (This)->lpVtbl -> GetPaneState(This,ep,peps)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IExplorerPaneVisibility_GetPaneState_Proxy( 
    IExplorerPaneVisibility __RPC_FAR * This,
    /* [in] */ REFEXPLORERPANE ep,
    /* [out] */ EXPLORERPANESTATE __RPC_FAR *peps);


void __RPC_STUB IExplorerPaneVisibility_GetPaneState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IExplorerPaneVisibility_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0444 */
/* [local] */ 

#define SID_ExplorerPaneVisibility IID_IExplorerPaneVisibility


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0444_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0444_v0_0_s_ifspec;

#ifndef __IContextMenuCB_INTERFACE_DEFINED__
#define __IContextMenuCB_INTERFACE_DEFINED__

/* interface IContextMenuCB */
/* [local][unique][uuid][object] */ 


EXTERN_C const IID IID_IContextMenuCB;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3409E930-5A39-11d1-83FA-00A0C90DC849")
    IContextMenuCB : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE CallBack( 
            /* [unique][in] */ IShellFolder __RPC_FAR *psf,
            /* [in] */ HWND hwndOwner,
            /* [unique][in] */ IDataObject __RPC_FAR *pdtobj,
            /* [in] */ UINT uMsg,
            /* [in] */ WPARAM wParam,
            /* [in] */ LPARAM lParam) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IContextMenuCBVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IContextMenuCB __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IContextMenuCB __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IContextMenuCB __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CallBack )( 
            IContextMenuCB __RPC_FAR * This,
            /* [unique][in] */ IShellFolder __RPC_FAR *psf,
            /* [in] */ HWND hwndOwner,
            /* [unique][in] */ IDataObject __RPC_FAR *pdtobj,
            /* [in] */ UINT uMsg,
            /* [in] */ WPARAM wParam,
            /* [in] */ LPARAM lParam);
        
        END_INTERFACE
    } IContextMenuCBVtbl;

    interface IContextMenuCB
    {
        CONST_VTBL struct IContextMenuCBVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IContextMenuCB_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IContextMenuCB_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IContextMenuCB_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IContextMenuCB_CallBack(This,psf,hwndOwner,pdtobj,uMsg,wParam,lParam)	\
    (This)->lpVtbl -> CallBack(This,psf,hwndOwner,pdtobj,uMsg,wParam,lParam)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IContextMenuCB_CallBack_Proxy( 
    IContextMenuCB __RPC_FAR * This,
    /* [unique][in] */ IShellFolder __RPC_FAR *psf,
    /* [in] */ HWND hwndOwner,
    /* [unique][in] */ IDataObject __RPC_FAR *pdtobj,
    /* [in] */ UINT uMsg,
    /* [in] */ WPARAM wParam,
    /* [in] */ LPARAM lParam);


void __RPC_STUB IContextMenuCB_CallBack_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IContextMenuCB_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0445 */
/* [local] */ 

#endif  // NTDDI_LONGHORN


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0445_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0445_v0_0_s_ifspec;

#ifndef __IDefaultExtractIconInit_INTERFACE_DEFINED__
#define __IDefaultExtractIconInit_INTERFACE_DEFINED__

/* interface IDefaultExtractIconInit */
/* [unique][local][uuid][object] */ 


EXTERN_C const IID IID_IDefaultExtractIconInit;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("41ded17d-d6b3-4261-997d-88c60e4b1d58")
    IDefaultExtractIconInit : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetFlags( 
            /* [in] */ UINT uFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetKey( 
            /* [in] */ HKEY hkey) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetNormalIcon( 
            /* [string][in] */ LPCWSTR pszFile,
            /* [in] */ int iIcon) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetOpenIcon( 
            /* [string][in] */ LPCWSTR pszFile,
            /* [in] */ int iIcon) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetShortcutIcon( 
            /* [string][in] */ LPCWSTR pszFile,
            /* [in] */ int iIcon) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetDefaultIcon( 
            /* [string][in] */ LPCWSTR pszFile,
            /* [in] */ int iIcon) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDefaultExtractIconInitVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IDefaultExtractIconInit __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IDefaultExtractIconInit __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IDefaultExtractIconInit __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFlags )( 
            IDefaultExtractIconInit __RPC_FAR * This,
            /* [in] */ UINT uFlags);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetKey )( 
            IDefaultExtractIconInit __RPC_FAR * This,
            /* [in] */ HKEY hkey);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetNormalIcon )( 
            IDefaultExtractIconInit __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszFile,
            /* [in] */ int iIcon);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetOpenIcon )( 
            IDefaultExtractIconInit __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszFile,
            /* [in] */ int iIcon);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetShortcutIcon )( 
            IDefaultExtractIconInit __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszFile,
            /* [in] */ int iIcon);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetDefaultIcon )( 
            IDefaultExtractIconInit __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszFile,
            /* [in] */ int iIcon);
        
        END_INTERFACE
    } IDefaultExtractIconInitVtbl;

    interface IDefaultExtractIconInit
    {
        CONST_VTBL struct IDefaultExtractIconInitVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDefaultExtractIconInit_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IDefaultExtractIconInit_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IDefaultExtractIconInit_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IDefaultExtractIconInit_SetFlags(This,uFlags)	\
    (This)->lpVtbl -> SetFlags(This,uFlags)

#define IDefaultExtractIconInit_SetKey(This,hkey)	\
    (This)->lpVtbl -> SetKey(This,hkey)

#define IDefaultExtractIconInit_SetNormalIcon(This,pszFile,iIcon)	\
    (This)->lpVtbl -> SetNormalIcon(This,pszFile,iIcon)

#define IDefaultExtractIconInit_SetOpenIcon(This,pszFile,iIcon)	\
    (This)->lpVtbl -> SetOpenIcon(This,pszFile,iIcon)

#define IDefaultExtractIconInit_SetShortcutIcon(This,pszFile,iIcon)	\
    (This)->lpVtbl -> SetShortcutIcon(This,pszFile,iIcon)

#define IDefaultExtractIconInit_SetDefaultIcon(This,pszFile,iIcon)	\
    (This)->lpVtbl -> SetDefaultIcon(This,pszFile,iIcon)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IDefaultExtractIconInit_SetFlags_Proxy( 
    IDefaultExtractIconInit __RPC_FAR * This,
    /* [in] */ UINT uFlags);


void __RPC_STUB IDefaultExtractIconInit_SetFlags_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IDefaultExtractIconInit_SetKey_Proxy( 
    IDefaultExtractIconInit __RPC_FAR * This,
    /* [in] */ HKEY hkey);


void __RPC_STUB IDefaultExtractIconInit_SetKey_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IDefaultExtractIconInit_SetNormalIcon_Proxy( 
    IDefaultExtractIconInit __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszFile,
    /* [in] */ int iIcon);


void __RPC_STUB IDefaultExtractIconInit_SetNormalIcon_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IDefaultExtractIconInit_SetOpenIcon_Proxy( 
    IDefaultExtractIconInit __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszFile,
    /* [in] */ int iIcon);


void __RPC_STUB IDefaultExtractIconInit_SetOpenIcon_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IDefaultExtractIconInit_SetShortcutIcon_Proxy( 
    IDefaultExtractIconInit __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszFile,
    /* [in] */ int iIcon);


void __RPC_STUB IDefaultExtractIconInit_SetShortcutIcon_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IDefaultExtractIconInit_SetDefaultIcon_Proxy( 
    IDefaultExtractIconInit __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszFile,
    /* [in] */ int iIcon);


void __RPC_STUB IDefaultExtractIconInit_SetDefaultIcon_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IDefaultExtractIconInit_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0446 */
/* [local] */ 

STDAPI SHCreateDefaultExtractIcon(__in REFIID riid, __deref_out void **ppv);



extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0446_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0446_v0_0_s_ifspec;

#ifndef __IExplorerCommand_INTERFACE_DEFINED__
#define __IExplorerCommand_INTERFACE_DEFINED__

/* interface IExplorerCommand */
/* [object][unique][uuid] */ 


enum tagEXPCMDSTATE
    {	ECS_ENABLED	= 0,
	ECS_DISABLED	= 0x1,
	ECS_HIDDEN	= 0x2,
	ECS_CHECKBOX	= 0x4,
	ECS_CHECKED	= 0x8
    };
typedef DWORD EXPCMDSTATE;


enum tagEXPCMDFLAGS
    {	ECF_HASSUBCOMMANDS	= 0x1,
	ECF_HASSPLITBUTTON	= 0x2,
	ECF_HIDELABEL	= 0x4,
	ECF_ISSEPARATOR	= 0x8,
	ECF_HASLUASHIELD	= 0x10
    };
typedef DWORD EXPCMDFLAGS;


EXTERN_C const IID IID_IExplorerCommand;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("a08ce4d0-fa25-44ab-b57c-c7b1c323e0b9")
    IExplorerCommand : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetTitle( 
            /* [unique][in] */ IShellItemArray __RPC_FAR *psiItemArray,
            /* [string][out] */ LPWSTR __RPC_FAR *ppszName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetIcon( 
            /* [unique][in] */ IShellItemArray __RPC_FAR *psiItemArray,
            /* [string][out] */ LPWSTR __RPC_FAR *ppszIcon) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetToolTip( 
            /* [unique][in] */ IShellItemArray __RPC_FAR *psiItemArray,
            /* [string][out] */ LPWSTR __RPC_FAR *ppszInfotip) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCanonicalName( 
            /* [out] */ GUID __RPC_FAR *pguidCommandName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetState( 
            /* [in] */ IShellItemArray __RPC_FAR *psiItemArray,
            /* [in] */ BOOL fOkToBeSlow,
            /* [out] */ EXPCMDSTATE __RPC_FAR *pCmdState) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ IShellItemArray __RPC_FAR *psiItemArray,
            /* [unique][in] */ IBindCtx __RPC_FAR *pbc) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFlags( 
            /* [out] */ EXPCMDFLAGS __RPC_FAR *pFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnumSubCommands( 
            /* [out] */ IEnumExplorerCommand __RPC_FAR *__RPC_FAR *ppEnum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IExplorerCommandVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IExplorerCommand __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IExplorerCommand __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IExplorerCommand __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTitle )( 
            IExplorerCommand __RPC_FAR * This,
            /* [unique][in] */ IShellItemArray __RPC_FAR *psiItemArray,
            /* [string][out] */ LPWSTR __RPC_FAR *ppszName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIcon )( 
            IExplorerCommand __RPC_FAR * This,
            /* [unique][in] */ IShellItemArray __RPC_FAR *psiItemArray,
            /* [string][out] */ LPWSTR __RPC_FAR *ppszIcon);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetToolTip )( 
            IExplorerCommand __RPC_FAR * This,
            /* [unique][in] */ IShellItemArray __RPC_FAR *psiItemArray,
            /* [string][out] */ LPWSTR __RPC_FAR *ppszInfotip);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCanonicalName )( 
            IExplorerCommand __RPC_FAR * This,
            /* [out] */ GUID __RPC_FAR *pguidCommandName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetState )( 
            IExplorerCommand __RPC_FAR * This,
            /* [in] */ IShellItemArray __RPC_FAR *psiItemArray,
            /* [in] */ BOOL fOkToBeSlow,
            /* [out] */ EXPCMDSTATE __RPC_FAR *pCmdState);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IExplorerCommand __RPC_FAR * This,
            /* [in] */ IShellItemArray __RPC_FAR *psiItemArray,
            /* [unique][in] */ IBindCtx __RPC_FAR *pbc);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFlags )( 
            IExplorerCommand __RPC_FAR * This,
            /* [out] */ EXPCMDFLAGS __RPC_FAR *pFlags);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *EnumSubCommands )( 
            IExplorerCommand __RPC_FAR * This,
            /* [out] */ IEnumExplorerCommand __RPC_FAR *__RPC_FAR *ppEnum);
        
        END_INTERFACE
    } IExplorerCommandVtbl;

    interface IExplorerCommand
    {
        CONST_VTBL struct IExplorerCommandVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IExplorerCommand_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IExplorerCommand_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IExplorerCommand_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IExplorerCommand_GetTitle(This,psiItemArray,ppszName)	\
    (This)->lpVtbl -> GetTitle(This,psiItemArray,ppszName)

#define IExplorerCommand_GetIcon(This,psiItemArray,ppszIcon)	\
    (This)->lpVtbl -> GetIcon(This,psiItemArray,ppszIcon)

#define IExplorerCommand_GetToolTip(This,psiItemArray,ppszInfotip)	\
    (This)->lpVtbl -> GetToolTip(This,psiItemArray,ppszInfotip)

#define IExplorerCommand_GetCanonicalName(This,pguidCommandName)	\
    (This)->lpVtbl -> GetCanonicalName(This,pguidCommandName)

#define IExplorerCommand_GetState(This,psiItemArray,fOkToBeSlow,pCmdState)	\
    (This)->lpVtbl -> GetState(This,psiItemArray,fOkToBeSlow,pCmdState)

#define IExplorerCommand_Invoke(This,psiItemArray,pbc)	\
    (This)->lpVtbl -> Invoke(This,psiItemArray,pbc)

#define IExplorerCommand_GetFlags(This,pFlags)	\
    (This)->lpVtbl -> GetFlags(This,pFlags)

#define IExplorerCommand_EnumSubCommands(This,ppEnum)	\
    (This)->lpVtbl -> EnumSubCommands(This,ppEnum)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IExplorerCommand_GetTitle_Proxy( 
    IExplorerCommand __RPC_FAR * This,
    /* [unique][in] */ IShellItemArray __RPC_FAR *psiItemArray,
    /* [string][out] */ LPWSTR __RPC_FAR *ppszName);


void __RPC_STUB IExplorerCommand_GetTitle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IExplorerCommand_GetIcon_Proxy( 
    IExplorerCommand __RPC_FAR * This,
    /* [unique][in] */ IShellItemArray __RPC_FAR *psiItemArray,
    /* [string][out] */ LPWSTR __RPC_FAR *ppszIcon);


void __RPC_STUB IExplorerCommand_GetIcon_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IExplorerCommand_GetToolTip_Proxy( 
    IExplorerCommand __RPC_FAR * This,
    /* [unique][in] */ IShellItemArray __RPC_FAR *psiItemArray,
    /* [string][out] */ LPWSTR __RPC_FAR *ppszInfotip);


void __RPC_STUB IExplorerCommand_GetToolTip_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IExplorerCommand_GetCanonicalName_Proxy( 
    IExplorerCommand __RPC_FAR * This,
    /* [out] */ GUID __RPC_FAR *pguidCommandName);


void __RPC_STUB IExplorerCommand_GetCanonicalName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IExplorerCommand_GetState_Proxy( 
    IExplorerCommand __RPC_FAR * This,
    /* [in] */ IShellItemArray __RPC_FAR *psiItemArray,
    /* [in] */ BOOL fOkToBeSlow,
    /* [out] */ EXPCMDSTATE __RPC_FAR *pCmdState);


void __RPC_STUB IExplorerCommand_GetState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IExplorerCommand_Invoke_Proxy( 
    IExplorerCommand __RPC_FAR * This,
    /* [in] */ IShellItemArray __RPC_FAR *psiItemArray,
    /* [unique][in] */ IBindCtx __RPC_FAR *pbc);


void __RPC_STUB IExplorerCommand_Invoke_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IExplorerCommand_GetFlags_Proxy( 
    IExplorerCommand __RPC_FAR * This,
    /* [out] */ EXPCMDFLAGS __RPC_FAR *pFlags);


void __RPC_STUB IExplorerCommand_GetFlags_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IExplorerCommand_EnumSubCommands_Proxy( 
    IExplorerCommand __RPC_FAR * This,
    /* [out] */ IEnumExplorerCommand __RPC_FAR *__RPC_FAR *ppEnum);


void __RPC_STUB IExplorerCommand_EnumSubCommands_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IExplorerCommand_INTERFACE_DEFINED__ */


#ifndef __IEnumExplorerCommand_INTERFACE_DEFINED__
#define __IEnumExplorerCommand_INTERFACE_DEFINED__

/* interface IEnumExplorerCommand */
/* [object][unique][uuid] */ 


EXTERN_C const IID IID_IEnumExplorerCommand;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("a88826f8-186f-4987-aade-ea0cef8fbfe8")
    IEnumExplorerCommand : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Next( 
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ IExplorerCommand __RPC_FAR *__RPC_FAR *pUICommand,
            /* [out] */ ULONG __RPC_FAR *pceltFetched) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Skip( 
            /* [in] */ ULONG celt) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clone( 
            /* [out] */ IEnumExplorerCommand __RPC_FAR *__RPC_FAR *ppenum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumExplorerCommandVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IEnumExplorerCommand __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IEnumExplorerCommand __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IEnumExplorerCommand __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Next )( 
            IEnumExplorerCommand __RPC_FAR * This,
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ IExplorerCommand __RPC_FAR *__RPC_FAR *pUICommand,
            /* [out] */ ULONG __RPC_FAR *pceltFetched);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Skip )( 
            IEnumExplorerCommand __RPC_FAR * This,
            /* [in] */ ULONG celt);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Reset )( 
            IEnumExplorerCommand __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Clone )( 
            IEnumExplorerCommand __RPC_FAR * This,
            /* [out] */ IEnumExplorerCommand __RPC_FAR *__RPC_FAR *ppenum);
        
        END_INTERFACE
    } IEnumExplorerCommandVtbl;

    interface IEnumExplorerCommand
    {
        CONST_VTBL struct IEnumExplorerCommandVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumExplorerCommand_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IEnumExplorerCommand_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IEnumExplorerCommand_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IEnumExplorerCommand_Next(This,celt,pUICommand,pceltFetched)	\
    (This)->lpVtbl -> Next(This,celt,pUICommand,pceltFetched)

#define IEnumExplorerCommand_Skip(This,celt)	\
    (This)->lpVtbl -> Skip(This,celt)

#define IEnumExplorerCommand_Reset(This)	\
    (This)->lpVtbl -> Reset(This)

#define IEnumExplorerCommand_Clone(This,ppenum)	\
    (This)->lpVtbl -> Clone(This,ppenum)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IEnumExplorerCommand_Next_Proxy( 
    IEnumExplorerCommand __RPC_FAR * This,
    /* [in] */ ULONG celt,
    /* [length_is][size_is][out] */ IExplorerCommand __RPC_FAR *__RPC_FAR *pUICommand,
    /* [out] */ ULONG __RPC_FAR *pceltFetched);


void __RPC_STUB IEnumExplorerCommand_Next_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumExplorerCommand_Skip_Proxy( 
    IEnumExplorerCommand __RPC_FAR * This,
    /* [in] */ ULONG celt);


void __RPC_STUB IEnumExplorerCommand_Skip_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumExplorerCommand_Reset_Proxy( 
    IEnumExplorerCommand __RPC_FAR * This);


void __RPC_STUB IEnumExplorerCommand_Reset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumExplorerCommand_Clone_Proxy( 
    IEnumExplorerCommand __RPC_FAR * This,
    /* [out] */ IEnumExplorerCommand __RPC_FAR *__RPC_FAR *ppenum);


void __RPC_STUB IEnumExplorerCommand_Clone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IEnumExplorerCommand_INTERFACE_DEFINED__ */


#ifndef __IExplorerCommandProvider_INTERFACE_DEFINED__
#define __IExplorerCommandProvider_INTERFACE_DEFINED__

/* interface IExplorerCommandProvider */
/* [object][unique][uuid] */ 


EXTERN_C const IID IID_IExplorerCommandProvider;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("64961751-0835-43c0-8ffe-d57686530e64")
    IExplorerCommandProvider : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCommands( 
            /* [in] */ IUnknown __RPC_FAR *punkSite,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCommand( 
            /* [in] */ REFGUID rguidCommandId,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IExplorerCommandProviderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IExplorerCommandProvider __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IExplorerCommandProvider __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IExplorerCommandProvider __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCommands )( 
            IExplorerCommandProvider __RPC_FAR * This,
            /* [in] */ IUnknown __RPC_FAR *punkSite,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCommand )( 
            IExplorerCommandProvider __RPC_FAR * This,
            /* [in] */ REFGUID rguidCommandId,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);
        
        END_INTERFACE
    } IExplorerCommandProviderVtbl;

    interface IExplorerCommandProvider
    {
        CONST_VTBL struct IExplorerCommandProviderVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IExplorerCommandProvider_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IExplorerCommandProvider_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IExplorerCommandProvider_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IExplorerCommandProvider_GetCommands(This,punkSite,riid,ppv)	\
    (This)->lpVtbl -> GetCommands(This,punkSite,riid,ppv)

#define IExplorerCommandProvider_GetCommand(This,rguidCommandId,riid,ppv)	\
    (This)->lpVtbl -> GetCommand(This,rguidCommandId,riid,ppv)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IExplorerCommandProvider_GetCommands_Proxy( 
    IExplorerCommandProvider __RPC_FAR * This,
    /* [in] */ IUnknown __RPC_FAR *punkSite,
    /* [in] */ REFIID riid,
    /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);


void __RPC_STUB IExplorerCommandProvider_GetCommands_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IExplorerCommandProvider_GetCommand_Proxy( 
    IExplorerCommandProvider __RPC_FAR * This,
    /* [in] */ REFGUID rguidCommandId,
    /* [in] */ REFIID riid,
    /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppv);


void __RPC_STUB IExplorerCommandProvider_GetCommand_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IExplorerCommandProvider_INTERFACE_DEFINED__ */


#ifndef __IMarkupCallback_INTERFACE_DEFINED__
#define __IMarkupCallback_INTERFACE_DEFINED__

/* interface IMarkupCallback */
/* [object][local][uuid] */ 


EXTERN_C const IID IID_IMarkupCallback;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4440306e-d79a-48d0-88e6-a42692279bfb")
    IMarkupCallback : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetState( 
            /* [in] */ DWORD dwId,
            /* [in] */ UINT uState) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Notify( 
            /* [in] */ DWORD dwId,
            /* [in] */ int nCode,
            /* [in] */ int iLink) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InvalidateRect( 
            /* [in] */ DWORD dwId,
            /* [in] */ const RECT __RPC_FAR *prc) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnCustomDraw( 
            /* [in] */ DWORD dwDrawStage,
            /* [in] */ HDC hdc,
            /* [in] */ const RECT __RPC_FAR *prc,
            /* [in] */ DWORD dwId,
            /* [in] */ int iLink,
            /* [in] */ UINT uItemState,
            /* [out] */ LRESULT __RPC_FAR *pdwResult) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CustomDrawText( 
            /* [in] */ HDC hDC,
            /* [string][in] */ LPCWSTR lpString,
            /* [in] */ int nCount,
            /* [in] */ RECT __RPC_FAR *pRect,
            /* [in] */ UINT uFormat,
            /* [in] */ BOOL fLink) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMarkupCallbackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IMarkupCallback __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IMarkupCallback __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IMarkupCallback __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetState )( 
            IMarkupCallback __RPC_FAR * This,
            /* [in] */ DWORD dwId,
            /* [in] */ UINT uState);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Notify )( 
            IMarkupCallback __RPC_FAR * This,
            /* [in] */ DWORD dwId,
            /* [in] */ int nCode,
            /* [in] */ int iLink);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *InvalidateRect )( 
            IMarkupCallback __RPC_FAR * This,
            /* [in] */ DWORD dwId,
            /* [in] */ const RECT __RPC_FAR *prc);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnCustomDraw )( 
            IMarkupCallback __RPC_FAR * This,
            /* [in] */ DWORD dwDrawStage,
            /* [in] */ HDC hdc,
            /* [in] */ const RECT __RPC_FAR *prc,
            /* [in] */ DWORD dwId,
            /* [in] */ int iLink,
            /* [in] */ UINT uItemState,
            /* [out] */ LRESULT __RPC_FAR *pdwResult);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CustomDrawText )( 
            IMarkupCallback __RPC_FAR * This,
            /* [in] */ HDC hDC,
            /* [string][in] */ LPCWSTR lpString,
            /* [in] */ int nCount,
            /* [in] */ RECT __RPC_FAR *pRect,
            /* [in] */ UINT uFormat,
            /* [in] */ BOOL fLink);
        
        END_INTERFACE
    } IMarkupCallbackVtbl;

    interface IMarkupCallback
    {
        CONST_VTBL struct IMarkupCallbackVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMarkupCallback_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMarkupCallback_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMarkupCallback_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMarkupCallback_GetState(This,dwId,uState)	\
    (This)->lpVtbl -> GetState(This,dwId,uState)

#define IMarkupCallback_Notify(This,dwId,nCode,iLink)	\
    (This)->lpVtbl -> Notify(This,dwId,nCode,iLink)

#define IMarkupCallback_InvalidateRect(This,dwId,prc)	\
    (This)->lpVtbl -> InvalidateRect(This,dwId,prc)

#define IMarkupCallback_OnCustomDraw(This,dwDrawStage,hdc,prc,dwId,iLink,uItemState,pdwResult)	\
    (This)->lpVtbl -> OnCustomDraw(This,dwDrawStage,hdc,prc,dwId,iLink,uItemState,pdwResult)

#define IMarkupCallback_CustomDrawText(This,hDC,lpString,nCount,pRect,uFormat,fLink)	\
    (This)->lpVtbl -> CustomDrawText(This,hDC,lpString,nCount,pRect,uFormat,fLink)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IMarkupCallback_GetState_Proxy( 
    IMarkupCallback __RPC_FAR * This,
    /* [in] */ DWORD dwId,
    /* [in] */ UINT uState);


void __RPC_STUB IMarkupCallback_GetState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupCallback_Notify_Proxy( 
    IMarkupCallback __RPC_FAR * This,
    /* [in] */ DWORD dwId,
    /* [in] */ int nCode,
    /* [in] */ int iLink);


void __RPC_STUB IMarkupCallback_Notify_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupCallback_InvalidateRect_Proxy( 
    IMarkupCallback __RPC_FAR * This,
    /* [in] */ DWORD dwId,
    /* [in] */ const RECT __RPC_FAR *prc);


void __RPC_STUB IMarkupCallback_InvalidateRect_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupCallback_OnCustomDraw_Proxy( 
    IMarkupCallback __RPC_FAR * This,
    /* [in] */ DWORD dwDrawStage,
    /* [in] */ HDC hdc,
    /* [in] */ const RECT __RPC_FAR *prc,
    /* [in] */ DWORD dwId,
    /* [in] */ int iLink,
    /* [in] */ UINT uItemState,
    /* [out] */ LRESULT __RPC_FAR *pdwResult);


void __RPC_STUB IMarkupCallback_OnCustomDraw_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupCallback_CustomDrawText_Proxy( 
    IMarkupCallback __RPC_FAR * This,
    /* [in] */ HDC hDC,
    /* [string][in] */ LPCWSTR lpString,
    /* [in] */ int nCount,
    /* [in] */ RECT __RPC_FAR *pRect,
    /* [in] */ UINT uFormat,
    /* [in] */ BOOL fLink);


void __RPC_STUB IMarkupCallback_CustomDrawText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMarkupCallback_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0450 */
/* [local] */ 

typedef HANDLE HTHEME;



extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0450_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0450_v0_0_s_ifspec;

#ifndef __IControlMarkup_INTERFACE_DEFINED__
#define __IControlMarkup_INTERFACE_DEFINED__

/* interface IControlMarkup */
/* [object][local][uuid] */ 

/* [v1_enum] */ 
enum tagMARKUPSIZE
    {	MARKUPSIZE_CALCWIDTH	= 0,
	MARKUPSIZE_CALCHEIGHT	= MARKUPSIZE_CALCWIDTH + 1
    };
typedef enum tagMARKUPSIZE MARKUPSIZE;

/* [v1_enum] */ 
enum tagMARKUPLINKTEXT
    {	MARKUPLINKTEXT_URL	= 0,
	MARKUPLINKTEXT_ID	= MARKUPLINKTEXT_URL + 1,
	MARKUPLINKTEXT_TEXT	= MARKUPLINKTEXT_ID + 1
    };
typedef enum tagMARKUPLINKTEXT MARKUPLINKTEXT;

/* [v1_enum] */ 
enum tagMARKUPSTATE
    {	MARKUPSTATE_FOCUSED	= 0x1,
	MARKUPSTATE_ENABLED	= 0x2,
	MARKUPSTATE_VISITED	= 0x4,
	MARKUPSTATE_HOT	= 0x8,
	MARKUPSTATE_DEFAULTCOLORS	= 0x10,
	MARKUPSTATE_ALLOWMARKUP	= 0x40000000
    };
typedef DWORD MARKUPSTATE;

/* [v1_enum] */ 
enum tagMARKUPMESSAGE
    {	MARKUPMESSAGE_KEYEXECUTE	= 0,
	MARKUPMESSAGE_CLICKEXECUTE	= MARKUPMESSAGE_KEYEXECUTE + 1,
	MARKUPMESSAGE_WANTFOCUS	= MARKUPMESSAGE_CLICKEXECUTE + 1
    };
typedef enum tagMARKUPMESSAGE MARKUPMESSAGE;


EXTERN_C const IID IID_IControlMarkup;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D6D2FBAE-F116-458c-8C34-03569877A2D2")
    IControlMarkup : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetCallback( 
            /* [in] */ IUnknown __RPC_FAR *punk) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCallback( 
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvUnk) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetId( 
            /* [in] */ DWORD dwId) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetId( 
            /* [out] */ DWORD __RPC_FAR *pdwId) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetFonts( 
            /* [in] */ HFONT hFont,
            /* [in] */ HFONT hFontUnderline) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFonts( 
            /* [out] */ HFONT __RPC_FAR *phFont,
            /* [out] */ HFONT __RPC_FAR *phFontUnderline) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetText( 
            /* [string][in] */ LPCWSTR pwszText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetText( 
            /* [in] */ BOOL bRaw,
            /* [size_is][string][out] */ LPWSTR pwszText,
            /* [out][in] */ DWORD __RPC_FAR *pdwCch) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetLinkText( 
            /* [in] */ int iLink,
            /* [in] */ UINT uMarkupLinkText,
            /* [string][in] */ LPCWSTR pwszText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLinkText( 
            /* [in] */ int iLink,
            /* [in] */ UINT uMarkupLinkText,
            /* [size_is][string][out] */ LPWSTR pwszText,
            /* [out][in] */ DWORD __RPC_FAR *pdwCch) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetRenderFlags( 
            /* [in] */ UINT uDT) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRenderFlags( 
            /* [out] */ UINT __RPC_FAR *puDT,
            /* [out] */ HTHEME __RPC_FAR *phTheme,
            /* [out] */ int __RPC_FAR *piPartId,
            /* [out] */ int __RPC_FAR *piStateIdNormal,
            /* [out] */ int __RPC_FAR *piStateIdLink) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetThemeRenderFlags( 
            /* [in] */ UINT uDT,
            /* [in] */ HTHEME hTheme,
            /* [in] */ int iPartId,
            /* [in] */ int iStateIdNormal,
            /* [in] */ int iStateIdLink) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetState( 
            /* [in] */ int iLink,
            /* [in] */ UINT uStateMask,
            /* [out] */ UINT __RPC_FAR *puState) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetState( 
            /* [in] */ int iLink,
            /* [in] */ UINT uStateMask,
            /* [in] */ UINT uState) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DrawText( 
            /* [in] */ HDC hdcClient,
            /* [in] */ LPCRECT prcClient) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetLinkCursor( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CalcIdealSize( 
            /* [in] */ HDC hdc,
            /* [in] */ UINT uMarkUpCalc,
            /* [out][in] */ RECT __RPC_FAR *prc) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetFocus( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE KillFocus( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsTabbable( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnButtonDown( 
            /* [in] */ POINT pt) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnButtonUp( 
            /* [in] */ POINT pt) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnKeyDown( 
            /* [in] */ UINT uVirtKey) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE HitTest( 
            /* [in] */ POINT pt,
            /* [out] */ int __RPC_FAR *piLink) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLinkRect( 
            /* [in] */ int iLink,
            /* [out] */ RECT __RPC_FAR *prc) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetControlRect( 
            /* [out] */ RECT __RPC_FAR *prcControl) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLinkCount( 
            /* [out] */ UINT __RPC_FAR *pcLinks) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IControlMarkupVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IControlMarkup __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IControlMarkup __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IControlMarkup __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetCallback )( 
            IControlMarkup __RPC_FAR * This,
            /* [in] */ IUnknown __RPC_FAR *punk);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCallback )( 
            IControlMarkup __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvUnk);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetId )( 
            IControlMarkup __RPC_FAR * This,
            /* [in] */ DWORD dwId);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetId )( 
            IControlMarkup __RPC_FAR * This,
            /* [out] */ DWORD __RPC_FAR *pdwId);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFonts )( 
            IControlMarkup __RPC_FAR * This,
            /* [in] */ HFONT hFont,
            /* [in] */ HFONT hFontUnderline);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFonts )( 
            IControlMarkup __RPC_FAR * This,
            /* [out] */ HFONT __RPC_FAR *phFont,
            /* [out] */ HFONT __RPC_FAR *phFontUnderline);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetText )( 
            IControlMarkup __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pwszText);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetText )( 
            IControlMarkup __RPC_FAR * This,
            /* [in] */ BOOL bRaw,
            /* [size_is][string][out] */ LPWSTR pwszText,
            /* [out][in] */ DWORD __RPC_FAR *pdwCch);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetLinkText )( 
            IControlMarkup __RPC_FAR * This,
            /* [in] */ int iLink,
            /* [in] */ UINT uMarkupLinkText,
            /* [string][in] */ LPCWSTR pwszText);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetLinkText )( 
            IControlMarkup __RPC_FAR * This,
            /* [in] */ int iLink,
            /* [in] */ UINT uMarkupLinkText,
            /* [size_is][string][out] */ LPWSTR pwszText,
            /* [out][in] */ DWORD __RPC_FAR *pdwCch);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetRenderFlags )( 
            IControlMarkup __RPC_FAR * This,
            /* [in] */ UINT uDT);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetRenderFlags )( 
            IControlMarkup __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *puDT,
            /* [out] */ HTHEME __RPC_FAR *phTheme,
            /* [out] */ int __RPC_FAR *piPartId,
            /* [out] */ int __RPC_FAR *piStateIdNormal,
            /* [out] */ int __RPC_FAR *piStateIdLink);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetThemeRenderFlags )( 
            IControlMarkup __RPC_FAR * This,
            /* [in] */ UINT uDT,
            /* [in] */ HTHEME hTheme,
            /* [in] */ int iPartId,
            /* [in] */ int iStateIdNormal,
            /* [in] */ int iStateIdLink);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetState )( 
            IControlMarkup __RPC_FAR * This,
            /* [in] */ int iLink,
            /* [in] */ UINT uStateMask,
            /* [out] */ UINT __RPC_FAR *puState);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetState )( 
            IControlMarkup __RPC_FAR * This,
            /* [in] */ int iLink,
            /* [in] */ UINT uStateMask,
            /* [in] */ UINT uState);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DrawText )( 
            IControlMarkup __RPC_FAR * This,
            /* [in] */ HDC hdcClient,
            /* [in] */ LPCRECT prcClient);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetLinkCursor )( 
            IControlMarkup __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CalcIdealSize )( 
            IControlMarkup __RPC_FAR * This,
            /* [in] */ HDC hdc,
            /* [in] */ UINT uMarkUpCalc,
            /* [out][in] */ RECT __RPC_FAR *prc);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFocus )( 
            IControlMarkup __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *KillFocus )( 
            IControlMarkup __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *IsTabbable )( 
            IControlMarkup __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnButtonDown )( 
            IControlMarkup __RPC_FAR * This,
            /* [in] */ POINT pt);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnButtonUp )( 
            IControlMarkup __RPC_FAR * This,
            /* [in] */ POINT pt);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnKeyDown )( 
            IControlMarkup __RPC_FAR * This,
            /* [in] */ UINT uVirtKey);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *HitTest )( 
            IControlMarkup __RPC_FAR * This,
            /* [in] */ POINT pt,
            /* [out] */ int __RPC_FAR *piLink);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetLinkRect )( 
            IControlMarkup __RPC_FAR * This,
            /* [in] */ int iLink,
            /* [out] */ RECT __RPC_FAR *prc);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetControlRect )( 
            IControlMarkup __RPC_FAR * This,
            /* [out] */ RECT __RPC_FAR *prcControl);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetLinkCount )( 
            IControlMarkup __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pcLinks);
        
        END_INTERFACE
    } IControlMarkupVtbl;

    interface IControlMarkup
    {
        CONST_VTBL struct IControlMarkupVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IControlMarkup_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IControlMarkup_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IControlMarkup_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IControlMarkup_SetCallback(This,punk)	\
    (This)->lpVtbl -> SetCallback(This,punk)

#define IControlMarkup_GetCallback(This,riid,ppvUnk)	\
    (This)->lpVtbl -> GetCallback(This,riid,ppvUnk)

#define IControlMarkup_SetId(This,dwId)	\
    (This)->lpVtbl -> SetId(This,dwId)

#define IControlMarkup_GetId(This,pdwId)	\
    (This)->lpVtbl -> GetId(This,pdwId)

#define IControlMarkup_SetFonts(This,hFont,hFontUnderline)	\
    (This)->lpVtbl -> SetFonts(This,hFont,hFontUnderline)

#define IControlMarkup_GetFonts(This,phFont,phFontUnderline)	\
    (This)->lpVtbl -> GetFonts(This,phFont,phFontUnderline)

#define IControlMarkup_SetText(This,pwszText)	\
    (This)->lpVtbl -> SetText(This,pwszText)

#define IControlMarkup_GetText(This,bRaw,pwszText,pdwCch)	\
    (This)->lpVtbl -> GetText(This,bRaw,pwszText,pdwCch)

#define IControlMarkup_SetLinkText(This,iLink,uMarkupLinkText,pwszText)	\
    (This)->lpVtbl -> SetLinkText(This,iLink,uMarkupLinkText,pwszText)

#define IControlMarkup_GetLinkText(This,iLink,uMarkupLinkText,pwszText,pdwCch)	\
    (This)->lpVtbl -> GetLinkText(This,iLink,uMarkupLinkText,pwszText,pdwCch)

#define IControlMarkup_SetRenderFlags(This,uDT)	\
    (This)->lpVtbl -> SetRenderFlags(This,uDT)

#define IControlMarkup_GetRenderFlags(This,puDT,phTheme,piPartId,piStateIdNormal,piStateIdLink)	\
    (This)->lpVtbl -> GetRenderFlags(This,puDT,phTheme,piPartId,piStateIdNormal,piStateIdLink)

#define IControlMarkup_SetThemeRenderFlags(This,uDT,hTheme,iPartId,iStateIdNormal,iStateIdLink)	\
    (This)->lpVtbl -> SetThemeRenderFlags(This,uDT,hTheme,iPartId,iStateIdNormal,iStateIdLink)

#define IControlMarkup_GetState(This,iLink,uStateMask,puState)	\
    (This)->lpVtbl -> GetState(This,iLink,uStateMask,puState)

#define IControlMarkup_SetState(This,iLink,uStateMask,uState)	\
    (This)->lpVtbl -> SetState(This,iLink,uStateMask,uState)

#define IControlMarkup_DrawText(This,hdcClient,prcClient)	\
    (This)->lpVtbl -> DrawText(This,hdcClient,prcClient)

#define IControlMarkup_SetLinkCursor(This)	\
    (This)->lpVtbl -> SetLinkCursor(This)

#define IControlMarkup_CalcIdealSize(This,hdc,uMarkUpCalc,prc)	\
    (This)->lpVtbl -> CalcIdealSize(This,hdc,uMarkUpCalc,prc)

#define IControlMarkup_SetFocus(This)	\
    (This)->lpVtbl -> SetFocus(This)

#define IControlMarkup_KillFocus(This)	\
    (This)->lpVtbl -> KillFocus(This)

#define IControlMarkup_IsTabbable(This)	\
    (This)->lpVtbl -> IsTabbable(This)

#define IControlMarkup_OnButtonDown(This,pt)	\
    (This)->lpVtbl -> OnButtonDown(This,pt)

#define IControlMarkup_OnButtonUp(This,pt)	\
    (This)->lpVtbl -> OnButtonUp(This,pt)

#define IControlMarkup_OnKeyDown(This,uVirtKey)	\
    (This)->lpVtbl -> OnKeyDown(This,uVirtKey)

#define IControlMarkup_HitTest(This,pt,piLink)	\
    (This)->lpVtbl -> HitTest(This,pt,piLink)

#define IControlMarkup_GetLinkRect(This,iLink,prc)	\
    (This)->lpVtbl -> GetLinkRect(This,iLink,prc)

#define IControlMarkup_GetControlRect(This,prcControl)	\
    (This)->lpVtbl -> GetControlRect(This,prcControl)

#define IControlMarkup_GetLinkCount(This,pcLinks)	\
    (This)->lpVtbl -> GetLinkCount(This,pcLinks)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IControlMarkup_SetCallback_Proxy( 
    IControlMarkup __RPC_FAR * This,
    /* [in] */ IUnknown __RPC_FAR *punk);


void __RPC_STUB IControlMarkup_SetCallback_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IControlMarkup_GetCallback_Proxy( 
    IControlMarkup __RPC_FAR * This,
    /* [in] */ REFIID riid,
    /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvUnk);


void __RPC_STUB IControlMarkup_GetCallback_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IControlMarkup_SetId_Proxy( 
    IControlMarkup __RPC_FAR * This,
    /* [in] */ DWORD dwId);


void __RPC_STUB IControlMarkup_SetId_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IControlMarkup_GetId_Proxy( 
    IControlMarkup __RPC_FAR * This,
    /* [out] */ DWORD __RPC_FAR *pdwId);


void __RPC_STUB IControlMarkup_GetId_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IControlMarkup_SetFonts_Proxy( 
    IControlMarkup __RPC_FAR * This,
    /* [in] */ HFONT hFont,
    /* [in] */ HFONT hFontUnderline);


void __RPC_STUB IControlMarkup_SetFonts_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IControlMarkup_GetFonts_Proxy( 
    IControlMarkup __RPC_FAR * This,
    /* [out] */ HFONT __RPC_FAR *phFont,
    /* [out] */ HFONT __RPC_FAR *phFontUnderline);


void __RPC_STUB IControlMarkup_GetFonts_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IControlMarkup_SetText_Proxy( 
    IControlMarkup __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pwszText);


void __RPC_STUB IControlMarkup_SetText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IControlMarkup_GetText_Proxy( 
    IControlMarkup __RPC_FAR * This,
    /* [in] */ BOOL bRaw,
    /* [size_is][string][out] */ LPWSTR pwszText,
    /* [out][in] */ DWORD __RPC_FAR *pdwCch);


void __RPC_STUB IControlMarkup_GetText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IControlMarkup_SetLinkText_Proxy( 
    IControlMarkup __RPC_FAR * This,
    /* [in] */ int iLink,
    /* [in] */ UINT uMarkupLinkText,
    /* [string][in] */ LPCWSTR pwszText);


void __RPC_STUB IControlMarkup_SetLinkText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IControlMarkup_GetLinkText_Proxy( 
    IControlMarkup __RPC_FAR * This,
    /* [in] */ int iLink,
    /* [in] */ UINT uMarkupLinkText,
    /* [size_is][string][out] */ LPWSTR pwszText,
    /* [out][in] */ DWORD __RPC_FAR *pdwCch);


void __RPC_STUB IControlMarkup_GetLinkText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IControlMarkup_SetRenderFlags_Proxy( 
    IControlMarkup __RPC_FAR * This,
    /* [in] */ UINT uDT);


void __RPC_STUB IControlMarkup_SetRenderFlags_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IControlMarkup_GetRenderFlags_Proxy( 
    IControlMarkup __RPC_FAR * This,
    /* [out] */ UINT __RPC_FAR *puDT,
    /* [out] */ HTHEME __RPC_FAR *phTheme,
    /* [out] */ int __RPC_FAR *piPartId,
    /* [out] */ int __RPC_FAR *piStateIdNormal,
    /* [out] */ int __RPC_FAR *piStateIdLink);


void __RPC_STUB IControlMarkup_GetRenderFlags_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IControlMarkup_SetThemeRenderFlags_Proxy( 
    IControlMarkup __RPC_FAR * This,
    /* [in] */ UINT uDT,
    /* [in] */ HTHEME hTheme,
    /* [in] */ int iPartId,
    /* [in] */ int iStateIdNormal,
    /* [in] */ int iStateIdLink);


void __RPC_STUB IControlMarkup_SetThemeRenderFlags_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IControlMarkup_GetState_Proxy( 
    IControlMarkup __RPC_FAR * This,
    /* [in] */ int iLink,
    /* [in] */ UINT uStateMask,
    /* [out] */ UINT __RPC_FAR *puState);


void __RPC_STUB IControlMarkup_GetState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IControlMarkup_SetState_Proxy( 
    IControlMarkup __RPC_FAR * This,
    /* [in] */ int iLink,
    /* [in] */ UINT uStateMask,
    /* [in] */ UINT uState);


void __RPC_STUB IControlMarkup_SetState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IControlMarkup_DrawText_Proxy( 
    IControlMarkup __RPC_FAR * This,
    /* [in] */ HDC hdcClient,
    /* [in] */ LPCRECT prcClient);


void __RPC_STUB IControlMarkup_DrawText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IControlMarkup_SetLinkCursor_Proxy( 
    IControlMarkup __RPC_FAR * This);


void __RPC_STUB IControlMarkup_SetLinkCursor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IControlMarkup_CalcIdealSize_Proxy( 
    IControlMarkup __RPC_FAR * This,
    /* [in] */ HDC hdc,
    /* [in] */ UINT uMarkUpCalc,
    /* [out][in] */ RECT __RPC_FAR *prc);


void __RPC_STUB IControlMarkup_CalcIdealSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IControlMarkup_SetFocus_Proxy( 
    IControlMarkup __RPC_FAR * This);


void __RPC_STUB IControlMarkup_SetFocus_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IControlMarkup_KillFocus_Proxy( 
    IControlMarkup __RPC_FAR * This);


void __RPC_STUB IControlMarkup_KillFocus_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IControlMarkup_IsTabbable_Proxy( 
    IControlMarkup __RPC_FAR * This);


void __RPC_STUB IControlMarkup_IsTabbable_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IControlMarkup_OnButtonDown_Proxy( 
    IControlMarkup __RPC_FAR * This,
    /* [in] */ POINT pt);


void __RPC_STUB IControlMarkup_OnButtonDown_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IControlMarkup_OnButtonUp_Proxy( 
    IControlMarkup __RPC_FAR * This,
    /* [in] */ POINT pt);


void __RPC_STUB IControlMarkup_OnButtonUp_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IControlMarkup_OnKeyDown_Proxy( 
    IControlMarkup __RPC_FAR * This,
    /* [in] */ UINT uVirtKey);


void __RPC_STUB IControlMarkup_OnKeyDown_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IControlMarkup_HitTest_Proxy( 
    IControlMarkup __RPC_FAR * This,
    /* [in] */ POINT pt,
    /* [out] */ int __RPC_FAR *piLink);


void __RPC_STUB IControlMarkup_HitTest_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IControlMarkup_GetLinkRect_Proxy( 
    IControlMarkup __RPC_FAR * This,
    /* [in] */ int iLink,
    /* [out] */ RECT __RPC_FAR *prc);


void __RPC_STUB IControlMarkup_GetLinkRect_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IControlMarkup_GetControlRect_Proxy( 
    IControlMarkup __RPC_FAR * This,
    /* [out] */ RECT __RPC_FAR *prcControl);


void __RPC_STUB IControlMarkup_GetControlRect_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IControlMarkup_GetLinkCount_Proxy( 
    IControlMarkup __RPC_FAR * This,
    /* [out] */ UINT __RPC_FAR *pcLinks);


void __RPC_STUB IControlMarkup_GetLinkCount_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IControlMarkup_INTERFACE_DEFINED__ */


#ifndef __IInitializeNetworkFolder_INTERFACE_DEFINED__
#define __IInitializeNetworkFolder_INTERFACE_DEFINED__

/* interface IInitializeNetworkFolder */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IInitializeNetworkFolder;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6e0f9881-42a8-4f2a-97f8-8af4e026d92d")
    IInitializeNetworkFolder : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Initialize( 
            /* [unique][in] */ PCIDLIST_ABSOLUTE pidl,
            /* [unique][in] */ PCIDLIST_ABSOLUTE pidlTarget,
            /* [in] */ UINT uDisplayType,
            /* [string][unique][in] */ LPCWSTR pszResName,
            /* [string][unique][in] */ LPCWSTR pszProvider) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IInitializeNetworkFolderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IInitializeNetworkFolder __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IInitializeNetworkFolder __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IInitializeNetworkFolder __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Initialize )( 
            IInitializeNetworkFolder __RPC_FAR * This,
            /* [unique][in] */ PCIDLIST_ABSOLUTE pidl,
            /* [unique][in] */ PCIDLIST_ABSOLUTE pidlTarget,
            /* [in] */ UINT uDisplayType,
            /* [string][unique][in] */ LPCWSTR pszResName,
            /* [string][unique][in] */ LPCWSTR pszProvider);
        
        END_INTERFACE
    } IInitializeNetworkFolderVtbl;

    interface IInitializeNetworkFolder
    {
        CONST_VTBL struct IInitializeNetworkFolderVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IInitializeNetworkFolder_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IInitializeNetworkFolder_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IInitializeNetworkFolder_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IInitializeNetworkFolder_Initialize(This,pidl,pidlTarget,uDisplayType,pszResName,pszProvider)	\
    (This)->lpVtbl -> Initialize(This,pidl,pidlTarget,uDisplayType,pszResName,pszProvider)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IInitializeNetworkFolder_Initialize_Proxy( 
    IInitializeNetworkFolder __RPC_FAR * This,
    /* [unique][in] */ PCIDLIST_ABSOLUTE pidl,
    /* [unique][in] */ PCIDLIST_ABSOLUTE pidlTarget,
    /* [in] */ UINT uDisplayType,
    /* [string][unique][in] */ LPCWSTR pszResName,
    /* [string][unique][in] */ LPCWSTR pszProvider);


void __RPC_STUB IInitializeNetworkFolder_Initialize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IInitializeNetworkFolder_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0452 */
/* [local] */ 

typedef 
enum tagCPVIEW
    {	CPVIEW_CLASSIC	= 0,
	CPVIEW_CATEGORY	= 1
    }	CPVIEW;



extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0452_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0452_v0_0_s_ifspec;

#ifndef __IOpenControlPanel_INTERFACE_DEFINED__
#define __IOpenControlPanel_INTERFACE_DEFINED__

/* interface IOpenControlPanel */
/* [uuid][object] */ 


EXTERN_C const IID IID_IOpenControlPanel;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D11AD862-66DE-4DF4-BF6C-1F5621996AF1")
    IOpenControlPanel : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Open( 
            /* [string][unique][in] */ LPCWSTR pszName,
            /* [string][unique][in] */ LPCWSTR pszPage,
            /* [unique][in] */ IUnknown __RPC_FAR *punkSite) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPath( 
            /* [string][unique][in] */ LPCWSTR pszName,
            /* [size_is][string][out] */ LPWSTR pszPath,
            /* [in] */ UINT cchPath) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCurrentView( 
            /* [out] */ CPVIEW __RPC_FAR *pView) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IOpenControlPanelVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IOpenControlPanel __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IOpenControlPanel __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IOpenControlPanel __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Open )( 
            IOpenControlPanel __RPC_FAR * This,
            /* [string][unique][in] */ LPCWSTR pszName,
            /* [string][unique][in] */ LPCWSTR pszPage,
            /* [unique][in] */ IUnknown __RPC_FAR *punkSite);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetPath )( 
            IOpenControlPanel __RPC_FAR * This,
            /* [string][unique][in] */ LPCWSTR pszName,
            /* [size_is][string][out] */ LPWSTR pszPath,
            /* [in] */ UINT cchPath);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCurrentView )( 
            IOpenControlPanel __RPC_FAR * This,
            /* [out] */ CPVIEW __RPC_FAR *pView);
        
        END_INTERFACE
    } IOpenControlPanelVtbl;

    interface IOpenControlPanel
    {
        CONST_VTBL struct IOpenControlPanelVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IOpenControlPanel_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IOpenControlPanel_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IOpenControlPanel_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IOpenControlPanel_Open(This,pszName,pszPage,punkSite)	\
    (This)->lpVtbl -> Open(This,pszName,pszPage,punkSite)

#define IOpenControlPanel_GetPath(This,pszName,pszPath,cchPath)	\
    (This)->lpVtbl -> GetPath(This,pszName,pszPath,cchPath)

#define IOpenControlPanel_GetCurrentView(This,pView)	\
    (This)->lpVtbl -> GetCurrentView(This,pView)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IOpenControlPanel_Open_Proxy( 
    IOpenControlPanel __RPC_FAR * This,
    /* [string][unique][in] */ LPCWSTR pszName,
    /* [string][unique][in] */ LPCWSTR pszPage,
    /* [unique][in] */ IUnknown __RPC_FAR *punkSite);


void __RPC_STUB IOpenControlPanel_Open_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IOpenControlPanel_GetPath_Proxy( 
    IOpenControlPanel __RPC_FAR * This,
    /* [string][unique][in] */ LPCWSTR pszName,
    /* [size_is][string][out] */ LPWSTR pszPath,
    /* [in] */ UINT cchPath);


void __RPC_STUB IOpenControlPanel_GetPath_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IOpenControlPanel_GetCurrentView_Proxy( 
    IOpenControlPanel __RPC_FAR * This,
    /* [out] */ CPVIEW __RPC_FAR *pView);


void __RPC_STUB IOpenControlPanel_GetCurrentView_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IOpenControlPanel_INTERFACE_DEFINED__ */


#ifndef __ISystemCPLUpdate_INTERFACE_DEFINED__
#define __ISystemCPLUpdate_INTERFACE_DEFINED__

/* interface ISystemCPLUpdate */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_ISystemCPLUpdate;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A8A71374-80C2-49e0-8805-8524EBC45B07")
    ISystemCPLUpdate : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE UpdateSystemInfo( 
            /* [string][in] */ LPCWSTR pszDescription,
            /* [string][in] */ LPCWSTR pszSpeed,
            /* [string][in] */ LPCWSTR pszMemory,
            /* [in] */ DWORD dwNumProcessors) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UpdateLicensingInfo( 
            /* [in] */ DWORD dwLicensingStatus,
            /* [in] */ DWORD dwGraceTimeRemainingMinutes,
            /* [in] */ DWORD dwTotalGraceTimeDays,
            /* [in] */ BOOL fIsGenuine) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UpdateRatingsInfo( 
            /* [string][unique][in] */ LPCWSTR pszRatingsLink,
            /* [string][unique][in] */ LPCWSTR pszRatingsText,
            /* [unique][in] */ HBITMAP hRatingsImage,
            /* [in] */ USHORT uWinCRSLevel) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UpdateComputerInfo( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ISystemCPLUpdateVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            ISystemCPLUpdate __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            ISystemCPLUpdate __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            ISystemCPLUpdate __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *UpdateSystemInfo )( 
            ISystemCPLUpdate __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszDescription,
            /* [string][in] */ LPCWSTR pszSpeed,
            /* [string][in] */ LPCWSTR pszMemory,
            /* [in] */ DWORD dwNumProcessors);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *UpdateLicensingInfo )( 
            ISystemCPLUpdate __RPC_FAR * This,
            /* [in] */ DWORD dwLicensingStatus,
            /* [in] */ DWORD dwGraceTimeRemainingMinutes,
            /* [in] */ DWORD dwTotalGraceTimeDays,
            /* [in] */ BOOL fIsGenuine);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *UpdateRatingsInfo )( 
            ISystemCPLUpdate __RPC_FAR * This,
            /* [string][unique][in] */ LPCWSTR pszRatingsLink,
            /* [string][unique][in] */ LPCWSTR pszRatingsText,
            /* [unique][in] */ HBITMAP hRatingsImage,
            /* [in] */ USHORT uWinCRSLevel);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *UpdateComputerInfo )( 
            ISystemCPLUpdate __RPC_FAR * This);
        
        END_INTERFACE
    } ISystemCPLUpdateVtbl;

    interface ISystemCPLUpdate
    {
        CONST_VTBL struct ISystemCPLUpdateVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISystemCPLUpdate_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define ISystemCPLUpdate_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define ISystemCPLUpdate_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define ISystemCPLUpdate_UpdateSystemInfo(This,pszDescription,pszSpeed,pszMemory,dwNumProcessors)	\
    (This)->lpVtbl -> UpdateSystemInfo(This,pszDescription,pszSpeed,pszMemory,dwNumProcessors)

#define ISystemCPLUpdate_UpdateLicensingInfo(This,dwLicensingStatus,dwGraceTimeRemainingMinutes,dwTotalGraceTimeDays,fIsGenuine)	\
    (This)->lpVtbl -> UpdateLicensingInfo(This,dwLicensingStatus,dwGraceTimeRemainingMinutes,dwTotalGraceTimeDays,fIsGenuine)

#define ISystemCPLUpdate_UpdateRatingsInfo(This,pszRatingsLink,pszRatingsText,hRatingsImage,uWinCRSLevel)	\
    (This)->lpVtbl -> UpdateRatingsInfo(This,pszRatingsLink,pszRatingsText,hRatingsImage,uWinCRSLevel)

#define ISystemCPLUpdate_UpdateComputerInfo(This)	\
    (This)->lpVtbl -> UpdateComputerInfo(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE ISystemCPLUpdate_UpdateSystemInfo_Proxy( 
    ISystemCPLUpdate __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszDescription,
    /* [string][in] */ LPCWSTR pszSpeed,
    /* [string][in] */ LPCWSTR pszMemory,
    /* [in] */ DWORD dwNumProcessors);


void __RPC_STUB ISystemCPLUpdate_UpdateSystemInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ISystemCPLUpdate_UpdateLicensingInfo_Proxy( 
    ISystemCPLUpdate __RPC_FAR * This,
    /* [in] */ DWORD dwLicensingStatus,
    /* [in] */ DWORD dwGraceTimeRemainingMinutes,
    /* [in] */ DWORD dwTotalGraceTimeDays,
    /* [in] */ BOOL fIsGenuine);


void __RPC_STUB ISystemCPLUpdate_UpdateLicensingInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ISystemCPLUpdate_UpdateRatingsInfo_Proxy( 
    ISystemCPLUpdate __RPC_FAR * This,
    /* [string][unique][in] */ LPCWSTR pszRatingsLink,
    /* [string][unique][in] */ LPCWSTR pszRatingsText,
    /* [unique][in] */ HBITMAP hRatingsImage,
    /* [in] */ USHORT uWinCRSLevel);


void __RPC_STUB ISystemCPLUpdate_UpdateRatingsInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ISystemCPLUpdate_UpdateComputerInfo_Proxy( 
    ISystemCPLUpdate __RPC_FAR * This);


void __RPC_STUB ISystemCPLUpdate_UpdateComputerInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __ISystemCPLUpdate_INTERFACE_DEFINED__ */


#ifndef __IComputerInfoAdvise_INTERFACE_DEFINED__
#define __IComputerInfoAdvise_INTERFACE_DEFINED__

/* interface IComputerInfoAdvise */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IComputerInfoAdvise;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4623BD61-5603-444f-824A-AAEBCEED93FA")
    IComputerInfoAdvise : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Advise( 
            /* [in] */ ISystemCPLUpdate __RPC_FAR *pUpdate,
            /* [out] */ DWORD __RPC_FAR *pdwCookie) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Unadvise( 
            /* [in] */ DWORD dwCookie) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IComputerInfoAdviseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IComputerInfoAdvise __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IComputerInfoAdvise __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IComputerInfoAdvise __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Advise )( 
            IComputerInfoAdvise __RPC_FAR * This,
            /* [in] */ ISystemCPLUpdate __RPC_FAR *pUpdate,
            /* [out] */ DWORD __RPC_FAR *pdwCookie);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Unadvise )( 
            IComputerInfoAdvise __RPC_FAR * This,
            /* [in] */ DWORD dwCookie);
        
        END_INTERFACE
    } IComputerInfoAdviseVtbl;

    interface IComputerInfoAdvise
    {
        CONST_VTBL struct IComputerInfoAdviseVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IComputerInfoAdvise_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IComputerInfoAdvise_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IComputerInfoAdvise_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IComputerInfoAdvise_Advise(This,pUpdate,pdwCookie)	\
    (This)->lpVtbl -> Advise(This,pUpdate,pdwCookie)

#define IComputerInfoAdvise_Unadvise(This,dwCookie)	\
    (This)->lpVtbl -> Unadvise(This,dwCookie)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IComputerInfoAdvise_Advise_Proxy( 
    IComputerInfoAdvise __RPC_FAR * This,
    /* [in] */ ISystemCPLUpdate __RPC_FAR *pUpdate,
    /* [out] */ DWORD __RPC_FAR *pdwCookie);


void __RPC_STUB IComputerInfoAdvise_Advise_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IComputerInfoAdvise_Unadvise_Proxy( 
    IComputerInfoAdvise __RPC_FAR * This,
    /* [in] */ DWORD dwCookie);


void __RPC_STUB IComputerInfoAdvise_Unadvise_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IComputerInfoAdvise_INTERFACE_DEFINED__ */


#ifndef __IComputerInfoChangeNotify_INTERFACE_DEFINED__
#define __IComputerInfoChangeNotify_INTERFACE_DEFINED__

/* interface IComputerInfoChangeNotify */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IComputerInfoChangeNotify;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0DF60D92-6818-46d6-B358-D66170DDE466")
    IComputerInfoChangeNotify : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE ComputerInfoChanged( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IComputerInfoChangeNotifyVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IComputerInfoChangeNotify __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IComputerInfoChangeNotify __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IComputerInfoChangeNotify __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ComputerInfoChanged )( 
            IComputerInfoChangeNotify __RPC_FAR * This);
        
        END_INTERFACE
    } IComputerInfoChangeNotifyVtbl;

    interface IComputerInfoChangeNotify
    {
        CONST_VTBL struct IComputerInfoChangeNotifyVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IComputerInfoChangeNotify_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IComputerInfoChangeNotify_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IComputerInfoChangeNotify_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IComputerInfoChangeNotify_ComputerInfoChanged(This)	\
    (This)->lpVtbl -> ComputerInfoChanged(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IComputerInfoChangeNotify_ComputerInfoChanged_Proxy( 
    IComputerInfoChangeNotify __RPC_FAR * This);


void __RPC_STUB IComputerInfoChangeNotify_ComputerInfoChanged_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IComputerInfoChangeNotify_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0456 */
/* [local] */ 

#define STR_FILE_SYS_BIND_DATA      L"File System Bind Data"


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0456_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0456_v0_0_s_ifspec;

#ifndef __IFileSystemBindData_INTERFACE_DEFINED__
#define __IFileSystemBindData_INTERFACE_DEFINED__

/* interface IFileSystemBindData */
/* [local][unique][uuid][object] */ 


EXTERN_C const IID IID_IFileSystemBindData;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("01E18D10-4D8B-11d2-855D-006008059367")
    IFileSystemBindData : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetFindData( 
            /* [in] */ const WIN32_FIND_DATAW __RPC_FAR *pfd) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFindData( 
            /* [out] */ WIN32_FIND_DATAW __RPC_FAR *pfd) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IFileSystemBindDataVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IFileSystemBindData __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IFileSystemBindData __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IFileSystemBindData __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFindData )( 
            IFileSystemBindData __RPC_FAR * This,
            /* [in] */ const WIN32_FIND_DATAW __RPC_FAR *pfd);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFindData )( 
            IFileSystemBindData __RPC_FAR * This,
            /* [out] */ WIN32_FIND_DATAW __RPC_FAR *pfd);
        
        END_INTERFACE
    } IFileSystemBindDataVtbl;

    interface IFileSystemBindData
    {
        CONST_VTBL struct IFileSystemBindDataVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IFileSystemBindData_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IFileSystemBindData_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IFileSystemBindData_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IFileSystemBindData_SetFindData(This,pfd)	\
    (This)->lpVtbl -> SetFindData(This,pfd)

#define IFileSystemBindData_GetFindData(This,pfd)	\
    (This)->lpVtbl -> GetFindData(This,pfd)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IFileSystemBindData_SetFindData_Proxy( 
    IFileSystemBindData __RPC_FAR * This,
    /* [in] */ const WIN32_FIND_DATAW __RPC_FAR *pfd);


void __RPC_STUB IFileSystemBindData_SetFindData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileSystemBindData_GetFindData_Proxy( 
    IFileSystemBindData __RPC_FAR * This,
    /* [out] */ WIN32_FIND_DATAW __RPC_FAR *pfd);


void __RPC_STUB IFileSystemBindData_GetFindData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IFileSystemBindData_INTERFACE_DEFINED__ */


#ifndef __IFileSystemBindData2_INTERFACE_DEFINED__
#define __IFileSystemBindData2_INTERFACE_DEFINED__

/* interface IFileSystemBindData2 */
/* [local][unique][uuid][object] */ 


EXTERN_C const IID IID_IFileSystemBindData2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3acf075f-71db-4afa-81f0-3fc4fdf2a5b8")
    IFileSystemBindData2 : public IFileSystemBindData
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetFileID( 
            /* [in] */ LARGE_INTEGER liFileID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFileID( 
            /* [out] */ LARGE_INTEGER __RPC_FAR *pliFileID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetJunctionCLSID( 
            /* [in] */ REFCLSID clsid) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetJunctionCLSID( 
            /* [out] */ CLSID __RPC_FAR *pclsid) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IFileSystemBindData2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IFileSystemBindData2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IFileSystemBindData2 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IFileSystemBindData2 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFindData )( 
            IFileSystemBindData2 __RPC_FAR * This,
            /* [in] */ const WIN32_FIND_DATAW __RPC_FAR *pfd);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFindData )( 
            IFileSystemBindData2 __RPC_FAR * This,
            /* [out] */ WIN32_FIND_DATAW __RPC_FAR *pfd);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFileID )( 
            IFileSystemBindData2 __RPC_FAR * This,
            /* [in] */ LARGE_INTEGER liFileID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFileID )( 
            IFileSystemBindData2 __RPC_FAR * This,
            /* [out] */ LARGE_INTEGER __RPC_FAR *pliFileID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetJunctionCLSID )( 
            IFileSystemBindData2 __RPC_FAR * This,
            /* [in] */ REFCLSID clsid);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetJunctionCLSID )( 
            IFileSystemBindData2 __RPC_FAR * This,
            /* [out] */ CLSID __RPC_FAR *pclsid);
        
        END_INTERFACE
    } IFileSystemBindData2Vtbl;

    interface IFileSystemBindData2
    {
        CONST_VTBL struct IFileSystemBindData2Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IFileSystemBindData2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IFileSystemBindData2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IFileSystemBindData2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IFileSystemBindData2_SetFindData(This,pfd)	\
    (This)->lpVtbl -> SetFindData(This,pfd)

#define IFileSystemBindData2_GetFindData(This,pfd)	\
    (This)->lpVtbl -> GetFindData(This,pfd)


#define IFileSystemBindData2_SetFileID(This,liFileID)	\
    (This)->lpVtbl -> SetFileID(This,liFileID)

#define IFileSystemBindData2_GetFileID(This,pliFileID)	\
    (This)->lpVtbl -> GetFileID(This,pliFileID)

#define IFileSystemBindData2_SetJunctionCLSID(This,clsid)	\
    (This)->lpVtbl -> SetJunctionCLSID(This,clsid)

#define IFileSystemBindData2_GetJunctionCLSID(This,pclsid)	\
    (This)->lpVtbl -> GetJunctionCLSID(This,pclsid)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IFileSystemBindData2_SetFileID_Proxy( 
    IFileSystemBindData2 __RPC_FAR * This,
    /* [in] */ LARGE_INTEGER liFileID);


void __RPC_STUB IFileSystemBindData2_SetFileID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileSystemBindData2_GetFileID_Proxy( 
    IFileSystemBindData2 __RPC_FAR * This,
    /* [out] */ LARGE_INTEGER __RPC_FAR *pliFileID);


void __RPC_STUB IFileSystemBindData2_GetFileID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileSystemBindData2_SetJunctionCLSID_Proxy( 
    IFileSystemBindData2 __RPC_FAR * This,
    /* [in] */ REFCLSID clsid);


void __RPC_STUB IFileSystemBindData2_SetJunctionCLSID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFileSystemBindData2_GetJunctionCLSID_Proxy( 
    IFileSystemBindData2 __RPC_FAR * This,
    /* [out] */ CLSID __RPC_FAR *pclsid);


void __RPC_STUB IFileSystemBindData2_GetJunctionCLSID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IFileSystemBindData2_INTERFACE_DEFINED__ */



#ifndef __ShellObjects_LIBRARY_DEFINED__
#define __ShellObjects_LIBRARY_DEFINED__

/* library ShellObjects */
/* [version][lcid][helpstring][uuid] */ 

#define SID_PublishingWizard CLSID_PublishingWizard

EXTERN_C const IID LIBID_ShellObjects;

EXTERN_C const CLSID CLSID_ShellDesktop;

#ifdef __cplusplus

class DECLSPEC_UUID("00021400-0000-0000-C000-000000000046")
ShellDesktop;
#endif

EXTERN_C const CLSID CLSID_ShellFSFolder;

#ifdef __cplusplus

class DECLSPEC_UUID("F3364BA0-65B9-11CE-A9BA-00AA004AE837")
ShellFSFolder;
#endif

EXTERN_C const CLSID CLSID_NetworkPlaces;

#ifdef __cplusplus

class DECLSPEC_UUID("208D2C60-3AEA-1069-A2D7-08002B30309D")
NetworkPlaces;
#endif

EXTERN_C const CLSID CLSID_ShellLink;

#ifdef __cplusplus

class DECLSPEC_UUID("00021401-0000-0000-C000-000000000046")
ShellLink;
#endif

EXTERN_C const CLSID CLSID_QueryCancelAutoPlay;

#ifdef __cplusplus

class DECLSPEC_UUID("331F1768-05A9-4ddd-B86E-DAE34DDC998A")
QueryCancelAutoPlay;
#endif

EXTERN_C const CLSID CLSID_DriveSizeCategorizer;

#ifdef __cplusplus

class DECLSPEC_UUID("94357B53-CA29-4b78-83AE-E8FE7409134F")
DriveSizeCategorizer;
#endif

EXTERN_C const CLSID CLSID_DriveTypeCategorizer;

#ifdef __cplusplus

class DECLSPEC_UUID("B0A8F3CF-4333-4bab-8873-1CCB1CADA48B")
DriveTypeCategorizer;
#endif

EXTERN_C const CLSID CLSID_FreeSpaceCategorizer;

#ifdef __cplusplus

class DECLSPEC_UUID("B5607793-24AC-44c7-82E2-831726AA6CB7")
FreeSpaceCategorizer;
#endif

EXTERN_C const CLSID CLSID_TimeCategorizer;

#ifdef __cplusplus

class DECLSPEC_UUID("3bb4118f-ddfd-4d30-a348-9fb5d6bf1afe")
TimeCategorizer;
#endif

EXTERN_C const CLSID CLSID_SizeCategorizer;

#ifdef __cplusplus

class DECLSPEC_UUID("55d7b852-f6d1-42f2-aa75-8728a1b2d264")
SizeCategorizer;
#endif

EXTERN_C const CLSID CLSID_AlphabeticalCategorizer;

#ifdef __cplusplus

class DECLSPEC_UUID("3c2654c6-7372-4f6b-b310-55d6128f49d2")
AlphabeticalCategorizer;
#endif

EXTERN_C const CLSID CLSID_MergedCategorizer;

#ifdef __cplusplus

class DECLSPEC_UUID("8e827c11-33e7-4bc1-b242-8cd9a1c2b304")
MergedCategorizer;
#endif

EXTERN_C const CLSID CLSID_ImageProperties;

#ifdef __cplusplus

class DECLSPEC_UUID("7ab770c7-0e23-4d7a-8aa2-19bfad479829")
ImageProperties;
#endif

EXTERN_C const CLSID CLSID_PropertiesUI;

#ifdef __cplusplus

class DECLSPEC_UUID("d912f8cf-0396-4915-884e-fb425d32943b")
PropertiesUI;
#endif

EXTERN_C const CLSID CLSID_UserNotification;

#ifdef __cplusplus

class DECLSPEC_UUID("0010890e-8789-413c-adbc-48f5b511b3af")
UserNotification;
#endif

EXTERN_C const CLSID CLSID_CDBurn;

#ifdef __cplusplus

class DECLSPEC_UUID("fbeb8a05-beee-4442-804e-409d6c4515e9")
CDBurn;
#endif

EXTERN_C const CLSID CLSID_TaskbarList;

#ifdef __cplusplus

class DECLSPEC_UUID("56FDF344-FD6D-11d0-958A-006097C9A090")
TaskbarList;
#endif

EXTERN_C const CLSID CLSID_StartMenuPin;

#ifdef __cplusplus

class DECLSPEC_UUID("a2a9545d-a0c2-42b4-9708-a0b2badd77c8")
StartMenuPin;
#endif

EXTERN_C const CLSID CLSID_WebWizardHost;

#ifdef __cplusplus

class DECLSPEC_UUID("c827f149-55c1-4d28-935e-57e47caed973")
WebWizardHost;
#endif

EXTERN_C const CLSID CLSID_PublishDropTarget;

#ifdef __cplusplus

class DECLSPEC_UUID("CC6EEFFB-43F6-46c5-9619-51D571967F7D")
PublishDropTarget;
#endif

EXTERN_C const CLSID CLSID_PublishingWizard;

#ifdef __cplusplus

class DECLSPEC_UUID("6b33163c-76a5-4b6c-bf21-45de9cd503a1")
PublishingWizard;
#endif

EXTERN_C const CLSID CLSID_InternetPrintOrdering;

#ifdef __cplusplus

class DECLSPEC_UUID("add36aa8-751a-4579-a266-d66f5202ccbb")
InternetPrintOrdering;
#endif

EXTERN_C const CLSID CLSID_FolderViewHost;

#ifdef __cplusplus

class DECLSPEC_UUID("20b1cb23-6968-4eb9-b7d4-a66d00d07cee")
FolderViewHost;
#endif

EXTERN_C const CLSID CLSID_ExplorerBrowser;

#ifdef __cplusplus

class DECLSPEC_UUID("71f96385-ddd6-48d3-a0c1-ae06e8b055fb")
ExplorerBrowser;
#endif

EXTERN_C const CLSID CLSID_ImageRecompress;

#ifdef __cplusplus

class DECLSPEC_UUID("6e33091c-d2f8-4740-b55e-2e11d1477a2c")
ImageRecompress;
#endif

EXTERN_C const CLSID CLSID_TrayBandSiteService;

#ifdef __cplusplus

class DECLSPEC_UUID("F60AD0A0-E5E1-45cb-B51A-E15B9F8B2934")
TrayBandSiteService;
#endif

EXTERN_C const CLSID CLSID_TrayDeskBand;

#ifdef __cplusplus

class DECLSPEC_UUID("E6442437-6C68-4f52-94DD-2CFED267EFB9")
TrayDeskBand;
#endif

EXTERN_C const CLSID CLSID_AttachmentServices;

#ifdef __cplusplus

class DECLSPEC_UUID("4125dd96-e03a-4103-8f70-e0597d803b9c")
AttachmentServices;
#endif

EXTERN_C const CLSID CLSID_DocPropShellExtension;

#ifdef __cplusplus

class DECLSPEC_UUID("883373C3-BF89-11D1-BE35-080036B11A03")
DocPropShellExtension;
#endif

EXTERN_C const CLSID CLSID_ShellItem;

#ifdef __cplusplus

class DECLSPEC_UUID("9ac9fbe1-e0a2-4ad6-b4ee-e212013ea917")
ShellItem;
#endif

EXTERN_C const CLSID CLSID_NamespaceWalker;

#ifdef __cplusplus

class DECLSPEC_UUID("72eb61e0-8672-4303-9175-f2e4c68b2e7c")
NamespaceWalker;
#endif

EXTERN_C const CLSID CLSID_FileOperation;

#ifdef __cplusplus

class DECLSPEC_UUID("3ad05575-8857-4850-9277-11b85bdb8e09")
FileOperation;
#endif

EXTERN_C const CLSID CLSID_FileOpenDialog;

#ifdef __cplusplus

class DECLSPEC_UUID("DC1C5A9C-E88A-4dde-A5A1-60F82A20AEF7")
FileOpenDialog;
#endif

EXTERN_C const CLSID CLSID_FileSaveDialog;

#ifdef __cplusplus

class DECLSPEC_UUID("C0B4E2F3-BA21-4773-8DBA-335EC946EB8B")
FileSaveDialog;
#endif

EXTERN_C const CLSID CLSID_KnownFolderManager;

#ifdef __cplusplus

class DECLSPEC_UUID("4df0c730-df9d-4ae3-9153-aa6b82e9795a")
KnownFolderManager;
#endif

EXTERN_C const CLSID CLSID_FSCopyHandler;

#ifdef __cplusplus

class DECLSPEC_UUID("D197380A-0A79-4dc8-A033-ED882C2FA14B")
FSCopyHandler;
#endif

EXTERN_C const CLSID CLSID_SharingConfigurationManager;

#ifdef __cplusplus

class DECLSPEC_UUID("49F371E1-8C5C-4d9c-9A3B-54A6827F513C")
SharingConfigurationManager;
#endif

EXTERN_C const CLSID CLSID_PreviousVersions;

#ifdef __cplusplus

class DECLSPEC_UUID("596AB062-B4D2-4215-9F74-E9109B0A8153")
PreviousVersions;
#endif

EXTERN_C const CLSID CLSID_NetworkConnections;

#ifdef __cplusplus

class DECLSPEC_UUID("7007ACC7-3202-11D1-AAD2-00805FC1270E")
NetworkConnections;
#endif

EXTERN_C const CLSID CLSID_NamespaceTreeControl;

#ifdef __cplusplus

class DECLSPEC_UUID("AE054212-3535-4430-83ED-D501AA6680E6")
NamespaceTreeControl;
#endif

EXTERN_C const CLSID CLSID_IENamespaceTreeControl;

#ifdef __cplusplus

class DECLSPEC_UUID("ACE52D03-E5CD-4b20-82FF-E71B11BEAE1D")
IENamespaceTreeControl;
#endif

EXTERN_C const CLSID CLSID_ScheduledTasks;

#ifdef __cplusplus

class DECLSPEC_UUID("D6277990-4C6A-11CF-8D87-00AA0060F5BF")
ScheduledTasks;
#endif

EXTERN_C const CLSID CLSID_ApplicationAssociationRegistration;

#ifdef __cplusplus

class DECLSPEC_UUID("591209c7-767b-42b2-9fba-44ee4615f2c7")
ApplicationAssociationRegistration;
#endif

EXTERN_C const CLSID CLSID_ApplicationAssociationRegistrationUI;

#ifdef __cplusplus

class DECLSPEC_UUID("1968106d-f3b5-44cf-890e-116fcb9ecef1")
ApplicationAssociationRegistrationUI;
#endif

EXTERN_C const CLSID CLSID_SearchFolderItemFactory;

#ifdef __cplusplus

class DECLSPEC_UUID("14010e02-bbbd-41f0-88e3-eda371216584")
SearchFolderItemFactory;
#endif

EXTERN_C const CLSID CLSID_OpenControlPanel;

#ifdef __cplusplus

class DECLSPEC_UUID("06622D85-6856-4460-8DE1-A81921B41C4B")
OpenControlPanel;
#endif

EXTERN_C const CLSID CLSID_ComputerInfoAdvise;

#ifdef __cplusplus

class DECLSPEC_UUID("00A77FF7-A514-493e-B721-CDF8CB0F5B59")
ComputerInfoAdvise;
#endif

EXTERN_C const CLSID CLSID_NetworkExplorerFolder;

#ifdef __cplusplus

class DECLSPEC_UUID("F02C1A0D-BE21-4350-88B0-7367FC96EF3C")
NetworkExplorerFolder;
#endif
#endif /* __ShellObjects_LIBRARY_DEFINED__ */

/* interface __MIDL_itf_shobjidl_0458 */
/* [local] */ 

#if (NTDDI_VERSION >= NTDDI_LONGHORN)
SHSTDAPI SHGetTemporaryPropertyForItem(__in IShellItem *psi, __in REFPROPERTYKEY propkey, __out PROPVARIANT *ppropvar);
SHSTDAPI SHSetTemporaryPropertyForItem(__in IShellItem *psi, __in REFPROPERTYKEY propkey, __in REFPROPVARIANT propvar);
#endif  // NTDDI_LONGHORN
#if (NTDDI_VERSION >= NTDDI_LONGHORN)


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0458_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0458_v0_0_s_ifspec;

#ifndef __IAssocHandlerInvoker_INTERFACE_DEFINED__
#define __IAssocHandlerInvoker_INTERFACE_DEFINED__

/* interface IAssocHandlerInvoker */
/* [local][unique][object][uuid][helpstring] */ 


EXTERN_C const IID IID_IAssocHandlerInvoker;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("92218CAB-ECAA-4335-8133-807FD234C2EE")
    IAssocHandlerInvoker : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SupportsSelection( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Invoke( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAssocHandlerInvokerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAssocHandlerInvoker __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAssocHandlerInvoker __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAssocHandlerInvoker __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SupportsSelection )( 
            IAssocHandlerInvoker __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAssocHandlerInvoker __RPC_FAR * This);
        
        END_INTERFACE
    } IAssocHandlerInvokerVtbl;

    interface IAssocHandlerInvoker
    {
        CONST_VTBL struct IAssocHandlerInvokerVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAssocHandlerInvoker_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAssocHandlerInvoker_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAssocHandlerInvoker_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAssocHandlerInvoker_SupportsSelection(This)	\
    (This)->lpVtbl -> SupportsSelection(This)

#define IAssocHandlerInvoker_Invoke(This)	\
    (This)->lpVtbl -> Invoke(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAssocHandlerInvoker_SupportsSelection_Proxy( 
    IAssocHandlerInvoker __RPC_FAR * This);


void __RPC_STUB IAssocHandlerInvoker_SupportsSelection_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAssocHandlerInvoker_Invoke_Proxy( 
    IAssocHandlerInvoker __RPC_FAR * This);


void __RPC_STUB IAssocHandlerInvoker_Invoke_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAssocHandlerInvoker_INTERFACE_DEFINED__ */


#ifndef __IAssocHandler_INTERFACE_DEFINED__
#define __IAssocHandler_INTERFACE_DEFINED__

/* interface IAssocHandler */
/* [local][unique][object][uuid][helpstring] */ 


EXTERN_C const IID IID_IAssocHandler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F04061AC-1659-4a3f-A954-775AA57FC083")
    IAssocHandler : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetName( 
            /* [out][string] */ LPWSTR __RPC_FAR *ppsz) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetUIName( 
            /* [out][string] */ LPWSTR __RPC_FAR *ppsz) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetIconLocation( 
            /* [out][string] */ LPWSTR __RPC_FAR *ppszPath,
            /* [out] */ int __RPC_FAR *pIndex) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsRecommended( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MakeDefault( 
            /* [string][in] */ LPCWSTR pszDescription) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ IDataObject __RPC_FAR *pdo) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateInvoker( 
            /* [in] */ IDataObject __RPC_FAR *pdo,
            /* [out] */ IAssocHandlerInvoker __RPC_FAR *__RPC_FAR *ppInvoker) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAssocHandlerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAssocHandler __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAssocHandler __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAssocHandler __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetName )( 
            IAssocHandler __RPC_FAR * This,
            /* [out][string] */ LPWSTR __RPC_FAR *ppsz);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetUIName )( 
            IAssocHandler __RPC_FAR * This,
            /* [out][string] */ LPWSTR __RPC_FAR *ppsz);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIconLocation )( 
            IAssocHandler __RPC_FAR * This,
            /* [out][string] */ LPWSTR __RPC_FAR *ppszPath,
            /* [out] */ int __RPC_FAR *pIndex);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *IsRecommended )( 
            IAssocHandler __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *MakeDefault )( 
            IAssocHandler __RPC_FAR * This,
            /* [string][in] */ LPCWSTR pszDescription);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAssocHandler __RPC_FAR * This,
            /* [in] */ IDataObject __RPC_FAR *pdo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CreateInvoker )( 
            IAssocHandler __RPC_FAR * This,
            /* [in] */ IDataObject __RPC_FAR *pdo,
            /* [out] */ IAssocHandlerInvoker __RPC_FAR *__RPC_FAR *ppInvoker);
        
        END_INTERFACE
    } IAssocHandlerVtbl;

    interface IAssocHandler
    {
        CONST_VTBL struct IAssocHandlerVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAssocHandler_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAssocHandler_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAssocHandler_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAssocHandler_GetName(This,ppsz)	\
    (This)->lpVtbl -> GetName(This,ppsz)

#define IAssocHandler_GetUIName(This,ppsz)	\
    (This)->lpVtbl -> GetUIName(This,ppsz)

#define IAssocHandler_GetIconLocation(This,ppszPath,pIndex)	\
    (This)->lpVtbl -> GetIconLocation(This,ppszPath,pIndex)

#define IAssocHandler_IsRecommended(This)	\
    (This)->lpVtbl -> IsRecommended(This)

#define IAssocHandler_MakeDefault(This,pszDescription)	\
    (This)->lpVtbl -> MakeDefault(This,pszDescription)

#define IAssocHandler_Invoke(This,pdo)	\
    (This)->lpVtbl -> Invoke(This,pdo)

#define IAssocHandler_CreateInvoker(This,pdo,ppInvoker)	\
    (This)->lpVtbl -> CreateInvoker(This,pdo,ppInvoker)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAssocHandler_GetName_Proxy( 
    IAssocHandler __RPC_FAR * This,
    /* [out][string] */ LPWSTR __RPC_FAR *ppsz);


void __RPC_STUB IAssocHandler_GetName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAssocHandler_GetUIName_Proxy( 
    IAssocHandler __RPC_FAR * This,
    /* [out][string] */ LPWSTR __RPC_FAR *ppsz);


void __RPC_STUB IAssocHandler_GetUIName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAssocHandler_GetIconLocation_Proxy( 
    IAssocHandler __RPC_FAR * This,
    /* [out][string] */ LPWSTR __RPC_FAR *ppszPath,
    /* [out] */ int __RPC_FAR *pIndex);


void __RPC_STUB IAssocHandler_GetIconLocation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAssocHandler_IsRecommended_Proxy( 
    IAssocHandler __RPC_FAR * This);


void __RPC_STUB IAssocHandler_IsRecommended_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAssocHandler_MakeDefault_Proxy( 
    IAssocHandler __RPC_FAR * This,
    /* [string][in] */ LPCWSTR pszDescription);


void __RPC_STUB IAssocHandler_MakeDefault_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAssocHandler_Invoke_Proxy( 
    IAssocHandler __RPC_FAR * This,
    /* [in] */ IDataObject __RPC_FAR *pdo);


void __RPC_STUB IAssocHandler_Invoke_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAssocHandler_CreateInvoker_Proxy( 
    IAssocHandler __RPC_FAR * This,
    /* [in] */ IDataObject __RPC_FAR *pdo,
    /* [out] */ IAssocHandlerInvoker __RPC_FAR *__RPC_FAR *ppInvoker);


void __RPC_STUB IAssocHandler_CreateInvoker_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAssocHandler_INTERFACE_DEFINED__ */


#ifndef __IEnumAssocHandlers_INTERFACE_DEFINED__
#define __IEnumAssocHandlers_INTERFACE_DEFINED__

/* interface IEnumAssocHandlers */
/* [local][unique][object][uuid][helpstring] */ 


EXTERN_C const IID IID_IEnumAssocHandlers;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("973810ae-9599-4b88-9e4d-6ee98c9552da")
    IEnumAssocHandlers : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Next( 
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ IAssocHandler __RPC_FAR *__RPC_FAR *rgelt,
            /* [out] */ ULONG __RPC_FAR *pceltFetched) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumAssocHandlersVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IEnumAssocHandlers __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IEnumAssocHandlers __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IEnumAssocHandlers __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Next )( 
            IEnumAssocHandlers __RPC_FAR * This,
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ IAssocHandler __RPC_FAR *__RPC_FAR *rgelt,
            /* [out] */ ULONG __RPC_FAR *pceltFetched);
        
        END_INTERFACE
    } IEnumAssocHandlersVtbl;

    interface IEnumAssocHandlers
    {
        CONST_VTBL struct IEnumAssocHandlersVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumAssocHandlers_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IEnumAssocHandlers_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IEnumAssocHandlers_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IEnumAssocHandlers_Next(This,celt,rgelt,pceltFetched)	\
    (This)->lpVtbl -> Next(This,celt,rgelt,pceltFetched)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IEnumAssocHandlers_Next_Proxy( 
    IEnumAssocHandlers __RPC_FAR * This,
    /* [in] */ ULONG celt,
    /* [length_is][size_is][out] */ IAssocHandler __RPC_FAR *__RPC_FAR *rgelt,
    /* [out] */ ULONG __RPC_FAR *pceltFetched);


void __RPC_STUB IEnumAssocHandlers_Next_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IEnumAssocHandlers_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0461 */
/* [local] */ 


enum tagASSOC_FILTER
    {	ASSOC_FILTER_NONE	= 0,
	ASSOC_FILTER_RECOMMENDED	= 0x1
    };
typedef int ASSOC_FILTER;

SHSTDAPI SHAssocEnumHandlers(LPCWSTR pszExtra, ASSOC_FILTER afFilter, __deref_out IEnumAssocHandlers **ppEnumHandler);
#endif  // NTDDI_LONGHORN
#endif // !__shobjidlp_h__ ;internal


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0461_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0461_v0_0_s_ifspec;

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     unsigned long __RPC_FAR *, unsigned long            , BSTR __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  BSTR_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, BSTR __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  BSTR_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, BSTR __RPC_FAR * ); 
void                      __RPC_USER  BSTR_UserFree(     unsigned long __RPC_FAR *, BSTR __RPC_FAR * ); 

unsigned long             __RPC_USER  HACCEL_UserSize(     unsigned long __RPC_FAR *, unsigned long            , HACCEL __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  HACCEL_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, HACCEL __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  HACCEL_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, HACCEL __RPC_FAR * ); 
void                      __RPC_USER  HACCEL_UserFree(     unsigned long __RPC_FAR *, HACCEL __RPC_FAR * ); 

unsigned long             __RPC_USER  HBITMAP_UserSize(     unsigned long __RPC_FAR *, unsigned long            , HBITMAP __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  HBITMAP_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, HBITMAP __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  HBITMAP_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, HBITMAP __RPC_FAR * ); 
void                      __RPC_USER  HBITMAP_UserFree(     unsigned long __RPC_FAR *, HBITMAP __RPC_FAR * ); 

unsigned long             __RPC_USER  HGLOBAL_UserSize(     unsigned long __RPC_FAR *, unsigned long            , HGLOBAL __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  HGLOBAL_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, HGLOBAL __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  HGLOBAL_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, HGLOBAL __RPC_FAR * ); 
void                      __RPC_USER  HGLOBAL_UserFree(     unsigned long __RPC_FAR *, HGLOBAL __RPC_FAR * ); 

unsigned long             __RPC_USER  HICON_UserSize(     unsigned long __RPC_FAR *, unsigned long            , HICON __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  HICON_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, HICON __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  HICON_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, HICON __RPC_FAR * ); 
void                      __RPC_USER  HICON_UserFree(     unsigned long __RPC_FAR *, HICON __RPC_FAR * ); 

unsigned long             __RPC_USER  HMENU_UserSize(     unsigned long __RPC_FAR *, unsigned long            , HMENU __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  HMENU_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, HMENU __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  HMENU_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, HMENU __RPC_FAR * ); 
void                      __RPC_USER  HMENU_UserFree(     unsigned long __RPC_FAR *, HMENU __RPC_FAR * ); 

unsigned long             __RPC_USER  HWND_UserSize(     unsigned long __RPC_FAR *, unsigned long            , HWND __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  HWND_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, HWND __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  HWND_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, HWND __RPC_FAR * ); 
void                      __RPC_USER  HWND_UserFree(     unsigned long __RPC_FAR *, HWND __RPC_FAR * ); 

unsigned long             __RPC_USER  LPSAFEARRAY_UserSize(     unsigned long __RPC_FAR *, unsigned long            , LPSAFEARRAY __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  LPSAFEARRAY_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, LPSAFEARRAY __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  LPSAFEARRAY_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, LPSAFEARRAY __RPC_FAR * ); 
void                      __RPC_USER  LPSAFEARRAY_UserFree(     unsigned long __RPC_FAR *, LPSAFEARRAY __RPC_FAR * ); 

unsigned long             __RPC_USER  PCIDLIST_ABSOLUTE_UserSize(     unsigned long __RPC_FAR *, unsigned long            , PCIDLIST_ABSOLUTE __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  PCIDLIST_ABSOLUTE_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, PCIDLIST_ABSOLUTE __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  PCIDLIST_ABSOLUTE_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, PCIDLIST_ABSOLUTE __RPC_FAR * ); 
void                      __RPC_USER  PCIDLIST_ABSOLUTE_UserFree(     unsigned long __RPC_FAR *, PCIDLIST_ABSOLUTE __RPC_FAR * ); 

unsigned long             __RPC_USER  PCUIDLIST_RELATIVE_UserSize(     unsigned long __RPC_FAR *, unsigned long            , PCUIDLIST_RELATIVE __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  PCUIDLIST_RELATIVE_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, PCUIDLIST_RELATIVE __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  PCUIDLIST_RELATIVE_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, PCUIDLIST_RELATIVE __RPC_FAR * ); 
void                      __RPC_USER  PCUIDLIST_RELATIVE_UserFree(     unsigned long __RPC_FAR *, PCUIDLIST_RELATIVE __RPC_FAR * ); 

unsigned long             __RPC_USER  PCUITEMID_CHILD_UserSize(     unsigned long __RPC_FAR *, unsigned long            , PCUITEMID_CHILD __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  PCUITEMID_CHILD_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, PCUITEMID_CHILD __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  PCUITEMID_CHILD_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, PCUITEMID_CHILD __RPC_FAR * ); 
void                      __RPC_USER  PCUITEMID_CHILD_UserFree(     unsigned long __RPC_FAR *, PCUITEMID_CHILD __RPC_FAR * ); 

unsigned long             __RPC_USER  PIDLIST_ABSOLUTE_UserSize(     unsigned long __RPC_FAR *, unsigned long            , PIDLIST_ABSOLUTE __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  PIDLIST_ABSOLUTE_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, PIDLIST_ABSOLUTE __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  PIDLIST_ABSOLUTE_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, PIDLIST_ABSOLUTE __RPC_FAR * ); 
void                      __RPC_USER  PIDLIST_ABSOLUTE_UserFree(     unsigned long __RPC_FAR *, PIDLIST_ABSOLUTE __RPC_FAR * ); 

unsigned long             __RPC_USER  PIDLIST_RELATIVE_UserSize(     unsigned long __RPC_FAR *, unsigned long            , PIDLIST_RELATIVE __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  PIDLIST_RELATIVE_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, PIDLIST_RELATIVE __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  PIDLIST_RELATIVE_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, PIDLIST_RELATIVE __RPC_FAR * ); 
void                      __RPC_USER  PIDLIST_RELATIVE_UserFree(     unsigned long __RPC_FAR *, PIDLIST_RELATIVE __RPC_FAR * ); 

unsigned long             __RPC_USER  PITEMID_CHILD_UserSize(     unsigned long __RPC_FAR *, unsigned long            , PITEMID_CHILD __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  PITEMID_CHILD_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, PITEMID_CHILD __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  PITEMID_CHILD_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, PITEMID_CHILD __RPC_FAR * ); 
void                      __RPC_USER  PITEMID_CHILD_UserFree(     unsigned long __RPC_FAR *, PITEMID_CHILD __RPC_FAR * ); 

unsigned long             __RPC_USER  VARIANT_UserSize(     unsigned long __RPC_FAR *, unsigned long            , VARIANT __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  VARIANT_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, VARIANT __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  VARIANT_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, VARIANT __RPC_FAR * ); 
void                      __RPC_USER  VARIANT_UserFree(     unsigned long __RPC_FAR *, VARIANT __RPC_FAR * ); 

/* [local] */ HRESULT STDMETHODCALLTYPE IEnumIDList_Next_Proxy( 
    IEnumIDList __RPC_FAR * This,
    /* [in] */ ULONG celt,
    /* [length_is][size_is][out] */ PITEMID_CHILD __RPC_FAR *rgelt,
    /* [out] */ ULONG __RPC_FAR *pceltFetched);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IEnumIDList_Next_Stub( 
    IEnumIDList __RPC_FAR * This,
    /* [in] */ ULONG celt,
    /* [length_is][size_is][out] */ PITEMID_CHILD __RPC_FAR *rgelt,
    /* [out] */ ULONG __RPC_FAR *pceltFetched);

/* [local] */ HRESULT STDMETHODCALLTYPE IEnumObjects_Next_Proxy( 
    IEnumObjects __RPC_FAR * This,
    /* [in] */ ULONG celt,
    /* [in] */ REFIID riid,
    /* [iid_is][length_is][size_is][out] */ void __RPC_FAR *__RPC_FAR *rgelt,
    /* [out] */ ULONG __RPC_FAR *pceltFetched);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IEnumObjects_Next_Stub( 
    IEnumObjects __RPC_FAR * This,
    /* [in] */ ULONG celt,
    /* [in] */ REFIID riid,
    /* [iid_is][size_is][out] */ void __RPC_FAR *__RPC_FAR *rgelt,
    /* [out] */ ULONG __RPC_FAR *pceltFetched);

/* [local] */ HRESULT STDMETHODCALLTYPE IModalWindow_Show_Proxy( 
    IModalWindow __RPC_FAR * This,
    /* [in] */ HWND hwndParent);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IModalWindow_Show_Stub( 
    IModalWindow __RPC_FAR * This,
    /* [in] */ HWND hwndParent);



/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\wm7\sfone7\Include\simmgr.h ===
/*++
THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF
ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO
THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A
PARTICULAR PURPOSE.
Copyright (c) Microsoft Corporation. All rights reserved.

-----------------------------------------------------------------------------

@doc EXTERNAL

@module SIMMGR.H - SIM Manager |

SIM Manager is an API set that allows access to information stored on the SIM Card


-----------------------------------------------------------------------------

--*/


#ifndef _SIMMGR_H_
#define _SIMMGR_H_


#include <windows.h>

#ifdef __cplusplus
extern "C" {
#endif


// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @constants Error Class | Each SIM error falls into a general error class bucket
//
// @comm In SIM Manager, the low order 16 bits are divided into an 8-bit error class and
//       an 8-bit error value.  Use the SIMERRORCLASS macro to obtain the error
//       class from a SIM HRESULT.
//
// -----------------------------------------------------------------------------
#define SIM_ERRORCLASS_NONE                         0x00  // @constdefine Misc error
#define SIM_ERRORCLASS_PASSWORD                     0x01  // @constdefine Unspecified phone failure
#define SIM_ERRORCLASS_SIM                          0x02  // @constdefine Problem with the SIM
#define SIM_ERRORCLASS_STORAGE                      0x03  // @constdefine Error relating to storage

#define MAKE_SIMERROR(errclass,code) \
    ( (unsigned long)(errclass)<<8) | ((unsigned long)(code) )

#define SIMERRORCLASS(simerror) \
	((unsigned long) (((simerror)>>8) & 0xff))

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @constants Error | Various errors
//
// @comm None
//
// -----------------------------------------------------------------------------
#define FACILITY_SIM                    0x800

#define SIM_E_SIMFAILURE                (MAKE_HRESULT(SEVERITY_ERROR, FACILITY_SIM, MAKE_SIMERROR(SIM_ERRORCLASS_SIM,0x01)))  // @constdefine SIM failure was detected
#define SIM_E_SIMBUSY                   (MAKE_HRESULT(SEVERITY_ERROR, FACILITY_SIM, MAKE_SIMERROR(SIM_ERRORCLASS_SIM,0x02)))  // @constdefine SIM is busy
#define SIM_E_SIMWRONG                  (MAKE_HRESULT(SEVERITY_ERROR, FACILITY_SIM, MAKE_SIMERROR(SIM_ERRORCLASS_SIM,0x03)))  // @constdefine Inorrect SIM was inserted
#define SIM_E_NOSIMMSGSTORAGE           (MAKE_HRESULT(SEVERITY_ERROR, FACILITY_SIM, MAKE_SIMERROR(SIM_ERRORCLASS_SIM,0x04)))  // @constdefine SIM isn't capable of storing messages
#define SIM_E_SIMTOOLKITBUSY            (MAKE_HRESULT(SEVERITY_ERROR, FACILITY_SIM, MAKE_SIMERROR(SIM_ERRORCLASS_SIM,0x05)))  // @constdefine SIM Application Toolkit is busy
#define SIM_E_SIMDOWNLOADERROR          (MAKE_HRESULT(SEVERITY_ERROR, FACILITY_SIM, MAKE_SIMERROR(SIM_ERRORCLASS_SIM,0x06)))  // @constdefine SIM data download error
#define SIM_E_SIMNOTINSERTED            (MAKE_HRESULT(SEVERITY_ERROR, FACILITY_SIM, MAKE_SIMERROR(SIM_ERRORCLASS_SIM,0x07)))  // @constdefine SIM isn't inserted into the phone
#define SIM_E_PHSIMPINREQUIRED          (MAKE_HRESULT(SEVERITY_ERROR, FACILITY_SIM, MAKE_SIMERROR(SIM_ERRORCLASS_PASSWORD,0x20)))  // @constdefine PH-SIM PIN is required to perform this operation
#define SIM_E_PHFSIMPINREQUIRED         (MAKE_HRESULT(SEVERITY_ERROR, FACILITY_SIM, MAKE_SIMERROR(SIM_ERRORCLASS_PASSWORD,0x21)))  // @constdefine PH-FSIM PIN is required to perform this operation
#define SIM_E_PHFSIMPUKREQUIRED         (MAKE_HRESULT(SEVERITY_ERROR, FACILITY_SIM, MAKE_SIMERROR(SIM_ERRORCLASS_PASSWORD,0x22)))  // @constdefine PH-FSIM PUK is required to perform this operation
#define SIM_E_SIMPINREQUIRED            (MAKE_HRESULT(SEVERITY_ERROR, FACILITY_SIM, MAKE_SIMERROR(SIM_ERRORCLASS_PASSWORD,0x23)))  // @constdefine SIM PIN is required to perform this operation
#define SIM_E_SIMPUKREQUIRED            (MAKE_HRESULT(SEVERITY_ERROR, FACILITY_SIM, MAKE_SIMERROR(SIM_ERRORCLASS_PASSWORD,0x24)))  // @constdefine SIM PUK is required to perform this operation
#define SIM_E_INCORRECTPASSWORD         (MAKE_HRESULT(SEVERITY_ERROR, FACILITY_SIM, MAKE_SIMERROR(SIM_ERRORCLASS_PASSWORD,0x25)))  // @constdefine Incorrect password was supplied
#define SIM_E_SIMPIN2REQUIRED           (MAKE_HRESULT(SEVERITY_ERROR, FACILITY_SIM, MAKE_SIMERROR(SIM_ERRORCLASS_PASSWORD,0x26)))  // @constdefine SIM PIN2 is required to perform this operation
#define SIM_E_SIMPUK2REQUIRED           (MAKE_HRESULT(SEVERITY_ERROR, FACILITY_SIM, MAKE_SIMERROR(SIM_ERRORCLASS_PASSWORD,0x27)))  // @constdefine SIM PUK2 is required to perform this operation
#define SIM_E_NETWKPINREQUIRED          (MAKE_HRESULT(SEVERITY_ERROR, FACILITY_SIM, MAKE_SIMERROR(SIM_ERRORCLASS_PASSWORD,0x28)))  // @constdefine Network Personalization PIN is required to perform this operation
#define SIM_E_NETWKPUKREQUIRED          (MAKE_HRESULT(SEVERITY_ERROR, FACILITY_SIM, MAKE_SIMERROR(SIM_ERRORCLASS_PASSWORD,0x29)))  // @constdefine Network Personalization PUK is required to perform this operation
#define SIM_E_SUBSETPINREQUIRED         (MAKE_HRESULT(SEVERITY_ERROR, FACILITY_SIM, MAKE_SIMERROR(SIM_ERRORCLASS_PASSWORD,0x2A)))  // @constdefine Network Subset Personalization PIN is required to perform this operation
#define SIM_E_SUBSETPUKREQUIRED         (MAKE_HRESULT(SEVERITY_ERROR, FACILITY_SIM, MAKE_SIMERROR(SIM_ERRORCLASS_PASSWORD,0x2B)))  // @constdefine Network Subset Personalization PUK is required to perform this operation
#define SIM_E_SVCPINREQUIRED            (MAKE_HRESULT(SEVERITY_ERROR, FACILITY_SIM, MAKE_SIMERROR(SIM_ERRORCLASS_PASSWORD,0x2C)))  // @constdefine Service Provider Personalization PIN is required to perform this operation
#define SIM_E_SVCPUKREQUIRED            (MAKE_HRESULT(SEVERITY_ERROR, FACILITY_SIM, MAKE_SIMERROR(SIM_ERRORCLASS_PASSWORD,0x2D)))  // @constdefine Service Provider Personalization PUK is required to perform this operation
#define SIM_E_CORPPINREQUIRED           (MAKE_HRESULT(SEVERITY_ERROR, FACILITY_SIM, MAKE_SIMERROR(SIM_ERRORCLASS_PASSWORD,0x2E)))  // @constdefine Corporate Personalization PIN is required to perform this operation
#define SIM_E_CORPPUKREQUIRED           (MAKE_HRESULT(SEVERITY_ERROR, FACILITY_SIM, MAKE_SIMERROR(SIM_ERRORCLASS_PASSWORD,0x2F)))  // @constdefine Corporate Personalization PUK is required to perform this operation
#define SIM_E_MEMORYFULL                (MAKE_HRESULT(SEVERITY_ERROR, FACILITY_SIM, MAKE_SIMERROR(SIM_ERRORCLASS_STORAGE,0x40)))  // @constdefine Storage memory is full
#define SIM_E_INVALIDINDEX              (MAKE_HRESULT(SEVERITY_ERROR, FACILITY_SIM, MAKE_SIMERROR(SIM_ERRORCLASS_STORAGE,0x41)))  // @constdefine Invalid storage index was supplied
#define SIM_E_NOTFOUND                  (MAKE_HRESULT(SEVERITY_ERROR, FACILITY_SIM, MAKE_SIMERROR(SIM_ERRORCLASS_STORAGE,0x42)))  // @constdefine A requested storage entry was not found
#define SIM_E_MEMORYFAILURE             (MAKE_HRESULT(SEVERITY_ERROR, FACILITY_SIM, MAKE_SIMERROR(SIM_ERRORCLASS_STORAGE,0x43)))  // @constdefine Storage memory failure
#define SIM_E_SIMMSGSTORAGEFULL         (MAKE_HRESULT(SEVERITY_ERROR, FACILITY_SIM, MAKE_SIMERROR(SIM_ERRORCLASS_STORAGE,0x44)))  // @constdefine Message storage on the SIM is full
#define SIM_E_EMPTYINDEX                (MAKE_HRESULT(SEVERITY_ERROR, FACILITY_SIM, MAKE_SIMERROR(SIM_ERRORCLASS_STORAGE,0x45)))  // @constdefine Storage location is empty
#define SIM_E_TEXTSTRINGTOOLONG         (MAKE_HRESULT(SEVERITY_ERROR, FACILITY_SIM, MAKE_SIMERROR(SIM_ERRORCLASS_STORAGE,0x46)))  // @constdefine Supplied text string is too long
#define SIM_E_DIALSTRINGTOOLONG         (MAKE_HRESULT(SEVERITY_ERROR, FACILITY_SIM, MAKE_SIMERROR(SIM_ERRORCLASS_STORAGE,0x47)))  // @constdefine Supplied dial string contains invalid characters
#define SIM_E_NOTREADY                  (MAKE_HRESULT(SEVERITY_ERROR, FACILITY_SIM, MAKE_SIMERROR(SIM_ERRORCLASS_NONE,0x60)))  // @constdefine SIM isn't yet ready to perform the requested operation
#define SIM_E_SECURITYFAILURE           (MAKE_HRESULT(SEVERITY_ERROR, FACILITY_SIM, MAKE_SIMERROR(SIM_ERRORCLASS_NONE,0x61)))  // @constdefine SIM isn't yet ready to perform the requested operation
#define SIM_E_BUFFERTOOSMALL            (MAKE_HRESULT(SEVERITY_ERROR, FACILITY_SIM, MAKE_SIMERROR(SIM_ERRORCLASS_NONE,0x62)))  // @constdefine Buffer too small
#define SIM_E_NOTTEXTMESSAGE            (MAKE_HRESULT(SEVERITY_ERROR, FACILITY_SIM, MAKE_SIMERROR(SIM_ERRORCLASS_NONE,0x63)))  // @constdefine Requested SMS message is not a text message
#define SIM_E_NOSIM                     (MAKE_HRESULT(SEVERITY_ERROR, FACILITY_SIM, MAKE_SIMERROR(SIM_ERRORCLASS_NONE,0x64)))  // @constdefine Device doesn't have a SIM
#define SIM_E_NETWORKERROR              (MAKE_HRESULT(SEVERITY_ERROR, FACILITY_SIM, MAKE_SIMERROR(SIM_ERRORCLASS_NONE,0x65)))  // @constdefine There was a network error
#define SIM_E_MOBILEERROR               (MAKE_HRESULT(SEVERITY_ERROR, FACILITY_SIM, MAKE_SIMERROR(SIM_ERRORCLASS_NONE,0x66)))  // @constdefine Mobile error
#define SIM_E_UNSUPPORTED               (MAKE_HRESULT(SEVERITY_ERROR, FACILITY_SIM, MAKE_SIMERROR(SIM_ERRORCLASS_NONE,0x67)))  // @constdefine The command is unsupported
#define SIM_E_BADPARAM                  (MAKE_HRESULT(SEVERITY_ERROR, FACILITY_SIM, MAKE_SIMERROR(SIM_ERRORCLASS_NONE,0x68)))  // @constdefine Bad parameter
#define SIM_E_UNDETERMINED              (MAKE_HRESULT(SEVERITY_ERROR, FACILITY_SIM, MAKE_SIMERROR(SIM_ERRORCLASS_NONE,0x69)))  // @constdefine Undetermined error
#define SIM_E_RADIONOTPRESENT           (MAKE_HRESULT(SEVERITY_ERROR, FACILITY_SIM, MAKE_SIMERROR(SIM_ERRORCLASS_NONE,0x6A)))  // @constdefine The Radio is not present
#define SIM_E_RADIOOFF                  (MAKE_HRESULT(SEVERITY_ERROR, FACILITY_SIM, MAKE_SIMERROR(SIM_ERRORCLASS_NONE,0x6B)))  // @constdefine The Radio is off

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @constants Callback | Various notifications that are passed to the callback
//
// @comm None
//
// -----------------------------------------------------------------------------
#define SIM_NOTIFY_CARD_REMOVED         (0x100)          // @constdefine SIM card was removed; lpData is NULL
#define SIM_NOTIFY_FILE_REFRESH         (0x101)          // @constdefine Files on the SIM were refreshed; lpData points to a SIMFILEREFRESH structure
#define SIM_NOTIFY_MSG_STORED           (0x102)          // @constdefine A message was stored to the SIM; lpData points to a SIMMESSAGECHANGE structure
#define SIM_NOTIFY_MSG_DELETED          (0x103)          // @constdefine A message was removed from the SIM; lpData points to a SIMMESSAGECHANGE structure
#define SIM_NOTIFY_PBE_STORED           (0x104)          // @constdefine A phone book entry was stored to the SIM; lpData points to a SIMPBECHANGE structure
#define SIM_NOTIFY_PBE_DELETED          (0x105)          // @constdefine A phone book entry was removed from the SIM; lpData points to a SIMPBECHANGE structure
#define SIM_NOTIFY_MSG_RECEIVED         (0x106)          // @constdefine Class 2 SMS was sent directly to the SIM; lpData points to a SIMMESSAGECHANGE structure
#define SIM_NOTIFY_RADIOOFF             (0x107)          // @constdefine The Radio has been turned off but AT interpreter is still on; lpData is NULL
#define SIM_NOTIFY_RADIOON              (0x108)          // @constdefine The Radio is present and is now on; lpData is NULL
#define SIM_NOTIFY_RADIOPRESENT         (0x109)          // @constdefine A Radio Module/Driver has been installed; lpData is points to a DWORD which is 0 if the radio is OFF and 1 if the radio is ON
#define SIM_NOTIFY_RADIOREMOVED         (0x10A)          // @constdefine A Radio Module/Driver has been removed; lpData is NULL
#define SIM_NOTIFY_SMSSTORAGEFULL       (0x10B)          // @constdefine SIM SMS Store is full; lpData points to a SIMSMSSTORAGESTATUS structure. Only supports SIM_SMSSTORAGE_SIM
#define SIM_NOTIFY_PBE_CHANGE_ALL       (0x10C)          // @constdefine SIM phone book entries were changed

// Parameter flags for SimInitialize
#define SIM_INIT_NONE                   (0x00000000)     // @constdefine Do not send any notifications
#define SIM_INIT_SIMCARD_NOTIFICATIONS  (0x00000001)     // @constdefine Send SIM card related notifications

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @params SIMPHONEBOOKENTRY
//
// @comm None
//
// -----------------------------------------------------------------------------
#define SIM_PARAM_PBE_ADDRESS           (0x00000001)     // @paramdefine lpszAddress field is valid
#define SIM_PARAM_PBE_ADDRESS_TYPE      (0x00000002)     // @paramdefine dwAddressType field is valid
#define SIM_PARAM_PBE_NUMPLAN           (0x00000004)     // @paramdefine dwNumPlan field is valid
#define SIM_PARAM_PBE_TEXT              (0x00000008)     // @paramdefine lpszText field is valid
#define SIM_PARAM_PBE_ALL               (0x0000000f)     // @paramdefine All fields are valid

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @params SIMPHONEBOOKENTRYEX
//
// @comm None
//
// -----------------------------------------------------------------------------
#define SIM_PARAM_PBEX_ADDRESS              (0x00000001) // @paramdefine lpszAddress field is valid
#define SIM_PARAM_PBEX_ADDRESS_TYPE         (0x00000002) // @paramdefine dwAddressType field is valid
#define SIM_PARAM_PBEX_NUMPLAN              (0x00000004) // @paramdefine dwNumPlan field is valid
#define SIM_PARAM_PBEX_TEXT                 (0x00000008) // @paramdefine lpszText field is valid
#define SIM_PARAM_PBEX_SECONDNAME           (0x00000010) // @paramdefine lpszSecondName field is valid
#define SIM_PARAM_PBEX_HIDDEN               (0x00000020) // @paramdefine fHidden field is valid
#define SIM_PARAM_PBEX_GROUPIDCOUNT         (0x00000040) // @paramdefine dwGroupIdCount field is valid
#define SIM_PARAM_PBEX_GROUPID              (0x00000080) // @paramdefine rgdwGroupId field is valid
#define SIM_PARAM_PBEX_UID                  (0x00000100) // @paramdefine dwUid field is valid
#define SIM_PARAM_PBEX_ADDITIONALNUMCOUNT   (0x00000200) // @paramdefine dwAdditionalNumCount field is valid
#define SIM_PARAM_PBEX_ADDITIONALNUMBERS    (0x00000400) // @paramdefine lpAdditionalNumbers field is valid
#define SIM_PARAM_PBEX_EMAILCOUNT           (0x00000800) // @paramdefine dwEmailCount field is valid
#define SIM_PARAM_PBEX_EMAILADDRESSES       (0x00001000) // @paramdefine lpEmailAddresses field is valid
#define SIM_PARAM_PBEX_INDEX                (0x00002000) // @paramdefine dwIndex field is valid
#define SIM_PARAM_PBEX_ALL                  (0x00003FFF) // @paramdefine All fields are valid

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @params SIMMESSAGE
//
// @comm None
//
// -----------------------------------------------------------------------------
#define SIM_PARAM_MSG_ADDRESS           (0x00000001)     // @paramdefine lpszAddress field is valid
#define SIM_PARAM_MSG_ADDRESS_TYPE      (0x00000002)     // @paramdefine dwAddressType field is valid
#define SIM_PARAM_MSG_NUMPLAN           (0x00000004)     // @paramdefine dwNumPlan field is valid
#define SIM_PARAM_MSG_RECEIVE_TIME      (0x00000008)     // @paramdefine stReceiveTime field is valid
#define SIM_PARAM_MSG_HEADER            (0x00000010)     // @paramdefine rgbHeader field is valid
#define SIM_PARAM_MSG_HEADER_LENGTH     (0x00000020)     // @paramdefine cbHdrLength field is valid
#define SIM_PARAM_MSG_MESSAGE           (0x00000040)     // @paramdefine lpszMessage field is valid
#define SIM_PARAM_MSG_ALL               (0x0000007f)     // @paramdefine All fields are valid

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @params SIMCAPS
//
// @comm None
//
// -----------------------------------------------------------------------------
#define SIM_PARAM_CAPS_PBSTORAGES           (0x00000001)     // @paramdefine dwPBStorages field is valid
#define SIM_PARAM_CAPS_PBEMAXADDRESSLENGTH  (0x00000002)     // @paramdefine dwPBEMaxAddressLength field is valid
#define SIM_PARAM_CAPS_PBEMAXTEXTLENGTH     (0x00000004)     // @paramdefine dwPBEMaxTextLength field is valid
#define SIM_PARAM_CAPS_PBEMININDEX          (0x00000008)     // @paramdefine dwMinPBIndex field is valid
#define SIM_PARAM_CAPS_PBEMAXINDEX          (0x00000010)     // @paramdefine dwMaxPBIndex field is valid
#define SIM_PARAM_CAPS_LOCKFACILITIES       (0x00000020)     // @paramdefine dwLockFacilities field is valid
#define SIM_PARAM_CAPS_LOCKINGPWDLENGTH     (0x00000040)     // @paramdefine dwNumLockingPwdLengths and rgLockingPwdLengths fields are valid
#define SIM_PARAM_CAPS_READMSGSTORAGES      (0x00000080)     // @paramdefine dwReadMsgStorages field is valid
#define SIM_PARAM_CAPS_WRITEMSGSTORAGES     (0x00000100)     // @paramdefine dwWriteMsgStorages field is valid
#define SIM_PARAM_CAPS_ALL                  (0x000001ff)     // @paramdefine All fields are valid

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @params SIMPHONEBOOKCAPS
//
// @comm None
//
// -----------------------------------------------------------------------------
#define SIM_PARAM_PBCAPS_STORAGES                     (0x00000001)    // @paramdefine dwStorages field is valid
#define SIM_PARAM_PBCAPS_MININDEX                     (0x00000002)    // @paramdefine dwMinIndex field is valid
#define SIM_PARAM_PBCAPS_MAXINDEX                     (0x00000004)    // @paramdefine dwMaxIndex field is valid
#define SIM_PARAM_PBCAPS_MAXADDRESSLENGTH             (0x00000008)    // @paramdefine dwMaxAddressLength field is valid
#define SIM_PARAM_PBCAPS_MAXTEXTLENGTH                (0x00000010)    // @paramdefine dwMaxTextLength field is valid
#define SIM_PARAM_PBCAPS_MAXSECONDNAMELENGTH          (0x00000020)    // @paramdefine dwMaxSecondNameLength field is valid
#define SIM_PARAM_PBCAPS_MAXADDITIONALNUMBERLENGTH    (0x00000040)    // @paramdefine dwMaxAdditionalNumberLength field is valid
#define SIM_PARAM_PBCAPS_MAXEMAILADDRESSLENGTH        (0x00000080)    // @paramdefine dwMaxEmailAddressLength field is valid
#define SIM_PARAM_PBCAPS_MAXGROUPTAGLENGTH            (0x00000100)    // @paramdefine dwGroupTagLength field is valid
#define SIM_PARAM_PBCAPS_MAXADDITIONALNUMBERTAGLENGTH (0x00000200)    // @paramdefine dwAdditionalNumberTagLength field is valid
#define SIM_PARAM_PBCAPS_ADDITIONALNUMBERCOUNT        (0x00000400)    // @paramdefine dwAdditionalNumberCount field is valid
#define SIM_PARAM_PBCAPS_EMAILADDRESSCOUNT            (0x00000800)    // @paramdefine dwEmailAddressCount field is valid
#define SIM_PARAM_PBCAPS_MAXGROUPTAGS                 (0x00001000)    // @paramdefine dwMaxGroupTags field is valid
#define SIM_PARAM_PBCAPS_MAXADDITIONALNUMBERTAGS      (0x00002000)    // @paramdefine dwMaxAddtionalNumberTags field is valid
#define SIM_PARAM_PBCAPS_HIDDEN                       (0x00004000)    // @paramdefine fHidden field is valid
#define SIM_PARAM_PBCAPS_UID                          (0x00008000)    // @paramdefine fUid field is valid
#define SIM_PARAM_PBCAPS_MAXGROUPIDCOUNT              (0x00010000)    // @paramdefine dwMaxGroupIdCount is valid
#define SIM_PARAM_PBCAPS_ALL                          (0x0001FFFF)    // @paramdefine All fields are valid

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @params SIMRECORDINFO
//
// @comm None
//
// -----------------------------------------------------------------------------
#define SIM_PARAM_RECORDINFO_RECORDTYPE (0x00000001)     // @paramdefine dwRecordType field is valid
#define SIM_PARAM_RECORDINFO_ITEMCOUNT  (0x00000002)     // @paramdefine dwItemCount field is valid
#define SIM_PARAM_RECORDINFO_SIZE       (0x00000004)     // @paramdefine dwSize field is valid
#define SIM_PARAM_RECORDINFO_ALL        (0x00000007)     // @paramdefine All fields are valid

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @params SIMFILEREFRESH
//
// @comm None
//
// -----------------------------------------------------------------------------
#define SIM_PARAM_FILEREFRESH_FLAGS      (0x00000001)     // @paramdefine dwFlags field is valid
#define SIM_PARAM_FILEREFRESH_FILECOUNT  (0x00000002)     // @paramdefine dwFileCount field is valid
#define SIM_PARAM_FILEREFRESH_FILEARRAY  (0x00000004)     // @paramdefine rgdwAddress field is valid
#define SIM_PARAM_FILEREFRESH_ALL        (0x00000007)     // @paramdefine All fields are valid


// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @params SIMPHONEBOOKADDITIONALNUMBER
//
// @comm None
//
// -----------------------------------------------------------------------------
#define SIM_PARAM_ADDITIONALNUM_ADDRESS      (0x00000001)  // @paramdefine lpszAddress field is valid
#define SIM_PARAM_ADDITIONALNUM_ADDRESS_TYPE (0x00000002)  // @paramdefine dwAddressType field is valid
#define SIM_PARAM_ADDITIONALNUM_NUMPLAN      (0x00000004)  // @paramdefine dwNumPlan field is valid
#define SIM_PARAM_ADDITIONALNUM_NUMID        (0x00000008)  // @paramdefine dwNumId field is valid
#define SIM_PARAM_ADDITIONALNUM_ALL          (0x0000000F)  // @paramdefine ALL fields are valid

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @params SIMPHONEBOOKEMAILADDRESS
//
// @comm None
//
// -----------------------------------------------------------------------------
#define SIM_PARAM_EMAIL_ADDRESS             (0x00000001) // @paramdefine lpszAddress field is valid
#define SIM_PARAM_EMAIL_ALL                 (0x00000001) // @paramdefine ALL fields are valid

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @params SIMINFO
//
// @comm None
//
// -----------------------------------------------------------------------------
#define SIM_PARAM_SIN_STATUS                (0x00000001) // @paramdefine dwSimStatus field is valid
#define SIM_PARAM_SIN_ID                    (0x00000002) // @paramdefine wszSimID field is valid
#define SIM_PARAM_SIN_TYPE                  (0x00000004) // @paramdefine dwSimType field is valid
#define SIM_PARAM_SIN_ALL                   (0x00000007) // @paramdefine ALL fields are valid

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @constants Phonebook Storage | Phone book storage locations
//
// @comm None
//
// -----------------------------------------------------------------------------
#define SIM_PBSTORAGE_EMERGENCY         (0x00000001)      // @constdefine Emergency dial list
#define SIM_PBSTORAGE_FIXEDDIALING      (0x00000002)      // @constdefine SIM fixed dialing list
#define SIM_PBSTORAGE_LASTDIALING       (0x00000004)      // @constdefine SIM last dialing list
#define SIM_PBSTORAGE_OWNNUMBERS        (0x00000008)      // @constdefine SIM ownnumbers lists
#define SIM_PBSTORAGE_SIM               (0x00000010)      // @constdefine General SIM Storage
#define SIM_PBSTORAGE_SERVICEDIALING 	(0x00000020)	  // @constdefine SDN SIM Storage
#define SIM_NUMPBSTORAGES               6                 // @constdefine Number of phonebook storages

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @constants Phonebook Storage | Phone book storage locations
//
// @comm None
//
// -----------------------------------------------------------------------------
#define SIM_PBTAG_GROUP                 (1)              // @constdefine Group name tag
#define SIM_PBTAG_NUMBER                (2)              // @constdefine Additional Number tag


// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @constants SIM DevCaps | Device Capabilities
//
// @comm None
//
// -----------------------------------------------------------------------------
#define SIM_CAPSTYPE_PBENTRYLENGTH      (0x00000001)      // @constdefine Phonebook entry lengths
#define SIM_CAPSTYPE_PBSTORELOCATIONS   (0x00000002)      // @constdefine Phonebook storage locations
#define SIM_CAPSTYPE_LOCKFACILITIES     (0x00000004)      // @constdefine Lock facilities
#define SIM_CAPSTYPE_PBINDEXRANGE       (0x00000008)      // @constdefine Valid phonebook entry indexes
#define SIM_CAPSTYPE_LOCKINGPWDLENGTHS  (0x00000010)      // @constdefine Locking password lengths
#define SIM_CAPSTYPE_MSGMEMORYLOCATIONS (0x00000020)      // @constdefine Message memory locations
#define SIM_CAPSTYPE_ALL                (0x0000003F)      // @constdefine All of the above

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @constants SMS Storage | SMS storage locations
//
// @comm None
//
// -----------------------------------------------------------------------------
#define SIM_SMSSTORAGE_BROADCAST        (0x00000001)      // @constdefine Broadcast message storage location
#define SIM_SMSSTORAGE_SIM              (0x00000002)      // @constdefine SIM storage location
#define SIM_NUMSMSSTORAGES              2                 // @constdefine Number of message storage locations

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @constants Address Type | Defines different address types
//
// @comm None
//
// -----------------------------------------------------------------------------
#define SIM_ADDRTYPE_UNKNOWN            (0x00000000)      // @constdefine Unknown
#define SIM_ADDRTYPE_INTERNATIONAL      (0x00000001)      // @constdefine International number
#define SIM_ADDRTYPE_NATIONAL           (0x00000002)      // @constdefine National number
#define SIM_ADDRTYPE_NETWKSPECIFIC      (0x00000003)      // @constdefine Network specific number
#define SIM_ADDRTYPE_SUBSCRIBER         (0x00000004)      // @constdefine Subscriber number (protocol-specific)
#define SIM_ADDRTYPE_ALPHANUM           (0x00000005)      // @constdefine Alphanumeric address
#define SIM_ADDRTYPE_ABBREV             (0x00000006)      // @constdefine Abbreviated number

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @constants Numbering Plan | Defines different numbering plans for SIM_ADDRTYPE_UNKNOWN,
//            SIM_ADDRTYPE_INTERNATIONAL, and SIM_ADDRTYPE_NATIONAL
//
// @comm None
//
// -----------------------------------------------------------------------------
#define SIM_NUMPLAN_UNKNOWN             (0x00000000)      // @constdefine Unknown
#define SIM_NUMPLAN_TELEPHONE           (0x00000001)      // @constdefine ISDN/telephone numbering plan (E.164/E.163)
#define SIM_NUMPLAN_DATA                (0x00000002)      // @constdefine Data numbering plan (X.121)
#define SIM_NUMPLAN_TELEX               (0x00000003)      // @constdefine Telex numbering plan
#define SIM_NUMPLAN_NATIONAL            (0x00000004)      // @constdefine National numbering plan
#define SIM_NUMPLAN_PRIVATE             (0x00000005)      // @constdefine Private numbering plan
#define SIM_NUMPLAN_ERMES               (0x00000006)      // @constdefine ERMES numbering plan (ETSI DE/PS 3 01-3)

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @constants Phone Locked | Indicates if the phone is currently locked (i.e.
//            awaiting password) and what password to enter
//
// @comm None
//
// -----------------------------------------------------------------------------
#define SIM_LOCKEDSTATE_UNKNOWN         (0x00000000)      // @constdefine Locking state is unknown
#define SIM_LOCKEDSTATE_READY           (0x00000001)      // @constdefine Not awaiting a password (unlocked)
#define SIM_LOCKEDSTATE_SIM_PIN         (0x00000002)      // @constdefine Awaiting the SIM PIN
#define SIM_LOCKEDSTATE_SIM_PUK         (0x00000003)      // @constdefine Awaiting the SIM PUK
#define SIM_LOCKEDSTATE_PH_SIM_PIN      (0x00000004)      // @constdefine Awaiting the Phone to SIM Personalization PIN
#define SIM_LOCKEDSTATE_PH_FSIM_PIN     (0x00000005)      // @constdefine Awaiting the Phone to first SIM Personalization PIN
#define SIM_LOCKEDSTATE_PH_FSIM_PUK     (0x00000006)      // @constdefine Awaiting the Phone to first SIM Personalization PUK
#define SIM_LOCKEDSTATE_SIM_PIN2        (0x00000007)      // @constdefine Awaiting the SIM PIN2
#define SIM_LOCKEDSTATE_SIM_PUK2        (0x00000008)      // @constdefine Awaiting the SIM PUK2
#define SIM_LOCKEDSTATE_PH_NET_PIN      (0x00000009)      // @constdefine Awaiting the Network Personalization PIN
#define SIM_LOCKEDSTATE_PH_NET_PUK      (0x0000000a)      // @constdefine Awaiting the Network Personalization PUK
#define SIM_LOCKEDSTATE_PH_NETSUB_PIN   (0x0000000b)      // @constdefine Awaiting the Network Subset Personalization PIN
#define SIM_LOCKEDSTATE_PH_NETSUB_PUK   (0x0000000c)      // @constdefine Awaiting the Network Subset Personalization PUK
#define SIM_LOCKEDSTATE_PH_SP_PIN       (0x0000000d)      // @constdefine Awaiting the Service Provider Personalization PIN
#define SIM_LOCKEDSTATE_PH_SP_PUK       (0x0000000e)      // @constdefine Awaiting the Service Provider Personalization PUK
#define SIM_LOCKEDSTATE_PH_CORP_PIN     (0x0000000f)      // @constdefine Awaiting the Corporate Personalization PIN
#define SIM_LOCKEDSTATE_PH_CORP_PUK     (0x00000010)      // @constdefine Awaiting the Corporate Personalization PUK

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @constants Phonebook Misc | Special phonebook constants
//
// @comm None
//
// -----------------------------------------------------------------------------
#define SIM_PBINDEX_FIRSTAVAILABLE      (0xffffffff)      // @constdefine Use first phonebook storage entry available

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @constants Phone Locking | Indicates the phone's locking behavior
//
// @comm None
//
// -----------------------------------------------------------------------------
#define SIM_LOCKFACILITY_CNTRL              (0x00000001)      // @constdefine Lock control curface
#define SIM_LOCKFACILITY_PH_SIM             (0x00000002)      // @constdefine Lock phone to SIM card
#define SIM_LOCKFACILITY_PH_FSIM            (0x00000004)      // @constdefine Lock phone to first SIM card
#define SIM_LOCKFACILITY_SIM                (0x00000008)      // @constdefine Lock SIM card
#define SIM_LOCKFACILITY_SIM_PIN2           (0x00000010)      // @constdefine Lock SIM card
#define SIM_LOCKFACILITY_SIM_FIXEDIALING    (0x00000020)      // @constdefine SIM fixed dialing memory
#define SIM_LOCKFACILITY_NETWORKPERS        (0x00000040)      // @constdefine Network personalization
#define SIM_LOCKFACILITY_NETWORKSUBPERS     (0x00000080)      // @constdefine Network subset personalization
#define SIM_LOCKFACILITY_SERVICEPROVPERS    (0x00000100)      // @constdefine Service provider personalization
#define SIM_LOCKFACILITY_CORPPERS           (0x00000200)      // @constdefine Corporate personalization
#define SIM_NUMLOCKFACILITIES               10                // @constdefine Number of locking facilities

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @constants SIM Record | Different SIM file types
//
// @comm None
//
// -----------------------------------------------------------------------------
#define SIM_RECORDTYPE_UNKNOWN          (0x00000000)         // @constdefine An unknown file type
#define SIM_RECORDTYPE_TRANSPARENT      (0x00000001)         // @constdefine A single veriable lengthed record
#define SIM_RECORDTYPE_CYCLIC           (0x00000002)         // @constdefine A cyclic set of records, each of the same length
#define SIM_RECORDTYPE_LINEAR           (0x00000003)         // @constdefine A linear set of records, each of the same length
#define SIM_RECORDTYPE_MASTER           (0x00000004)         // @constdefine Every SIM has a single master record, effectively the head node
#define SIM_RECORDTYPE_DEDICATED        (0x00000005)         // @constdefine Effectively a "directory" file which is a parent of other records

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @constants SIM Record Refresh | Different ways of being notified that SIM
//            have been updated
//
// @comm None
//
// -----------------------------------------------------------------------------
#define SIMFILE_FULLFILECHANGE          (0x00000001)         // @constdefine All files have been changed
#define SIMFILE_FILECHANGE              (0x00000002)         // @constdefine Only a few files have been changed
#define SIMFILE_SIMINIT                 (0x00000004)         // @constdefine SIM Initiailization
#define SIMFILE_SIMRESET                (0x00000008)         // @constdefine Reset the SIM

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @constants SIM Type | Different types of SIM
//
// @comm None
//
// -----------------------------------------------------------------------------
#define SIM_TYPE_UNKNOWN                (0x00000000)         // @constdefine Unknown SIM type
#define SIM_TYPE_SIM                    (0x00000001)         // @constdefine Type of 2G SIM
#define SIM_TYPE_USIM                   (0x00000002)         // @constdefine Type of USIM

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @constants SIM Enumerate Conditions | Different conditions to enumerate SIM modules
//
// @comm None
//
// -----------------------------------------------------------------------------
#define SIM_ENUM_COND_TECHNOLOGY        (0x00000001)         // @constdefine conditioned by technology 
#define SIM_ENUM_COND_RADIOINDEX        (0x00000002)         // @constdefine conditioned by radio index
#define SIM_ENUM_COND_ALL               (0xffffffff)         // @constdefine constraint condition all

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @constants SIM Conditions technology parameter | Different technologies of SIM modules
//
// @comm None
//
// -----------------------------------------------------------------------------
#define SIM_CONDPARAM_TECH_CELLULAR     (0x00000001)         // @constdefine technology conditione for all cellular radios

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @constants Max_Length | Maximum length constants
//
// @comm None
//
// -----------------------------------------------------------------------------
#define MAX_LENGTH_ADDRESS              (256)                // @constdefine Maximum length of an address
#define MAX_LENGTH_PHONEBOOKENTRYTEXT   (256)                // @constdefine Maximum length of text in a phonebook entry
#define MAX_LENGTH_HEADER               (256)                // @constdefine Maximum length of a SMS header
#define MAX_LENGTH_MESSAGE              (256)                // @constdefine Maximum length of a SMS message
#define MAX_FILES                       (32)                 // @constdefine Maximum number of files in a file change list
#define MAX_NUM_GROUPS                  (10)                 // @constdefine Maximum number of group ID's in a phonebook entry
#define MAX_LENGTH_SIMID                (256)                // @constdefine Maximum length of a SIM ID

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @struct HSIM | Handle to a SIM
//
// @comm None
//
// -----------------------------------------------------------------------------
typedef HANDLE HSIM, *LPHSIM;

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @struct SIMPHONEBOOKENTRY | A SIM phonebook entry
//
// @comm None
//
// -----------------------------------------------------------------------------
typedef struct simphonebookentry_tag {
    DWORD cbSize;                                          // @field Size of the structure in bytes
    DWORD dwParams;                                        // @field Indicates valid parameter values
    TCHAR lpszAddress[MAX_LENGTH_ADDRESS];                 // @field The actual phone number
    DWORD dwAddressType;                                   // @field A SIM_ADDRTYPE_* constant
    DWORD dwNumPlan;                                       // @field A SIM_NUMPLAN_* constant
    TCHAR lpszText[MAX_LENGTH_PHONEBOOKENTRYTEXT];         // @field Text associated with the entry
} SIMPHONEBOOKENTRY, *LPSIMPHONEBOOKENTRY;

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @struct LPSIMPHONEBOOKADDITIONALNUMBER | An additional phone number item
//         associated with a SIMPHONEBOOKENTRYEX structure.
//
// @comm None
//
// -----------------------------------------------------------------------------
typedef struct simphonebookadditionalnumber_tag {
    DWORD cbSize;                                          // @field Size of buffer in bytes.
    DWORD dwParams;                                        // @field @field Indicates valid parameter values in structure.
    TCHAR lpszAddress[MAX_LENGTH_ADDRESS];                 // @field The actual phone number
    DWORD dwAddressType;                                   // @field A SIM_ADDRTYPE_* constant
    DWORD dwNumPlan;                                       // @field A SIM_NUMPLAN_* constant
    DWORD dwNumId;                                         // @field The additional number type tag
} SIMPHONEBOOKADDITIONALNUMBER, *LPSIMPHONEBOOKADDITIONALNUMBER;

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @struct SIMPHONEBOOKEMAILADDRESS | An email address item associated with a
//         SIMPHONEBOOKENTRYEX structure.
//
//
// @comm None
//
// -----------------------------------------------------------------------------
typedef struct simphonebookemailaddress_tag {
    DWORD cbSize;                                          // @field Size of buffer in bytes.
    DWORD dwParams;                                        // @field Indicates valid parameter values in structure.
    TCHAR lpszAddress[MAX_LENGTH_PHONEBOOKENTRYTEXT];      // @field A string containing the email address. For MAX_LENGTH_PHONEBOOKTEXT see SIMPHONEBOOKENTRYEX lpszText.
} SIMPHONEBOOKEMAILADDRESS, *LPSIMPHONEBOOKEMAILADDRESS;

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @struct SIMPHONEBOOKENTRYEX | An extended SIM phonebook entry
//
// @comm None
//
// -----------------------------------------------------------------------------
typedef struct simphonebookentryex_tag {
    DWORD cbSize;                                          // @field Size of the structure in bytes
    DWORD dwParams;                                        // @field Indicates valid parameter values
    TCHAR lpszAddress[MAX_LENGTH_ADDRESS];                 // @field The actual phone number
    DWORD dwAddressType;                                   // @field A SIM_ADDRTYPE_* constant
    DWORD dwNumPlan;                                       // @field A SIM_NUMPLAN_* constant
    TCHAR lpszText[MAX_LENGTH_PHONEBOOKENTRYTEXT];         // @field Text associated with the entry
    TCHAR lpszSecondName[MAX_LENGTH_PHONEBOOKENTRYTEXT];   // @field Second text field associated with the entry
    DWORD dwIndex;                                         // @field Index of the entry
    BOOL  fHidden;                                         // @field Indicates a hidden entry
    DWORD dwGroupIdCount;                                  // @field Count of valid group ID's
    DWORD rgdwGroupId[MAX_NUM_GROUPS];                     // @field Array of group ID's
    DWORD dwUid;                                           // @field Unique identifier of entry
    DWORD dwAdditionalNumberCount;                         // @field Number of additional numbers in the array.
    LPSIMPHONEBOOKADDITIONALNUMBER lpAdditionalNumbers;    // @field Pointer to an array of SIMPHONEBOOKADDITIONALNUMBER structures
    DWORD dwEmailCount;                                    // @field Number of email addresses in the array.
    LPSIMPHONEBOOKEMAILADDRESS lpEmailAddresses;           // @field Pointer to an array of SIMPHONEBOOKEMAILADDRESS structures
} SIMPHONEBOOKENTRYEX, *LPSIMPHONEBOOKENTRYEX;

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @struct SIMMESSAGE | A SIM message entry
//
// @comm None
//
// -----------------------------------------------------------------------------
typedef struct simmessage_tag {
    DWORD cbSize;                           // @field Size of the structure in bytes
    DWORD dwParams;                         // @field Indicates valid parameter values
    TCHAR lpszAddress[MAX_LENGTH_ADDRESS];  // @field The actual phone number
    DWORD dwAddressType;                    // @field A SIM_ADDRTYPE_* constant
    DWORD dwNumPlan;                        // @field A SIM_NUMPLAN_* constant
    SYSTEMTIME stReceiveTime;               // @field Timestamp for the incoming message
    DWORD cbHdrLength;                      // @field Header length in bytes
    BYTE rgbHeader[MAX_LENGTH_HEADER];      // @field The actual header data
    TCHAR lpszMessage[MAX_LENGTH_MESSAGE];  // @field The actual message data
} SIMMESSAGE, FAR *LPSIMMESSAGE;

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @struct SIMLOCKINGPWDLENGTH | Minimum password length
//
// @comm None
//
// -----------------------------------------------------------------------------
typedef struct simlockingpwdlength
{
    DWORD dwFacility;                      // @field The locking facility
    DWORD dwPasswordLength;                // @field The minimum password length
} SIMLOCKINGPWDLENGTH, FAR *LPSIMLOCKINGPWDLENGTH;

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @struct SIMCAPS | Capabilities of the SIM
//
// @comm None
//
// -----------------------------------------------------------------------------
typedef struct simcaps_tag {
    DWORD cbSize;                           // @field Size of the structure in bytes
    DWORD dwParams;                         // @field Indicates valid parameter values
    DWORD dwPBStorages;                     // @field Supported phonebook storages
    DWORD dwMinPBIndex;                     // @field Minimum phonebook storages
    DWORD dwMaxPBIndex;                     // @field Maximum phonebook storages
    DWORD dwMaxPBEAddressLength;            // @field Maximum address length of phonebook entries
    DWORD dwMaxPBETextLength;               // @field Maximum text length of phonebook entries
    DWORD dwLockFacilities;                 // @field Supported locking facilities
    DWORD dwReadMsgStorages;                // @field Supported read message stores
    DWORD dwWriteMsgStorages;               // @field Supported write message stores
    DWORD dwNumLockingPwdLengths;           // @field Number of entries in rgLockingPwdLengths
    SIMLOCKINGPWDLENGTH rgLockingPwdLengths[SIM_NUMLOCKFACILITIES]; // @field Password lengths for each facility
} SIMCAPS, FAR *LPSIMCAPS;

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @struct SIMPHONEBOOKCAPS | Capabilities of the SIM Phonebook
//
// @comm None
//
// -----------------------------------------------------------------------------
typedef struct simphonebookcaps_tag {
    DWORD cbSize;                           // @field Size of the structure in bytes
    DWORD dwParams;                         // @field Indicates valid parameter values
    DWORD dwStorages;                       // @field Supported phonebook storages
    DWORD dwMinIndex;                       // @field Minimum phonebook storages
    DWORD dwMaxIndex;                       // @field Maximum phonebook storages
    DWORD dwMaxAddressLength;               // @field Maximum address length of phonebook entries
    DWORD dwMaxTextLength;                  // @field Maximum text length of phonebook entries
    DWORD dwMaxSecondNameLength;            // @field Maximum text length for the second name
    DWORD dwMaxAdditionalNumberLength;      // @field Maximum text length for additional numbers
    DWORD dwMaxEmailAddressLength;          // @field Maximum text length for email addresses
    DWORD dwMaxGroupTagLength;              // @field Maximum text length for group tag text
    DWORD dwMaxAdditionalNumberTagLength;   // @field Maximum text length for additional number tag text
    DWORD dwAdditionalNumberCount;          // @field Count of additional numbers supported per entry
    DWORD dwEmailAddressCount;              // @field Number of emails addresses supported per entry
    DWORD dwMaxGroupTags;                   // @field Number of Group tags available
    DWORD dwMaxAdditionalNumberTags;        // @field Number of additional number tags available
    BOOL  fHidden;                          // @field Hidden flag is available
    BOOL  fUid;                             // @field Unique identifier is available
    DWORD dwMaxGroupIdCount;                // @field Number of groups supported per entry
} SIMPHONEBOOKCAPS, FAR *LPSIMPHONEBOOKCAPS;

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @struct SIMRECORDINFO | Information about a particular SIM file
//
// @comm None
//
// -----------------------------------------------------------------------------
typedef struct simrecordinfo_tag {
    DWORD cbSize;                           // @field Size of the structure in bytes
    DWORD dwParams;                         // @field Indicates valid parameter values
    DWORD dwRecordType;                     // @field SIM_RECORDTYPE_* Constant
    DWORD dwItemCount;                      // @field Number of items in the record
    DWORD dwSize;                           // @field Size in bytes of each item
} SIMRECORDINFO, FAR *LPSIMRECORDINFO;

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @struct SIMFILEREFRESH | Information about which file(s) have been updated
//
// @comm None
//
// -----------------------------------------------------------------------------
typedef struct simfilerefresh_tag {
    DWORD cbSize;                           // @field Size of the structure in bytes
    DWORD dwParams;                         // @field Indicates valid parameter values
    DWORD dwFlags;                          // @field Combination of SIMFILE_* constants
    DWORD dwFileCount;                      // @field Number of files in the update list
    DWORD rgdwAddress[MAX_FILES];           // @field Array of files
} SIMFILEREFRESH, FAR *LPSIMFILEREFRESH;

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @struct SIMPBECHANGE | Information about which SIM Phonebook entries have changed
//
// @comm None
//
// -----------------------------------------------------------------------------
typedef struct simpbechange_tag {
    DWORD dwEntry;                          // @field The index of the entry that has changed
    DWORD dwStorage;                        // @field SIM_PBSTORAGE_* constant detailing which phonebook this entry is in
} SIMPBECHANGE, FAR *LPSIMPBECHANGE;

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @struct SIMMESSAGECHANGE | Information about which SMS messages on the SIM have changed
//
// @comm None
//
// -----------------------------------------------------------------------------
typedef struct simmessagechange_tag {
    DWORD dwEntry;                          // @field The index of the entry that has changed
    DWORD dwStorage;                        // @field SIM_SMSSTORAGE_* constant details which storage location this entry is in
} SIMMESSAGECHANGE, FAR *LPSIMMESSAGECHANGE;

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @struct SIMSMSSTORAGESTATUS | Status information about when a SIM SMS
//         storage location has become full or has space available.
//
// @comm None
//
// -----------------------------------------------------------------------------
typedef struct simsmsstoragestatus_tag {
    DWORD dwLocation;                       // contains the SIM_SMSSTORAGE_* value
    BOOL fFull;                             // True, the store has become full. False, at least one index has been freed.
} SIMSMSSTORAGESTATUS;

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @struct SIMINFO | Information of the SIM
//
// @comm None
//
// -----------------------------------------------------------------------------
typedef struct siminfo_tag {
    DWORD cbSize;                           // @field structure size in bytes
    DWORD dwParams;                         // @field indicates valid parameters
    DWORD dwSimStatus;                      // @field SIM present status, field one of SIM_LOCKEDSTATE_*
    WCHAR wszSimID[MAX_LENGTH_SIMID];       // @field SIM ID
    DWORD dwSimType;                        // @field SIM type, field one of SIM_TYPE_*
} SIMINFO, *LPSIMINFO;

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @func This is the callback function prototype used by SIM Manager when
//       sending notifications.
//
// @comm None
//
// -----------------------------------------------------------------------------
typedef void (*SIMCALLBACK)(
    DWORD dwNotifyCode,                     // @parm Indicates type of notification received
    const void* pData,                      // @parm Points to data structure specific to the notification
    DWORD dwDataSize,                       // @parm Size of data structure in bytes
    DWORD dwParam);                         // @parm Parameter passed to simInititialize

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @func This is the callback function prototype used by SIM Manager when
//       sending notifications. Extension prototype to support mutiple radios.
//
// @comm None
//
// -----------------------------------------------------------------------------
typedef void (*SIMCALLBACKEX)(
    HSIM hSim,                              // @parm handle to current SIM instance
    DWORD dwNotifyCode,                     // @parm Indicates type of notification received
    const void* pData,                      // @parm Points to data structure specific to the notification
    DWORD dwDataSize,                       // @parm Size of data structure in bytes
    DWORD dwParam);                         // @parm Parameter passed to simInititialize

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @func This function must be called by applications in order to use any of the
//       functions in this API.
//
// @comm Passing in a function callback is required only for applications that
//       wish to obtain notifications.
//
// -----------------------------------------------------------------------------
HRESULT SimInitialize(
    DWORD dwFlags,                          // @parm Indicates which notifications to receive
    SIMCALLBACK lpfnCallBack,               // @parm Function callback for notifications, may be NULL if notifications are not desired
    DWORD dwParam,                          // @parm Parameter to pass on each notification function call, may be NULL
    LPHSIM lphSim                           // @parm Points to a HSIM handle to use on subsequent function calls
);


// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @func This function deinitializes an HSIM handle.
//
// @comm None
//
// -----------------------------------------------------------------------------
HRESULT SimDeinitialize(
    HSIM hSim                               // @parm A valid HSIM handle to deinitialize
);

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @func Gets the device capabilities of the SIM.
//
// @comm None
//
// -----------------------------------------------------------------------------
HRESULT SimGetDevCaps(
    HSIM hSim,                              // @parm Points to a valid HSIM handle
    DWORD dwCapsType,                       // @parm Which device capabilities are we interested in?
    LPSIMCAPS lpSimCaps                     // @parm Capabilities structure
);

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @func Reads a phonebook entry off the SIM card.
//
// @comm None
//
// -----------------------------------------------------------------------------
HRESULT SimReadPhonebookEntry(
    HSIM hSim,                              // @parm Points to a valid HSIM handle
    DWORD dwLocation,                       // @parm A SIMPBSTORAGE_* Constant
    DWORD dwIndex,                          // @parm Index of the entry to retrieve
    LPSIMPHONEBOOKENTRY lpPhonebookEntry    // @parm Points to a phonebook entry structure
);

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @func Reads extended phonebook entries from the specified range of indices
//       off the SIM card.
//
// @comm None
//
// -----------------------------------------------------------------------------
HRESULT SimReadPhonebookEntries(
    HSIM hSim,                              // @parm Points to a valid HSIM handle
    DWORD dwLocation,                       // @parm A SIMPBSTORAGE_* Constant
    DWORD dwStartIndex,                     // @parm Starting index in the range of entries to retrieve
    LPDWORD lpdwCount,                      // @parm On input, the total number of entries to read starting from dwStartIndex. On output (if the function succeeds), the actual number of SIMPHONEBOOKENTRYEX structures returned in lpEntries
    LPSIMPHONEBOOKENTRYEX lpEntries,        // @parm Buffer to hold an array of SIMPHONEBOOKENTRYEX structures and associated variable data
    LPDWORD lpdwBufferSize                  // @parm On input, the number of bytes contained in the buffer pointed to by lpEntries. On output, if the function fails it contains the minimum number of bytes to pass for the lpEntries parameter to retrieve the entries.
);

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @func Gets the status of a phonebook location.
//
// @comm None
//
// -----------------------------------------------------------------------------
HRESULT SimGetPhonebookStatus(
    HSIM hSim,                              // @parm Points to a valid HSIM handle
    DWORD dwLocation,                       // @parm A SIMPBSTORAGE_* Constant
    LPDWORD lpdwUsed,                       // @parm Number of used locations
    LPDWORD lpdwTotal                       // @parm Total number of locations
);

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @func Writes a phonebook entry to the SIM card.
//
// @comm None
//
// -----------------------------------------------------------------------------
HRESULT SimWritePhonebookEntry(
    HSIM hSim,                              // @parm Points to a valid HSIM handle
    DWORD dwLocation,                       // @parm A SIMPBSTORAGE_* Constant
    DWORD dwIndex,                          // @parm Index of the entry to retrieve (may be SIM_PBINDEX_FIRSTAVAILABLE)
    LPSIMPHONEBOOKENTRY lpPhonebookEntry    // @parm Points to a phonebook entry structure
);

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @func Writes a phonebook entry to the SIM card.
//
// @comm None
//
// -----------------------------------------------------------------------------
HRESULT SimWritePhonebookEntryEx(
    HSIM hSim,                              // @parm Points to a valid HSIM handle
    DWORD dwLocation,                       // @parm A SIMPBSTORAGE_* Constant
    DWORD dwIndex,                          // @parm Index of the entry to retrieve (may be SIM_PBINDEX_FIRSTAVAILABLE)
    LPSIMPHONEBOOKENTRYEX lpPhonebookEntry  // @parm Points to a extended phonebook entry structure
);

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @func Deletes a phonebook entry from the SIM card.
//
// @comm None
//
// -----------------------------------------------------------------------------
HRESULT SimDeletePhonebookEntry(
    HSIM hSim,                              // @parm Points to a valid HSIM handle
    DWORD dwLocation,                       // @parm A SIMPBSTORAGE_* Constant
    DWORD dwIndex                           // @parm Index of the entry to retrieve
);

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @func Checks if the SIM is currently awaiting a password.
//
// @comm This is called when powering on the phone.
//
// -----------------------------------------------------------------------------
HRESULT SimGetPhoneLockedState(
    HSIM hSim,                              // @parm Points to a valid HSIM handle
    LPDWORD lpdwLockedState                 // @parm Points to a SIM_LOCKEDSTATE_* constant
);

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @func Sends a password to unlock the phone.
//
// @comm None
//
// -----------------------------------------------------------------------------
HRESULT SimUnlockPhone(
    HSIM hSim,                              // @parm Points to a valid HSIM handle
    LPTSTR lpszPassword,                    // @parm Points to password string
    LPTSTR lpszNewPin                       // @parm Some locked states require a second password (e.g. PUK requires a new PIN to replace the old, presumably forgotten PIN)
);

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @func Gets the locking status of the phone.
//
// @comm None
//
// -----------------------------------------------------------------------------
HRESULT SimGetLockingStatus(
    HSIM hSim,                              // @parm Points to a valid HSIM handle
    DWORD dwLockingFacility,                // @parm A SIMLOCKFACILITY_* constant
    LPTSTR lpszPassword,                    // @parm Some facilities require a password
    BOOL *pfEnabled                         // @parm Enabled or diabled
);

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @func Sets the locking status of the phone.
//
// @comm None
//
// -----------------------------------------------------------------------------
HRESULT SimSetLockingStatus(
    HSIM hSim,                              // @parm Points to a valid HSIM handle
    DWORD dwLockingFacility,                // @parm A SIMLOCKFACILITY_* constant
    LPTSTR lpszPassword,                    // @parm Some facilities require a password
    BOOL fEnabled                           // @parm Enable or diable
);

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @func Changes a locking password.
//
// @comm None
//
// -----------------------------------------------------------------------------
HRESULT SimChangeLockingPassword(
    HSIM hSim,                              // @parm Points to a valid HSIM handle
    DWORD dwLockingFacility,                // @parm A SIMLOCKFACILITY_* constant
    LPTSTR lpszOldPassword,                 // @parm The old password
    LPTSTR lpszNewPassword                  // @parm The new password
);

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @func Gets the status of a SMS storage location.
//
// @comm None
//
// -----------------------------------------------------------------------------
HRESULT SimGetSmsStorageStatus(
    HSIM hSim,                              // @parm Points to a valid HSIM handle
    DWORD dwStorage,                        // @parm A SIM_SMSSTORAGE_* constant
    LPDWORD lpdwUsed,                       // @parm Number of used locations
    LPDWORD lpdwTotal                       // @parm Total number of locations
);

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @func Reads an SMS from a particular storage location.
//
// @comm None
//
// -----------------------------------------------------------------------------
HRESULT SimReadMessage(
    HSIM hSim,                              // @parm Points to a valid HSIM handle
    DWORD dwStorage,                        // @parm A SIM_SMSSTORAGE_* constant
    DWORD dwIndex,                          // @parm Index of the entry to retrieve
    LPSIMMESSAGE lpSimMessage               // @parm Points to an SMS message structure
);

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @func Writes an SMS to a particular storage location.
//
// @comm Note that SMS messages are always written to the first available storage location
// @comm lpdwIndex will be set to the index to which the message was written
//
// -----------------------------------------------------------------------------
HRESULT SimWriteMessage(
    HSIM hSim,                              // @parm Points to a valid HSIM handle
    DWORD dwStorage,                        // @parm A SIM_SMSSTORAGE_* constant
    LPDWORD lpdwIndex,                      // @parm Set to the index where the message was written
    LPSIMMESSAGE lpSimMessage               // @parm Points to an SMS message structure
);

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @func Deletes an SMS from a particular storage location.
//
// @comm None
//
// -----------------------------------------------------------------------------
HRESULT SimDeleteMessage(
    HSIM hSim,                              // @parm Points to a valid HSIM handle
    DWORD dwStorage,                        // @parm A SIM_SMSSTORAGE_* constant
    DWORD dwIndex                           // @parm Index of the entry to retrieve
);

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @func Reads a file form the SIM.
//
// @comm None
//
// -----------------------------------------------------------------------------
HRESULT SimReadRecord(
    HSIM hSim,                                  // @parm Points to a valid HSIM handle
    DWORD dwAddress,                            // @parm SIM address
    DWORD dwRecordType,                         // @parm A SIM_RECORDTYPE_* constant
    DWORD dwIndex,                              // @parm Applies only to SIM_RECORDTYPE_CYCLIC and SIM_RECORDTYPE_LINEAR, otherwise ignored
    __out_bcount(*lpdwBytesRead) LPBYTE lpData, // @parm Data buffer
    DWORD dwBufferSize,                         // @parm Size of data buffer
    LPDWORD lpdwBytesRead                       // @parm Number of bytes read
);

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @func Writes a file to the SIM.
//
// @comm None
//
// -----------------------------------------------------------------------------
HRESULT SimWriteRecord(
    HSIM hSim,                              // @parm Points to a valid HSIM handle
    DWORD dwAddress,                        // @parm SIM address
    DWORD dwRecordType,                     // @parm A SIM_RECORDTYPE_* constant
    DWORD dwIndex,                          // @parm Applies only to SIM_RECORDTYPE_CYCLIC and SIM_RECORDTYPE_LINEAR, otherwise ignored
    __in_bcount(dwByteCount) LPBYTE lpData, // @parm Data to write
    DWORD dwByteCount                       // @parm Number of bytes to write
);

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @func Gets information about a particular record.
//
// @comm None
//
// -----------------------------------------------------------------------------
HRESULT SimGetRecordInfo(
    HSIM hSim,                              // @parm Points to a valid HSIM handle
    DWORD dwAddress,                        // @parm SIM address
    LPSIMRECORDINFO lpSimRecordInfo         // @parm Points to a SIM record information structure
);

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @func Gets the phonebook capabilities of the SIM.
//
// @comm None
//
// -----------------------------------------------------------------------------
HRESULT SimGetPhonebookCapabilities(
    HSIM hSim,                              // @parm Points to a valid HSIM handle
    LPSIMPHONEBOOKCAPS lpCapabilities       // @parm Points to a SIMPHONEBOOKCAPS structure
);


// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @func Reads the name value for a given index and tag.
//
// @comm None
//
// -----------------------------------------------------------------------------
HRESULT SimReadPhonebookTag(
    HSIM hSim,                              // @parm Points to a valid HSIM handle
    DWORD dwTag,                            // @parm A SIM_PBTAG_* constant
    DWORD dwIndex,                          // @parm Index of tag to read
    __out_ecount(cchNameSize) LPTSTR szName,// @parm Returned name of tag
    DWORD cchNameSize                       // @parm Size of name in characters
);

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @func Writes the name value to a given index and tag.
//
// @comm None
//
// -----------------------------------------------------------------------------
HRESULT SimWritePhonebookTag(
    HSIM hSim,                              // @parm Points to a valid HSIM handle
    DWORD dwTag,                            // @parm A SIM_PBTAG_* constant
    DWORD dwIndex,                          // @parm Index to write
    LPTSTR szName                           // @parm Name for index
);


// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @func Enumerate SIM indexes of appointed SIM modules.
//
// @comm None
//
// -----------------------------------------------------------------------------
HRESULT  SimEnumModules(
    DWORD dwEnumCond,                       // @parm Specifies the constraint condition of SIM modules to be enumerated
    DWORD dwCondParam,                      // @parm Specifies the detail type parameter for condition in dwEnumCond
    DWORD* lpdwNumSim,                      // @parm Input the number of size of lpdwSimIndexArray; return the number of available SIM modules in the specific kind
    DWORD* lpdwSimIndexArray                // @parm The array of SIM index of each SIM module in the specific kind, can be NULL to enumerate SIM module number only
);

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @func Gets the information of the SIM.
//
// @comm None
//
// -----------------------------------------------------------------------------
HRESULT  SimGetInfo (
    HSIM hSim,                              // @parm Contains a valid HSIM handle
    LPSIMINFO lpSimInfo                     // @parm SIM information structure
);

// -----------------------------------------------------------------------------
//
// @doc EXTERNAL
//
// @func This function must be called by applications in order to use any of the
//       functions in this API. Extension API to support mutiple radios.
//
// @comm Passing in a function callback is required only for applications that
//       wish to obtain notifications.
//
// -----------------------------------------------------------------------------
HRESULT SimInitializeEx(
    DWORD dwSimIndex,                       // @parm The Sim index returns from SimEnumModules
    DWORD dwFlags,                          // @parm Indicates which notifications to receive
    SIMCALLBACKEX lpfnCallBack,             // @parm Function callback for notifications, may be NULL if notifications are not desired
    DWORD dwParam,                          // @parm Parameter to pass on each notification function call, may be NULL
    LPHSIM lphSim                           // @parm Points to a HSIM handle to use on subsequent function calls
);

#ifdef __cplusplus
}
#endif

#endif // _SIMMGR_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\wm7\sfone7\Include\sip.h ===
//
// Copyright (c) Microsoft Corporation.  All rights reserved.
//
//
// Use of this sample source code is subject to the terms of the Microsoft
// license agreement under which you licensed this sample source code. If
// you did not accept the terms of the license agreement, you are not
// authorized to use this sample source code. For the terms of the license,
// please see the license agreement between you and Microsoft or, if applicable,
// see the LICENSE.RTF on your install media or the root of your tools installation.
// THE SAMPLE SOURCE CODE IS PROVIDED "AS IS", WITH NO WARRANTIES OR INDEMNITIES.
//
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


/* File created by MIDL compiler version 3.02.88 */
/* at Wed Jan 13 10:52:24 1999
 */
/* Compiler settings for .\sip.idl:
    Oicf (OptLev=i2), W1, Zp8, env=Win32, ms_ext, c_ext
    error checks: none
*/
//@@MIDL_FILE_HEADING(  )
#include "rpc.h"
#include "rpcndr.h"
#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __sip_h__
#define __sip_h__

#ifdef __cplusplus
extern "C"{
#endif 

/* Forward Declarations */ 

#ifndef __IIMCallback_FWD_DEFINED__
#define __IIMCallback_FWD_DEFINED__
typedef interface IIMCallback IIMCallback;
#endif 	/* __IIMCallback_FWD_DEFINED__ */


#ifndef __IIMCallback2_FWD_DEFINED__
#define __IIMCallback2_FWD_DEFINED__
typedef interface IIMCallback2 IIMCallback2;
#endif 	/* __IIMCallback2_FWD_DEFINED__ */


#ifndef __IIMCallbackEx_FWD_DEFINED__
#define __IIMCallbackEx_FWD_DEFINED__
typedef interface IIMCallbackEx IIMCallbackEx;
#endif 	/* __IIMCallbackEx_FWD_DEFINED__ */


#ifndef __IInputMethod_FWD_DEFINED__
#define __IInputMethod_FWD_DEFINED__
typedef interface IInputMethod IInputMethod;
#endif 	/* __IInputMethod_FWD_DEFINED__ */


#ifndef __IInputMethodEx_FWD_DEFINED__
#define __IInputMethodEx_FWD_DEFINED__
typedef interface IInputMethodEx IInputMethodEx;
#endif 	/* __IInputMethodEx_FWD_DEFINED__ */


#ifndef __IInputMethod2_FWD_DEFINED__
#define __IInputMethod2_FWD_DEFINED__
typedef interface IInputMethod2 IInputMethod2;
#endif 	/* __IInputMethod2_FWD_DEFINED__ */


/* header files for imported files */
#include "unknwn.h"
#include "sipapi.h"

void __RPC_FAR * __RPC_USER MIDL_user_allocate(size_t);
void __RPC_USER MIDL_user_free( void __RPC_FAR * ); 

/****************************************
 * Generated header for interface: __MIDL_itf_sip_0000
 * at Wed Jan 13 10:52:24 1999
 * using MIDL 3.02.88
 ****************************************/
/* [local] */ 


typedef struct  _tagImInfo
    {
    DWORD cbSize;
    HANDLE hImageNarrow;
    HANDLE hImageWide;
    int iNarrow;
    int iWide;
    DWORD fdwFlags;
    RECT rcSipRect;
    }	IMINFO;

typedef struct  _tagLMDATA
    {
    DWORD dwVersion;
    DWORD flags;
    DWORD cnt;
    DWORD dwOffsetSymbols;
    DWORD dwOffsetSkip;
    DWORD dwOffsetScore;
    /* [max_is] */ BYTE ab[ 1 ];
    }	LMDATA;



extern RPC_IF_HANDLE __MIDL_itf_sip_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_sip_0000_v0_0_s_ifspec;

#ifndef __IIMCallback_INTERFACE_DEFINED__
#define __IIMCallback_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IIMCallback
 * at Wed Jan 13 10:52:24 1999
 * using MIDL 3.02.88
 ****************************************/
/* [uuid][object] */ 



EXTERN_C const IID IID_IIMCallback;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("42429669-ae04-11d0-a4f8-00aa00a749b9")
    IIMCallback : public IUnknown
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SetImInfo( 
            IMINFO __RPC_FAR *pimi) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SendVirtualKey( 
            BYTE bVK,
            DWORD dwFlags) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SendCharEvents( 
            UINT uVK,
            UINT uKeyFlags,
            UINT uChars,
            UINT __RPC_FAR *puShift,
            UINT __RPC_FAR *puChars) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SendString( 
            BSTR ptszStr,
            DWORD dwChars) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIMCallbackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IIMCallback __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IIMCallback __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IIMCallback __RPC_FAR * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetImInfo )( 
            IIMCallback __RPC_FAR * This,
            IMINFO __RPC_FAR *pimi);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SendVirtualKey )( 
            IIMCallback __RPC_FAR * This,
            BYTE bVK,
            DWORD dwFlags);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SendCharEvents )( 
            IIMCallback __RPC_FAR * This,
            UINT uVK,
            UINT uKeyFlags,
            UINT uChars,
            UINT __RPC_FAR *puShift,
            UINT __RPC_FAR *puChars);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SendString )( 
            IIMCallback __RPC_FAR * This,
            BSTR ptszStr,
            DWORD dwChars);
        
        END_INTERFACE
    } IIMCallbackVtbl;

    interface IIMCallback
    {
        CONST_VTBL struct IIMCallbackVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIMCallback_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IIMCallback_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IIMCallback_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IIMCallback_SetImInfo(This,pimi)	\
    (This)->lpVtbl -> SetImInfo(This,pimi)

#define IIMCallback_SendVirtualKey(This,bVK,dwFlags)	\
    (This)->lpVtbl -> SendVirtualKey(This,bVK,dwFlags)

#define IIMCallback_SendCharEvents(This,uVK,uKeyFlags,uChars,puShift,puChars)	\
    (This)->lpVtbl -> SendCharEvents(This,uVK,uKeyFlags,uChars,puShift,puChars)

#define IIMCallback_SendString(This,ptszStr,dwChars)	\
    (This)->lpVtbl -> SendString(This,ptszStr,dwChars)

#endif /* COBJMACROS */


#endif 	/* C style interface */





#endif 	/* __IIMCallback_INTERFACE_DEFINED__ */


#ifndef __IIMCallback2_INTERFACE_DEFINED__
#define __IIMCallback2_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IIMCallback2
 * at Wed Jan 13 10:52:24 1999
 * using MIDL 3.02.88
 ****************************************/
/* [unique][uuid][object] */ 



EXTERN_C const IID IID_IIMCallback2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("0576F2E0-AA6B-11d2-A146-0000F8757270")
    IIMCallback2 : public IIMCallback
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SendAlternatives2( 
            LMDATA __RPC_FAR *plmd) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIMCallback2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IIMCallback2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IIMCallback2 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IIMCallback2 __RPC_FAR * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetImInfo )( 
            IIMCallback2 __RPC_FAR * This,
            IMINFO __RPC_FAR *pimi);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SendVirtualKey )( 
            IIMCallback2 __RPC_FAR * This,
            BYTE bVK,
            DWORD dwFlags);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SendCharEvents )( 
            IIMCallback2 __RPC_FAR * This,
            UINT uVK,
            UINT uKeyFlags,
            UINT uChars,
            UINT __RPC_FAR *puShift,
            UINT __RPC_FAR *puChars);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SendString )( 
            IIMCallback2 __RPC_FAR * This,
            BSTR ptszStr,
            DWORD dwChars);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SendAlternatives2 )( 
            IIMCallback2 __RPC_FAR * This,
            LMDATA __RPC_FAR *plmd);
        
        END_INTERFACE
    } IIMCallback2Vtbl;

    interface IIMCallback2
    {
        CONST_VTBL struct IIMCallback2Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIMCallback2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IIMCallback2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IIMCallback2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IIMCallback2_SetImInfo(This,pimi)	\
    (This)->lpVtbl -> SetImInfo(This,pimi)

#define IIMCallback2_SendVirtualKey(This,bVK,dwFlags)	\
    (This)->lpVtbl -> SendVirtualKey(This,bVK,dwFlags)

#define IIMCallback2_SendCharEvents(This,uVK,uKeyFlags,uChars,puShift,puChars)	\
    (This)->lpVtbl -> SendCharEvents(This,uVK,uKeyFlags,uChars,puShift,puChars)

#define IIMCallback2_SendString(This,ptszStr,dwChars)	\
    (This)->lpVtbl -> SendString(This,ptszStr,dwChars)


#define IIMCallback2_SendAlternatives2(This,plmd)	\
    (This)->lpVtbl -> SendAlternatives2(This,plmd)

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIMCallback2_INTERFACE_DEFINED__ */


#ifndef __IIMCallbackEx_INTERFACE_DEFINED__
#define __IIMCallbackEx_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IIMCallbackEx
 * at Wed Jan 13 10:52:24 1999
 * using MIDL 3.02.88
 ****************************************/
/* [unique][uuid][object] */ 



EXTERN_C const IID IID_IIMCallbackEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("9DDB3920-3606-11d2-A2EB-0000F8757270")
    IIMCallbackEx : public IIMCallback
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SendAlternatives( 
            LMDATA __RPC_FAR *plmd) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIMCallbackExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IIMCallbackEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IIMCallbackEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IIMCallbackEx __RPC_FAR * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetImInfo )( 
            IIMCallbackEx __RPC_FAR * This,
            IMINFO __RPC_FAR *pimi);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SendVirtualKey )( 
            IIMCallbackEx __RPC_FAR * This,
            BYTE bVK,
            DWORD dwFlags);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SendCharEvents )( 
            IIMCallbackEx __RPC_FAR * This,
            UINT uVK,
            UINT uKeyFlags,
            UINT uChars,
            UINT __RPC_FAR *puShift,
            UINT __RPC_FAR *puChars);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SendString )( 
            IIMCallbackEx __RPC_FAR * This,
            BSTR ptszStr,
            DWORD dwChars);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SendAlternatives )( 
            IIMCallbackEx __RPC_FAR * This,
            LMDATA __RPC_FAR *plmd);
        
        END_INTERFACE
    } IIMCallbackExVtbl;

    interface IIMCallbackEx
    {
        CONST_VTBL struct IIMCallbackExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIMCallbackEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IIMCallbackEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IIMCallbackEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IIMCallbackEx_SetImInfo(This,pimi)	\
    (This)->lpVtbl -> SetImInfo(This,pimi)

#define IIMCallbackEx_SendVirtualKey(This,bVK,dwFlags)	\
    (This)->lpVtbl -> SendVirtualKey(This,bVK,dwFlags)

#define IIMCallbackEx_SendCharEvents(This,uVK,uKeyFlags,uChars,puShift,puChars)	\
    (This)->lpVtbl -> SendCharEvents(This,uVK,uKeyFlags,uChars,puShift,puChars)

#define IIMCallbackEx_SendString(This,ptszStr,dwChars)	\
    (This)->lpVtbl -> SendString(This,ptszStr,dwChars)


#define IIMCallbackEx_SendAlternatives(This,plmd)	\
    (This)->lpVtbl -> SendAlternatives(This,plmd)

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __IIMCallbackEx_INTERFACE_DEFINED__ */


#ifndef __IInputMethod_INTERFACE_DEFINED__
#define __IInputMethod_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IInputMethod
 * at Wed Jan 13 10:52:24 1999
 * using MIDL 3.02.88
 ****************************************/
/* [uuid][object] */ 



EXTERN_C const IID IID_IInputMethod;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("42429666-ae04-11d0-a4f8-00aa00a749b9")
    IInputMethod : public IUnknown
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Select( 
            /* [in] */ HWND hwndSip) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Deselect( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Showing( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Hiding( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetInfo( 
            /* [out] */ IMINFO __RPC_FAR *pimi) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ReceiveSipInfo( 
            /* [in] */ SIPINFO __RPC_FAR *psi) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE RegisterCallback( 
            /* [in] */ IIMCallback __RPC_FAR *lpIMCallback) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetImData( 
            /* [in] */ DWORD dwSize,
            /* [out] */ void __RPC_FAR *pvImData) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SetImData( 
            /* [in] */ DWORD dwSize,
            /* [in] */ void __RPC_FAR *pvImData) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE UserOptionsDlg( 
            /* [in] */ HWND hwndParent) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IInputMethodVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IInputMethod __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IInputMethod __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IInputMethod __RPC_FAR * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Select )( 
            IInputMethod __RPC_FAR * This,
            /* [in] */ HWND hwndSip);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Deselect )( 
            IInputMethod __RPC_FAR * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Showing )( 
            IInputMethod __RPC_FAR * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Hiding )( 
            IInputMethod __RPC_FAR * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetInfo )( 
            IInputMethod __RPC_FAR * This,
            /* [out] */ IMINFO __RPC_FAR *pimi);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ReceiveSipInfo )( 
            IInputMethod __RPC_FAR * This,
            /* [in] */ SIPINFO __RPC_FAR *psi);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RegisterCallback )( 
            IInputMethod __RPC_FAR * This,
            /* [in] */ IIMCallback __RPC_FAR *lpIMCallback);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetImData )( 
            IInputMethod __RPC_FAR * This,
            /* [in] */ DWORD dwSize,
            /* [out] */ void __RPC_FAR *pvImData);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetImData )( 
            IInputMethod __RPC_FAR * This,
            /* [in] */ DWORD dwSize,
            /* [in] */ void __RPC_FAR *pvImData);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *UserOptionsDlg )( 
            IInputMethod __RPC_FAR * This,
            /* [in] */ HWND hwndParent);
        
        END_INTERFACE
    } IInputMethodVtbl;

    interface IInputMethod
    {
        CONST_VTBL struct IInputMethodVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IInputMethod_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IInputMethod_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IInputMethod_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IInputMethod_Select(This,hwndSip)	\
    (This)->lpVtbl -> Select(This,hwndSip)

#define IInputMethod_Deselect(This)	\
    (This)->lpVtbl -> Deselect(This)

#define IInputMethod_Showing(This)	\
    (This)->lpVtbl -> Showing(This)

#define IInputMethod_Hiding(This)	\
    (This)->lpVtbl -> Hiding(This)

#define IInputMethod_GetInfo(This,pimi)	\
    (This)->lpVtbl -> GetInfo(This,pimi)

#define IInputMethod_ReceiveSipInfo(This,psi)	\
    (This)->lpVtbl -> ReceiveSipInfo(This,psi)

#define IInputMethod_RegisterCallback(This,lpIMCallback)	\
    (This)->lpVtbl -> RegisterCallback(This,lpIMCallback)

#define IInputMethod_GetImData(This,dwSize,pvImData)	\
    (This)->lpVtbl -> GetImData(This,dwSize,pvImData)

#define IInputMethod_SetImData(This,dwSize,pvImData)	\
    (This)->lpVtbl -> SetImData(This,dwSize,pvImData)

#define IInputMethod_UserOptionsDlg(This,hwndParent)	\
    (This)->lpVtbl -> UserOptionsDlg(This,hwndParent)

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IInputMethod_INTERFACE_DEFINED__ */


#ifndef __IInputMethodEx_INTERFACE_DEFINED__
#define __IInputMethodEx_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IInputMethodEx
 * at Wed Jan 13 10:52:24 1999
 * using MIDL 3.02.88
 ****************************************/
/* [unique][uuid][object] */ 



EXTERN_C const IID IID_IInputMethodEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("9DDB3921-3606-11d2-A2EB-0000F8757270")
    IInputMethodEx : public IInputMethod
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SetIMMActiveContext( 
            /* [in] */ HWND hwnd,
            BOOL bOpen,
            DWORD dwConversion,
            DWORD dwSentence,
            DWORD hkl) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE RegisterCallbackEx( 
            /* [in] */ IIMCallbackEx __RPC_FAR *lpIMCallback) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IInputMethodExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IInputMethodEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IInputMethodEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IInputMethodEx __RPC_FAR * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Select )( 
            IInputMethodEx __RPC_FAR * This,
            /* [in] */ HWND hwndSip);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Deselect )( 
            IInputMethodEx __RPC_FAR * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Showing )( 
            IInputMethodEx __RPC_FAR * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Hiding )( 
            IInputMethodEx __RPC_FAR * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetInfo )( 
            IInputMethodEx __RPC_FAR * This,
            /* [out] */ IMINFO __RPC_FAR *pimi);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ReceiveSipInfo )( 
            IInputMethodEx __RPC_FAR * This,
            /* [in] */ SIPINFO __RPC_FAR *psi);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RegisterCallback )( 
            IInputMethodEx __RPC_FAR * This,
            /* [in] */ IIMCallback __RPC_FAR *lpIMCallback);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetImData )( 
            IInputMethodEx __RPC_FAR * This,
            /* [in] */ DWORD dwSize,
            /* [out] */ void __RPC_FAR *pvImData);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetImData )( 
            IInputMethodEx __RPC_FAR * This,
            /* [in] */ DWORD dwSize,
            /* [in] */ void __RPC_FAR *pvImData);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *UserOptionsDlg )( 
            IInputMethodEx __RPC_FAR * This,
            /* [in] */ HWND hwndParent);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetIMMActiveContext )( 
            IInputMethodEx __RPC_FAR * This,
            /* [in] */ HWND hwnd,
            BOOL bOpen,
            DWORD dwConversion,
            DWORD dwSentence,
            DWORD hkl);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RegisterCallbackEx )( 
            IInputMethodEx __RPC_FAR * This,
            /* [in] */ IIMCallbackEx __RPC_FAR *lpIMCallback);
        
        END_INTERFACE
    } IInputMethodExVtbl;

    interface IInputMethodEx
    {
        CONST_VTBL struct IInputMethodExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IInputMethodEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IInputMethodEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IInputMethodEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IInputMethodEx_Select(This,hwndSip)	\
    (This)->lpVtbl -> Select(This,hwndSip)

#define IInputMethodEx_Deselect(This)	\
    (This)->lpVtbl -> Deselect(This)

#define IInputMethodEx_Showing(This)	\
    (This)->lpVtbl -> Showing(This)

#define IInputMethodEx_Hiding(This)	\
    (This)->lpVtbl -> Hiding(This)

#define IInputMethodEx_GetInfo(This,pimi)	\
    (This)->lpVtbl -> GetInfo(This,pimi)

#define IInputMethodEx_ReceiveSipInfo(This,psi)	\
    (This)->lpVtbl -> ReceiveSipInfo(This,psi)

#define IInputMethodEx_RegisterCallback(This,lpIMCallback)	\
    (This)->lpVtbl -> RegisterCallback(This,lpIMCallback)

#define IInputMethodEx_GetImData(This,dwSize,pvImData)	\
    (This)->lpVtbl -> GetImData(This,dwSize,pvImData)

#define IInputMethodEx_SetImData(This,dwSize,pvImData)	\
    (This)->lpVtbl -> SetImData(This,dwSize,pvImData)

#define IInputMethodEx_UserOptionsDlg(This,hwndParent)	\
    (This)->lpVtbl -> UserOptionsDlg(This,hwndParent)


#define IInputMethodEx_SetIMMActiveContext(This,hwnd,bOpen,dwConversion,dwSentence,hkl)	\
    (This)->lpVtbl -> SetIMMActiveContext(This,hwnd,bOpen,dwConversion,dwSentence,hkl)

#define IInputMethodEx_RegisterCallbackEx(This,lpIMCallback)	\
    (This)->lpVtbl -> RegisterCallbackEx(This,lpIMCallback)

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IInputMethodEx_INTERFACE_DEFINED__ */


#ifndef __IInputMethod2_INTERFACE_DEFINED__
#define __IInputMethod2_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IInputMethod2
 * at Wed Jan 13 10:52:24 1999
 * using MIDL 3.02.88
 ****************************************/
/* [unique][uuid][object] */ 



EXTERN_C const IID IID_IInputMethod2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("0576F2E1-AA6B-11d2-A146-0000F8757270")
    IInputMethod2 : public IInputMethod
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SetIMMActiveContext( 
            /* [in] */ HWND hwnd,
            BOOL bOpen,
            DWORD dwConversion,
            DWORD dwSentence,
            DWORD hkl) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE RegisterCallback2( 
            /* [in] */ IIMCallback2 __RPC_FAR *lpIMCallback) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IInputMethod2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IInputMethod2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IInputMethod2 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IInputMethod2 __RPC_FAR * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Select )( 
            IInputMethod2 __RPC_FAR * This,
            /* [in] */ HWND hwndSip);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Deselect )( 
            IInputMethod2 __RPC_FAR * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Showing )( 
            IInputMethod2 __RPC_FAR * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Hiding )( 
            IInputMethod2 __RPC_FAR * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetInfo )( 
            IInputMethod2 __RPC_FAR * This,
            /* [out] */ IMINFO __RPC_FAR *pimi);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ReceiveSipInfo )( 
            IInputMethod2 __RPC_FAR * This,
            /* [in] */ SIPINFO __RPC_FAR *psi);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RegisterCallback )( 
            IInputMethod2 __RPC_FAR * This,
            /* [in] */ IIMCallback __RPC_FAR *lpIMCallback);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetImData )( 
            IInputMethod2 __RPC_FAR * This,
            /* [in] */ DWORD dwSize,
            /* [out] */ void __RPC_FAR *pvImData);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetImData )( 
            IInputMethod2 __RPC_FAR * This,
            /* [in] */ DWORD dwSize,
            /* [in] */ void __RPC_FAR *pvImData);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *UserOptionsDlg )( 
            IInputMethod2 __RPC_FAR * This,
            /* [in] */ HWND hwndParent);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetIMMActiveContext )( 
            IInputMethod2 __RPC_FAR * This,
            /* [in] */ HWND hwnd,
            BOOL bOpen,
            DWORD dwConversion,
            DWORD dwSentence,
            DWORD hkl);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RegisterCallback2 )( 
            IInputMethod2 __RPC_FAR * This,
            /* [in] */ IIMCallback2 __RPC_FAR *lpIMCallback);
        
        END_INTERFACE
    } IInputMethod2Vtbl;

    interface IInputMethod2
    {
        CONST_VTBL struct IInputMethod2Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IInputMethod2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IInputMethod2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IInputMethod2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IInputMethod2_Select(This,hwndSip)	\
    (This)->lpVtbl -> Select(This,hwndSip)

#define IInputMethod2_Deselect(This)	\
    (This)->lpVtbl -> Deselect(This)

#define IInputMethod2_Showing(This)	\
    (This)->lpVtbl -> Showing(This)

#define IInputMethod2_Hiding(This)	\
    (This)->lpVtbl -> Hiding(This)

#define IInputMethod2_GetInfo(This,pimi)	\
    (This)->lpVtbl -> GetInfo(This,pimi)

#define IInputMethod2_ReceiveSipInfo(This,psi)	\
    (This)->lpVtbl -> ReceiveSipInfo(This,psi)

#define IInputMethod2_RegisterCallback(This,lpIMCallback)	\
    (This)->lpVtbl -> RegisterCallback(This,lpIMCallback)

#define IInputMethod2_GetImData(This,dwSize,pvImData)	\
    (This)->lpVtbl -> GetImData(This,dwSize,pvImData)

#define IInputMethod2_SetImData(This,dwSize,pvImData)	\
    (This)->lpVtbl -> SetImData(This,dwSize,pvImData)

#define IInputMethod2_UserOptionsDlg(This,hwndParent)	\
    (This)->lpVtbl -> UserOptionsDlg(This,hwndParent)


#define IInputMethod2_SetIMMActiveContext(This,hwnd,bOpen,dwConversion,dwSentence,hkl)	\
    (This)->lpVtbl -> SetIMMActiveContext(This,hwnd,bOpen,dwConversion,dwSentence,hkl)

#define IInputMethod2_RegisterCallback2(This,lpIMCallback)	\
    (This)->lpVtbl -> RegisterCallback2(This,lpIMCallback)

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IInputMethod2_INTERFACE_DEFINED__ */



#ifdef __cplusplus
}
#endif

#ifdef __cplusplus
EXTERN_C const CLSID CLSID_CMSQwertyIm;

class DECLSPEC_UUID("42429667-ae04-11d0-a4f8-00aa00a749b9")
CMSQwertyIm;
#endif


#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\wm7\sfone7\Include\sipapi.h ===
//
// Copyright (c) Microsoft Corporation.  All rights reserved.
//
//
// Use of this sample source code is subject to the terms of the Microsoft
// license agreement under which you licensed this sample source code. If
// you did not accept the terms of the license agreement, you are not
// authorized to use this sample source code. For the terms of the license,
// please see the license agreement between you and Microsoft or, if applicable,
// see the LICENSE.RTF on your install media or the root of your tools installation.
// THE SAMPLE SOURCE CODE IS PROVIDED "AS IS", WITH NO WARRANTIES OR INDEMNITIES.
//
#ifndef __INCLUDE_SIP__
#define __INCLUDE_SIP__

#ifdef __cplusplus
extern "C" {
#endif

DWORD WINAPI SipStatus();

#define SIP_STATUS_UNAVAILABLE    0
#define SIP_STATUS_AVAILABLE    1

BOOL WINAPI    SipSetDefaultRect(RECT *);
BOOL WINAPI    SipRegisterNotification(HWND);

BOOL WINAPI SipShowIM(DWORD);

#define SIPF_OFF    0x00000000
#define SIPF_ON     0x00000001
#define SIPF_DOCKED    0x00000002
#define SIPF_LOCKED    0x00000004

#define SPI_SETCOMPLETIONINFO    223
#define SPI_SETSIPINFO            224
#define SPI_GETSIPINFO            225
#define SPI_SETCURRENTIM        226
#define SPI_GETCURRENTIM        227
#define SPI_SIPMOVE            250

typedef struct    tagSIPINFO
{
    DWORD   cbSize;
    DWORD   fdwFlags;
    RECT    rcVisibleDesktop;
    RECT    rcSipRect;
    DWORD   dwImDataSize;
    void   *pvImData;
} SIPINFO;

BOOL WINAPI SipGetInfo(SIPINFO *);
BOOL WINAPI SipSetInfo(SIPINFO *);

typedef struct tagIMENUMINFO
{
    TCHAR   szName[MAX_PATH];
    CLSID   clsid;
} IMENUMINFO, *PIMENUMINFO;

typedef int (* IMENUMPROC)(IMENUMINFO *);

int WINAPI SipEnumIM(IMENUMPROC);
BOOL WINAPI SipGetCurrentIM(CLSID *);
BOOL WINAPI SipSetCurrentIM(CLSID *);

typedef struct    tagIMWINDOWPOS
{
    int     x;        // Screen coordinate
    int     y;        // Screen coordinate
    int     cx;     // Screen coordinate
    int     cy;     // Screen coordinate
} IMWINDOWPOS;

// The following defines are for the WPARAM value in WM_IM_INFO.

#define IM_POSITION            0
#define IM_WIDEIMAGE        1
#define IM_NARROWIMAGE        2
#define IM_HWND_CONTEXT        3
#define IM_CONVERSION_MODE    4
#define IM_SENTENCE_MODE    5
#define IM_KEYBOARD_LAYOUT    6

HRESULT WINAPI SipGetSupportedInputLanguages(const CLSID*,DWORD*,LCID*);

#ifdef __cplusplus
}
#endif

#endif//__INCLUDE_SIP__
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\wm7\sfone7\Include\shtypes.h ===
//
// Copyright (c) Microsoft Corporation.  All rights reserved.
//
//
// Use of this sample source code is subject to the terms of the Microsoft
// license agreement under which you licensed this sample source code. If
// you did not accept the terms of the license agreement, you are not
// authorized to use this sample source code. For the terms of the license,
// please see the license agreement between you and Microsoft or, if applicable,
// see the LICENSE.RTF on your install media or the root of your tools installation.
// THE SAMPLE SOURCE CODE IS PROVIDED "AS IS", WITH NO WARRANTIES.
//

#pragma warning( disable: 4049 )  /* more than 64k source lines */

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 5.03.0286 */
/* at Tue Jan 23 14:31:17 2007
 */
/* Compiler settings for ..\shtypes.idl:
    Oicf (OptLev=i2), W1, Zp8, env=Win32 (32b run), ms_ext, c_ext
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 440
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __shtypes_h__
#define __shtypes_h__

/* Forward Declarations */ 

/* header files for imported files */
#include "wtypes.h"

#ifdef __cplusplus
extern "C"{
#endif 

void __RPC_FAR * __RPC_USER MIDL_user_allocate(size_t);
void __RPC_USER MIDL_user_free( void __RPC_FAR * ); 

/* interface __MIDL_itf_shtypes_0000 */
/* [local] */ 

//+-------------------------------------------------------------------------
//
//  Microsoft Windows
//  Copyright (c) Microsoft Corporation. All rights reserved.
//
//--------------------------------------------------------------------------
//===========================================================================
//
// Object identifiers in the explorer's name space (ItemID and IDList)
//
//  All the items that the user can browse with the explorer (such as files,
// directories, servers, work-groups, etc.) has an identifier which is unique
// among items within the parent folder. Those identifiers are called item
// IDs (SHITEMID). Since all its parent folders have their own item IDs,
// any items can be uniquely identified by a list of item IDs, which is called
// an ID list (ITEMIDLIST).
//
//  ID lists are almost always allocated by the task allocator (see some
// description below as well as OLE 2.0 SDK) and may be passed across
// some of shell interfaces (such as IShellFolder). Each item ID in an ID list
// is only meaningful to its parent folder (which has generated it), and all
// the clients must treat it as an opaque binary data except the first two
// bytes, which indicates the size of the item ID.
//
//  When a shell extension -- which implements the IShellFolder interace --
// generates an item ID, it may put any information in it, not only the data
// with that it needs to identifies the item, but also some additional
// information, which would help implementing some other functions efficiently.
// For example, the shell's IShellFolder implementation of file system items
// stores the primary (long) name of a file or a directory as the item
// identifier, but it also stores its alternative (short) name, size and date
// etc.
//
//  When an ID list is passed to one of shell APIs (such as SHGetPathFromIDList),
// it is always an absolute path -- relative from the root of the name space,
// which is the desktop folder. When an ID list is passed to one of IShellFolder
// member function, it is always a relative path from the folder (unless it
// is explicitly specified).
//
//===========================================================================
//
// SHITEMID -- Item ID  (mkid)
//     USHORT      cb;             // Size of the ID (including cb itself)
//     BYTE        abID[];         // The item ID (variable length)
//
#include <pshpack1.h>
typedef struct _SHITEMID
    {
    USHORT cb;
    BYTE abID[ 1 ];
    }	SHITEMID;

#include <poppack.h>
#if defined(_M_IX86)
#define __unaligned
#endif // __unaligned
typedef SHITEMID __unaligned __RPC_FAR *LPSHITEMID;

typedef const SHITEMID __unaligned __RPC_FAR *LPCSHITEMID;

//
// ITEMIDLIST -- List if item IDs (combined with 0-terminator)
//
#include <pshpack1.h>
typedef struct _ITEMIDLIST
    {
    SHITEMID mkid;
    }	ITEMIDLIST;

#if defined(STRICT_TYPED_ITEMIDS) && defined(__cplusplus)
typedef struct _ITEMIDLIST_RELATIVE : ITEMIDLIST {} ITEMIDLIST_RELATIVE;
typedef struct _ITEMID_CHILD : ITEMIDLIST_RELATIVE {} ITEMID_CHILD;
typedef struct _ITEMIDLIST_ABSOLUTE : ITEMIDLIST_RELATIVE {} ITEMIDLIST_ABSOLUTE;
#else // !(defined(STRICT_TYPED_ITEMIDS) && defined(__cplusplus))
typedef ITEMIDLIST ITEMIDLIST_RELATIVE;

typedef ITEMIDLIST ITEMID_CHILD;

typedef ITEMIDLIST ITEMIDLIST_ABSOLUTE;

#endif // defined(STRICT_TYPED_ITEMIDS) && defined(__cplusplus)
#include <poppack.h>
typedef /* [unique] */ BYTE_BLOB __RPC_FAR *wirePIDL;

typedef /* [wire_marshal] */ ITEMIDLIST __unaligned __RPC_FAR *LPITEMIDLIST;

typedef /* [wire_marshal] */ const ITEMIDLIST __unaligned __RPC_FAR *LPCITEMIDLIST;

#if defined(STRICT_TYPED_ITEMIDS) && defined(__cplusplus)
typedef /* [wire_marshal] */ ITEMIDLIST_ABSOLUTE __RPC_FAR *PIDLIST_ABSOLUTE;

typedef /* [wire_marshal] */ const ITEMIDLIST_ABSOLUTE __RPC_FAR *PCIDLIST_ABSOLUTE;

typedef /* [wire_marshal] */ const ITEMIDLIST_ABSOLUTE __unaligned __RPC_FAR *PCUIDLIST_ABSOLUTE;

typedef /* [wire_marshal] */ ITEMIDLIST_RELATIVE __RPC_FAR *PIDLIST_RELATIVE;

typedef /* [wire_marshal] */ const ITEMIDLIST_RELATIVE __RPC_FAR *PCIDLIST_RELATIVE;

typedef /* [wire_marshal] */ ITEMIDLIST_RELATIVE __unaligned __RPC_FAR *PUIDLIST_RELATIVE;

typedef /* [wire_marshal] */ const ITEMIDLIST_RELATIVE __unaligned __RPC_FAR *PCUIDLIST_RELATIVE;

typedef /* [wire_marshal] */ ITEMID_CHILD __RPC_FAR *PITEMID_CHILD;

typedef /* [wire_marshal] */ const ITEMID_CHILD __RPC_FAR *PCITEMID_CHILD;

typedef /* [wire_marshal] */ ITEMID_CHILD __unaligned __RPC_FAR *PUITEMID_CHILD;

typedef /* [wire_marshal] */ const ITEMID_CHILD __unaligned __RPC_FAR *PCUITEMID_CHILD;

typedef const PCUITEMID_CHILD __RPC_FAR *PCUITEMID_CHILD_ARRAY;

typedef const PCUIDLIST_RELATIVE __RPC_FAR *PCUIDLIST_RELATIVE_ARRAY;

typedef const PCIDLIST_ABSOLUTE __RPC_FAR *PCIDLIST_ABSOLUTE_ARRAY;

typedef const PCUIDLIST_ABSOLUTE __RPC_FAR *PCUIDLIST_ABSOLUTE_ARRAY;

#else // !(defined(STRICT_TYPED_ITEMIDS) && defined(__cplusplus))
#define PIDLIST_ABSOLUTE         LPITEMIDLIST
#define PCIDLIST_ABSOLUTE        LPCITEMIDLIST
#define PCUIDLIST_ABSOLUTE       LPCITEMIDLIST
#define PIDLIST_RELATIVE         LPITEMIDLIST
#define PCIDLIST_RELATIVE        LPCITEMIDLIST
#define PUIDLIST_RELATIVE        LPITEMIDLIST
#define PCUIDLIST_RELATIVE       LPCITEMIDLIST
#define PITEMID_CHILD            LPITEMIDLIST
#define PCITEMID_CHILD           LPCITEMIDLIST
#define PUITEMID_CHILD           LPITEMIDLIST
#define PCUITEMID_CHILD          LPCITEMIDLIST
#define PCUITEMID_CHILD_ARRAY    LPCITEMIDLIST *
#define PCUIDLIST_RELATIVE_ARRAY LPCITEMIDLIST *
#define PCIDLIST_ABSOLUTE_ARRAY  LPCITEMIDLIST *
#define PCUIDLIST_ABSOLUTE_ARRAY LPCITEMIDLIST *
#endif // defined(STRICT_TYPED_ITEMIDS) && defined(__cplusplus)
#ifdef MIDL_PASS
typedef struct _WIN32_FIND_DATAA
    {
    DWORD dwFileAttributes;
    FILETIME ftCreationTime;
    FILETIME ftLastAccessTime;
    FILETIME ftLastWriteTime;
    DWORD nFileSizeHigh;
    DWORD nFileSizeLow;
    DWORD dwReserved0;
    DWORD dwReserved1;
    CHAR cFileName[ 260 ];
    CHAR cAlternateFileName[ 14 ];
    }	WIN32_FIND_DATAA;

typedef struct _WIN32_FIND_DATAA __RPC_FAR *PWIN32_FIND_DATAA;

typedef struct _WIN32_FIND_DATAA __RPC_FAR *LPWIN32_FIND_DATAA;

typedef struct _WIN32_FIND_DATAW
    {
    DWORD dwFileAttributes;
    FILETIME ftCreationTime;
    FILETIME ftLastAccessTime;
    FILETIME ftLastWriteTime;
    DWORD nFileSizeHigh;
    DWORD nFileSizeLow;
    DWORD dwReserved0;
    DWORD dwReserved1;
    WCHAR cFileName[ 260 ];
    WCHAR cAlternateFileName[ 14 ];
    }	WIN32_FIND_DATAW;

typedef struct _WIN32_FIND_DATAW __RPC_FAR *PWIN32_FIND_DATAW;

typedef struct _WIN32_FIND_DATAW __RPC_FAR *LPWIN32_FIND_DATAW;

#endif // MIDL_PASS
//-------------------------------------------------------------------------
//
// struct STRRET
//
// structure for returning strings from IShellFolder member functions
//
//-------------------------------------------------------------------------
//
//  uType indicate which union member to use 
//    STRRET_WSTR    Use STRRET.pOleStr     must be freed by caller of GetDisplayNameOf
//    STRRET_OFFSET  Use STRRET.uOffset     Offset into SHITEMID for ANSI string 
//    STRRET_CSTR    Use STRRET.cStr        ANSI Buffer
//
typedef /* [v1_enum] */ 
enum tagSTRRET_TYPE
    {	STRRET_WSTR	= 0,
	STRRET_OFFSET	= 0x1,
	STRRET_CSTR	= 0x2
    }	STRRET_TYPE;

#if defined(_MSC_VER) && (_MSC_VER >= 1200)
#pragma warning(push)
#pragma warning(disable:4201) /* nonstandard extension used : nameless struct/union */
#pragma once
#endif
#include <pshpack8.h>
typedef struct _STRRET
    {
    UINT uType;
    /* [switch_is][switch_type] */ union 
        {
        /* [case()][string] */ LPWSTR pOleStr;
        /* [case()] */ UINT uOffset;
        /* [case()] */ char cStr[ 260 ];
        }	DUMMYUNIONNAME;
    }	STRRET;

#include <poppack.h>
#if defined(_MSC_VER) && (_MSC_VER >= 1200)
#pragma warning(pop)
#endif
typedef STRRET __RPC_FAR *LPSTRRET;

//-------------------------------------------------------------------------
//
// struct SHELLDETAILS
//
// structure for returning strings from IShellDetails
//
//-------------------------------------------------------------------------
//
//  fmt;            // LVCFMT_* value (header only)
//  cxChar;         // Number of 'average' characters (header only)
//  str;            // String information
//
#include <pshpack1.h>
typedef struct _SHELLDETAILS
    {
    int fmt;
    int cxChar;
    STRRET str;
    }	SHELLDETAILS;

typedef struct _SHELLDETAILS __RPC_FAR *LPSHELLDETAILS;

#include <poppack.h>

#if (_WIN32_IE >= _WIN32_IE_IE60SP2)
typedef /* [v1_enum] */ 
enum tagPERCEIVED
    {	PERCEIVED_TYPE_FIRST	= -3,
	PERCEIVED_TYPE_CUSTOM	= -3,
	PERCEIVED_TYPE_UNSPECIFIED	= -2,
	PERCEIVED_TYPE_FOLDER	= -1,
	PERCEIVED_TYPE_UNKNOWN	= 0,
	PERCEIVED_TYPE_TEXT	= 1,
	PERCEIVED_TYPE_IMAGE	= 2,
	PERCEIVED_TYPE_AUDIO	= 3,
	PERCEIVED_TYPE_VIDEO	= 4,
	PERCEIVED_TYPE_COMPRESSED	= 5,
	PERCEIVED_TYPE_DOCUMENT	= 6,
	PERCEIVED_TYPE_SYSTEM	= 7,
	PERCEIVED_TYPE_APPLICATION	= 8,
	PERCEIVED_TYPE_GAMEMEDIA	= 9,
	PERCEIVED_TYPE_CONTACTS	= 10,
	PERCEIVED_TYPE_LAST	= 10
    }	PERCEIVED;

#define PERCEIVEDFLAG_UNDEFINED     0x0000
#define PERCEIVEDFLAG_SOFTCODED     0x0001
#define PERCEIVEDFLAG_HARDCODED     0x0002
#define PERCEIVEDFLAG_NATIVESUPPORT 0x0004
#define PERCEIVEDFLAG_GDIPLUS       0x0010
#define PERCEIVEDFLAG_WMSDK         0x0020
#define PERCEIVEDFLAG_ZIPFOLDER     0x0040
typedef DWORD PERCEIVEDFLAG;

#endif  // _WIN32_IE_IE60SP2

#if (NTDDI_VERSION >= NTDDI_LONGHORN)
typedef struct _COMDLG_FILTERSPEC
    {
    /* [string] */ LPCWSTR pszName;
    /* [string] */ LPCWSTR pszSpec;
    }	COMDLG_FILTERSPEC;

typedef struct tagMACHINE_ID
    {
    char szName[ 16 ];
    }	MACHINE_ID;

typedef struct tagDOMAIN_RELATIVE_OBJECTID
    {
    GUID guidVolume;
    GUID guidObject;
    }	DOMAIN_RELATIVE_OBJECTID;

typedef GUID KNOWNFOLDERID;

#if 0
typedef KNOWNFOLDERID __RPC_FAR *REFKNOWNFOLDERID;

#endif // 0
#ifdef __cplusplus
#define REFKNOWNFOLDERID const KNOWNFOLDERID &
#else // !__cplusplus
#define REFKNOWNFOLDERID const KNOWNFOLDERID * __MIDL_CONST
#endif // __cplusplus
#endif  // NTDDI_LONGHORN
typedef GUID FOLDERTYPEID;

#if 0
typedef FOLDERTYPEID __RPC_FAR *REFFOLDERTYPEID;

#endif // 0
#ifdef __cplusplus
#define REFFOLDERTYPEID const FOLDERTYPEID &
#else // !__cplusplus
#define REFFOLDERTYPEID const FOLDERTYPEID * __MIDL_CONST
#endif // __cplusplus
typedef GUID TASKOWNERID;

#if 0
typedef TASKOWNERID __RPC_FAR *REFTASKOWNERID;

#endif // 0
#ifdef __cplusplus
#define REFTASKOWNERID const TASKOWNERID &
#else // !__cplusplus
#define REFTASKOWNERID const TASKOWNERID * __MIDL_CONST
#endif // __cplusplus
#ifndef LF_FACESIZE
typedef struct tagLOGFONTA
    {
    LONG lfHeight;
    LONG lfWidth;
    LONG lfEscapement;
    LONG lfOrientation;
    LONG lfWeight;
    BYTE lfItalic;
    BYTE lfUnderline;
    BYTE lfStrikeOut;
    BYTE lfCharSet;
    BYTE lfOutPrecision;
    BYTE lfClipPrecision;
    BYTE lfQuality;
    BYTE lfPitchAndFamily;
    CHAR lfFaceName[ 32 ];
    }	LOGFONTA;

typedef struct tagLOGFONTW
    {
    LONG lfHeight;
    LONG lfWidth;
    LONG lfEscapement;
    LONG lfOrientation;
    LONG lfWeight;
    BYTE lfItalic;
    BYTE lfUnderline;
    BYTE lfStrikeOut;
    BYTE lfCharSet;
    BYTE lfOutPrecision;
    BYTE lfClipPrecision;
    BYTE lfQuality;
    BYTE lfPitchAndFamily;
    WCHAR lfFaceName[ 32 ];
    }	LOGFONTW;

typedef LOGFONTW LOGFONT;

#endif // LF_FACESIZE
typedef /* [v1_enum] */ 
enum tagSHCOLSTATE
    {	SHCOLSTATE_TYPE_STR	= 0x1,
	SHCOLSTATE_TYPE_INT	= 0x2,
	SHCOLSTATE_TYPE_DATE	= 0x3,
	SHCOLSTATE_TYPEMASK	= 0xf,
	SHCOLSTATE_ONBYDEFAULT	= 0x10,
	SHCOLSTATE_SLOW	= 0x20,
	SHCOLSTATE_EXTENDED	= 0x40,
	SHCOLSTATE_SECONDARYUI	= 0x80,
	SHCOLSTATE_HIDDEN	= 0x100,
	SHCOLSTATE_PREFER_VARCMP	= 0x200,
	SHCOLSTATE_PREFER_FMTCMP	= 0x400,
	SHCOLSTATE_NOSORTBYFOLDERNESS	= 0x800,
	SHCOLSTATE_VIEWONLY	= 0x10000,
	SHCOLSTATE_BATCHREAD	= 0x20000,
	SHCOLSTATE_NO_GROUPBY	= 0x40000,
	SHCOLSTATE_FIXED_WIDTH	= 0x1000,
	SHCOLSTATE_NODPISCALE	= 0x2000,
	SHCOLSTATE_FIXED_RATIO	= 0x4000,
	SHCOLSTATE_DISPLAYMASK	= 0xf000
    }	SHCOLSTATE;

typedef DWORD SHCOLSTATEF;

typedef PROPERTYKEY SHCOLUMNID;

typedef const SHCOLUMNID __RPC_FAR *LPCSHCOLUMNID;



extern RPC_IF_HANDLE __MIDL_itf_shtypes_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shtypes_0000_v0_0_s_ifspec;

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\wm7\sfone7\Include\smcce.h ===
//
// Copyright (c) Microsoft Corporation.  All rights reserved.
//
//
// Use of this sample source code is subject to the terms of the Microsoft
// license agreement under which you licensed this sample source code. If
// you did not accept the terms of the license agreement, you are not
// authorized to use this sample source code. For the terms of the license,
// please see the license agreement between you and Microsoft or, if applicable,
// see the LICENSE.RTF on your install media or the root of your tools installation.
// THE SAMPLE SOURCE CODE IS PROVIDED "AS IS", WITH NO WARRANTIES OR INDEMNITIES.
//
/*++


Module Name:

    smcce.h

Abstract:

    This files inlcudes the Windows CE specific data structure
    for the smart card library

Environment:

    Kernel mode only.

Notes:

Revision History:

    - Created Oct 1998  

--*/
#include <ntstatus.h>
#include <windows.h>
#include <types.h>
#include <tchar.h>
#include <ceddk.h>


#ifndef RtlMoveMemory
#define RtlMoveMemory(Destination,Source,Length) memmove((Destination),(Source),(Length))
#define RtlCopyMemory(Destination,Source,Length) memcpy((Destination),(Source),(Length))
#define RtlFillMemory(Destination,Length,Fill) memset((Destination),(Fill),(Length))
#define RtlZeroMemory(Destination,Length) memset((Destination),0,(Length))
#endif

typedef struct _OS_DEP_DATA {

	// Pointer to the device object (Must be set by driver)
	struct _SMARTCARD_EXTENSION *pSmartCardExtension;
	CRITICAL_SECTION CritSect;  // used for serializing entry into driver
	HANDLE hChangeEvent;        // signaled on card-insertion event
	HANDLE hCancelEvent;        // signaled on CANCEL_BLOCKING ioctls

} OS_DEP_DATA, *POS_DEP_DATA;
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\wm7\sfone7\Include\snapi.h ===
//
// Copyright (c) Microsoft Corporation.  All rights reserved.
//
//
// Use of this sample source code is subject to the terms of the Microsoft
// license agreement under which you licensed this sample source code. If
// you did not accept the terms of the license agreement, you are not
// authorized to use this sample source code. For the terms of the license,
// please see the license agreement between you and Microsoft or, if applicable,
// see the LICENSE.RTF on your install media or the root of your tools installation.
// THE SAMPLE SOURCE CODE IS PROVIDED "AS IS", WITH NO WARRANTIES OR INDEMNITIES.
//
//*************************************************************
//
// snapi.h
//
// Registry values for use with the State & Notification Broker APIs in regext.h
//
//*************************************************************
 
 
////////////////////////////////////////////////////////////////////////////////
// ActiveApplication
// Gets the name of the application that was previously active and the name of the application that is currently active, separated by the 'Escape' character ('\e').
#define SN_ACTIVEAPPLICATION_ROOT HKEY_CURRENT_USER
#define SN_ACTIVEAPPLICATION_PATH TEXT("System\\State\\Shell")
#define SN_ACTIVEAPPLICATION_VALUE TEXT("Active Application")
 
  
////////////////////////////////////////////////////////////////////////////////
// DisplayRotation
// Gets the default orientation of the display, specified as the number of degrees, ranging from 0 to 360. Portrait = 0. Landscape = 90 or -90.
#define SN_DISPLAYROTATION_ROOT HKEY_LOCAL_MACHINE
#define SN_DISPLAYROTATION_PATH TEXT("System\\GDI\\Rotation")
#define SN_DISPLAYROTATION_VALUE TEXT("Angle")
 
  
////////////////////////////////////////////////////////////////////////////////
// KeyboardPresent
// Gets a value indicating whether a keyboard is attached and enabled.
#define SN_KEYBOARDPRESENT_ROOT HKEY_CURRENT_USER
#define SN_KEYBOARDPRESENT_PATH TEXT("Software\\Microsoft\\Shell")
#define SN_KEYBOARDPRESENT_VALUE TEXT("HasKeyboard")
 
  
////////////////////////////////////////////////////////////////////////////////
// CradlePresent
// Gets a value indicating whether the device is connected to a cradle.
#define SN_CRADLEPRESENT_ROOT HKEY_LOCAL_MACHINE
#define SN_CRADLEPRESENT_PATH TEXT("System\\State\\Hardware")
#define SN_CRADLEPRESENT_VALUE TEXT("Cradled")
 
  
////////////////////////////////////////////////////////////////////////////////
// CameraPresent
// Gets a value indicating whether a camera is attached.
#define SN_CAMERAPRESENT_ROOT HKEY_LOCAL_MACHINE
#define SN_CAMERAPRESENT_PATH TEXT("System\\State\\Hardware")
#define SN_CAMERAPRESENT_VALUE TEXT("Camera")

////////////////////////////////////////////////////////////////////////////////
// CameraEnabled
// Gets a value indicating whether a camera is enabled.
#define SN_CAMERAENABLED_ROOT HKEY_LOCAL_MACHINE
#define SN_CAMERAENABLED_PATH TEXT("System\\State\\Hardware")
#define SN_CAMERAENABLED_VALUE TEXT("CameraEnabled")

////////////////////////////////////////////////////////////////////////////////
// MaxMenuBarButtons
// Gets a value indicating the maximum number of menu bar buttons (i.e. softkeys)
#define SN_MAXMENUBARBUTTONS_ROOT HKEY_LOCAL_MACHINE
#define SN_MAXMENUBARBUTTONS_PATH TEXT("System\\Softkeys")
#define SN_MAXMENUBARBUTTONS_VALUE TEXT("MaxMenuBarButtons")
  
////////////////////////////////////////////////////////////////////////////////
// MessagingSmsUnread
// Gets the number of unread SMS messages.
#define SN_MESSAGINGSMSUNREAD_ROOT HKEY_CURRENT_USER
#define SN_MESSAGINGSMSUNREAD_PATH TEXT("System\\State\\Messages\\SMS\\Unread")
#define SN_MESSAGINGSMSUNREAD_VALUE TEXT("Count")
 
  
////////////////////////////////////////////////////////////////////////////////
// MessagingMmsUnread
// Gets the number of unread MMS messages
#define SN_MESSAGINGMMSUNREAD_ROOT HKEY_CURRENT_USER
#define SN_MESSAGINGMMSUNREAD_PATH TEXT("System\\State\\Messages\\MMS\\Unread")
#define SN_MESSAGINGMMSUNREAD_VALUE TEXT("Count")
 
  
////////////////////////////////////////////////////////////////////////////////
// MessagingVoiceMailTotalUnread
// Gets the number of unplayed voice mail messages.
#define SN_MESSAGINGVOICEMAILTOTALUNREAD_ROOT HKEY_CURRENT_USER
#define SN_MESSAGINGVOICEMAILTOTALUNREAD_PATH TEXT("System\\State\\Messages\\VMail\\Total\\Unread")
#define SN_MESSAGINGVOICEMAILTOTALUNREAD_VALUE TEXT("Count")
 
  
////////////////////////////////////////////////////////////////////////////////
// MessagingVoiceMail1Unread
// Gets the number of unplayed voice mail messages for line 1.
#define SN_MESSAGINGVOICEMAIL1UNREAD_ROOT HKEY_CURRENT_USER
#define SN_MESSAGINGVOICEMAIL1UNREAD_PATH TEXT("System\\State\\Messages\\VMail\\Line1\\Unread")
#define SN_MESSAGINGVOICEMAIL1UNREAD_VALUE TEXT("Count")
 
  
////////////////////////////////////////////////////////////////////////////////
// MessagingVoiceMail2Unread
// Gets the number of unplayed voice mail messages for line 2
#define SN_MESSAGINGVOICEMAIL2UNREAD_ROOT HKEY_CURRENT_USER
#define SN_MESSAGINGVOICEMAIL2UNREAD_PATH TEXT("System\\State\\Messages\\VMail\\Line2\\Unread")
#define SN_MESSAGINGVOICEMAIL2UNREAD_VALUE TEXT("Count")
 
  
////////////////////////////////////////////////////////////////////////////////
// MessagingActiveSyncEmailUnread
// Gets the number of unread ActiveSync e-mail messages.
#define SN_MESSAGINGACTIVESYNCEMAILUNREAD_ROOT HKEY_CURRENT_USER
#define SN_MESSAGINGACTIVESYNCEMAILUNREAD_PATH TEXT("System\\State\\Messages\\Sync\\Unread")
#define SN_MESSAGINGACTIVESYNCEMAILUNREAD_VALUE TEXT("Count")
 
  
////////////////////////////////////////////////////////////////////////////////
// MessagingTotalEmailUnread
// Gets the total number of unread e-mail messages from all POP3/IMAP accounts.
#define SN_MESSAGINGTOTALEMAILUNREAD_ROOT HKEY_CURRENT_USER
#define SN_MESSAGINGTOTALEMAILUNREAD_PATH TEXT("System\\State\\Messages\\TotalEmail\\Unread")
#define SN_MESSAGINGTOTALEMAILUNREAD_VALUE TEXT("Count")
 
  
////////////////////////////////////////////////////////////////////////////////
// MessagingOtherEmailUnread
// Gets the number of unread e-mail messages from all non-ActiveSync messaging accounts.
#define SN_MESSAGINGOTHEREMAILUNREAD_ROOT HKEY_CURRENT_USER
#define SN_MESSAGINGOTHEREMAILUNREAD_PATH TEXT("System\\State\\Messages\\OtherEmail\\Unread")
#define SN_MESSAGINGOTHEREMAILUNREAD_VALUE TEXT("Count")
 
  
////////////////////////////////////////////////////////////////////////////////
// MessagingLastEmailAccountName
// Gets the name of the e-mail account that was last active.
#define SN_MESSAGINGLASTEMAILACCOUNTNAME_ROOT HKEY_CURRENT_USER
#define SN_MESSAGINGLASTEMAILACCOUNTNAME_PATH TEXT("System\\State\\Messages")
#define SN_MESSAGINGLASTEMAILACCOUNTNAME_VALUE TEXT("Last Received Account")
 
  
////////////////////////////////////////////////////////////////////////////////
// MessagingSmsAccountName
// Gets the name of the SMS messaging account.
#define SN_MESSAGINGSMSACCOUNTNAME_ROOT HKEY_CURRENT_USER
#define SN_MESSAGINGSMSACCOUNTNAME_PATH TEXT("System\\State\\Messages\\SMS")
#define SN_MESSAGINGSMSACCOUNTNAME_VALUE TEXT("Account Name")
 
  
////////////////////////////////////////////////////////////////////////////////
// MessagingMmsAccountName
// Gets the name of the MMS messaging account.
#define SN_MESSAGINGMMSACCOUNTNAME_ROOT HKEY_CURRENT_USER
#define SN_MESSAGINGMMSACCOUNTNAME_PATH TEXT("System\\State\\Messages\\MMS")
#define SN_MESSAGINGMMSACCOUNTNAME_VALUE TEXT("Account Name")
 
  
////////////////////////////////////////////////////////////////////////////////
// MessagingActiveSyncAccountName
// Get the name of the Outlook e-mail messaging account.
#define SN_MESSAGINGACTIVESYNCACCOUNTNAME_ROOT HKEY_CURRENT_USER
#define SN_MESSAGINGACTIVESYNCACCOUNTNAME_PATH TEXT("System\\State\\Messages\\Sync")
#define SN_MESSAGINGACTIVESYNCACCOUNTNAME_VALUE TEXT("Account Name")
 
  
////////////////////////////////////////////////////////////////////////////////
// TasksActive
// Gets the number of active tasks. 
#define SN_TASKSACTIVE_ROOT HKEY_CURRENT_USER
#define SN_TASKSACTIVE_PATH TEXT("System\\State\\Tasks")
#define SN_TASKSACTIVE_VALUE TEXT("Active")
 
  
////////////////////////////////////////////////////////////////////////////////
// TasksHighPriority
// Gets the number of high priority tasks that are currently active.
#define SN_TASKSHIGHPRIORITY_ROOT HKEY_CURRENT_USER
#define SN_TASKSHIGHPRIORITY_PATH TEXT("System\\State\\Tasks")
#define SN_TASKSHIGHPRIORITY_VALUE TEXT("High Priority")
 
  
////////////////////////////////////////////////////////////////////////////////
// TasksDueToday
// Gets the number of active tasks that are due today. 
#define SN_TASKSDUETODAY_ROOT HKEY_CURRENT_USER
#define SN_TASKSDUETODAY_PATH TEXT("System\\State\\Tasks")
#define SN_TASKSDUETODAY_VALUE TEXT("Due Today")
 
  
////////////////////////////////////////////////////////////////////////////////
// TasksOverdue
// Gets the number of overdue tasks. 
#define SN_TASKSOVERDUE_ROOT HKEY_CURRENT_USER
#define SN_TASKSOVERDUE_PATH TEXT("System\\State\\Tasks")
#define SN_TASKSOVERDUE_VALUE TEXT("Overdue")
 
  
////////////////////////////////////////////////////////////////////////////////
// CalendarNextAppointmentSubject
// Gets the subject of the next Appointment.
#define SN_CALENDARNEXTAPPOINTMENTSUBJECT_ROOT HKEY_CURRENT_USER
#define SN_CALENDARNEXTAPPOINTMENTSUBJECT_PATH TEXT("System\\State\\Appointments\\Next")
#define SN_CALENDARNEXTAPPOINTMENTSUBJECT_VALUE TEXT("Subject")
 
  
////////////////////////////////////////////////////////////////////////////////
// CalendarNextAppointmentLocation
// Gets the location of the next Appointment.
#define SN_CALENDARNEXTAPPOINTMENTLOCATION_ROOT HKEY_CURRENT_USER
#define SN_CALENDARNEXTAPPOINTMENTLOCATION_PATH TEXT("System\\State\\Appointments\\Next")
#define SN_CALENDARNEXTAPPOINTMENTLOCATION_VALUE TEXT("Location")
 
  
////////////////////////////////////////////////////////////////////////////////
// CalendarNextAppointmentStart
// Gets the starting time of the next Appointment.
// The value is a FILETIME stored in REG_BINARY format.
#define SN_CALENDARNEXTAPPOINTMENTSTART_ROOT HKEY_CURRENT_USER
#define SN_CALENDARNEXTAPPOINTMENTSTART_PATH TEXT("System\\State\\Appointments\\Next")
#define SN_CALENDARNEXTAPPOINTMENTSTART_VALUE TEXT("Start Time")
 
  
////////////////////////////////////////////////////////////////////////////////
// CalendarNextAppointmentEnd
// Gets the ending time of the next Appointment.
// The value is a FILETIME stored in REG_BINARY format.
#define SN_CALENDARNEXTAPPOINTMENTEND_ROOT HKEY_CURRENT_USER
#define SN_CALENDARNEXTAPPOINTMENTEND_PATH TEXT("System\\State\\Appointments\\Next")
#define SN_CALENDARNEXTAPPOINTMENTEND_VALUE TEXT("End Time")
 
  
////////////////////////////////////////////////////////////////////////////////
// MediaPlayerAlbumArtist
// Gets the album artist's name of the currently playing track in Windows Media Player.
#define SN_MEDIAPLAYERALBUMARTIST_ROOT HKEY_CURRENT_USER
#define SN_MEDIAPLAYERALBUMARTIST_PATH TEXT("System\\State\\MediaPlayer")
#define SN_MEDIAPLAYERALBUMARTIST_VALUE TEXT("WM/AlbumArtist")
 
  
////////////////////////////////////////////////////////////////////////////////
// MediaPlayerTrackBitrate
// Gets the title of the track currently playing in Windows Media Player. For example, "128Kbps"
#define SN_MEDIAPLAYERTRACKBITRATE_ROOT HKEY_CURRENT_USER
#define SN_MEDIAPLAYERTRACKBITRATE_PATH TEXT("System\\State\\MediaPlayer")
#define SN_MEDIAPLAYERTRACKBITRATE_VALUE TEXT("Bitrate")
 
  
////////////////////////////////////////////////////////////////////////////////
// MediaPlayerTrackTitle
// Gets the title of the track currently playing in Windows Media Player.
#define SN_MEDIAPLAYERTRACKTITLE_ROOT HKEY_CURRENT_USER
#define SN_MEDIAPLAYERTRACKTITLE_PATH TEXT("System\\State\\MediaPlayer")
#define SN_MEDIAPLAYERTRACKTITLE_VALUE TEXT("Title")
 
  
////////////////////////////////////////////////////////////////////////////////
// MediaPlayerAlbumTitle
// Gets the album title of the currently playing track in Windows Media Player.
#define SN_MEDIAPLAYERALBUMTITLE_ROOT HKEY_CURRENT_USER
#define SN_MEDIAPLAYERALBUMTITLE_PATH TEXT("System\\State\\MediaPlayer")
#define SN_MEDIAPLAYERALBUMTITLE_VALUE TEXT("Wm/AlbumTitle")
 
  
////////////////////////////////////////////////////////////////////////////////
// MediaPlayerTrackArtist
// Gets the artist's name of the currently playing track in Windows Media Player.
#define SN_MEDIAPLAYERTRACKARTIST_ROOT HKEY_CURRENT_USER
#define SN_MEDIAPLAYERTRACKARTIST_PATH TEXT("System\\State\\MediaPlayer")
#define SN_MEDIAPLAYERTRACKARTIST_VALUE TEXT("WM/OriginalArtist")
 
  
////////////////////////////////////////////////////////////////////////////////
// MediaPlayerTrackNumber
// Gets the number of the current track playing in Windows Media Player.
#define SN_MEDIAPLAYERTRACKNUMBER_ROOT HKEY_CURRENT_USER
#define SN_MEDIAPLAYERTRACKNUMBER_PATH TEXT("System\\State\\MediaPlayer")
#define SN_MEDIAPLAYERTRACKNUMBER_VALUE TEXT("WM/TrackNumber")
 
  
////////////////////////////////////////////////////////////////////////////////
// MediaPlayerTrackGenre
// Gets the genre of the currently playing track in Windows Media Player.
#define SN_MEDIAPLAYERTRACKGENRE_ROOT HKEY_CURRENT_USER
#define SN_MEDIAPLAYERTRACKGENRE_PATH TEXT("System\\State\\MediaPlayer")
#define SN_MEDIAPLAYERTRACKGENRE_VALUE TEXT("WM/Genre")
 
  
////////////////////////////////////////////////////////////////////////////////
// MediaPlayerTrackTimeElapsed
// Gets the elapsed time (in milliseconds) of the currently playing track in Windows Media Player.
#define SN_MEDIAPLAYERTRACKTIMEELAPSED_ROOT HKEY_CURRENT_USER
#define SN_MEDIAPLAYERTRACKTIMEELAPSED_PATH TEXT("System\\State\\MediaPlayer")
#define SN_MEDIAPLAYERTRACKTIMEELAPSED_VALUE TEXT("Elapsed")
 
  
////////////////////////////////////////////////////////////////////////////////
// PowerBatteryStrength
// Gets the remaining battery power level, expressed as a percentage of fully charged.
#define SN_POWERBATTERYSTRENGTH_ROOT HKEY_LOCAL_MACHINE
#define SN_POWERBATTERYSTRENGTH_PATH TEXT("System\\State\\Battery")
#define SN_POWERBATTERYSTRENGTH_VALUE TEXT("Main")
#define SN_POWERBATTERYSTRENGTH_BITMASK 0xFFFF0000

  
////////////////////////////////////////////////////////////////////////////////
// PowerBatteryState
// Gets the current battery state (for example, it is low, and charging). 
// This value can be a bitwise combination of SN_POWERBATTERYSTATE_FLAG_* values.
#define SN_POWERBATTERYSTATE_ROOT HKEY_LOCAL_MACHINE
#define SN_POWERBATTERYSTATE_PATH TEXT("System\\State\\Battery")
#define SN_POWERBATTERYSTATE_VALUE TEXT("Main")
#define SN_POWERBATTERYSTATE_BITMASK 0x0000FFFF

#define SN_POWERBATTERYSTATE_FLAG_NOTPRESENT 1
#define SN_POWERBATTERYSTATE_FLAG_CHARGING   2
#define SN_POWERBATTERYSTATE_FLAG_LOW        4
#define SN_POWERBATTERYSTATE_FLAG_CRITICAL   8

 
  
////////////////////////////////////////////////////////////////////////////////
// PowerBatteryBackupStrength
// Gets the remaining backup battery power level, expressed as a percentage of fully charged.
#define SN_POWERBATTERYBACKUPSTRENGTH_ROOT HKEY_LOCAL_MACHINE
#define SN_POWERBATTERYBACKUPSTRENGTH_PATH TEXT("System\\State\\Battery")
#define SN_POWERBATTERYBACKUPSTRENGTH_VALUE TEXT("Backup")
#define SN_POWERBATTERYBACKUPSTRENGTH_BITMASK 0xFFFF0000
 
  
////////////////////////////////////////////////////////////////////////////////
// PowerBatteryBackupState
// Gets the current backup battery state (for example, it is low, and charging). 
// This value can be a bitwise combination of SN_POWERBATTERYBACKUPSTATE_FLAG_* values.
#define SN_POWERBATTERYBACKUPSTATE_ROOT HKEY_LOCAL_MACHINE
#define SN_POWERBATTERYBACKUPSTATE_PATH TEXT("System\\State\\Battery")
#define SN_POWERBATTERYBACKUPSTATE_VALUE TEXT("Backup")
#define SN_POWERBATTERYBACKUPSTATE_BITMASK 0x0000FFFF

#define SN_POWERBATTERYBACKUPSTATE_FLAG_NOTPRESENT 1
#define SN_POWERBATTERYBACKUPSTATE_FLAG_CHARGING   2
#define SN_POWERBATTERYBACKUPSTATE_FLAG_LOW        4
#define SN_POWERBATTERYBACKUPSTATE_FLAG_CRITICAL   8

 
  
////////////////////////////////////////////////////////////////////////////////
// Time
// Gets the current time. This Date/Time value updates once per minute.
// The value is a FILETIME stored in REG_BINARY format.
#define SN_TIME_ROOT HKEY_LOCAL_MACHINE
#define SN_TIME_PATH TEXT("System\\State\\DateTime")
#define SN_TIME_VALUE TEXT("Time")
 
  
////////////////////////////////////////////////////////////////////////////////
// Date
// Gets the current date. This Date/Time value changes once per day. Monitor this property to perform actions on a daily basis. Note: Do not use Date to get an accurate clock time; instead, use Time.
// The value is a FILETIME stored in REG_BINARY format.
#define SN_DATE_ROOT HKEY_LOCAL_MACHINE
#define SN_DATE_PATH TEXT("System\\State\\DateTime")
#define SN_DATE_VALUE TEXT("Date")
 

////////////////////////////////////////////////////////////////////////////////
// LocalDate
// Gets the current date in local time. This Date/Time value changes once per day at local time 12:00AM. Monitor this property to perform actions on a daily basis. Note: Do not use LocalDate to get an accurate clock time; instead, use Time.
// The value is a local FILETIME stored in REG_BINARY format.
#define SN_LOCALDATE_ROOT HKEY_LOCAL_MACHINE
#define SN_LOCALDATE_PATH TEXT("System\\State\\DateTime")
#define SN_LOCALDATE_VALUE TEXT("LocalDate")

////////////////////////////////////////////////////////////////////////////////
// PhoneSignalStrength
// Get the phone signal strength, expressed as a percentage of full strength.
#define SN_PHONESIGNALSTRENGTH_ROOT HKEY_LOCAL_MACHINE
#define SN_PHONESIGNALSTRENGTH_PATH TEXT("System\\State\\Phone")
#define SN_PHONESIGNALSTRENGTH_VALUE TEXT("Signal Strength Raw")
 
  
////////////////////////////////////////////////////////////////////////////////
// PhoneOperatorName
// Gets the name of the mobile operator (i.e., the mobile phone company, or carrier).
#define SN_PHONEOPERATORNAME_ROOT HKEY_LOCAL_MACHINE
#define SN_PHONEOPERATORNAME_PATH TEXT("System\\State\\Phone")
#define SN_PHONEOPERATORNAME_VALUE TEXT("Current Operator Name")
 
  
////////////////////////////////////////////////////////////////////////////////
// PhoneTalkingCallerName
// Gets the name of the person you are talking to on the phone. This value is not set when you are talking on a conference call.
#define SN_PHONETALKINGCALLERNAME_ROOT HKEY_LOCAL_MACHINE
#define SN_PHONETALKINGCALLERNAME_PATH TEXT("System\\State\\Phone")
#define SN_PHONETALKINGCALLERNAME_VALUE TEXT("Caller Name")
 
  
////////////////////////////////////////////////////////////////////////////////
// PhoneTalkingCallStartTime
// Gets the time of the current active call in FILETIME format
#define SN_PHONETALKINGCALLSTARTTIME_ROOT HKEY_LOCAL_MACHINE
#define SN_PHONETALKINGCALLSTARTTIME_PATH TEXT("System\\State\\Phone")
#define SN_PHONETALKINGCALLSTARTTIME_VALUE TEXT("Call Start Time")
 
  
////////////////////////////////////////////////////////////////////////////////
// PhoneActiveCallCount
// Gets the number of active phone calls.
#define SN_PHONEACTIVECALLCOUNT_ROOT HKEY_LOCAL_MACHINE
#define SN_PHONEACTIVECALLCOUNT_PATH TEXT("System\\State\\Phone")
#define SN_PHONEACTIVECALLCOUNT_VALUE TEXT("Active Call Count")
 
  
////////////////////////////////////////////////////////////////////////////////
// PhoneProfileName
// Gets the localized name of the current sound profile. (Smartphone only)
#define SN_PHONEPROFILENAME_ROOT HKEY_CURRENT_USER
#define SN_PHONEPROFILENAME_PATH TEXT("System\\State")
#define SN_PHONEPROFILENAME_VALUE TEXT("Profile")
 
  
////////////////////////////////////////////////////////////////////////////////
// PhoneProfile
// Gets the non-localized name of the current sound profile. For example, "Normal", "Silent", "Car", "Headset", "Loud", "Meeting", or "Speakerphone". (Smartphone only)
#define SN_PHONEPROFILE_ROOT HKEY_CURRENT_USER
#define SN_PHONEPROFILE_PATH TEXT("ControlPanel\\Profiles")
#define SN_PHONEPROFILE_VALUE TEXT("ActiveProfile")
 
  
////////////////////////////////////////////////////////////////////////////////
// PhoneCellBroadcast
// Gets the cell broadcast message.
#define SN_PHONECELLBROADCAST_ROOT HKEY_LOCAL_MACHINE
#define SN_PHONECELLBROADCAST_PATH TEXT("System\\State\\Phone")
#define SN_PHONECELLBROADCAST_VALUE TEXT("Cell Broadcast")
 
  
////////////////////////////////////////////////////////////////////////////////
// CalendarNextAppointmentHasConflict
// Gets a value indicating whether there is a conflict with the next Appointment.
#define SN_CALENDARNEXTAPPOINTMENTHASCONFLICT_ROOT HKEY_CURRENT_USER
#define SN_CALENDARNEXTAPPOINTMENTHASCONFLICT_PATH TEXT("System\\State\\Appointments\\Next")
#define SN_CALENDARNEXTAPPOINTMENTHASCONFLICT_VALUE TEXT("Conflict")
 
  
////////////////////////////////////////////////////////////////////////////////
// OwnerName
// Gets the mobile device owner's name.
#define SN_OWNERNAME_ROOT HKEY_CURRENT_USER
#define SN_OWNERNAME_PATH TEXT("ControlPanel\\Owner")
#define SN_OWNERNAME_VALUE TEXT("Name")
 
  
////////////////////////////////////////////////////////////////////////////////
// OwnerPhoneNumber
// Gets the mobile device owner's phone number.
#define SN_OWNERPHONENUMBER_ROOT HKEY_CURRENT_USER
#define SN_OWNERPHONENUMBER_PATH TEXT("ControlPanel\\Owner")
#define SN_OWNERPHONENUMBER_VALUE TEXT("Telephone")
 
  
////////////////////////////////////////////////////////////////////////////////
// OwnerEmail
// Gets the mobile device owner's e-mail address.
#define SN_OWNEREMAIL_ROOT HKEY_CURRENT_USER
#define SN_OWNEREMAIL_PATH TEXT("ControlPanel\\Owner")
#define SN_OWNEREMAIL_VALUE TEXT("E-mail")
 
  
////////////////////////////////////////////////////////////////////////////////
// OwnerNotes
// Gets the text notes entered by the owner of the mobile device.
#define SN_OWNERNOTES_ROOT HKEY_CURRENT_USER
#define SN_OWNERNOTES_PATH TEXT("ControlPanel\\Owner")
#define SN_OWNERNOTES_VALUE TEXT("Notes")
 
  
////////////////////////////////////////////////////////////////////////////////
// ActiveSyncStatus
// Gets a value indicating whether ActiveSync is synchronizing.
#define SN_ACTIVESYNCSTATUS_ROOT HKEY_LOCAL_MACHINE
#define SN_ACTIVESYNCSTATUS_PATH TEXT("System\\State\\ActiveSync")
#define SN_ACTIVESYNCSTATUS_VALUE TEXT("Synchronizing")
 
  
////////////////////////////////////////////////////////////////////////////////
// PhoneMissedCalls
// Gets the number of missed phone calls.
#define SN_PHONEMISSEDCALLS_ROOT HKEY_CURRENT_USER
#define SN_PHONEMISSEDCALLS_PATH TEXT("System\\State\\Phone")
#define SN_PHONEMISSEDCALLS_VALUE TEXT("Missed Call Count")
 
  
////////////////////////////////////////////////////////////////////////////////
// HeadsetPresent
// Gets a value indicating whether a headset is present
#define SN_HEADSETPRESENT_ROOT HKEY_LOCAL_MACHINE
#define SN_HEADSETPRESENT_PATH TEXT("System\\State\\Hardware")
#define SN_HEADSETPRESENT_VALUE TEXT("Headset")
 
  
////////////////////////////////////////////////////////////////////////////////
// CarKitPresent
// Gets a value indicating whether a car kit is present
#define SN_CARKITPRESENT_ROOT HKEY_LOCAL_MACHINE
#define SN_CARKITPRESENT_PATH TEXT("System\\State\\Hardware")
#define SN_CARKITPRESENT_VALUE TEXT("Car Kit")
 
  
////////////////////////////////////////////////////////////////////////////////
// SpeakerPhoneActive
// Gets a value indicating whether the speakerphone is active
#define SN_SPEAKERPHONEACTIVE_ROOT HKEY_LOCAL_MACHINE
#define SN_SPEAKERPHONEACTIVE_PATH TEXT("System\\State\\Hardware")
#define SN_SPEAKERPHONEACTIVE_VALUE TEXT("Speaker")
 
  
////////////////////////////////////////////////////////////////////////////////
// PhoneMultiLine
// Gets a value indicating whether the phone supports multiple lines.
#define SN_PHONEMULTILINE_ROOT HKEY_LOCAL_MACHINE
#define SN_PHONEMULTILINE_PATH TEXT("System\\State\\Phone")
#define SN_PHONEMULTILINE_VALUE TEXT("Multiline Capabilities")
 
  
////////////////////////////////////////////////////////////////////////////////
// PhoneSimFull
// Gets a value indicating whether the Subscriber Identity Module (SIM) memory is full.
#define SN_PHONESIMFULL_ROOT HKEY_LOCAL_MACHINE
#define SN_PHONESIMFULL_PATH TEXT("System\\State\\Phone")
#define SN_PHONESIMFULL_VALUE TEXT("Status")
#define SN_PHONESIMFULL_BITMASK 1
 
  
////////////////////////////////////////////////////////////////////////////////
// PhoneNoSim
// Gets a value indicating whether the Subscriber Identity Module (SIM) is installed in the mobile device.
#define SN_PHONENOSIM_ROOT HKEY_LOCAL_MACHINE
#define SN_PHONENOSIM_PATH TEXT("System\\State\\Phone")
#define SN_PHONENOSIM_VALUE TEXT("Status")
#define SN_PHONENOSIM_BITMASK 2
 
  
////////////////////////////////////////////////////////////////////////////////
// PhoneInvalidSim
// Gets a value indicating whether the Subscriber Identity Module (SIM) is invalid.
#define SN_PHONEINVALIDSIM_ROOT HKEY_LOCAL_MACHINE
#define SN_PHONEINVALIDSIM_PATH TEXT("System\\State\\Phone")
#define SN_PHONEINVALIDSIM_VALUE TEXT("Status")
#define SN_PHONEINVALIDSIM_BITMASK 4
 
  
////////////////////////////////////////////////////////////////////////////////
// PhoneBlockedSim
// Gets a value indicating whether the Subscriber Identity Module (SIM) is blocked.
#define SN_PHONEBLOCKEDSIM_ROOT HKEY_LOCAL_MACHINE
#define SN_PHONEBLOCKEDSIM_PATH TEXT("System\\State\\Phone")
#define SN_PHONEBLOCKEDSIM_VALUE TEXT("Status")
#define SN_PHONEBLOCKEDSIM_BITMASK 8
 
  
////////////////////////////////////////////////////////////////////////////////
// PhoneRadioOff
// Gets a value indicating whether the phone's radio is turned off.
#define SN_PHONERADIOOFF_ROOT HKEY_LOCAL_MACHINE
#define SN_PHONERADIOOFF_PATH TEXT("System\\State\\Phone")
#define SN_PHONERADIOOFF_VALUE TEXT("Status")
#define SN_PHONERADIOOFF_BITMASK 0x10
 
  
////////////////////////////////////////////////////////////////////////////////
// PhoneRadioPresent
// Gets a value indicating whether the mobile device has a phone.
#define SN_PHONERADIOPRESENT_ROOT HKEY_LOCAL_MACHINE
#define SN_PHONERADIOPRESENT_PATH TEXT("System\\State\\Phone")
#define SN_PHONERADIOPRESENT_VALUE TEXT("Status")
#define SN_PHONERADIOPRESENT_BITMASK 0x20
 
  
////////////////////////////////////////////////////////////////////////////////
// PhoneRingerOff
// Gets a value indicating whether the phone's ringer is off (i.e., if it rings and/or vibrates).
#define SN_PHONERINGEROFF_ROOT HKEY_LOCAL_MACHINE
#define SN_PHONERINGEROFF_PATH TEXT("System\\State\\Phone")
#define SN_PHONERINGEROFF_VALUE TEXT("Status")
#define SN_PHONERINGEROFF_BITMASK 0x40
 
  
////////////////////////////////////////////////////////////////////////////////
// PhoneLine1Selected
// Gets a value indicating whether line 1 is selected.
#define SN_PHONELINE1SELECTED_ROOT HKEY_LOCAL_MACHINE
#define SN_PHONELINE1SELECTED_PATH TEXT("System\\State\\Phone")
#define SN_PHONELINE1SELECTED_VALUE TEXT("Status")
#define SN_PHONELINE1SELECTED_BITMASK 0x80
 
  
////////////////////////////////////////////////////////////////////////////////
// PhoneLine2Selected
// Gets a value indicating whether line 2 is selected.
#define SN_PHONELINE2SELECTED_ROOT HKEY_LOCAL_MACHINE
#define SN_PHONELINE2SELECTED_PATH TEXT("System\\State\\Phone")
#define SN_PHONELINE2SELECTED_VALUE TEXT("Status")
#define SN_PHONELINE2SELECTED_BITMASK 0x100
 
  
////////////////////////////////////////////////////////////////////////////////
// PhoneRoaming
// Gets a value indicating whether the phone is currently in roaming mode.
#define SN_PHONEROAMING_ROOT HKEY_LOCAL_MACHINE
#define SN_PHONEROAMING_PATH TEXT("System\\State\\Phone")
#define SN_PHONEROAMING_VALUE TEXT("Status")
#define SN_PHONEROAMING_BITMASK 0x200
 
  
////////////////////////////////////////////////////////////////////////////////
// PhoneCallForwardingOnLine1
// Gets a value indicating whether call forwarding is enabled on line 1.
#define SN_PHONECALLFORWARDINGONLINE1_ROOT HKEY_LOCAL_MACHINE
#define SN_PHONECALLFORWARDINGONLINE1_PATH TEXT("System\\State\\Phone")
#define SN_PHONECALLFORWARDINGONLINE1_VALUE TEXT("Status")
#define SN_PHONECALLFORWARDINGONLINE1_BITMASK 0x400
 
  
////////////////////////////////////////////////////////////////////////////////
// PhoneMissedCall
// Gets a value indicating whether there was a new missed call.
#define SN_PHONEMISSEDCALL_ROOT HKEY_LOCAL_MACHINE
#define SN_PHONEMISSEDCALL_PATH TEXT("System\\State\\Phone")
#define SN_PHONEMISSEDCALL_VALUE TEXT("Status")
#define SN_PHONEMISSEDCALL_BITMASK 0x800
 
  
////////////////////////////////////////////////////////////////////////////////
// PhoneActiveDataCall
// Gets a value indicating whether the phone has an active cellular data connection.
#define SN_PHONEACTIVEDATACALL_ROOT HKEY_LOCAL_MACHINE
#define SN_PHONEACTIVEDATACALL_PATH TEXT("System\\State\\Phone")
#define SN_PHONEACTIVEDATACALL_VALUE TEXT("Status")
#define SN_PHONEACTIVEDATACALL_BITMASK 0x1000
 
  
////////////////////////////////////////////////////////////////////////////////
// PhoneCallBarring
// Gets a value indicating whether the call barring feature is enabled.
#define SN_PHONECALLBARRING_ROOT HKEY_LOCAL_MACHINE
#define SN_PHONECALLBARRING_PATH TEXT("System\\State\\Phone")
#define SN_PHONECALLBARRING_VALUE TEXT("Status")
#define SN_PHONECALLBARRING_BITMASK 0x2000
 
  
////////////////////////////////////////////////////////////////////////////////
// PhoneCallOnHold
// Gets a value indicating whether a phone call is currently on hold.
#define SN_PHONECALLONHOLD_ROOT HKEY_LOCAL_MACHINE
#define SN_PHONECALLONHOLD_PATH TEXT("System\\State\\Phone")
#define SN_PHONECALLONHOLD_VALUE TEXT("Status")
#define SN_PHONECALLONHOLD_BITMASK 0x4000
 
  
////////////////////////////////////////////////////////////////////////////////
// PhoneConferenceCall
// Gets a value indicating whether a conference call is currently in progress.
#define SN_PHONECONFERENCECALL_ROOT HKEY_LOCAL_MACHINE
#define SN_PHONECONFERENCECALL_PATH TEXT("System\\State\\Phone")
#define SN_PHONECONFERENCECALL_VALUE TEXT("Status")
#define SN_PHONECONFERENCECALL_BITMASK 0x8000
 
  
////////////////////////////////////////////////////////////////////////////////
// PhoneIncomingCall
// Gets a value indicating whether there is an incoming (ringing) call.
#define SN_PHONEINCOMINGCALL_ROOT HKEY_LOCAL_MACHINE
#define SN_PHONEINCOMINGCALL_PATH TEXT("System\\State\\Phone")
#define SN_PHONEINCOMINGCALL_VALUE TEXT("Status")
#define SN_PHONEINCOMINGCALL_BITMASK 0x10000
 
  
////////////////////////////////////////////////////////////////////////////////
// PhoneCallCalling
// Gets a value indicating whether the phone is currently attempting to connect an outgoing call.
#define SN_PHONECALLCALLING_ROOT HKEY_LOCAL_MACHINE
#define SN_PHONECALLCALLING_PATH TEXT("System\\State\\Phone")
#define SN_PHONECALLCALLING_VALUE TEXT("Status")
#define SN_PHONECALLCALLING_BITMASK 0x20000
 
  
////////////////////////////////////////////////////////////////////////////////
// PhoneGprsCoverage
// Gets a value indicating whether the phone currently has GPRS coverage.
#define SN_PHONEGPRSCOVERAGE_ROOT HKEY_LOCAL_MACHINE
#define SN_PHONEGPRSCOVERAGE_PATH TEXT("System\\State\\Phone")
#define SN_PHONEGPRSCOVERAGE_VALUE TEXT("Status")
#define SN_PHONEGPRSCOVERAGE_BITMASK 0x100000
 
  
////////////////////////////////////////////////////////////////////////////////
// PhoneNoService
// Gets a value indicating whether the phone is not currently connected to a network.
#define SN_PHONENOSERVICE_ROOT HKEY_LOCAL_MACHINE
#define SN_PHONENOSERVICE_PATH TEXT("System\\State\\Phone")
#define SN_PHONENOSERVICE_VALUE TEXT("Status")
#define SN_PHONENOSERVICE_BITMASK 0x200000
 
  
////////////////////////////////////////////////////////////////////////////////
// PhoneSearchingForService
// Gets a value indicating whether the phone is currently searching for service on a network.
#define SN_PHONESEARCHINGFORSERVICE_ROOT HKEY_LOCAL_MACHINE
#define SN_PHONESEARCHINGFORSERVICE_PATH TEXT("System\\State\\Phone")
#define SN_PHONESEARCHINGFORSERVICE_VALUE TEXT("Status")
#define SN_PHONESEARCHINGFORSERVICE_BITMASK 0x400000
 
  
////////////////////////////////////////////////////////////////////////////////
// PhoneHomeService
// Gets a value indicating whether the phone is currently registered on its home network.
#define SN_PHONEHOMESERVICE_ROOT HKEY_LOCAL_MACHINE
#define SN_PHONEHOMESERVICE_PATH TEXT("System\\State\\Phone")
#define SN_PHONEHOMESERVICE_VALUE TEXT("Status")
#define SN_PHONEHOMESERVICE_BITMASK 0x800000
 
  
////////////////////////////////////////////////////////////////////////////////
// Phone1xRttCoverage
// Gets a value indicating whether the phone currently has 1xRTT coverage.
#define SN_PHONE1XRTTCOVERAGE_ROOT HKEY_LOCAL_MACHINE
#define SN_PHONE1XRTTCOVERAGE_PATH TEXT("System\\State\\Phone")
#define SN_PHONE1XRTTCOVERAGE_VALUE TEXT("Status")
#define SN_PHONE1XRTTCOVERAGE_BITMASK 0x10000000
 
  
////////////////////////////////////////////////////////////////////////////////
// PhoneCallTalking
// Gets a value indicating whether there is currently a phone call in the talking state.
#define SN_PHONECALLTALKING_ROOT HKEY_LOCAL_MACHINE
#define SN_PHONECALLTALKING_PATH TEXT("System\\State\\Phone")
#define SN_PHONECALLTALKING_VALUE TEXT("Status")
#define SN_PHONECALLTALKING_BITMASK 0x20000000
 
  
////////////////////////////////////////////////////////////////////////////////
// PhoneCallForwardingOnLine2
// Gets a value indicating whether call forwarding is currently active on line 2.
#define SN_PHONECALLFORWARDINGONLINE2_ROOT HKEY_LOCAL_MACHINE
#define SN_PHONECALLFORWARDINGONLINE2_PATH TEXT("System\\State\\Phone")
#define SN_PHONECALLFORWARDINGONLINE2_VALUE TEXT("Status")
#define SN_PHONECALLFORWARDINGONLINE2_BITMASK 0x40000000
 
  
////////////////////////////////////////////////////////////////////////////////
// CalendarNextAppointment
// Gets the CEOID of the next Appointment.
#define SN_CALENDARNEXTAPPOINTMENT_ROOT HKEY_CURRENT_USER
#define SN_CALENDARNEXTAPPOINTMENT_PATH TEXT("System\\State\\Appointments")
#define SN_CALENDARNEXTAPPOINTMENT_VALUE TEXT("Next")
 
  
////////////////////////////////////////////////////////////////////////////////
// CalendarNextAppointmentBusyStatus
// Gets the user's availability (e.g., Free, Busy, Tenative, Out of Office) status for the next Appointment.
// The value is of type OlBusyStatus (from pimstore.h).
#define SN_CALENDARNEXTAPPOINTMENTBUSYSTATUS_ROOT HKEY_CURRENT_USER
#define SN_CALENDARNEXTAPPOINTMENTBUSYSTATUS_PATH TEXT("System\\State\\Appointments\\Next")
#define SN_CALENDARNEXTAPPOINTMENTBUSYSTATUS_VALUE TEXT("Busy Status")
 
  
////////////////////////////////////////////////////////////////////////////////
// CalendarNextAppointmentCategories
// Gets the next Appointment's categories.
#define SN_CALENDARNEXTAPPOINTMENTCATEGORIES_ROOT HKEY_CURRENT_USER
#define SN_CALENDARNEXTAPPOINTMENTCATEGORIES_PATH TEXT("System\\State\\Appointments\\Next")
#define SN_CALENDARNEXTAPPOINTMENTCATEGORIES_VALUE TEXT("Categories")
 
  
////////////////////////////////////////////////////////////////////////////////
// CalendarAppointment
// Gets the CEOID of the current Appointment.
#define SN_CALENDARAPPOINTMENT_ROOT HKEY_CURRENT_USER
#define SN_CALENDARAPPOINTMENT_PATH TEXT("System\\State\\Appointments")
#define SN_CALENDARAPPOINTMENT_VALUE TEXT("Current")
 
  
////////////////////////////////////////////////////////////////////////////////
// CalendarAppointmentSubject
// Gets the current Appointment's subject.
#define SN_CALENDARAPPOINTMENTSUBJECT_ROOT HKEY_CURRENT_USER
#define SN_CALENDARAPPOINTMENTSUBJECT_PATH TEXT("System\\State\\Appointments\\Current")
#define SN_CALENDARAPPOINTMENTSUBJECT_VALUE TEXT("Subject")
 
  
////////////////////////////////////////////////////////////////////////////////
// CalendarAppointmentLocation
// Gets the current Appointment's location.
#define SN_CALENDARAPPOINTMENTLOCATION_ROOT HKEY_CURRENT_USER
#define SN_CALENDARAPPOINTMENTLOCATION_PATH TEXT("System\\State\\Appointments\\Current")
#define SN_CALENDARAPPOINTMENTLOCATION_VALUE TEXT("Location")
 
  
////////////////////////////////////////////////////////////////////////////////
// CalendarAppointmentStartTime
// Gets the current Appointment's starting time.
// The value is a FILETIME stored in REG_BINARY format.
#define SN_CALENDARAPPOINTMENTSTARTTIME_ROOT HKEY_CURRENT_USER
#define SN_CALENDARAPPOINTMENTSTARTTIME_PATH TEXT("System\\State\\Appointments\\Current")
#define SN_CALENDARAPPOINTMENTSTARTTIME_VALUE TEXT("Start Time")
 
  
////////////////////////////////////////////////////////////////////////////////
// CalendarAppointmentEndTime
// Gets the current Appointment's ending time.
// The value is a FILETIME stored in REG_BINARY format.
#define SN_CALENDARAPPOINTMENTENDTIME_ROOT HKEY_CURRENT_USER
#define SN_CALENDARAPPOINTMENTENDTIME_PATH TEXT("System\\State\\Appointments\\Current")
#define SN_CALENDARAPPOINTMENTENDTIME_VALUE TEXT("End Time")
 
  
////////////////////////////////////////////////////////////////////////////////
// CalendarAppointmentHasConflict
// Gets a value indicating whether the current Appointment has a scheduling conflict with an existing Appointment.
#define SN_CALENDARAPPOINTMENTHASCONFLICT_ROOT HKEY_CURRENT_USER
#define SN_CALENDARAPPOINTMENTHASCONFLICT_PATH TEXT("System\\State\\Appointments\\Current")
#define SN_CALENDARAPPOINTMENTHASCONFLICT_VALUE TEXT("Conflict")
 
  
////////////////////////////////////////////////////////////////////////////////
// CalendarAppointmentBusyStatus
// Gets the user's availability (free/busy status) for the time-slot taken by the current Appointment.
// The value is of type OlBusyStatus (from pimstore.h).
#define SN_CALENDARAPPOINTMENTBUSYSTATUS_ROOT HKEY_CURRENT_USER
#define SN_CALENDARAPPOINTMENTBUSYSTATUS_PATH TEXT("System\\State\\Appointments\\Current")
#define SN_CALENDARAPPOINTMENTBUSYSTATUS_VALUE TEXT("Busy Status")
 
  
////////////////////////////////////////////////////////////////////////////////
// CalendarAppointmentCategories
// Gets the current Appointment's categories.
#define SN_CALENDARAPPOINTMENTCATEGORIES_ROOT HKEY_CURRENT_USER
#define SN_CALENDARAPPOINTMENTCATEGORIES_PATH TEXT("System\\State\\Appointments\\Current")
#define SN_CALENDARAPPOINTMENTCATEGORIES_VALUE TEXT("Categories")
 
  
////////////////////////////////////////////////////////////////////////////////
// CalendarHomeScreenAppointment
// Gets the CEOID of the Appointment that is currently displayed on the Home Screen.
#define SN_CALENDARHOMESCREENAPPOINTMENT_ROOT HKEY_CURRENT_USER
#define SN_CALENDARHOMESCREENAPPOINTMENT_PATH TEXT("System\\State\\Appointments")
#define SN_CALENDARHOMESCREENAPPOINTMENT_VALUE TEXT("HomeScreen")
 
  
////////////////////////////////////////////////////////////////////////////////
// CalendarHomeScreenAppointmentSubject
// Gets the subject of the Appointment that is currently displayed on the Home Screen.
#define SN_CALENDARHOMESCREENAPPOINTMENTSUBJECT_ROOT HKEY_CURRENT_USER
#define SN_CALENDARHOMESCREENAPPOINTMENTSUBJECT_PATH TEXT("System\\State\\Appointments\\HomeScreen")
#define SN_CALENDARHOMESCREENAPPOINTMENTSUBJECT_VALUE TEXT("Subject")
 
  
////////////////////////////////////////////////////////////////////////////////
// CalendarHomeScreenAppointmentLocation
// Gets the location of the Appointment that is currently displayed on the Home Screen.
#define SN_CALENDARHOMESCREENAPPOINTMENTLOCATION_ROOT HKEY_CURRENT_USER
#define SN_CALENDARHOMESCREENAPPOINTMENTLOCATION_PATH TEXT("System\\State\\Appointments\\HomeScreen")
#define SN_CALENDARHOMESCREENAPPOINTMENTLOCATION_VALUE TEXT("Location")
 
  
////////////////////////////////////////////////////////////////////////////////
// CalendarHomeScreenAppointmentStartTime
// Gets the starting time of the Appointment that is currently displayed on the Home Screen.
// The value is a FILETIME stored in REG_BINARY format.
#define SN_CALENDARHOMESCREENAPPOINTMENTSTARTTIME_ROOT HKEY_CURRENT_USER
#define SN_CALENDARHOMESCREENAPPOINTMENTSTARTTIME_PATH TEXT("System\\State\\Appointments\\HomeScreen")
#define SN_CALENDARHOMESCREENAPPOINTMENTSTARTTIME_VALUE TEXT("Start Time")
 
  
////////////////////////////////////////////////////////////////////////////////
// CalendarHomeScreenAppointmentEndTime
// Gets the ending time of the Appointment that is currently displayed on the Home Screen.
// The value is a FILETIME stored in REG_BINARY format.
#define SN_CALENDARHOMESCREENAPPOINTMENTENDTIME_ROOT HKEY_CURRENT_USER
#define SN_CALENDARHOMESCREENAPPOINTMENTENDTIME_PATH TEXT("System\\State\\Appointments\\HomeScreen")
#define SN_CALENDARHOMESCREENAPPOINTMENTENDTIME_VALUE TEXT("End Time")
 
  
////////////////////////////////////////////////////////////////////////////////
// CalendarHomeScreenAppointmentHasConflict
// Gets a value indicating whether the Appointment that is currently displayed on the Home Screen has a scheduling conflict.
#define SN_CALENDARHOMESCREENAPPOINTMENTHASCONFLICT_ROOT HKEY_CURRENT_USER
#define SN_CALENDARHOMESCREENAPPOINTMENTHASCONFLICT_PATH TEXT("System\\State\\Appointments\\HomeScreen")
#define SN_CALENDARHOMESCREENAPPOINTMENTHASCONFLICT_VALUE TEXT("Conflict")
 
  
////////////////////////////////////////////////////////////////////////////////
// CalendarHomeScreenAppointmentBusyStatus
// Gets the user's availability (free/busy status) for the Appointment displayed on the Home Screen.
// The value is of type OlBusyStatus (from pimstore.h).
#define SN_CALENDARHOMESCREENAPPOINTMENTBUSYSTATUS_ROOT HKEY_CURRENT_USER
#define SN_CALENDARHOMESCREENAPPOINTMENTBUSYSTATUS_PATH TEXT("System\\State\\Appointments\\HomeScreen")
#define SN_CALENDARHOMESCREENAPPOINTMENTBUSYSTATUS_VALUE TEXT("Busy Status")
 
  
////////////////////////////////////////////////////////////////////////////////
// CalendarHomeScreenAppointmentCategories
// Gets the categories of the Appointment that is currently displayed on the Home Screen.
#define SN_CALENDARHOMESCREENAPPOINTMENTCATEGORIES_ROOT HKEY_CURRENT_USER
#define SN_CALENDARHOMESCREENAPPOINTMENTCATEGORIES_PATH TEXT("System\\State\\Appointments\\HomeScreen")
#define SN_CALENDARHOMESCREENAPPOINTMENTCATEGORIES_VALUE TEXT("Categories")
 
  
////////////////////////////////////////////////////////////////////////////////
// PhoneIncomingCallerName
// Gets the name of the person who is currently placing the incoming call.
#define SN_PHONEINCOMINGCALLERNAME_ROOT HKEY_LOCAL_MACHINE
#define SN_PHONEINCOMINGCALLERNAME_PATH TEXT("System\\State\\Phone")
#define SN_PHONEINCOMINGCALLERNAME_VALUE TEXT("Incoming Caller Name")
 
  
////////////////////////////////////////////////////////////////////////////////
// PhoneLastIncomingCallerName
// Gets the name of the last caller to place an incoming call.
#define SN_PHONELASTINCOMINGCALLERNAME_ROOT HKEY_LOCAL_MACHINE
#define SN_PHONELASTINCOMINGCALLERNAME_PATH TEXT("System\\State\\Phone")
#define SN_PHONELASTINCOMINGCALLERNAME_VALUE TEXT("Last Incoming Caller Name")
 
  
////////////////////////////////////////////////////////////////////////////////
// PhoneIncomingCallerNumber
// Gets the incoming call's phone number (Caller ID).
#define SN_PHONEINCOMINGCALLERNUMBER_ROOT HKEY_LOCAL_MACHINE
#define SN_PHONEINCOMINGCALLERNUMBER_PATH TEXT("System\\State\\Phone")
#define SN_PHONEINCOMINGCALLERNUMBER_VALUE TEXT("Incoming Caller Number")
 
  
////////////////////////////////////////////////////////////////////////////////
// PhoneLastIncomingCallerNumber
// Gets the last incoming call's phone number (Caller ID).
#define SN_PHONELASTINCOMINGCALLERNUMBER_ROOT HKEY_LOCAL_MACHINE
#define SN_PHONELASTINCOMINGCALLERNUMBER_PATH TEXT("System\\State\\Phone")
#define SN_PHONELASTINCOMINGCALLERNUMBER_VALUE TEXT("Last Incoming Caller Number")
 
  
////////////////////////////////////////////////////////////////////////////////
// PhoneIncomingCallerContactPropertyName
// Gets the name of the property that matches the Caller ID, e.g. "h" for "Home Telephone".
#define SN_PHONEINCOMINGCALLERCONTACTPROPERTYNAME_ROOT HKEY_LOCAL_MACHINE
#define SN_PHONEINCOMINGCALLERCONTACTPROPERTYNAME_PATH TEXT("System\\State\\Phone")
#define SN_PHONEINCOMINGCALLERCONTACTPROPERTYNAME_VALUE TEXT("Incoming Caller PropName")
 
  
////////////////////////////////////////////////////////////////////////////////
// PhoneLastIncomingCallerContactPropertyName
// Gets the name of the property that matches the last Caller ID, e.g. "h" for "Home Telephone".
#define SN_PHONELASTINCOMINGCALLERCONTACTPROPERTYNAME_ROOT HKEY_LOCAL_MACHINE
#define SN_PHONELASTINCOMINGCALLERCONTACTPROPERTYNAME_PATH TEXT("System\\State\\Phone")
#define SN_PHONELASTINCOMINGCALLERCONTACTPROPERTYNAME_VALUE TEXT("Last Incoming Caller PropName")
 
  
////////////////////////////////////////////////////////////////////////////////
// PhoneIncomingCallerContactPropertyID
// Gets the CEPROPID of the property that matches the Caller ID, for example, PIMPR_HOME_TELEPHONE_NUMBER.
#define SN_PHONEINCOMINGCALLERCONTACTPROPERTYID_ROOT HKEY_LOCAL_MACHINE
#define SN_PHONEINCOMINGCALLERCONTACTPROPERTYID_PATH TEXT("System\\State\\Phone")
#define SN_PHONEINCOMINGCALLERCONTACTPROPERTYID_VALUE TEXT("Incoming Caller PropID")
 
  
////////////////////////////////////////////////////////////////////////////////
// PhoneLastIncomingCallerContactPropertyID
// Gets the CEPROPID of the property that matches the last Caller ID, for example, PIMPR_HOME_TELEPHONE_NUMBER.
#define SN_PHONELASTINCOMINGCALLERCONTACTPROPERTYID_ROOT HKEY_LOCAL_MACHINE
#define SN_PHONELASTINCOMINGCALLERCONTACTPROPERTYID_PATH TEXT("System\\State\\Phone")
#define SN_PHONELASTINCOMINGCALLERCONTACTPROPERTYID_VALUE TEXT("Last Incoming Caller PropID")
 
  
////////////////////////////////////////////////////////////////////////////////
// PhoneIncomingCallerContact
// Gets the CEOID of the Contact that matches the Caller ID.
#define SN_PHONEINCOMINGCALLERCONTACT_ROOT HKEY_LOCAL_MACHINE
#define SN_PHONEINCOMINGCALLERCONTACT_PATH TEXT("System\\State\\Phone")
#define SN_PHONEINCOMINGCALLERCONTACT_VALUE TEXT("Incoming Caller OID")
 
  
////////////////////////////////////////////////////////////////////////////////
// PhoneLastIncomingCallerContact
// Gets the CEOID of the Contact that matches the last Caller ID.
#define SN_PHONELASTINCOMINGCALLERCONTACT_ROOT HKEY_LOCAL_MACHINE
#define SN_PHONELASTINCOMINGCALLERCONTACT_PATH TEXT("System\\State\\Phone")
#define SN_PHONELASTINCOMINGCALLERCONTACT_VALUE TEXT("Last Incoming Caller OID")
 
  
////////////////////////////////////////////////////////////////////////////////
// PhoneTalkingCallerNumber
// Gets the currently connected caller's phone number.
#define SN_PHONETALKINGCALLERNUMBER_ROOT HKEY_LOCAL_MACHINE
#define SN_PHONETALKINGCALLERNUMBER_PATH TEXT("System\\State\\Phone")
#define SN_PHONETALKINGCALLERNUMBER_VALUE TEXT("Caller Number")
 
  
////////////////////////////////////////////////////////////////////////////////
// PhoneTalkingCallerContactPropertyName
// Gets the name of the property of the contact who is on the active phone call, e.g. "h" for "Home Telephone".
#define SN_PHONETALKINGCALLERCONTACTPROPERTYNAME_ROOT HKEY_LOCAL_MACHINE
#define SN_PHONETALKINGCALLERCONTACTPROPERTYNAME_PATH TEXT("System\\State\\Phone")
#define SN_PHONETALKINGCALLERCONTACTPROPERTYNAME_VALUE TEXT("Caller PropName")
 
  
////////////////////////////////////////////////////////////////////////////////
// PhoneTalkingCallerContactPropertyID
// Gets the CEPROPID of the property of the contact who is on the active phone call, for example, PIMPR_HOME_TELEPHONE_NUMBER.
#define SN_PHONETALKINGCALLERCONTACTPROPERTYID_ROOT HKEY_LOCAL_MACHINE
#define SN_PHONETALKINGCALLERCONTACTPROPERTYID_PATH TEXT("System\\State\\Phone")
#define SN_PHONETALKINGCALLERCONTACTPROPERTYID_VALUE TEXT("Caller PropID")
 
  
////////////////////////////////////////////////////////////////////////////////
// PhoneTalkingCallerContact
// Gets the CEOID of the contact who is on the active phone call.
#define SN_PHONETALKINGCALLERCONTACT_ROOT HKEY_LOCAL_MACHINE
#define SN_PHONETALKINGCALLERCONTACT_PATH TEXT("System\\State\\Phone")
#define SN_PHONETALKINGCALLERCONTACT_VALUE TEXT("Caller OID")
 
  
////////////////////////////////////////////////////////////////////////////////
// ConnectionsCount
// Gets a value indicating the number of connections that are currently connected.
#define SN_CONNECTIONSCOUNT_ROOT HKEY_LOCAL_MACHINE
#define SN_CONNECTIONSCOUNT_PATH TEXT("System\\State\\Connections")
#define SN_CONNECTIONSCOUNT_VALUE TEXT("Count")
 
  
////////////////////////////////////////////////////////////////////////////////
// ConnectionsBluetoothCount
// Gets a value indicating the number of Bluetooth connections that are currently connected.
#define SN_CONNECTIONSBLUETOOTHCOUNT_ROOT HKEY_LOCAL_MACHINE
#define SN_CONNECTIONSBLUETOOTHCOUNT_PATH TEXT("System\\State\\Connections\\Bluetooth")
#define SN_CONNECTIONSBLUETOOTHCOUNT_VALUE TEXT("Count")
 
  
////////////////////////////////////////////////////////////////////////////////
// ConnectionsBluetoothDescriptions
// Gets a semicolon delimited string containing the description of each of the Bluetooth connections.
#define SN_CONNECTIONSBLUETOOTHDESCRIPTIONS_ROOT HKEY_LOCAL_MACHINE
#define SN_CONNECTIONSBLUETOOTHDESCRIPTIONS_PATH TEXT("System\\State\\Connections\\Bluetooth")
#define SN_CONNECTIONSBLUETOOTHDESCRIPTIONS_VALUE TEXT("Descriptions")
 
  
////////////////////////////////////////////////////////////////////////////////
// ConnectionsCellularCount
// Gets a value indicating the number of cellular connections that are currently connected.
#define SN_CONNECTIONSCELLULARCOUNT_ROOT HKEY_LOCAL_MACHINE
#define SN_CONNECTIONSCELLULARCOUNT_PATH TEXT("System\\State\\Connections\\Cellular")
#define SN_CONNECTIONSCELLULARCOUNT_VALUE TEXT("Count")
 
  
////////////////////////////////////////////////////////////////////////////////
// ConnectionsCellularDescriptions
// Gets a semicolon delimited string containing the description of each cellular connection.
#define SN_CONNECTIONSCELLULARDESCRIPTIONS_ROOT HKEY_LOCAL_MACHINE
#define SN_CONNECTIONSCELLULARDESCRIPTIONS_PATH TEXT("System\\State\\Connections\\Cellular")
#define SN_CONNECTIONSCELLULARDESCRIPTIONS_VALUE TEXT("Descriptions")
 
  
////////////////////////////////////////////////////////////////////////////////
// ConnectionsNetworkCount
// Gets a value indicating the number of network connections that are currently connected.
#define SN_CONNECTIONSNETWORKCOUNT_ROOT HKEY_LOCAL_MACHINE
#define SN_CONNECTIONSNETWORKCOUNT_PATH TEXT("System\\State\\Connections\\Network")
#define SN_CONNECTIONSNETWORKCOUNT_VALUE TEXT("Count")
 
  
////////////////////////////////////////////////////////////////////////////////
// ConnectionsNetworkDescriptions
// Gets a semicolon delimited string containing the description of each network connection.
#define SN_CONNECTIONSNETWORKDESCRIPTIONS_ROOT HKEY_LOCAL_MACHINE
#define SN_CONNECTIONSNETWORKDESCRIPTIONS_PATH TEXT("System\\State\\Connections\\Network")
#define SN_CONNECTIONSNETWORKDESCRIPTIONS_VALUE TEXT("Descriptions")
 
  
////////////////////////////////////////////////////////////////////////////////
// ConnectionsNetworkAdapters
// Gets a semicolon delimited string containing the adapter name of each network connection.
#define SN_CONNECTIONSNETWORKADAPTERS_ROOT HKEY_LOCAL_MACHINE
#define SN_CONNECTIONSNETWORKADAPTERS_PATH TEXT("System\\State\\Connections\\Network")
#define SN_CONNECTIONSNETWORKADAPTERS_VALUE TEXT("Adapters")
 
  
////////////////////////////////////////////////////////////////////////////////
// ConnectionsDesktopCount
// Gets a value indicating the number of desktop connections that are currently connected.
#define SN_CONNECTIONSDESKTOPCOUNT_ROOT HKEY_LOCAL_MACHINE
#define SN_CONNECTIONSDESKTOPCOUNT_PATH TEXT("System\\State\\Connections\\Desktop")
#define SN_CONNECTIONSDESKTOPCOUNT_VALUE TEXT("Count")
 
  
////////////////////////////////////////////////////////////////////////////////
// ConnectionsDesktopDescriptions
// Gets a semicolon delimited string containing the description of each desktop connection.
#define SN_CONNECTIONSDESKTOPDESCRIPTIONS_ROOT HKEY_LOCAL_MACHINE
#define SN_CONNECTIONSDESKTOPDESCRIPTIONS_PATH TEXT("System\\State\\Connections\\Desktop")
#define SN_CONNECTIONSDESKTOPDESCRIPTIONS_VALUE TEXT("Descriptions")
 
  
////////////////////////////////////////////////////////////////////////////////
// ConnectionsProxyCount
// Gets a value indicating the number of network connections that are currently connected.
#define SN_CONNECTIONSPROXYCOUNT_ROOT HKEY_LOCAL_MACHINE
#define SN_CONNECTIONSPROXYCOUNT_PATH TEXT("System\\State\\Connections\\Proxy")
#define SN_CONNECTIONSPROXYCOUNT_VALUE TEXT("Count")
 
  
////////////////////////////////////////////////////////////////////////////////
// ConnectionsProxyDescriptions
// Gets a semicolon delimited string containing the description of each proxy connection.
#define SN_CONNECTIONSPROXYDESCRIPTIONS_ROOT HKEY_LOCAL_MACHINE
#define SN_CONNECTIONSPROXYDESCRIPTIONS_PATH TEXT("System\\State\\Connections\\Proxy")
#define SN_CONNECTIONSPROXYDESCRIPTIONS_VALUE TEXT("Descriptions")
 
  
////////////////////////////////////////////////////////////////////////////////
// ConnectionsModemCount
// Gets a value indicating the number of modem connections that are currently connected.
#define SN_CONNECTIONSMODEMCOUNT_ROOT HKEY_LOCAL_MACHINE
#define SN_CONNECTIONSMODEMCOUNT_PATH TEXT("System\\State\\Connections\\Modem")
#define SN_CONNECTIONSMODEMCOUNT_VALUE TEXT("Count")
 
  
////////////////////////////////////////////////////////////////////////////////
// ConnectionsModemDescriptions
// Gets a semicolon delimited string containing the description of each modem connection.
#define SN_CONNECTIONSMODEMDESCRIPTIONS_ROOT HKEY_LOCAL_MACHINE
#define SN_CONNECTIONSMODEMDESCRIPTIONS_PATH TEXT("System\\State\\Connections\\Modem")
#define SN_CONNECTIONSMODEMDESCRIPTIONS_VALUE TEXT("Descriptions")
 
  
////////////////////////////////////////////////////////////////////////////////
// ConnectionsUnknownCount
// Gets a value indicating the number of connections of unknown type that are currently connected.
#define SN_CONNECTIONSUNKNOWNCOUNT_ROOT HKEY_LOCAL_MACHINE
#define SN_CONNECTIONSUNKNOWNCOUNT_PATH TEXT("System\\State\\Connections\\Unknown")
#define SN_CONNECTIONSUNKNOWNCOUNT_VALUE TEXT("Count")
 
  
////////////////////////////////////////////////////////////////////////////////
// ConnectionsUnknownDescriptions
// Gets a semicolon delimited string containing the description of each connections of unknown type.
#define SN_CONNECTIONSUNKNOWNDESCRIPTIONS_ROOT HKEY_LOCAL_MACHINE
#define SN_CONNECTIONSUNKNOWNDESCRIPTIONS_PATH TEXT("System\\State\\Connections\\Unknown")
#define SN_CONNECTIONSUNKNOWNDESCRIPTIONS_VALUE TEXT("Descriptions")
 
  
////////////////////////////////////////////////////////////////////////////////
// ConnectionsVpnCount
// Gets a value indicating the number of virtual private network connections that are currently connected.
#define SN_CONNECTIONSVPNCOUNT_ROOT HKEY_LOCAL_MACHINE
#define SN_CONNECTIONSVPNCOUNT_PATH TEXT("System\\State\\Connections\\Vpn")
#define SN_CONNECTIONSVPNCOUNT_VALUE TEXT("Count")
 
  
////////////////////////////////////////////////////////////////////////////////
// ConnectionsVpnDescriptions
// Gets a semicolon delimited string containing the description of each virtual private network connection.
#define SN_CONNECTIONSVPNDESCRIPTIONS_ROOT HKEY_LOCAL_MACHINE
#define SN_CONNECTIONSVPNDESCRIPTIONS_PATH TEXT("System\\State\\Connections\\Vpn")
#define SN_CONNECTIONSVPNDESCRIPTIONS_VALUE TEXT("Descriptions")
 

////////////////////////////////////////////////////////////////////////////////
// BluetoothStatePowerOn
// Gets a value indicating whether Bluetooth is powered on
#define SN_BLUETOOTHSTATEPOWERON_ROOT HKEY_LOCAL_MACHINE
#define SN_BLUETOOTHSTATEPOWERON_PATH TEXT("System\\State\\Hardware")
#define SN_BLUETOOTHSTATEPOWERON_VALUE TEXT("Bluetooth")
#define SN_BLUETOOTHSTATEPOWERON_BITMASK 1


////////////////////////////////////////////////////////////////////////////////
// BluetoothStateDiscoverable
// Gets a value indicating whether Bluetooth is discoverable
#define SN_BLUETOOTHSTATEDISCOVERABLE_ROOT HKEY_LOCAL_MACHINE
#define SN_BLUETOOTHSTATEDISCOVERABLE_PATH TEXT("System\\State\\Hardware")
#define SN_BLUETOOTHSTATEDISCOVERABLE_VALUE TEXT("Bluetooth")
#define SN_BLUETOOTHSTATEDISCOVERABLE_BITMASK 2


////////////////////////////////////////////////////////////////////////////////
// BluetoothStateA2DPConnected
// Gets a value indicating whether Bluetooth A2DP is connected
#define SN_BLUETOOTHSTATEA2DPCONNECTED_ROOT HKEY_LOCAL_MACHINE
#define SN_BLUETOOTHSTATEA2DPCONNECTED_PATH TEXT("System\\State\\Hardware")
#define SN_BLUETOOTHSTATEA2DPCONNECTED_VALUE TEXT("Bluetooth")
#define SN_BLUETOOTHSTATEA2DPCONNECTED_BITMASK 4


////////////////////////////////////////////////////////////////////////////////
// BluetoothStateHardwarePresent
// Gets a value indicating whether Bluetooth hardware is present
#define SN_BLUETOOTHSTATEHARDWAREPRESENT_ROOT HKEY_LOCAL_MACHINE
#define SN_BLUETOOTHSTATEHARDWAREPRESENT_PATH TEXT("System\\State\\Hardware")
#define SN_BLUETOOTHSTATEHARDWAREPRESENT_VALUE TEXT("Bluetooth")
#define SN_BLUETOOTHSTATEHARDWAREPRESENT_BITMASK 8

////////////////////////////////////////////////////////////////////////////////
// BluetoothStateHandsFreeControl
// Gets a value indicating whether device is under Bluetooth Hands Free Control 
#define SN_BLUETOOTHSTATEHANDSFREECONTROL_ROOT HKEY_LOCAL_MACHINE
#define SN_BLUETOOTHSTATEHANDSFREECONTROL_PATH TEXT("System\\State\\Hardware")
#define SN_BLUETOOTHSTATEHANDSFREECONTROL_VALUE TEXT("Bluetooth")
#define SN_BLUETOOTHSTATEHANDSFREECONTROL_BITMASK 0x10

////////////////////////////////////////////////////////////////////////////////
// BluetoothStateHandsFreeControl
// Please use the SN_BLUETOOTHSTATEHANDSFREECONTROL_* values for this state
#define SN_BLUETOOTHSTATEHANDSFERECONTROL_ROOT SN_BLUETOOTHSTATEHANDSFREECONTROL_ROOT
#define SN_BLUETOOTHSTATEHANDSFERECONTROL_PATH SN_BLUETOOTHSTATEHANDSFREECONTROL_PATH
#define SN_BLUETOOTHSTATEHANDSFERECONTROL_VALUE SN_BLUETOOTHSTATEHANDSFREECONTROL_VALUE
#define SN_BLUETOOTHSTATEHANDSFERECONTROL_BITMASK SN_BLUETOOTHSTATEHANDSFREECONTROL_BITMASK


////////////////////////////////////////////////////////////////////////////////
// BluetoothStateHandsFreeAudio
// Gets a value indicating whether the device is under Bluetooth handsfree audio and control
#define SN_BLUETOOTHSTATEHANDSFREEAUDIO_ROOT HKEY_LOCAL_MACHINE
#define SN_BLUETOOTHSTATEHANDSFREEAUDIO_PATH TEXT("System\\State\\Hardware")
#define SN_BLUETOOTHSTATEHANDSFREEAUDIO_VALUE TEXT("Bluetooth")
#define SN_BLUETOOTHSTATEHANDSFREEAUDIO_BITMASK 0x20


////////////////////////////////////////////////////////////////////////////////
// WiFiStateHardwarePresent
// Gets a value indicating whether Wi-Fi hardware is present 
#define SN_WIFISTATEHARDWAREPRESENT_ROOT HKEY_LOCAL_MACHINE
#define SN_WIFISTATEHARDWAREPRESENT_PATH TEXT("System\\State\\Hardware")
#define SN_WIFISTATEHARDWAREPRESENT_VALUE TEXT("WiFi")
#define SN_WIFISTATEHARDWAREPRESENT_BITMASK 1
 

////////////////////////////////////////////////////////////////////////////////
// WiFiStatePowerOn
// Gets a value indicating whether Wi-Fi is powered on
#define SN_WIFISTATEPOWERON_ROOT HKEY_LOCAL_MACHINE
#define SN_WIFISTATEPOWERON_PATH TEXT("System\\State\\Hardware")
#define SN_WIFISTATEPOWERON_VALUE TEXT("WiFi")
#define SN_WIFISTATEPOWERON_BITMASK 2
 

////////////////////////////////////////////////////////////////////////////////
// WiFiStateNetworksAvailable
// Gets a value indicating whether there are Wi-Fi networks available
#define SN_WIFISTATENETWORKSAVAILABLE_ROOT HKEY_LOCAL_MACHINE
#define SN_WIFISTATENETWORKSAVAILABLE_PATH TEXT("System\\State\\Hardware")
#define SN_WIFISTATENETWORKSAVAILABLE_VALUE TEXT("WiFi")
#define SN_WIFISTATENETWORKSAVAILABLE_BITMASK 4
 
  
////////////////////////////////////////////////////////////////////////////////
// WiFiStateConnecting
// Gets a value indicating whether Wi-Fi is connecting to a network
#define SN_WIFISTATECONNECTING_ROOT HKEY_LOCAL_MACHINE
#define SN_WIFISTATECONNECTING_PATH TEXT("System\\State\\Hardware")
#define SN_WIFISTATECONNECTING_VALUE TEXT("WiFi")
#define SN_WIFISTATECONNECTING_BITMASK 8
 
  
////////////////////////////////////////////////////////////////////////////////
// WiFiStateConnected
// Gets a value indicating whether Wi-Fi is connected to a network
#define SN_WIFISTATECONNECTED_ROOT HKEY_LOCAL_MACHINE
#define SN_WIFISTATECONNECTED_PATH TEXT("System\\State\\Hardware")
#define SN_WIFISTATECONNECTED_VALUE TEXT("WiFi")
#define SN_WIFISTATECONNECTED_BITMASK 0x10
 
  
////////////////////////////////////////////////////////////////////////////////
// ClamshellClosed
// Gets a value indicating whether the clamshell is closed.
#define SN_CLAMSHELLCLOSED_ROOT HKEY_LOCAL_MACHINE
#define SN_CLAMSHELLCLOSED_PATH TEXT("System\\State\\Hardware")
#define SN_CLAMSHELLCLOSED_VALUE TEXT("ClamshellClosed")
 
  
////////////////////////////////////////////////////////////////////////////////
// CalendarEvent
// Gets the CEOID of the current "All Day Event" Appointment.
#define SN_CALENDAREVENT_ROOT HKEY_CURRENT_USER
#define SN_CALENDAREVENT_PATH TEXT("System\\State\\Appointments")
#define SN_CALENDAREVENT_VALUE TEXT("Event")
 
  
////////////////////////////////////////////////////////////////////////////////
// CalendarEventSubject
// Gets the subject of the current "All Day Event" Appointment.
#define SN_CALENDAREVENTSUBJECT_ROOT HKEY_CURRENT_USER
#define SN_CALENDAREVENTSUBJECT_PATH TEXT("System\\State\\Appointments\\Event")
#define SN_CALENDAREVENTSUBJECT_VALUE TEXT("Subject")
 
  
////////////////////////////////////////////////////////////////////////////////
// CalendarEventLocation
// Gets the location of the current "All Day Event" Appointment.
#define SN_CALENDAREVENTLOCATION_ROOT HKEY_CURRENT_USER
#define SN_CALENDAREVENTLOCATION_PATH TEXT("System\\State\\Appointments\\Event")
#define SN_CALENDAREVENTLOCATION_VALUE TEXT("Location")
 
  
////////////////////////////////////////////////////////////////////////////////
// CalendarEventStartTime
// Gets the starting time of the current "All Day Event" Appointment. 
// This will be the starting day of an Appointment Event that spans multiple days.
// The value is a FILETIME stored in REG_BINARY format.
#define SN_CALENDAREVENTSTARTTIME_ROOT HKEY_CURRENT_USER
#define SN_CALENDAREVENTSTARTTIME_PATH TEXT("System\\State\\Appointments\\Event")
#define SN_CALENDAREVENTSTARTTIME_VALUE TEXT("Start Time")
 
  
////////////////////////////////////////////////////////////////////////////////
// CalendarEventEndTime
// Gets the ending time of the current "All Day Event" Appointment. 
// This will be the starting day of an Appointment Event that spans multiple days.
// The value is a FILETIME stored in REG_BINARY format.
#define SN_CALENDAREVENTENDTIME_ROOT HKEY_CURRENT_USER
#define SN_CALENDAREVENTENDTIME_PATH TEXT("System\\State\\Appointments\\Event")
#define SN_CALENDAREVENTENDTIME_VALUE TEXT("End Time")
 
  
////////////////////////////////////////////////////////////////////////////////
// CalendarEventHasConflict
// Gets a value indicating whether the user's availability (free/busy) status conflicts with the current "All Day Event".
#define SN_CALENDAREVENTHASCONFLICT_ROOT HKEY_CURRENT_USER
#define SN_CALENDAREVENTHASCONFLICT_PATH TEXT("System\\State\\Appointments\\Event")
#define SN_CALENDAREVENTHASCONFLICT_VALUE TEXT("Conflict")
 
  
////////////////////////////////////////////////////////////////////////////////
// CalendarEventBusyStatus
// Gets the user's availability (free/busy status) for the current "All Day Event".
// The value is of type OlBusyStatus (from pimstore.h).
#define SN_CALENDAREVENTBUSYSTATUS_ROOT HKEY_CURRENT_USER
#define SN_CALENDAREVENTBUSYSTATUS_PATH TEXT("System\\State\\Appointments\\Event")
#define SN_CALENDAREVENTBUSYSTATUS_VALUE TEXT("Busy Status")
 
  
////////////////////////////////////////////////////////////////////////////////
// CalendarEventCategories
// Gets the categories for the current "All Day Event".
#define SN_CALENDAREVENTCATEGORIES_ROOT HKEY_CURRENT_USER
#define SN_CALENDAREVENTCATEGORIES_PATH TEXT("System\\State\\Appointments\\Event")
#define SN_CALENDAREVENTCATEGORIES_VALUE TEXT("Categories")
 
////////////////////////////////////////////////////////////////////////////////
// CellNetwork available
// Gets a value indicating current network attachment state
#define SN_CELLSYSTEMAVAILABLE_ROOT HKEY_LOCAL_MACHINE
#define SN_CELLSYSTEMAVAILABLE_PATH TEXT("System\\State\\Phone")
#define SN_CELLSYSTEMAVAILABLE_VALUE TEXT("Cellular System Available")
#define SN_CELLSYSTEMAVAILABLE_GPRS_BITMASK     1
#define SN_CELLSYSTEMAVAILABLE_1XRTT_BITMASK    2
#define SN_CELLSYSTEMAVAILABLE_1XEVDO_BITMASK   4
#define SN_CELLSYSTEMAVAILABLE_EDGE_BITMASK     8
#define SN_CELLSYSTEMAVAILABLE_UMTS_BITMASK     16
#define SN_CELLSYSTEMAVAILABLE_EVDV_BITMASK     32
#define SN_CELLSYSTEMAVAILABLE_HSDPA_BITMASK    64

////////////////////////////////////////////////////////////////////////////////
// CellNetwork Connected
// Gets a value indicating what cellular system is used for connection 
#define SN_CELLSYSTEMCONNECTED_ROOT HKEY_LOCAL_MACHINE
#define SN_CELLSYSTEMCONNECTED_PATH TEXT("System\\State\\Phone")
#define SN_CELLSYSTEMCONNECTED_VALUE TEXT("Cellular System Connected")
#define SN_CELLSYSTEMCONNECTED_GPRS_BITMASK     1
#define SN_CELLSYSTEMCONNECTED_1XRTT_BITMASK    2
#define SN_CELLSYSTEMCONNECTED_1XEVDO_BITMASK   4
#define SN_CELLSYSTEMCONNECTED_EDGE_BITMASK     8
#define SN_CELLSYSTEMCONNECTED_UMTS_BITMASK     16
#define SN_CELLSYSTEMCONNECTED_EVDV_BITMASK     32
#define SN_CELLSYSTEMCONNECTED_HSDPA_BITMASK    64
#define SN_CELLSYSTEMCONNECTED_CSD_BITMASK      2147483648 

////////////////////////////////////////////////////////////////////////////////
// InternetSharing UI State
// Gets the bits indicating the current state of InternetSharing
#define SN_INTERNETSHARING_ROOT HKEY_LOCAL_MACHINE
#define SN_INTERNETSHARING_PATH TEXT("System\\State\\Connectivity")
#define SN_INTERNETSHARING_VALUE TEXT("InternetSharing")

// InternetSharing has successfully been loaded and is ready for use
#define SN_INTERNETSHARING_PROCESS_RUNNING    0x00000001
// InternetSharing data session is currently enabled.  This means InternetSharing is either connecting or connected.
#define SN_INTERNETSHARING_ENABLED            0x00000002
// InternetSharing has a valid cellular data connection 
#define SN_INTERNETSHARING_DATA_CONNECTED     0x00000004
// InternetSharing has a valid connection with PC
#define SN_INTERNETSHARING_HOST_CONNECTED     0x00000008
// Connection with PC is over USB
#define SN_INTERNETSHARING_HOST_USB           0x00000010
// Connection with PC is over Bluetooth
#define SN_INTERNETSHARING_HOST_BLUETOOTH     0x00000020
 
////////////////////////////////////////////////////////////////////////////////
// Lock
// Specifies the current lock state.
#define SN_LOCK_ROOT     HKEY_LOCAL_MACHINE
#define SN_LOCK_PATH     TEXT("System\\State")
#define SN_LOCK_VALUE    TEXT("Lock")

#define SN_LOCK_BITMASK_DEVICELOCKED    0x00000001  // Device locked
#define SN_LOCK_BITMASK_KEYLOCKED       0x00000002  // Key locked
#define SN_LOCK_BITMASK_SIMLOCKED       0x00000004  // SIM locked

////////////////////////////////////////////////////////////////////////////////
//Keyboard input mode
// Gets a value indicating whats the current input mode of keyboard driver
#define SN_KEYBDINPUTMODE_ROOT HKEY_LOCAL_MACHINE
#define SN_KEYBDINPUTMODE_PATH TEXT("System\\State\\Keyboard")
#define SN_KEYBDINPUTMODE_VALUE TEXT("CurrentInputMode")

////////////////////////////////////////////////////////////////////////////////
// Theme
// A change in this value indicates that the current theme has changed.
// Use with REG_COMPARISONTYPE = REG_CT_ANYCHANGE.
#define SN_THEMECHANGE_ROOT HKEY_CURRENT_USER
#define SN_THEMECHANGE_PATH TEXT("System\\State\\Shell")
#define SN_THEMECHANGE_VALUE TEXT("Current Theme")
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\wm7\sfone7\Include\sms.h ===
//
// Copyright (c) Microsoft Corporation.  All rights reserved.
//
//
// Use of this sample source code is subject to the terms of the Microsoft
// license agreement under which you licensed this sample source code. If
// you did not accept the terms of the license agreement, you are not
// authorized to use this sample source code. For the terms of the license,
// please see the license agreement between you and Microsoft or, if applicable,
// see the LICENSE.RTF on your install media or the root of your tools installation.
// THE SAMPLE SOURCE CODE IS PROVIDED "AS IS", WITH NO WARRANTIES.
//


#ifndef _SMS_H_
#define _SMS_H_


#include <windows.h>


#ifdef __cplusplus
extern "C" {
#endif


//
// Errors
//
#define FACILITY_SMS                           0x200

// Specific registration errors (for SmsSetMessageNotification, SmsClearMessageNotification)
#define SMS_E_INVALIDPROTOCOL                  MAKE_HRESULT(SEVERITY_ERROR,   FACILITY_SMS, 0x0001)
#define SMS_E_REGISTRATIONEXISTS               MAKE_HRESULT(SEVERITY_ERROR,   FACILITY_SMS, 0x0002)
#define SMS_S_NOSUCHREGISTRATION               MAKE_HRESULT(SEVERITY_SUCCESS, FACILITY_SMS, 0x0003)

// Specific messaging errors (for SmsOpen, SmsSendMessage, SmsGetSMSC, etc.)
#define SMS_E_TOOMUCHDATA                      MAKE_HRESULT(SEVERITY_ERROR,   FACILITY_SMS, 0x0100)
#define SMS_E_INVALIDDATA                      MAKE_HRESULT(SEVERITY_ERROR,   FACILITY_SMS, 0x0101)
#define SMS_E_BUFFERTOOSMALL                   MAKE_HRESULT(SEVERITY_ERROR,   FACILITY_SMS, 0x0102)
#define SMS_E_PROVIDERSPECIFICBUFFERWRONGSIZE  MAKE_HRESULT(SEVERITY_ERROR,   FACILITY_SMS, 0x0103)
#define SMS_E_TIMEUNAVAILABLE                  MAKE_HRESULT(SEVERITY_ERROR,   FACILITY_SMS, 0x0104)
#define SMS_E_RECEIVEHANDLEALREADYOPEN         MAKE_HRESULT(SEVERITY_ERROR,   FACILITY_SMS, 0x0105)
#define SMS_E_DESTINATIONOUTOFSVC              MAKE_HRESULT(SEVERITY_ERROR,   FACILITY_SMS, 0x0106)
#define SMS_E_INVALIDADDRESS                   MAKE_HRESULT(SEVERITY_ERROR,   FACILITY_SMS, 0x0107)
#define SMS_E_MSGBARREDBYOPERATOR              MAKE_HRESULT(SEVERITY_ERROR,   FACILITY_SMS, 0x0108)
#define SMS_E_MSGCALLBARRED                    MAKE_HRESULT(SEVERITY_ERROR,   FACILITY_SMS, 0x0109)
#define SMS_E_NOSCSUBSCRIPTION                 MAKE_HRESULT(SEVERITY_ERROR,   FACILITY_SMS, 0x010a)
#define SMS_E_SCBUSY                           MAKE_HRESULT(SEVERITY_ERROR,   FACILITY_SMS, 0x010b)
#define SMS_E_SVCNOTSUBSCRIBED                 MAKE_HRESULT(SEVERITY_ERROR,   FACILITY_SMS, 0x010c)
#define SMS_E_UNASSIGNEDNUMBER                 MAKE_HRESULT(SEVERITY_ERROR,   FACILITY_SMS, 0x010d)
#define SMS_E_UNKNOWNSCADDRESS                 MAKE_HRESULT(SEVERITY_ERROR,   FACILITY_SMS, 0x010e)
#define SMS_E_UNIDENTIFIEDSUBCRIBER            MAKE_HRESULT(SEVERITY_ERROR,   FACILITY_SMS, 0x010f)
#define SMS_E_FDNRESTRICT                      MAKE_HRESULT(SEVERITY_ERROR,   FACILITY_SMS, 0x0110)

// General SMS messaging errors
#define SMS_E_MISC                             MAKE_HRESULT(SEVERITY_ERROR,   FACILITY_SMS, 0x0200)
#define SMS_E_PASSWORD                         MAKE_HRESULT(SEVERITY_ERROR,   FACILITY_SMS, 0x0201)
#define SMS_E_SIM                              MAKE_HRESULT(SEVERITY_ERROR,   FACILITY_SMS, 0x0202)
#define SMS_E_NETWORKACCESS                    MAKE_HRESULT(SEVERITY_ERROR,   FACILITY_SMS, 0x0203)
#define SMS_E_NETWORK                          MAKE_HRESULT(SEVERITY_ERROR,   FACILITY_SMS, 0x0204)
#define SMS_E_MOBILE                           MAKE_HRESULT(SEVERITY_ERROR,   FACILITY_SMS, 0x0205)
#define SMS_E_NETWORKUNSUPPORTED               MAKE_HRESULT(SEVERITY_ERROR,   FACILITY_SMS, 0x0206)
#define SMS_E_MOBILEUNSUPPORTED                MAKE_HRESULT(SEVERITY_ERROR,   FACILITY_SMS, 0x0207)
#define SMS_E_BADPARAM                         MAKE_HRESULT(SEVERITY_ERROR,   FACILITY_SMS, 0x0208)
#define SMS_E_STORAGE                          MAKE_HRESULT(SEVERITY_ERROR,   FACILITY_SMS, 0x0209)
#define SMS_E_SMSC                             MAKE_HRESULT(SEVERITY_ERROR,   FACILITY_SMS, 0x020a)
#define SMS_E_DESTINATION                      MAKE_HRESULT(SEVERITY_ERROR,   FACILITY_SMS, 0x020b)
#define SMS_E_DESTINATIONUNSUPPORTED           MAKE_HRESULT(SEVERITY_ERROR,   FACILITY_SMS, 0x020c)
#define SMS_E_RADIOUNAVAILABLE                 MAKE_HRESULT(SEVERITY_ERROR,   FACILITY_SMS, 0x020d)


//
// Constants
//
#define SMS_DATAGRAM_SIZE            (140)
#define SMS_BROADCAST_DATAGRAM_SIZE  (82)
#define SMS_MAX_APPNAME_LENGTH       (MAX_PATH)
#define SMS_MAX_PARAMS_LENGTH        (MAX_PATH)
#define SMS_MAX_PROTOCOLNAME_LENGTH  (MAX_PATH)
#define SMS_MAX_MESSAGEUID_SIZE      (1024)
#define SMS_MAX_ADDRESS_LENGTH       (256)
#define SMS_MAX_SUBADDRESS_SIZE      (256)
// dwMessageModes for SmsOpen
#define SMS_MODE_RECEIVE              (0x00000001)
#define SMS_MODE_SEND                 (0x00000002)
// dwOptions for SmsSendMessage
#define SMS_OPTION_DELIVERY_NONE      (0x00000000)
#define SMS_OPTION_DELIVERY_NO_RETRY  (0x00000001)
// dwMessageOptions for TEXT_PROVIDER_SPECIFIC_DATA
#define PS_MESSAGE_OPTION_NONE          (0x00000000)
#define PS_MESSAGE_OPTION_REPLYPATH     (0x00000001)
#define PS_MESSAGE_OPTION_STATUSREPORT  (0x00000002)
#define PS_MESSAGE_OPTION_DISCARD       (0x00000004)
// dwMessageStatus0 and dwMessageStatus1 for SmsGetMessageStatus and the SMS status-message provider (SMS_MSGTYPE_STATUS)
// Message status is unknown iff dwMessageStatus0 and dwMessageStatus1 are both set to MESSAGE_STATUS_UNKNOWN
#define MESSAGE_STATUS_UNKNOWN                  (0x00000000)
// Valid bits for dwMessageStatus0
#define MESSAGE_STATUS_0_RECEIVEDBYSME            (0x00000001)
#define MESSAGE_STATUS_0_FORWARDEDTOSME           (0x00000002)
#define MESSAGE_STATUS_0_REPLACEDBYSC             (0x00000004)
#define MESSAGE_STATUS_0_CONGESTION_TRYING        (0x00000008)
#define MESSAGE_STATUS_0_SMEBUSY_TRYING           (0x00000010)
#define MESSAGE_STATUS_0_SMENOTRESPONDING_TRYING  (0x00000020)
#define MESSAGE_STATUS_0_SVCREJECTED_TRYING       (0x00000040)
#define MESSAGE_STATUS_0_QUALITYUNAVAIL_TRYING    (0x00000080)
#define MESSAGE_STATUS_0_SMEERROR_TRYING          (0x00000100)
#define MESSAGE_STATUS_0_CONGESTION               (0x00000200)
#define MESSAGE_STATUS_0_SMEBUSY                  (0x00000400)
#define MESSAGE_STATUS_0_SMENOTRESPONDING         (0x00000800)
#define MESSAGE_STATUS_0_SVCREJECTED              (0x00001000)
#define MESSAGE_STATUS_0_QUALITYUNAVAIL_TEMP      (0x00002000)
#define MESSAGE_STATUS_0_SMEERROR                 (0x00004000)
#define MESSAGE_STATUS_0_REMOTEPROCERROR          (0x00008000)
#define MESSAGE_STATUS_0_INCOMPATIBLEDEST         (0x00010000)
#define MESSAGE_STATUS_0_CONNECTIONREJECTED       (0x00020000)
#define MESSAGE_STATUS_0_NOTOBTAINABLE            (0x00040000)
#define MESSAGE_STATUS_0_NOINTERNETWORKING        (0x00080000)
#define MESSAGE_STATUS_0_VPEXPIRED                (0x00100000)
#define MESSAGE_STATUS_0_DELETEDBYORIGSME         (0x00200000)
#define MESSAGE_STATUS_0_DELETEDBYSC              (0x00400000)
#define MESSAGE_STATUS_0_NOLONGEREXISTS           (0x00800000)
#define MESSAGE_STATUS_0_QUALITYUNAVAIL           (0x01000000)
#define MESSAGE_STATUS_0_RESERVED_COMPLETED       (0x02000000)
#define MESSAGE_STATUS_0_RESERVED_TRYING          (0x04000000)
#define MESSAGE_STATUS_0_RESERVED_ERROR           (0x08000000)
#define MESSAGE_STATUS_0_RESERVED_TMPERROR        (0x10000000)
#define MESSAGE_STATUS_0_SCSPECIFIC_COMPLETED     (0x20000000)
#define MESSAGE_STATUS_0_SCSPECIFIC_TRYING        (0x40000000)
#define MESSAGE_STATUS_0_SCSPECIFIC_ERROR         (0x80000000)
// Valid bits for dwMessageStatus1
#define MESSAGE_STATUS_1_SCSPECIFIC_TMPERROR      (0x00000001)
// Language identifiers for SMS_BROADCAST_RANGES.dwBroadcastMsgLangs
#define SMS_DCSLANG_UNKNOWN                       (0x00000001)
#define SMS_DCSLANG_GERMAN                        (0x00000002)
#define SMS_DCSLANG_ENGLISH                       (0x00000004)
#define SMS_DCSLANG_ITALIAN                       (0x00000008)
#define SMS_DCSLANG_FRENCH                        (0x00000010)
#define SMS_DCSLANG_SPANISH                       (0x00000020)
#define SMS_DCSLANG_DUTCH                         (0x00000040)
#define SMS_DCSLANG_SWEDISH                       (0x00000080)
#define SMS_DCSLANG_DANISH                        (0x00000100)
#define SMS_DCSLANG_PORTUGUESE                    (0x00000200)
#define SMS_DCSLANG_FINNISH                       (0x00000400)
#define SMS_DCSLANG_NORWEGIAN                     (0x00000800)
#define SMS_DCSLANG_GREEK                         (0x00001000)
#define SMS_DCSLANG_TURKISH                       (0x00002000)
#define SMS_DCSLANG_HUNGARIAN                     (0x00004000)
#define SMS_DCSLANG_POLISH                        (0x00008000)
#define SMS_DCSLANG_CZECH                         (0x00010000)
#define SMS_DCSLANG_HEBREW                        (0x00020000)    
#define SMS_DCSLANG_ARABIC                        (0x00040000)   
#define SMS_DCSLANG_RUSSIAN                       (0x00080000)    
#define SMS_DCSLANG_ICELANDIC                     (0x00100000)     
#define SMS_DCSLANG_ALL                           (0x001fffff)     

// Valid flags for SMS_BROADCAST_RANGES.dwParams
#define SMS_PARAM_SBR_BROADCASTMSGIDS             (0x00000001)
#define SMS_PARAM_SBR_BROADCASTMSGLANGS           (0x00000002)
#define SMS_PARAM_SBR_ACCEPTIDS                   (0x00000004)
//Valid values for ProtocolID
#define SMS_MSGPROTOCOL_UNKNOWN                     (0x00000000)      
#define SMS_MSGPROTOCOL_SMETOSME                    (0x00000001)      
#define SMS_MSGPROTOCOL_IMPLICIT                    (0x00000002)      
#define SMS_MSGPROTOCOL_TELEX                       (0x00000003)      
#define SMS_MSGPROTOCOL_TELEFAX_GROUP3              (0x00000004)      
#define SMS_MSGPROTOCOL_TELEFAX_GROUP4              (0x00000005)      
#define SMS_MSGPROTOCOL_VOICEPHONE                  (0x00000006)      
#define SMS_MSGPROTOCOL_ERMES                       (0x00000007)      
#define SMS_MSGPROTOCOL_PAGING                      (0x00000008)      
#define SMS_MSGPROTOCOL_VIDEOTEX                    (0x00000009)      
#define SMS_MSGPROTOCOL_TELETEX                     (0x0000000a)      
#define SMS_MSGPROTOCOL_TELETEX_PSPDN               (0x0000000b)      
#define SMS_MSGPROTOCOL_TELETEX_CSPDN               (0x0000000c)      
#define SMS_MSGPROTOCOL_TELETEX_PSTN                (0x0000000d)      
#define SMS_MSGPROTOCOL_TELETEX_ISDN                (0x0000000e)      
#define SMS_MSGPROTOCOL_UCI                         (0x0000000f)      
#define SMS_MSGPROTOCOL_MSGHANDLING                 (0x00000010)      
#define SMS_MSGPROTOCOL_X400                        (0x00000011)      
#define SMS_MSGPROTOCOL_EMAIL                       (0x00000012)      
#define SMS_MSGPROTOCOL_SCSPECIFIC1             (0x00000013)     
#define SMS_MSGPROTOCOL_SCSPECIFIC2             (0x00000014)     
#define SMS_MSGPROTOCOL_SCSPECIFIC3             (0x00000015)     
#define SMS_MSGPROTOCOL_SCSPECIFIC4             (0x00000016)     
#define SMS_MSGPROTOCOL_SCSPECIFIC5             (0x00000017)     
#define SMS_MSGPROTOCOL_SCSPECIFIC6             (0x00000018)     
#define SMS_MSGPROTOCOL_SCSPECIFIC7             (0x00000019)     
#define SMS_MSGPROTOCOL_GSMSTATION                  (0x0000001a)      
#define SMS_MSGPROTOCOL_SM_TYPE0                    (0x0000001b)      
#define SMS_MSGPROTOCOL_RSM_TYPE1                   (0x0000001c)      
#define SMS_MSGPROTOCOL_RSM_TYPE2                   (0x0000001d)      
#define SMS_MSGPROTOCOL_RSM_TYPE3                   (0x0000001e)      
#define SMS_MSGPROTOCOL_RSM_TYPE4                   (0x0000001f)      
#define SMS_MSGPROTOCOL_RSM_TYPE5                   (0x00000020)      
#define SMS_MSGPROTOCOL_RSM_TYPE6                   (0x00000021)      
#define SMS_MSGPROTOCOL_RSM_TYPE7                   (0x00000022)      
#define SMS_MSGPROTOCOL_RETURNCALL                  (0x00000023)      
#define SMS_MSGPROTOCOL_ME_DOWNLOAD                 (0x00000024)      
#define SMS_MSGPROTOCOL_DEPERSONALIZATION           (0x00000025)      
#define SMS_MSGPROTOCOL_SIM_DOWNLOAD                (0x00000026)   


#define SMS_PARAM_PROFILE_SMSC_ADDRESS              (0x00000001) 
#define SMS_PARAM_PROFILE_PHONENUMBER               (0x00000002) 
#define SMS_PARAM_PROFILE_BROADCASTMSGRANGE         (0x00000004) 
#define SMS_PARAM_PROFILE_BROADCASTMSGLANG          (0x00000008) 
#define SMS_PARAM_PROFILE_ACCEPTBROADCAST           (0x00000010) 
#define SMS_PARAM_PROFILE_CAPABILITY                (0x00000020) 
#define SMS_PARAM_PROFILE_ALL                       (0x0000003F) 

#define SMS_SUPPORT_MOSMS                           (0x00000001) 
#define SMS_SUPPORT_IPADDRESS                       (0x00000002) 
#define SMS_SUPPORT_IS637SMS                        (0x00000004) 
#define SMS_SUPPORT_SMSINSIM                        (0x00000008) 
#define SMS_SUPPORT_BROADCAST                       (0x00000010) 



//
// Enumerations
//
enum SMS_ADDRESS_TYPE {
    SMSAT_UNKNOWN=0,
    SMSAT_INTERNATIONAL,
    SMSAT_NATIONAL,
    SMSAT_NETWORKSPECIFIC,
    SMSAT_SUBSCRIBER,
    SMSAT_ALPHANUMERIC,
    SMSAT_ABBREVIATED
};
enum SMS_DATA_ENCODING {
    SMSDE_OPTIMAL=0,
    SMSDE_GSM,
    SMSDE_UCS2,
};
enum PROVIDER_SPECIFIC_MESSAGE_CLASS {
    PS_MESSAGE_CLASS0 = 0,
    PS_MESSAGE_CLASS1,
    PS_MESSAGE_CLASS2,
    PS_MESSAGE_CLASS3,
    PS_MESSAGE_CLASSUNSPECIFIED,
};
enum PROVIDER_SPECIFIC_REPLACE_OPTION {
    PSRO_NONE = 0,
    PSRO_REPLACE_TYPE1,
    PSRO_REPLACE_TYPE2,
    PSRO_REPLACE_TYPE3,
    PSRO_REPLACE_TYPE4,
    PSRO_REPLACE_TYPE5,
    PSRO_REPLACE_TYPE6,
    PSRO_REPLACE_TYPE7,
    PSRO_RETURN_CALL,
    PSRO_DEPERSONALIZATION,
};


//
// Types
//
typedef DWORD SMS_HANDLE;
typedef DWORD SMS_MESSAGE_ID;
#define INVALID_MESSAGE_ID ((SMS_MESSAGE_ID)0xffffffff)
// Registration structure used by SmsSetMessageNotification and SmsClearMessageNotification
typedef struct smsregistrationdata_tag {
    DWORD   cbSize;
    TCHAR   tszAppName[SMS_MAX_APPNAME_LENGTH];
    TCHAR   tszParams[SMS_MAX_PARAMS_LENGTH];
    TCHAR   tszProtocolName[SMS_MAX_PROTOCOLNAME_LENGTH];
} SMSREGISTRATIONDATA, *LPSMSREGISTRATIONDATA;
// SMS addressing information
typedef struct sms_address_tag {
    SMS_ADDRESS_TYPE smsatAddressType;
    TCHAR ptsAddress[SMS_MAX_ADDRESS_LENGTH];
} SMS_ADDRESS, *LPSMS_ADDRESS;
// SMS status message information
typedef struct sms_status_information_tag {
    SMS_MESSAGE_ID smsmidMessageID;
    DWORD dwMessageStatus0;
    DWORD dwMessageStatus1;
    SMS_ADDRESS smsaRecipientAddress;
    SYSTEMTIME stServiceCenterTimeStamp;  // (UTC time)
    SYSTEMTIME stDischargeTime;  // (UTC time)
} SMS_STATUS_INFORMATION, *LPSMS_STATUS_INFORMATION;
// SMS broadcast message range information
typedef struct sms_range_tag {
    DWORD dwMinimum;
    DWORD dwMaximum;
} SMS_RANGE, *LPSMS_RANGE;
// SMS broadcast message ranges information
// Use #pragma to avoid "warning C4200: nonstandard extension used : zero-sized array in struct/union
#pragma warning(disable:4200)
typedef struct sms_broadcast_ranges_tag {
    DWORD cbSize;
    DWORD dwParams;
    DWORD dwNumRanges;
    DWORD dwBroadcastMsgLangs;
    BOOL bAccept;
    SMS_RANGE smsrBroadcastRanges[];
} SMS_BROADCAST_RANGES, *LPSMS_BROADCAST_RANGES;
#pragma warning(default:4200)


//
// SMS message types (for use with SmsOpen)
//

// Text message type
#define SMS_MSGTYPE_TEXT TEXT("Microsoft Text SMS Protocol")
// Provider-specific data for use with SmsSendMessage and SmsReadMessage

// Bitfield values for the extended parameters of the text provider structure.
#define TEXTPSEXTPARM_NONE         (0x00000000)
#define TEXTPSEXTPARM_CALLBACK     (0x00000001)
#define TEXTPSEXTPARM_PRIORITY     (0x00000002)
#define TEXTPSEXTPARM_ALL          (0x00000003)

// The priority enum should match up with the RIL_MSGPRIORITY_* defines.
// If any new values are added, the Priority mapping functions of sms_txtshared_cdma.cpp
// should also be adjusted.
enum TEXT_PROVIDER_SPECIFIC_PRIORITY_TYPE {
    TEXTPSPRI_NONE = 0,    
    TEXTPSPRI_NORMAL = 1,
    TEXTPSPRI_INTERACTIVE,
    TEXTPSPRI_URGENT,
    TEXTPSPRI_EMERGENCY
};

typedef struct text_provider_specific_data_tag {
    DWORD dwMessageOptions;
    PROVIDER_SPECIFIC_MESSAGE_CLASS psMessageClass;
    PROVIDER_SPECIFIC_REPLACE_OPTION psReplaceOption;
    DWORD dwHeaderDataSize;
    BYTE pbHeaderData[SMS_DATAGRAM_SIZE];   // For concatenated messages, only the header from the first segment is returned.
    BOOL fMessageContainsEMSHeaders;        // At least one segment of this message contains EMS headers.  
                                            // Only set if EMS handler installed.
    DWORD dwProtocolID;                     // PID of incoming message, or desired PID of outgoing message.  
                                            // Applies only to GSM.  Set to SMS_MSGPROTOCOL_UNKNOWN if psReplaceOption 
                                            // is not PSRO_NONE.
    DWORD dwExtParams;                                // Bitfield of valid additional structure parameters (all structure
                                                      // values above are considered always valid).
    TEXT_PROVIDER_SPECIFIC_PRIORITY_TYPE tpsPriority; // Applies only to CDMA IS637. Priority indicator.
    SMS_ADDRESS smsaCallback;                         // Applies only to CDMA IS637. Callback number
} TEXT_PROVIDER_SPECIFIC_DATA;

// Class 2 Text message type
#define SMS_MSGTYPE_CLASS2 TEXT("Microsoft Class2 SMS Protocol")
typedef struct class2_provider_specific_data_tag {
    DWORD dwMessageOptions;
    PROVIDER_SPECIFIC_MESSAGE_CLASS psMessageClass;
    PROVIDER_SPECIFIC_REPLACE_OPTION psReplaceOption;
    DWORD dwHeaderDataSize;
    BYTE pbHeaderData[SMS_DATAGRAM_SIZE];   // For concatenated messages, only the header from the first segment is returned.
    BOOL fMessageContainsEMSHeaders;        // At least one segment of this message contains EMS headers.
                                            // Only set if EMS handler installed.
    DWORD dwProtocolID;                     // PID of incoming message, or desired PID of outgoing message.
                                            // Applies only to GSM.  Set to SMS_MSGPROTOCOL_UNKNOWN if psReplaceOption
                                            // is not PSRO_NONE.
    DWORD dwLocation;
    DWORD dwIndex;
} CLASS2_PROVIDER_SPECIFIC_DATA;


// Notification message type
#define SMS_MSGTYPE_NOTIFICATION TEXT("Microsoft Notification SMS Protocol (Receive Only)")
// Provider-specific data for use with SmsReadMessage
enum NOTIFICATION_PROVIDER_SPECIFIC_MSG_WAITING_TYPE { 
    NOTIFICATIONPSMWT_NONE = 0,
    NOTIFICATIONPSMWT_GENERIC,
    NOTIFICATIONPSMWT_VOICEMAIL,
    NOTIFICATIONPSMWT_FAX,
    NOTIFICATIONPSMWT_EMAIL,
    NOTIFICATIONPSMWT_OTHER,
};
#define NOTIFICATIONPS_NUM_MSG_WAITING_UNKNOWN  (-1)
#define NOTIFICATIONPS_NUM_MSG_WAITING_NONZERO  (-2)
enum NOTIFICATION_PROVIDER_SPECIFIC_INDICATOR_TYPE {
    NOTIFICATIONPSIT_NONE = 0,
    NOTIFICATIONPSIT_LINE1 = 1,
    NOTIFICATIONPSIT_LINE2 = 2,
};
typedef struct notification_provider_specific_data_tag {
    DWORD dwMessageOptions;
    PROVIDER_SPECIFIC_MESSAGE_CLASS psMessageClass;
    PROVIDER_SPECIFIC_REPLACE_OPTION psReplaceOption;
    NOTIFICATION_PROVIDER_SPECIFIC_MSG_WAITING_TYPE npsMsgWaitingType;
    int iNumberOfMessagesWaiting;
    NOTIFICATION_PROVIDER_SPECIFIC_INDICATOR_TYPE npsIndicatorType;
} NOTIFICATION_PROVIDER_SPECIFIC_DATA;

// WDP message type
#define SMS_MSGTYPE_WDP TEXT("Microsoft WDP SMS Protocol")
// Provider-specific data for use with SmsSendMessage and SmsReadMessage
enum WDP_PROVIDER_SPECIFIC_PORT_ADDRESSING {
    WDPPSPA_8_BIT_PORT_NUMBERS = 0,
    WDPPSPA_16_BIT_PORT_NUMBERS,
};
typedef struct wdp_provider_specific_data_tag {
    WDP_PROVIDER_SPECIFIC_PORT_ADDRESSING wdppsPortAddressing;
    WORD wDestinationPort;
    WORD wOriginatorPort;
} WDP_PROVIDER_SPECIFIC_DATA;

// WCMP message type
#define SMS_MSGTYPE_WCMP TEXT("Microsoft WCMP SMS Protocol")
// Provider-specific data for use with SmsSendMessage and SmsReadMessage
enum WCMP_PROVIDER_SPECIFIC_MESSAGE_TYPE {
    WCMPPSMT_UNSUPPORTED = 0,
    WCMPPSMT_PORT_UNREACHABLE,
    WCMPPSMT_MESSAGE_TOO_BIG,
    WCMPPSMT_ECHO_REQUEST,
    WCMPPSMT_ECHO_REPLY,
};
typedef struct wcmp_provider_specific_data_tag {
    WCMP_PROVIDER_SPECIFIC_MESSAGE_TYPE wcmppsMessageType;
    WORD wParam1;
    WORD wParam2;
    WORD wParam3;
    SMS_ADDRESS smsaAddress;
} WCMP_PROVIDER_SPECIFIC_DATA;

// Status message type
#define SMS_MSGTYPE_STATUS TEXT("Microsoft Status Message SMS Protocol (Receive Only)")
// Provider-specific data for use with SmsReadMessage
typedef struct status_provider_specific_data_tag {
    SMS_STATUS_INFORMATION smssiStatusInformation;
} STATUS_PROVIDER_SPECIFIC_DATA;

// Broadcast message type
#define SMS_MSGTYPE_BROADCAST TEXT("Microsoft Broadcast Message SMS Protocol (Receive Only)")
enum BROADCAST_PROVIDER_SPECIFIC_GEOGRAPHICAL_SCOPE {
    BPSGS_UNKNOWN = 0,
    BPSGS_CELL_DISPLAY_IMMEDIATE,
    BPSGS_CELL,
    BPSGS_PLMN,
    BPSGS_LOCATION_AREA,
};
// Provider-specific data for use with SmsReadMessage
typedef struct broadcast_provider_specific_data_tag {
    WORD wMessageID;
    WORD wMessageCode;
    BROADCAST_PROVIDER_SPECIFIC_GEOGRAPHICAL_SCOPE bpsgsGeographicalScope;
    WORD wUpdateNumber;
} BROADCAST_PROVIDER_SPECIFIC_DATA;

// Raw message type
#define SMS_MSGTYPE_RAW TEXT("Microsoft Raw SMS Protocol (Receive Only)")
// Provider-specific data for use with SmsReadMessage
typedef struct raw_provider_specific_data_tag {
    DWORD dwHeaderDataSize;
    BYTE pbHeaderData[SMS_DATAGRAM_SIZE];
} RAW_PROVIDER_SPECIFIC_DATA;


typedef struct _smsprofile_tag
{
    DWORD dwSize;                             //@param the total size o f smsprofile structure
    DWORD dwParams;                            //@param specify which field is valid in this structure.
    DWORD dwBroadcastRangeOffset;             //@param offset to broadcast range items, should be array of //SMS_RANGE data
    SMS_ADDRESS smsaSMSCAddress;              //@param specify the SMSC address
    SMS_ADDRESS smsaPhoneNumber;              //@param specify the current phonenumber used to send SMS
    DWORD dwBroadcastMsgLangs;                //@param supported broadcast languages.
    DWORD dwNumRanges;                        //@param number of RIL_RANGE in dwBroadCastRangeOffset
    BOOL  bAcceptBroadCast;                   //@param whether we need receive the broadcast message
    DWORD dwSmsCapability;                    //@param read-only. A combine of SMS_SUPPORT_XXX flags
}SMS_PROFILE, *LPSMS_PROFILE;

//
// APIs for SMS.dll
//
HRESULT SmsSetMessageNotification (
    const SMSREGISTRATIONDATA* psmsrd
);

HRESULT SmsClearMessageNotification (
    const LPCTSTR tszProtocolName
);

// Open the SMS Messaging component for read and/or write access
//
// Each protocol may only have one handle open with SMS_MODE_RECEIVE.
// Additional attempts to get RECEIVE mode on a given protocol will result in
// SMS_E_RECEIVEHANDLEALREADYOPEN.
//
// Currently all protocols have applications whith open RECEIVE handles.  As a
// result, using the SMS API to receive SMS messages is not supported.  Attempts
// to do so may interfere with the proper operation of Inbox, WAP, or other SMS
// applications.
//
// The IMailRuleClient interface in cemapi.h may be used to access received 
// text SMS messages.
HRESULT SmsOpen (
    const LPCTSTR ptsMessageProtocol,
    const DWORD dwMessageModes,
    SMS_HANDLE* const psmshHandle,
    HANDLE* const phMessageAvailableEvent
);

// Close a handle to the SMS messaging component
HRESULT SmsClose (
    const SMS_HANDLE smshHandle
);

// Send an SMS message
HRESULT SmsSendMessage (
    const SMS_HANDLE smshHandle,
    const SMS_ADDRESS* const psmsaSMSCAddress,
    const SMS_ADDRESS* const psmsaDestinationAddress,
    const SYSTEMTIME* const pstValidityPeriod,  // (Values in this structure are expressed relative to the current time)
    __in_bcount(dwDataSize) const BYTE* const pbData,
    const DWORD dwDataSize,
    __in_bcount(dwProviderSpecificDataSize) const BYTE* const pbProviderSpecificData,
    const DWORD dwProviderSpecificDataSize,
    const SMS_DATA_ENCODING smsdeDataEncoding,
    const DWORD dwOptions,
    SMS_MESSAGE_ID* psmsmidMessageID
);

// Determine an upper-bound for the size of the buffer needed by the next call to SmsReadMessage
HRESULT SmsGetMessageSize (
    const SMS_HANDLE smshHandle,
    DWORD* const pdwDataSize
);

// Read an SMS message (the appropriate size of the buffer can be found via a call to SmsGetMessageSize)
HRESULT SmsReadMessage (
    const SMS_HANDLE smshHandle,
    SMS_ADDRESS* const psmsaSMSCAddress,
    SMS_ADDRESS* const psmsaSourceAddress,
    SYSTEMTIME* const pstReceiveTime,  // (UTC time)
    __out_bcount(dwBufferSize) BYTE* const pbBuffer,
    DWORD dwBufferSize,
    __out_bcount(dwProviderSpecificDataBuffer) BYTE* const pbProviderSpecificBuffer,
    DWORD dwProviderSpecificDataBuffer,
    DWORD* pdwBytesRead
);

// Waits to receive a status-report for an SMS message
HRESULT SmsGetMessageStatus (
    const SMS_HANDLE smshHandle,
    SMS_MESSAGE_ID smsmidMessageID,
    SMS_STATUS_INFORMATION* const psmssiStatusInformation,
    const DWORD dwTimeout
);

// Get the default SMS Service Center address
HRESULT SmsGetSMSC (
    SMS_ADDRESS* const psmsaSMSCAddress
);

// Set the default SMS Service Center address
HRESULT SmsSetSMSC (
    const SMS_ADDRESS* const psmsaSMSCAddress
);

// Get the range of broadcast messages to listen for
HRESULT SmsGetBroadcastMsgRanges (
    SMS_BROADCAST_RANGES* const psmsbrBroadcastRanges
);

// Set the range of broadcast messages to listen for
HRESULT SmsSetBroadcastMsgRanges (
    const SMS_BROADCAST_RANGES* const psmsbrBroadcastRanges
);

// Get the device's phone number for SMS
HRESULT SmsGetPhoneNumber (
    SMS_ADDRESS* const psmsaAddress
);

// Approximate the system time based on the time indicated by the SMSC in the last status-report message
HRESULT SmsGetTime (
    SYSTEMTIME* const ptsCurrentTime,  // (UTC time)
    DWORD* const pdwErrorMargin
);

// Extension of SmsOpen function to support multiple radios
HRESULT SmsOpenEx(
    const DWORD dwRadioIndex,
    const LPCTSTR ptsMessageProtocol,
    const DWORD dwMessageModes,
    SMS_HANDLE* const psmshHandle,
    HANDLE* const phMessageAvailableEvent
);

// Replacement of original SmsGetPhoneNumber, SmsGetSMSC and SmsGetBroadcastmsgRanges function, and support multiple radios
HRESULT SmsGetProfile(
    const DWORD dwRadioIndex,
    SMS_PROFILE *const psmpSmsProfile
);

// Replacement of original SmsSetSMSC and SmsSetBroadcastmsgRanges function, and support multiple radios
HRESULT SmsSetProfile(
    const DWORD dwRadioIndex,
    const SMS_PROFILE *const psmpSmsProfile
);

// Replacement of original GetMessageCountInfo function exposed in sms_providers.dll
HRESULT  SmsCalculateMessageFragments(
    const DWORD dwRadioIndex,
    const LPCTSTR ptsMessageProtocol,
    const WCHAR * const pszInputMsg,
    const DWORD cchMsgLength,
    const SMS_DATA_ENCODING smsdeOutputEncoding,
    DWORD * const pdwTotalOutputSize,
    DWORD * const pdwTotalFragmentCount,
    DWORD * const pdwMaxSingleFragmentSize,
    DWORD * const pdwMaxMultipartFragmentSize,
    SMS_DATA_ENCODING * const psmsdeActualOutputEncoding
);


#ifdef __cplusplus
}
#endif


#endif  // _SMS_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\wm7\sfone7\Include\socksv2.h ===
//
// Copyright (c) Microsoft Corporation.  All rights reserved.
//
//
// Use of this sample source code is subject to the terms of the Microsoft
// license agreement under which you licensed this sample source code. If
// you did not accept the terms of the license agreement, you are not
// authorized to use this sample source code. For the terms of the license,
// please see the license agreement between you and Microsoft or, if applicable,
// see the LICENSE.RTF on your install media or the root of your tools installation.
// THE SAMPLE SOURCE CODE IS PROVIDED "AS IS", WITH NO WARRANTIES OR INDEMNITIES.
//
/*++
THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF
ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO
THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A
PARTICULAR PURPOSE.

Module Name:  

socksv2.h

Abstract:  

This file implements the Windows CE PC Card Socket Services structures and
definitions.  This is provided as a sample to platform writers and is
expected to be able to be used without modification on most (if not
all) hardware platforms.

Functions:


Notes:


--*/

#ifndef __SOCKSV2_H__
#define __SOCKSV2_H__ 1
// Do not include cardserv.h
#ifndef __CARDSERV_H__
#define __CARDSERV_H__
#endif
#include <ceddk.h>
#ifdef __cplusplus
extern "C"
{
#endif
    typedef UINT32 STATUS;
    //
    // @doc DRIVERS
    //
    // PCCARD Socket feture structure
    //
    // Socket Service Handle is created when a card inserted into socket. With static socket number that assigned by Card Service,
    // it formed a unique access ID.
    //
#define IRQ_ROUTINGTABLE_SIZE 16 
    typedef struct _SS_SOCKET_INFO
    {
        DWORD   dwSocketCaps;               // Socket Capablity. Bitmaps of Follows.
#define SOCK_CAP_MEM_CARD       0x1
#define SOCK_CAP_IO_MEMORY_CARD 0x2
#define SOCK_CAP_SUPPORT_CARDBUS_CARD   0x4
#define SOCK_CAP_WAKEUP_BYCLIENT 0x8
#define SOCK_CAP_WAKEUP_BYEVENT 0x10
#define SOCK_CAP_FIXED_FUNC_IRQ 0x40
#define SOCK_CAP_KEEP_POWERED   0x80    // Keep PCMCIA bus powered while the system
#define SOCK_CAP_ONLY_SYSINTR   0x8000  // It indicate Socket only support SysIntr and bArrayIrqRouting gives SysIntr Value.
        DWORD   dwSocketIntrCaps;           // Socket Interrupt Capability Set follow bitmap.
        DWORD   dwSocketRptCaps;            // Socket status report capability
        DWORD   dwSocketIndCaps;            // Socket status indicate capability
#define SOCK_CAP_WP             0x1     // Write Protection 
#define SOCK_CAP_LOCKED         0x2     // Externally gernerated indicating the state of a mechanical or electrical card lock mechanism
#define SOCK_CAP_EJECT          0x4     // Externally gernrated indicating a request to eject a PC Card from the socket has been made
#define SOCK_CAP_INSERT         0x8     // Externally gernerated indicating a request to insert a PC Card from the socket has been made
#define SOCK_CAP_BVD1           0x10    // PC Card BVD1. When set, this indicates the battery is no longer servieable.
#define SOCK_CAP_BVD2           0x20    // PC Card BVD2 When Set this indicates the battery is weak.
#define SOCK_CAP_READY          0x40    // PC Card Ready sigal (or Function Interrupt).
#define SOCK_CAP_CD             0x80    // PC Card Detection, when set it is inserted completed otherwise it removed.
#define SOCK_CAP_PWRCYCLE       0x100   // PC Card IPower Cycle.
#define SOCK_CAP_CARDBUS_CARD   0x4000  // Card Bus Card inserted this is only for state..
#define SOCK_CAP_SUSPEND_RESUME 0x8000  // PC Suspend/Resume capable.
        DWORD   dwNumOfPowerEntry;          // Number of power entry this socket have.
        DWORD   dwNumOfWindows;             // Number of Window supported in this Socket.
        DWORD   dwBusType;                  // Bus Type of this device connected.
        DWORD   dwBusNumber;                // Bus number for this socket if this is Card Bus Card.
        BYTE    bArrayIrqRouting[IRQ_ROUTINGTABLE_SIZE]; // PCCARD Logical to Platform Physical IRQ or SysIntr Mapping.
    } SS_SOCKET_INFO, * PSS_SOCKET_INFO;


    //    STATUS (*SSInquireSocketInfo)(HANDLE hSocket, PSS_SOCKET_INFO pSocketInfo);
    //

    //**********************************************************************
    // Power entries
    //**********************************************************************

    //
    // PDCARD_POWER_ENTRY.fSupply
    //
#define PWR_SUPPLY_VPP2  0x20    // power entry describes Vpp2
#define PWR_SUPPLY_VPP1  0x40    // power entry describes Vpp1
#define PWR_SUPPLY_VCC   0x80    // power entry describes Vcc

    //
    // @struct PDCARD_POWER_ENTRY | Structure used to indicate the voltage levels that
    //                              a socket controller can produce.
    //
    typedef struct _SS_POWER_ENTRY
    {
        UINT8   uPowerLevel;          // @field Voltage in 0.1 volt increments
        UINT8   fSupply;              // @field Bit field indicating the voltage source (Vcc, Vpp1 or Vpp2)
    } SS_POWER_ENTRY, * PSS_POWER_ENTRY;
    //
    //    STATUS (*SSGetSocketPowerEnry)(HANDLE hSocket, PDWORD pdwNumofEntry, PSS_POWER_ENTRY pPowerEntry);


    //**********************************************************************
    // memory and I/O window information
    //**********************************************************************

    //
    // PDCARD_WINDOW_INFO.fWindowCaps
    //
#define WIN_CAP_COMMON    0x01 // common memory can be mapped into host space
#define WIN_CAP_ATTRIBUTE 0x02 // attribute memory can be mapped
#define WIN_CAP_IO        0x04 // I/O ports can be mapped into host I/O space
#define WIN_CAP_WAIT      0x80 // WAIT signal can extend access cycle

    //
    // PDCARD_WINDOW_INFO.fMemoryCaps
    //
#define MEM_CAP_PRG_BASE   0x0001    // programmable base address
#define MEM_CAP_PRG_SIZE   0x0002    // programmable base window size
#define MEM_CAP_ENABLE_WIN 0x0004    // Enable/disable window
#define MEM_CAP_8BIT       0x0008    // 8 bit data bus supported
#define MEM_CAP_16BIT      0x0010    // 16 bit data bus supported
#define MEM_CAP_BASE_ALIGN 0x0020    // base must align with multiple of size
#define MEM_CAP_OFF_ALIGN  0x0080    // card offset must align on size boundary
#define MEM_CAP_PAGING_HW  0x0100    // Paging hardware available
#define MEM_CAP_PAGING_SH  0x0200    // Paging hardware shared
#define MEM_CAP_PAGING_EN  0x0400    // Enable/disable paging
#define MEM_CAP_WRITE_PROT 0x0800    // window write protect supported

    //
    // PDCARD_WINDOW_INFO.fIOCaps
    //
#define IO_CAP_PRG_BASE   MEM_CAP_PRG_BASE
#define IO_CAP_PRG_SIZE   MEM_CAP_PRG_SIZE
#define IO_CAP_ENABLE_WIN MEM_CAP_ENABLE_WIN
#define IO_CAP_8BIT       MEM_CAP_8BIT
#define IO_CAP_16BIT      MEM_CAP_16BIT
#define IO_CAP_BASE_ALIGN MEM_CAP_BASE_ALIGN
#define IO_CAP_INPACK     0x0080    // INPACK# supported

    //
    // @struct PDCARD_WINDOW_INFO | Structure used by <f PDCardInquireWindow> to report 
    //          a memory or I/O window's characteristics and capabilities.
    //
    typedef struct _SS_WINDOW_INFO
    {
        HANDLE  hSocket;        // @ handle of socket
        UINT16  fWindowCaps;     // @field Bit encoded window capabilities
        UINT16  fMemoryCaps;     // @field Bit encoded memory window capabilities
        UINT16  fIOCaps;         // @field Bit encoded I/O window capabilities  
        UINT16  Reserved;   
        UINT32  uMemFirstByte;   // @field Physical address of first addressable byte
        UINT32  uMemLastByte;    // @field Physical address of last addressable byte
        UINT32  uMemMinSize;     // @field Minimum size of window
        UINT32  uMemMaxSize;     // @field Maximum size of window
        UINT32  uMemGranularity; // @field Required window granularity
        UINT32  uMemBase;        // @field Required window base address alignment 
        UINT32  uMemOffset;      // @field Required card offset alignment
        UINT32  uIOFirstByte;    // @field Physical address of first addressable byte
        UINT32  uIOLastByte;     // @field Physical address of last addressable byte
        UINT32  uIOMinSize;      // @field Minimum size of window
        UINT32  uIOMaxSize;      // @field Maximum size of window
        UINT32  uIOGranularity;  // @field Required window granularity
        UINT8   uAddressLines;   // @field Number of I/O lines decoded
        UINT8   fSlowest;        // @field Bit encoded slowest access speed
        UINT8   fFastest;        // @field Bit encoded fastest access speed
        UINT8   Reserved2;
    } SS_WINDOW_INFO, * PSS_WINDOW_INFO;

    //    STATUS (*SSCardInquireWindow)(UINT32 uWindow, PPDCARD_WINDOW_INFO pWindowInfo);

    //
    // PDCARD_WINDOW_STATE.fState
    //
#define WIN_STATE_MAPS_IO    0x01    // 1 = I/O, 0 = memory
#define WIN_STATE_ENABLED    0x02
#define WIN_STATE_16BIT      0x04
#define WIN_STATE_SHARED_IO  0x08
#define WIN_STATE_ATTRIBUTE  0x80    // memory window accesses attribute space
#define WIN_STATE_READONLY   0x40    // This windows is write protected.
#define WIN_STATE_SH4_AREA6  0x8000  // SH4 only flags, does not used anywhere else.
    //
    // @struct PDCARD_WINDOW_STATE | Structure used by <f PDCardGetWindow> and
    //      <f PDCardSetWindow> to report or change a memory or I/O window's state.
    //
    typedef struct _SS_WINDOW_STATE
    {
        HANDLE  hSocket;     // @field Socket handle which this window is mappped
        UINT16  fState;      // @field Bit encoded window state
        UINT8   fSpeed;      // @field Bit encoded access speed
        UINT8   Reserved;
        UINT32  uSize;       // @field Size of window
        UINT32  uBase;       // @field Physical address of beginning of window
        UINT32  uOffset;     // @field Offset in PC card memory
    } SS_WINDOW_STATE, * PSS_WINDOW_STATE;

    //    STATUS (*PDCardGetWindow)(UINT32 uWindow, PPDCARD_WINDOW_STATE pWindowState);
    //    STATUS (*PDCardSetWindow)(UINT32 uWindow, PPDCARD_WINDOW_STATE pWindowState);
    // (PSS_WINDOW_INFO.fSlowest)
    // (PSS_WINDOW_INFO.fFastest)
    // (PSS_WINDOW_STATE.fSpeed)
    //
#define WIN_SPEED_EXP_MASK  0x07    // Exponent mask
#define WIN_SPEED_EXP_1NS   0x00    // 1 nanosecond
#define WIN_SPEED_EXP_10NS  0x01
#define WIN_SPEED_EXP_100NS 0x02
#define WIN_SPEED_EXP_1US   0x03    // 1 microsecond
#define WIN_SPEED_EXP_10US  0x04
#define WIN_SPEED_EXP_100US 0x05
#define WIN_SPEED_EXP_1MS   0x06    // 1 millisecond
#define WIN_SPEED_EXP_10MS  0x07

#define WIN_SPEED_MANT_MASK 0x78    // Mantissa mask
#define WIN_SPEED_MANT_10   0x08    // 1.0
#define WIN_SPEED_MANT_12   0x10    // 1.2
#define WIN_SPEED_MANT_13   0x18    // 1.3
#define WIN_SPEED_MANT_15   0x20    // 1.5
#define WIN_SPEED_MANT_20   0x28    // 2.0
#define WIN_SPEED_MANT_25   0x30    // 2.5
#define WIN_SPEED_MANT_30   0x38    // 3.0
#define WIN_SPEED_MANT_35   0x40    // 3.5
#define WIN_SPEED_MANT_40   0x48    // 4.0
#define WIN_SPEED_MANT_45   0x50    // 4.5
#define WIN_SPEED_MANT_50   0x58    // 5.0
#define WIN_SPEED_MANT_55   0x60    // 5.5
#define WIN_SPEED_MANT_60   0x68    // 6.0
#define WIN_SPEED_MANT_70   0x70    // 7.0
#define WIN_SPEED_MANT_80   0x78    // 8.0

#define WIN_SPEED_USE_WAIT  0x80    // Use wait if available


    //**********************************************************************
    // Socket information
    //**********************************************************************

    //
    // @struct PDCARD_SOCKET_STATE | Structure used by <f PDCardGetSocket> and
    //      <f PDCardSetSocket> to retrieve or change the specified socket's characteristics.
    //
    typedef struct _SS_SOCKET_STATE
    {
        DWORD   dwEventMask;        // Indicate which PCARD event will gerenrate callback function. same definition of SS_SOCKET_INFO.dwSocketIntrCaps
        DWORD   dwEventChanged;     // Indicate which PCCARD event has happened. same definition of SS_SOCKET_INFO.dwSocketIntrCaps
        DWORD   dwEventStatus;      // Current Event Status of the Card. same definition of SS_SOCKET_INFO.dwSocketIntrCaps
        // If it is set. It will serve as set indicator.
#define SOCK_EVENT_WP       SOCK_CAP_WP             
#define SOCK_EVENT_LOCKED   SOCK_CAP_LOCKED   
#define SOCK_EVENT_EJECT    SOCK_CAP_EJECT     
#define SOCK_EVENT_INSERT   SOCK_CAP_INSERT   
#define SOCK_EVENT_BVD1     SOCK_CAP_BVD1       
#define SOCK_EVENT_BVD2     SOCK_CAP_BVD2       
#define SOCK_EVENT_READY    SOCK_CAP_READY     
#define SOCK_EVENT_CD       SOCK_CAP_CD           
#define SOCK_EVENT_PWRCYCLE SOCK_CAP_PWRCYCLE
#define SOCK_EVENT_CARDBUS_CARD     SOCK_CAP_CARDBUS_CARD
#define SOCK_EVENT_SUSPEND_RESUME   SOCK_CAP_SUSPEND_RESUME

        DWORD   dwInterfaceType;    // @field Memory-only or memory and I/O
#define CFG_IFACE_MEMORY    0x0001  // Put socket controller in memory only interface mode
#define CFG_IFACE_MEMORY_IO 0x0002  // Put socket controller in memory and I/O interface mode
#define CFG_IFACE_CARDBUS   0x0004  // CardBus Card Socket. 
        DWORD   dwInteruptStatus;
#define SOCK_INT_FUNC_IRQ_ROUTING   0x800000  // Enable Client Card Interrupt.
#define SOCK_INT_FUNC_IRQ_WAKE      0x400000  // Enable Client Interrupt Wakeup.
#define SOCK_INT_STATUS_CHG_WAKE    0x200000  // Enable Pccard status change wakeup.

        UINT8   fIREQRouting;         //  IrqRouting Info, if SOCK_CAP_FUNC_IRQ_ROUTING is set.
        UINT8   fVcc;                 // @field Vcc power entry index and status
        UINT8   uVpp1;                // @field Vpp1 power entry index
        UINT8   uVpp2;                // @field Vpp2 power entry index
    } SS_SOCKET_STATE, * PSS_SOCKET_STATE;
    //
    // for fVcc,uVpp1,uVpp2 mask.
#define SOCK_VCC_LEVEL_MASK    0x0F    // Mask for power entry index

    //
    // Memory access struct
    //
    typedef struct _SS_MEMORY_ACCESS
    {
        LPVOID  pCardMem;            // @field pointer into memory space
        DWORD   uOffset;             // @field offset into memory space
        DWORD   dwData;              // @field data to be written or result of read
        DWORD   fFlags;              // @field memory access type
    } SS_MEMORY_ACCESS, * PSS_MEMORY_ACCESS;

    typedef struct _SS_SOCKET_SERVICE
    {
        DWORD   dwVersion;  // Version of this structure.
        STATUS ( *SS_InquireSocket )( HANDLE hSocket,
                                      PSS_SOCKET_INFO pSocketInfo );
        STATUS ( *SS_GetSocket )( HANDLE hSocket,
                                  PSS_SOCKET_STATE pSocketState );
        STATUS ( *SS_SetSocket )( HANDLE hSocket,
                                  PSS_SOCKET_STATE pSocketState );
        STATUS ( *SS_ResetSocket )( HANDLE hSocket );

        STATUS ( *SS_InquireWindow )( UINT32 uWindow,
                                      PSS_WINDOW_INFO pWindowInfo );
        STATUS ( *SS_GetWindow )( UINT32 uWindow,
                                  PSS_WINDOW_STATE pWindowState );
        STATUS ( *SS_SetWindow )( UINT32 uWindow,
                                  PSS_WINDOW_STATE pWindowState );
        STATUS ( *SS_AccessMemory )( HANDLE hSocket,
                                     PSS_MEMORY_ACCESS pMemoryAccess );

        STATUS ( *SS_GetPowerEntry )( HANDLE hSocket,
                                      PDWORD pdwNumOfEnery,
                                      PSS_POWER_ENTRY pPowerEntry );

        STATUS ( *SS_TranslateBusAddr )( HANDLE hSocket,
                                         INTERFACE_TYPE  InterfaceType,
                                         ULONG BusNumber,
                                         PHYSICAL_ADDRESS BusAddress,
                                         PULONG AddressSpace,
                                         PPHYSICAL_ADDRESS TranslatedAddress );
        STATUS ( *SS_TranslateSystemAddr )( HANDLE hSocket,
                                            INTERFACE_TYPE  InterfaceType,
                                            ULONG BusNumber,
                                            PHYSICAL_ADDRESS SystemAddress,
                                            PPHYSICAL_ADDRESS TranslatedAddress );
    } SS_SOCKET_SERVICE, * PSS_SOCKET_SERVICE;

    // Function interface between PDD and MDD(PCCardService).
#define PCCARDSERVICE_KEY TEXT("PCCARDDLL") // Registry Key that point to CPCCard Service.
#define PCCARDHARDWARE_NAME_KEY TEXT("PCCARDNAME") 
    // Socket callback to PCCardService
#define CS_CALLBAKC_NAME TEXT("CS_SocketCallback")
    typedef void ( *PF_SS_CALLBACK )( HANDLE hSocket,
                                      UINT16 uSocket,
                                      PSS_SOCKET_STATE pSocketState ) ; 
    // Socket to Get or Release Socket Index Number that assinged by CPCCard.
#define CS_ADD_SOCKET TEXT("CS_AddSocket")
    typedef STATUS ( *PF_CS_ADD_SOCKET )( PUINT16 puSocket,
                                          DWORD dwSize,
                                          const SS_SOCKET_SERVICE* pSocketService,
                                          LPCTSTR lpcHardwareName ); 
#define CS_DELETE_SOCKET TEXT("CS_DeleteSocket")
    typedef STATUS ( *PF_CS_DELETE_SOCKET )( UINT16 uSocket );

    //
    //
    // @type STATUS | Set of return codes used by Socket Services
    //
#define CERR_SUCCESS              0x00
#define CERR_BAD_ADAPTER          0x01
#define CERR_BAD_ATTRIBUTE        0x02
#define CERR_BAD_BASE             0x03
#define CERR_BAD_EDC              0x04
#define CERR_BAD_IRQ              0x06
#define CERR_BAD_OFFSET           0x07
#define CERR_BAD_PAGE             0x08
#define CERR_READ_FAILURE         0x09
#define CERR_BAD_SIZE             0x0A
#define CERR_BAD_SOCKET           0x0B
#define CERR_BAD_TYPE             0x0D
#define CERR_BAD_VCC              0x0E
#define CERR_BAD_VPP              0x0F
#define CERR_BAD_WINDOW           0x11
#define CERR_WRITE_FAILURE        0x12
#define CERR_NO_CARD              0x14
#define CERR_UNSUPPORTED_SERVICE  0x15
#define CERR_UNSUPPORTED_MODE     0x16
#define CERR_BAD_SPEED            0x17
#define CERR_BUSY                 0x18
#define CERR_GENERAL_FAILURE      0x19
#define CERR_WRITE_PROTECTED      0x1A
#define CERR_BAD_ARG_LENGTH       0x1B
#define CERR_BAD_ARGS             0x1C
#define CERR_CONFIGURATION_LOCKED 0x1D
#define CERR_IN_USE               0x1E
#define CERR_NO_MORE_ITEMS        0x1F
#define CERR_OUT_OF_RESOURCE      0x20
#define CERR_BAD_HANDLE           0x21
#define CERR_BAD_VERSION          0x22

    //
    // PCMCIA memory access functions
    //
    // Standard PCMCIA controllers provide several memory windows to access the
    // the different areas of card memory.  Individual windows can access common
    // or attribute memory and the controller asserts the correct signals when a
    // particular window is used.
    // On some platforms, software must toggle all the PCMCIA signals, hence access
    // must be controlled via an API which can properly serialize conflicting
    // accesses.
    //
    //UINT8 PDCardReadAttrByte (PVOID pCardMem, UINT32 uOffset);
    //UINT8 PDCardReadCmnByte  (PVOID pCardMem, UINT32 uOffset);
    //UINT8 PDCardReadIOByte   (PVOID pCardMem, UINT32 uOffset);
    //VOID  PDCardWriteAttrByte(PVOID pCardMem, UINT32 uOffset, UINT8 uByte);
    //VOID  PDCardWriteCmnByte (PVOID pCardMem, UINT32 uOffset, UINT8 uByte);
    //VOID  PDCardWriteIOByte  (PVOID pCardMem, UINT32 uOffset, UINT8 uByte);

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\wm7\sfone7\Include\specstrings.h ===
//
// Copyright (c) Microsoft Corporation.  All rights reserved.
//
//
// Use of this sample source code is subject to the terms of the Microsoft
// license agreement under which you licensed this sample source code. If
// you did not accept the terms of the license agreement, you are not
// authorized to use this sample source code. For the terms of the license,
// please see the license agreement between you and Microsoft or, if applicable,
// see the LICENSE.RTF on your install media or the root of your tools installation.
// THE SAMPLE SOURCE CODE IS PROVIDED "AS IS", WITH NO WARRANTIES OR INDEMNITIES.
//
#ifndef SPECSTRINGS_H
#define SPECSTRINGS_H
/*************************************************************************
* See specstrings_strict.h for documentation of all user visible macros.
*************************************************************************/
#if _MSC_VER
#pragma once
#endif
#include <sal.h>  

#ifndef __SAL_H_FULL_VER
#define __SAL_H_FULL_VER 140050727
#endif

#ifdef  __cplusplus
extern "C" {
#endif 

/* version specific fixes to bring sal.h upto date */
#if __SAL_H_FULL_VER <= 140050727

/* Missing from RTM sal.h */
#if !defined(__midl) && defined(_PREFAST_) && _MSC_VER >= 1000

#define __inexpressible_readableTo(size)  __declspec("SAL_readableTo(inexpressibleCount('" SPECSTRINGIZE(size) "'))")
#define __inexpressible_writableTo(size)  __declspec("SAL_writableTo(inexpressibleCount('" SPECSTRINGIZE(size) "'))")
#define __inner_bound                     __declspec("SAL_bound")
#define __inner_range(lb,ub)              __declspec("SAL_range(" SPECSTRINGIZE(lb) "," SPECSTRINGIZE(ub) ")")
#define __inner_assume_bound_dec          __inline __nothrow void __AssumeBoundInt(__post __inner_bound int i) {i;}
#define __inner_assume_bound(i)           __AssumeBoundInt(i);
#define __inner_allocator                 __declspec("SAL_allocator")
#else 
#define __inexpressible_readableTo(size)
#define __inexpressible_writableTo(size)
#define __inner_bound
#define __inner_range(lb,ub)
#define __inner_assume_bound_dec
#define __inner_assume_bound(i)
#define __inner_allocator
#endif

#define __xcount(size)                                          __notnull __inexpressible_writableTo(size)
#define __in_xcount(size)                                       __in __pre __inexpressible_readableTo(size)
#define __out_xcount(size)                                      __xcount(size) __post __valid __refparam
#define __out_xcount_part(size,length)                          __out_xcount(size) __post __inexpressible_readableTo(length)
#define __out_xcount_full(size)                                 __out_xcount_part(size,size)
#define __inout_xcount(size)                                    __out_xcount(size) __pre __valid
#define __inout_xcount_part(size,length)                        __out_xcount_part(size,length) __pre __valid __pre __inexpressible_readableTo(length)
#define __inout_xcount_full(size)                               __inout_xcount_part(size,size)
#define __xcount_opt(size)                                      __xcount(size)                              __exceptthat __maybenull
#define __in_xcount_opt(size)                                   __in_xcount(size)                           __exceptthat __maybenull
#define __out_xcount_opt(size)                                  __out_xcount(size)                          __exceptthat __maybenull
#define __out_xcount_part_opt(size,length)                      __out_xcount_part(size,length)              __exceptthat __maybenull
#define __out_xcount_full_opt(size)                             __out_xcount_full(size)                     __exceptthat __maybenull
#define __inout_xcount_opt(size)                                __inout_xcount(size)                        __exceptthat __maybenull
#define __inout_xcount_part_opt(size,length)                    __inout_xcount_part(size,length)            __exceptthat __maybenull
#define __inout_xcount_full_opt(size)                           __inout_xcount_full(size)                   __exceptthat __maybenull
#define __deref_xcount(size)                                    __ecount(1) __post __elem_readableTo(1) __post __deref __notnull __post __deref __inexpressible_writableTo(size)
#define __deref_in                                              __in __pre __deref __deref __readonly
#define __deref_in_ecount(size)                                 __deref_in __pre __deref __elem_readableTo(size)
#define __deref_in_bcount(size)                                 __deref_in __pre __deref __byte_readableTo(size)
#define __deref_in_xcount(size)                                 __deref_in __pre __deref __inexpressible_readableTo(size)
#define __deref_out_xcount(size)                                __deref_xcount(size) __post __deref __valid __refparam
#define __deref_out_xcount_part(size,length)                    __deref_out_xcount(size) __post __deref __inexpressible_readableTo(length)
#define __deref_out_xcount_full(size)                           __deref_out_xcount_part(size,size)
#define __deref_out_xcount(size)                                __deref_xcount(size) __post __deref __valid __refparam
#define __inout_xcount_opt(size)                                __inout_xcount(size)                        __exceptthat __maybenull
#define __inout_xcount_part_opt(size,length)                    __inout_xcount_part(size,length)            __exceptthat __maybenull
#define __inout_xcount_full_opt(size)                           __inout_xcount_full(size)                   __exceptthat __maybenull
#define __deref_xcount(size)                                    __ecount(1) __post __elem_readableTo(1) __post __deref __notnull __post __deref __inexpressible_writableTo(size)
#define __deref_in                                              __in __pre __deref __deref __readonly
#define __deref_in_ecount(size)                                 __deref_in __pre __deref __elem_readableTo(size)
#define __deref_in_bcount(size)                                 __deref_in __pre __deref __byte_readableTo(size)
#define __deref_in_xcount(size)                                 __deref_in __pre __deref __inexpressible_readableTo(size)
#define __deref_out_xcount(size)                                __deref_xcount(size) __post __deref __valid __refparam
#define __deref_out_xcount_part(size,length)                    __deref_out_xcount(size) __post __deref __inexpressible_readableTo(length)
#define __deref_out_xcount_full(size)                           __deref_out_xcount_part(size,size)
#define __deref_out_xcount(size)                                __deref_xcount(size) __post __deref __valid __refparam
#define __deref_inout_xcount(size)                              __deref_inout __pre __deref __inexpressible_writableTo(size) __post __deref __inexpressible_writableTo(size)
#define __deref_inout_xcount_part(size,length)                  __deref_inout_xcount(size) __pre __deref __inexpressible_readableTo(length) __post __deref __inexpressible_readableTo(length)
#define __deref_inout_xcount_full(size)                         __deref_inout_xcount_part(size,size)
#define __deref_xcount_opt(size)                                __deref_xcount(size)                        __post __deref __exceptthat __maybenull
#define __deref_in_opt                                          __deref_in                                  __pre __deref __exceptthat __maybenull
#define __deref_in_ecount_opt(size)                             __deref_in_ecount(size)                     __pre __deref __exceptthat __maybenull
#define __deref_in_bcount_opt(size)                             __deref_in_bcount(size)                     __pre __deref __exceptthat __maybenull
#define __deref_in_xcount_opt(size)                             __deref_in_xcount(size)                     __pre __deref __exceptthat __maybenull
#define __deref_out_xcount_opt(size)                            __deref_out_xcount(size)                    __post __deref __exceptthat __maybenull
#define __deref_out_xcount_part_opt(size,length)                __deref_out_xcount_part(size,length)        __post __deref __exceptthat __maybenull
#define __deref_out_xcount_full_opt(size)                       __deref_out_xcount_full(size)               __post __deref __exceptthat __maybenull
#define __deref_inout_xcount_opt(size)                          __deref_inout_xcount(size)                  __pre __deref __exceptthat __maybenull __post __deref __exceptthat __maybenull
#define __deref_inout_xcount_part_opt(size,length)              __deref_inout_xcount_part(size,length)      __pre __deref __exceptthat __maybenull __post __deref __exceptthat __maybenull
#define __deref_inout_xcount_full_opt(size)                     __deref_inout_xcount_full(size)             __pre __deref __exceptthat __maybenull __post __deref __exceptthat __maybenull
#define __deref_opt_xcount(size)                                __deref_xcount(size)                        __exceptthat __maybenull
#define __deref_opt_in                                          __deref_in                                  __exceptthat __maybenull
#define __deref_opt_in_ecount(size)                             __deref_in_ecount(size)                     __exceptthat __maybenull
#define __deref_opt_in_bcount(size)                             __deref_in_bcount(size)                     __exceptthat __maybenull
#define __deref_opt_in_xcount(size)                             __deref_in_xcount(size)                     __exceptthat __maybenull
#define __deref_opt_out_xcount(size)                            __deref_out_xcount(size)                    __exceptthat __maybenull
#define __deref_opt_out_xcount_part(size,length)                __deref_out_xcount_part(size,length)        __exceptthat __maybenull
#define __deref_opt_out_xcount_full(size)                       __deref_out_xcount_full(size)               __exceptthat __maybenull
#define __deref_opt_inout_xcount(size)                          __deref_inout_xcount(size)                  __exceptthat __maybenull
#define __deref_opt_inout_xcount_part(size,length)              __deref_inout_xcount_part(size,length)      __exceptthat __maybenull
#define __deref_opt_inout_xcount_full(size)                     __deref_inout_xcount_full(size)             __exceptthat __maybenull
#define __deref_opt_xcount_opt(size)                            __deref_xcount_opt(size)                    __exceptthat __maybenull
#define __deref_opt_in_opt                                      __deref_in_opt                              __exceptthat __maybenull
#define __deref_opt_in_ecount_opt(size)                         __deref_in_ecount_opt(size)                 __exceptthat __maybenull
#define __deref_opt_in_bcount_opt(size)                         __deref_in_bcount_opt(size)                 __exceptthat __maybenull
#define __deref_opt_in_xcount_opt(size)                         __deref_in_xcount_opt(size)                 __exceptthat __maybenull
#define __deref_opt_out_xcount_opt(size)                        __deref_out_xcount_opt(size)                __exceptthat __maybenull
#define __deref_opt_out_xcount_part_opt(size,length)            __deref_out_xcount_part_opt(size,length)    __exceptthat __maybenull
#define __deref_opt_out_xcount_full_opt(size)                   __deref_out_xcount_full_opt(size)           __exceptthat __maybenull
#define __deref_opt_inout_xcount_opt(size)                      __deref_inout_xcount_opt(size)              __exceptthat __maybenull
#define __deref_opt_inout_xcount_part_opt(size,length)          __deref_inout_xcount_part_opt(size,length)  __exceptthat __maybenull
#define __deref_opt_inout_xcount_full_opt(size)                 __deref_inout_xcount_full_opt(size)         __exceptthat __maybenull
/* Must protect redfinitions of macros to workaround rc.exe issues. */
#ifndef RC_INVOKED
#undef __nullnullterminated
#define __nullnullterminated __xcount("string terminated by two nulls")
#undef __checkReturn
#define __checkReturn __post __inner_checkReturn
#endif
#endif  //__SAL_H_FULL_VER <= 140050727

/************************************************************************
 New extensions to sal.h follow here.
*************************************************************************/

#if (_MSC_VER >= 1000) && !defined(__midl) && defined(_PREFAST_)
#define __file_parser(typ)                  __declspec("SAL_file_parser(function, " #typ ")")    
#define __file_parser_class(typ)            __declspec("SAL_file_parser(class, " #typ ")")
#define __file_parser_library(typ)          extern int __declspec("SAL_file_parser(library, " #typ ")") __iSALFileParserLibrary##typ;
#define __source_code_content(typ)          extern int __declspec("SAL_source_code_content(" #typ ")") __iSAL_Source_Code_Content##typ;
#define __class_code_content(typ)           __declspec("SAL_class_code_content(" #typ ")")
#define __analysis_assert(e)                __assume(e)
#define __analysis_hint(hint)               __declspec("SAL_analysisHint(" #hint ")")   
/* Internal defintions */
#define __inner_data_source(src_raw)        __declspec("SAL_untrusted_data_source(" src_raw ")")
#define __inner_this_data_source(src_raw)   __declspec("SAL_untrusted_data_source_this(" src_raw ")")
#define __inner_out_validated(typ_raw)      __declspec("SAL_post") __declspec("SAL_validated(" typ_raw ")") 
#define __inner_this_out_validated(typ_raw) __declspec("SAL_validated_this(" typ_raw ")") 
#define __inner_assume_validated_dec        __inline __nothrow void __AssumeValidated(__inner_out_validated("BY_DESIGN") const void *p) {p;}
#define __inner_assume_validated(p)         __AssumeValidated(p)
#define __inner_transfer(formal)            __declspec("SAL_transfer_adt_property_from(" SPECSTRINGIZE(formal) ")")
#define __inner_encoded                     __declspec("SAL_encoded")

#define __$adt_prop(adt,prop)               __declspec("SAL_adt("#adt","#prop")")
#define __$adt_add_prop(adt,prop)           __declspec("SAL_add_adt_property("#adt","#prop")")
#define __$adt_remove_prop(adt,prop)        __declspec("SAL_remove_adt_property("#adt","#prop")")
#define __$adt_transfer_prop(arg)           __declspec("SAL_transfer_adt_property_from("#arg")")
#define __$adt_type_props(typ)              __declspec("SAL_post_type("#typ")")
#define __$volatile                         __declspec("SAL_volatile")
#define __$nonvolatile                      __declspec("SAL_nonvolatile")
#define __$possibly_notnulltermiated        __declspec("SAL_RequiresZeroTermination(sometimes)")
#else
#define __file_parser(typ)
#define __file_parser_class(typ)
#define __file_parser_library(typ)
#define __source_code_content(typ)
#define __class_code_content(typ)
#define __analysis_assert(e)
#define __analysis_hint(hint)
/* Internal defintions */
#define __inner_data_source(src_raw)
#define __inner_this_data_source(src_raw)
#define __inner_out_validated(typ_raw)
#define __inner_this_out_validated(typ_raw)
#define __inner_assume_validated_dec
#define __inner_assume_validated(p)
#define __inner_transfer(formal)
#define __inner_encoded
#define __$adt_prop(adt,prop)   
#define __$adt_add_prop(adt,prop)   
#define __$adt_remove_prop(adt,prop)   
#define __$adt_transfer_prop(arg)   
#define __$adt_type_props(typ)   
#define __$volatile 
#define __$nonvolatile 
#define __$possibly_notnulltermiated 
#endif // #if (_MSC_VER >= 1000) && !defined(__midl) && defined(_PREFAST_)

#define __field_ecount(size)                __notnull __elem_writableTo(size)
#define __field_bcount(size)                __notnull __byte_writableTo(size)
#define __field_xcount(size)                __notnull __inexpressible_writableTo(size)

#define __field_ecount_opt(size)            __maybenull __elem_writableTo(size)
#define __field_bcount_opt(size)            __maybenull __byte_writableTo(size)
#define __field_xcount_opt(size)            __maybenull __inexpressible_writableTo(size)

#define __field_ecount_part(size,init)      __notnull __elem_writableTo(size) __elem_readableTo(init)
#define __field_bcount_part(size,init)      __notnull __byte_writableTo(size) __byte_readableTo(init)
#define __field_xcount_part(size,init)      __notnull __inexpressible_writableTo(size) __inexpressible_readableTo(init)

#define __field_ecount_part_opt(size,init)  __maybenull __elem_writableTo(size) __elem_readableTo(init)
#define __field_bcount_part_opt(size,init)  __maybenull __byte_writableTo(size) __byte_readableTo(init)
#define __field_xcount_part_opt(size,init)  __maybenull __inexpressible_writableTo(size) __inexpressible_readableTo(init)

#define __field_ecount_full(size)           __field_ecount_part(size,size)  
#define __field_bcount_full(size)           __field_bcount_part(size,size)  
#define __field_xcount_full(size)           __field_xcount_part(size,size)      

#define __field_ecount_full_opt(size)       __field_ecount_part_opt(size,size)  
#define __field_bcount_full_opt(size)       __field_bcount_part_opt(size,size)  
#define __field_xcount_full_opt(size)       __field_xcount_part_opt(size,size)      

#define __struct_bcount(size)               __field_bcount(size)
#define __struct_xcount(size)               __field_xcount(size)

#define __out_awcount(expr,size)            __pre __notnull \
                                            __byte_writableTo((expr) ? (size) : (size) * 2) \
                                            __post __valid __refparam
#define __in_awcount(expr,size)             __pre __valid \
                                            __pre __deref __readonly \
                                            __byte_readableTo((expr) ? (size) : (size) * 2)

/* integer related macros */
#define __allocator                         __inner_allocator
#define __bound                             __inner_bound
#define __range(lb,ub)                      __inner_range(lb,ub)
#define __in_bound                          __pre __inner_bound
#define __out_bound                         __post __inner_bound
#define __deref_out_bound                   __post __deref __inner_bound
#define __in_range(lb,ub)                   __pre __inner_range(lb,ub)
#define __out_range(lb,ub)                  __post __inner_range(lb,ub)
#define __deref_in_range(lb,ub)             __pre __deref __inner_range(lb,ub)
#define __deref_out_range(lb,ub)            __post __deref __inner_range(lb,ub)
#define __field_range(lb,ub)                __range(lb,ub)
#define __field_data_source(src_sym)        __inner_data_source(#src_sym)

/* Pentraion review macros */
#define __in_data_source(src_sym)           __pre __inner_data_source(#src_sym)
#define __out_data_source(src_sym)          __post __inner_data_source(#src_sym)
#define __out_validated(typ_sym)            __inner_out_validated(#typ_sym)
#define __this_out_data_source(src_sym)     __inner_this_data_source(#src_sym)
#define __this_out_validated(typ_sym)       __inner_this_out_validated(#typ_sym)
#define __transfer(formal)                  __post __inner_transfer(formal)
#define __rpc_entry                         __inner_control_entrypoint(RPC)
#define __kernel_entry                      __inner_control_entrypoint(UserToKernel)   
#define __gdi_entry                         __inner_control_entrypoint(GDI)
#define __encoded_pointer                   __inner_encoded
#define __encoded_array                     __inner_encoded
#define __field_encoded_pointer             __inner_encoded
#define __field_encoded_array               __inner_encoded
#define __type_has_adt_prop(adt,prop)       __$adt_prop(adt,prop)
#define __out_has_adt_prop(adt,prop)        __post __$adt_add_prop(adt,prop)
#define __out_not_has_adt_prop(adt,prop)    __post __$adt_remove_prop(adt,prop)
#define __out_transfer_adt_prop(arg)        __post __$adt_transfer_prop(arg)
#define __out_has_type_adt_props(typ)       __post __$adt_type_props(typ)

/* useful PFD related macros */
#define __possibly_notnulltermiated         __post __$possibly_notnulltermiated

/* Windows Internal */
#define __volatile                          __$volatile
#define __nonvolatile                       __$nonvolatile
#define __deref_volatile                    __deref __volatile
#define __deref_nonvolatile                 __deref __nonvolatile

/* declare stub functions for macros */
__inner_assume_validated_dec 
__inner_assume_bound_dec 

#define __assume_validated(p) __inner_assume_validated(p)
#define __assume_bound(i) __inner_assume_bound(i)

#ifdef  __cplusplus
}
#endif
#include <specstrings_adt.h>
#ifdef _PREFIX_
/**************************************************************************
* Defintion of __pfx_assume and __pfx_assert. Thse should be the only
* defintions of these functions.  
***************************************************************************/
#if __cplusplus
extern "C" void __pfx_assert(bool, const char *);
extern "C" void __pfx_assume(bool, const char *);
#else
void __pfx_assert(int, const char *);
void __pfx_assume(int, const char *);
#endif
/**************************************************************************
* Redefintion of __analysis_assume and __analysis_assert for PREFIX build
**************************************************************************/
#undef  __analysis_assume
#undef  __analysis_assert
#define __analysis_assume(e) (__pfx_assume(e,"pfx_assume"),__assume(e));
#define __analysis_assert(e) (__pfx_assert(e,"pfx_assert"),__assume(e));
#endif /* ifdef _PREFIX_ */

/**************************************************************************
* This include should always be the last thing in this file. 
* Must avoid redfinitions of macros to workaround rc.exe issues. 
***************************************************************************/
#if !(defined(RC_INVOKED) || defined(SORTPP_PASS))
#include <specstrings_strict.h>
#endif /* if !(defined(RC_INVOKED) || defined(SORTPP_PASS)) */
#endif /* #ifndef SPECSTRINGS_H */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\wm7\sfone7\Include\source.h ===
//
// Copyright (c) Microsoft Corporation.  All rights reserved.
//
//
// Use of this source code is subject to the terms of the Microsoft
// premium shared source license agreement under which you licensed
// this source code. If you did not accept the terms of the license
// agreement, you are not authorized to use this source code.
// For the terms of the license, please see the license agreement
// signed by you and Microsoft.
// THE SOURCE CODE IS PROVIDED "AS IS", WITH NO WARRANTIES OR INDEMNITIES.
//
//==========================================================================;
//
//  THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY
//  KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
//  IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR
//  PURPOSE.
//
//
//--------------------------------------------------------------------------;

// Classes to simplify creation of ActiveX source filters that support
// continuous generation of data. It provides no support for IMediaControl
// or IMediaPosition
//
// Derive your source filter from CSource.
// During construction either:
//    Create some CSourceStream objects to manage your pins
//    Provide the user with a means of doing so eg, an IPersistFile interface.
//
// CSource provides:
//    IBaseFilter interface management
//    IMediaFilter interface management, via CBaseFilter
//    Pin counting for CBaseFilter
//
// Derive a class from CSourceStream to manage your output pin types
//  Implement GetMediaType/1 to return the type you support. If you support multiple
//   types then overide GetMediaType/3, CheckMediaType and GetMediaTypeCount.
//  Implement Fillbuffer() to put data into one buffer.
//
// CSourceStream provides:
//    IPin management via CBaseOutputPin
//    Worker thread management

#ifndef __CSOURCE__
#define __CSOURCE__

class CSourceStream;  // The class that will handle each pin


//
// CSource
//
// Override construction to provide a means of creating
// CSourceStream derived objects - ie a way of creating pins.
class CSource : public CBaseFilter {
public:

    CSource(TCHAR *pName, LPUNKNOWN lpunk, CLSID clsid, HRESULT *phr);
    CSource(TCHAR *pName, LPUNKNOWN lpunk, CLSID clsid);
    ~CSource();

    int       GetPinCount(void);
    CBasePin *GetPin(int n);

    // -- Utilities --

    CCritSec*	pStateLock(void) { return &m_cStateLock; }	// provide our critical section

    HRESULT     AddPin(CSourceStream *);
    HRESULT     RemovePin(CSourceStream *);

    STDMETHODIMP FindPin(
        LPCWSTR Id,
        IPin ** ppPin
    );

    int FindPinNumber(IPin *iPin);
    
protected:

    int             m_iPins;       // The number of pins on this filter. Updated by CSourceStream
    	   			   // constructors & destructors.
    CSourceStream **m_paStreams;   // the pins on this filter.

    CCritSec m_cStateLock;	// Lock this to serialize function accesses to the filter state

};


//
// CSourceStream
//
// Use this class to manage a stream of data that comes from a
// pin.
// Uses a worker thread to put data on the pin.
class CSourceStream : public CAMThread, public CBaseOutputPin {
public:

    CSourceStream(TCHAR *pObjectName,
                  HRESULT *phr,
                  CSource *pms,
                  LPCWSTR pName);

    virtual ~CSourceStream(void);  // virtual destructor ensures derived class destructors are called too.

protected:

    CSource *m_pFilter;	// The parent of this stream

    // *
    // * Data Source
    // *
    // * The following three functions: FillBuffer, OnThreadCreate/Destroy, are
    // * called from within the ThreadProc. They are used in the creation of
    // * the media samples this pin will provide
    // *

    // Override this to provide the worker thread a means
    // of processing a buffer
    virtual HRESULT FillBuffer(IMediaSample *pSamp) PURE;

    // Called as the thread is created/destroyed - use to perform
    // jobs such as start/stop streaming mode
    // If OnThreadCreate returns an error the thread will exit.
    virtual HRESULT OnThreadCreate(void) {return NOERROR;};
    virtual HRESULT OnThreadDestroy(void) {return NOERROR;};
    virtual HRESULT OnThreadStartPlay(void) {return NOERROR;};

    // *
    // * Worker Thread
    // *

    HRESULT Active(void);    // Starts up the worker thread
    HRESULT Inactive(void);  // Exits the worker thread.

public:
    // thread commands
    enum Command {CMD_INIT, CMD_PAUSE, CMD_RUN, CMD_STOP, CMD_EXIT};
    HRESULT Init(void) { return CallWorker(CMD_INIT); }
    HRESULT Exit(void) { return CallWorker(CMD_EXIT); }
    HRESULT Run(void) { return CallWorker(CMD_RUN); }
    HRESULT Pause(void) { return CallWorker(CMD_PAUSE); }
    HRESULT Stop(void) { return CallWorker(CMD_STOP); }

protected:
    Command GetRequest(void) { return (Command) CAMThread::GetRequest(); }
    BOOL    CheckRequest(Command *pCom) { return CAMThread::CheckRequest( (DWORD *) pCom); }

    // override these if you want to add thread commands
    virtual DWORD ThreadProc(void);  		// the thread function

    virtual HRESULT DoBufferProcessingLoop(void);    // the loop executed whilst running


    // *
    // * AM_MEDIA_TYPE support
    // *

    // If you support more than one media type then override these 2 functions
    virtual HRESULT CheckMediaType(const CMediaType *pMediaType);
    virtual HRESULT GetMediaType(int iPosition, CMediaType *pMediaType);  // List pos. 0-n

    // If you support only one type then override this fn.
    // This will only be called by the default implementations
    // of CheckMediaType and GetMediaType(int, CMediaType*)
    // You must override this fn. or the above 2!
    virtual HRESULT GetMediaType(CMediaType *pMediaType) {return E_UNEXPECTED;}

    STDMETHODIMP QueryId(
        LPWSTR * Id
    );
};

#endif // __CSOURCE__
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\wm7\sfone7\Include\specstrings_adt.h ===
//
// Copyright (c) Microsoft Corporation.  All rights reserved.
//
//
// Use of this sample source code is subject to the terms of the Microsoft
// license agreement under which you licensed this sample source code. If
// you did not accept the terms of the license agreement, you are not
// authorized to use this sample source code. For the terms of the license,
// please see the license agreement between you and Microsoft or, if applicable,
// see the LICENSE.RTF on your install media or the root of your tools installation.
// THE SAMPLE SOURCE CODE IS PROVIDED "AS IS", WITH NO WARRANTIES OR INDEMNITIES.
//
#pragma once
/*************************************************************************
* DEFINITIONS OF NEW TYPES 
*************************************************************************/
#if !defined(__midl)
#define __$compname_props \
        __type_has_adt_prop(compname,nullterminated) \
        __type_has_adt_prop(compname,valid_schars) \
        __type_has_adt_prop(compname,correct_len) \
        __nullterminated
#if defined(UNICODE) || defined(_UNICODE)
#define  __$TCHAR unsigned short
#else
#define  __$TCHAR char
#endif
typedef __$compname_props char* ValidCompNameA;
typedef __$compname_props unsigned short* ValidCompNameW;
typedef __$compname_props const unsigned short* ConstValidCompNameW;
typedef __$compname_props  __$TCHAR* SAL_ValidCompNameT;
typedef __$compname_props const  __$TCHAR* SAL_ConstValidCompNameT;
#undef __$compname_props
#undef __$TCHAR
#endif

/*************************************************************************
* DEFINITIONS OF INLINE FUNCTIONS FOR CASTING TO THE NEW TYPES : USER
*************************************************************************/
#if (_MSC_VER >= 1000) && !defined(__midl) && defined(_PREFAST_)
#ifdef  __cplusplus
extern "C" {
#endif
void __inline __nothrow __SAL_ValidCompNameA(__out_has_type_adt_props(ValidCompNameA) const void *expr) { expr;}
void __inline __nothrow __SAL_ValidCompNameW(__out_has_type_adt_props(ValidCompNameW) const void *expr) { expr;}
#ifdef  __cplusplus
}
#endif
#define __assume_ValidCompNameA(expr) __SAL_ValidCompNameA(expr)
#define __assume_ValidCompNameW(expr) __SAL_ValidCompNameW(expr)
#else
#define __assume_ValidCompNameA(expr) 
#define __assume_ValidCompNameW(expr)
#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\wm7\sfone7\Include\soundfile.h ===
//
// Copyright (c) Microsoft Corporation.  All rights reserved.
//
//
// Use of this sample source code is subject to the terms of the Microsoft
// license agreement under which you licensed this sample source code. If
// you did not accept the terms of the license agreement, you are not
// authorized to use this sample source code. For the terms of the license,
// please see the license agreement between you and Microsoft or, if applicable,
// see the LICENSE.RTF on your install media or the root of your tools installation.
// THE SAMPLE SOURCE CODE IS PROVIDED "AS IS", WITH NO WARRANTIES OR INDEMNITIES.
//
//
// Copyright (c) Microsoft Corporation.  All rights reserved.
//

// **************************************************************************
//  APIs for dealing with system sounds
//
//  SndGetSoundDirectoriesList       Gets a list of available directories for
//                                   an indicated sound event and memory
//                                   location(s).
//  SndGetSoundFileList              Gets a list of sounds for an indicated 
//                                   event currently available.
//  SndSetSound                      Sets sound for an indicated event
//  SndGetSound                      Gets current sound for indicated event
// **************************************************************************

#ifndef _SOUNDFILE_H_
#define _SOUNDFILE_H_

#ifdef __cplusplus
extern "C" {            /* Assume C declarations for C++ */
#endif  /* __cplusplus */

/// <file_topic_scope tref="Sound_APIs"/>

/// <topic name="Sound_APIs" displayname="Sound APIs">
///   <topic_scope tref="Shell" />
///   <summary>
///       <para>
///         These are a basic set of APIs that allow ISV developers to programmatically
///         play event sounds or a file. The API set also allows querying for the current
///         sound profile.
///       </para>
///   </summary>
/// </topic>

/// <topic name="1_Overview" displayname="Overview">
///   <topic_scope tref="Sound_APIs" />
///   <summary>
///       <para>
///         These are a basic set of APIs that allow ISV developers to programmatically
///         play registered event sounds or a file respecting the current profile. 
///         The API set also allows querying for the current sound profile.
///         To implement any other complicated scenarios ISV developers can use <see cref="SndGetCurrentSoundProfile" />
///         together with IPlayAudio APIs.
///       </para>
///   </summary>
/// </topic>

/// <topic name="2_Terminology" displayname="Terminology">
///   <topic_scope tref="Sound_APIs" />
///     <summary>
///         <list type="table">
///             <listheader>
///                 <term>Name</term>
///                 <term>Meaning</term>
///             </listheader>
///             <item>
///                 <term>Event Sounds</term>
///                 <term> 
///                     These are sounds that are played on occurance of 
///                     some event, e.g When a reminder pops up, on an incoming call etc.
///                     Different event sounds respect profile settings differently.
///                 </term>
///              </item>
///              <item>
///                 <term>Profile</term>
///                 <term>A Profile is a collection of settings such as ring type, alert type,
///                       and volume. Each profile uses a different set of sounds, ring styles,
///                       earpiece volume settings, or vibrations for event sounds. For e.g
///                       Loud Profile volume is much louder than the Normal profile.
///                       Different profiles are
///                         <list type="bullet">
///                             <item>
///                                 <description>
///                                 Silent
///                                 </description>
///                             </item>
///                             <item>
///                                 <description>
///                                 Quiet
///                                 </description>
///                             </item>
///                             <item>
///                                 <description>
///                                 Normal
///                                 </description>
///                             </item>
///                             <item>
///                                 <description>
///                                 Loud
///                                 </description>
///                             </item>
///                             <item>
///                                 <description>
///                                 Vibrate
///                                 </description>
///                             </item>
///                             <item>
///                                 <description>
///                                 Quiet and Vibrate
///                                 </description>
///                             </item>
///                             <item>
///                                 <description>
///                                 Normal and Vibrate
///                                 </description>
///                             </item>
///                             <item>
///                                 <description>
///                                 Loud and Vibrate
///                                 </description>
///                             </item>
///                             <item>
///                                 <description>
///                                 Automatic
///                                 </description>
///                             </item>
///                         </list>
///                 </term>
///             </item>
///         </list>
///     </summary>
/// </topic>

/// <topic name="4_Registered Events" displayname="Registered Events">
///   <topic_scope tref="Sound_APIs" />
/// <summary>
/// <para>
/// #define SND_EVENTNAME_ASTERISK             L"SystemAsterisk"
/// </para>
/// <para>
/// #define SND_EVENTNAME_DEFAULT              L"SystemDefault"
/// </para>
/// <para>
/// #define SND_EVENTNAME_BUSYTONE             L"busytone"
/// </para>
/// <para>
/// #define SND_EVENTNAME_ALARM                L"clock"
/// </para>
/// <para>
/// #define SND_EVENTNAME_REMINDER             L"reminder"
/// </para>
/// <para>
/// #define SND_EVENTNAME_KEYPRESS             L"keypress"
/// </para>
/// <para>
/// #define SND_EVENTNAME_DEFAULTRINGTONE      L"ringtone0"
/// </para>
/// <para>
///#define SND_EVENTNAME_VOICEMAIL            L"voicemail"
/// </para>
/// <para>
///#define SND_EVENTNAME_DTMF1KEY             L"dtmf1" // DTMF 1
/// </para>
/// <para>
///#define SND_EVENTNAME_DTMF2KEY             L"dtmf2" // DTMF 2
/// </para>
/// <para>
///#define SND_EVENTNAME_DTMF3KEY             L"dtmf3" // DTMF 3
/// </para>
/// <para>
///#define SND_EVENTNAME_DTMF4KEY             L"dtmf4" // DTMF 4
/// </para>
/// <para>
///#define SND_EVENTNAME_DTMF5KEY             L"dtmf5" // DTMF 5
/// </para>
/// <para>
///#define SND_EVENTNAME_DTMF6KEY             L"dtmf6" // DTMF 6
/// </para>
/// <para>
///#define SND_EVENTNAME_DTMF7KEY             L"dtmf7" // DTMF 7
/// </para>
/// <para>
///#define SND_EVENTNAME_DTMF8KEY             L"dtmf8" // DTMF 8
/// </para>
/// <para>
///#define SND_EVENTNAME_DTMF9KEY             L"dtmf9" // DTMF 9
/// </para>
/// <para>
///#define SND_EVENTNAME_DTMF0KEY             L"dtmf0" // DTMF 0
/// </para>
/// <para>
///#define SND_EVENTNAME_DTMFASTERISKKEY      L"dtmf*" // DTMF *
/// </para>
/// <para>
///#define SND_EVENTNAME_DTMFPOUNDKEY         L"dtmf#" // DTMF #
/// </para>
/// <para>
///#define SND_EVENTNAME_DIALING              L"dialing"  // sound made when dialing
/// </para>
/// <para>
///#define SND_EVENTNAME_CALLDROPPED          L"calldrop" // warning that call was dropped
/// </para>
/// <para>
///#define SND_EVENTNAME_CALLWAITING          L"callwaiting" 
/// </para>
/// </summary>
/// </topic>

#define SND_EVENTNAME_ASTERISK             L"SystemAsterisk"
#define SND_EVENTNAME_DEFAULT              L"SystemDefault"
#define SND_EVENTNAME_BUSYTONE             L"busytone"
#define SND_EVENTNAME_ALARM                L"clock"
#define SND_EVENTNAME_REMINDER             L"reminder"
#define SND_EVENTNAME_KEYPRESS             L"keypress"
#define SND_EVENTNAME_DEFAULTRINGTONE      L"ringtone0"
#define SND_EVENTNAME_VOICEMAIL            L"voicemail"
#define SND_EVENTNAME_DTMF1KEY             L"dtmf1" // DTMF 1
#define SND_EVENTNAME_DTMF2KEY             L"dtmf2" // DTMF 2
#define SND_EVENTNAME_DTMF3KEY             L"dtmf3" // DTMF 3
#define SND_EVENTNAME_DTMF4KEY             L"dtmf4" // DTMF 4
#define SND_EVENTNAME_DTMF5KEY             L"dtmf5" // DTMF 5
#define SND_EVENTNAME_DTMF6KEY             L"dtmf6" // DTMF 6
#define SND_EVENTNAME_DTMF7KEY             L"dtmf7" // DTMF 7
#define SND_EVENTNAME_DTMF8KEY             L"dtmf8" // DTMF 8
#define SND_EVENTNAME_DTMF9KEY             L"dtmf9" // DTMF 9
#define SND_EVENTNAME_DTMF0KEY             L"dtmf0" // DTMF 0
#define SND_EVENTNAME_DTMFASTERISKKEY      L"dtmf*" // DTMF *
#define SND_EVENTNAME_DTMFPOUNDKEY         L"dtmf#" // DTMF #
#define SND_EVENTNAME_DIALING              L"dialing"  // sound made when dialing
#define SND_EVENTNAME_CALLDROPPED          L"calldrop" // warning that call was dropped
#define SND_EVENTNAME_CALLWAITING          L"callwaiting" 

/// <summary>
/// <para>
/// Different sound profiles volume.
/// </para>
/// </summary>
/// <remarks>
/// <seealso cref="SndGetCurrentSoundProfile" />
/// See Design Decisions Topic.
/// </remarks>
typedef enum SND_PROFILE
{
    /// <summary>
    /// Loud profile
    /// </summary>
    SND_PROFILE_LOUD,
    /// <summary>
    /// Normal profile
    /// </summary>
    SND_PROFILE_NORMAL,
    /// <summary>
    /// Quiet profile
    /// </summary>
    SND_PROFILE_QUIET,
    /// <summary>
    /// Silent profile
    /// </summary>
    SND_PROFILE_SILENT,
    /// <summary>
    /// Loud and Vibrate profile
    /// </summary>
    SND_PROFILE_LOUD_AND_VIBRATE,
    /// <summary>
    /// Normal and Vibrate profile
    /// </summary>
    SND_PROFILE_NORMAL_AND_VIBRATE,
    /// <summary>
    /// Quiet and Vibrate profile
    /// </summary>
    SND_PROFILE_QUIET_AND_VIBRATE,
    /// <summary>
    /// Vibrate
    /// </summary>
    SND_PROFILE_VIBRATE,

}SND_PROFILE;


// **************************************************************************
// SND_SOUNDTYPE
// 
// Purpose: This enum indicates the type of sound for the SNDFILEINFO 
//          structure.
//
// **************************************************************************
typedef enum tagSND_SOUNDTYPE
{
    SND_SOUNDTYPE_ON,             // If sound is currently Vibrate or None this will restore the 
                                  // sound to the previous value. This is only valid for the SND_EVENT_ALL
                                  // SND_EVENT.
    SND_SOUNDTYPE_FILE,           // Soundfile will be specified by SNDFILEINFO.szPathName
    SND_SOUNDTYPE_VIBRATE,        // Sound is vibration.  SNDFILEINFO.szPathName is ignored.
    SND_SOUNDTYPE_NONE,           // No sound (silence).  SNDFILEINFO.szPathName is ignored.
    SND_SOUNDTYPE_DISABLE,        // Only applies to SND_EVENTs for KNOWNCALLER and ROAMING
                                  // Sound will be disabled and behavior will revert back to default.
    
    SND_SOUNDTYPE_LAST = SND_SOUNDTYPE_DISABLE
} SND_SOUNDTYPE;





// **************************************************************************
// SNDFILEINFO
// 
// Purpose: This structure is used to set and retrieve information about 
//          event sounds.
//
// Fields:
//      [in/out] TCHAR szPathName[MAX_PATH]
//          A pointer to a string indicating the fully qualified
//          path to the sound file.
//
//      [in/out] TCHAR szDisplayName[MAX_PATH]
//          A pointer to a string indicating the friendly name of a 
//          sound file, that is the name of the file without extension
//          or path. When used with SndSetSoundFile, szDisplayName is ignored.
//
//      [in/out] SND_SOUNDTYPE sstType
//          An enum indicating the type of sound that is played for the event.
//          If this is not equal to SND_SOUNDTYPE_FILE, szPathName is ignored.
// **************************************************************************
typedef struct tagSNDFILEINFO
{
    TCHAR szPathName[MAX_PATH];
    TCHAR szDisplayName[MAX_PATH];
    SND_SOUNDTYPE sstType;    
} SNDFILEINFO;





// **************************************************************************
// SNDDIRECTORYINFO
// 
// Purpose: This structure is returned when querying for directories for
//          sound events.
//
// Fields:
//      [in/out] TCHAR szPathName[MAX_PATH]
//          A string indicating the fully qualified
//          path to the directory containing sound files.
//
//
// Notes:   This struct is used with SndGetSoundDirectoriesList.
//
//
// Description:
// **************************************************************************
typedef struct tagSNDDIRECTORYINFO
{
    TCHAR szPathName[MAX_PATH];
} SNDDIRECTORYINFO;






// **************************************************************************
// SND_EVENT
// 
// Purpose: This enum indicates which sound event type the user wishes to
//          set or query.
//
// **************************************************************************
typedef enum tagSND_EVENT
{
    SND_EVENT_ALL,                       // This is a special sound event that applies to all sounds
                                         // on a system wide scale. Currently only supported on Pocket PC, the
                                         // only valid values for SNDFILEINFO.sstType are SND_SOUNDTYPE_ON,
                                         // SND_SOUNDTYPE_VIBRATE, and SND_SOUNDTYPE_NONE. Invoking SndSetSound
                                         // with SND_EVENT_ALL and a SNDFILEINFO struct set to one of the above
                                         // values will be equivalent to the user using the Pocket PC Volume Bubble
                                         // on the home screen. If the volume bubble is currently open the change will
                                         // be reflected in the bubble right away. If the bubble is not open the change
                                         // will take effect immediately and will be visible the next time the user
                                         // opens the bubble.
    SND_EVENT_RINGTONELINE1,             // The ringtone for line 1 of the phone
    SND_EVENT_RINGTONELINE2,             // The ringtone for line 2 of the phone
    SND_EVENT_KNOWNCALLERRINGTONELINE1,  // The ringtone to play for a caller in the contact list who has no contact-specific ring tone.
                                         // This event does not support the "vibrate" and "none" sound types
                                         // Currently applies to both lines without distinction
    SND_EVENT_ROAMINGRINGTONELINE1,      // The ringtone to play while roaming.  This has higher priority than other ring tones.
                                         // This event does not support the "vibrate" and "none" sound types
                                         // Currently applies to both lines without distinction
    SND_EVENT_RINGTONELINEVOIP,          // The ringtone for VoIP line of the phone
    
    SND_EVENT_LAST = SND_EVENT_RINGTONELINEVOIP
} SND_EVENT;


// **************************************************************************
// Bitmasks for SndGetSoundFileList and SndGetSoundDirectoriesList
// **************************************************************************
#define SND_LOCATION_STORAGECARD 0x01 // Retrieve sound files or directories from 
                                      // the storage card.  For some sound events,
                                      // this may not be a valid location.
#define SND_LOCATION_USERDATA    0x02 // Retrieve sound files in userdata (
                                      // \My Documents ,
                                      // \My Documents\My Ringtones and
                                      // \Application Data\Sounds\ 
                                      // When SND_LOCATION_STORAGECARD is set,
                                      // also look in...
                                      // \<<Storage card>>
                                      // \<<Storage card>>\My Ringtones
                                      // \<<Storage card>>\My Documents
                                      // \<<Storage card>>\My Documents\My Ringtones)
                                      // Note: My Ringtone directories are only searched
                                      // for ringtone specific sound events.
#define SND_LOCATION_ROM         0x04 // Retrieve sound files in ROM.

#define SND_LOCATION_ALL         0xFFFFFFFF
                                      // A combination of all locations.  Return all.


/// <topic_scope tref="Sound_APIs" />
/// <summary>
/// Plays an event sound asynchronously
/// </summary>
/// <param name="pszEvent">[In] This can either be one of the preregistered sound
/// event names or an absolute path to a sound file. If the parameter points to
/// an absolute path, then the sound played follows system sounds and
/// respects the profile as below
/// <para>
/// LOUD, LOUD + VIBRATE - Plays in loud volume.
/// </para>
/// <para>
/// NORMAL , NORMAL + VIBRATE - Plays in normal volume.
/// </para>
/// <para>
/// QUIET, QUIET + VIBRATE - Plays in quiet volume.
/// </para>
/// <para>
/// SILENT, SILENT + VIBRATE - Does not play.
/// </para>
/// The sound played does not vibrate for any profiles. But this can change
/// in the future.
/// </param>
/// <param name="hSignalEventCompleted">[In, Opt] Optional caller
/// created event handle that the sound module will signal when
/// the API completes. See remarks.
/// </param>
/// <returns> 
/// <para>
/// S_OK - Success.
/// </para>
/// <para>
/// E_POINTER- NULL <paramref name="pszEvent" />
/// </para>
/// <para>
/// E_INVALIDARG - Contains something other than the 
/// supported event names.
/// </para>
/// <para>
/// E_FAIL - Otherwise.
/// </para>
/// </returns>
/// <remarks>
/// For proper functionality the code needs to ensure
/// <paramref name="hSignalEventCompleted" /> is in reset state
/// when calling this API. Calling code can simulate a synchronous
/// play by waiting on <paramref name="hSignalEventCompleted" />.
/// If the code needs to find out if the play is still going on,
/// it can check the state of the <paramref name="hSignalEventCompleted" />.
/// On Error conditions, the API will still signal the <paramref name="hSignalEventCompleted" />.
/// <example>
/// <para>
/// Play default ringtone synchronously.
/// <code>
/// void PlayRingToneSync()
/// {
///     HRESULT hr = S_OK;
///     HANDLE hEvent = NULL;
///     hEvent = CreateEvent(NULL, TRUE, FALSE, NULL); // Event is in reset state.
///     if (hEvent != NULL)
///     {
///         hr = SndPlayEvent(SND_EVENTNAME_DEFAULTRINGTONE,
///                           hEvent);
///         if(FAILED (hr))
///         {
///             //Log the failure or do something else. 
///             // Note- hEvent will be signalled even if the API failed.
///         }
///         WaitForSingleObject(hEvent, INFINITE);
///         CloseHandle(hEvent);
///     }
///
/// }
/// </code>
/// </para>
/// <para>
/// Find whether the sound is playing.
/// <code>
/// BOOL IsSoundPlaying(HANDLE hEvent) // this is the event that was passed in to the SndPlayEvent API.
/// {
///     return (WAIT_TIMEOUT == WaitForSingleObject(hEvent, 0));
/// }
/// </code>
/// </para>
/// </example>
/// </remarks>
HRESULT SndPlayEvent(__in const WCHAR * pszEvent, 
                     __in_opt HANDLE hSignalEventCompleted);

/// <topic_scope tref="Sound_APIs" />
/// <summary>
/// Stop all sounds.
/// </summary>
/// <param name="fInAllProcesses">
/// TRUE -  Stops all sounds playing in all processes in the system.
/// FALSE - Only stops all sounds playing in the current process. 
/// </param>
/// <returns> 
/// <para>
/// S_OK - Success.
/// </para>
/// <para>
/// E_FAIL - Failure.
/// </para>
/// </returns>
HRESULT SndStopAllEvents(BOOL fInAllProcesses);

/// <topic_scope tref="Sound_APIs" />
/// <summary>
/// Returns the sound profile the device is
/// currently running in.
/// </summary>
/// <param name="pprofile">[Out] One of the <see cref="SND_PROFILE" /> enums.
/// </param>
/// <returns> 
/// <para>
/// S_OK - Success.
/// </para>
/// <para>
/// E_POINTER - Null <paramref name="pprofile" /> 
/// </para>
/// <para>
/// E_FAIL - Otherwise.
/// </para>
/// </returns>
/// <remarks>
/// If the  profile is automatic, when in a meeting the API 
/// returns *pprofile = SND_PROFILE_VIBRATE. When not in a meeting it returns
/// *pprofile = SND_PROFILE_NORMAL.
/// </remarks>
HRESULT SndGetCurrentSoundProfile(__out SND_PROFILE * pprofile);

// **************************************************************************
// Function Name:   SndGetSoundDirectoriesList
// 
// Purpose: Returns an array of possible directories for sound files for the
//          specified sound event type and memory location.
//
// Arguments:
//      [in] seSoundEvent
//          Indicates the type of sound event you wish to query for.
//
//      [in] grfLocations
//          Indicates which locations in memory are searched for sound.
//          directories.  See the bitfields adove for a description.
//
//      [out] ppSoundDirectories
//          A pointer to an array of sound directories.  This function will 
//          create the array of SNDDIRECTORYINFO's, and allocate the  
//          appropriate amount of memory.  User is resposible for freeing 
//          this memory by calling LocalFree on the returned pointer.
//
//      [out] pcSoundDirectories
//          A pointer to an int indicated number of SNDDIRECTORYINFO
//          objects created and returned in ppSoundDirectories.
//
// Return Values:
//      HRESULT
//          This function is free to return any HRESULT and the application 
//          should use the SUCCEEDED/FAILED macros to check the results. 
//
// Description:     
//          This function allows an application to query the directories
//          where sound files should be copied to for any of the sound events 
//          listed in the enum SND_EVENT. The fully qualified path for 
//          the directory is returned. This function allocates
//          memory for all SNDDIRECTORYINFO's as one contiguous 
//          block.  User is responsible for freeing all memory returned by 
//          this function by calling LocalFree on the returned pointer.
// **************************************************************************
HRESULT SndGetSoundDirectoriesList( SND_EVENT seSoundEvent,
                                    DWORD grfLocations, 
                                    SNDDIRECTORYINFO** ppSoundDirectories, 
                                    int* pcSoundDirectories);






// **************************************************************************
// Function Name:   SndGetSoundFileList
// 
// Purpose: Returns an array of available soundfiles on the device for the
//          specified sound event.
//
// Arguments:
//      [in] seSoundEvent
//          Indicates the type of sound event you wish to query for.
//
//      [in] grfLocations
//          Indicates which locations in memory are searched for sound files.
//          See the bitfields above for a description.
//
//      [out] ppSoundFiles
//          A pointer to an array of sound files.  This function will create 
//          the array of SNDFILEINFO's, and allocate the appropriate amount
//          of memory.  User is resposible for freeing this memory
//          by calling LocalFree.
//
//      [out] pcSoundFiles
//          A pointer to an int indicating number of SNDFILEINFO
//          objects created and returned in ppSoundFiles.
//
// Return Values:
//      HRESULT
//          This function is free to return any HRESULT and the application 
//          should use the SUCCEEDED/FAILED macros to check the results. 
//
// Description:     
//          This function allows an application to query sound files
//          available to the device for any of the sound events listed
//          in the enum SND_EVENT.  By specifying the appropriate
//          bitfield, sound files can be retrieved from all valid
//          sound file storage locations.  The fully qualified file path and
//          friendly file name are returned for each sound file. This function
//          allocates memory for all SNDFILEINFO's as one contiguous 
//          block.  User is responsible for freeing all memory returned by 
//          this function by calling LocalFree on the returned pointer.
// **************************************************************************
HRESULT SndGetSoundFileList(SND_EVENT seSoundEvent,
                            DWORD grfLocations, 
                            SNDFILEINFO** ppSoundFiles, 
                            int* pcSoundFiles);




// **************************************************************************
// Function Name:   SndSetSound
// 
// Purpose: Sets the current sound file for the indicated event.
//
// Arguments:
//      [in] seSoundEvent
//          Indicates which type of sound event the user wishes to set.
//
//      [in] pSoundFileInfo
//          A pointer to a SNDFILEINFO which indicates
//          the file that the user wishes to set as the indicated sound.
//          The fully qualified path should be included.  szDisplayName
//          is ignored.
//
//      [in] fSuppressUI
//          Determines if error message should be displayed if the
//          function fails to set the current sound file.  This error
//          message would only appear in the case of failure.
//
// Return Values:
//      HRESULT
//          This function is free to return any HRESULT and the application 
//          should use the SUCCEEDED/FAILED macros to check the results.
//
//        
// Description:     
//          This function sets the current sound file for the appropriate
//          event.  This function can fail and will not change the current
//          sound file if it determines it is unable to play the sound file
//          for any reason.  It will also fail if the sound file is not in
//          an appropriate sounds directory.  It will fail if a sound file
//          is in the ROM sounds directory, unless it is returned by
//          SndGetSoundFileList.  If fSuppressUI is true, no user interface
//          will be displayed explaining reasons that the sound file could
//          not be set.  If it is false, then a dialog may appear explaining
//          the reason the sound file could not be set (such as insufficient
//          digital rights, an invalid file, etc).
//
// Note:
//          The SND_EVENT_ALL event type and corresponding SND_SOUNDTYPE values
//          are currently only supported on Pocket PC.
// **************************************************************************
HRESULT SndSetSound(SND_EVENT seSoundEvent,
                    const SNDFILEINFO* pSoundFileInfo,
                    BOOL fSuppressUI);




// **************************************************************************
// Function Name:   SndGetSound
// 
// Purpose:         Returns the current sound file for the indicated sound
//                  event.
//
// Arguments:      
//      [in] seSoundEvent
//          Indicates the type of sound event you wish to query.
//
//      [out] pSoundFileInfo
//          Caller should pass in a pointer to a SNDFILEINFO object 
//          that will be filled in by this function.  
//
// Return Values:
//      HRESULT
//          This function is free to return any HRESULT and the application 
//          should use the SUCCEEDED/FAILED macros to check the results. 
//
// Description:
//          This function returns the current sound file for the specified 
//          sound event. The fully qualified file path along with the 
//          friendly file name of the sound event file are returned in 
//          pSoundFileInfo.  This function needs a pointer to a valid 
//          SNDFILEINFO structure.
//
// Note:
//          The SND_EVENT_ALL event type and corresponding SND_SOUNDTYPE values
//          are currently only supported on Pocket PC.
// **************************************************************************
HRESULT SndGetSound(SND_EVENT seSoundEvent,
                    SNDFILEINFO* pSoundFileInfo);


#ifdef __cplusplus
}
#endif  // __cplusplus

#endif  // _SOUNDFILE_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\wm7\sfone7\Include\softpub.h ===
//
// Copyright (c) Microsoft Corporation.  All rights reserved.
//
//
// Use of this sample source code is subject to the terms of the Microsoft
// license agreement under which you licensed this sample source code. If
// you did not accept the terms of the license agreement, you are not
// authorized to use this sample source code. For the terms of the license,
// please see the license agreement between you and Microsoft or, if applicable,
// see the LICENSE.RTF on your install media or the root of your tools installation.
// THE SAMPLE SOURCE CODE IS PROVIDED "AS IS", WITH NO WARRANTIES.
//
//+-------------------------------------------------------------------------
//
//  Microsoft Windows
//
//
//  File:       softpub.h
//
//  Contents:   Microsoft Internet Security Authenticode Policy Provider
//
//--------------------------------------------------------------------------

#ifndef SOFTPUB_H
#define SOFTPUB_H

#if _MSC_VER > 1000
#pragma once
#endif

#include "wintrust.h"

#ifdef __cplusplus
extern "C"
{
#endif

#include <pshpack8.h>

//////////////////////////////////////////////////////////////////////////////
//
// Softpub Policy Provider defines
//----------------------------------------------------------------------------
//  The following are definitions of the Microsoft Authenticode Policy Provider
//  (WINTRUST.DLL's Policy Provider)
//

#define SP_POLICY_PROVIDER_DLL_NAME         L"WINTRUST.DLL"

//////////////////////////////////////////////////////////////////////////////
//
// WINTRUST_ACTION_GENERIC_VERIFY_V2 Guid  (Authenticode)
//----------------------------------------------------------------------------
//  Assigned to the pgActionID parameter of WinVerifyTrust to verify the
//  authenticity of a file/object using the Microsoft Authenticode
//  Policy Provider,
//
//          {00AAC56B-CD44-11d0-8CC2-00C04FC295EE}
//
#define WINTRUST_ACTION_GENERIC_VERIFY_V2                       \
            { 0xaac56b,                                         \
              0xcd44,                                           \
              0x11d0,                                           \
              { 0x8c, 0xc2, 0x0, 0xc0, 0x4f, 0xc2, 0x95, 0xee } \
            }

#define SP_INIT_FUNCTION                    L"SoftpubInitialize"
#define SP_OBJTRUST_FUNCTION                L"SoftpubLoadMessage"
#define SP_SIGTRUST_FUNCTION                L"SoftpubLoadSignature"
#define SP_CHKCERT_FUNCTION                 L"SoftpubCheckCert"
#define SP_FINALPOLICY_FUNCTION             L"SoftpubAuthenticode"
#define SP_CLEANUPPOLICY_FUNCTION           L"SoftpubCleanup"

//////////////////////////////////////////////////////////////////////////////
//
// WINTRUST_ACTION_TRUSTPROVIDER_TEST (Authenticode TEST)
//----------------------------------------------------------------------------
//  Assigned to the pgActionID parameter of WinVerifyTrust to dump
//  the CRYPT_PROVIDER_DATA structure to a file after calling the
//  Authenticode Policy Provider.
//
//          {573E31F8-DDBA-11d0-8CCB-00C04FC295EE}
//
#define WINTRUST_ACTION_TRUSTPROVIDER_TEST                      \
            { 0x573e31f8,                                       \
              0xddba,                                           \
              0x11d0,                                           \
              { 0x8c, 0xcb, 0x0, 0xc0, 0x4f, 0xc2, 0x95, 0xee } \
            }

#define SP_TESTDUMPPOLICY_FUNCTION_TEST     L"SoftpubDumpStructure"


//////////////////////////////////////////////////////////////////////////////
//
// WINTRUST_ACTION_GENERIC_CERT_VERIFY
//----------------------------------------------------------------------------
//  Assigned to the pgActionID parameter of WinVerifyTrust to verify
//  a certificate chain only.  This is only valid when passing in a
//  certificate context in the WinVerifyTrust input structures.
//
//          {189A3842-3041-11d1-85E1-00C04FC295EE}
//
#define WINTRUST_ACTION_GENERIC_CERT_VERIFY                     \
            { 0x189a3842,                                       \
              0x3041,                                           \
              0x11d1,                                           \
              { 0x85, 0xe1, 0x0, 0xc0, 0x4f, 0xc2, 0x95, 0xee } \
            }

#define SP_GENERIC_CERT_INIT_FUNCTION       L"SoftpubDefCertInit"


//////////////////////////////////////////////////////////////////////////////
//
// WINTRUST_ACTION_GENERIC_CHAIN_VERIFY
//----------------------------------------------------------------------------
//  Assigned to the pgActionID parameter of WinVerifyTrust to verify
//  certificate chains created from any object type: file, cert, signer, ...
//  A callback is provided to implement the final chain policy using
//  the chain context for each signer and counter signer.
//
//          {fc451c16-ac75-11d1-b4b8-00c04fb66ea0}
//
#define WINTRUST_ACTION_GENERIC_CHAIN_VERIFY                    \
            { 0xfc451c16,                                       \
              0xac75,                                           \
              0x11d1,                                           \
              { 0xb4, 0xb8, 0x00, 0xc0, 0x4f, 0xb6, 0x6e, 0xa0 }\
            }
#define GENERIC_CHAIN_FINALPOLICY_FUNCTION      L"GenericChainFinalProv"
#define GENERIC_CHAIN_CERTTRUST_FUNCTION        L"GenericChainCertificateTrust"


typedef struct _WTD_GENERIC_CHAIN_POLICY_SIGNER_INFO
    WTD_GENERIC_CHAIN_POLICY_SIGNER_INFO,
        *PWTD_GENERIC_CHAIN_POLICY_SIGNER_INFO;

struct _WTD_GENERIC_CHAIN_POLICY_SIGNER_INFO {
    union {
        DWORD                                   cbStruct;
        DWORD                                   cbSize;
    };
    PCCERT_CHAIN_CONTEXT                    pChainContext;

    // SGNR_TYPE_TIMESTAMP defined in wintrust.h
    DWORD                                   dwSignerType;
    PCMSG_SIGNER_INFO                       pMsgSignerInfo;
    DWORD                                   dwError;

    DWORD                                   cCounterSigner;
    PWTD_GENERIC_CHAIN_POLICY_SIGNER_INFO   *rgpCounterSigner;
};

typedef HRESULT (WINAPI *PFN_WTD_GENERIC_CHAIN_POLICY_CALLBACK)(
    IN PCRYPT_PROVIDER_DATA pProvData,
    IN DWORD dwStepError,
    IN DWORD dwRegPolicySettings,
    IN DWORD cSigner,
    IN PWTD_GENERIC_CHAIN_POLICY_SIGNER_INFO *rgpSigner,
    IN void *pvPolicyArg
    );

// The fields in the following data structure are passed to
// CertGetCertificateChain().
typedef struct _WTD_GENERIC_CHAIN_POLICY_CREATE_INFO {
    union {
        DWORD                                   cbStruct;
        DWORD                                   cbSize;
    };

    HCERTCHAINENGINE                        hChainEngine;
    PCERT_CHAIN_PARA                        pChainPara;
    DWORD                                   dwFlags;
    void                                    *pvReserved;
} WTD_GENERIC_CHAIN_POLICY_CREATE_INFO, *PWTD_GENERIC_CHAIN_POLICY_CREATE_INFO;

typedef struct _WTD_GENERIC_CHAIN_POLICY_DATA {
    union {
        DWORD                                   cbStruct;
        DWORD                                   cbSize;
    };

    PWTD_GENERIC_CHAIN_POLICY_CREATE_INFO   pSignerChainInfo;
    PWTD_GENERIC_CHAIN_POLICY_CREATE_INFO   pCounterSignerChainInfo;
    PFN_WTD_GENERIC_CHAIN_POLICY_CALLBACK   pfnPolicyCallback;
    void                                    *pvPolicyArg;
} WTD_GENERIC_CHAIN_POLICY_DATA, *PWTD_GENERIC_CHAIN_POLICY_DATA;


//////////////////////////////////////////////////////////////////////////////
//
// HTTPSPROV_ACTION Guid  (Authenticode add-on)
//----------------------------------------------------------------------------
//  Assigned to the pgActionID parameter of WinVerifyTrust to verify the
//  SSL/PCT connections through IE.
//
//          {573E31F8-AABA-11d0-8CCB-00C04FC295EE}
//
#define HTTPSPROV_ACTION                                        \
            { 0x573e31f8,                                       \
              0xaaba,                                           \
              0x11d0,                                           \
              { 0x8c, 0xcb, 0x0, 0xc0, 0x4f, 0xc2, 0x95, 0xee } \
            }

#define HTTPS_FINALPOLICY_FUNCTION          L"HTTPSFinalProv"
#define HTTPS_CHKCERT_FUNCTION              L"HTTPSCheckCertProv"
#define HTTPS_CERTTRUST_FUNCTION            L"HTTPSCertificateTrust"


//////////////////////////////////////////////////////////////////////////////
//
// OFFICESIGN_ACTION_VERIFY Guid  (Authenticode add-on)
//----------------------------------------------------------------------------
//  Assigned to the pgActionID parameter of WinVerifyTrust to verify the
//  authenticity of a Structured Storage file using the Microsoft Office
//  Authenticode add-on Policy Provider,
//
//          {5555C2CD-17FB-11d1-85C4-00C04FC295EE}
//
#define     OFFICESIGN_ACTION_VERIFY                                    \
                { 0x5555c2cd,                                           \
                  0x17fb,                                               \
                  0x11d1,                                               \
                  { 0x85, 0xc4, 0x0, 0xc0, 0x4f, 0xc2, 0x95, 0xee }     \
                }

#define     OFFICE_POLICY_PROVIDER_DLL_NAME             SP_POLICY_PROVIDER_DLL_NAME
#define     OFFICE_INITPROV_FUNCTION                    L"OfficeInitializePolicy"
#define     OFFICE_CLEANUPPOLICY_FUNCTION               L"OfficeCleanupPolicy"


//////////////////////////////////////////////////////////////////////////////
//
// DRIVER_ACTION_VERIFY Guid  (Authenticode add-on)
//----------------------------------------------------------------------------
//  Assigned to the pgActionID parameter of WinVerifyTrust to verify the
//  authenticity of a WHQL signed driver.  This is an Authenticode add-on
//  Policy Provider,
//
//          {F750E6C3-38EE-11d1-85E5-00C04FC295EE}
//
#define     DRIVER_ACTION_VERIFY                                        \
                { 0xf750e6c3,                                           \
                  0x38ee,                                               \
                  0x11d1,                                               \
                  { 0x85, 0xe5, 0x0, 0xc0, 0x4f, 0xc2, 0x95, 0xee }     \
                }

#define     DRIVER_INITPROV_FUNCTION                    L"DriverInitializePolicy"
#define     DRIVER_FINALPOLPROV_FUNCTION                L"DriverFinalPolicy"
#define     DRIVER_CLEANUPPOLICY_FUNCTION               L"DriverCleanupPolicy"

typedef struct DRIVER_VER_MAJORMINOR_
{
    DWORD           dwMajor;
    DWORD           dwMinor;

} DRIVER_VER_MAJORMINOR;

typedef struct DRIVER_VER_INFO_
{
    DWORD                               cbStruct;               // IN - set to sizeof(DRIVER_VER_INFO)

    DWORD                               dwReserved1;            // IN - set to NULL
    DWORD                               dwReserved2;            // IN - set to NULL

    DWORD                               dwPlatform;             // IN - OPTIONAL: platform to use
    DWORD				dwVersion;		// IN - OPTIONAL: major version to use, same as sOSVersionLow

    WCHAR                               wszVersion[MAX_PATH];   // OUT: version string from catalog file
    WCHAR                               wszSignedBy[MAX_PATH];  // OUT: signer display name from certificate
    PCCERT_CONTEXT                      pcSignerCertContext;    // OUT: client MUST free this!!!

    // 08-Dec-1997 pberkman: added
    DRIVER_VER_MAJORMINOR               sOSVersionLow;          // IN - OPTIONAL: lowest compatible version
    DRIVER_VER_MAJORMINOR		sOSVersionHigh; 	// IN - OPTIONAL: for now must be the same as sOSVersionLow

} DRIVER_VER_INFO, *PDRIVER_VER_INFO;

#include <poppack.h>


#ifdef __cplusplus
}
#endif

#endif // SOFTPUB_H
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\wm7\sfone7\Include\specstrings_strict.h ===
//
// Copyright (c) Microsoft Corporation.  All rights reserved.
//
//
// Use of this sample source code is subject to the terms of the Microsoft
// license agreement under which you licensed this sample source code. If
// you did not accept the terms of the license agreement, you are not
// authorized to use this sample source code. For the terms of the license,
// please see the license agreement between you and Microsoft or, if applicable,
// see the LICENSE.RTF on your install media or the root of your tools installation.
// THE SAMPLE SOURCE CODE IS PROVIDED "AS IS", WITH NO WARRANTIES OR INDEMNITIES.
//
/************************************************************************* 
*  This file documents all the macros approved for use in windows source
*  code. It includes some experimental macros which should only be used by
*  experts.
*
*  DO NOT include this file directly.  This file is include after
*  specstrings.h. So we can undefine every possible old definition including
*  private internal macros people should not be using, as well as macros from
*  sal.h.  Macros are redefined here in a way to cause syntax errors when used
*  incorrectly during a normal build when specstrings.h is included and
*  __SPECSTRINGS_STRICT_LEVEL is defined.
*
*  There are several levels of strictness, each level includes the behavior of
*  all previous levels.
*
*  0 - Disable strict checking 
*  1 - Break on unapproved macros and misuse of statement 
*      macros such as __fallthrough (default)
*  2 - Deprecated some old macros that should not be used
*  3 - Use VS 2005 Source Annotation to make sure every macro 
*      is used in the right context. For example placing __in on a return 
*      parameter will result in an error.
************************************************************************/
#ifndef __SPECSTRINGS_STRICT_LEVEL
#define __SPECSTRINGS_STRICT_LEVEL 1
#endif
/************************************************************************
*  Introduction
*
*  specstrings.h provides a set of annotations to describe how a function uses
*  its parameters - the assumptions it makes about them, and the guarantees it
*  makes upon finishing.
* 
*  Annotations must be placed before a function parameter's type or its return
*  type. There are two basic classes of common annotations buffer annotations
*  and advanced annotations.  Buffer annotations describe how functions use
*  their pointer parameters, and advanced annotations either describe
*  complex/unusual buffer behavior, or provide additional information about a
*  parameter that is not otherwise expressible.
* 
*  Buffer Annotations
* 
*  The most important annotations in SpecStrings.h provide a consistent way to
*  annotate buffer parameters or return values for a function. Each of these
*  annotations describes a single buffer (which could be a string, a
*  fixed-length or variable-length array, or just a pointer) that the function
*  interacts with: where it is, how large it is, how much is initialized, and
*  what the function does with it.
* 
*  The appropriate macro for a given buffer can be constructed using the table
*  below.  Just pick the appropriate values from each category, and combine
*  them together with a leading underscore. Some combinations of values do not
*  make sense as buffer annotations. Only meaningful annotations can be added
*  to your code; for a list of these, see the buffer annotation definitions
*  section.
* 
*  Only a single buffer annotation should be used for each parameter.
* 
*  |------------|------------|---------|--------|----------|---------------|
*  |   Level    |   Usage    |  Size   | Output | Optional |  Parameters   |
*  |------------|------------|---------|--------|----------|---------------|
*  | <>         | <>         | <>      | <>     | <>       | <>            |
*  | _deref     | _in        | _ecount | _full  | _opt     | (size)        |
*  | _deref_opt | _out       | _bcount | _part  |          | (size,length) |
*  |            | _inout     |         |        |          |               |
*  |            |            |         |        |          |               |
*  |------------|------------|---------|--------|----------|---------------|
*
*  Note: "<>" represents the empty string.
* 
*  Level: Describes the buffer pointer's level of indirection from the
*  parameter or return value 'p'.
* 
*  <>         : p is the buffer pointer.
*  _deref     : *p is the buffer pointer. p must not be NULL.
*  _deref_opt : *p may be the buffer pointer. p may be NULL, in which case the 
*               rest of the annotation is ignored.
* 
*  Usage: Describes how the function uses the buffer.
* 
*  <> : The buffer is not accessed. If used on the return value or with
*  _deref, the function will provide the buffer, and it will be uninitialized
*  at exit.  Otherwise, the caller must provide the buffer. This should only
*  be used for alloc and free functions.
*
*  _in : The function will only read from the buffer. The caller must provide
*  the buffer and initialize it.
*
*  _out : The function will only write to the buffer. If used on the return
*  value or with _deref, the function will provide the buffer and initialize
*  it.  Otherwise, the caller must provide the buffer, and the function will
*  initialize it.
*
*  _inout : The function may freely read from and write to the buffer. The
*  caller must provide the buffer and initialize it. If used with _deref, the
*  buffer may be reallocated by the function.
*
*  Size: Describes the total size of the buffer. This may be less than the
*  space actually allocated for the buffer, in which case it describes the
*  accessible amount.
* 
*  <> : No buffer size is given. If the type specifies the buffer size (such
*  as with LPSTR and LPWSTR), that amount is used. Otherwise, the buffer is
*  one element long. Must be used with _in, _out, or _inout.
*
*  _ecount : The buffer size is an explicit element count.
*
*  _bcount : The buffer size is an explicit byte count.
* 
*  Output: Describes how much of the buffer will be initialized by the
*  function. For _inout buffers, this also describes how much is initialized
*  at entry. Omit this category for _in buffers; they must be fully
*  initialized by the caller.
* 
*  <> : The type specifies how much is initialized. For instance, a function
*  initializing an LPWSTR must NULL-terminate the string.
*
*  _full : The function initializes the entire buffer.
*
*  _part : The function initializes part of the buffer, and explicitly
*  indicates how much.
* 
*  Optional: Describes if the buffer itself is optional.
* 
*  <>   : The pointer to the buffer must not be NULL.
*
*  _opt : The pointer to the buffer might be NULL. It will be checked before
*  being dereferenced.
* 
*  Parameters: Gives explicit counts for the size and length of the buffer.
* 
*  <> : There is no explicit count. Use when neither _ecount nor _bcount is
*  used.
*
*  (size) : Only the buffer's total size is given. Use with _ecount or _bcount
*  but not _part.
*
*  (size,length) : The buffer's total size and initialized length are
*  given. Use with _ecount_part and _bcount_part.
* 
*  ----------------------------------------------------------------------------
*  Buffer Annotation Examples
* 
*  LWSTDAPI_(BOOL) StrToIntExA(
*      LPCSTR pszString,  //  No annotation required, const implies __in.
*      DWORD dwFlags,
*      __out int *piRet   // A pointer whose dereference will be filled in.
*  );
* 
*  void MyPaintingFunction(
*      __in HWND hwndControl,     //  An initialized read-only parameter.
*      __in_opt HDC hdcOptional,  //  An initialized read-only parameter that 
*                                 //  might be NULL.
*      __inout IPropertyStore *ppsStore // An initialized parameter that 
*                                       // may be freely used and modified.
*  );
* 
*  LWSTDAPI_(BOOL) PathCompactPathExA(
*      __out_ecount(cchMax) LPSTR pszOut, //  A string buffer with cch elements
*                                         //  that will be '\0' terminated 
*                                         //  on exit.
*      LPCSTR pszSrc,                     //  No annotation required, 
*                                         //  const implies __in.
*      UINT cchMax,                              
*      DWORD dwFlags
*  );
* 
*  HRESULT SHLocalAllocBytes(
*      size_t cb,
*      __deref_bcount(cb) T **ppv //  A pointer whose dereference will be set
*                                 //  to an uninitialized buffer with cb bytes.
*  );
* 
*  __inout_bcount_full(cb) : A buffer with cb elements that is fully
*  initialized at entry and exit, and may be written to by this function.
* 
*  __out_ecount_part(count, *countOut) : A buffer with count elements that
*  will be partially initialized by this function. The function indicates how
*  much it initialized by setting *countOut.
* 
************************************************************************/
#if (_MSC_VER >= 1400) && !defined(__midl) && !defined(_PREFAST_) && (__SPECSTRINGS_STRICT_LEVEL > 0)
#pragma once
#include <specstrings_undef.h>
#define __ecount(size)                                __allowed(on_return)
#define __bcount(size)                                __allowed(on_return)
#define __xcount(size)                                __allowed(on_return)
#define __in                                          __allowed(on_parameter)
#define __in_ecount(size)                             __allowed(on_parameter)
#define __in_bcount(size)                             __allowed(on_parameter)
#define __in_xcount(size)                             __allowed(on_parameter)
#define __in_z                                        __allowed(on_parameter)
#define __in_ecount_z(size)                           __allowed(on_parameter)
#define __in_bcount_z(size)                           __allowed(on_parameter)
#define __out                                         __allowed(on_parameter)
#define __out_ecount(size)                            __allowed(on_parameter)
#define __out_bcount(size)                            __allowed(on_parameter)
#define __out_xcount(size)                            __allowed(on_parameter)
#define __out_ecount_part(size,len)                   __allowed(on_parameter)
#define __out_bcount_part(size,len)                   __allowed(on_parameter)
#define __out_xcount_part(size,len)                   __allowed(on_parameter)
#define __out_ecount_full(size)                       __allowed(on_parameter)
#define __out_bcount_full(size)                       __allowed(on_parameter)
#define __out_xcount_full(size)                       __allowed(on_parameter)
#define __out_z				              __allowed(on_parameter)
#define __out_ecount_z(size)                          __allowed(on_parameter)
#define __out_bcount_z(size)                          __allowed(on_parameter)
#define __inout                                       __allowed(on_parameter)
#define __inout_ecount(size)                          __allowed(on_parameter)
#define __inout_bcount(size)                          __allowed(on_parameter)
#define __inout_xcount(size)                          __allowed(on_parameter)
#define __inout_ecount_part(size,len)                 __allowed(on_parameter)
#define __inout_bcount_part(size,len)                 __allowed(on_parameter)
#define __inout_xcount_part(size,len)                 __allowed(on_parameter)
#define __inout_ecount_full(size)                     __allowed(on_parameter)
#define __inout_bcount_full(size)                     __allowed(on_parameter)
#define __inout_xcount_full(size)                     __allowed(on_parameter)
#define __inout_z                                     __allowed(on_parameter)
#define __inout_ecount_z(size)                        __allowed(on_parameter)
#define __inout_bcount_z(size)                        __allowed(on_parameter)
#define __ecount_opt(size)                            __allowed(on_parameter)
#define __bcount_opt(size)                            __allowed(on_parameter)
#define __xcount_opt(size)                            __allowed(on_parameter)
#define __in_opt                                      __allowed(on_parameter)
#define __in_ecount_opt(size)                         __allowed(on_parameter)
#define __in_bcount_opt(size)                         __allowed(on_parameter)
#define __in_z_opt                                    __allowed(on_parameter)
#define __in_ecount_z_opt(size)                       __allowed(on_parameter)
#define __in_bcount_z_opt(size)                       __allowed(on_parameter)
#define __in_xcount_opt(size)                         __allowed(on_parameter)
#define __out_opt                                     __allowed(on_parameter)
#define __out_ecount_opt(size)                        __allowed(on_parameter)
#define __out_bcount_opt(size)                        __allowed(on_parameter)
#define __out_xcount_opt(size)                        __allowed(on_parameter)
#define __out_ecount_part_opt(size,len)               __allowed(on_parameter)
#define __out_bcount_part_opt(size,len)               __allowed(on_parameter)
#define __out_xcount_part_opt(size,len)               __allowed(on_parameter)
#define __out_ecount_full_opt(size)                   __allowed(on_parameter)
#define __out_bcount_full_opt(size)                   __allowed(on_parameter)
#define __out_xcount_full_opt(size)                   __allowed(on_parameter)
#define __out_ecount_z_opt(size)                      __allowed(on_parameter)
#define __out_bcount_z_opt(size)                      __allowed(on_parameter)
#define __inout_opt                                   __allowed(on_parameter)
#define __inout_ecount_opt(size)                      __allowed(on_parameter)
#define __inout_bcount_opt(size)                      __allowed(on_parameter)
#define __inout_xcount_opt(size)                      __allowed(on_parameter)
#define __inout_ecount_part_opt(size,len)             __allowed(on_parameter)
#define __inout_bcount_part_opt(size,len)             __allowed(on_parameter)
#define __inout_xcount_part_opt(size,len)             __allowed(on_parameter)
#define __inout_ecount_full_opt(size)                 __allowed(on_parameter)
#define __inout_bcount_full_opt(size)                 __allowed(on_parameter)
#define __inout_xcount_full_opt(size)                 __allowed(on_parameter)
#define __inout_z_opt                                 __allowed(on_parameter)
#define __inout_ecount_z_opt(size)                    __allowed(on_parameter)
#define __inout_ecount_z_opt(size)                    __allowed(on_parameter)
#define __inout_bcount_z_opt(size)                    __allowed(on_parameter)
#define __deref_ecount(size)                          __allowed(on_parameter)
#define __deref_bcount(size)                          __allowed(on_parameter)
#define __deref_xcount(size)                          __allowed(on_parameter)
#define __deref_in                                    __allowed(on_parameter)
#define __deref_in_ecount(size)                       __allowed(on_parameter)
#define __deref_in_bcount(size)                       __allowed(on_parameter)
#define __deref_in_xcount(size)                       __allowed(on_parameter)
#define __deref_out                                   __allowed(on_parameter)
#define __deref_out_ecount(size)                      __allowed(on_parameter)
#define __deref_out_bcount(size)                      __allowed(on_parameter)
#define __deref_out_xcount(size)                      __allowed(on_parameter)
#define __deref_out_ecount_part(size,len)             __allowed(on_parameter)
#define __deref_out_bcount_part(size,len)             __allowed(on_parameter)
#define __deref_out_xcount_part(size,len)             __allowed(on_parameter)
#define __deref_out_ecount_full(size)                 __allowed(on_parameter)
#define __deref_out_bcount_full(size)                 __allowed(on_parameter)
#define __deref_out_xcount_full(size)                 __allowed(on_parameter)
#define __deref_out_z                                 __allowed(on_parameter)
#define __deref_out_ecount_z(size)                    __allowed(on_parameter)
#define __deref_out_bcount_z(size)                    __allowed(on_parameter)
#define __deref_out_xcount(size)                      __allowed(on_parameter)
#define __deref_inout                                 __allowed(on_parameter)
#define __deref_inout_ecount(size)                    __allowed(on_parameter)
#define __deref_inout_bcount(size)                    __allowed(on_parameter)
#define __deref_inout_xcount(size)                    __allowed(on_parameter)
#define __deref_inout_ecount_part(size,len)           __allowed(on_parameter)
#define __deref_inout_bcount_part(size,len)           __allowed(on_parameter)
#define __deref_inout_xcount_part(size,len)           __allowed(on_parameter)
#define __deref_inout_ecount_full(size)               __allowed(on_parameter)
#define __deref_inout_bcount_full(size)               __allowed(on_parameter)
#define __deref_inout_xcount_full(size)               __allowed(on_parameter)
#define __deref_inout_z                               __allowed(on_parameter)
#define __deref_inout_ecount_z(size)                  __allowed(on_parameter)
#define __deref_inout_bcount_z(size)                  __allowed(on_parameter)
#define __deref_ecount_opt(size)                      __allowed(on_parameter)
#define __deref_bcount_opt(size)                      __allowed(on_parameter)
#define __deref_xcount_opt(size)                      __allowed(on_parameter)
#define __deref_in_opt                                __allowed(on_parameter)
#define __deref_in_ecount_opt(size)                   __allowed(on_parameter)
#define __deref_in_bcount_opt(size)                   __allowed(on_parameter)
#define __deref_in_xcount_opt(size)                   __allowed(on_parameter)
#define __deref_out_opt                               __allowed(on_parameter)
#define __deref_out_ecount_opt(size)                  __allowed(on_parameter)
#define __deref_out_bcount_opt(size)                  __allowed(on_parameter)
#define __deref_out_xcount_opt(size)                  __allowed(on_parameter)
#define __deref_out_ecount_part_opt(size,len)         __allowed(on_parameter)
#define __deref_out_bcount_part_opt(size,len)         __allowed(on_parameter)
#define __deref_out_xcount_part_opt(size,len)         __allowed(on_parameter)
#define __deref_out_ecount_full_opt(size)             __allowed(on_parameter)
#define __deref_out_bcount_full_opt(size)             __allowed(on_parameter)
#define __deref_out_xcount_full_opt(size)             __allowed(on_parameter)
#define __deref_out_z_opt                             __allowed(on_parameter)
#define __deref_out_ecount_z_opt(size)                __allowed(on_parameter)
#define __deref_out_bcount_z_opt(size)                __allowed(on_parameter)
#define __deref_inout_opt                             __allowed(on_parameter)
#define __deref_inout_ecount_opt(size)                __allowed(on_parameter)
#define __deref_inout_bcount_opt(size)                __allowed(on_parameter)
#define __deref_inout_xcount_opt(size)                __allowed(on_parameter)
#define __deref_inout_ecount_part_opt(size,len)       __allowed(on_parameter)
#define __deref_inout_bcount_part_opt(size,len)       __allowed(on_parameter)
#define __deref_inout_xcount_part_opt(size,len)       __allowed(on_parameter)
#define __deref_inout_ecount_full_opt(size)           __allowed(on_parameter)
#define __deref_inout_bcount_full_opt(size)           __allowed(on_parameter)
#define __deref_inout_xcount_full_opt(size)           __allowed(on_parameter)
#define __deref_inout_z_opt                           __allowed(on_parameter)
#define __deref_inout_ecount_z_opt(size)              __allowed(on_parameter)
#define __deref_inout_bcount_z_opt(size)              __allowed(on_parameter)
#define __deref_opt_ecount(size)                      __allowed(on_parameter)
#define __deref_opt_bcount(size)                      __allowed(on_parameter)
#define __deref_opt_xcount(size)                      __allowed(on_parameter)
#define __deref_opt_in                                __allowed(on_parameter)
#define __deref_opt_in_ecount(size)                   __allowed(on_parameter)
#define __deref_opt_in_bcount(size)                   __allowed(on_parameter)
#define __deref_opt_in_xcount(size)                   __allowed(on_parameter)
#define __deref_opt_out                               __allowed(on_parameter)
#define __deref_opt_out_ecount(size)                  __allowed(on_parameter)
#define __deref_opt_out_bcount(size)                  __allowed(on_parameter)
#define __deref_opt_out_xcount(size)                  __allowed(on_parameter)
#define __deref_opt_out_ecount_part(size,len)         __allowed(on_parameter)
#define __deref_opt_out_bcount_part(size,len)         __allowed(on_parameter)
#define __deref_opt_out_xcount_part(size,len)         __allowed(on_parameter)
#define __deref_opt_out_ecount_full(size)             __allowed(on_parameter)
#define __deref_opt_out_bcount_full(size)             __allowed(on_parameter)
#define __deref_opt_out_xcount_full(size)             __allowed(on_parameter)
#define __deref_opt_inout                             __allowed(on_parameter)
#define __deref_opt_inout_ecount(size)                __allowed(on_parameter)
#define __deref_opt_inout_bcount(size)                __allowed(on_parameter)
#define __deref_opt_inout_xcount(size)                __allowed(on_parameter)
#define __deref_opt_inout_ecount_part(size,len)       __allowed(on_parameter)
#define __deref_opt_inout_bcount_part(size,len)       __allowed(on_parameter)
#define __deref_opt_inout_xcount_part(size,len)       __allowed(on_parameter)
#define __deref_opt_inout_ecount_full(size)           __allowed(on_parameter)
#define __deref_opt_inout_bcount_full(size)           __allowed(on_parameter)
#define __deref_opt_inout_xcount_full(size)           __allowed(on_parameter)
#define __deref_opt_inout_z                           __allowed(on_parameter)
#define __deref_opt_inout_ecount_z(size)              __allowed(on_parameter)
#define __deref_opt_inout_bcount_z(size)              __allowed(on_parameter)
#define __deref_opt_ecount_opt(size)                  __allowed(on_parameter)
#define __deref_opt_bcount_opt(size)                  __allowed(on_parameter)
#define __deref_opt_xcount_opt(size)                  __allowed(on_parameter)
#define __deref_opt_in_opt                            __allowed(on_parameter)
#define __deref_opt_in_ecount_opt(size)               __allowed(on_parameter)
#define __deref_opt_in_bcount_opt(size)               __allowed(on_parameter)
#define __deref_opt_in_xcount_opt(size)               __allowed(on_parameter)
#define __deref_opt_out_opt                           __allowed(on_parameter)
#define __deref_opt_out_ecount_opt(size)              __allowed(on_parameter)
#define __deref_opt_out_bcount_opt(size)              __allowed(on_parameter)
#define __deref_opt_out_xcount_opt(size)              __allowed(on_parameter)
#define __deref_opt_out_ecount_part_opt(size,len)     __allowed(on_parameter)
#define __deref_opt_out_bcount_part_opt(size,len)     __allowed(on_parameter)
#define __deref_opt_out_xcount_part_opt(size,len)     __allowed(on_parameter)
#define __deref_opt_out_ecount_full_opt(size)         __allowed(on_parameter)
#define __deref_opt_out_bcount_full_opt(size)         __allowed(on_parameter)
#define __deref_opt_out_xcount_full_opt(size)         __allowed(on_parameter)  
#define __deref_opt_out_z_opt                         __allowed(on_parameter)
#define __deref_opt_out_ecount_z_opt(size)            __allowed(on_parameter)
#define __deref_opt_out_bcount_z_opt(size)            __allowed(on_parameter)
#define __deref_opt_inout_opt                         __allowed(on_parameter)
#define __deref_opt_inout_ecount_opt(size)            __allowed(on_parameter)
#define __deref_opt_inout_bcount_opt(size)            __allowed(on_parameter)
#define __deref_opt_inout_xcount_opt(size)            __allowed(on_parameter)
#define __deref_opt_inout_ecount_part_opt(size,len)   __allowed(on_parameter) 
#define __deref_opt_inout_bcount_part_opt(size,len)   __allowed(on_parameter)
#define __deref_opt_inout_xcount_part_opt(size,len)   __allowed(on_parameter)
#define __deref_opt_inout_ecount_full_opt(size)       __allowed(on_parameter)
#define __deref_opt_inout_bcount_full_opt(size)       __allowed(on_parameter)
#define __deref_opt_inout_xcount_full_opt(size)       __allowed(on_parameter)
#define __deref_opt_inout_z_opt                       __allowed(on_parameter)
#define __deref_opt_inout_ecount_z_opt(size)          __allowed(on_parameter)
#define __deref_opt_inout_bcount_z_opt(size)          __allowed(on_parameter)
/************************************************************************
*  Advanced Annotations
* 
*  Advanced annotations describe behavior that is not expressible with the
*  regular buffer macros. These may be used either to annotate buffer
*  parameters that involve complex or conditional behavior, or to enrich
*  existing annotations with additional information.
* 
*  __success(expr) T f() : <expr> indicates whether function f succeeded or
*  not. If <expr> is true at exit, all the function's guarantees (as given
*  by other annotations) must hold. If <expr> is false at exit, the caller
*  should not expect any of the function's guarantees to hold. If not used,
*  the function must always satisfy its guarantees. Added automatically to
*  functions that indicate success in standard ways, such as by returning an
*  HRESULT.
* 
*  __out_awcount(expr, size) T *p : Pointer p is a buffer whose size may be
*  given in either bytes or elements. If <expr> is true, this acts like
*  __out_bcount. If <expr> is false, this acts like __out_ecount. This
*  should only be used to annotate old APIs.
* 
*  __in_awcount(expr, size) T* p : Pointer p is a buffer whose size may be given
*  in either bytes or elements. If <expr> is true, this acts like
*  __in_bcount. If <expr> is false, this acts like __in_ecount. This should
*  only be used to annotate old APIs.
* 
*  __nullterminated T* p : Pointer p is a buffer that may be read or written
*  up to and including the first '\0' character or pointer. May be used on
*  typedefs, which marks valid (properly initialized) instances of that type
*  as being null-terminated.
* 
*  __nullnullterminated T* p : Pointer p is a buffer that may be read or
*  written up to and including the first sequence of two '\0' characters or
*  pointers. May be used on typedefs, which marks valid instances of that
*  type as being double-null terminated.
* 
*  __reserved T v : Value v must be 0/NULL, reserved for future use.
* 
*  __checkReturn T f(); : Return value of f must not be ignored by callers
*  of this function.
* 
*  __typefix(ctype) T v : Value v should be treated as an instance of ctype,
*  rather than its declared type when considering validity.
* 
*  __override T f(); : Specify C#-style 'override' behaviour for overriding
*  virtual methods.
* 
*  __callback T f(); : Function f can be used as a function pointer.
* 
*  __format_string T p : Pointer p is a string that contains % markers in
*  the style of printf.
* 
*  __blocksOn(resource) f(); : Function f blocks on the resource 'resource'.
* 
*  __fallthrough : Annotates switch statement labels where fall-through is
*  desired, to distinguish from forgotten break statements.
* 
*  __range(low_bnd, up_bnd) int f(): The return from the function "f" must
*  be in the inclusive numeric range [low_bnd, up_bnd].
*
*  __in_range(low_bnd, up_bnd) int i : Precondition that integer i must be
*  in the inclusive numeric range [low_bnd, up_bnd].
* 
*  __out_range(low_bnd, up_bnd) int i : Postcondition that integer i must be
*  in the inclusive numeric range [low_bnd, up_bnd].
* 
*  __deref_in_range(low_bnd, up_bnd) int* pi : Precondition that integer *pi
*  must be in the inclusive numeric range [low_bnd, up_bnd].
*
*  __deref_out_range(low_bnd, up_bnd) int* pi : Postcondition that integer
*  *pi must be in the inclusive numeric range [low_bnd, up_bnd].
*
*  The first argument of a range macro may also be a C relational operator
*  (<,>,!=, ==, <=, >=).
*  
*  __range(rel_op, j) int f(): Postcondition that "f() rel_op j" must be
*  true.  Note that j may be a expression known only at runtime.
*
*  __in_range(rel_op, j) int i : Precondition that "i rel_op j" must be
*  true.  Note that j may be a expression known only at runtime.
* 
*  __out_range(rel_op, j) int i : Postcondition that integer "i rel_op j"
*  must be true.  Note that j may be a expression known only at runtime.
* 
*  __deref_in_range(rel_op, j) int *pi : Precondition that "*pi rel_op j"
*  must be true.  Note that j may be a expression known only at runtime.
*
*  __deref_out_range(rel_op, j) int *pi : Postcondition that "*pi rel_op j"
*  must be true.  Note that j may be a expression known only at runtime.
*
*  __in_bound int i : Precondition that integer i must be bound, but the
*  exact range can't be specified at compile time.  __in_range should be
*  used if the range can be explicitly stated.
*
*  __out_bound int i : Postcondition that integer i must be bound, but the
*  exact range can't be specified at compile time.  __out_range should be
*  used if the range can be explicitly stated.
* 
*  __deref_out_bound int pi : Postcondition that integer *pi must be bound,
*  but the exact range can't be specified at compile time.
*  __deref_out_range should be used if the range can be explicitly stated.
* 
*  __assume_bound(expr); : Assume that the expression is bound to some known
*  range. This can be used to suppress integer overflow warnings on integral
*  expressions that are known to be bound due to reasons not explicit in the
*  code. Use as a statement in the body of a function.
* 
*  __allocator void f(): Function allocates memory using an integral size
*  argument
*
*  ----------------------------------------------------------------------------
*  Advanced Annotation Examples
* 
*  __success(return == TRUE) LWSTDAPI_(BOOL) 
*  PathCanonicalizeA(__out_ecount(MAX_PATH) LPSTR pszBuf, LPCSTR pszPath);
*  //  pszBuf is only guaranteed to be null-terminated when TRUE is returned.
* 
*  // Initialized LPWSTRs are null-terminated strings.
*  typedef __nullterminated WCHAR* LPWSTR;
* 
*  __out_ecount(cch) __typefix(LPWSTR) void *psz;
*  // psz is a buffer parameter which will be a null-terminated WCHAR string 
*  // at exit, and which initially contains cch WCHARs.
* 
************************************************************************/
#define __success(expr)          __allowed(on_function_or_typedecl)
#define __out_awcount(expr,size) __allowed(on_parameter) 
#define __in_awcount(expr,size)  __allowed(on_parameter)   
#define __nullterminated         __allowed(on_typedecl)
#define __nullnullterminated     __allowed(on_typedecl)
#define __reserved               __allowed(on_parameter)
#define __checkReturn            __allowed(on_function)
#define __typefix(ctype)         __allowed(on_parameter_or_return) 
#define __override               __allowed(on_function) 
#define __callback               __allowed(on_function) 
#define __format_string          __allowed(on_parameter_or_return) 
#define __blocksOn(resource)     __allowed(on_function) 
#define __fallthrough            __allowed(as_statement)
#define __range(lb,ub)           __allowed(on_return) 
#define __in_range(lb,ub)        __allowed(on_parameter) 
#define __out_range(lb,ub)       __allowed(on_parameter) 
#define __deref_in_range(lb,ub)  __allowed(on_parameter) 
#define __deref_out_range(lb,ub) __allowed(on_parameter) 
#define __field_range(lb,ub)     __allowed(on_field)
#define __bound                  __allowed(on_return) 
#define __in_bound               __allowed(on_parameter) 
#define __out_bound              __allowed(on_parameter) 
#define __deref_out_bound        __allowed(on_parameter) 
#define __assume_bound(i)        __allowed(as_statement_with_arg(i))
#define __allocator              __allowed(on_function) 
/*************************************************************************** 
* Expert Macros
***************************************************************************/
#define __null                  __allowed(on_typedecl)
#define __notnull               __allowed(on_typedecl)
#define __maybenull             __allowed(on_typedecl)
#define __exceptthat            __allowed(on_typedecl)
/*************************************************************************** 
* Macros to classify fields of structures.
*                          Structure Annotations
*
*   The buffer annotations are a convenient way of describing
*   relationships between buffers and their size on a function by
*   function basis. Very often struct or class data members have similar
*   invariants, which can be expressed directly on the type.
*
*   Similar to our buffer annotations we can summarize all the various
*   structure annotations by one choosing an element from each column of
*   this table to build a composite annotation.
*
*           +--------------------------------------------------+
*           | Selector |  Units  |    Size/Init     | Optional |
*           |----------+---------+------------------+----------|
*           | __field  | _ecount | (size)           | empty    |
*           |----------+---------+------------------+----------|
*           | __struct | _bcount | _full(size)      | _opt     |
*           |----------+---------+------------------+----------|
*           |          | _xcount | _part(size,init) |          |
*           +--------------------------------------------------+
*
*   Note that empty represents the empty string. Sometime arguments need
*   to be "floated" to the left to give us a valid annotation name. For
*   example the naive combination __field_ecount(size)_opt is actually
*   written as __field_ecount_opt(size). Not all possible combinations
*   are currently supported or sensible. See specstrings_strict.h for
*   the currently supported set. Those that are supported are documented
*   below.
*
*Summary of Elements
*
*   Selector
*
*                __field
*                        The annotation should only be placed in front
*                        of data members of structures and classes. The
*                        data members are pointers to a block of data.
*                        The annotations describe properties about the
*                        size of the block of data. This can be used for
*
*                __struct
*                        The annotation should only be placed at the
*                        beginning of the definition of a structure or
*                        class. These annotations are used when a struct
*                        or class is used as a "header" that is
*                        allocated inline with a block of data and there
*                        is no apparent field that represents the tail
*                        end of the structure.
*
*   Units
*
*                _ecount
*                        All size and initialization values are in terms
*                        of elements of the appropriate type
*
*                _bcount
*                        All size and initialization values are in terms
*                        of raw byte sizes.
*
*                _xcount
*                        The size or initialization values cannot be
*                        properly expressed as a simple byte or element
*                        count, and instead a place holder is used to
*                        document the relationship.
*
*   Size/Init
*           All the size/init expressions can contain references to
*           other fields in the struct or class.
*
*                (size)
*                        The size of the buffer is determined by the
*                        expression size. Unless, the type of the buffer
*                        provides more information nothing is know about
*                        how much of this data is initialized. For
*                        example, if the data member happens to be a
*                        string type such as LPSTR. It is assumed that
*                        the data is initialized to the first '\0'.
*
*                _full(size)
*                        The size of the buffer is determined by the
*                        expression size and all the data in the buffer
*                        is guaranteed to be initialized.
*
*                _part(size,init)
*                        The size of the buffer is determined by the
*                        expression size and all the data in the buffer
*                        is guaranteed to be initialized up to init
*                        elements or bytes.
*
*   Optional
*
*                empty
*                        The pointer to the block of memory is never
*                        NULL
*
*                _opt
*                        The pointer to the block of memory is may be
*                        NULL
*
*     
*   // Basic Usage of Struct Annotations                         
*   #include <stdio.h>                                           
*   #include <stdlib.h>                                          
*   struct buf_s {                                               
*    int sz;                                                     
*    __field_bcount_full(sz)                                     
*    char *buf;                                                  
*   };                                                           
*   void InitBuf(__out struct *buf_s b,int sz) {                 
*        b->buf = calloc(sz,sizeof(char));                       
*        b->sz = sz;                                             
*   }                                                            
*   void WriteBuf(__in FILE *fp,__in struct *buf_s b) {          
*     fwrite(b->buf,b->sz,sizeof(char),fp);                      
*   }                                                            
*   void ReadBuf(__in FILE *fp,__inout struct *buf_s b) {        
*     fread(b->buf,b->sz,sizeof(char),fp);                       
*   }                                                            
*                                                                 
*                                                                 
*                                                                 
*   // Inline Allocated Buffer                                   
*   struct buf_s {                                               
*    int sz;                                                     
*    __field_bcount(sz)                                          
*    char buf[1];                                                
*   };                                                           
*   void WriteBuf(__in FILE *fp,__in struct *buf_s b) {          
*     fwrite(&(b->buf),b->sz,sizeof(char),fp);                   
*   }                                                            
*   void ReadBuf(__in FILE *fp,__inout struct *buf_s b) {        
*     fread(&(b->buf),b->sz,sizeof(char),fp);                    
*   }                                                            
*                                                                 
*                                                                 
*                                                                 
*   // Embedded Header Structure                                 
*   __struct_bcount(sz)                                          
*   struct buf_s {                                               
*    int sz;                                                     
*   };                                                           
*   void WriteBuf(__in FILE *fp,__in struct *buf_s b) {          
*     fwrite(&b,b->sz,sizeof(char),fp);                          
*   }                                                            
*   void ReadBuf(__in FILE *fp,__inout struct *buf_s b) {        
*     fread(&b,b->sz,sizeof(char),fp);                           
*   }                                                            
*
*
****************************************************************************/
#define __field_ecount(size)               __allowed(on_field)
#define __field_bcount(size)               __allowed(on_field)
#define __field_xcount(size)               __allowed(on_field)
#define __field_ecount_opt(size)           __allowed(on_field)
#define __field_bcount_opt(size)           __allowed(on_field)
#define __field_xcount_opt(size)           __allowed(on_field)
#define __field_ecount_part(size,init)     __allowed(on_field)
#define __field_bcount_part(size,init)     __allowed(on_field)
#define __field_xcount_part(size,init)     __allowed(on_field)
#define __field_ecount_part_opt(size,init) __allowed(on_field)
#define __field_bcount_part_opt(size,init) __allowed(on_field)
#define __field_xcount_part_opt(size,init) __allowed(on_field)
#define __field_ecount_full(size)          __allowed(on_field)
#define __field_bcount_full(size)          __allowed(on_field)
#define __field_xcount_full(size)          __allowed(on_field)
#define __field_ecount_full_opt(size)      __allowed(on_field)
#define __field_bcount_full_opt(size)      __allowed(on_field) 
#define __field_xcount_full_opt(size)      __allowed(on_field)
#define __struct_bcount(size)              __allowed(on_struct) 
#define __struct_xcount(size)              __allowed(on_struct) 

/*************************************************************************** 
* Macros to classify the entrypoints and indicate their category.
*
* Pre-defined control point categories include: RPC, KERNEL, GDI.
*
* Pre-defined control point macros include:
*  __rpc_entry, __kernel_entry, __gdi_entry.
***************************************************************************/
#define __control_entrypoint(category)     __allowed(on_function) 
#define __rpc_entry                        __allowed(on_function) 
#define __kernel_entry                     __allowed(on_function) 
#define __gdi_entry                        __allowed(on_function)  

/*************************************************************************** 
* Macros to track untrusted data and their validation. The list of untrusted
* sources include:
*
* FILE                     - File reading stream or API
* NETWORK                  - Socket readers
* INTERNET                 - WinInet and WinHttp readers
* USER_REGISTRY            - HKCU portions of the registry
* USER_MODE                - Parameters to kernel entry points
* RPC                      - Parameters to RPC entry points 
* DRIVER                   - Device driver 
***************************************************************************/
#define __in_data_source(src_sym)       __allowed(on_parameter) 
#define __out_data_source(src_sym)      __allowed(on_parameter) 
#define __field_data_source(src_sym)    __allowed(on_field)
#define __this_out_data_source(src_syn) __allowed(on_function)

/************************************************************************** 
* Macros to tag file parsing code. Predefined formats include:
*  PNG                     - Portable Network Graphics
*  JPEG                    - Joint Photographic Experts Group
*  BMP                     - Bitmap
*  RC_BMP                  - Resource bitmap
*  WMF                     - Windows Metafile
*  EMF                     - Windows Enhanced Metafile
*  GIF                     - Graphics Interchange Format
*  MIME_TYPE               - MIME type from header tokens
*  MAIL_MONIKER            - MAIL information refered by URL moniker
*  HTML                    - HyperText Markup Language
*  WMPHOTO                 - Windows media photo
*  OE_VCARD                - Outlook Express virtual card
*  OE_CONTACT              - Outlook Express contact
*  MIDI                    - Musical Instrument Digital Interface
*  LDIF                    - LDAP Data Interchange Format
*  AVI                     - Audio Visual Interchange
*  ACM                     - Audio Compression Manager
**************************************************************************/
#define __out_validated(filetype_sym)         __allowed(on_parameter) 
#define __this_out_validated(filetype_sym)    __allowed(on_function)   
#define __file_parser(filetype_sym)           __allowed(on_function) 
#define __file_parser_class(filetype_sym)     __allowed(on_struct)  
#define __file_parser_library(filetype_sym)   __allowed(as_global_decl)  

/*************************************************************************** 
* Macros to track the code content in the file. The type of code
* contents currently tracked:
*
* NDIS_DRIVER                   - NDIS Device driver 
***************************************************************************/
#define __source_code_content(codetype_sym)     __allowed(as_global_decl) 

/*************************************************************************** 
* Macros to track the code content in the class. The type of code
* contents currently tracked:
*
* DCOM                          - Class implementing DCOM
***************************************************************************/
#define __class_code_content(codetype_sym)    __allowed(on_struct) 

/*************************************************************************
* Macros to tag encoded function pointers
**************************************************************************/
#define __encoded_pointer                 
#define __encoded_array                   
#define __field_encoded_pointer           __allowed(on_field)
#define __field_encoded_array             __allowed(on_field)

#define __transfer(formal)                __allowed(on_parameter_or_return) 
#define __assume_validated(exp)           __allowed(as_statement_with_arg(exp))

/************************************************************************* 
* __analysis_assume(expr) : Expert macro use only when directed. Use this to
* tell static analysis tools like PREfix and PREfast about a non-coded
* assumption that you wish the tools to assume. The assumption will be
* understood by those tools. By default there is no dynamic checking or
* static checking of the assumption in any build.
*
* To obtain dynamic checking wrap this macro in your local version of a debug
* assert.
* Please do not put function calls in the expression because this is not
* supported by all tools:
*  __analysis_assume(GetObject () != NULL); // DO NOT DO THIS
*
*************************************************************************/
#define __analysis_assume(expr) __allowed(as_statement_with_arg(expr))
#define __analysis_assert(expr) __allowed(as_statement_with_arg(expr))

/************************************************************************* 
* __analysis_hint(hint_sym) : Expert macro use only when
* directed. Use this to influence certain analysis heuristics
* used by the tools. These hints do not describe the semantics
* of functions but simply direct the tools to act in a certain
* way.
*
* Current hints that are supported are:
*
* INLINE   - inline this function during analysis overrides any
*            default heuristics 
* NOINLINE - do not inline this function during analysis overrides 
*            and default heuristics
*************************************************************************/
#define __analysis_hint(hint) __allowed(on_function)

/************************************************************************* 
* Macros to encode abstract properties of values. Used by SALadt.h
*************************************************************************/
#define __type_has_adt_prop(adt,prop)     __allowed(on_typdecl)
#define __out_has_adt_prop(adt,prop)      __allowed(on_parameter)
#define __out_not_has_adt_prop(adt,prop)  __allowed(on_parameter)
#define __out_transfer_adt_prop(arg)      __allowed(on_parameter)
#define __out_has_type_adt_props(typ)     __allowed(on_parameter)
#define __assume_ValidCompNameA(expr)     __allowed(as_statement_with_arg(expr))
#define __assume_ValidCompNameW(expr)     __allowed(as_statement_with_arg(expr))

/************************************************************************* 
* Macros used by Prefast for Drivers 
* 
*  __possibly_notnulltermiated :
*
*  Used for return values of parameters or functions that do not
*  guarantee nullterimination in all cases.
*
*************************************************************************/
#define __possibly_notnulltermiated     __allowed(on_parameter_or_return)

/************************************************************************* 
* Advanced macros
* 
*  __volatile 
* The __volatile annotation identifies a global variable or
* structure field that: 
*   1) is not declared volatile; 
*   2) is accessed concurrently by multiple threads.
*
* The __deref_volatile annotation identifies a global variable
* or structure field that stores a pointer to some data that:
*   1) is not declared volatile; 
*   2) is accessed concurrently by multiple threads.
*
* Prefast uses these annotations to find patterns of code that
* may result in unexpected re-fetching of the global variable
* into a local variable.
*
* We also provide two complimentary annotations __nonvolatile
* and __deref_nonvolatile that could be used to suppress Prefast
*
* re-fetching warnings on variables that are known either:
*   1) not to be in danger of being re-fetched or,
*   2) not to lead to incorrect results if they are re-fetched
*
*************************************************************************/
#define __volatile                       __allowed(on_global_or_field)
#define __deref_volatile                 __allowed(on_global_or_field)
#define __nonvolatile                    __allowed(on_global_or_field)
#define __deref_nonvolatile              __allowed(on_global_or_field)

/************************************************************************* 
* Macros deprecated with strict level greater then 1.
**************************************************************************/
#if (__SPECSTRINGS_STRICT_LEVEL > 1)
/* Must come before macro defintions */
#pragma deprecated(__in_nz)
#pragma deprecated(__in_ecount_nz)
#pragma deprecated(__in_bcount_nz)
#pragma deprecated(__out_nz)
#pragma deprecated(__out_nz_opt)
#pragma deprecated(__out_ecount_nz)
#pragma deprecated(__out_bcount_nz)
#pragma deprecated(__inout_nz)
#pragma deprecated(__inout_ecount_nz)
#pragma deprecated(__inout_bcount_nz)
#pragma deprecated(__in_nz_opt)          
#pragma deprecated(__in_ecount_nz_opt)
#pragma deprecated(__in_bcount_nz_opt)
#pragma deprecated(__out_ecount_nz_opt)
#pragma deprecated(__out_bcount_nz_opt)
#pragma deprecated(__inout_nz_opt)       
#pragma deprecated(__inout_ecount_nz_opt)
#pragma deprecated(__inout_bcount_nz_opt)
#pragma deprecated(__deref_out_nz)                 
#pragma deprecated(__deref_out_ecount_nz)
#pragma deprecated(__deref_out_bcount_nz)
#pragma deprecated(__deref_inout_nz)               
#pragma deprecated(__deref_inout_ecount_nz)
#pragma deprecated(__deref_inout_bcount_nz)
#pragma deprecated(__deref_out_nz_opt)             
#pragma deprecated(__deref_out_ecount_nz_opt)
#pragma deprecated(__deref_out_bcount_nz_opt)
#pragma deprecated(__deref_inout_nz_opt)           
#pragma deprecated(__deref_inout_ecount_nz_opt)
#pragma deprecated(__deref_inout_bcount_nz_opt)
#pragma deprecated(__deref_opt_inout_nz)           
#pragma deprecated(__deref_opt_inout_ecount_nz)
#pragma deprecated(__deref_opt_inout_bcount_nz)
#pragma deprecated(__deref_opt_out_nz_opt)         
#pragma deprecated(__deref_opt_out_ecount_nz_opt)
#pragma deprecated(__deref_opt_out_bcount_nz_opt)
#pragma deprecated(__deref_opt_inout_nz_opt)       
#pragma deprecated(__deref_opt_inout_ecount_nz_opt)
#pragma deprecated(__deref_opt_inout_bcount_nz_opt)
#pragma deprecated(__deref)
#pragma deprecated(__pre)
#pragma deprecated(__post)
#pragma deprecated(__readableTo)
#pragma deprecated(__writableTo)
#pragma deprecated(__maybevalid)
#pragma deprecated(__data_entrypoint)
#pragma deprecated(__inexpressible_readableTo)
#pragma deprecated(__readonly)
#pragma deprecated(__byte_writableTo)
#pragma deprecated(__byte_readableTo)
#pragma deprecated(__elem_readableTo)
#pragma deprecated(__elem_writableTo)
#pragma deprecated(__valid)
#pragma deprecated(__notvalid)
#pragma deprecated(__refparam)
#pragma deprecated(__precond)
#endif
/* Define soon to be deprecated macros to nops. */
#define __in_nz                                       
#define __in_ecount_nz(size)                          
#define __in_bcount_nz(size)                          
#define __out_nz                                      
#define __out_nz_opt                                  
#define __out_ecount_nz(size)                         
#define __out_bcount_nz(size)                         
#define __inout_nz                                    
#define __inout_ecount_nz(size)                       
#define __inout_bcount_nz(size)                       
#define __in_nz_opt                                   
#define __in_ecount_nz_opt(size)                      
#define __in_bcount_nz_opt(size)                      
#define __out_ecount_nz_opt(size)                     
#define __out_bcount_nz_opt(size)                     
#define __inout_nz_opt                                
#define __inout_ecount_nz_opt(size)                   
#define __inout_bcount_nz_opt(size)                   
#define __deref_out_nz                                
#define __deref_out_ecount_nz(size)                   
#define __deref_out_bcount_nz(size)                   
#define __deref_inout_nz                              
#define __deref_inout_ecount_nz(size)                 
#define __deref_inout_bcount_nz(size)                 
#define __deref_out_nz_opt                            
#define __deref_out_ecount_nz_opt(size)               
#define __deref_out_bcount_nz_opt(size)               
#define __deref_inout_nz_opt                          
#define __deref_inout_ecount_nz_opt(size)             
#define __deref_inout_bcount_nz_opt(size)             
#define __deref_opt_inout_nz                          
#define __deref_opt_inout_ecount_nz(size)             
#define __deref_opt_inout_bcount_nz(size)             
#define __deref_opt_out_nz_opt                        
#define __deref_opt_out_ecount_nz_opt(size)           
#define __deref_opt_out_bcount_nz_opt(size)           
#define __deref_opt_inout_nz_opt                      
#define __deref_opt_inout_ecount_nz_opt(size)         
#define __deref_opt_inout_bcount_nz_opt(size)         
#define __deref             
#define __pre               
#define __post              
#define __readableTo(count) 
#define __writableTo(count) 
#define __maybevalid        
#define __inexpressible_readableTo(string) 
#define __data_entrypoint(category)
#define __readonly
#define __byte_writableTo(count)
#define __byte_readableTo(count)
#define __elem_readableTo(count)
#define __elem_writableTo(count)
#define __valid
#define __notvalid
#define __refparam
#define __precond(condition)

/************************************************************************* 
* Definitions to force a compile error when macros are used improperly.
* Relies on VS 2005 source annotations.
*************************************************************************/
#define __allowed(p) __$allowed_##p
#define __$allowed_as_global_decl /* empty */
#define __$allowed_as_statement_with_arg(x) \
    __pragma(warning(push)) __pragma(warning(disable : 4548)) \
        do {__noop(x);} while((0,0) __pragma(warning(pop)) )
#define __$allowed_as_statement __$allowed_as_statement_with_arg(1)

/**************************************************************************
*  This should go away. It's only for __success which we should split into.
*  __success and __typdecl_sucess
***************************************************************************/
#define __$allowed_on_function_or_typedecl /* empty */
#if (__SPECSTRINGS_STRICT_LEVEL == 1) || (__SPECSTRINGS_STRICT_LEVEL == 2)
#define __$allowed_on_typedecl /* empty */
#define __$allowed_on_return /* empty */
#define __$allowed_on_parameter /* empty */
#define __$allowed_on_function /* empty */
#define __$allowed_on_struct /* empty */
#define __$allowed_on_field /* empty */
#define __$allowed_on_parameter_or_return /* empty */
#define __$allowed_on_global_or_field /* empty */
#elif __SPECSTRINGS_STRICT_LEVEL == 3
#define __$allowed_on_typedecl /* empty */
/* Define dummy source attributes. Still needs more testing */
#define __$allowed_on_return [returnvalue: OnReturnOnly]
#define __$allowed_on_parameter [OnParameterOnly]
#define __$allowed_on_function [method: OnFunctionOnly]
#define __$allowed_on_struct [OnStructOnly]
#define __$allowed_on_field [OnFieldOnly]
#define __$allowed_on_parameter_or_return [OnParameterOrReturnOnly] 
#define __$allowed_on_global_or_field /* empty */
#pragma push_macro( "DECL_SA" )
#pragma push_macro( "SA" )
#ifdef __cplusplus
#define SA(x) x
#define DECL_SA(name,loc) \
  [repeatable] \
  [source_annotation_attribute( loc )] \
  struct name##Attribute { name##Attribute(); const char* ignored; }; 
#else
#define SA(x) SA_##x
#define DECL_SA(name,loc) \
  [source_annotation_attribute( loc )] \
  struct name { const char* ignored; };\
  typedef struct name name;
#endif  /* #endif  __cplusplus */
DECL_SA(OnParameterOnly,SA(Parameter));
DECL_SA(OnReturnOnly,SA(ReturnValue));
DECL_SA(OnFunctionOnly,SA(Method));
DECL_SA(OnStructOnly,SA(Struct));
DECL_SA(OnFieldOnly,SA(Field));
DECL_SA(OnParameterOrReturnOnly,SA(Parameter) | SA(ReturnValue));
#pragma pop_macro( "SA" )
#pragma pop_macro( "DECL_SA" )
#endif 
#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\wm7\sfone7\Include\spseal.h ===
//
// Copyright (c) Microsoft Corporation.  All rights reserved.
//
//
// Use of this sample source code is subject to the terms of the Microsoft
// license agreement under which you licensed this sample source code. If
// you did not accept the terms of the license agreement, you are not
// authorized to use this sample source code. For the terms of the license,
// please see the license agreement between you and Microsoft or, if applicable,
// see the LICENSE.RTF on your install media or the root of your tools installation.
// THE SAMPLE SOURCE CODE IS PROVIDED "AS IS", WITH NO WARRANTIES OR INDEMNITIES.
//
/*++


Module Name: spseal.h

Purpose: Prototypes for security provider encryption routines.

--*/

#ifndef _SPSEAL_
#define _SPSEAL_

#ifdef __cplusplus
extern "C" {            /* Assume C declarations for C++ */
#endif	/* __cplusplus */
    
SECURITY_STATUS SEC_ENTRY
SealMessage(    PCtxtHandle         phContext,
                unsigned long       fQOP,
                PSecBufferDesc      pMessage,
                unsigned long       MessageSeqNo);

typedef SECURITY_STATUS
(SEC_ENTRY * SEAL_MESSAGE_FN)(
    PCtxtHandle, unsigned long, PSecBufferDesc, unsigned long);


SECURITY_STATUS SEC_ENTRY
UnsealMessage(  PCtxtHandle         phContext,
                PSecBufferDesc      pMessage,
                unsigned long       MessageSeqNo,
                unsigned long *     pfQOP);


typedef SECURITY_STATUS
(SEC_ENTRY * UNSEAL_MESSAGE_FN)(
    PCtxtHandle, PSecBufferDesc, unsigned long,
    unsigned long *);

#ifdef __cplusplus
}                       /* End of extern "C" { */
#endif	/* __cplusplus */

#endif // _SPSEAL_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\wm7\sfone7\Include\sqlce_err.h ===
//=============================================================================
// Microsoft SQL Server Compact (Version 3.5)
//
// Copyright (c)  Microsoft Corporation. All rights reserved.
//
// Component: Common files
// 
// File:  sqlce_err.h
//
// File Comments:   Native Engine Error Codes and Messages.
//=============================================================================

#ifndef __SQLCE_ERR_H__
#define __SQLCE_ERR_H__


//  HRESULTS
//  Values are 32 bit values layed out as follows:
//
//   3 3 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1
//   1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0
//  +---+-+-+-----------------------+-------------------------------+
//  |Sev|C|R|     Facility          |               Code            |
//  +---+-+-+-----------------------+-------------------------------+
//
//  where
//
//      Sev - is the severity code    
//
//          00 - Success
//          01 - Informational
//          10 - Warning
//          11 - Error
//
//      C - is the Customer code flag
//
//      R - is a reserved bit
//
//      Facility - is the facility code
//
//      Code - is the facility's status code
//
//-----------------------------------------------------------------------------

// ****************************************************************************
// NOTE: THIS FILE IS PARSED BY SQLDRIVER - PLEASE DO THE FOLLOWING:
// ****************************************************************************
//
// 1. DO NOT put an error (or description) on more than one line
// 2. DO NOT include " in the description - this screws things up 
// 3. Make sure the comment is at the end of a line and has a space 
//    before the text ("// ")
// 4. All Errors should document error parameters after the error string 
//    in this format [#,#,#,s,s,s]
//    [,,,,,] == no error parameters for this error. 
// 5. DO NOT REMOVE // DEAD error codes; Everytime you add a new error, make 
//    sure the number hasn't been used in the past; otherwise some user apps 
//    could break;
// 6. DO NOT exceed the maximum error message limit (CCH_MAX_ERRORMESSAGE)
//
// ****************************************************************************


//
// Maximum length of error message
//
#define CCH_MAX_ERRORMESSAGE 4096


// ----------------------------------------------------------------------------
// ----------------------------------------------------------------------------
//                              M I N O R   C O D E S
//
//  These are codes paired with a major code of E_FAIL for OLE/DB exposure.
//
//  SQL CE Range         (25000-30000)
//  OLEDB HRESULT Range  (3584-3805) i.e. (0x0E00-0x0EDD)
//
// ****************************************************************************
// NOTE : Our error number range is limited to the SQL Server error number 
//        range, Which is 25000 to 30000. DO NOT ADD ANY ERRORS ABOVE OR
//        BELOW THIS RANGE! 
//        Even though OLEDB HRESULT is of type LONG it is stored as USHORT 
//        in the error resource DLL string table. So this range (3584-3805) 
//        is also reserved!
// ****************************************************************************
//
//  SE Minor Range:             25000 -- 25499
//
//  QP Minor Range:             25500 -- 26999
//
//      25500 -- 25699  :   Compile errors
//      25700 -- 25899  :   Execute errors
//      25900 -- 26099  :   Expr errors
//      26100 -- 26299  :   Storage QP errors
//      26300 -- 26499  :   Core QP errors
//      26500 -- 26999  :   Reserved
//
//  OLEDB Minor Range:          27000 -- 27499
//
//  OLEDB HRESULT Range:        3584  -- 3805
//
//  Common Minor Range:         27500 -- 27749
//
//  Managed Code Minor Range:   27750 -- 27999
//
//  Connectivity Minor Range    28000 -- 30499
//
//      28000 -- 28249  :   Transport   
//      28250 -- 28499  :   Replication provider
//      28500 -- 28999  :   Client Agent
//      29000 -- 29499  :   Server Agent
//      29500 -- 29999  :   Message Protocol
//      30000 -- 30499  :   SQLCE Relay (obsolete component as of now)
//      30500 -- 39499  :   Unused
//      39500 -- 39999  :   Miscellaneous (setup, etc.) 
//
//
// ----------------------------------------------------------------------------
//
// Storage Engine   25000 - 25499
//
#define SSCE_M_NOCURRENTRECORD                  25001           // Either the cursor is not on a row or there are no rows left. [,,,,,]
#define SSCE_M_INVALIDBUFFERSIZE                25002           // The specified buffer size is not valid. [Buffer size specified,,,,,]
#define SSCE_M_COLUMNLENGTHTOOBIG               25003           // The specified length is too long for the column type. [Specified length,Column data type,,,,]
#define SSCE_M_COLUMNNOTUPDATEABLE              25004           // The column cannot be modified. [,,,Column name,,]
#define SSCE_M_NULLINVALID                      25005           // The column cannot contain null values. [,,,Column name,Table name,]
// DEAD SSCE_M_INVALIDOPERATION                 25006           // The operation cannot be performed on the object. [,,,,,]
// DEAD SSCE_M_INTRANSACTION                    25007           // The operation cannot be performed in a transaction. [,,,,,]
#define SSCE_M_INVALIDPARAMETER                 25008           // The parameter is not valid. [,,,,,]
#define SSCE_M_INVALIDPATH                      25009           // The path is not valid. Check the directory for the database. [,,,Path,,]
#define SSCE_M_INVALIDFILENAME                  25010           // The file name is not valid. Check the file name for the database. [,,,File name,,]
#define SSCE_M_INVALIDDATABASE                  25011           // The file that is being referenced is not a SQL Server Compact database file format. [,,,Databasename,,]
#define SSCE_M_UPDATENOTPREPARED                25012           // The record was not prepared for update. [,,,,,]
// DEAD SSCE_M_TABLENOTLOCKED                   25013           // The operation is supported only on tables with exclusive locks. [,,,Table name,,]
#define SSCE_M_SYSCOLACCESSDENIED               25014           // Access to the system column is denied. [,,,,,]
// DEAD SSCE_M_CANTALLOCATEPAGE                 25015           // A page cannot be allocated. There might not be enough memory on the device. [,,,,,]
#define SSCE_M_KEYDUPLICATE                     25016           // A duplicate value cannot be inserted into a unique index. [,,,Table name,Constraint name,]
#define SSCE_M_DATABASECORRUPTED                25017           // The database file may be corrupted. Run the repair utility to check the database file. [,,,Database name,,]
#define SSCE_M_WRITECONFLICT                    25018           // Failed to obtain a lock for a write operation. [,,,,,]
// DEAD SSCE_M_READCONFLICT                     25019           // Failed to obtain a lock for a read operation. [,,,,,]
#define SSCE_M_COMMITCONFLICT                   25020           // Failed to obtain a lock for a commit. [,,,,,]
// DEAD SSCE_M_SESSIONWRITECONFLICT             25021           // Failed to obtain lock for a read or write operation. [,,,,,]
#define SSCE_M_NULLKEYDISALLOWED                25022           // Null values are not allowed in indexes. [,,,,,]
#define SSCE_M_INTEGRITYVIOLATION_MSTR          25025           // The primary key value cannot be deleted because references to this key still exist. [,,,Foreign key constraint name,,]
#define SSCE_M_INTEGRITYVIOLATION_SLV           25026           // A foreign key value cannot be inserted because a corresponding primary key value does not exist. [,,,Foreign key constraint name,,]
#define SSCE_M_RECORDTOOBIG                     25027           // The table definition or the row size exceeds the maximum row size of 8060 bytes. [,,,,,]
#define SSCE_M_INVALIDPASSWORD                  25028           // The specified password does not match the database password. [,,,Data Source,,]
// DEAD SSCE_M_RI_UPDATETWICE                   25029           // An attempt was made to update a field in a record twice. [,,,,,]
#define SSCE_M_RI_DUPLICATEKEY                  25030           // A duplicate key value was found as a result of referential integrity action. [,,,Foreign table name,,]
// DEAD SSCE_M_RI_KEYNULLDISALLOWED             25031           // A referential cascade action is setting a nonnull column to NULL. [,,,Foreign table name,,]
// DEAD SSCE_M_RI_SESSIONWRITECONFLICT          25032           // A write conflict occurred because a referential integrity action is not allowed. [,,,Foreign table name,,]
#define SSCE_M_ILLEGALCOLLATINGSEQ              25033           // The specified locale is not supported on this operating system. [LCID,,,,,]
#define SSCE_M_FILELOCKVIOLATION                25034           // There is a file locking violation. Close any external application that uses the database file. [,,,,,]
#define SSCE_M_FILESHAREVIOLATION               25035           // There is a file sharing violation. A different process might be using the file. [,,,,,]
// DEAD SSCE_M_FILELOCKINGUNAVAILABLE           25036           // File locking is not available. [,,,,,]
#define SSCE_M_DISKFULL                         25037           // There is not enough disk space left for the database. [,,,,,]
#define SSCE_M_TEMPDISKFULL                     25038           // There is not enough disk space left for the temporary database. [,,,,,]
#define SSCE_M_FILEACCESSDENIED                 25039           // Access to the database file is not allowed. [,,,File name,,]
// DEAD SSCE_M_INVALIDSORTDLL                   25042           // The language required for this database file is not fully installed on this operating system. [,,,,,]
#define SSCE_M_TOOMANYOPENFILES                 25044           // OS Error: The OS limit of open files has been exceeded. Other applications will need to be shut down to free up available open files. [,,,,,]
// DEAD SSCE_M_OBSOLETEDATABASEFORMAT           25045           // The database file format is obsolete. [,,,,,]
#define SSCE_M_FILENOTFOUND                     25046           // The database file cannot be found. Check the path to the database. [,,,Data Source,,]
#define SSCE_M_READVERIFYERROR                  25047           // OS Error: SQL Server Compact  encountered a premature EOF for the database file. Running the repair utility might help recover some data. [,,,,,]
#define SSCE_M_NOMOREFILEHANDLES                25048           // OS Error: The OS is reporting that no more file handles can be created. In order to proceed, try closing other applications. [,,,,,]
#define SSCE_M_DISKNOTREADY                     25049           // OS Error: The OS storage system (RAM, CF, SD, or IPSM) is not responding. Retry the operation. [,,,,,]
#define SSCE_M_SHARINGBUFFEREXCEEDED            25050           // OS Error: The OS will not allow sharing of any more files. In order to proceed, try closing other applications. [,,,,,]
#define SSCE_M_DISKIO                           25051           // Internal error: Unable to successfully execute disk IO on the file system. [,,,,,]
// DEAD SSCE_M_THREADSNOTSUPPORTED              25052           // The operating system does not support threads. [,,,,,]
#define SSCE_M_KEYNOTMADE                       25053           // Internal error: A serious error has occurred when trying to create a key. [,,,,,]
#define SSCE_M_TOOMANYKEYS                      25054           // The limit of 16 columns for the multi-column index was exceeded. [,,,,,]
#define SSCE_M_COLUMNWIDTHNOTEVEN               25056           // The size of the Unicode text column is not even. [Column size,,,Column name,,]
#define SSCE_M_NOCURRENTINDEX                   25058           // Internal error: Invalid operation without a current index. [,,,,,]
#define SSCE_M_ILLEGALINDEXCOLUMN               25059           // Long value data type cannot be indexed. [,,,,,]
#define SSCE_M_REFERENCENOTFOUND                25060           // The foreign key constraint does not exist. [,,,,,]
// DEAD SSCE_M_OBJECTNOTREPLICABLE              25062           // The object is not replicable. [,,,Object name,,]
#define SSCE_M_ONLYONESPECIALCOLUMN             25064           // Only one ROWGUID, autoincrement, and version are allowed for each column in a table. [,,,Object name,,]
#define SSCE_M_TOOMANYINDEXES                   25065           // The limit of 249 indexes per tables has been exceeded. [,,,Table name,,]
#define SSCE_M_TOOMANYCOLUMNS                   25066           // The limit of 1024 columns for a table has been exceeded. [Column count,,,Column name,,]
#define SSCE_M_TRANSTOODEEP                     25067           // Internal error: The internal transactions for SQL Server Compact have exceeded the nesting limit. [,,,,,]
// DEAD SSCE_M_SELFREFERENCE                    25068           // A column in an index cannot reference itself. [,,,,,]
// DEAD SSCE_M_NOPRIMARYINDEX                   25069           // The referenced table must have a primary index. [,,,,,]
#define SSCE_M_DIFFNUMRELCOLUMNS                25070           // The definition of referring columns (such as number of columns or data types) in referential relationships must match the referred columns. [,,, Constraint name (if known),,]
// DEAD SSCE_M_CONFLICTINGREFERENCE             25071           // A reference to this column already exists. [,,,Index name,,]
#define SSCE_M_PRIMARYKEYNULLCONFLICT           25072           // Primary keys cannot be created on columns that support null values. [,,,Column name,,]
#define SSCE_M_TABLEMUSTHAVECOLUMNS             25073           // Tables must contain at least one column. [,,,,,]
#define SSCE_M_DEFAULTEXPRTOOLONG               25074           // The expression string for the default value cannot be longer than 4000 characters. [Length of expression string,,,,,]
#define SSCE_M_DISALLOWIDENTITYNULL             25075           // Nullable columns cannot be identity columns. [,,,,,]
#define SSCE_M_CONSTRAINTINUSE                  25077           // The constraint cannot be removed because it is referenced by another constraint. [,,,Constraint name,,]
#define SSCE_M_INDEXINUSE                       25078           // The index cannot be removed because it is being used to enforce a constraint. [,,,Index name,,]
#define SSCE_M_ENCRYPTEDDBMUSTHAVEPWD           25079           // A password must be specified when a database is created by using encryption. [,,,,,]
// Changed for v3.5 SSCE_M_NOOSENCRYPTIONSUPPORT            25080           // The operating system does not support encryption. [,,,,,]
#define SSCE_M_NOOSENCRYPTIONSUPPORT            25080           // The operating system does not support the Encryption Mode provided. [,,,,,]
#define SSCE_M_VIOLATEDAUTOINCRANGE             25081           // The new value generated for the inserted row is outside the range for an INTEGER or BIGINT data type. [Generated value,,,,,]
// DEAD SSCE_M_UNIQUENULLCONFLICT               25082           // Unique indexes and constraints cannot be created on columns that allow null values. [,,,,,]
#define SSCE_M_CYCLEDETECTED                    25083           // The referential relationship will result in a cyclical reference that is not allowed. [,,,Constraint name,,]
#define SSCE_M_RELCOLUMNSTYPEMISMATCH           25084           // The data types of the columns in the relationship do not match. [,,,,,]
#define SSCE_M_PKDUPLICATE                      25085           // The table already has a primary key. [,,,,,]
#define SSCE_M_INVALIDINCREMENT                 25086           // The identity column contains an increment value that is not valid. [,,,Column name,,]

//***** Don't add any more errors here, read the comments below and add appropriately
//
// Errors after this comment were added for v1.1 (PEBBLE) 
//
#define SSCE_M_GENERATEGUIDFAILED               25087           // Internal error: A new GUID cannot be generated for the new row. [,,,,,]

//
// Errors defined for v2.0
//
// DEAD SSCE_M_KEYTOOLARGE                      25088           // The key size exceeded the maximum allowed. [,,,,,]

//
// Errors introduced for SQL-Lite
//
#define SSCE_M_SYNCINPROGRESS                   25089           // Another synchronization is in progress. Try synchronizing later. [,,,,,]
#define SSCE_M_LOCKTIMEOUT                      25090           // SQL Server Compact timed out waiting for a lock. The default lock time is 2000ms for devices and 5000ms for desktops. The default lock timeout can be increased in the connection string using the ssce: default lock timeout property. [Session id,Thread id,Process id,Table name,Conflict type,Resource]
#define SSCE_M_OUTOFLOCKS                       25091           // The lock manager has run out of space for additional locks. This can be caused by large transactions, by large sort operations, or by operations where SQL Server Compact creates temporary tables. You cannot increase the lock space. [,,,,,]
#define SSCE_M_INVALIDTEMPPATH                  25092           // The path specified for the temp database is not valid. [,,,,,]
#define SSCE_M_NOQUERYPROCESSOR                 25100           // Unable to create Command object because Query Processor module is not present on the device or not located in the same directory as the Storage Engine module. [,,,,,]
#define SSCE_M_OUTOFBUFFERPOOLSPACE             25101           // SQL Server Compact has exceeded the buffer size. The default size can be increased on initialization by modifying the ssce: max buffer size property. [The default size,,,,,]
#define SSCE_M_INITPROPCONFLICT                 25102           // Another user has opened the database with different instance-level initialization properties. [,,,,,]
#define SSCE_M_CANTLOADSQLSEDLL                 25103           // Storage Engine module could not be loaded. Reinstall SQL Server Compact Edition. [,,,,,]
#define SSCE_M_DATABASETOOBIG                   25104           // The database file is larger than the configured maximum database size. This setting takes effect on the first concurrent database connection only. [Required Max Database Size (in MB; 0 if unknown),,,,,]
#define SSCE_M_INVALIDSECURITYDESCRIPTOR        25105           // Internal error: Invalid Security Descriptor was specified. [,,,,,]
#define SSCE_M_TOOMANYCONSTRAINTS               25106           // The limit of 249 contstraints per table has been exceeded. [,,,TableName,,]
#define SSCE_M_BADKEYTYPE                       25107           // Internal error: The specified constraint does not define the requested type of key. [,,,,,]
#define SSCE_M_OUTSTANDINGPREPARE               25108           // Another cursor on the same table has a pending operation on the same row. [,,,,,]

// Errors after this comment were added for v3.0 (Laguna)
//
#define SSCE_M_PASSWORDTOOLONG                  25109           // The database password cannot exceed 40 characters. [,,,,,]
#define SSCE_M_SYSTEMNAME                       25110           // The table and column name is part of a reserved name. Table and column names cannot begin with '__Sys'. [,,,Name,,]
#define SSCE_M_COMPRESSEDNOSTREAM               25111           // Internal error: Compressed columns do not support the stream interface(s). [,,,Column Name,,]
#define SSCE_M_COMPRESSEDNONLV                  25112           // Invalid use of compressed flag for non-long value column. [,,,Column Name, Table Name,]
#define SSCE_M_CHANGECOMPRESSED                 25113           // Cannot change compression status for a database. [,,,Db name,,]
#define SSCE_M_FILEALREADYEXISTS                25114           // File already exists. Try using a different database name. [,,,File name,,]
#define SSCE_M_WRONGPAGE                        25115           // Wrong page (potential database corruption). Try running the repair utility. [,,,,,]
#define SSCE_M_SYSTABACCESSDENIED               25116           // Internal error: Access to the system table is denied. [,,,,,]
#define SSCE_M_ALREADYOPENED                    25117           // Database already opened by a different user. [,,,Db name,,]
#define SSCE_M_CANTOPENSHAREDMEMORY             25118           // Internal error: Cannot open the shared memory region. [,,,,,]
#define SSCE_M_CANTCHANGEKEYCOLUMN              25119           // Cannot alter a column that is part of a key or an index. [,,,Index Name,Column,]
#define SSCE_M_RODATABASEREQUIRESTEMPPATH       25120           // Opening a database as read-only requires a temp path to be specified. [,,,Db name,,]
// DEAD SSCE_M_OUTSTANDINGLOCKS                 25121           // A generation cannot be bumped due to open transactions with changes pending. [,,,,,]
#define SSCE_M_FATALLOCKFAILURE                 25122           // Internal error: Fatal failure of the lock susbsytem for this database. [,,,Db name,,]
#define SSCE_M_LIBRARYLOADFAILURE               25123           // A SQL Server Compact DLL could not be loaded. Reinstall SQL Server Compact Edition. [,,,DLL Name,,]
#define SSCE_M_INCONSISTENTLVVERSION            25124           // The long value was changed by another transaction. [,,,,,]
#define SSCE_M_INVALIDSTATSOPTIONS              25125           // Internal error: Invalid statistics creation options. [Options,,,,,]
#define SSCE_M_PENDINGUPDATE                    25126           // An update transaction is pending, cannot start a sync session. Try synchronizing again. [,,,,,]
#define SSCE_M_INVALIDPROVIDERTYPE              25127           // Invalid provider type. [Db version,Requested version,,File name,,]
#define SSCE_M_INVALIDSHAREDMEMORYFORMAT        25128           // SQL Server Compact has encountered two different versions of the product accessing the same database file. Ensure that each application accessing the same database file is using the same version of SQL Server Compact Edition. [,,,,,]
#define SSCE_M_PREFIXTOOLARGE                   25129           // The string value that has been assigned to the LIKE clause in the SELECT statement exceeds the limit for SQL Server Compact Edition. The limit for single byte character set is 256 characters but can be smaller for double byte character set. [,,,,,]
#define SSCE_M_UNINSTALLEDCOLLATINGSEQ          25130           // The specified locale is not installed on this machine. Make sure you install the appropriate language pack. [LCID,,,,,]
#define SSCE_M_CANTLOADSQLQPDLL                 25131           // Query Processor module could not be loaded. Reinstall SQL Server Compact Edition. [,,,,,]
// DEAD SSCE_M_RESTRICTEDPLATFORM               25132           // This version of SQL Server Compact is not licensed for production use. [,,,,,]
#define SSCE_M_NOTSUPPORTED                     25133           // Internal error: SQL Server Compact made an unsupported request to the host operating system. [,,,,,]

// Errors after this comment were added for v3.5
//
#define SSCE_M_READREQUIREDRECORDS              25134           // The required number of records have already been read. [,,,,,]
#define SSCE_M_IDENTITYINSERT_ON                25135           // IDENTITY_INSERT is already ON for another table.  Cannot perform SET operation for this table. [,,, Other Table Name, This Table Name,]
#define SSCE_M_NO_IDENTITY                      25136           // Table does not have a IDENTITY column. [,,,,,]
#define SSCE_M_INVALIDENCRYPTIONMODE            25137           // The database encryption mode is invalid. [Input Encryption Mode,,,,,]
#define SSCE_M_DBUPGRADENEEDED                  25138           // The database file has been created by an earlier version of SQL Server Compact. Please upgrade using SqlCeEngine.Upgrade() method. [,,,,,]
#define SSCE_M_INVALID3XDATABASE                25139           // The file that is being referenced is not a valid SQL Server 2005 Compact Edition (version 3.1) or SQL Server 2005 Mobile Edition (version 3.0) database file to perform upgrade. [,,,Db name,,]
#define SSCE_M_INVALIDSRCPASSWORD               25140           // The password specified for the source database is incorrect. [,,,Data Source,,]
#define SSCE_M_ILLEGALSRCCOLLATINGSEQ           25141           // The source database locale is not supported on this operating system. [LCID,,,,,]

// Warnings
//
#define SSCE_WRN_COLUMNNULL                     25200           // The column cannot have NULL values. [,,,,,]
#define SSCE_WRN_BUFFERTRUNCATED                25201           // The data was truncated. Try passing down a larger buffer. [,,,,,]
// DEAD SSCE_WRN_SEEKNOTEQUAL                   25202           // Seek was not able to find an exact match. [,,,,,]
// DEAD SSCE_WRN_OPTIONSIGNORED                 25203           // Some specified options were ignored for this operation. [,,,,,]
// DEAD SSCE_WRN_COLUMNDATATRUNCATED            25204           // The data was truncated. [,,,,,]
// DEAD SSCE_WRN_DATABASEENCRYPTED              25205           // The database is encrypted. A password is necessary to access the database. [,,,,,]
#define SSCE_WRN_RI_RECORDSUPDATED              25206           // Additional records were updated as a result of referential integrity actions. [,,,,,]
#define SSCE_WRN_RI_RECORDSDELETED              25207           // Additional records were deleted as a result of referential integrity actions. [,,,,,]
// DEAD SSCE_WRN_ROWLOCKCONNECTFAILED           25208           // The request for a row-level lock was denied. [,,,,,]
// DEAD SSCE_WRN_PAGELOCKCONNECTFAILED          25209           // The request for a page-level lock was denied. [,,,,,]
#define SSCE_WRN_DEFAULTALREADYPRESENT          25210           // This column already had a default. [,,,,,]
//
//Warnings after this comment were added for v1.1 (PEBBLE) 
//


// --------------------------------------------------------------------------------------
//
// OLEDB Layer  27000 - 27499
//
#define SSCE_M_TOOMANYSESSIONSOUTSTANDING       27000           // Too many sessions are open. [,,,,,]

// Rich error messages for Set Property
//
#define SSCE_M_PRIMARYKEYPROPERTYNOTSETTABLE    27001           // The new column cannot be set as the PRIMARY KEY constraint. Create a table-level constraint instead. [,,,,,]
#define SSCE_M_UNIQUEKEYPROPERTYNOTSETTABLE     27002           // The new column cannot be set as a UNIQUE constraint. Create a table-level constraint instead. [,,,,,]
#define SSCE_M_COLUMNNULLABILITYNOTALTERABLE    27003           // Column nullability cannot be changed after the column is created. [,,,,,]
#define SSCE_M_CANTMODIFYIDENTITYATTRIBUTE      27004           // The column cannot become an identity column after it is created. [,,,,,]
#define SSCE_M_INVALIDCOLUMNPROPERTY            27005           // The column property is not valid. [,,,,,]
// DEAD SSCE_M_INVALIDSSCEDBINITPROPERTY        27006           // An attempt to set the SQLServer CE DBINIT property is not valid. [,,,,,]
//
// Errors after this comment were added for v1.1 (PEBBLE) 
//


// --------------------------------------------------------------------------------------
//
// ssceCommon   27500 - 27749
//
#define SSCE_M_DECIMALOVERFLOW                  27500           // An overflow occurred while setting decimal data. [,,,,,]
#define SSCE_M_DECIMALTRUNCATED                 27501           // Decimal data was truncated. [,,,,,]
#define SSCE_M_CMN_INVALIDPARAMETER             27502           // The parameter is not valid. [,,,,,]
//***** Don't add any more errors here, read the comments below and add appropriately
//
// Errors after this comment were added for v1.1 (PEBBLE) 
//

// Warning
// DEAD SSCE_WRN_DECIMALTRUNCATED               27700           // Decimal data was truncated. [,,,,,]
//
// Warnings after this comment were added for v1.1 (PEBBLE) 
//

// Errors after this comment were added for v3.0 (LAGUNA) 
//
#define SSCE_M_INVALIDPREPMODE                  27506           // Internal Error: Unexpected value for SEPREPAREMODE. [,,,,,]
// --------------------------------------------------------------------------------------
//
// Managed Code     27750 - 27999
// 
// This range was added for Daytona
//
// DEAD SSCE_M_SSCEMWFAILURE                    27750           // Cannot load sscemw20.dll or ssceca20.dll is missing or not registered. [,,,,,]
//***** Don't add any more errors here, read the comments below and add appropriately

// Errors after this comment were added for v3.0 (LAGUNA)
//
#define SSCE_M_WRONGPROCEDUREPARAMFORM          27781           // After the form '@name = value' has been used, all subsequent parameters must be passed in the form '@name = value'. [Procedure parameter ordinal,,,,,]
#define SSCE_M_CO_E_NOTINITIALIZED              27782           // The application thread has not been initialized for COM interop because COM threading model has not been set. Please check documentation for System.STAThreadAttribute or System.MTAThreadAttribute classes.[,,,,,]
#define SSCE_M_INVALIDDBRANGEFLAGS              27783           // The following combination of DbRangeOptions in the call to SqlCeCommand:SetRange is invalid. [,,,DbRangeOptions,,]
#define SSCE_M_DBRANGEUNEXPECTEDNULLVALUE       27784           // With the specified DbRangeOptions, the argument in the call to SqlCeCommand:SetRange cannot be null (Nothing in Visual Basic.NET). [,,,DbRangeOptions,Argument Name,]
#define SSCE_M_DBRANGEEXPECTEDNULLVALUE         27785           // With the specified DbRangeOptions, the argument in the call to SqlCeCommand:SetRange MUST be set to null (Nothing in VB.NET). [,,,DbRangeOptions,Argument Name,]
#define SSCE_M_DBSEEKNOKEYVALUES                27786           // No key values were specified in the call to SqlCeDataReader:Seek. [,,,Argument Name,,]
#define SSCE_M_INVALIDDBSEEKOPTION              27787           // Invalid DbSeekOptions specified in the call to SqlCeDataReader:Seek. [,,,,,]

// Errors after this comment were added for v4.0 (VENICE)
//
#define SSCE_M_DUPLICATEASSEMBLY                27751           // The specified assembly already exists in this database. [,,,name,,] 
#define SSCE_M_INVALIDASSEMBLYVERSION           27752           // The assembly with this name is already registered. The version number does not match the expected value. [,,,name, ver, ver]  
#define SSCE_M_INVALIDASSEMBLYNAME              27753           // SQL assembly name and .NET assembly name do not match. [,,,sqlname, clrname,] 
#define SSCE_M_CIRCULARASSEMBLYREFERENCE        27754           // Circular assembly references were detected. Operation has been canceled. [,,,name,,] 
#define SSCE_M_REFERENCELISTNOTEMPTY            27755           // The ReferenceAssemblyList of the assembly being dropped is not empty. [,,,name,,] 
#define SSCE_M_ROUTINELISTNOTEMPTY              27756           // The ReferenceRoutineList of the assembly being dropped is not empty. [,,,name,type,method] 
#define SSCE_M_ASSEMBLYNOTFOUND                 27757           // .NET assembly with the specified name does not exist. [,,,name,,] 
#define SSCE_M_MISSINGASSEMBLY                  27758           // One or more assemblies is missing in the assembly_bits specifier. [,,,name,,] 
#define SSCE_M_DUPLICATEASSEMBLYSPECIFIED       27759           // Assembly specified more than once in the assembly_bits specifier. [,,,name,,] 
#define SSCE_M_OPENSCOPEFAILURE                 27760           // Unable to access/read the specified assembly. [,,,name,,] 
#define SSCE_M_OPENSCOPEONMEMFAILURE            27761           // The specified binary literal is not a valid assembly file. [,,,index,,] 
#define SSCE_M_DUPLICATETRIGGER                 27762           // Trigger with the specified name already exists in this database. [,,,name,,] 
#define SSCE_M_INVALIDTABLENAME                 27763           // The specified table does not exist. [,,,name,,] 
#define SSCE_M_INVALIDTRIGGERNAME               27764           // The specified trigger does not exist in this database. [,,,name,,] 
#define SSCE_M_INVALIDCALLINGCONVENTION         27765           // The calling convention of the specified method does not match the expected value. The method should be defined as public static (Shared in Visual Basic). [,,,assembly, class, method] 
#define SSCE_M_INVALIDNUMBEROFARGS              27766           // The actual number of arguments in the specified method does not match the expected value. [expected, actual,,assembly, class, method] 
#define SSCE_M_INVALIDARGUMENTTYPES             27767           // The argument types in the specified method do not match the expected values. [,,,assembly, class, method] 
#define SSCE_M_TYPENOTFOUND                     27768           // The specified type was not found in this .NET assembly. [,,,assembly, class,] 
#define SSCE_M_METHODNOTFOUND                   27769           // The method with the specified name was not found in the class definition. [,,,assembly, class, method] 
#define SSCE_M_INVALIDRETURNTYPE                27770           // The return type of the specified method does not match the expected value. [,,,assembly, class, method] 
#define SSCE_M_INVOCATIONFAILURE                27771           // A critical error occured while invoking .NET trigger. [,,,assembly,class,name] 
#define SSCE_M_MANAGEDEXCEPTION                 27772           // A .NET exception has been thrown during trigger execution. [,,,message, source, stack trace] 
#define SSCE_M_INSTEADOFTRIGGERFIRED            27773           // The action caused an INSTEAD OF trigger to fire. [,,,,,] 
#define SSCE_M_FOREIGNKEYVIOLATION              27774           // INSTEAD OF DELETE/UPDATE trigger cannot be defined on a table that has a foreign key with a CASCADE on DELETE/UPDATE action defined. [,,,constraint,,] 
#define SSCE_M_TRIGGERNESTLEVELEXCEEDED         27775           // Recursive trigger invocation exceeded the maximum allowed nesting level. [,,,assembly, class, method, nestLevel] 
#define SSCE_M_TRANSACTIONABORTED               27776           // The current transaction has been aborted during trigger invocation. No operation has been performed. [,,,,,] 
#define SSCE_M_CANTLOADSQLCOMPACTDLL            27777           // Could not load database compaction library. Operation has been aborted. [,,,,,] 
#define SSCE_M_LOADASSEMBLYFAILED               27778           // Unable to load .NET assembly with the specified name. This is because the assembly does not exist or because your trigger/stored procedure has been compiled against an assembly with different strong name. [,,,name,,] 
#define SSCE_M_DUPLICATEPROCEDURE               27779           // Procedure with the specified name already exists in this database. [,,,name,,] 
#define SSCE_M_CANTDROPPROCEDURE                27780           // Cannot drop the procedure because it does not exist, or you do not have permission. [,,,name,,] 

#define SSCE_M_DISTRIBUTEDTRANSACTIONNOTSUP     27992           // SQL Server Compact does not support distributed transactions. The command is currently enlisted in a transaction. You can not change the database in use until that transaction is committed or aborted. [,,,,,]
#define SSCE_M_CANTDROPDATABASE                 27993           // Cannot drop the database because it does not exist, or you do not have permission. [,,,,,]
#define SSCE_M_NESTEDTRANSACTIONSSNOTSUPPORTED  27994           // Nested transactions are not supported. [,,,,,]
#define SSCE_M_NOTENLISTEDINTRANSACTION         27995           // The command is not enlisted in a transaction. [,,,,,]
#define SSCE_M_TDSSERVERTHREADDEADLOCK          27996           // SQL Server Compact is not responding, potentially waiting for a lock timeout. The current connection will be closed. [,,,,,]
#define SSCE_M_SCRIPTMAXSIZEEXCEEDED            27997           // The size of the executed SQL Server Compact script has exceeded its maximum value. Use [GO] statements to reduce the size of submitted SQL batches. [maximum size,,,,,] 
#define SSCE_M_OUTOFMEMORY                      27998           // There is not enough memory on the device running SQL Server Compact to complete this operation. [,,,,,] 
#define SSCE_M_INVALIDPRODUCTVER                27999           // SQL Server Compact 3.5 is either not installed or the installation has been corrupted. [,,,,,] 

//***** Don't add any more errors here, read the comments below and add appropriately
//

// --------------------------------------------------------------------------------------
//
// Replication Transport    28000 - 28249
//
#define SSCE_M_OPENTWICE                        28000           // Internal error: The table was unexpectedly opened. [,,,,,]
#define SSCE_M_INTERNETREADERROR                28001           // Internal error: A read operation from the device or the IIS server returned an incorrect number of bytes while trying to process a synchronization request. [,,,,,]
#define SSCE_M_INTERNETWRITEERROR               28002           // A write operation to the Internet wrote an incorrect number of bytes. [,,,,,]
#define SSCE_M_INVALIDRSCBID                    28003           // Internal error: Either the computer running IIS is out of memory or an incorrect session ID was sent in a request. [Session id,,,,,]
#define SSCE_M_TOOMANYPENDINGREQUESTS           28004           // A SQL Server Compact Server Agent queue is full and can take no further requests. Try again later. [,,,,,]
// DEAD SSCE_M_COULDNTSTARTRECTHREAD            28005           // A thread to host the SQL Server Reconciler cannot be started. Check system resources. [,,,,,]
// DEAD SSCE_M_CANTLOADRECRESOURCEDLL           28006           // The SQL Server Reconciler resource DLL cannot be loaded. [,,,,,]
#define SSCE_M_INVALIDRECONCILERPARAM           28007           // Internal error: Invalid reconciler parameter. [,,,,,]
#define SSCE_M_INVALIDTRNSPTCOMMAND             28008           // Internal error: The transport failed due to incorrect message format or content. [Command number,,,,,]
#define SSCE_M_CANTCOCREATERECONCILER           28009           // An instance of the SQL Server Reconciler cannot be created. Try reinstalling the replication components.[,,,,,]
#define SSCE_M_CANTCOCREATERECONERROR           28010           // An instance of the SQL Server Reconciler error object cannot be created. Try reinstalling the replication components.[,,,,,]
#define SSCE_M_HTTPSTATUSDENIED                 28011           // Authentication failed on the computer running IIS. [,,,,,]
#define SSCE_M_HTTPSTATUSPROXYAUTHREQ           28012           // Authentication failed on the proxy server. [,,,,,]
#define SSCE_M_HTTPSTATUSBADREQUEST             28013           // The HTTP request failed due to incorrect format or content. Try restarting the IIS server.[,,,,,]
#define SSCE_M_HTTPSTATUSPAYMENTREQ             28014           // This site requires payment before it can be accessed. Try restarting the IIS server.[,,,,,]
#define SSCE_M_HTTPSTATUSFORBIDDEN              28015           // A Secure Sockets Layer (SSL) connection is required to access this site. [,,,,,]
#define SSCE_M_HTTPSTATUSNOTFOUND               28016           // IIS error 404 HTTP_STATUS_NOT_FOUND: The server has not found anything matching the requested URI (Uniform Resource Identifier). [,,,,,]
#define SSCE_M_HTTPSTATUSBADMETHOD              28017           // IIS Error 405 HTTP_STATUS_BAD_METHOD: The HTTP verb used is not allowed. [,,,,,]
#define SSCE_M_HTTPSTATUSNONEACCEPT             28018           // IIS Error 406 HTTP_STATUS_NONE_ACCEPTABLE: No responses acceptable to the client were found. [,,,,,]
// DEAD SSCE_M_HTTPSTATUSREQTIMEOUT             28019           // The request timed out on the computer running IIS. [,,,,,]
#define SSCE_M_HTTPSTATUSCONFLICT               28020           // The computer running IIS returned a Conflict status. Try restarting the IIS server.[,,,,,]
#define SSCE_M_HTTPSTATUSGONE                   28021           // The computer running IIS returned a Gone status. Try restarting the IIS server.[,,,,,]
#define SSCE_M_HTTPSTATUSSERVERERROR            28022           // An error has occurred on the computer running IIS. Try restarting the IIS server.[,,,,,]
#define SSCE_M_HTTPSTATUSNOTSUPPORTED           28023           // The computer running IIS returned a Not Supported status. Try restarting the IIS server.[,,,,,]
#define SSCE_M_HTTPSTATUSBADGATEWAY             28024           // IIS Error 502 HTTP_STATUS_BAD_GATEWAY:  The server, while acting as a gateway or proxy, received a response that was not valid from the upstream server. [,,,,,]
#define SSCE_M_HTTPSTATUSSVCUNAVAIL             28025           // The IIS service is not available. [,,,,,]
// DEAD SSCE_M_HTTPSTATUSGATTIMEOUT             28026           // The gateway has timed out. [,,,,,]
// DEAD SSCE_M_HTTPSNOTSUPPORTED                28027           // HTTPS is not supported on Windows CE 1.1-based devices. [,,,,,]
#define SSCE_M_REPLPROHIBITED                   28028           // Merge replication is restricted from being processed with the SQL Server Compact Server Agent on the computer running IIS. Check the USAGE key in HKLM\\Software\\Microsoft\\Microsoft SQL Server Compact Edition\\v3.5\\Transport\\USAGE and change to a value of 0 or 1. [,,,,,]
#define SSCE_M_RDAPROHIBITED                    28029           // Remote data access (RDA) is restricted from being processed with the SQL Server Compact Server Agent on the computer running IIS. Check the USAGE key in HKLM\\Software\\Microsoft\\Microsoft SQL Server Compact Edition\\v3.5\\Transport\\USAGE and change to a value of 0 or 2. [,,,,,]
#define SSCE_M_COMPRESSIONFAILED                28030           // Internal error: Compression failed. Try again.[,,,,,]
#define SSCE_M_DECOMPRESSIONFAILED              28031           // Internal error: Decompression failed. Try again.[,,,,,]
#define SSCE_M_FAILUREINITIALIZINGINTERNET      28032           // The call to InternetOpen failed. Check the major error for more information. [,,,,,]
#define SSCE_M_INVALIDURLSYNTAX                 28033           // The URL syntax is not valid. [,,,URL,,]
#define SSCE_M_INTERNETCONNECTFAILURE           28034           // An Internet connection cannot be established. [,,,,,]
#define SSCE_M_FAILUREQUERYINGHEADER            28035           // Internal error: HTTP header information is either corrupted or missing in the transport message. It could be a network transmission error or an IIS problem. [,,,,,]
#define SSCE_M_CLOSEINTERNETHANDLEFAILED        28036           // An internal or network problem was encountered while trying to close an Internet handle. [,,,,,]
#define SSCE_M_HTTPSENDREQUESTFAILED            28037           // A request to send data to the computer running IIS has failed. For more information, see HRESULT. [,,,,,]
#define SSCE_M_MAXIMUMRSCBSEXCEEDED             28038           // The connection was refused by the computer running IIS because the maximum number of sessions has been exceeded. Try connecting later. [,,,,,]
// DEAD SSCE_M_REQUESTSUPERSEDED                28039           // The request was superseded by a subsequent request. [,,,,,]
#define SSCE_M_RESENTCOMMANDIGNORED             28040           // Internal error: During a retry operation to synchronize, the command has been completed. The resent command was ignored. [,,,,,]
#define SSCE_M_RESENDREQUEST                    28041           // Internal error: Unexpected resend request. [,,,,,]
//***** Don't add any more errors here, read the comments below and add appropriately
//
// Errors after this comment were added for v1.1 (PEBBLE) 
//

// --------------------------------------------------------------------------------------
//
// Replication provider    28250 - 28499
//

// --------------------------------------------------------------------------------------
//
// Client Agent     28500 - 28999
//
#define SSCE_M_CANTCOCREATESSCEERRORS               28500       // A SQL Server Compact error collection object cannot be created on the IIS server. The SQL Server reconciler is not loading. Verify that the merge replication components are running on SQL Server. [,,,,,]
// DEAD SSCE_M_SUBSCRIBERDATABASEPATHMISSING        28501       // The SubscriberConnectionString property is not specified. [,,,,,]
// DEAD SSCE_M_INTERNETURLPROPERTYMISSING           28502       // The InternetURL property is not specified. [,,,,,]
// DEAD SSCE_M_PUBLISHERPROPERTYMISSING             28503       // The Publisher property is not specified. [,,,,,]
// DEAD SSCE_M_PUBLISHERDATABASEPROPERTYMISSING     28504       // The PublisherDatabase property is not specified. [,,,,,]
// DEAD SSCE_M_PUBLICATIONPROPERTYMISSING           28505       // The Publication property is not specified. [,,,,,]
// DEAD SSCE_M_SUBSCRIBERPROPERTYMISSING            28506       // The Subscriber property is not specified. [,,,,,]
// DEAD SSCE_M_MISSINGDISTRIBUTORPROPERTIES         28507       // Some Distributor properties are not specified. [,,,,,]
// DEAD SSCE_M_MISSINGDISTRIBUTORADDRESS            28508       // The DistributorAddress property is not specified. [,,,,,]
// DEAD SSCE_M_MISSINGPUBLISHERADDRESS              28509       // The PublisherAddress property is not specified. [,,,,,]
// DEAD SSCE_M_INVALIDPUBLISHERSECURITYMODE         28510       // The value specified for the PublisherSecurityMode property is not valid. [Publisher security mode,,,,,]
// DEAD SSCE_M_INVALIDDISTRIBUTORSECURITYMODE       28511       // The value specified for the DistributorSecurityMode property is not valid. [Distributor security mode,,,,,]
// DEAD SSCE_M_INVALIDQUERYTIMEOUTVALUE             28512       // The value specified for the QueryTimeout property is not valid. [Query timeout value,,,,,]
// DEAD SSCE_M_INVALIDLOGINTIMEOUTVALUE             28513       // The value specified for the LoginTimeout property is not valid. [Login timeout value,,,,,]
// DEAD SSCE_M_INVALIDDISTRIBUTORNETWORK            28514       // The value specified for the DistributorNetwork property is not valid. [Distributor network,,,,,]
// DEAD SSCE_M_INVALIDEXCHANGETYPE                  28515       // The value specified for the ExchangeType property is not valid. [Exchange type,,,,,]
// DEAD SSCE_M_INVALIDVALIDATIONTYPE                28516       // The value specified for the ValidateType property is not valid. [Validation type,,,,,]
// DEAD SSCE_M_INITIALIZEFAILED                     28517       // The Initialize method failed. [,,,,,]
// DEAD SSCE_M_ADDSUBSCRIPTIONFAILED                28518       // The Add Subscription method failed. [,,,,,]
#define SSCE_M_UNSUPPORTEDDBDROPOPTION              28519       // The value specified for DBDROPOPTION is not valid. Valid values are 0 and 1. [,,,,,]
#define SSCE_M_DROPSUBSCRIPTIONFAILED               28520       // The Drop Subscription method failed. [,,,,,]
#define SSCE_M_DBALREADYREPLICABLE                  28521       // The SQL Server Compact subscription already exists. Publisher, PublisherDatabase, and Publication for this subscription should be different from any existing subscription. [,,,,,]
// DEAD SSCE_M_RUNFAILED                            28522       // The Run method failed. [,,,,,]
#define SSCE_M_INITIALIZATIONFAILED                 28523       // Internal error: Initializing an internal object failed. [,,,,,]
// DEAD SSCE_M_TERMINATEFAILED                      28524       // The Terminate method failed. [,,,,,]
// DEAD SSCE_M_REINITIALIZESUBSCRIPTIONFAILED       28525       // The Reinitialize Subscription method failed. [,,,,,]
#define SSCE_M_UNEXPECTEDROCENCOUNTERED             28526       // The message contains an unexpected replication operation code. The version of SQL Server Compact Client Agent and SQL Server Compact Server Agent should match. [replication operation code,,,,,]
#define SSCE_M_COLUMNORDINALNOTFOUND                28527       // Internal error: The column ordinal cannot be found. [,,,Table name (if known),,]
#define SSCE_M_NICKNAMEGENERATIONFAILED             28528       // Internal error: A nickname was not generated. [,,,,,]
#define SSCE_M_DBNOTREPLICABLE                      28529       // The SQL Server Compact database is not enabled for replication. Try synchronizing again. [,,,,,]
#define SSCE_M_FAILUREREADINGREGISTRY               28530       // Internal error: SQL Server Compact was unable to read the generated machine ID from the registry. If a network device is installed on the device, a generated machine ID will not be necessary. [,,,,,]
#define SSCE_M_FAILUREWRITINGREGISTRY               28531       // Internal error: SQL Server Compact was unable to write the generated machine ID from the registry. If a network device is installed on the device, a generated machine ID will not be necessary. [,,,,,]
#define SSCE_M_TRANSPORTREADRETURNEDNODATA          28532       // A read operation from the transport returned no data. The version of SQL Server Compact Client Agent and SQL Server Compact Server Agent should match.[,,,,,]
// DEAD SSCE_M_CANTCOCREATESQLSERVERCE              28533       // Another instance of SQL Server Compact cannot be created. [,,,,,]
// DEAD SSCE_M_RDAPULLFAILED                        28534       // The Pull method failed. [,,,,,]
// DEAD SSCE_M_RDAPUSHFAILED                        28535       // The Push method failed. [,,,,,]
// DEAD SSCE_M_RDASUBMITSQLFAILED                   28536       // The SubmitSQL method failed. [,,,,,]
#define SSCE_M_IDENTITYRANGE                        28537       // Internal error: The identity range was not established. [,,,,,]
// DEAD SSCE_M_INVALIDARTICLE                       28538       // An article in the message is not valid. [Article nickname,,,,,]
#define SSCE_M_OBJECTALREADYINITIALIZED             28539       // Internal error: The database is already initialized. [,,,,,]
#define SSCE_M_OBJECTNOTINITIALIZED                 28540       // Internal error: The database is not initialized. [,,,,,]
#define SSCE_M_LOCALTABLENAMEMISSING                28541       // The value for the Local Table Name parameter is not specified for the Push call. [,,,,,]
#define SSCE_M_NOTALLPARAMSSETFORPULL               28542       // Some parameters were not specified for the Pull method. [,,,,,]
#define SSCE_M_TABLENOTTRACKED                      28543       // The table is not a tracked table. [,,,Table name,,]
#define SSCE_M_RDAERRORROWSRETURNED                 28544       // The Push method returned one or more error rows. See the specified error table. [,,,Error table name,,]
// DEAD SSCE_M_SUBSCRIBERCONNECTIONSTRINGMISSING    28545       // SQL Server Compact connection string is missing. [,,,,,]
#define SSCE_M_INVALIDCONNECTIONSTRING              28546       // The specified OLE DB for SQL Server Compact connection string is not valid. [,,,,,]
#define SSCE_M_DATABASEALREADYOPEN                  28547       // SQL Server Compact database cannot be compacted because it is open. [,,,,,]
#define SSCE_M_PARAMETERTOOLARGE                    28548       // A specified parameter is too large. [Size of parameter,Max size,,Parameter value,,]
#define SSCE_M_FAILEDRETRIES                        28549       // The row operation cannot be reapplied due to an integrity violation. Check the Publication filter. [,,,Table,Operation,RowGuid]
// DEAD SSCE_M_COMPACTFAILED                        28550       // The SQL Server Compact database cannot be compacted. [,,,,,]
#define SSCE_M_MISSINGCONNECTSTRING                 28551       // The Local Connection String parameter is not specified for either a Push or Pull method. [,,,,,]
#define SSCE_M_NO_ROWGUID                           28552       // Internal error: This table does not have a ROWGUID column. [,,,,,]
#define SSCE_M_SPECIAL_COLUMN                       28553       // Internal error: This table does not have a ROWGUID column nor an Identity range. [,,,,,]
#define SSCE_M_VALIDATEFAILED                       28554       // The number of rows at the client does not match the number of rows at the server. Retry the operation. [SQL Server count, SQL Server Compact count,,TableName,,]
#define SSCE_M_FAILEDMAKEDBREP                      28555       // The SQL Server Compact database cannot be replicated. The subscription must be reinitialized. [,,,,,]
#define SSCE_M_TABLENAMEMISSING                     28556       // The Local Table Name parameter is not specified. [,,,,,]
// DEAD SSCE_M_UNUSABLEDATABASE                     28557       // The SQL Server Compact database cannot be used for replication. Delete and then recreate the database. [,,,Connection string,,]
#define SSCE_M_CREATEDATABASE                       28558       // SQL Server Compact encountered problems when creating the database. [,,,,,]
#define SSCE_M_OPENDATABASE                         28559       // SQL Server Compact encountered problems when opening the database. [Internal Error Number,,,Internal Error String,,]
#define SSCE_M_EXECUTEFAILED                        28560       // The SQL statement failed to execute. If this occurred while using merge replication, this is an internal error. If this occurred while using RDA, then the SQL statement is invalid either on the PULL statement or on the SubmitSQL statement. [,,,SQL statement,,]
#define SSCE_M_ROLLBACKFAILED                       28561       // Internal error: Failed to roll back changes. [,,,,,]
#define SSCE_M_PROCESSDELETEFAILED                  28562       // Internal error: The delete message for the server was not created. [,,,,,]
#define SSCE_M_CLIENTAGENT_NOMEMORY                 28563       // The device does not have sufficient memory. SQL Server Compact cannot allocate more space on the device. There also might not be enough contiguous memory space. Try closing other applications. [,,,,,]
// DEAD SSCE_M_DELETEFAILED                         28564       // The delete action failed. For more details on this specific error code, check the HRESULT error and also refer to the MSDN OLE DB documentation. [,,,Table name,,]
#define SSCE_M_INSERTFAILED                         28565       // The insert action failed. For more details on this specific error code, check the HRESULT error and also refer to the MSDN OLE DB documentation. [,,,Table name,,]
#define SSCE_M_UPDATEFAILED                         28566       // The update action failed. For more details on this specific error code, check the HRESULT error and also refer to the MSDN OLE DB documentation. [,,,Table name,,]
#define SSCE_M_OPENTABLEFAILED                      28567       // Internal error: The table cannot be opened. [,,,Table name,,]
// DEAD SSCE_M_CLOSETABLEFAILED                     28568       // The table cannot be closed. [,,,Table name,,]
#define SSCE_M_INVALIDINDEX                         28569       // Internal error: The index cannot be set on the ROWGUID column. [,,,,,]
#define SSCE_M_ERRORFETCHINGDATA                    28570       // Internal error: The data row cannot be accessed. [,,,,,]
#define SSCE_M_ERRORFETCHINGCOLUMNDATA              28571       // Internal error: The column data for a row cannot be accessed. [,,,,,]
#define SSCE_M_ERRORSETTINGDATA                     28572       // Internal error: Row data cannot be set. [,,,,,]

//***** Don't add any more errors here, read the comments below and add appropriately
//
//Errors after this comment were added for v1.1 (PEBBLE) 
//
#define SSCE_M_TABLEALREADYEXISTS                   28573       // The LocalTableName parameter is already specified. [,,,Table name,,]

// Errors after this comment were added for v2.0 (DAYTONA)
//
#define SSCE_M_INTERNALERROR                        28574       // An internal error occurred. [ID,,,,,]
// DEAD SSCE_M_INSUFFICIENTLINEAGESPACE             28575       // There is not enough space for lineage in a row. [,,,,,]
#define SSCE_M_ERRORBINDINGCOLUMN                   28576       // Internal error: Could not bind to column. [,,,columnname,,]
#define SSCE_M_SCHEMAHASCHANGED                     28577       // The schema has changed since the table was pulled. [,,,,,]
#define SSCE_M_UNSUPPORTEDDATATYPE                  28578       // The data type is not valid. [Datatype,,,,,]
// DEAD SSCE_M_MOVENEXTFAILED                       28579       // The move to the next row failed. [,,,,,]
#define SSCE_M_INVALIDCOMPACTPARAMETER              28580       // The specified parameter is not valid. [,,,parameter name,,]
#define SSCE_M_FAILUREMAKINGMESSAGE                 28581       // Internal error: The message cannot be built. The Make Message failed. [,,,,,]
#define SSCE_M_INVALIDRDAPARAMETER                  28582       // The parameter is either not specified or not valid. [,,,,,]
#define SSCE_M_PUBLISHERLOGINMISSING                28583       // The Publisher login property is not specified. [,,,,,]

// Errors after this comment were added for v3.0 (LAGUNA)
//
// DEAD SSCE_M_INVALIDCONNECTIONRETRYTIMEOUT        28584       // The value specified for the ConnectionRetryTimeout property is not valid. [ConnectionRetryTimeout,,,,,]
// DEAD SSCE_M_INVALIDCOMPRESSIONLEVEL              28585       // The value specified for the CompressionLevel property is not valid. [CompressionLevel,,,,,]
#define SSCE_M_INVALIDREPLPARAMETER                 28586       // The parameter is either not specified or not valid. [,,,,,]
#define SSCE_M_INVALIDHOSTNAME                      28587       // The HostName property value does not match the one saved for the subscription. To resolve, use the original HostName or reinitialize the subscription. [,,,current hostname,original hostname,]
// DEAD SSCE_M_ROWHASCHANGED                        28588       // The row has changed by a different user and cannot be modified. [,,,,,]
#define SSCE_M_CONNMANMAPURLFAILED                  28589       // The Connection Manager could not map a URL into a connection. Check your Connection Manager settings. [,,,URL,,]
#define SSCE_M_CONNMANCONNECTFAILED                 28590       // The Connection Manager could not connect to the network. Check your Connection Manager settings. [,,,,,]
// DEAD SSCE_M_RESYNC                               28592       // An internal resync is necessary. User should never see this error. [,,,,,]
#define SSCE_M_SUBSCRIPTIONNOTFOUND                 28593       // The subscription was not found. Publisher, PublisherDatabase, or Publication  could be incorrect. [,,,,,]
#define SSCE_M_SUBSCRIPTIOWASNOTSAVED               28594       // The subscription could not be loaded because it was not saved. [,,,,,]


// DEAD SSCE_M_PROFILEEXISTS                        28595       // The profile already exists. [,,,,,]
// DEAD SSCE_M_PROFILEPROPENCRYPTFAILED             28596       // Encryption of a profile property failed. [,,,,,]
// DEAD SSCE_M_PROFILEPROPDECRYPTFAILED             28597       // Decryption of a profile property failed. [,,,,,]
#define SSCE_M_PROCESSVALIDATEFAILED                28598       // Validation of table row counts failed. Try resynchronizing. [,,,,,]
#define SSCE_M_NOTARGETKEY                          28599       // The referenced table must have a primary or candidate key. [,,,FK Name,,]
#define SSCE_M_DBINSYNC                             28600       // The database is currently synchronizing with the server. [,,,,,]
#define SSCE_M_STREAMACCESSDENIED                   28601       // Internal error: Stream access denied. [,,,,,]
#define SSCE_M_UNIQUEREQUIRED                       28602       // Internal error: When trying to add a GUID tracking column, SQL Server Compact could not create the column because the column did not contain the uniqueidentifier attribute. [,,,Column name, Table name,]
// DEAD SSCE_M_INVALIDROWVERSIONDEF                 28603       // Invalid type for rowversion column. [,,,Column name, Table name,]
#define SSCE_M_READONLYTABLE                        28604       // Internal error: This table is read-only. The internal system objects and system lock tables are not updateable. [,,,Table name,,]
#define SSCE_M_RESTRICTEDDDL                        28605       // Data Definition Language (DDL) operations are not allowed on this table, or on any system table or tracked user table.  Disable tracking before you run DDL operations. [,,,Table name,,]
#define SSCE_M_QPDEFAULTSSERVICEMISSING             28606       // QP is missing and it is required to evaluate default expressions. Ensure that Query Processor module is in the same directory as the Storage Engine module. [,,,,,]
#define SSCE_M_TABLEDOESNOTEXIST                    28607       // The table does not exist [,,,Table name,,]
#define SSCE_M_CANTMODIFYCOLUMNTYPE                 28608       // Internal error: Cannot modify the column type [,,,Table name, Column name,]
#define SSCE_M_INVALIDDBVERSION                     28609       // Incompatible Database Version. If this was a compatible file, run repair. For other cases refer to documentation. [Db version,Requested version,,File name,,]
#define SSCE_M_SINGLEUSEROPERATION                  28610       // This operation requires the database to be opened in a single user mode and the database is currently in a multi-user mode. [,,,File name,,]
#define SSCE_M_PATHTOOLONG                          28611       // The file resolves to a path that is too long. The maximum length is 260 characters. [,,,File name,,]
#define SSCE_M_INVALIDRDAERRORTABLE                 28612       // The schema of the RDA error table  is not valid. Delete the error table and try to repull the table. [,,,,,]
#define SSCE_M_STRINGTOGUIDFAILED                   28613       // Internal error: Failure converting string to GUID. [,,,String,,]
#define SSCE_M_GETMINORERRORFAILED                  28614       // Internal error: Internal error: Failed to get the minor error code. [,,,,,]
#define SSCE_M_GETROWGUIDINDEXFAILED                28615       // Internal error: Failed to get the index on the row GUID. [,,,Table name, Guid Column Name,]
#define SSCE_M_CHECKLOCALTABLEFAILED                28616       // Internal error: Failure checking existance of local table. [,,,Table name,,]
// DEAD SSCE_M_GETIDENTITYCOLUMN                    28617       // Failed to get the name of the identity column. [,,,Table name,,]
#define SSCE_M_QUERYINTERFACE                       28618       // Internal error: QueryInterface failed. [,,,,,]
#define SSCE_M_SEQUENTIALSTREAMFAILURE              28619       // Internal error: Failure reading from SequentialStream. [,,,,,]
#define SSCE_M_OPENROWSETFAILED                     28620       // Internal error: Opening of the rowset failed. [,,,,,]
#define SSCE_M_BINDINGS                             28621       // Internal error: Failure setting up bindings, possibly caused by insufficient permissions. [,,,,,] [,,,,,]
#define SSCE_M_NONPARAMQUERY                        28622       // Internal error: Failure setting up a non parameterized query, possible incorrect SQL query. [,,,,,]
#define SSCE_M_INCORRECTDATABASETYPE                28623       // Internal error: SQL Server Compact function called with SQL database type. [,,,,,]
#define SSCE_M_CLOSECURSORFAILED                    28624       // Internal error: Failure closing a cursor. [,,,,,]
#define SSCE_M_COLUMNINFO                           28625       // Internal error: Failure getting column information. [,,,,,]
#define SSCE_M_SETCOLUMN                            28626       // Internal error: Failure setting column value. [,,,,,]
#define SSCE_M_OPENSQLSERVER                        28627       // Failure to open SQL Server with given connect string. [,,,connect string,,]
#define SSCE_M_CLOSEDATABASEFAILED                  28628       // Internal error: Closing the database failed. [,,,,,]
#define SSCE_M_DELETEDATABASE                       28629       // Deleting the database failed. Ensure that other applications do not have the database open. [,,,,,]
#define SSCE_M_STARTTRANSACTION                     28630       // Starting the transaction failed. Try to reduce the number of other open transactions in the application. [,,,,,]
#define SSCE_M_HTTPOPENREQUEST                      28631       // WinInet Error: HTTP Open request failed. [,,,,,]
#define SSCE_M_UNEXPECTEDHTTPSTATUS                 28632       // IIS Error: IIS returned an HTTP status that is not expected to be returned to SQL Server Compact client. This error does not mean that the synchronization did not work, it only means that SQL Server Compact does not recognize the error from IIS. [,,,status,,]
#define SSCE_M_OPENMESSAGEFILE                      28633       // Internal error: Failure opening the message file. This occurs when processing the message fails on the client side. [,,,,,]
#define SSCE_M_WRITEMESSAGEFILE                     28634       // Failure writing to a message file on the device. The error typically comes from running out of memory. While there might appear to be plenty of available memory on the device, there might not be enough contiguous memory. Try closing other applications or warm booting the device. [,,,,,]
#define SSCE_M_READMESSAGEFILE                      28635       // Failure reading from a message file. The error typically comes from running out of memory. While there might appear to be plenty of available memory on the device, there might not be enough contiguous memory. Try closing other applications or warm booting the device. [,,,,,]
#define SSCE_M_CLOSETRANSPORT                       28636       // Internal error: Failure closing the transport. [,,,,,]
#define SSCE_M_DROPDATABASE                         28637       // Could not delete the database because more then one subscription exists. [,,,Publication, Publication Database, Publisher]
#define SSCE_M_DUPLICATETABLE                       28638       // Existing subscription already contains table included in the new subscription. [,,,Table name,,]
#define SSCE_M_SYNCPARTNERGENERATIONFAILED          28639       // Internal error: A sync partner ID (GUID value) was not generated. [,,,,,]
#define SSCE_M_INVALIDSNAPSHOTTRANSFERTYPE          28640       // The value specified for the SnapshotTransferType property is not valid. Valid values are 0 and 1. [SnapshotTransferType,,,,,]
#define SSCE_M_SYNCHADWARNINGS                      28641       // The synchronization succeeded but generated warnings. [No of warnings generated,No of warnings in error collection,,,,]
#define SSCE_M_RDABASEROWMISSING                    28642       // Internal error: Unable to create error table row because corresponding base table row has been deleted. [,,,,,]
// DEAD SSCE_M_TRACEALREADYON                       28643       // The tracer is already switched on. [,,,,,]
#define SSCE_M_PROPERTYMISSING                      28644       // A required property is not specified. [,,,Property name,,]
#define SSCE_M_INVALIDPROPERTYVALUENUMERIC          28645       // An invalid value was supplied for a property. [property value,,,Property name,,]
#define SSCE_M_SYNC_CANCELED                        28646       // The sync has been canceled. [,,,,,]

// Errors after this comment were added for v3.5
//
#define SSCE_M_DBAUTOUPGRADEFAILED                  28647       // The database auto upgrade from recognized old database format to the current database format failed due to a read-only connection.  Please open a the connection in write mode to perform auto upgrade. [Db version,Requested version,,File name,,]
#define SSCE_M_CONFLICTINGSUBSCRIPTION              28648       // There is a conflicting subscription found. Can't use replication protocols RDA or merge with OCS. [,,,Table name,,]

// Errors after this comment were added for v3.5 SP1
//
#define SSCE_M_AUTOPROXYURLACCESSFAILED             28649      // The proxy information can not be retrieved for the URL. proxyURL can not be accessed, try to manually access proxyURL [URL,proxyURL,,,,]
#define SSCE_M_AUTOPROXYCALLFAILED                  28650      // Calling a method in JSProxy dll failed. Make sure JSProxy.dll is in path, and the method is exposed and can be called. [method name,,,,,]

// Warnings
//
#define SSCE_WRN_RDAERRORROWSRETURNED               28800       // The Push returned one or more error rows. See the specified error table. [,,,,,]
#define SSCE_WRN_SUBWINSERRORSFIXED                 28801       // A data error occurred and was fixed. Call SqlCeReplication.Synchronize (or Run in eVC/eVB) method again to merge data. [,,,,,]

//
// Warnings after this comment were added for v1.1 (PEBBLE) 

// Warnings after this comment were addef for v3.0 (Laguna)
//
#define SSCE_WRN_FAILEDUPLOAD                       28802       // A subscriber row failed to apply at the publisher. Review the error parameters and the conflict logging tables at the publisher to determine the reason the row failed to apply. [,,,Table name, Row guid,]

// --------------------------------------------------------------------------------------
//
// Server Agent     29000 - 29499
//
// DEAD SSCE_M_UNEXPECTEDSTATEREADINGGENINFO        29000       // An unexpected state was found when reading generation information. [,,,,,]
#define SSCE_M_EXPECTEDINSERTUPDATESONLY            29001       // Internal error: An unexpected state was encountered when processing inserts or updates. [,,,,,]
// DEAD SSCE_M_IDENTITYSEEDORRANGETOOLARGE          29002       // The identity seed or range is too large. [,,,,,]
// DEAD SSCE_M_UNEXPECTEDSTATEPROCESSINGTOMBSTONES  29003       // An unexpected state was encountered when processing deletes. [,,,,,]
#define SSCE_M_CANTCOCREATEMSDAINITIALIZE           29004       // The OLE DB provider for SQL Server cannot be initialized. Check if SQLOLEDB.dll is installed correctly. [,,,,,]
#define SSCE_M_RSCBWITHSAMEEXCHANGEID               29005       // A replication session control block already exists. The IIS server was probably shut down during a synchronization process. Try synchronizing again. [,,,,,]
#define SSCE_M_SQLRECONCILERFAILED                  29006       // A call to SQL Server Reconciler failed. Try to resynchronize. [,,,,,]
#define SSCE_M_QUERYCANNOTBETRACKED                 29007       // The query cannot be tracked. There might not be a primary key, or the query might involve multiple tables. [,,,Query string,,]
// DEAD SSCE_M_PREPAREUPDATECMDFAILED               29008       // The prepare/update command process failed. [,,,,,]
#define SSCE_M_EXPRESSIONWITHOUTALIAS               29009       // Internal error: The expression or literal cannot be processed without an alias. RDA error. [,,,,,]
#define SSCE_M_NOPRIMARYKEY                         29010       // The table does not have a primary key. [,,,Table name,,]
#define SSCE_M_ROWVERCOLUMN                         29011       // The table contains a timestamp or another row versioning column. [,,,Table name,,]
#define SSCE_M_INVALIDPUSHSEQUENCE                  29012       // Internal error: An error occurred during the push operation in the SQL Server Compact Server Agent. [,,,,,]
// DEAD SSCE_M_PUSHPARAMSETONVALUE                  29013       // The attempt to replace an existing parameter value in the push operation failed. [,,,,,]
// DEAD SSCE_M_NOTALLPARAMSETFORPUSH                29014       // Incomplete parameters were set for the push operation. [,,,,,]
#define SSCE_M_PUSHPKCOLCOUNTMISMATCH               29015       // The expected number of columns in the primary key on SQL Server does not match the count in SQL Server Compact Edition. The schema on SQL Server has changed since the last RDA Pull. The table will have to be PULLED again to match the primary key schema defined on SQL Server. [Supplied count, Expected count,,,,]
#define SSCE_M_VF_MISSINGSERVERCOLUMN               29016       // Client-side and server-side columns for the RDA table do not match. [,,,Table name,,]
#define SSCE_M_VF_MISMATCHEDTYPES                   29017       // The OLE DB data type information in the SQL Server Compact columns does not match the information in the SQL Server columns for the RDA table. [Client type, Server type,,Table name,,]
#define SSCE_M_VF_MISSINGTABLE                      29018       // No columns were found. Either the table name is missing or the permissions are not valid. [,,,Table name,,]
#define SSCE_M_NOROWSAFFECTED                       29020       // A row cannot be updated or deleted in the SQL Server by using RDA. [,,,,,]
#define SSCE_M_TOOMANYROWSAFFECTED                  29021       // More than one row was affected by an RDA update or delete operation in the SQL Server database. [,,,,,]
#define SSCE_M_INCORRECTPROVIDERVERSION             29022       // The version of the Microsoft OLE DB Provider for SQL Server is not correct. Install MDAC 2.8 or later. [,,,Version,,]
#define SSCE_M_INCORRECTPROVIDER                    29023       // The OLE DB Provider for SQL Server on the computer running IIS is not compatible with SQL Server Compact Edition. Install MDAC 2.8 or later. [,,,Provider,,]
#define SSCE_M_VF_PRIMARYKEYCHANGE                  29024       // The push operation cannot match the order of the primary key columns on the client side and server side. Repull the table or reset the primary key column. [,,,,,]
#define SSCE_M_VF_MISSINGSERVERPKCOLUMN             29025       // The push operation cannot find a primary key column on the SQL Server table. [,,,,,]
#define SSCE_M_VF_EXTRASERVERPKCOLUMN               29026       // The push operation has found an extra primary key column on the SQL Server table. [,,,,,]
// DEAD SSCE_M_MISSINGCOLUMNSCHEMACOLS              29027       // The current OLE DB provider is not supported. [,,,,,]
#define SSCE_M_UNSUPPORTEDOLEDBTYPE                 29028       // The OLE DB data type is not supported by the Microsoft OLE DB Provider for SQL Server. Install MDAC 2.8 or later. [Data type,,,,,]
#define SSCE_M_VF_NONLOBIUNKNOWN                    29029       // Internal error: The SQL Server Compact column metadata information does not match with the OLEDB provider (non-SQL Server). [,,,,,]
#define SSCE_M_NOTRACKPKCOLMISSING                  29030       // The query cannot be tracked because one or more columns of the primary key are missing. [,,,,,]
#define SSCE_M_NOTRACKCOMPUTEDCOLUMN                29031       // The query cannot be tracked because the table includes a computed column that cannot be pulled. [,,,,,]
#define SSCE_M_NOTRACKMULTITABLE                    29032       // The query cannot be tracked because it is a multi-table query. [,,,,,]
#define SSCE_M_INVALIDCODEPAGE                      29033       // The server code page, or the override code page, is either not valid or not installed on the computer running IIS. [Code page,,,,,]
//***** Don't add any more errors here, read the comments below and add appropriately
// 
// Following error is a V1.1 (Pebble) error
// included here due to the numbering problem that produced the gap below.
//
#define SSCE_M_MISMATCHEDCOMPONENTS                 29034       // The Client Agent and Server Agent component versions are incompatible. The compatible versions are: Client Agent versions 3.0 and 3.5 with Server Agent versions 3.5 and Client Agent version 3.5 with Server Agent version 3.5. Re-install the replication components with the matching versions for client and server agents. [,,,Client Agent version,Server Agent version,]
// Note:  There is a gap in the numbering here. Do not renumber the following, since they are already documented.
//        New errors for this section should continue from the highest value in the section.
//        The two errors below are from V1.0    
//
#define SSCE_M_RSCBTIMEDOUT                         29042       // The replication session was inactive for longer than the cleanup interval and the synchronization was cancelled. This typically occurs when the server has an extremely high CPU utilization. The default of 2 hrs was exceeded. Try the operation again. [,,,,,]
// DEAD SSCE_M_NOPROXYSERVERSUPPORT                 29043       // The operating system on the Windows CE-based device does not support authenticated proxy servers. [,,,,,]
//
// Errors after this comment were added for v1.1 (PEBBLE) 
//
#define SSCE_M_FILERENAMEFAILED                     29044       // SQL Server Compact failed to rename an .IN file to .OUT on the IIS server.  This typically occurs when there are large amounts of referential integrity retry situations on SQL Server Compact while using merge replication because of which SQL Server Compact is unable to modify the file name extensions. Try again. [,,,,,]
#define SSCE_M_INITIALIZERECONCILERFAILED           29045       // Initializing SQL Server Reconciler has failed. Try again. [,,,,,]

//
// Errors after this comment were added for v2.0 (DAYTONA)
//
#define SSCE_M_READONLY                             29046       // While performing an RDA Push, SQL Server Compact was only able to obtain a read-only cursor on the table(s) being pushed to SQL Server. There could be locking conflicts on SQL Server while trying to do the push. Verify that the table on SQL Server is updatable and try again. [,,,,,]
// DEAD SSCE_M_PROCESSINGROWS                       29047       // Row processing resulted in an error. [,,,,,]
#define SSCE_M_IMPERSONATIONFAILED                  29048       // The Windows user account could not be impersonated at the computer running IIS. [,,,,,]

//
// Errors after this comment were added for v3.0 (LAGUNA)
//
#define SSCE_M_CANTCONNECTTOPUBLISHER               29049       // The server agent could not connect to the publisher. [,,,,,]
#define SSCE_M_GETROWSET                            29050       // Internal error: Failure getting a rowset. [,,,,,]
#define SSCE_M_GETCOLUMNS                           29051       // Internal error: Failure getting columns. [,,,,,]
#define SSCE_M_CREATEINDEXSQL                       29052       // Internal error: Failure generating RDA create index SQL statement. [,,,,,]
#define SSCE_M_CREATETABLESQL                       29053       // Internal error: Failure generating RDA create table SQL statement. [,,,,,]
#define SSCE_M_GETPRIMARYKEYCOLUMNS                 29054       // Internal error: Failure getting RDA primary key columns. . [,,,,,]
#define SSCE_M_CREATEPRIMARYKEY                     29055       // Internal error: Failure generating create RDA primary key sql statement. [,,,,,]
#define SSCE_M_VERIFYSCHEMA                         29056       // Internal error: Failure while verifying RDA schema. [,,,,,]
#define SSCE_M_PREPAREINSERT                        29057       // Internal error: Failure while preparing an RDA insert. [,,,,,]
#define SSCE_M_PREPAREUPDATE                        29058       // Internal error: Failure while preparing an RDA update. [,,,,,]
#define SSCE_M_PREPAREDELETE                        29059       // Internal error: Failure while preparing an RDA delete. [,,,,,]
#define SSCE_M_CONNECTFAILURESQL                    29060       // Failure to connect to SQL Server with provided connection information. SQL Server does not exist, access is denied because the SQL user is not a valid user on the SQL Server, or the password is incorrect.[,,,,,]
#define SSCE_M_CONNECTFAILUREIIS                    29061       // Failure to connect to SQL Server with provided connection information. SQL Server does not exist, access is denied because the IIS user is not a valid user on the SQL Server, or the password is incorrect.[,,,,,]
#define SSCE_M_SELECTSTRINGMISSING                  29062       // The SQLSelectString parameter is not specified. [,,,,,] 

// --------------------------------------------------------------------------------------
//
// Message Protocol     29500- 29999
//  
#define SSCE_M_TRANSPORTREADWRONGSIZE               29500       // Internal error: The transport read operation returned an incorrect data length. [Returned length,Expected length,,,,]
#define SSCE_M_UNEXPECTEDSTATEWRITINGMESSAGE        29501       // Internal error: The write message failed. [,,,,,]
#define SSCE_M_INVALIDCOLUMNNUMBER                  29502       // Internal error: The schema on SQL Server differs from the schema on SQL Server Compact Edition. [Column number,,,Table name,,]
#define SSCE_M_CANTFINDCOLUMNBYNAME                 29503      