ORD *_pdwStubPhase);
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE Recordset15_get_CacheSize_Proxy( 
    Recordset15 * This,
    /* [retval][out] */ long *pl);
void __RPC_STUB Recordset15_get_CacheSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE Recordset15_put_CacheSize_Proxy( 
    Recordset15 * This,
    /* [in] */ long CacheSize);
void __RPC_STUB Recordset15_put_CacheSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE Recordset15_get_CursorType_Proxy( 
    Recordset15 * This,
    /* [retval][out] */ CursorTypeEnum *plCursorType);
void __RPC_STUB Recordset15_get_CursorType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE Recordset15_put_CursorType_Proxy( 
    Recordset15 * This,
    /* [in] */ CursorTypeEnum lCursorType);
void __RPC_STUB Recordset15_put_CursorType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE Recordset15_get_EOF_Proxy( 
    Recordset15 * This,
    /* [retval][out] */ VARIANT_BOOL *pb);
void __RPC_STUB Recordset15_get_EOF_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE Recordset15_get_Fields_Proxy( 
    Recordset15 * This,
    /* [retval][out] */ ADOFields **ppvObject);
void __RPC_STUB Recordset15_get_Fields_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE Recordset15_get_LockType_Proxy( 
    Recordset15 * This,
    /* [retval][out] */ LockTypeEnum *plLockType);
void __RPC_STUB Recordset15_get_LockType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE Recordset15_put_LockType_Proxy( 
    Recordset15 * This,
    /* [in] */ LockTypeEnum lLockType);
void __RPC_STUB Recordset15_put_LockType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE Recordset15_get_MaxRecords_Proxy( 
    Recordset15 * This,
    /* [retval][out] */ ADO_LONGPTR *plMaxRecords);
void __RPC_STUB Recordset15_get_MaxRecords_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE Recordset15_put_MaxRecords_Proxy( 
    Recordset15 * This,
    /* [in] */ ADO_LONGPTR lMaxRecords);
void __RPC_STUB Recordset15_put_MaxRecords_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE Recordset15_get_RecordCount_Proxy( 
    Recordset15 * This,
    /* [retval][out] */ ADO_LONGPTR *pl);
void __RPC_STUB Recordset15_get_RecordCount_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propputref][id] */ HRESULT STDMETHODCALLTYPE Recordset15_putref_Source_Proxy( 
    Recordset15 * This,
    /* [in] */ IDispatch *pcmd);
void __RPC_STUB Recordset15_putref_Source_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE Recordset15_put_Source_Proxy( 
    Recordset15 * This,
    /* [in] */ BSTR bstrConn);
void __RPC_STUB Recordset15_put_Source_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE Recordset15_get_Source_Proxy( 
    Recordset15 * This,
    /* [retval][out] */ VARIANT *pvSource);
void __RPC_STUB Recordset15_get_Source_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Recordset15_AddNew_Proxy( 
    Recordset15 * This,
    /* [optional][in] */ VARIANT FieldList,
    /* [optional][in] */ VARIANT Values);
void __RPC_STUB Recordset15_AddNew_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Recordset15_CancelUpdate_Proxy( 
    Recordset15 * This);
void __RPC_STUB Recordset15_CancelUpdate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Recordset15_Close_Proxy( 
    Recordset15 * This);
void __RPC_STUB Recordset15_Close_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Recordset15_Delete_Proxy( 
    Recordset15 * This,
    /* [defaultvalue][in] */ AffectEnum AffectRecords);
void __RPC_STUB Recordset15_Delete_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Recordset15_GetRows_Proxy( 
    Recordset15 * This,
    /* [defaultvalue][in] */ long Rows,
    /* [optional][in] */ VARIANT Start,
    /* [optional][in] */ VARIANT Fields,
    /* [retval][out] */ VARIANT *pvar);
void __RPC_STUB Recordset15_GetRows_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Recordset15_Move_Proxy( 
    Recordset15 * This,
    /* [in] */ ADO_LONGPTR NumRecords,
    /* [optional][in] */ VARIANT Start);
void __RPC_STUB Recordset15_Move_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Recordset15_MoveNext_Proxy( 
    Recordset15 * This);
void __RPC_STUB Recordset15_MoveNext_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Recordset15_MovePrevious_Proxy( 
    Recordset15 * This);
void __RPC_STUB Recordset15_MovePrevious_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Recordset15_MoveFirst_Proxy( 
    Recordset15 * This);
void __RPC_STUB Recordset15_MoveFirst_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Recordset15_MoveLast_Proxy( 
    Recordset15 * This);
void __RPC_STUB Recordset15_MoveLast_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Recordset15_Open_Proxy( 
    Recordset15 * This,
    /* [optional][in] */ VARIANT Source,
    /* [optional][in] */ VARIANT ActiveConnection,
    /* [defaultvalue][in] */ CursorTypeEnum CursorType,
    /* [defaultvalue][in] */ LockTypeEnum LockType,
    /* [defaultvalue][in] */ LONG Options);
void __RPC_STUB Recordset15_Open_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Recordset15_Requery_Proxy( 
    Recordset15 * This,
    /* [defaultvalue][in] */ LONG Options);
void __RPC_STUB Recordset15_Requery_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [hidden] */ HRESULT STDMETHODCALLTYPE Recordset15__xResync_Proxy( 
    Recordset15 * This,
    /* [defaultvalue][in] */ AffectEnum AffectRecords);
void __RPC_STUB Recordset15__xResync_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Recordset15_Update_Proxy( 
    Recordset15 * This,
    /* [optional][in] */ VARIANT Fields,
    /* [optional][in] */ VARIANT Values);
void __RPC_STUB Recordset15_Update_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE Recordset15_get_AbsolutePage_Proxy( 
    Recordset15 * This,
    /* [retval][out] */ PositionEnum_Param *pl);
void __RPC_STUB Recordset15_get_AbsolutePage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE Recordset15_put_AbsolutePage_Proxy( 
    Recordset15 * This,
    /* [in] */ PositionEnum_Param Page);
void __RPC_STUB Recordset15_put_AbsolutePage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE Recordset15_get_EditMode_Proxy( 
    Recordset15 * This,
    /* [retval][out] */ EditModeEnum *pl);
void __RPC_STUB Recordset15_get_EditMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE Recordset15_get_Filter_Proxy( 
    Recordset15 * This,
    /* [retval][out] */ VARIANT *Criteria);
void __RPC_STUB Recordset15_get_Filter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE Recordset15_put_Filter_Proxy( 
    Recordset15 * This,
    /* [in] */ VARIANT Criteria);
void __RPC_STUB Recordset15_put_Filter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE Recordset15_get_PageCount_Proxy( 
    Recordset15 * This,
    /* [retval][out] */ ADO_LONGPTR *pl);
void __RPC_STUB Recordset15_get_PageCount_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE Recordset15_get_PageSize_Proxy( 
    Recordset15 * This,
    /* [retval][out] */ long *pl);
void __RPC_STUB Recordset15_get_PageSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE Recordset15_put_PageSize_Proxy( 
    Recordset15 * This,
    /* [in] */ long PageSize);
void __RPC_STUB Recordset15_put_PageSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE Recordset15_get_Sort_Proxy( 
    Recordset15 * This,
    /* [retval][out] */ BSTR *Criteria);
void __RPC_STUB Recordset15_get_Sort_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE Recordset15_put_Sort_Proxy( 
    Recordset15 * This,
    /* [in] */ BSTR Criteria);
void __RPC_STUB Recordset15_put_Sort_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE Recordset15_get_Status_Proxy( 
    Recordset15 * This,
    /* [retval][out] */ long *pl);
void __RPC_STUB Recordset15_get_Status_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE Recordset15_get_State_Proxy( 
    Recordset15 * This,
    /* [retval][out] */ LONG *plObjState);
void __RPC_STUB Recordset15_get_State_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [hidden] */ HRESULT STDMETHODCALLTYPE Recordset15__xClone_Proxy( 
    Recordset15 * This,
    /* [retval][out] */ _ADORecordset **ppvObject);
void __RPC_STUB Recordset15__xClone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Recordset15_UpdateBatch_Proxy( 
    Recordset15 * This,
    /* [defaultvalue][in] */ AffectEnum AffectRecords);
void __RPC_STUB Recordset15_UpdateBatch_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Recordset15_CancelBatch_Proxy( 
    Recordset15 * This,
    /* [defaultvalue][in] */ AffectEnum AffectRecords);
void __RPC_STUB Recordset15_CancelBatch_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE Recordset15_get_CursorLocation_Proxy( 
    Recordset15 * This,
    /* [retval][out] */ CursorLocationEnum *plCursorLoc);
void __RPC_STUB Recordset15_get_CursorLocation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE Recordset15_put_CursorLocation_Proxy( 
    Recordset15 * This,
    /* [in] */ CursorLocationEnum lCursorLoc);
void __RPC_STUB Recordset15_put_CursorLocation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Recordset15_NextRecordset_Proxy( 
    Recordset15 * This,
    /* [optional][out] */ VARIANT *RecordsAffected,
    /* [retval][out] */ _ADORecordset **ppiRs);
void __RPC_STUB Recordset15_NextRecordset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Recordset15_Supports_Proxy( 
    Recordset15 * This,
    /* [in] */ CursorOptionEnum CursorOptions,
    /* [retval][out] */ VARIANT_BOOL *pb);
void __RPC_STUB Recordset15_Supports_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE Recordset15_get_Collect_Proxy( 
    Recordset15 * This,
    /* [in] */ VARIANT Index,
    /* [retval][out] */ VARIANT *pvar);
void __RPC_STUB Recordset15_get_Collect_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [hidden][id][propput] */ HRESULT STDMETHODCALLTYPE Recordset15_put_Collect_Proxy( 
    Recordset15 * This,
    /* [in] */ VARIANT Index,
    /* [in] */ VARIANT value);
void __RPC_STUB Recordset15_put_Collect_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE Recordset15_get_MarshalOptions_Proxy( 
    Recordset15 * This,
    /* [retval][out] */ MarshalOptionsEnum *peMarshal);
void __RPC_STUB Recordset15_get_MarshalOptions_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE Recordset15_put_MarshalOptions_Proxy( 
    Recordset15 * This,
    /* [in] */ MarshalOptionsEnum eMarshal);
void __RPC_STUB Recordset15_put_MarshalOptions_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Recordset15_Find_Proxy( 
    Recordset15 * This,
    /* [in] */ BSTR Criteria,
    /* [defaultvalue][in] */ ADO_LONGPTR SkipRecords,
    /* [defaultvalue][in] */ SearchDirectionEnum SearchDirection,
    /* [optional][in] */ VARIANT Start);
void __RPC_STUB Recordset15_Find_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
#endif 	/* __Recordset15_INTERFACE_DEFINED__ */
#ifndef __Recordset20_INTERFACE_DEFINED__
#define __Recordset20_INTERFACE_DEFINED__
/* interface Recordset20 */
/* [object][helpcontext][uuid][nonextensible][hidden][dual] */ 
EXTERN_C const IID IID_Recordset20;
#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0000054F-0000-0010-8000-00AA006D2EA4")
    Recordset20 : public Recordset15
    {
    public:
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Cancel( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DataSource( 
            /* [retval][out] */ IUnknown **ppunkDataSource) = 0;
        
        virtual /* [helpcontext][propputref][id] */ HRESULT STDMETHODCALLTYPE putref_DataSource( 
            /* [in] */ IUnknown *punkDataSource) = 0;
        
        virtual /* [hidden] */ HRESULT STDMETHODCALLTYPE _xSave( 
            /* [defaultvalue][in] */ BSTR FileName = L"",
            /* [defaultvalue][in] */ PersistFormatEnum PersistFormat = adPersistADTG) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ActiveCommand( 
            /* [retval][out] */ IDispatch **ppCmd) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_StayInSync( 
            /* [in] */ VARIANT_BOOL bStayInSync) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_StayInSync( 
            /* [retval][out] */ VARIANT_BOOL *pbStayInSync) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetString( 
            /* [defaultvalue][in] */ StringFormatEnum StringFormat,
            /* [defaultvalue][in] */ long NumRows,
            /* [defaultvalue][in] */ BSTR ColumnDelimeter,
            /* [defaultvalue][in] */ BSTR RowDelimeter,
            /* [defaultvalue][in] */ BSTR NullExpr,
            /* [retval][out] */ BSTR *pRetString) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DataMember( 
            /* [retval][out] */ BSTR *pbstrDataMember) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DataMember( 
            /* [in] */ BSTR bstrDataMember) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE CompareBookmarks( 
            /* [in] */ VARIANT Bookmark1,
            /* [in] */ VARIANT Bookmark2,
            /* [retval][out] */ CompareEnum *pCompare) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Clone( 
            /* [defaultvalue][in] */ LockTypeEnum LockType,
            /* [retval][out] */ _ADORecordset **ppvObject) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Resync( 
            /* [defaultvalue][in] */ AffectEnum AffectRecords = adAffectAll,
            /* [defaultvalue][in] */ ResyncEnum ResyncValues = adResyncAllValues) = 0;
        
    };
    
#else 	/* C style interface */
    typedef struct Recordset20Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Recordset20 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Recordset20 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Recordset20 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Recordset20 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Recordset20 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Recordset20 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Recordset20 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Properties )( 
            Recordset20 * This,
            /* [retval][out] */ ADOProperties **ppvObject);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AbsolutePosition )( 
            Recordset20 * This,
            /* [retval][out] */ PositionEnum_Param *pl);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AbsolutePosition )( 
            Recordset20 * This,
            /* [in] */ PositionEnum_Param Position);
        
        /* [helpcontext][propputref][id] */ HRESULT ( STDMETHODCALLTYPE *putref_ActiveADOConnection )( 
            Recordset20 * This,
            /* [in] */ IDispatch *pconn);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ActiveConnection )( 
            Recordset20 * This,
            /* [in] */ VARIANT vConn);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ActiveConnection )( 
            Recordset20 * This,
            /* [retval][out] */ VARIANT *pvar);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BOF )( 
            Recordset20 * This,
            /* [retval][out] */ VARIANT_BOOL *pb);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Bookmark )( 
            Recordset20 * This,
            /* [retval][out] */ VARIANT *pvBookmark);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Bookmark )( 
            Recordset20 * This,
            /* [in] */ VARIANT vBookmark);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CacheSize )( 
            Recordset20 * This,
            /* [retval][out] */ long *pl);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CacheSize )( 
            Recordset20 * This,
            /* [in] */ long CacheSize);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CursorType )( 
            Recordset20 * This,
            /* [retval][out] */ CursorTypeEnum *plCursorType);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CursorType )( 
            Recordset20 * This,
            /* [in] */ CursorTypeEnum lCursorType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EOF )( 
            Recordset20 * This,
            /* [retval][out] */ VARIANT_BOOL *pb);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Fields )( 
            Recordset20 * This,
            /* [retval][out] */ ADOFields **ppvObject);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LockType )( 
            Recordset20 * This,
            /* [retval][out] */ LockTypeEnum *plLockType);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LockType )( 
            Recordset20 * This,
            /* [in] */ LockTypeEnum lLockType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MaxRecords )( 
            Recordset20 * This,
            /* [retval][out] */ ADO_LONGPTR *plMaxRecords);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MaxRecords )( 
            Recordset20 * This,
            /* [in] */ ADO_LONGPTR lMaxRecords);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RecordCount )( 
            Recordset20 * This,
            /* [retval][out] */ ADO_LONGPTR *pl);
        
        /* [helpcontext][propputref][id] */ HRESULT ( STDMETHODCALLTYPE *putref_Source )( 
            Recordset20 * This,
            /* [in] */ IDispatch *pcmd);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Source )( 
            Recordset20 * This,
            /* [in] */ BSTR bstrConn);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Source )( 
            Recordset20 * This,
            /* [retval][out] */ VARIANT *pvSource);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddNew )( 
            Recordset20 * This,
            /* [optional][in] */ VARIANT FieldList,
            /* [optional][in] */ VARIANT Values);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CancelUpdate )( 
            Recordset20 * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            Recordset20 * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            Recordset20 * This,
            /* [defaultvalue][in] */ AffectEnum AffectRecords);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetRows )( 
            Recordset20 * This,
            /* [defaultvalue][in] */ long Rows,
            /* [optional][in] */ VARIANT Start,
            /* [optional][in] */ VARIANT Fields,
            /* [retval][out] */ VARIANT *pvar);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            Recordset20 * This,
            /* [in] */ ADO_LONGPTR NumRecords,
            /* [optional][in] */ VARIANT Start);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            Recordset20 * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *MovePrevious )( 
            Recordset20 * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *MoveFirst )( 
            Recordset20 * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *MoveLast )( 
            Recordset20 * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Open )( 
            Recordset20 * This,
            /* [optional][in] */ VARIANT Source,
            /* [optional][in] */ VARIANT ActiveConnection,
            /* [defaultvalue][in] */ CursorTypeEnum CursorType,
            /* [defaultvalue][in] */ LockTypeEnum LockType,
            /* [defaultvalue][in] */ LONG Options);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Requery )( 
            Recordset20 * This,
            /* [defaultvalue][in] */ LONG Options);
        
        /* [hidden] */ HRESULT ( STDMETHODCALLTYPE *_xResync )( 
            Recordset20 * This,
            /* [defaultvalue][in] */ AffectEnum AffectRecords);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            Recordset20 * This,
            /* [optional][in] */ VARIANT Fields,
            /* [optional][in] */ VARIANT Values);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AbsolutePage )( 
            Recordset20 * This,
            /* [retval][out] */ PositionEnum_Param *pl);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AbsolutePage )( 
            Recordset20 * This,
            /* [in] */ PositionEnum_Param Page);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EditMode )( 
            Recordset20 * This,
            /* [retval][out] */ EditModeEnum *pl);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Filter )( 
            Recordset20 * This,
            /* [retval][out] */ VARIANT *Criteria);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Filter )( 
            Recordset20 * This,
            /* [in] */ VARIANT Criteria);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PageCount )( 
            Recordset20 * This,
            /* [retval][out] */ ADO_LONGPTR *pl);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PageSize )( 
            Recordset20 * This,
            /* [retval][out] */ long *pl);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PageSize )( 
            Recordset20 * This,
            /* [in] */ long PageSize);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Sort )( 
            Recordset20 * This,
            /* [retval][out] */ BSTR *Criteria);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Sort )( 
            Recordset20 * This,
            /* [in] */ BSTR Criteria);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Status )( 
            Recordset20 * This,
            /* [retval][out] */ long *pl);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            Recordset20 * This,
            /* [retval][out] */ LONG *plObjState);
        
        /* [hidden] */ HRESULT ( STDMETHODCALLTYPE *_xClone )( 
            Recordset20 * This,
            /* [retval][out] */ _ADORecordset **ppvObject);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *UpdateBatch )( 
            Recordset20 * This,
            /* [defaultvalue][in] */ AffectEnum AffectRecords);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CancelBatch )( 
            Recordset20 * This,
            /* [defaultvalue][in] */ AffectEnum AffectRecords);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CursorLocation )( 
            Recordset20 * This,
            /* [retval][out] */ CursorLocationEnum *plCursorLoc);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CursorLocation )( 
            Recordset20 * This,
            /* [in] */ CursorLocationEnum lCursorLoc);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *NextADORecordset )( 
            Recordset20 * This,
            /* [optional][out] */ VARIANT *RecordsAffected,
            /* [retval][out] */ _ADORecordset **ppiRs);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Supports )( 
            Recordset20 * This,
            /* [in] */ CursorOptionEnum CursorOptions,
            /* [retval][out] */ VARIANT_BOOL *pb);
        
        /* [hidden][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Collect )( 
            Recordset20 * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ VARIANT *pvar);
        
        /* [hidden][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Collect )( 
            Recordset20 * This,
            /* [in] */ VARIANT Index,
            /* [in] */ VARIANT value);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MarshalOptions )( 
            Recordset20 * This,
            /* [retval][out] */ MarshalOptionsEnum *peMarshal);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MarshalOptions )( 
            Recordset20 * This,
            /* [in] */ MarshalOptionsEnum eMarshal);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Find )( 
            Recordset20 * This,
            /* [in] */ BSTR Criteria,
            /* [defaultvalue][in] */ ADO_LONGPTR SkipRecords,
            /* [defaultvalue][in] */ SearchDirectionEnum SearchDirection,
            /* [optional][in] */ VARIANT Start);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Cancel )( 
            Recordset20 * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DataSource )( 
            Recordset20 * This,
            /* [retval][out] */ IUnknown **ppunkDataSource);
        
        /* [helpcontext][propputref][id] */ HRESULT ( STDMETHODCALLTYPE *putref_DataSource )( 
            Recordset20 * This,
            /* [in] */ IUnknown *punkDataSource);
        
        /* [hidden] */ HRESULT ( STDMETHODCALLTYPE *_xSave )( 
            Recordset20 * This,
            /* [defaultvalue][in] */ BSTR FileName,
            /* [defaultvalue][in] */ PersistFormatEnum PersistFormat);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ActiveCommand )( 
            Recordset20 * This,
            /* [retval][out] */ IDispatch **ppCmd);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StayInSync )( 
            Recordset20 * This,
            /* [in] */ VARIANT_BOOL bStayInSync);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StayInSync )( 
            Recordset20 * This,
            /* [retval][out] */ VARIANT_BOOL *pbStayInSync);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetString )( 
            Recordset20 * This,
            /* [defaultvalue][in] */ StringFormatEnum StringFormat,
            /* [defaultvalue][in] */ long NumRows,
            /* [defaultvalue][in] */ BSTR ColumnDelimeter,
            /* [defaultvalue][in] */ BSTR RowDelimeter,
            /* [defaultvalue][in] */ BSTR NullExpr,
            /* [retval][out] */ BSTR *pRetString);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DataMember )( 
            Recordset20 * This,
            /* [retval][out] */ BSTR *pbstrDataMember);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DataMember )( 
            Recordset20 * This,
            /* [in] */ BSTR bstrDataMember);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CompareBookmarks )( 
            Recordset20 * This,
            /* [in] */ VARIANT Bookmark1,
            /* [in] */ VARIANT Bookmark2,
            /* [retval][out] */ CompareEnum *pCompare);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Clone )( 
            Recordset20 * This,
            /* [defaultvalue][in] */ LockTypeEnum LockType,
            /* [retval][out] */ _ADORecordset **ppvObject);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Resync )( 
            Recordset20 * This,
            /* [defaultvalue][in] */ AffectEnum AffectRecords,
            /* [defaultvalue][in] */ ResyncEnum ResyncValues);
        
        END_INTERFACE
    } Recordset20Vtbl;
    interface Recordset20
    {
        CONST_VTBL struct Recordset20Vtbl *lpVtbl;
    };
    
#ifdef COBJMACROS
#define Recordset20_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)
#define Recordset20_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)
#define Recordset20_Release(This)	\
    (This)->lpVtbl -> Release(This)
#define Recordset20_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)
#define Recordset20_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define Recordset20_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define Recordset20_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
#define Recordset20_get_Properties(This,ppvObject)	\
    (This)->lpVtbl -> get_Properties(This,ppvObject)
#define Recordset20_get_AbsolutePosition(This,pl)	\
    (This)->lpVtbl -> get_AbsolutePosition(This,pl)
#define Recordset20_put_AbsolutePosition(This,Position)	\
    (This)->lpVtbl -> put_AbsolutePosition(This,Position)
#define Recordset20_putref_ActiveConnection(This,pconn)	\
    (This)->lpVtbl -> putref_ActiveConnection(This,pconn)
#define Recordset20_put_ActiveConnection(This,vConn)	\
    (This)->lpVtbl -> put_ActiveConnection(This,vConn)
#define Recordset20_get_ActiveConnection(This,pvar)	\
    (This)->lpVtbl -> get_ActiveConnection(This,pvar)
#define Recordset20_get_BOF(This,pb)	\
    (This)->lpVtbl -> get_BOF(This,pb)
#define Recordset20_get_Bookmark(This,pvBookmark)	\
    (This)->lpVtbl -> get_Bookmark(This,pvBookmark)
#define Recordset20_put_Bookmark(This,vBookmark)	\
    (This)->lpVtbl -> put_Bookmark(This,vBookmark)
#define Recordset20_get_CacheSize(This,pl)	\
    (This)->lpVtbl -> get_CacheSize(This,pl)
#define Recordset20_put_CacheSize(This,CacheSize)	\
    (This)->lpVtbl -> put_CacheSize(This,CacheSize)
#define Recordset20_get_CursorType(This,plCursorType)	\
    (This)->lpVtbl -> get_CursorType(This,plCursorType)
#define Recordset20_put_CursorType(This,lCursorType)	\
    (This)->lpVtbl -> put_CursorType(This,lCursorType)
#define Recordset20_get_EOF(This,pb)	\
    (This)->lpVtbl -> get_EOF(This,pb)
#define Recordset20_get_Fields(This,ppvObject)	\
    (This)->lpVtbl -> get_Fields(This,ppvObject)
#define Recordset20_get_LockType(This,plLockType)	\
    (This)->lpVtbl -> get_LockType(This,plLockType)
#define Recordset20_put_LockType(This,lLockType)	\
    (This)->lpVtbl -> put_LockType(This,lLockType)
#define Recordset20_get_MaxRecords(This,plMaxRecords)	\
    (This)->lpVtbl -> get_MaxRecords(This,plMaxRecords)
#define Recordset20_put_MaxRecords(This,lMaxRecords)	\
    (This)->lpVtbl -> put_MaxRecords(This,lMaxRecords)
#define Recordset20_get_RecordCount(This,pl)	\
    (This)->lpVtbl -> get_RecordCount(This,pl)
#define Recordset20_putref_Source(This,pcmd)	\
    (This)->lpVtbl -> putref_Source(This,pcmd)
#define Recordset20_put_Source(This,bstrConn)	\
    (This)->lpVtbl -> put_Source(This,bstrConn)
#define Recordset20_get_Source(This,pvSource)	\
    (This)->lpVtbl -> get_Source(This,pvSource)
#define Recordset20_AddNew(This,FieldList,Values)	\
    (This)->lpVtbl -> AddNew(This,FieldList,Values)
#define Recordset20_CancelUpdate(This)	\
    (This)->lpVtbl -> CancelUpdate(This)
#define Recordset20_Close(This)	\
    (This)->lpVtbl -> Close(This)
#define Recordset20_Delete(This,AffectRecords)	\
    (This)->lpVtbl -> Delete(This,AffectRecords)
#define Recordset20_GetRows(This,Rows,Start,Fields,pvar)	\
    (This)->lpVtbl -> GetRows(This,Rows,Start,Fields,pvar)
#define Recordset20_Move(This,NumRecords,Start)	\
    (This)->lpVtbl -> Move(This,NumRecords,Start)
#define Recordset20_MoveNext(This)	\
    (This)->lpVtbl -> MoveNext(This)
#define Recordset20_MovePrevious(This)	\
    (This)->lpVtbl -> MovePrevious(This)
#define Recordset20_MoveFirst(This)	\
    (This)->lpVtbl -> MoveFirst(This)
#define Recordset20_MoveLast(This)	\
    (This)->lpVtbl -> MoveLast(This)
#define Recordset20_Open(This,Source,ActiveConnection,CursorType,LockType,Options)	\
    (This)->lpVtbl -> Open(This,Source,ActiveConnection,CursorType,LockType,Options)
#define Recordset20_Requery(This,Options)	\
    (This)->lpVtbl -> Requery(This,Options)
#define Recordset20__xResync(This,AffectRecords)	\
    (This)->lpVtbl -> _xResync(This,AffectRecords)
#define Recordset20_Update(This,Fields,Values)	\
    (This)->lpVtbl -> Update(This,Fields,Values)
#define Recordset20_get_AbsolutePage(This,pl)	\
    (This)->lpVtbl -> get_AbsolutePage(This,pl)
#define Recordset20_put_AbsolutePage(This,Page)	\
    (This)->lpVtbl -> put_AbsolutePage(This,Page)
#define Recordset20_get_EditMode(This,pl)	\
    (This)->lpVtbl -> get_EditMode(This,pl)
#define Recordset20_get_Filter(This,Criteria)	\
    (This)->lpVtbl -> get_Filter(This,Criteria)
#define Recordset20_put_Filter(This,Criteria)	\
    (This)->lpVtbl -> put_Filter(This,Criteria)
#define Recordset20_get_PageCount(This,pl)	\
    (This)->lpVtbl -> get_PageCount(This,pl)
#define Recordset20_get_PageSize(This,pl)	\
    (This)->lpVtbl -> get_PageSize(This,pl)
#define Recordset20_put_PageSize(This,PageSize)	\
    (This)->lpVtbl -> put_PageSize(This,PageSize)
#define Recordset20_get_Sort(This,Criteria)	\
    (This)->lpVtbl -> get_Sort(This,Criteria)
#define Recordset20_put_Sort(This,Criteria)	\
    (This)->lpVtbl -> put_Sort(This,Criteria)
#define Recordset20_get_Status(This,pl)	\
    (This)->lpVtbl -> get_Status(This,pl)
#define Recordset20_get_State(This,plObjState)	\
    (This)->lpVtbl -> get_State(This,plObjState)
#define Recordset20__xClone(This,ppvObject)	\
    (This)->lpVtbl -> _xClone(This,ppvObject)
#define Recordset20_UpdateBatch(This,AffectRecords)	\
    (This)->lpVtbl -> UpdateBatch(This,AffectRecords)
#define Recordset20_CancelBatch(This,AffectRecords)	\
    (This)->lpVtbl -> CancelBatch(This,AffectRecords)
#define Recordset20_get_CursorLocation(This,plCursorLoc)	\
    (This)->lpVtbl -> get_CursorLocation(This,plCursorLoc)
#define Recordset20_put_CursorLocation(This,lCursorLoc)	\
    (This)->lpVtbl -> put_CursorLocation(This,lCursorLoc)
#define Recordset20_NextRecordset(This,RecordsAffected,ppiRs)	\
    (This)->lpVtbl -> NextRecordset(This,RecordsAffected,ppiRs)
#define Recordset20_Supports(This,CursorOptions,pb)	\
    (This)->lpVtbl -> Supports(This,CursorOptions,pb)
#define Recordset20_get_Collect(This,Index,pvar)	\
    (This)->lpVtbl -> get_Collect(This,Index,pvar)
#define Recordset20_put_Collect(This,Index,value)	\
    (This)->lpVtbl -> put_Collect(This,Index,value)
#define Recordset20_get_MarshalOptions(This,peMarshal)	\
    (This)->lpVtbl -> get_MarshalOptions(This,peMarshal)
#define Recordset20_put_MarshalOptions(This,eMarshal)	\
    (This)->lpVtbl -> put_MarshalOptions(This,eMarshal)
#define Recordset20_Find(This,Criteria,SkipRecords,SearchDirection,Start)	\
    (This)->lpVtbl -> Find(This,Criteria,SkipRecords,SearchDirection,Start)
#define Recordset20_Cancel(This)	\
    (This)->lpVtbl -> Cancel(This)
#define Recordset20_get_DataSource(This,ppunkDataSource)	\
    (This)->lpVtbl -> get_DataSource(This,ppunkDataSource)
#define Recordset20_putref_DataSource(This,punkDataSource)	\
    (This)->lpVtbl -> putref_DataSource(This,punkDataSource)
#define Recordset20__xSave(This,FileName,PersistFormat)	\
    (This)->lpVtbl -> _xSave(This,FileName,PersistFormat)
#define Recordset20_get_ActiveCommand(This,ppCmd)	\
    (This)->lpVtbl -> get_ActiveCommand(This,ppCmd)
#define Recordset20_put_StayInSync(This,bStayInSync)	\
    (This)->lpVtbl -> put_StayInSync(This,bStayInSync)
#define Recordset20_get_StayInSync(This,pbStayInSync)	\
    (This)->lpVtbl -> get_StayInSync(This,pbStayInSync)
#define Recordset20_GetString(This,StringFormat,NumRows,ColumnDelimeter,RowDelimeter,NullExpr,pRetString)	\
    (This)->lpVtbl -> GetString(This,StringFormat,NumRows,ColumnDelimeter,RowDelimeter,NullExpr,pRetString)
#define Recordset20_get_DataMember(This,pbstrDataMember)	\
    (This)->lpVtbl -> get_DataMember(This,pbstrDataMember)
#define Recordset20_put_DataMember(This,bstrDataMember)	\
    (This)->lpVtbl -> put_DataMember(This,bstrDataMember)
#define Recordset20_CompareBookmarks(This,Bookmark1,Bookmark2,pCompare)	\
    (This)->lpVtbl -> CompareBookmarks(This,Bookmark1,Bookmark2,pCompare)
#define Recordset20_Clone(This,LockType,ppvObject)	\
    (This)->lpVtbl -> Clone(This,LockType,ppvObject)
#define Recordset20_Resync(This,AffectRecords,ResyncValues)	\
    (This)->lpVtbl -> Resync(This,AffectRecords,ResyncValues)
#endif /* COBJMACROS */
#endif 	/* C style interface */
/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Recordset20_Cancel_Proxy( 
    Recordset20 * This);
void __RPC_STUB Recordset20_Cancel_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE Recordset20_get_DataSource_Proxy( 
    Recordset20 * This,
    /* [retval][out] */ IUnknown **ppunkDataSource);
void __RPC_STUB Recordset20_get_DataSource_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propputref][id] */ HRESULT STDMETHODCALLTYPE Recordset20_putref_DataSource_Proxy( 
    Recordset20 * This,
    /* [in] */ IUnknown *punkDataSource);
void __RPC_STUB Recordset20_putref_DataSource_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [hidden] */ HRESULT STDMETHODCALLTYPE Recordset20__xSave_Proxy( 
    Recordset20 * This,
    /* [defaultvalue][in] */ BSTR FileName,
    /* [defaultvalue][in] */ PersistFormatEnum PersistFormat);
void __RPC_STUB Recordset20__xSave_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE Recordset20_get_ActiveCommand_Proxy( 
    Recordset20 * This,
    /* [retval][out] */ IDispatch **ppCmd);
void __RPC_STUB Recordset20_get_ActiveCommand_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE Recordset20_put_StayInSync_Proxy( 
    Recordset20 * This,
    /* [in] */ VARIANT_BOOL bStayInSync);
void __RPC_STUB Recordset20_put_StayInSync_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE Recordset20_get_StayInSync_Proxy( 
    Recordset20 * This,
    /* [retval][out] */ VARIANT_BOOL *pbStayInSync);
void __RPC_STUB Recordset20_get_StayInSync_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Recordset20_GetString_Proxy( 
    Recordset20 * This,
    /* [defaultvalue][in] */ StringFormatEnum StringFormat,
    /* [defaultvalue][in] */ long NumRows,
    /* [defaultvalue][in] */ BSTR ColumnDelimeter,
    /* [defaultvalue][in] */ BSTR RowDelimeter,
    /* [defaultvalue][in] */ BSTR NullExpr,
    /* [retval][out] */ BSTR *pRetString);
void __RPC_STUB Recordset20_GetString_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE Recordset20_get_DataMember_Proxy( 
    Recordset20 * This,
    /* [retval][out] */ BSTR *pbstrDataMember);
void __RPC_STUB Recordset20_get_DataMember_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE Recordset20_put_DataMember_Proxy( 
    Recordset20 * This,
    /* [in] */ BSTR bstrDataMember);
void __RPC_STUB Recordset20_put_DataMember_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Recordset20_CompareBookmarks_Proxy( 
    Recordset20 * This,
    /* [in] */ VARIANT Bookmark1,
    /* [in] */ VARIANT Bookmark2,
    /* [retval][out] */ CompareEnum *pCompare);
void __RPC_STUB Recordset20_CompareBookmarks_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Recordset20_Clone_Proxy( 
    Recordset20 * This,
    /* [defaultvalue][in] */ LockTypeEnum LockType,
    /* [retval][out] */ _ADORecordset **ppvObject);
void __RPC_STUB Recordset20_Clone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Recordset20_Resync_Proxy( 
    Recordset20 * This,
    /* [defaultvalue][in] */ AffectEnum AffectRecords,
    /* [defaultvalue][in] */ ResyncEnum ResyncValues);
void __RPC_STUB Recordset20_Resync_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
#endif 	/* __Recordset20_INTERFACE_DEFINED__ */
#ifndef __Recordset21_INTERFACE_DEFINED__
#define __Recordset21_INTERFACE_DEFINED__
/* interface Recordset21 */
/* [object][helpcontext][uuid][nonextensible][hidden][dual] */ 
EXTERN_C const IID IID_Recordset21;
#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00000555-0000-0010-8000-00AA006D2EA4")
    Recordset21 : public Recordset20
    {
    public:
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Seek( 
            /* [in] */ VARIANT KeyValues,
            /* [defaultvalue][in] */ SeekEnum SeekOption = adSeekFirstEQ) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Index( 
            /* [in] */ BSTR Index) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Index( 
            /* [retval][out] */ BSTR *pbstrIndex) = 0;
        
    };
    
#else 	/* C style interface */
    typedef struct Recordset21Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Recordset21 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Recordset21 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Recordset21 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Recordset21 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Recordset21 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Recordset21 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Recordset21 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Properties )( 
            Recordset21 * This,
            /* [retval][out] */ ADOProperties **ppvObject);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AbsolutePosition )( 
            Recordset21 * This,
            /* [retval][out] */ PositionEnum_Param *pl);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AbsolutePosition )( 
            Recordset21 * This,
            /* [in] */ PositionEnum_Param Position);
        
        /* [helpcontext][propputref][id] */ HRESULT ( STDMETHODCALLTYPE *putref_ActiveADOConnection )( 
            Recordset21 * This,
            /* [in] */ IDispatch *pconn);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ActiveConnection )( 
            Recordset21 * This,
            /* [in] */ VARIANT vConn);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ActiveConnection )( 
            Recordset21 * This,
            /* [retval][out] */ VARIANT *pvar);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BOF )( 
            Recordset21 * This,
            /* [retval][out] */ VARIANT_BOOL *pb);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Bookmark )( 
            Recordset21 * This,
            /* [retval][out] */ VARIANT *pvBookmark);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Bookmark )( 
            Recordset21 * This,
            /* [in] */ VARIANT vBookmark);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CacheSize )( 
            Recordset21 * This,
            /* [retval][out] */ long *pl);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CacheSize )( 
            Recordset21 * This,
            /* [in] */ long CacheSize);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CursorType )( 
            Recordset21 * This,
            /* [retval][out] */ CursorTypeEnum *plCursorType);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CursorType )( 
            Recordset21 * This,
            /* [in] */ CursorTypeEnum lCursorType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EOF )( 
            Recordset21 * This,
            /* [retval][out] */ VARIANT_BOOL *pb);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Fields )( 
            Recordset21 * This,
            /* [retval][out] */ ADOFields **ppvObject);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LockType )( 
            Recordset21 * This,
            /* [retval][out] */ LockTypeEnum *plLockType);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LockType )( 
            Recordset21 * This,
            /* [in] */ LockTypeEnum lLockType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MaxRecords )( 
            Recordset21 * This,
            /* [retval][out] */ ADO_LONGPTR *plMaxRecords);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MaxRecords )( 
            Recordset21 * This,
            /* [in] */ ADO_LONGPTR lMaxRecords);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RecordCount )( 
            Recordset21 * This,
            /* [retval][out] */ ADO_LONGPTR *pl);
        
        /* [helpcontext][propputref][id] */ HRESULT ( STDMETHODCALLTYPE *putref_Source )( 
            Recordset21 * This,
            /* [in] */ IDispatch *pcmd);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Source )( 
            Recordset21 * This,
            /* [in] */ BSTR bstrConn);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Source )( 
            Recordset21 * This,
            /* [retval][out] */ VARIANT *pvSource);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddNew )( 
            Recordset21 * This,
            /* [optional][in] */ VARIANT FieldList,
            /* [optional][in] */ VARIANT Values);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CancelUpdate )( 
            Recordset21 * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            Recordset21 * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            Recordset21 * This,
            /* [defaultvalue][in] */ AffectEnum AffectRecords);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetRows )( 
            Recordset21 * This,
            /* [defaultvalue][in] */ long Rows,
            /* [optional][in] */ VARIANT Start,
            /* [optional][in] */ VARIANT Fields,
            /* [retval][out] */ VARIANT *pvar);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            Recordset21 * This,
            /* [in] */ ADO_LONGPTR NumRecords,
            /* [optional][in] */ VARIANT Start);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            Recordset21 * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *MovePrevious )( 
            Recordset21 * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *MoveFirst )( 
            Recordset21 * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *MoveLast )( 
            Recordset21 * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Open )( 
            Recordset21 * This,
            /* [optional][in] */ VARIANT Source,
            /* [optional][in] */ VARIANT ActiveConnection,
            /* [defaultvalue][in] */ CursorTypeEnum CursorType,
            /* [defaultvalue][in] */ LockTypeEnum LockType,
            /* [defaultvalue][in] */ LONG Options);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Requery )( 
            Recordset21 * This,
            /* [defaultvalue][in] */ LONG Options);
        
        /* [hidden] */ HRESULT ( STDMETHODCALLTYPE *_xResync )( 
            Recordset21 * This,
            /* [defaultvalue][in] */ AffectEnum AffectRecords);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            Recordset21 * This,
            /* [optional][in] */ VARIANT Fields,
            /* [optional][in] */ VARIANT Values);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AbsolutePage )( 
            Recordset21 * This,
            /* [retval][out] */ PositionEnum_Param *pl);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AbsolutePage )( 
            Recordset21 * This,
            /* [in] */ PositionEnum_Param Page);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EditMode )( 
            Recordset21 * This,
            /* [retval][out] */ EditModeEnum *pl);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Filter )( 
            Recordset21 * This,
            /* [retval][out] */ VARIANT *Criteria);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Filter )( 
            Recordset21 * This,
            /* [in] */ VARIANT Criteria);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PageCount )( 
            Recordset21 * This,
            /* [retval][out] */ ADO_LONGPTR *pl);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PageSize )( 
            Recordset21 * This,
            /* [retval][out] */ long *pl);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PageSize )( 
            Recordset21 * This,
            /* [in] */ long PageSize);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Sort )( 
            Recordset21 * This,
            /* [retval][out] */ BSTR *Criteria);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Sort )( 
            Recordset21 * This,
            /* [in] */ BSTR Criteria);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Status )( 
            Recordset21 * This,
            /* [retval][out] */ long *pl);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            Recordset21 * This,
            /* [retval][out] */ LONG *plObjState);
        
        /* [hidden] */ HRESULT ( STDMETHODCALLTYPE *_xClone )( 
            Recordset21 * This,
            /* [retval][out] */ _ADORecordset **ppvObject);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *UpdateBatch )( 
            Recordset21 * This,
            /* [defaultvalue][in] */ AffectEnum AffectRecords);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CancelBatch )( 
            Recordset21 * This,
            /* [defaultvalue][in] */ AffectEnum AffectRecords);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CursorLocation )( 
            Recordset21 * This,
            /* [retval][out] */ CursorLocationEnum *plCursorLoc);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CursorLocation )( 
            Recordset21 * This,
            /* [in] */ CursorLocationEnum lCursorLoc);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *NextADORecordset )( 
            Recordset21 * This,
            /* [optional][out] */ VARIANT *RecordsAffected,
            /* [retval][out] */ _ADORecordset **ppiRs);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Supports )( 
            Recordset21 * This,
            /* [in] */ CursorOptionEnum CursorOptions,
            /* [retval][out] */ VARIANT_BOOL *pb);
        
        /* [hidden][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Collect )( 
            Recordset21 * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ VARIANT *pvar);
        
        /* [hidden][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Collect )( 
            Recordset21 * This,
            /* [in] */ VARIANT Index,
            /* [in] */ VARIANT value);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MarshalOptions )( 
            Recordset21 * This,
            /* [retval][out] */ MarshalOptionsEnum *peMarshal);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MarshalOptions )( 
            Recordset21 * This,
            /* [in] */ MarshalOptionsEnum eMarshal);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Find )( 
            Recordset21 * This,
            /* [in] */ BSTR Criteria,
            /* [defaultvalue][in] */ ADO_LONGPTR SkipRecords,
            /* [defaultvalue][in] */ SearchDirectionEnum SearchDirection,
            /* [optional][in] */ VARIANT Start);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Cancel )( 
            Recordset21 * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DataSource )( 
            Recordset21 * This,
            /* [retval][out] */ IUnknown **ppunkDataSource);
        
        /* [helpcontext][propputref][id] */ HRESULT ( STDMETHODCALLTYPE *putref_DataSource )( 
            Recordset21 * This,
            /* [in] */ IUnknown *punkDataSource);
        
        /* [hidden] */ HRESULT ( STDMETHODCALLTYPE *_xSave )( 
            Recordset21 * This,
            /* [defaultvalue][in] */ BSTR FileName,
            /* [defaultvalue][in] */ PersistFormatEnum PersistFormat);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ActiveCommand )( 
            Recordset21 * This,
            /* [retval][out] */ IDispatch **ppCmd);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StayInSync )( 
            Recordset21 * This,
            /* [in] */ VARIANT_BOOL bStayInSync);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StayInSync )( 
            Recordset21 * This,
            /* [retval][out] */ VARIANT_BOOL *pbStayInSync);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetString )( 
            Recordset21 * This,
            /* [defaultvalue][in] */ StringFormatEnum StringFormat,
            /* [defaultvalue][in] */ long NumRows,
            /* [defaultvalue][in] */ BSTR ColumnDelimeter,
            /* [defaultvalue][in] */ BSTR RowDelimeter,
            /* [defaultvalue][in] */ BSTR NullExpr,
            /* [retval][out] */ BSTR *pRetString);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DataMember )( 
            Recordset21 * This,
            /* [retval][out] */ BSTR *pbstrDataMember);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DataMember )( 
            Recordset21 * This,
            /* [in] */ BSTR bstrDataMember);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CompareBookmarks )( 
            Recordset21 * This,
            /* [in] */ VARIANT Bookmark1,
            /* [in] */ VARIANT Bookmark2,
            /* [retval][out] */ CompareEnum *pCompare);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Clone )( 
            Recordset21 * This,
            /* [defaultvalue][in] */ LockTypeEnum LockType,
            /* [retval][out] */ _ADORecordset **ppvObject);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Resync )( 
            Recordset21 * This,
            /* [defaultvalue][in] */ AffectEnum AffectRecords,
            /* [defaultvalue][in] */ ResyncEnum ResyncValues);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Seek )( 
            Recordset21 * This,
            /* [in] */ VARIANT KeyValues,
            /* [defaultvalue][in] */ SeekEnum SeekOption);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Index )( 
            Recordset21 * This,
            /* [in] */ BSTR Index);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Index )( 
            Recordset21 * This,
            /* [retval][out] */ BSTR *pbstrIndex);
        
        END_INTERFACE
    } Recordset21Vtbl;
    interface Recordset21
    {
        CONST_VTBL struct Recordset21Vtbl *lpVtbl;
    };
    
#ifdef COBJMACROS
#define Recordset21_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)
#define Recordset21_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)
#define Recordset21_Release(This)	\
    (This)->lpVtbl -> Release(This)
#define Recordset21_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)
#define Recordset21_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define Recordset21_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define Recordset21_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
#define Recordset21_get_Properties(This,ppvObject)	\
    (This)->lpVtbl -> get_Properties(This,ppvObject)
#define Recordset21_get_AbsolutePosition(This,pl)	\
    (This)->lpVtbl -> get_AbsolutePosition(This,pl)
#define Recordset21_put_AbsolutePosition(This,Position)	\
    (This)->lpVtbl -> put_AbsolutePosition(This,Position)
#define Recordset21_putref_ActiveConnection(This,pconn)	\
    (This)->lpVtbl -> putref_ActiveConnection(This,pconn)
#define Recordset21_put_ActiveConnection(This,vConn)	\
    (This)->lpVtbl -> put_ActiveConnection(This,vConn)
#define Recordset21_get_ActiveConnection(This,pvar)	\
    (This)->lpVtbl -> get_ActiveConnection(This,pvar)
#define Recordset21_get_BOF(This,pb)	\
    (This)->lpVtbl -> get_BOF(This,pb)
#define Recordset21_get_Bookmark(This,pvBookmark)	\
    (This)->lpVtbl -> get_Bookmark(This,pvBookmark)
#define Recordset21_put_Bookmark(This,vBookmark)	\
    (This)->lpVtbl -> put_Bookmark(This,vBookmark)
#define Recordset21_get_CacheSize(This,pl)	\
    (This)->lpVtbl -> get_CacheSize(This,pl)
#define Recordset21_put_CacheSize(This,CacheSize)	\
    (This)->lpVtbl -> put_CacheSize(This,CacheSize)
#define Recordset21_get_CursorType(This,plCursorType)	\
    (This)->lpVtbl -> get_CursorType(This,plCursorType)
#define Recordset21_put_CursorType(This,lCursorType)	\
    (This)->lpVtbl -> put_CursorType(This,lCursorType)
#define Recordset21_get_EOF(This,pb)	\
    (This)->lpVtbl -> get_EOF(This,pb)
#define Recordset21_get_Fields(This,ppvObject)	\
    (This)->lpVtbl -> get_Fields(This,ppvObject)
#define Recordset21_get_LockType(This,plLockType)	\
    (This)->lpVtbl -> get_LockType(This,plLockType)
#define Recordset21_put_LockType(This,lLockType)	\
    (This)->lpVtbl -> put_LockType(This,lLockType)
#define Recordset21_get_MaxRecords(This,plMaxRecords)	\
    (This)->lpVtbl -> get_MaxRecords(This,plMaxRecords)
#define Recordset21_put_MaxRecords(This,lMaxRecords)	\
    (This)->lpVtbl -> put_MaxRecords(This,lMaxRecords)
#define Recordset21_get_RecordCount(This,pl)	\
    (This)->lpVtbl -> get_RecordCount(This,pl)
#define Recordset21_putref_Source(This,pcmd)	\
    (This)->lpVtbl -> putref_Source(This,pcmd)
#define Recordset21_put_Source(This,bstrConn)	\
    (This)->lpVtbl -> put_Source(This,bstrConn)
#define Recordset21_get_Source(This,pvSource)	\
    (This)->lpVtbl -> get_Source(This,pvSource)
#define Recordset21_AddNew(This,FieldList,Values)	\
    (This)->lpVtbl -> AddNew(This,FieldList,Values)
#define Recordset21_CancelUpdate(This)	\
    (This)->lpVtbl -> CancelUpdate(This)
#define Recordset21_Close(This)	\
    (This)->lpVtbl -> Close(This)
#define Recordset21_Delete(This,AffectRecords)	\
    (This)->lpVtbl -> Delete(This,AffectRecords)
#define Recordset21_GetRows(This,Rows,Start,Fields,pvar)	\
    (This)->lpVtbl -> GetRows(This,Rows,Start,Fields,pvar)
#define Recordset21_Move(This,NumRecords,Start)	\
    (This)->lpVtbl -> Move(This,NumRecords,Start)
#define Recordset21_MoveNext(This)	\
    (This)->lpVtbl -> MoveNext(This)
#define Recordset21_MovePrevious(This)	\
    (This)->lpVtbl -> MovePrevious(This)
#define Recordset21_MoveFirst(This)	\
    (This)->lpVtbl -> MoveFirst(This)
#define Recordset21_MoveLast(This)	\
    (This)->lpVtbl -> MoveLast(This)
#define Recordset21_Open(This,Source,ActiveConnection,CursorType,LockType,Options)	\
    (This)->lpVtbl -> Open(This,Source,ActiveConnection,CursorType,LockType,Options)
#define Recordset21_Requery(This,Options)	\
    (This)->lpVtbl -> Requery(This,Options)
#define Recordset21__xResync(This,AffectRecords)	\
    (This)->lpVtbl -> _xResync(This,AffectRecords)
#define Recordset21_Update(This,Fields,Values)	\
    (This)->lpVtbl -> Update(This,Fields,Values)
#define Recordset21_get_AbsolutePage(This,pl)	\
    (This)->lpVtbl -> get_AbsolutePage(This,pl)
#define Recordset21_put_AbsolutePage(This,Page)	\
    (This)->lpVtbl -> put_AbsolutePage(This,Page)
#define Recordset21_get_EditMode(This,pl)	\
    (This)->lpVtbl -> get_EditMode(This,pl)
#define Recordset21_get_Filter(This,Criteria)	\
    (This)->lpVtbl -> get_Filter(This,Criteria)
#define Recordset21_put_Filter(This,Criteria)	\
    (This)->lpVtbl -> put_Filter(This,Criteria)
#define Recordset21_get_PageCount(This,pl)	\
    (This)->lpVtbl -> get_PageCount(This,pl)
#define Recordset21_get_PageSize(This,pl)	\
    (This)->lpVtbl -> get_PageSize(This,pl)
#define Recordset21_put_PageSize(This,PageSize)	\
    (This)->lpVtbl -> put_PageSize(This,PageSize)
#define Recordset21_get_Sort(This,Criteria)	\
    (This)->lpVtbl -> get_Sort(This,Criteria)
#define Recordset21_put_Sort(This,Criteria)	\
    (This)->lpVtbl -> put_Sort(This,Criteria)
#define Recordset21_get_Status(This,pl)	\
    (This)->lpVtbl -> get_Status(This,pl)
#define Recordset21_get_State(This,plObjState)	\
    (This)->lpVtbl -> get_State(This,plObjState)
#define Recordset21__xClone(This,ppvObject)	\
    (This)->lpVtbl -> _xClone(This,ppvObject)
#define Recordset21_UpdateBatch(This,AffectRecords)	\
    (This)->lpVtbl -> UpdateBatch(This,AffectRecords)
#define Recordset21_CancelBatch(This,AffectRecords)	\
    (This)->lpVtbl -> CancelBatch(This,AffectRecords)
#define Recordset21_get_CursorLocation(This,plCursorLoc)	\
    (This)->lpVtbl -> get_CursorLocation(This,plCursorLoc)
#define Recordset21_put_CursorLocation(This,lCursorLoc)	\
    (This)->lpVtbl -> put_CursorLocation(This,lCursorLoc)
#define Recordset21_NextRecordset(This,RecordsAffected,ppiRs)	\
    (This)->lpVtbl -> NextRecordset(This,RecordsAffected,ppiRs)
#define Recordset21_Supports(This,CursorOptions,pb)	\
    (This)->lpVtbl -> Supports(This,CursorOptions,pb)
#define Recordset21_get_Collect(This,Index,pvar)	\
    (This)->lpVtbl -> get_Collect(This,Index,pvar)
#define Recordset21_put_Collect(This,Index,value)	\
    (This)->lpVtbl -> put_Collect(This,Index,value)
#define Recordset21_get_MarshalOptions(This,peMarshal)	\
    (This)->lpVtbl -> get_MarshalOptions(This,peMarshal)
#define Recordset21_put_MarshalOptions(This,eMarshal)	\
    (This)->lpVtbl -> put_MarshalOptions(This,eMarshal)
#define Recordset21_Find(This,Criteria,SkipRecords,SearchDirection,Start)	\
    (This)->lpVtbl -> Find(This,Criteria,SkipRecords,SearchDirection,Start)
#define Recordset21_Cancel(This)	\
    (This)->lpVtbl -> Cancel(This)
#define Recordset21_get_DataSource(This,ppunkDataSource)	\
    (This)->lpVtbl -> get_DataSource(This,ppunkDataSource)
#define Recordset21_putref_DataSource(This,punkDataSource)	\
    (This)->lpVtbl -> putref_DataSource(This,punkDataSource)
#define Recordset21__xSave(This,FileName,PersistFormat)	\
    (This)->lpVtbl -> _xSave(This,FileName,PersistFormat)
#define Recordset21_get_ActiveCommand(This,ppCmd)	\
    (This)->lpVtbl -> get_ActiveCommand(This,ppCmd)
#define Recordset21_put_StayInSync(This,bStayInSync)	\
    (This)->lpVtbl -> put_StayInSync(This,bStayInSync)
#define Recordset21_get_StayInSync(This,pbStayInSync)	\
    (This)->lpVtbl -> get_StayInSync(This,pbStayInSync)
#define Recordset21_GetString(This,StringFormat,NumRows,ColumnDelimeter,RowDelimeter,NullExpr,pRetString)	\
    (This)->lpVtbl -> GetString(This,StringFormat,NumRows,ColumnDelimeter,RowDelimeter,NullExpr,pRetString)
#define Recordset21_get_DataMember(This,pbstrDataMember)	\
    (This)->lpVtbl -> get_DataMember(This,pbstrDataMember)
#define Recordset21_put_DataMember(This,bstrDataMember)	\
    (This)->lpVtbl -> put_DataMember(This,bstrDataMember)
#define Recordset21_CompareBookmarks(This,Bookmark1,Bookmark2,pCompare)	\
    (This)->lpVtbl -> CompareBookmarks(This,Bookmark1,Bookmark2,pCompare)
#define Recordset21_Clone(This,LockType,ppvObject)	\
    (This)->lpVtbl -> Clone(This,LockType,ppvObject)
#define Recordset21_Resync(This,AffectRecords,ResyncValues)	\
    (This)->lpVtbl -> Resync(This,AffectRecords,ResyncValues)
#define Recordset21_Seek(This,KeyValues,SeekOption)	\
    (This)->lpVtbl -> Seek(This,KeyValues,SeekOption)
#define Recordset21_put_Index(This,Index)	\
    (This)->lpVtbl -> put_Index(This,Index)
#define Recordset21_get_Index(This,pbstrIndex)	\
    (This)->lpVtbl -> get_Index(This,pbstrIndex)
#endif /* COBJMACROS */
#endif 	/* C style interface */
/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Recordset21_Seek_Proxy( 
    Recordset21 * This,
    /* [in] */ VARIANT KeyValues,
    /* [defaultvalue][in] */ SeekEnum SeekOption);
void __RPC_STUB Recordset21_Seek_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE Recordset21_put_Index_Proxy( 
    Recordset21 * This,
    /* [in] */ BSTR Index);
void __RPC_STUB Recordset21_put_Index_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE Recordset21_get_Index_Proxy( 
    Recordset21 * This,
    /* [retval][out] */ BSTR *pbstrIndex);
void __RPC_STUB Recordset21_get_Index_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
#endif 	/* __Recordset21_INTERFACE_DEFINED__ */
#ifndef ___Recordset_INTERFACE_DEFINED__
#define ___Recordset_INTERFACE_DEFINED__
/* interface _ADORecordset */
/* [object][helpcontext][uuid][nonextensible][dual] */ 
EXTERN_C const IID IID__Recordset;
#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00000556-0000-0010-8000-00AA006D2EA4")
    _ADORecordset : public Recordset21
    {
    public:
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Save( 
            /* [optional][in] */ VARIANT Destination,
            /* [defaultvalue][in] */ PersistFormatEnum PersistFormat = adPersistADTG) = 0;
        
    };
    
#else 	/* C style interface */
    typedef struct _RecordsetVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ADORecordset * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ADORecordset * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ADORecordset * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ADORecordset * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ADORecordset * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ADORecordset * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ADORecordset * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Properties )( 
            _ADORecordset * This,
            /* [retval][out] */ ADOProperties **ppvObject);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AbsolutePosition )( 
            _ADORecordset * This,
            /* [retval][out] */ PositionEnum_Param *pl);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AbsolutePosition )( 
            _ADORecordset * This,
            /* [in] */ PositionEnum_Param Position);
        
        /* [helpcontext][propputref][id] */ HRESULT ( STDMETHODCALLTYPE *putref_ActiveADOConnection )( 
            _ADORecordset * This,
            /* [in] */ IDispatch *pconn);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ActiveConnection )( 
            _ADORecordset * This,
            /* [in] */ VARIANT vConn);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ActiveConnection )( 
            _ADORecordset * This,
            /* [retval][out] */ VARIANT *pvar);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BOF )( 
            _ADORecordset * This,
            /* [retval][out] */ VARIANT_BOOL *pb);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Bookmark )( 
            _ADORecordset * This,
            /* [retval][out] */ VARIANT *pvBookmark);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Bookmark )( 
            _ADORecordset * This,
            /* [in] */ VARIANT vBookmark);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CacheSize )( 
            _ADORecordset * This,
            /* [retval][out] */ long *pl);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CacheSize )( 
            _ADORecordset * This,
            /* [in] */ long CacheSize);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CursorType )( 
            _ADORecordset * This,
            /* [retval][out] */ CursorTypeEnum *plCursorType);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CursorType )( 
            _ADORecordset * This,
            /* [in] */ CursorTypeEnum lCursorType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EOF )( 
            _ADORecordset * This,
            /* [retval][out] */ VARIANT_BOOL *pb);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Fields )( 
            _ADORecordset * This,
            /* [retval][out] */ ADOFields **ppvObject);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LockType )( 
            _ADORecordset * This,
            /* [retval][out] */ LockTypeEnum *plLockType);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LockType )( 
            _ADORecordset * This,
            /* [in] */ LockTypeEnum lLockType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MaxRecords )( 
            _ADORecordset * This,
            /* [retval][out] */ ADO_LONGPTR *plMaxRecords);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MaxRecords )( 
            _ADORecordset * This,
            /* [in] */ ADO_LONGPTR lMaxRecords);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RecordCount )( 
            _ADORecordset * This,
            /* [retval][out] */ ADO_LONGPTR *pl);
        
        /* [helpcontext][propputref][id] */ HRESULT ( STDMETHODCALLTYPE *putref_Source )( 
            _ADORecordset * This,
            /* [in] */ IDispatch *pcmd);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Source )( 
            _ADORecordset * This,
            /* [in] */ BSTR bstrConn);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Source )( 
            _ADORecordset * This,
            /* [retval][out] */ VARIANT *pvSource);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddNew )( 
            _ADORecordset * This,
            /* [optional][in] */ VARIANT FieldList,
            /* [optional][in] */ VARIANT Values);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CancelUpdate )( 
            _ADORecordset * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            _ADORecordset * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            _ADORecordset * This,
            /* [defaultvalue][in] */ AffectEnum AffectRecords);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetRows )( 
            _ADORecordset * This,
            /* [defaultvalue][in] */ long Rows,
            /* [optional][in] */ VARIANT Start,
            /* [optional][in] */ VARIANT Fields,
            /* [retval][out] */ VARIANT *pvar);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            _ADORecordset * This,
            /* [in] */ ADO_LONGPTR NumRecords,
            /* [optional][in] */ VARIANT Start);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            _ADORecordset * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *MovePrevious )( 
            _ADORecordset * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *MoveFirst )( 
            _ADORecordset * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *MoveLast )( 
            _ADORecordset * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Open )( 
            _ADORecordset * This,
            /* [optional][in] */ VARIANT Source,
            /* [optional][in] */ VARIANT ActiveConnection,
            /* [defaultvalue][in] */ CursorTypeEnum CursorType,
            /* [defaultvalue][in] */ LockTypeEnum LockType,
            /* [defaultvalue][in] */ LONG Options);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Requery )( 
            _ADORecordset * This,
            /* [defaultvalue][in] */ LONG Options);
        
        /* [hidden] */ HRESULT ( STDMETHODCALLTYPE *_xResync )( 
            _ADORecordset * This,
            /* [defaultvalue][in] */ AffectEnum AffectRecords);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            _ADORecordset * This,
            /* [optional][in] */ VARIANT Fields,
            /* [optional][in] */ VARIANT Values);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AbsolutePage )( 
            _ADORecordset * This,
            /* [retval][out] */ PositionEnum_Param *pl);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AbsolutePage )( 
            _ADORecordset * This,
            /* [in] */ PositionEnum_Param Page);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EditMode )( 
            _ADORecordset * This,
            /* [retval][out] */ EditModeEnum *pl);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Filter )( 
            _ADORecordset * This,
            /* [retval][out] */ VARIANT *Criteria);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Filter )( 
            _ADORecordset * This,
            /* [in] */ VARIANT Criteria);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PageCount )( 
            _ADORecordset * This,
            /* [retval][out] */ ADO_LONGPTR *pl);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PageSize )( 
            _ADORecordset * This,
            /* [retval][out] */ long *pl);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PageSize )( 
            _ADORecordset * This,
            /* [in] */ long PageSize);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Sort )( 
            _ADORecordset * This,
            /* [retval][out] */ BSTR *Criteria);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Sort )( 
            _ADORecordset * This,
            /* [in] */ BSTR Criteria);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Status )( 
            _ADORecordset * This,
            /* [retval][out] */ long *pl);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            _ADORecordset * This,
            /* [retval][out] */ LONG *plObjState);
        
        /* [hidden] */ HRESULT ( STDMETHODCALLTYPE *_xClone )( 
            _ADORecordset * This,
            /* [retval][out] */ _ADORecordset **ppvObject);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *UpdateBatch )( 
            _ADORecordset * This,
            /* [defaultvalue][in] */ AffectEnum AffectRecords);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CancelBatch )( 
            _ADORecordset * This,
            /* [defaultvalue][in] */ AffectEnum AffectRecords);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CursorLocation )( 
            _ADORecordset * This,
            /* [retval][out] */ CursorLocationEnum *plCursorLoc);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CursorLocation )( 
            _ADORecordset * This,
            /* [in] */ CursorLocationEnum lCursorLoc);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *NextADORecordset )( 
            _ADORecordset * This,
            /* [optional][out] */ VARIANT *RecordsAffected,
            /* [retval][out] */ _ADORecordset **ppiRs);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Supports )( 
            _ADORecordset * This,
            /* [in] */ CursorOptionEnum CursorOptions,
            /* [retval][out] */ VARIANT_BOOL *pb);
        
        /* [hidden][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Collect )( 
            _ADORecordset * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ VARIANT *pvar);
        
        /* [hidden][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Collect )( 
            _ADORecordset * This,
            /* [in] */ VARIANT Index,
            /* [in] */ VARIANT value);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MarshalOptions )( 
            _ADORecordset * This,
            /* [retval][out] */ MarshalOptionsEnum *peMarshal);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MarshalOptions )( 
            _ADORecordset * This,
            /* [in] */ MarshalOptionsEnum eMarshal);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Find )( 
            _ADORecordset * This,
            /* [in] */ BSTR Criteria,
            /* [defaultvalue][in] */ ADO_LONGPTR SkipRecords,
            /* [defaultvalue][in] */ SearchDirectionEnum SearchDirection,
            /* [optional][in] */ VARIANT Start);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Cancel )( 
            _ADORecordset * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DataSource )( 
            _ADORecordset * This,
            /* [retval][out] */ IUnknown **ppunkDataSource);
        
        /* [helpcontext][propputref][id] */ HRESULT ( STDMETHODCALLTYPE *putref_DataSource )( 
            _ADORecordset * This,
            /* [in] */ IUnknown *punkDataSource);
        
        /* [hidden] */ HRESULT ( STDMETHODCALLTYPE *_xSave )( 
            _ADORecordset * This,
            /* [defaultvalue][in] */ BSTR FileName,
            /* [defaultvalue][in] */ PersistFormatEnum PersistFormat);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ActiveCommand )( 
            _ADORecordset * This,
            /* [retval][out] */ IDispatch **ppCmd);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StayInSync )( 
            _ADORecordset * This,
            /* [in] */ VARIANT_BOOL bStayInSync);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StayInSync )( 
            _ADORecordset * This,
            /* [retval][out] */ VARIANT_BOOL *pbStayInSync);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetString )( 
            _ADORecordset * This,
            /* [defaultvalue][in] */ StringFormatEnum StringFormat,
            /* [defaultvalue][in] */ long NumRows,
            /* [defaultvalue][in] */ BSTR ColumnDelimeter,
            /* [defaultvalue][in] */ BSTR RowDelimeter,
            /* [defaultvalue][in] */ BSTR NullExpr,
            /* [retval][out] */ BSTR *pRetString);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DataMember )( 
            _ADORecordset * This,
            /* [retval][out] */ BSTR *pbstrDataMember);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DataMember )( 
            _ADORecordset * This,
            /* [in] */ BSTR bstrDataMember);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CompareBookmarks )( 
            _ADORecordset * This,
            /* [in] */ VARIANT Bookmark1,
            /* [in] */ VARIANT Bookmark2,
            /* [retval][out] */ CompareEnum *pCompare);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Clone )( 
            _ADORecordset * This,
            /* [defaultvalue][in] */ LockTypeEnum LockType,
            /* [retval][out] */ _ADORecordset **ppvObject);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Resync )( 
            _ADORecordset * This,
            /* [defaultvalue][in] */ AffectEnum AffectRecords,
            /* [defaultvalue][in] */ ResyncEnum ResyncValues);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Seek )( 
            _ADORecordset * This,
            /* [in] */ VARIANT KeyValues,
            /* [defaultvalue][in] */ SeekEnum SeekOption);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Index )( 
            _ADORecordset * This,
            /* [in] */ BSTR Index);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Index )( 
            _ADORecordset * This,
            /* [retval][out] */ BSTR *pbstrIndex);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Save )( 
            _ADORecordset * This,
            /* [optional][in] */ VARIANT Destination,
            /* [defaultvalue][in] */ PersistFormatEnum PersistFormat);
        
        END_INTERFACE
    } _RecordsetVtbl;
    interface _Recordset
    {
        CONST_VTBL struct _RecordsetVtbl *lpVtbl;
    };
    
#ifdef COBJMACROS
#define _Recordset_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)
#define _Recordset_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)
#define _Recordset_Release(This)	\
    (This)->lpVtbl -> Release(This)
#define _Recordset_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)
#define _Recordset_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define _Recordset_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define _Recordset_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
#define _Recordset_get_Properties(This,ppvObject)	\
    (This)->lpVtbl -> get_Properties(This,ppvObject)
#define _Recordset_get_AbsolutePosition(This,pl)	\
    (This)->lpVtbl -> get_AbsolutePosition(This,pl)
#define _Recordset_put_AbsolutePosition(This,Position)	\
    (This)->lpVtbl -> put_AbsolutePosition(This,Position)
#define _Recordset_putref_ActiveConnection(This,pconn)	\
    (This)->lpVtbl -> putref_ActiveConnection(This,pconn)
#define _Recordset_put_ActiveConnection(This,vConn)	\
    (This)->lpVtbl -> put_ActiveConnection(This,vConn)
#define _Recordset_get_ActiveConnection(This,pvar)	\
    (This)->lpVtbl -> get_ActiveConnection(This,pvar)
#define _Recordset_get_BOF(This,pb)	\
    (This)->lpVtbl -> get_BOF(This,pb)
#define _Recordset_get_Bookmark(This,pvBookmark)	\
    (This)->lpVtbl -> get_Bookmark(This,pvBookmark)
#define _Recordset_put_Bookmark(This,vBookmark)	\
    (This)->lpVtbl -> put_Bookmark(This,vBookmark)
#define _Recordset_get_CacheSize(This,pl)	\
    (This)->lpVtbl -> get_CacheSize(This,pl)
#define _Recordset_put_CacheSize(This,CacheSize)	\
    (This)->lpVtbl -> put_CacheSize(This,CacheSize)
#define _Recordset_get_CursorType(This,plCursorType)	\
    (This)->lpVtbl -> get_CursorType(This,plCursorType)
#define _Recordset_put_CursorType(This,lCursorType)	\
    (This)->lpVtbl -> put_CursorType(This,lCursorType)
#define _Recordset_get_EOF(This,pb)	\
    (This)->lpVtbl -> get_EOF(This,pb)
#define _Recordset_get_Fields(This,ppvObject)	\
    (This)->lpVtbl -> get_Fields(This,ppvObject)
#define _Recordset_get_LockType(This,plLockType)	\
    (This)->lpVtbl -> get_LockType(This,plLockType)
#define _Recordset_put_LockType(This,lLockType)	\
    (This)->lpVtbl -> put_LockType(This,lLockType)
#define _Recordset_get_MaxRecords(This,plMaxRecords)	\
    (This)->lpVtbl -> get_MaxRecords(This,plMaxRecords)
#define _Recordset_put_MaxRecords(This,lMaxRecords)	\
    (This)->lpVtbl -> put_MaxRecords(This,lMaxRecords)
#define _Recordset_get_RecordCount(This,pl)	\
    (This)->lpVtbl -> get_RecordCount(This,pl)
#define _Recordset_putref_Source(This,pcmd)	\
    (This)->lpVtbl -> putref_Source(This,pcmd)
#define _Recordset_put_Source(This,bstrConn)	\
    (This)->lpVtbl -> put_Source(This,bstrConn)
#define _Recordset_get_Source(This,pvSource)	\
    (This)->lpVtbl -> get_Source(This,pvSource)
#define _Recordset_AddNew(This,FieldList,Values)	\
    (This)->lpVtbl -> AddNew(This,FieldList,Values)
#define _Recordset_CancelUpdate(This)	\
    (This)->lpVtbl -> CancelUpdate(This)
#define _Recordset_Close(This)	\
    (This)->lpVtbl -> Close(This)
#define _Recordset_Delete(This,AffectRecords)	\
    (This)->lpVtbl -> Delete(This,AffectRecords)
#define _Recordset_GetRows(This,Rows,Start,Fields,pvar)	\
    (This)->lpVtbl -> GetRows(This,Rows,Start,Fields,pvar)
#define _Recordset_Move(This,NumRecords,Start)	\
    (This)->lpVtbl -> Move(This,NumRecords,Start)
#define _Recordset_MoveNext(This)	\
    (This)->lpVtbl -> MoveNext(This)
#define _Recordset_MovePrevious(This)	\
    (This)->lpVtbl -> MovePrevious(This)
#define _Recordset_MoveFirst(This)	\
    (This)->lpVtbl -> MoveFirst(This)
#define _Recordset_MoveLast(This)	\
    (This)->lpVtbl -> MoveLast(This)
#define _Recordset_Open(This,Source,ActiveConnection,CursorType,LockType,Options)	\
    (This)->lpVtbl -> Open(This,Source,ActiveConnection,CursorType,LockType,Options)
#define _Recordset_Requery(This,Options)	\
    (This)->lpVtbl -> Requery(This,Options)
#define _Recordset__xResync(This,AffectRecords)	\
    (This)->lpVtbl -> _xResync(This,AffectRecords)
#define _Recordset_Update(This,Fields,Values)	\
    (This)->lpVtbl -> Update(This,Fields,Values)
#define _Recordset_get_AbsolutePage(This,pl)	\
    (This)->lpVtbl -> get_AbsolutePage(This,pl)
#define _Recordset_put_AbsolutePage(This,Page)	\
    (This)->lpVtbl -> put_AbsolutePage(This,Page)
#define _Recordset_get_EditMode(This,pl)	\
    (This)->lpVtbl -> get_EditMode(This,pl)
#define _Recordset_get_Filter(This,Criteria)	\
    (This)->lpVtbl -> get_Filter(This,Criteria)
#define _Recordset_put_Filter(This,Criteria)	\
    (This)->lpVtbl -> put_Filter(This,Criteria)
#define _Recordset_get_PageCount(This,pl)	\
    (This)->lpVtbl -> get_PageCount(This,pl)
#define _Recordset_get_PageSize(This,pl)	\
    (This)->lpVtbl -> get_PageSize(This,pl)
#define _Recordset_put_PageSize(This,PageSize)	\
    (This)->lpVtbl -> put_PageSize(This,PageSize)
#define _Recordset_get_Sort(This,Criteria)	\
    (This)->lpVtbl -> get_Sort(This,Criteria)
#define _Recordset_put_Sort(This,Criteria)	\
    (This)->lpVtbl -> put_Sort(This,Criteria)
#define _Recordset_get_Status(This,pl)	\
    (This)->lpVtbl -> get_Status(This,pl)
#define _Recordset_get_State(This,plObjState)	\
    (This)->lpVtbl -> get_State(This,plObjState)
#define _Recordset__xClone(This,ppvObject)	\
    (This)->lpVtbl -> _xClone(This,ppvObject)
#define _Recordset_UpdateBatch(This,AffectRecords)	\
    (This)->lpVtbl -> UpdateBatch(This,AffectRecords)
#define _Recordset_CancelBatch(This,AffectRecords)	\
    (This)->lpVtbl -> CancelBatch(This,AffectRecords)
#define _Recordset_get_CursorLocation(This,plCursorLoc)	\
    (This)->lpVtbl -> get_CursorLocation(This,plCursorLoc)
#define _Recordset_put_CursorLocation(This,lCursorLoc)	\
    (This)->lpVtbl -> put_CursorLocation(This,lCursorLoc)
#define _Recordset_NextRecordset(This,RecordsAffected,ppiRs)	\
    (This)->lpVtbl -> NextRecordset(This,RecordsAffected,ppiRs)
#define _Recordset_Supports(This,CursorOptions,pb)	\
    (This)->lpVtbl -> Supports(This,CursorOptions,pb)
#define _Recordset_get_Collect(This,Index,pvar)	\
    (This)->lpVtbl -> get_Collect(This,Index,pvar)
#define _Recordset_put_Collect(This,Index,value)	\
    (This)->lpVtbl -> put_Collect(This,Index,value)
#define _Recordset_get_MarshalOptions(This,peMarshal)	\
    (This)->lpVtbl -> get_MarshalOptions(This,peMarshal)
#define _Recordset_put_MarshalOptions(This,eMarshal)	\
    (This)->lpVtbl -> put_MarshalOptions(This,eMarshal)
#define _Recordset_Find(This,Criteria,SkipRecords,SearchDirection,Start)	\
    (This)->lpVtbl -> Find(This,Criteria,SkipRecords,SearchDirection,Start)
#define _Recordset_Cancel(This)	\
    (This)->lpVtbl -> Cancel(This)
#define _Recordset_get_DataSource(This,ppunkDataSource)	\
    (This)->lpVtbl -> get_DataSource(This,ppunkDataSource)
#define _Recordset_putref_DataSource(This,punkDataSource)	\
    (This)->lpVtbl -> putref_DataSource(This,punkDataSource)
#define _Recordset__xSave(This,FileName,PersistFormat)	\
    (This)->lpVtbl -> _xSave(This,FileName,PersistFormat)
#define _Recordset_get_ActiveCommand(This,ppCmd)	\
    (This)->lpVtbl -> get_ActiveCommand(This,ppCmd)
#define _Recordset_put_StayInSync(This,bStayInSync)	\
    (This)->lpVtbl -> put_StayInSync(This,bStayInSync)
#define _Recordset_get_StayInSync(This,pbStayInSync)	\
    (This)->lpVtbl -> get_StayInSync(This,pbStayInSync)
#define _Recordset_GetString(This,StringFormat,NumRows,ColumnDelimeter,RowDelimeter,NullExpr,pRetString)	\
    (This)->lpVtbl -> GetString(This,StringFormat,NumRows,ColumnDelimeter,RowDelimeter,NullExpr,pRetString)
#define _Recordset_get_DataMember(This,pbstrDataMember)	\
    (This)->lpVtbl -> get_DataMember(This,pbstrDataMember)
#define _Recordset_put_DataMember(This,bstrDataMember)	\
    (This)->lpVtbl -> put_DataMember(This,bstrDataMember)
#define _Recordset_CompareBookmarks(This,Bookmark1,Bookmark2,pCompare)	\
    (This)->lpVtbl -> CompareBookmarks(This,Bookmark1,Bookmark2,pCompare)
#define _Recordset_Clone(This,LockType,ppvObject)	\
    (This)->lpVtbl -> Clone(This,LockType,ppvObject)
#define _Recordset_Resync(This,AffectRecords,ResyncValues)	\
    (This)->lpVtbl -> Resync(This,AffectRecords,ResyncValues)
#define _Recordset_Seek(This,KeyValues,SeekOption)	\
    (This)->lpVtbl -> Seek(This,KeyValues,SeekOption)
#define _Recordset_put_Index(This,Index)	\
    (This)->lpVtbl -> put_Index(This,Index)
#define _Recordset_get_Index(This,pbstrIndex)	\
    (This)->lpVtbl -> get_Index(This,pbstrIndex)
#define _Recordset_Save(This,Destination,PersistFormat)	\
    (This)->lpVtbl -> Save(This,Destination,PersistFormat)
#endif /* COBJMACROS */
#endif 	/* C style interface */
/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Recordset_Save_Proxy( 
    _ADORecordset * This,
    /* [optional][in] */ VARIANT Destination,
    /* [defaultvalue][in] */ PersistFormatEnum PersistFormat);
void __RPC_STUB _Recordset_Save_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
#endif 	/* ___Recordset_INTERFACE_DEFINED__ */
#ifndef __ADORecordsetConstruction_INTERFACE_DEFINED__
#define __ADORecordsetConstruction_INTERFACE_DEFINED__
/* interface ADORecordsetConstruction */
/* [object][uuid][restricted] */ 
EXTERN_C const IID IID_ADORecordsetConstruction;
#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00000283-0000-0010-8000-00AA006D2EA4")
    ADORecordsetConstruction : public IDispatch
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Rowset( 
            /* [retval][out] */ IUnknown **ppRowset) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Rowset( 
            /* [in] */ IUnknown *pRowset) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Chapter( 
            /* [retval][out] */ ADO_LONGPTR *plChapter) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Chapter( 
            /* [in] */ ADO_LONGPTR lChapter) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_RowPosition( 
            /* [retval][out] */ IUnknown **ppRowPos) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_RowPosition( 
            /* [in] */ IUnknown *pRowPos) = 0;
        
    };
    
#else 	/* C style interface */
    typedef struct ADORecordsetConstructionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ADORecordsetConstruction * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ADORecordsetConstruction * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ADORecordsetConstruction * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ADORecordsetConstruction * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ADORecordsetConstruction * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ADORecordsetConstruction * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ADORecordsetConstruction * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rowset )( 
            ADORecordsetConstruction * This,
            /* [retval][out] */ IUnknown **ppRowset);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Rowset )( 
            ADORecordsetConstruction * This,
            /* [in] */ IUnknown *pRowset);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Chapter )( 
            ADORecordsetConstruction * This,
            /* [retval][out] */ ADO_LONGPTR *plChapter);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Chapter )( 
            ADORecordsetConstruction * This,
            /* [in] */ ADO_LONGPTR lChapter);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RowPosition )( 
            ADORecordsetConstruction * This,
            /* [retval][out] */ IUnknown **ppRowPos);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_RowPosition )( 
            ADORecordsetConstruction * This,
            /* [in] */ IUnknown *pRowPos);
        
        END_INTERFACE
    } ADORecordsetConstructionVtbl;
    interface ADORecordsetConstruction
    {
        CONST_VTBL struct ADORecordsetConstructionVtbl *lpVtbl;
    };
    
#ifdef COBJMACROS
#define ADORecordsetConstruction_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)
#define ADORecordsetConstruction_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)
#define ADORecordsetConstruction_Release(This)	\
    (This)->lpVtbl -> Release(This)
#define ADORecordsetConstruction_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)
#define ADORecordsetConstruction_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define ADORecordsetConstruction_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define ADORecordsetConstruction_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
#define ADORecordsetConstruction_get_Rowset(This,ppRowset)	\
    (This)->lpVtbl -> get_Rowset(This,ppRowset)
#define ADORecordsetConstruction_put_Rowset(This,pRowset)	\
    (This)->lpVtbl -> put_Rowset(This,pRowset)
#define ADORecordsetConstruction_get_Chapter(This,plChapter)	\
    (This)->lpVtbl -> get_Chapter(This,plChapter)
#define ADORecordsetConstruction_put_Chapter(This,lChapter)	\
    (This)->lpVtbl -> put_Chapter(This,lChapter)
#define ADORecordsetConstruction_get_RowPosition(This,ppRowPos)	\
    (This)->lpVtbl -> get_RowPosition(This,ppRowPos)
#define ADORecordsetConstruction_put_RowPosition(This,pRowPos)	\
    (This)->lpVtbl -> put_RowPosition(This,pRowPos)
#endif /* COBJMACROS */
#endif 	/* C style interface */
/* [propget] */ HRESULT STDMETHODCALLTYPE ADORecordsetConstruction_get_Rowset_Proxy( 
    ADORecordsetConstruction * This,
    /* [retval][out] */ IUnknown **ppRowset);
void __RPC_STUB ADORecordsetConstruction_get_Rowset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [propput] */ HRESULT STDMETHODCALLTYPE ADORecordsetConstruction_put_Rowset_Proxy( 
    ADORecordsetConstruction * This,
    /* [in] */ IUnknown *pRowset);
void __RPC_STUB ADORecordsetConstruction_put_Rowset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [propget] */ HRESULT STDMETHODCALLTYPE ADORecordsetConstruction_get_Chapter_Proxy( 
    ADORecordsetConstruction * This,
    /* [retval][out] */ ADO_LONGPTR *plChapter);
void __RPC_STUB ADORecordsetConstruction_get_Chapter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [propput] */ HRESULT STDMETHODCALLTYPE ADORecordsetConstruction_put_Chapter_Proxy( 
    ADORecordsetConstruction * This,
    /* [in] */ ADO_LONGPTR lChapter);
void __RPC_STUB ADORecordsetConstruction_put_Chapter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [propget] */ HRESULT STDMETHODCALLTYPE ADORecordsetConstruction_get_RowPosition_Proxy( 
    ADORecordsetConstruction * This,
    /* [retval][out] */ IUnknown **ppRowPos);
void __RPC_STUB ADORecordsetConstruction_get_RowPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [propput] */ HRESULT STDMETHODCALLTYPE ADORecordsetConstruction_put_RowPosition_Proxy( 
    ADORecordsetConstruction * This,
    /* [in] */ IUnknown *pRowPos);
void __RPC_STUB ADORecordsetConstruction_put_RowPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
#endif 	/* __ADORecordsetConstruction_INTERFACE_DEFINED__ */
#ifndef __Field15_INTERFACE_DEFINED__
#define __Field15_INTERFACE_DEFINED__
/* interface Field15 */
/* [object][helpcontext][uuid][hidden][nonextensible][dual] */ 
EXTERN_C const IID IID_Field15;
#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00000505-0000-0010-8000-00AA006D2EA4")
    Field15 : public _ADO
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ActualSize( 
            /* [retval][out] */ ADO_LONGPTR *pl) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Attributes( 
            /* [retval][out] */ long *pl) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DefinedSize( 
            /* [retval][out] */ ADO_LONGPTR *pl) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pbstr) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ DataTypeEnum *pDataType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Value( 
            /* [retval][out] */ VARIANT *pvar) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Value( 
            /* [in] */ VARIANT Val) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Precision( 
            /* [retval][out] */ BYTE *pbPrecision) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_NumericScale( 
            /* [retval][out] */ BYTE *pbNumericScale) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE AppendChunk( 
            /* [in] */ VARIANT Data) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetChunk( 
            /* [in] */ long Length,
            /* [retval][out] */ VARIANT *pvar) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OriginalValue( 
            /* [retval][out] */ VARIANT *pvar) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UnderlyingValue( 
            /* [retval][out] */ VARIANT *pvar) = 0;
        
    };
    
#else 	/* C style interface */
    typedef struct Field15Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Field15 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Field15 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Field15 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Field15 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Field15 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Field15 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Field15 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Properties )( 
            Field15 * This,
            /* [retval][out] */ ADOProperties **ppvObject);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ActualSize )( 
            Field15 * This,
            /* [retval][out] */ ADO_LONGPTR *pl);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Attributes )( 
            Field15 * This,
            /* [retval][out] */ long *pl);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DefinedSize )( 
            Field15 * This,
            /* [retval][out] */ ADO_LONGPTR *pl);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            Field15 * This,
            /* [retval][out] */ BSTR *pbstr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            Field15 * This,
            /* [retval][out] */ DataTypeEnum *pDataType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            Field15 * This,
            /* [retval][out] */ VARIANT *pvar);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Value )( 
            Field15 * This,
            /* [in] */ VARIANT Val);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Precision )( 
            Field15 * This,
            /* [retval][out] */ BYTE *pbPrecision);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NumericScale )( 
            Field15 * This,
            /* [retval][out] */ BYTE *pbNumericScale);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AppendChunk )( 
            Field15 * This,
            /* [in] */ VARIANT Data);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetChunk )( 
            Field15 * This,
            /* [in] */ long Length,
            /* [retval][out] */ VARIANT *pvar);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OriginalValue )( 
            Field15 * This,
            /* [retval][out] */ VARIANT *pvar);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UnderlyingValue )( 
            Field15 * This,
            /* [retval][out] */ VARIANT *pvar);
        
        END_INTERFACE
    } Field15Vtbl;
    interface Field15
    {
        CONST_VTBL struct Field15Vtbl *lpVtbl;
    };
    
#ifdef COBJMACROS
#define Field15_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)
#define Field15_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)
#define Field15_Release(This)	\
    (This)->lpVtbl -> Release(This)
#define Field15_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)
#define Field15_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define Field15_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define Field15_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
#define Field15_get_Properties(This,ppvObject)	\
    (This)->lpVtbl -> get_Properties(This,ppvObject)
#define Field15_get_ActualSize(This,pl)	\
    (This)->lpVtbl -> get_ActualSize(This,pl)
#define Field15_get_Attributes(This,pl)	\
    (This)->lpVtbl -> get_Attributes(This,pl)
#define Field15_get_DefinedSize(This,pl)	\
    (This)->lpVtbl -> get_DefinedSize(This,pl)
#define Field15_get_Name(This,pbstr)	\
    (This)->lpVtbl -> get_Name(This,pbstr)
#define Field15_get_Type(This,pDataType)	\
    (This)->lpVtbl -> get_Type(This,pDataType)
#define Field15_get_Value(This,pvar)	\
    (This)->lpVtbl -> get_Value(This,pvar)
#define Field15_put_Value(This,Val)	\
    (This)->lpVtbl -> put_Value(This,Val)
#define Field15_get_Precision(This,pbPrecision)	\
    (This)->lpVtbl -> get_Precision(This,pbPrecision)
#define Field15_get_NumericScale(This,pbNumericScale)	\
    (This)->lpVtbl -> get_NumericScale(This,pbNumericScale)
#define Field15_AppendChunk(This,Data)	\
    (This)->lpVtbl -> AppendChunk(This,Data)
#define Field15_GetChunk(This,Length,pvar)	\
    (This)->lpVtbl -> GetChunk(This,Length,pvar)
#define Field15_get_OriginalValue(This,pvar)	\
    (This)->lpVtbl -> get_OriginalValue(This,pvar)
#define Field15_get_UnderlyingValue(This,pvar)	\
    (This)->lpVtbl -> get_UnderlyingValue(This,pvar)
#endif /* COBJMACROS */
#endif 	/* C style interface */
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE Field15_get_ActualSize_Proxy( 
    Field15 * This,
    /* [retval][out] */ ADO_LONGPTR *pl);
void __RPC_STUB Field15_get_ActualSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE Field15_get_Attributes_Proxy( 
    Field15 * This,
    /* [retval][out] */ long *pl);
void __RPC_STUB Field15_get_Attributes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE Field15_get_DefinedSize_Proxy( 
    Field15 * This,
    /* [retval][out] */ ADO_LONGPTR *pl);
void __RPC_STUB Field15_get_DefinedSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE Field15_get_Name_Proxy( 
    Field15 * This,
    /* [retval][out] */ BSTR *pbstr);
void __RPC_STUB Field15_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE Field15_get_Type_Proxy( 
    Field15 * This,
    /* [retval][out] */ DataTypeEnum *pDataType);
void __RPC_STUB Field15_get_Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE Field15_get_Value_Proxy( 
    Field15 * This,
    /* [retval][out] */ VARIANT *pvar);
void __RPC_STUB Field15_get_Value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE Field15_put_Value_Proxy( 
    Field15 * This,
    /* [in] */ VARIANT Val);
void __RPC_STUB Field15_put_Value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE Field15_get_Precision_Proxy( 
    Field15 * This,
    /* [retval][out] */ BYTE *pbPrecision);
void __RPC_STUB Field15_get_Precision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE Field15_get_NumericScale_Proxy( 
    Field15 * This,
    /* [retval][out] */ BYTE *pbNumericScale);
void __RPC_STUB Field15_get_NumericScale_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Field15_AppendChunk_Proxy( 
    Field15 * This,
    /* [in] */ VARIANT Data);
void __RPC_STUB Field15_AppendChunk_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Field15_GetChunk_Proxy( 
    Field15 * This,
    /* [in] */ long Length,
    /* [retval][out] */ VARIANT *pvar);
void __RPC_STUB Field15_GetChunk_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE Field15_get_OriginalValue_Proxy( 
    Field15 * This,
    /* [retval][out] */ VARIANT *pvar);
void __RPC_STUB Field15_get_OriginalValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE Field15_get_UnderlyingValue_Proxy( 
    Field15 * This,
    /* [retval][out] */ VARIANT *pvar);
void __RPC_STUB Field15_get_UnderlyingValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
#endif 	/* __Field15_INTERFACE_DEFINED__ */
#ifndef __Field20_INTERFACE_DEFINED__
#define __Field20_INTERFACE_DEFINED__
/* interface Field20 */
/* [object][helpcontext][uuid][hidden][nonextensible][dual] */ 
EXTERN_C const IID IID_Field20;
#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0000054C-0000-0010-8000-00AA006D2EA4")
    Field20 : public _ADO
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ActualSize( 
            /* [retval][out] */ ADO_LONGPTR *pl) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Attributes( 
            /* [retval][out] */ long *pl) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DefinedSize( 
            /* [retval][out] */ ADO_LONGPTR *pl) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pbstr) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ DataTypeEnum *pDataType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Value( 
            /* [retval][out] */ VARIANT *pvar) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Value( 
            /* [in] */ VARIANT Val) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Precision( 
            /* [retval][out] */ BYTE *pbPrecision) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_NumericScale( 
            /* [retval][out] */ BYTE *pbNumericScale) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE AppendChunk( 
            /* [in] */ VARIANT Data) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetChunk( 
            /* [in] */ long Length,
            /* [retval][out] */ VARIANT *pvar) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OriginalValue( 
            /* [retval][out] */ VARIANT *pvar) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UnderlyingValue( 
            /* [retval][out] */ VARIANT *pvar) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_DataFormat( 
            /* [retval][out] */ IUnknown **ppiDF) = 0;
        
        virtual /* [propputref][id] */ HRESULT STDMETHODCALLTYPE putref_DataFormat( 
            /* [in] */ IUnknown *piDF) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Precision( 
            /* [in] */ BYTE bPrecision) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_NumericScale( 
            /* [in] */ BYTE bScale) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Type( 
            /* [in] */ DataTypeEnum DataType) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DefinedSize( 
            /* [in] */ ADO_LONGPTR lSize) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Attributes( 
            /* [in] */ long lAttributes) = 0;
        
    };
    
#else 	/* C style interface */
    typedef struct Field20Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Field20 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Field20 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Field20 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Field20 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Field20 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Field20 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Field20 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Properties )( 
            Field20 * This,
            /* [retval][out] */ ADOProperties **ppvObject);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ActualSize )( 
            Field20 * This,
            /* [retval][out] */ ADO_LONGPTR *pl);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Attributes )( 
            Field20 * This,
            /* [retval][out] */ long *pl);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DefinedSize )( 
            Field20 * This,
            /* [retval][out] */ ADO_LONGPTR *pl);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            Field20 * This,
            /* [retval][out] */ BSTR *pbstr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            Field20 * This,
            /* [retval][out] */ DataTypeEnum *pDataType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            Field20 * This,
            /* [retval][out] */ VARIANT *pvar);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Value )( 
            Field20 * This,
            /* [in] */ VARIANT Val);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Precision )( 
            Field20 * This,
            /* [retval][out] */ BYTE *pbPrecision);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NumericScale )( 
            Field20 * This,
            /* [retval][out] */ BYTE *pbNumericScale);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AppendChunk )( 
            Field20 * This,
            /* [in] */ VARIANT Data);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetChunk )( 
            Field20 * This,
            /* [in] */ long Length,
            /* [retval][out] */ VARIANT *pvar);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OriginalValue )( 
            Field20 * This,
            /* [retval][out] */ VARIANT *pvar);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UnderlyingValue )( 
            Field20 * This,
            /* [retval][out] */ VARIANT *pvar);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DataFormat )( 
            Field20 * This,
            /* [retval][out] */ IUnknown **ppiDF);
        
        /* [propputref][id] */ HRESULT ( STDMETHODCALLTYPE *putref_DataFormat )( 
            Field20 * This,
            /* [in] */ IUnknown *piDF);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Precision )( 
            Field20 * This,
            /* [in] */ BYTE bPrecision);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_NumericScale )( 
            Field20 * This,
            /* [in] */ BYTE bScale);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Type )( 
            Field20 * This,
            /* [in] */ DataTypeEnum DataType);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DefinedSize )( 
            Field20 * This,
            /* [in] */ ADO_LONGPTR lSize);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Attributes )( 
            Field20 * This,
            /* [in] */ long lAttributes);
        
        END_INTERFACE
    } Field20Vtbl;
    interface Field20
    {
        CONST_VTBL struct Field20Vtbl *lpVtbl;
    };
    
#ifdef COBJMACROS
#define Field20_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)
#define Field20_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)
#define Field20_Release(This)	\
    (This)->lpVtbl -> Release(This)
#define Field20_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)
#define Field20_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define Field20_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define Field20_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
#define Field20_get_Properties(This,ppvObject)	\
    (This)->lpVtbl -> get_Properties(This,ppvObject)
#define Field20_get_ActualSize(This,pl)	\
    (This)->lpVtbl -> get_ActualSize(This,pl)
#define Field20_get_Attributes(This,pl)	\
    (This)->lpVtbl -> get_Attributes(This,pl)
#define Field20_get_DefinedSize(This,pl)	\
    (This)->lpVtbl -> get_DefinedSize(This,pl)
#define Field20_get_Name(This,pbstr)	\
    (This)->lpVtbl -> get_Name(This,pbstr)
#define Field20_get_Type(This,pDataType)	\
    (This)->lpVtbl -> get_Type(This,pDataType)
#define Field20_get_Value(This,pvar)	\
    (This)->lpVtbl -> get_Value(This,pvar)
#define Field20_put_Value(This,Val)	\
    (This)->lpVtbl -> put_Value(This,Val)
#define Field20_get_Precision(This,pbPrecision)	\
    (This)->lpVtbl -> get_Precision(This,pbPrecision)
#define Field20_get_NumericScale(This,pbNumericScale)	\
    (This)->lpVtbl -> get_NumericScale(This,pbNumericScale)
#define Field20_AppendChunk(This,Data)	\
    (This)->lpVtbl -> AppendChunk(This,Data)
#define Field20_GetChunk(This,Length,pvar)	\
    (This)->lpVtbl -> GetChunk(This,Length,pvar)
#define Field20_get_OriginalValue(This,pvar)	\
    (This)->lpVtbl -> get_OriginalValue(This,pvar)
#define Field20_get_UnderlyingValue(This,pvar)	\
    (This)->lpVtbl -> get_UnderlyingValue(This,pvar)
#define Field20_get_DataFormat(This,ppiDF)	\
    (This)->lpVtbl -> get_DataFormat(This,ppiDF)
#define Field20_putref_DataFormat(This,piDF)	\
    (This)->lpVtbl -> putref_DataFormat(This,piDF)
#define Field20_put_Precision(This,bPrecision)	\
    (This)->lpVtbl -> put_Precision(This,bPrecision)
#define Field20_put_NumericScale(This,bScale)	\
    (This)->lpVtbl -> put_NumericScale(This,bScale)
#define Field20_put_Type(This,DataType)	\
    (This)->lpVtbl -> put_Type(This,DataType)
#define Field20_put_DefinedSize(This,lSize)	\
    (This)->lpVtbl -> put_DefinedSize(This,lSize)
#define Field20_put_Attributes(This,lAttributes)	\
    (This)->lpVtbl -> put_Attributes(This,lAttributes)
#endif /* COBJMACROS */
#endif 	/* C style interface */
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE Field20_get_ActualSize_Proxy( 
    Field20 * This,
    /* [retval][out] */ ADO_LONGPTR *pl);
void __RPC_STUB Field20_get_ActualSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE Field20_get_Attributes_Proxy( 
    Field20 * This,
    /* [retval][out] */ long *pl);
void __RPC_STUB Field20_get_Attributes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE Field20_get_DefinedSize_Proxy( 
    Field20 * This,
    /* [retval][out] */ ADO_LONGPTR *pl);
void __RPC_STUB Field20_get_DefinedSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE Field20_get_Name_Proxy( 
    Field20 * This,
    /* [retval][out] */ BSTR *pbstr);
void __RPC_STUB Field20_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE Field20_get_Type_Proxy( 
    Field20 * This,
    /* [retval][out] */ DataTypeEnum *pDataType);
void __RPC_STUB Field20_get_Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE Field20_get_Value_Proxy( 
    Field20 * This,
    /* [retval][out] */ VARIANT *pvar);
void __RPC_STUB Field20_get_Value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE Field20_put_Value_Proxy( 
    Field20 * This,
    /* [in] */ VARIANT Val);
void __RPC_STUB Field20_put_Value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE Field20_get_Precision_Proxy( 
    Field20 * This,
    /* [retval][out] */ BYTE *pbPrecision);
void __RPC_STUB Field20_get_Precision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE Field20_get_NumericScale_Proxy( 
    Field20 * This,
    /* [retval][out] */ BYTE *pbNumericScale);
void __RPC_STUB Field20_get_NumericScale_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Field20_AppendChunk_Proxy( 
    Field20 * This,
    /* [in] */ VARIANT Data);
void __RPC_STUB Field20_AppendChunk_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Field20_GetChunk_Proxy( 
    Field20 * This,
    /* [in] */ long Length,
    /* [retval][out] */ VARIANT *pvar);
void __RPC_STUB Field20_GetChunk_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE Field20_get_OriginalValue_Proxy( 
    Field20 * This,
    /* [retval][out] */ VARIANT *pvar);
void __RPC_STUB Field20_get_OriginalValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE Field20_get_UnderlyingValue_Proxy( 
    Field20 * This,
    /* [retval][out] */ VARIANT *pvar);
void __RPC_STUB Field20_get_UnderlyingValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [propget][id] */ HRESULT STDMETHODCALLTYPE Field20_get_DataFormat_Proxy( 
    Field20 * This,
    /* [retval][out] */ IUnknown **ppiDF);
void __RPC_STUB Field20_get_DataFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [propputref][id] */ HRESULT STDMETHODCALLTYPE Field20_putref_DataFormat_Proxy( 
    Field20 * This,
    /* [in] */ IUnknown *piDF);
void __RPC_STUB Field20_putref_DataFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE Field20_put_Precision_Proxy( 
    Field20 * This,
    /* [in] */ BYTE bPrecision);
void __RPC_STUB Field20_put_Precision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE Field20_put_NumericScale_Proxy( 
    Field20 * This,
    /* [in] */ BYTE bScale);
void __RPC_STUB Field20_put_NumericScale_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE Field20_put_Type_Proxy( 
    Field20 * This,
    /* [in] */ DataTypeEnum DataType);
void __RPC_STUB Field20_put_Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE Field20_put_DefinedSize_Proxy( 
    Field20 * This,
    /* [in] */ ADO_LONGPTR lSize);
void __RPC_STUB Field20_put_DefinedSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE Field20_put_Attributes_Proxy( 
    Field20 * This,
    /* [in] */ long lAttributes);
void __RPC_STUB Field20_put_Attributes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
#endif 	/* __Field20_INTERFACE_DEFINED__ */
#ifndef __Field_INTERFACE_DEFINED__
#define __Field_INTERFACE_DEFINED__
/* interface ADOField */
/* [object][helpcontext][uuid][nonextensible][dual] */ 
EXTERN_C const IID IID_Field;
#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00000569-0000-0010-8000-00AA006D2EA4")
    ADOField : public Field20
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Status( 
            /* [retval][out] */ long *pFStatus) = 0;
        
    };
    
#else 	/* C style interface */
    typedef struct FieldVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ADOField * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ADOField * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ADOField * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ADOField * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ADOField * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ADOField * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ADOField * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Properties )( 
            ADOField * This,
            /* [retval][out] */ ADOProperties **ppvObject);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ActualSize )( 
            ADOField * This,
            /* [retval][out] */ ADO_LONGPTR *pl);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Attributes )( 
            ADOField * This,
            /* [retval][out] */ long *pl);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DefinedSize )( 
            ADOField * This,
            /* [retval][out] */ ADO_LONGPTR *pl);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            ADOField * This,
            /* [retval][out] */ BSTR *pbstr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            ADOField * This,
            /* [retval][out] */ DataTypeEnum *pDataType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            ADOField * This,
            /* [retval][out] */ VARIANT *pvar);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Value )( 
            ADOField * This,
            /* [in] */ VARIANT Val);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Precision )( 
            ADOField * This,
            /* [retval][out] */ BYTE *pbPrecision);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NumericScale )( 
            ADOField * This,
            /* [retval][out] */ BYTE *pbNumericScale);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AppendChunk )( 
            ADOField * This,
            /* [in] */ VARIANT Data);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetChunk )( 
            ADOField * This,
            /* [in] */ long Length,
            /* [retval][out] */ VARIANT *pvar);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OriginalValue )( 
            ADOField * This,
            /* [retval][out] */ VARIANT *pvar);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UnderlyingValue )( 
            ADOField * This,
            /* [retval][out] */ VARIANT *pvar);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DataFormat )( 
            ADOField * This,
            /* [retval][out] */ IUnknown **ppiDF);
        
        /* [propputref][id] */ HRESULT ( STDMETHODCALLTYPE *putref_DataFormat )( 
            ADOField * This,
            /* [in] */ IUnknown *piDF);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Precision )( 
            ADOField * This,
            /* [in] */ BYTE bPrecision);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_NumericScale )( 
            ADOField * This,
            /* [in] */ BYTE bScale);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Type )( 
            ADOField * This,
            /* [in] */ DataTypeEnum DataType);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DefinedSize )( 
            ADOField * This,
            /* [in] */ ADO_LONGPTR lSize);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Attributes )( 
            ADOField * This,
            /* [in] */ long lAttributes);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Status )( 
            ADOField * This,
            /* [retval][out] */ long *pFStatus);
        
        END_INTERFACE
    } FieldVtbl;
    interface Field
    {
        CONST_VTBL struct FieldVtbl *lpVtbl;
    };
    
#ifdef COBJMACROS
#define Field_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)
#define Field_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)
#define Field_Release(This)	\
    (This)->lpVtbl -> Release(This)
#define Field_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)
#define Field_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define Field_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define Field_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
#define Field_get_Properties(This,ppvObject)	\
    (This)->lpVtbl -> get_Properties(This,ppvObject)
#define Field_get_ActualSize(This,pl)	\
    (This)->lpVtbl -> get_ActualSize(This,pl)
#define Field_get_Attributes(This,pl)	\
    (This)->lpVtbl -> get_Attributes(This,pl)
#define Field_get_DefinedSize(This,pl)	\
    (This)->lpVtbl -> get_DefinedSize(This,pl)
#define Field_get_Name(This,pbstr)	\
    (This)->lpVtbl -> get_Name(This,pbstr)
#define Field_get_Type(This,pDataType)	\
    (This)->lpVtbl -> get_Type(This,pDataType)
#define Field_get_Value(This,pvar)	\
    (This)->lpVtbl -> get_Value(This,pvar)
#define Field_put_Value(This,Val)	\
    (This)->lpVtbl -> put_Value(This,Val)
#define Field_get_Precision(This,pbPrecision)	\
    (This)->lpVtbl -> get_Precision(This,pbPrecision)
#define Field_get_NumericScale(This,pbNumericScale)	\
    (This)->lpVtbl -> get_NumericScale(This,pbNumericScale)
#define Field_AppendChunk(This,Data)	\
    (This)->lpVtbl -> AppendChunk(This,Data)
#define Field_GetChunk(This,Length,pvar)	\
    (This)->lpVtbl -> GetChunk(This,Length,pvar)
#define Field_get_OriginalValue(This,pvar)	\
    (This)->lpVtbl -> get_OriginalValue(This,pvar)
#define Field_get_UnderlyingValue(This,pvar)	\
    (This)->lpVtbl -> get_UnderlyingValue(This,pvar)
#define Field_get_DataFormat(This,ppiDF)	\
    (This)->lpVtbl -> get_DataFormat(This,ppiDF)
#define Field_putref_DataFormat(This,piDF)	\
    (This)->lpVtbl -> putref_DataFormat(This,piDF)
#define Field_put_Precision(This,bPrecision)	\
    (This)->lpVtbl -> put_Precision(This,bPrecision)
#define Field_put_NumericScale(This,bScale)	\
    (This)->lpVtbl -> put_NumericScale(This,bScale)
#define Field_put_Type(This,DataType)	\
    (This)->lpVtbl -> put_Type(This,DataType)
#define Field_put_DefinedSize(This,lSize)	\
    (This)->lpVtbl -> put_DefinedSize(This,lSize)
#define Field_put_Attributes(This,lAttributes)	\
    (This)->lpVtbl -> put_Attributes(This,lAttributes)
#define Field_get_Status(This,pFStatus)	\
    (This)->lpVtbl -> get_Status(This,pFStatus)
#endif /* COBJMACROS */
#endif 	/* C style interface */
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE Field_get_Status_Proxy( 
    ADOField * This,
    /* [retval][out] */ long *pFStatus);
void __RPC_STUB Field_get_Status_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
#endif 	/* __Field_INTERFACE_DEFINED__ */
#ifndef __Fields15_INTERFACE_DEFINED__
#define __Fields15_INTERFACE_DEFINED__
/* interface Fields15 */
/* [object][helpcontext][uuid][hidden][nonextensible][dual] */ 
EXTERN_C const IID IID_Fields15;
#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00000506-0000-0010-8000-00AA006D2EA4")
    Fields15 : public _ADOCollection
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ ADOField **ppvObject) = 0;
        
    };
    
#else 	/* C style interface */
    typedef struct Fields15Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Fields15 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Fields15 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Fields15 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Fields15 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Fields15 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Fields15 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Fields15 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][helpcontext][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            Fields15 * This,
            /* [retval][out] */ long *c);
        
        /* [id][restricted] */ HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            Fields15 * This,
            /* [retval][out] */ IUnknown **ppvObject);
        
        /* [id][helpcontext] */ HRESULT ( STDMETHODCALLTYPE *Refresh )( 
            Fields15 * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            Fields15 * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ ADOField **ppvObject);
        
        END_INTERFACE
    } Fields15Vtbl;
    interface Fields15
    {
        CONST_VTBL struct Fields15Vtbl *lpVtbl;
    };
    
#ifdef COBJMACROS
#define Fields15_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)
#define Fields15_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)
#define Fields15_Release(This)	\
    (This)->lpVtbl -> Release(This)
#define Fields15_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)
#define Fields15_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define Fields15_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define Fields15_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
#define Fields15_get_Count(This,c)	\
    (This)->lpVtbl -> get_Count(This,c)
#define Fields15__NewEnum(This,ppvObject)	\
    (This)->lpVtbl -> _NewEnum(This,ppvObject)
#define Fields15_Refresh(This)	\
    (This)->lpVtbl -> Refresh(This)
#define Fields15_get_Item(This,Index,ppvObject)	\
    (This)->lpVtbl -> get_Item(This,Index,ppvObject)
#endif /* COBJMACROS */
#endif 	/* C style interface */
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE Fields15_get_Item_Proxy( 
    Fields15 * This,
    /* [in] */ VARIANT Index,
    /* [retval][out] */ ADOField **ppvObject);
void __RPC_STUB Fields15_get_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
#endif 	/* __Fields15_INTERFACE_DEFINED__ */
#ifndef __Fields20_INTERFACE_DEFINED__
#define __Fields20_INTERFACE_DEFINED__
/* interface Fields20 */
/* [object][helpcontext][uuid][hidden][nonextensible][dual] */ 
EXTERN_C const IID IID_Fields20;
#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0000054D-0000-0010-8000-00AA006D2EA4")
    Fields20 : public Fields15
    {
    public:
        virtual /* [hidden] */ HRESULT STDMETHODCALLTYPE _Append( 
            /* [in] */ BSTR Name,
            /* [in] */ DataTypeEnum Type,
            /* [defaultvalue][in] */ ADO_LONGPTR DefinedSize = 0,
            /* [defaultvalue][in] */ FieldAttributeEnum Attrib = adFldUnspecified) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( 
            /* [in] */ VARIANT Index) = 0;
        
    };
    
#else 	/* C style interface */
    typedef struct Fields20Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Fields20 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Fields20 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Fields20 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Fields20 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Fields20 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Fields20 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Fields20 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][helpcontext][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            Fields20 * This,
            /* [retval][out] */ long *c);
        
        /* [id][restricted] */ HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            Fields20 * This,
            /* [retval][out] */ IUnknown **ppvObject);
        
        /* [id][helpcontext] */ HRESULT ( STDMETHODCALLTYPE *Refresh )( 
            Fields20 * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            Fields20 * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ ADOField **ppvObject);
        
        /* [hidden] */ HRESULT ( STDMETHODCALLTYPE *_Append )( 
            Fields20 * This,
            /* [in] */ BSTR Name,
            /* [in] */ DataTypeEnum Type,
            /* [defaultvalue][in] */ ADO_LONGPTR DefinedSize,
            /* [defaultvalue][in] */ FieldAttributeEnum Attrib);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            Fields20 * This,
            /* [in] */ VARIANT Index);
        
        END_INTERFACE
    } Fields20Vtbl;
    interface Fields20
    {
        CONST_VTBL struct Fields20Vtbl *lpVtbl;
    };
    
#ifdef COBJMACROS
#define Fields20_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)
#define Fields20_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)
#define Fields20_Release(This)	\
    (This)->lpVtbl -> Release(This)
#define Fields20_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)
#define Fields20_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define Fields20_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define Fields20_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
#define Fields20_get_Count(This,c)	\
    (This)->lpVtbl -> get_Count(This,c)
#define Fields20__NewEnum(This,ppvObject)	\
    (This)->lpVtbl -> _NewEnum(This,ppvObject)
#define Fields20_Refresh(This)	\
    (This)->lpVtbl -> Refresh(This)
#define Fields20_get_Item(This,Index,ppvObject)	\
    (This)->lpVtbl -> get_Item(This,Index,ppvObject)
#define Fields20__Append(This,Name,Type,DefinedSize,Attrib)	\
    (This)->lpVtbl -> _Append(This,Name,Type,DefinedSize,Attrib)
#define Fields20_Delete(This,Index)	\
    (This)->lpVtbl -> Delete(This,Index)
#endif /* COBJMACROS */
#endif 	/* C style interface */
/* [hidden] */ HRESULT STDMETHODCALLTYPE Fields20__Append_Proxy( 
    Fields20 * This,
    /* [in] */ BSTR Name,
    /* [in] */ DataTypeEnum Type,
    /* [defaultvalue][in] */ ADO_LONGPTR DefinedSize,
    /* [defaultvalue][in] */ FieldAttributeEnum Attrib);
void __RPC_STUB Fields20__Append_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Fields20_Delete_Proxy( 
    Fields20 * This,
    /* [in] */ VARIANT Index);
void __RPC_STUB Fields20_Delete_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
#endif 	/* __Fields20_INTERFACE_DEFINED__ */
#ifndef __Fields_INTERFACE_DEFINED__
#define __Fields_INTERFACE_DEFINED__
/* interface ADOFields */
/* [object][helpcontext][uuid][nonextensible][dual] */ 
EXTERN_C const IID IID_Fields;
#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00000564-0000-0010-8000-00AA006D2EA4")
    ADOFields : public Fields20
    {
    public:
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ BSTR Name,
            /* [in] */ DataTypeEnum Type,
            /* [defaultvalue][in] */ ADO_LONGPTR DefinedSize,
            /* [defaultvalue][in] */ FieldAttributeEnum Attrib,
            /* [optional][in] */ VARIANT FieldValue) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Update( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Resync( 
            /* [defaultvalue][in] */ ResyncEnum ResyncValues = adResyncAllValues) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE CancelUpdate( void) = 0;
        
    };
    
#else 	/* C style interface */
    typedef struct FieldsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ADOFields * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ADOFields * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ADOFields * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ADOFields * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ADOFields * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ADOFields * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ADOFields * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][helpcontext][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            ADOFields * This,
            /* [retval][out] */ long *c);
        
        /* [id][restricted] */ HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            ADOFields * This,
            /* [retval][out] */ IUnknown **ppvObject);
        
        /* [id][helpcontext] */ HRESULT ( STDMETHODCALLTYPE *Refresh )( 
            ADOFields * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            ADOFields * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ ADOField **ppvObject);
        
        /* [hidden] */ HRESULT ( STDMETHODCALLTYPE *_Append )( 
            ADOFields * This,
            /* [in] */ BSTR Name,
            /* [in] */ DataTypeEnum Type,
            /* [defaultvalue][in] */ ADO_LONGPTR DefinedSize,
            /* [defaultvalue][in] */ FieldAttributeEnum Attrib);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            ADOFields * This,
            /* [in] */ VARIANT Index);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Append )( 
            ADOFields * This,
            /* [in] */ BSTR Name,
            /* [in] */ DataTypeEnum Type,
            /* [defaultvalue][in] */ ADO_LONGPTR DefinedSize,
            /* [defaultvalue][in] */ FieldAttributeEnum Attrib,
            /* [optional][in] */ VARIANT FieldValue);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            ADOFields * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Resync )( 
            ADOFields * This,
            /* [defaultvalue][in] */ ResyncEnum ResyncValues);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CancelUpdate )( 
            ADOFields * This);
        
        END_INTERFACE
    } FieldsVtbl;
    interface Fields
    {
        CONST_VTBL struct FieldsVtbl *lpVtbl;
    };
    
#ifdef COBJMACROS
#define Fields_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)
#define Fields_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)
#define Fields_Release(This)	\
    (This)->lpVtbl -> Release(This)
#define Fields_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)
#define Fields_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define Fields_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define Fields_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
#define Fields_get_Count(This,c)	\
    (This)->lpVtbl -> get_Count(This,c)
#define Fields__NewEnum(This,ppvObject)	\
    (This)->lpVtbl -> _NewEnum(This,ppvObject)
#define Fields_Refresh(This)	\
    (This)->lpVtbl -> Refresh(This)
#define Fields_get_Item(This,Index,ppvObject)	\
    (This)->lpVtbl -> get_Item(This,Index,ppvObject)
#define Fields__Append(This,Name,Type,DefinedSize,Attrib)	\
    (This)->lpVtbl -> _Append(This,Name,Type,DefinedSize,Attrib)
#define Fields_Delete(This,Index)	\
    (This)->lpVtbl -> Delete(This,Index)
#define Fields_Append(This,Name,Type,DefinedSize,Attrib,FieldValue)	\
    (This)->lpVtbl -> Append(This,Name,Type,DefinedSize,Attrib,FieldValue)
#define Fields_Update(This)	\
    (This)->lpVtbl -> Update(This)
#define Fields_Resync(This,ResyncValues)	\
    (This)->lpVtbl -> Resync(This,ResyncValues)
#define Fields_CancelUpdate(This)	\
    (This)->lpVtbl -> CancelUpdate(This)
#endif /* COBJMACROS */
#endif 	/* C style interface */
/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Fields_Append_Proxy( 
    ADOFields * This,
    /* [in] */ BSTR Name,
    /* [in] */ DataTypeEnum Type,
    /* [defaultvalue][in] */ ADO_LONGPTR DefinedSize,
    /* [defaultvalue][in] */ FieldAttributeEnum Attrib,
    /* [optional][in] */ VARIANT FieldValue);
void __RPC_STUB Fields_Append_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Fields_Update_Proxy( 
    ADOFields * This);
void __RPC_STUB Fields_Update_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Fields_Resync_Proxy( 
    ADOFields * This,
    /* [defaultvalue][in] */ ResyncEnum ResyncValues);
void __RPC_STUB Fields_Resync_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Fields_CancelUpdate_Proxy( 
    ADOFields * This);
void __RPC_STUB Fields_CancelUpdate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
#endif 	/* __Fields_INTERFACE_DEFINED__ */
#ifndef ___Parameter_INTERFACE_DEFINED__
#define ___Parameter_INTERFACE_DEFINED__
/* interface _ADOParameter */
/* [object][helpcontext][uuid][nonextensible][dual] */ 
EXTERN_C const IID IID__Parameter;
#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0000050C-0000-0010-8000-00AA006D2EA4")
    _ADOParameter : public _ADO
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pbstr) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR bstr) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Value( 
            /* [retval][out] */ VARIANT *pvar) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Value( 
            /* [in] */ VARIANT val) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ DataTypeEnum *psDataType) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Type( 
            /* [in] */ DataTypeEnum sDataType) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Direction( 
            /* [in] */ ParameterDirectionEnum lParmDirection) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Direction( 
            /* [retval][out] */ ParameterDirectionEnum *plParmDirection) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Precision( 
            /* [in] */ BYTE bPrecision) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Precision( 
            /* [retval][out] */ BYTE *pbPrecision) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_NumericScale( 
            /* [in] */ BYTE bScale) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_NumericScale( 
            /* [retval][out] */ BYTE *pbScale) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Size( 
            /* [in] */ ADO_LONGPTR l) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ ADO_LONGPTR *pl) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE AppendChunk( 
            /* [in] */ VARIANT Val) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Attributes( 
            /* [retval][out] */ LONG *plParmAttribs) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Attributes( 
            /* [in] */ LONG lParmAttribs) = 0;
        
    };
    
#else 	/* C style interface */
    typedef struct _ParameterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ADOParameter * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ADOParameter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ADOParameter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ADOParameter * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ADOParameter * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ADOParameter * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ADOParameter * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Properties )( 
            _ADOParameter * This,
            /* [retval][out] */ ADOProperties **ppvObject);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            _ADOParameter * This,
            /* [retval][out] */ BSTR *pbstr);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            _ADOParameter * This,
            /* [in] */ BSTR bstr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            _ADOParameter * This,
            /* [retval][out] */ VARIANT *pvar);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Value )( 
            _ADOParameter * This,
            /* [in] */ VARIANT val);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            _ADOParameter * This,
            /* [retval][out] */ DataTypeEnum *psDataType);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Type )( 
            _ADOParameter * This,
            /* [in] */ DataTypeEnum sDataType);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Direction )( 
            _ADOParameter * This,
            /* [in] */ ParameterDirectionEnum lParmDirection);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Direction )( 
            _ADOParameter * This,
            /* [retval][out] */ ParameterDirectionEnum *plParmDirection);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Precision )( 
            _ADOParameter * This,
            /* [in] */ BYTE bPrecision);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Precision )( 
            _ADOParameter * This,
            /* [retval][out] */ BYTE *pbPrecision);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_NumericScale )( 
            _ADOParameter * This,
            /* [in] */ BYTE bScale);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NumericScale )( 
            _ADOParameter * This,
            /* [retval][out] */ BYTE *pbScale);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Size )( 
            _ADOParameter * This,
            /* [in] */ ADO_LONGPTR l);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            _ADOParameter * This,
            /* [retval][out] */ ADO_LONGPTR *pl);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AppendChunk )( 
            _ADOParameter * This,
            /* [in] */ VARIANT Val);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Attributes )( 
            _ADOParameter * This,
            /* [retval][out] */ LONG *plParmAttribs);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Attributes )( 
            _ADOParameter * This,
            /* [in] */ LONG lParmAttribs);
        
        END_INTERFACE
    } _ParameterVtbl;
    interface _Parameter
    {
        CONST_VTBL struct _ParameterVtbl *lpVtbl;
    };
    
#ifdef COBJMACROS
#define _Parameter_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)
#define _Parameter_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)
#define _Parameter_Release(This)	\
    (This)->lpVtbl -> Release(This)
#define _Parameter_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)
#define _Parameter_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define _Parameter_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define _Parameter_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
#define _Parameter_get_Properties(This,ppvObject)	\
    (This)->lpVtbl -> get_Properties(This,ppvObject)
#define _Parameter_get_Name(This,pbstr)	\
    (This)->lpVtbl -> get_Name(This,pbstr)
#define _Parameter_put_Name(This,bstr)	\
    (This)->lpVtbl -> put_Name(This,bstr)
#define _Parameter_get_Value(This,pvar)	\
    (This)->lpVtbl -> get_Value(This,pvar)
#define _Parameter_put_Value(This,val)	\
    (This)->lpVtbl -> put_Value(This,val)
#define _Parameter_get_Type(This,psDataType)	\
    (This)->lpVtbl -> get_Type(This,psDataType)
#define _Parameter_put_Type(This,sDataType)	\
    (This)->lpVtbl -> put_Type(This,sDataType)
#define _Parameter_put_Direction(This,lParmDirection)	\
    (This)->lpVtbl -> put_Direction(This,lParmDirection)
#define _Parameter_get_Direction(This,plParmDirection)	\
    (This)->lpVtbl -> get_Direction(This,plParmDirection)
#define _Parameter_put_Precision(This,bPrecision)	\
    (This)->lpVtbl -> put_Precision(This,bPrecision)
#define _Parameter_get_Precision(This,pbPrecision)	\
    (This)->lpVtbl -> get_Precision(This,pbPrecision)
#define _Parameter_put_NumericScale(This,bScale)	\
    (This)->lpVtbl -> put_NumericScale(This,bScale)
#define _Parameter_get_NumericScale(This,pbScale)	\
    (This)->lpVtbl -> get_NumericScale(This,pbScale)
#define _Parameter_put_Size(This,l)	\
    (This)->lpVtbl -> put_Size(This,l)
#define _Parameter_get_Size(This,pl)	\
    (This)->lpVtbl -> get_Size(This,pl)
#define _Parameter_AppendChunk(This,Val)	\
    (This)->lpVtbl -> AppendChunk(This,Val)
#define _Parameter_get_Attributes(This,plParmAttribs)	\
    (This)->lpVtbl -> get_Attributes(This,plParmAttribs)
#define _Parameter_put_Attributes(This,lParmAttribs)	\
    (This)->lpVtbl -> put_Attributes(This,lParmAttribs)
#endif /* COBJMACROS */
#endif 	/* C style interface */
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Parameter_get_Name_Proxy( 
    _ADOParameter * This,
    /* [retval][out] */ BSTR *pbstr);
void __RPC_STUB _Parameter_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Parameter_put_Name_Proxy( 
    _ADOParameter * This,
    /* [in] */ BSTR bstr);
void __RPC_STUB _Parameter_put_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Parameter_get_Value_Proxy( 
    _ADOParameter * This,
    /* [retval][out] */ VARIANT *pvar);
void __RPC_STUB _Parameter_get_Value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Parameter_put_Value_Proxy( 
    _ADOParameter * This,
    /* [in] */ VARIANT val);
void __RPC_STUB _Parameter_put_Value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Parameter_get_Type_Proxy( 
    _ADOParameter * This,
    /* [retval][out] */ DataTypeEnum *psDataType);
void __RPC_STUB _Parameter_get_Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Parameter_put_Type_Proxy( 
    _ADOParameter * This,
    /* [in] */ DataTypeEnum sDataType);
void __RPC_STUB _Parameter_put_Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Parameter_put_Direction_Proxy( 
    _ADOParameter * This,
    /* [in] */ ParameterDirectionEnum lParmDirection);
void __RPC_STUB _Parameter_put_Direction_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Parameter_get_Direction_Proxy( 
    _ADOParameter * This,
    /* [retval][out] */ ParameterDirectionEnum *plParmDirection);
void __RPC_STUB _Parameter_get_Direction_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Parameter_put_Precision_Proxy( 
    _ADOParameter * This,
    /* [in] */ BYTE bPrecision);
void __RPC_STUB _Parameter_put_Precision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Parameter_get_Precision_Proxy( 
    _ADOParameter * This,
    /* [retval][out] */ BYTE *pbPrecision);
void __RPC_STUB _Parameter_get_Precision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Parameter_put_NumericScale_Proxy( 
    _ADOParameter * This,
    /* [in] */ BYTE bScale);
void __RPC_STUB _Parameter_put_NumericScale_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Parameter_get_NumericScale_Proxy( 
    _ADOParameter * This,
    /* [retval][out] */ BYTE *pbScale);
void __RPC_STUB _Parameter_get_NumericScale_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Parameter_put_Size_Proxy( 
    _ADOParameter * This,
    /* [in] */ ADO_LONGPTR l);
void __RPC_STUB _Parameter_put_Size_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Parameter_get_Size_Proxy( 
    _ADOParameter * This,
    /* [retval][out] */ ADO_LONGPTR *pl);
void __RPC_STUB _Parameter_get_Size_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Parameter_AppendChunk_Proxy( 
    _ADOParameter * This,
    /* [in] */ VARIANT Val);
void __RPC_STUB _Parameter_AppendChunk_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Parameter_get_Attributes_Proxy( 
    _ADOParameter * This,
    /* [retval][out] */ LONG *plParmAttribs);
void __RPC_STUB _Parameter_get_Attributes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Parameter_put_Attributes_Proxy( 
    _ADOParameter * This,
    /* [in] */ LONG lParmAttribs);
void __RPC_STUB _Parameter_put_Attributes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
#endif 	/* ___Parameter_INTERFACE_DEFINED__ */
EXTERN_C const CLSID CLSID_Parameter;
#ifdef __cplusplus
Parameter;
#endif
#ifndef __Parameters_INTERFACE_DEFINED__
#define __Parameters_INTERFACE_DEFINED__
/* interface ADOParameters */
/* [object][helpcontext][uuid][nonextensible][dual] */ 
EXTERN_C const IID IID_Parameters;
#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0000050D-0000-0010-8000-00AA006D2EA4")
    ADOParameters : public _ADODynaCollection
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ _ADOParameter **ppvObject) = 0;
        
    };
    
#else 	/* C style interface */
    typedef struct ParametersVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ADOParameters * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ADOParameters * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ADOParameters * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ADOParameters * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ADOParameters * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ADOParameters * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ADOParameters * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][helpcontext][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            ADOParameters * This,
            /* [retval][out] */ long *c);
        
        /* [id][restricted] */ HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            ADOParameters * This,
            /* [retval][out] */ IUnknown **ppvObject);
        
        /* [id][helpcontext] */ HRESULT ( STDMETHODCALLTYPE *Refresh )( 
            ADOParameters * This);
        
        /* [helpcontext] */ HRESULT ( STDMETHODCALLTYPE *Append )( 
            ADOParameters * This,
            /* [in] */ IDispatch *Object);
        
        /* [helpcontext] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            ADOParameters * This,
            /* [in] */ VARIANT Index);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            ADOParameters * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ _ADOParameter **ppvObject);
        
        END_INTERFACE
    } ParametersVtbl;
    interface Parameters
    {
        CONST_VTBL struct ParametersVtbl *lpVtbl;
    };
    
#ifdef COBJMACROS
#define Parameters_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)
#define Parameters_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)
#define Parameters_Release(This)	\
    (This)->lpVtbl -> Release(This)
#define Parameters_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)
#define Parameters_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define Parameters_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define Parameters_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
#define Parameters_get_Count(This,c)	\
    (This)->lpVtbl -> get_Count(This,c)
#define Parameters__NewEnum(This,ppvObject)	\
    (This)->lpVtbl -> _NewEnum(This,ppvObject)
#define Parameters_Refresh(This)	\
    (This)->lpVtbl -> Refresh(This)
#define Parameters_Append(This,Object)	\
    (This)->lpVtbl -> Append(This,Object)
#define Parameters_Delete(This,Index)	\
    (This)->lpVtbl -> Delete(This,Index)
#define Parameters_get_Item(This,Index,ppvObject)	\
    (This)->lpVtbl -> get_Item(This,Index,ppvObject)
#endif /* COBJMACROS */
#endif 	/* C style interface */
/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE Parameters_get_Item_Proxy( 
    ADOParameters * This,
    /* [in] */ VARIANT Index,
    /* [retval][out] */ _ADOParameter **ppvObject);
void __RPC_STUB Parameters_get_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
#endif 	/* __Parameters_INTERFACE_DEFINED__ */
#ifndef __Property_INTERFACE_DEFINED__
#define __Property_INTERFACE_DEFINED__
/* interface ADOProperty */
/* [object][helpcontext][uuid][nonextensible][dual] */ 
EXTERN_C const IID IID_Property;
#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00000503-0000-0010-8000-00AA006D2EA4")
    ADOProperty : public IDispatch
    {
    public:
        virtual /* [helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Value( 
            /* [retval][out] */ VARIANT *pval) = 0;
        
        virtual /* [helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Value( 
            /* [in] */ VARIANT val) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pbstr) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ DataTypeEnum *ptype) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT STDMETHODCALLTYPE get_Attributes( 
            /* [retval][out] */ long *plAttributes) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT STDMETHODCALLTYPE put_Attributes( 
            /* [in] */ long lAttributes) = 0;
        
    };
    
#else 	/* C style interface */
    typedef struct PropertyVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ADOProperty * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ADOProperty * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ADOProperty * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ADOProperty * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ADOProperty * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ADOProperty * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ADOProperty * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            ADOProperty * This,
            /* [retval][out] */ VARIANT *pval);
        
        /* [helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Value )( 
            ADOProperty * This,
            /* [in] */ VARIANT val);
        
        /* [helpcontext][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            ADOProperty * This,
            /* [retval][out] */ BSTR *pbstr);
        
        /* [helpcontext][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            ADOProperty * This,
            /* [retval][out] */ DataTypeEnum *ptype);
        
        /* [helpcontext][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Attributes )( 
            ADOProperty * This,
            /* [retval][out] */ long *plAttributes);
        
        /* [helpcontext][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Attributes )( 
            ADOProperty * This,
            /* [in] */ long lAttributes);
        
        END_INTERFACE
    } PropertyVtbl;
    interface Property
    {
        CONST_VTBL struct PropertyVtbl *lpVtbl;
    };
    
#ifdef COBJMACROS
#define Property_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)
#define Property_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)
#define Property_Release(This)	\
    (This)->lpVtbl -> Release(This)
#define Property_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)
#define Property_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define Property_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define Property_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
#define Property_get_Value(This,pval)	\
    (This)->lpVtbl -> get_Value(This,pval)
#define Property_put_Value(This,val)	\
    (This)->lpVtbl -> put_Value(This,val)
#define Property_get_Name(This,pbstr)	\
    (This)->lpVtbl -> get_Name(This,pbstr)
#define Property_get_Type(This,ptype)	\
    (This)->lpVtbl -> get_Type(This,ptype)
#define Property_get_Attributes(This,plAttributes)	\
    (This)->lpVtbl -> get_Attributes(This,plAttributes)
#define Property_put_Attributes(This,lAttributes)	\
    (This)->lpVtbl -> put_Attributes(This,lAttributes)
#endif /* COBJMACROS */
#endif 	/* C style interface */
/* [helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE Property_get_Value_Proxy( 
    ADOProperty * This,
    /* [retval][out] */ VARIANT *pval);
void __RPC_STUB Property_get_Value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE Property_put_Value_Proxy( 
    ADOProperty * This,
    /* [in] */ VARIANT val);
void __RPC_STUB Property_put_Value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propget] */ HRESULT STDMETHODCALLTYPE Property_get_Name_Proxy( 
    ADOProperty * This,
    /* [retval][out] */ BSTR *pbstr);
void __RPC_STUB Property_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propget] */ HRESULT STDMETHODCALLTYPE Property_get_Type_Proxy( 
    ADOProperty * This,
    /* [retval][out] */ DataTypeEnum *ptype);
void __RPC_STUB Property_get_Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propget] */ HRESULT STDMETHODCALLTYPE Property_get_Attributes_Proxy( 
    ADOProperty * This,
    /* [retval][out] */ long *plAttributes);
void __RPC_STUB Property_get_Attributes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
/* [helpcontext][propput] */ HRESULT STDMETHODCALLTYPE Property_put_Attributes_Proxy( 
    ADOProperty * This,
    /* [in] */ long lAttributes);
void __RPC_STUB Property_put_Attributes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
#endif 	/* __Property_INTERFACE_DEFINED__ */
#ifndef __Properties_INTERFACE_DEFINED__
#define __Properties_INTERFACE_DEFINED__
/* interface ADOProperties */
/* [object][helpcontext][uuid][nonextensible][dual] */ 
EXTERN_C const IID IID_Properties;
#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00000504-0000-0010-8000-00AA006D2EA4")
    ADOProperties : public _ADOCollection
    {
    public:
        virtual /* [helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ ADOProperty **ppvObject) = 0;
        
    };
    
#else 	/* C style interface */
    typedef struct PropertiesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ADOProperties * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ADOProperties * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ADOProperties * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ADOProperties * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ADOProperties * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ADOProperties * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ADOProperties * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][helpcontext][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            ADOProperties * This,
            /* [retval][out] */ long *c);
        
        /* [id][restricted] */ HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            ADOProperties * This,
            /* [retval][out] */ IUnknown **ppvObject);
        
        /* [id][helpcontext] */ HRESULT ( STDMETHODCALLTYPE *Refresh )( 
            ADOProperties * This);
        
        /* [helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            ADOProperties * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ ADOProperty **ppvObject);
        
        END_INTERFACE
    } PropertiesVtbl;
    interface Properties
    {
        CONST_VTBL struct PropertiesVtbl *lpVtbl;
    };
    
#ifdef COBJMACROS
#define Properties_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)
#define Properties_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)
#define Properties_Release(This)	\
    (This)->lpVtbl -> Release(This)
#define Properties_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)
#define Properties_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define Properties_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define Properties_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
#define Properties_get_Count(This,c)	\
    (This)->lpVtbl -> get_Count(This,c)
#define Properties__NewEnum(This,ppvObject)	\
    (This)->lpVtbl -> _NewEnum(This,ppvObject)
#define Properties_Refresh(This)	\
    (This)->lpVtbl -> Refresh(This)
#define Properties_get_Item(This,Index,ppvObject)	\
    (This)->lpVtbl -> get_Item(This,Index,ppvObject)
#endif /* COBJMACROS */
#endif 	/* C style interface */
/* [helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE Properties_get_Item_Proxy( 
    ADOProperties * This,
    /* [in] */ VARIANT Index,
    /* [retval][out] */ ADOProperty **ppvObject);
void __RPC_STUB Properties_get_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);
#endif 	/* __Properties_INTERFACE_DEFINED__ */
#endif /* __ADODB_LIBRARY_DEFINED__ */
/* interface __MIDL_itf_m_bobj_0145 */
/* [local] */ 
extern RPC_IF_HANDLE __MIDL_itf_m_bobj_0145_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_m_bobj_0145_v0_0_s_ifspec;
/* Additional Prototypes for ALL interfaces */
/* end of Additional Prototypes */
#ifdef __cplusplus
}
#endif
#endif
#define ADOCommand _ADOCommand
#define ADORecordset _ADORecordset
#define ADOTransaction _ADOTransaction
#define ADOParameter _ADOParameter
#define ADOConnection _ADOConnection
#define ADOCollection _ADOCollection
#define ADODynaCollection _ADODynaCollection
#define ADORecord _ADORecord
#define ADORecField _ADORecField
#define ADOStream _ADOStream


#endif // _ADOINT_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\vc7addon\devtools\common\win32sdk\include\adoid.h ===
//-----------------------------------------------------------------------------
// File:		adoid.h
//
// Copyright:	Copyright (c) Microsoft Corporation 
//
// Contents:	ADO Guids.	
//-----------------------------------------------------------------------------

#ifndef _ADOID_H_
#define _ADOID_H_
#include "adodef.h"
#include "ADOGuids.h"
#endif // _ADOID_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\vc7addon\devtools\common\win32sdk\include\adoguidpool.h ===
#ifndef INCLUDING_ADOGUIDS
#error Incorrect usage of this include file - cannot be used directly
#endif

// How to assign new GUID:
//
// 1) In this file search for macro RESERVED_GUIDS_BEYOND_THIS_POINT
// 2) Take first reserved GUID in this section and move #ifdef RESERVED_GUIDS_BEYOND_THIS_POINT
//    beyond the guid being newly assigned
// 3) rename all instances of pattern ADO_Reserved_xxx (there are 5 of them including the comment)
//    with the desired GUID name
// 4) for midl, usage is typically:  uuid(ADO_Reserved_1)
//    for C++: ADO_Reserved_1
//
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Guids from adoid.h follow:

#define  MAXAVAILABLEGUID    0x00000570
#define  MAXAVAILABLEGUIDALL 0x0000057F

#define  LIBID_ADO		LIBID_ADO26
#define  LIBID_ADOR		LIBID_ADOR20
#define  LIBID_CADO10	LIBID_ADO20
#define  LIBID_CADOR10	LIBID_ADOR20

// LIBID_ADO20
#define  LIBID_ADO20 GUID_BUILDER(LIBID_ADO20,00000200,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
LIBID_ADO20;
#undef LIBID_ADO20
#endif // IMMEDIATE_GUID_USE

// LIBID_ADO21
#define  LIBID_ADO21 GUID_BUILDER(LIBID_ADO21,00000201,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
LIBID_ADO21;
#undef LIBID_ADO21
#endif // IMMEDIATE_GUID_USE

// LIBID_ADOR20
#define  LIBID_ADOR20 GUID_BUILDER(LIBID_ADOR20,00000300,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
LIBID_ADOR20;
#undef LIBID_ADOR20
#endif // IMMEDIATE_GUID_USE

// LIBID_ADO25
#define  LIBID_ADO25 GUID_BUILDER(LIBID_ADO25,00000205,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
LIBID_ADO25;
#undef LIBID_ADO25
#endif // IMMEDIATE_GUID_USE

// LIBID_ADO26
#define  LIBID_ADO26 GUID_BUILDER(LIBID_ADO26,00000206,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
LIBID_ADO26;
#undef LIBID_ADO26
#endif // IMMEDIATE_GUID_USE

// LIBID_ADOR25
#define  LIBID_ADOR25 GUID_BUILDER(LIBID_ADOR25,00000305,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
LIBID_ADOR25;
#undef LIBID_ADOR25
#endif // IMMEDIATE_GUID_USE

// IID_IADOError
#define  IID_IADOError GUID_BUILDER(IID_IADOError,00000500,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_IADOError;
#undef IID_IADOError
#endif // IMMEDIATE_GUID_USE

// IID_IADOErrors
#define  IID_IADOErrors GUID_BUILDER(IID_IADOErrors,00000501,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_IADOErrors;
#undef IID_IADOErrors
#endif // IMMEDIATE_GUID_USE

// IID_IADOProperty
#define  IID_IADOProperty GUID_BUILDER(IID_IADOProperty,00000503,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_IADOProperty;
#undef IID_IADOProperty
#endif // IMMEDIATE_GUID_USE

// IID_IADOProperties
#define  IID_IADOProperties GUID_BUILDER(IID_IADOProperties,00000504,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_IADOProperties;
#undef IID_IADOProperties
#endif // IMMEDIATE_GUID_USE

// CLSID_CADOField
#define  CLSID_CADOField GUID_BUILDER(CLSID_CADOField,0000053A,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
CLSID_CADOField;
#undef CLSID_CADOField
#endif // IMMEDIATE_GUID_USE

// IID_IADOField15
#define  IID_IADOField15 GUID_BUILDER(IID_IADOField15,00000505,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_IADOField15;
#undef IID_IADOField15
#endif // IMMEDIATE_GUID_USE

// IID_IADOField20
#define  IID_IADOField20 GUID_BUILDER(IID_IADOField20,0000054C,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_IADOField20;
#undef IID_IADOField20
#endif // IMMEDIATE_GUID_USE

// IID_IADOField
#define  IID_IADOField GUID_BUILDER(IID_IADOField,00000569,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_IADOField;
#undef IID_IADOField
#endif // IMMEDIATE_GUID_USE

#ifdef _LOCKBYTESUPPORT_

// IID_IADOField25
#define  IID_IADOField25 GUID_BUILDER(IID_IADOField25,00000569,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_IADOField25;
#undef IID_IADOField25
#endif // IMMEDIATE_GUID_USE

// IID_IADOField26
#define  IID_IADOField26 GUID_BUILDER(IID_IADOField26,00000557,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_IADOField26;
#undef IID_IADOField26
#endif // IMMEDIATE_GUID_USE

#endif // _LOCKBYTESUPPORT_

// IID_IADOFields15
#define  IID_IADOFields15 GUID_BUILDER(IID_IADOFields15,00000506,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_IADOFields15;
#undef IID_IADOFields15
#endif // IMMEDIATE_GUID_USE

// IID_IADOFields20
#define  IID_IADOFields20 GUID_BUILDER(IID_IADOFields20,0000054D,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_IADOFields20;
#undef IID_IADOFields20
#endif // IMMEDIATE_GUID_USE

// IID_IADOFields
#define  IID_IADOFields GUID_BUILDER(IID_IADOFields,00000564,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_IADOFields;
#undef IID_IADOFields
#endif // IMMEDIATE_GUID_USE

// CLSID_CADOCommand
#define  CLSID_CADOCommand GUID_BUILDER(CLSID_CADOCommand,00000507,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
CLSID_CADOCommand;
#undef CLSID_CADOCommand
#endif // IMMEDIATE_GUID_USE

// IID_IADOCommand15
#define  IID_IADOCommand15 GUID_BUILDER(IID_IADOCommand15,00000508,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_IADOCommand15;
#undef IID_IADOCommand15
#endif // IMMEDIATE_GUID_USE

// IID_IADOCommand25
#define  IID_IADOCommand25 GUID_BUILDER(IID_IADOCommand25,0000054E,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_IADOCommand25;
#undef IID_IADOCommand25
#endif // IMMEDIATE_GUID_USE

// IID_IADOCommands
#define  IID_IADOCommands GUID_BUILDER(IID_IADOCommands,00000509,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_IADOCommands;
#undef IID_IADOCommands
#endif // IMMEDIATE_GUID_USE

// IID_IADOCommandConstruction
#define  IID_IADOCommandConstruction GUID_BUILDER(IID_IADOCommandConstruction,00000517,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_IADOCommandConstruction;
#undef IID_IADOCommandConstruction
#endif // IMMEDIATE_GUID_USE

// CLSID_CADOParameter
#define  CLSID_CADOParameter GUID_BUILDER(CLSID_CADOParameter,0000050B,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
CLSID_CADOParameter;
#undef CLSID_CADOParameter
#endif // IMMEDIATE_GUID_USE

// IID_IADOParameter
#define  IID_IADOParameter GUID_BUILDER(IID_IADOParameter,0000050C,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_IADOParameter;
#undef IID_IADOParameter
#endif // IMMEDIATE_GUID_USE

// IID_IADOParameters
#define  IID_IADOParameters GUID_BUILDER(IID_IADOParameters,0000050D,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_IADOParameters;
#undef IID_IADOParameters
#endif // IMMEDIATE_GUID_USE

// CLSID_CADORecordset
#define  CLSID_CADORecordset GUID_BUILDER(CLSID_CADORecordset,00000535,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
CLSID_CADORecordset;
#undef CLSID_CADORecordset
#endif // IMMEDIATE_GUID_USE

// IID_IADORecordset15
#define  IID_IADORecordset15 GUID_BUILDER(IID_IADORecordset15,0000050E,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_IADORecordset15;
#undef IID_IADORecordset15
#endif // IMMEDIATE_GUID_USE

// IID_IADORecordset20
#define  IID_IADORecordset20 GUID_BUILDER(IID_IADORecordset20,0000054F,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_IADORecordset20;
#undef IID_IADORecordset20
#endif // IMMEDIATE_GUID_USE

// IID_IADORecordset21
#define  IID_IADORecordset21 GUID_BUILDER(IID_IADORecordset21,00000555,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_IADORecordset21;
#undef IID_IADORecordset21
#endif // IMMEDIATE_GUID_USE

// IID_IADORecordset25
#define  IID_IADORecordset25 GUID_BUILDER(IID_IADORecordset25,00000556,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_IADORecordset25;
#undef IID_IADORecordset25
#endif // IMMEDIATE_GUID_USE

// IID_IADORecordset
#define  IID_IADORecordset GUID_BUILDER(IID_IADORecordset,00000556,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_IADORecordset;
#undef IID_IADORecordset
#endif // IMMEDIATE_GUID_USE

// IID_IADORecordsets
#define  IID_IADORecordsets GUID_BUILDER(IID_IADORecordsets,0000050F,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_IADORecordsets;
#undef IID_IADORecordsets
#endif // IMMEDIATE_GUID_USE

// IID_IADORecordsetConstruction
#define  IID_IADORecordsetConstruction GUID_BUILDER(IID_IADORecordsetConstruction,00000283,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_IADORecordsetConstruction;
#undef IID_IADORecordsetConstruction
#endif // IMMEDIATE_GUID_USE

// IID_IADOCollection
#define  IID_IADOCollection GUID_BUILDER(IID_IADOCollection,00000512,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_IADOCollection;
#undef IID_IADOCollection
#endif // IMMEDIATE_GUID_USE

// IID_IADODynaCollection
#define  IID_IADODynaCollection GUID_BUILDER(IID_IADODynaCollection,00000513,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_IADODynaCollection;
#undef IID_IADODynaCollection
#endif // IMMEDIATE_GUID_USE

// CLSID_CADOConnection
#define  CLSID_CADOConnection GUID_BUILDER(CLSID_CADOConnection,00000514,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
CLSID_CADOConnection;
#undef CLSID_CADOConnection
#endif // IMMEDIATE_GUID_USE

// IID_IADOConnection15
#define  IID_IADOConnection15 GUID_BUILDER(IID_IADOConnection15,00000515,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_IADOConnection15;
#undef IID_IADOConnection15
#endif // IMMEDIATE_GUID_USE

// IID_IADOConnection
#define  IID_IADOConnection GUID_BUILDER(IID_IADOConnection,00000550,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_IADOConnection;
#undef IID_IADOConnection
#endif // IMMEDIATE_GUID_USE

// IID_IADOConnectionConstruction15
#define  IID_IADOConnectionConstruction15 GUID_BUILDER(IID_IADOConnectionConstruction15,00000516,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_IADOConnectionConstruction15;
#undef IID_IADOConnectionConstruction15
#endif // IMMEDIATE_GUID_USE

// IID_IADOConnectionConstruction
#define  IID_IADOConnectionConstruction GUID_BUILDER(IID_IADOConnectionConstruction,00000551,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_IADOConnectionConstruction;
#undef IID_IADOConnectionConstruction
#endif // IMMEDIATE_GUID_USE

// IID_IADOConnections
#define  IID_IADOConnections GUID_BUILDER(IID_IADOConnections,00000518,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_IADOConnections;
#undef IID_IADOConnections
#endif // IMMEDIATE_GUID_USE

// IID_IADORecordsetEvents
#define  IID_IADORecordsetEvents GUID_BUILDER(IID_IADORecordsetEvents,00000266,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_IADORecordsetEvents;
#undef IID_IADORecordsetEvents
#endif // IMMEDIATE_GUID_USE

// IID_IADOConnectionEvents
#define  IID_IADOConnectionEvents GUID_BUILDER(IID_IADOConnectionEvents,00000400,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_IADOConnectionEvents;
#undef IID_IADOConnectionEvents
#endif // IMMEDIATE_GUID_USE

// IID_IADORecordsetEventsVt
#define  IID_IADORecordsetEventsVt GUID_BUILDER(IID_IADORecordsetEventsVt,00000403,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_IADORecordsetEventsVt;
#undef IID_IADORecordsetEventsVt
#endif // IMMEDIATE_GUID_USE

// IID_IADOConnectionEventsVt
#define  IID_IADOConnectionEventsVt GUID_BUILDER(IID_IADOConnectionEventsVt,00000402,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_IADOConnectionEventsVt;
#undef IID_IADOConnectionEventsVt
#endif // IMMEDIATE_GUID_USE

// CLSID_CADORecord
#define  CLSID_CADORecord GUID_BUILDER(CLSID_CADORecord,00000560,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
CLSID_CADORecord;
#undef CLSID_CADORecord
#endif // IMMEDIATE_GUID_USE

// CLSID_CADORecField
#define  CLSID_CADORecField GUID_BUILDER(CLSID_CADORecField,00000561,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
CLSID_CADORecField;
#undef CLSID_CADORecField
#endif // IMMEDIATE_GUID_USE

// IID_IADORecord
#define  IID_IADORecord GUID_BUILDER(IID_IADORecord,00000562,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_IADORecord;
#undef IID_IADORecord
#endif // IMMEDIATE_GUID_USE

// IID_IADORecord25
#define  IID_IADORecord25 GUID_BUILDER(IID_IADORecord25,00000562,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_IADORecord25;
#undef IID_IADORecord25
#endif // IMMEDIATE_GUID_USE

// IID_IADORecord26
#define  IID_IADORecord26 GUID_BUILDER(IID_IADORecord26,00000563,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_IADORecord26;
#undef IID_IADORecord26
#endif // IMMEDIATE_GUID_USE

// IID_IADOStream
#define  IID_IADOStream GUID_BUILDER(IID_IADOStream,00000565,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_IADOStream;
#undef IID_IADOStream
#endif // IMMEDIATE_GUID_USE

// CLSID_CADOStream
#define  CLSID_CADOStream GUID_BUILDER(CLSID_CADOStream,00000566,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
CLSID_CADOStream;
#undef CLSID_CADOStream
#endif // IMMEDIATE_GUID_USE

// IID_IADORecordConstruction
#define  IID_IADORecordConstruction GUID_BUILDER(IID_IADORecordConstruction,00000567,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_IADORecordConstruction;
#undef IID_IADORecordConstruction
#endif // IMMEDIATE_GUID_USE

// IID_IADOStreamConstruction
#define  IID_IADOStreamConstruction GUID_BUILDER(IID_IADOStreamConstruction,00000568,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_IADOStreamConstruction;
#undef IID_IADOStreamConstruction
#endif // IMMEDIATE_GUID_USE

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Guids from adoidall.h follow:

// IID_EnumCursorType
#define  IID_EnumCursorType GUID_BUILDER(IID_EnumCursorType,0000051B,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumCursorType;
#undef IID_EnumCursorType
#endif // IMMEDIATE_GUID_USE

// IID_EnumCursorOption
#define  IID_EnumCursorOption GUID_BUILDER(IID_EnumCursorOption,0000051C,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumCursorOption;
#undef IID_EnumCursorOption
#endif // IMMEDIATE_GUID_USE

// IID_EnumLockType
#define  IID_EnumLockType GUID_BUILDER(IID_EnumLockType,0000051D,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumLockType;
#undef IID_EnumLockType
#endif // IMMEDIATE_GUID_USE

// IID_EnumExecuteOption
#define  IID_EnumExecuteOption GUID_BUILDER(IID_EnumExecuteOption,0000051E,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumExecuteOption;
#undef IID_EnumExecuteOption
#endif // IMMEDIATE_GUID_USE

// IID_EnumDataType
#define  IID_EnumDataType GUID_BUILDER(IID_EnumDataType,0000051F,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumDataType;
#undef IID_EnumDataType
#endif // IMMEDIATE_GUID_USE

// IID_EnumConnectPrompt
#define  IID_EnumConnectPrompt GUID_BUILDER(IID_EnumConnectPrompt,00000520,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumConnectPrompt;
#undef IID_EnumConnectPrompt
#endif // IMMEDIATE_GUID_USE

// IID_EnumConnectMode
#define  IID_EnumConnectMode GUID_BUILDER(IID_EnumConnectMode,00000521,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumConnectMode;
#undef IID_EnumConnectMode
#endif // IMMEDIATE_GUID_USE

// IID_EnumPrepareOption
#define  IID_EnumPrepareOption GUID_BUILDER(IID_EnumPrepareOption,00000522,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumPrepareOption;
#undef IID_EnumPrepareOption
#endif // IMMEDIATE_GUID_USE

// IID_EnumIsolationLevel
#define  IID_EnumIsolationLevel GUID_BUILDER(IID_EnumIsolationLevel,00000523,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumIsolationLevel;
#undef IID_EnumIsolationLevel
#endif // IMMEDIATE_GUID_USE

// IID_EnumXactAttribute
#define  IID_EnumXactAttribute GUID_BUILDER(IID_EnumXactAttribute,00000524,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumXactAttribute;
#undef IID_EnumXactAttribute
#endif // IMMEDIATE_GUID_USE

// IID_EnumFieldAttribute
#define  IID_EnumFieldAttribute GUID_BUILDER(IID_EnumFieldAttribute,00000525,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumFieldAttribute;
#undef IID_EnumFieldAttribute
#endif // IMMEDIATE_GUID_USE

// IID_EnumEditMode
#define  IID_EnumEditMode GUID_BUILDER(IID_EnumEditMode,00000526,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumEditMode;
#undef IID_EnumEditMode
#endif // IMMEDIATE_GUID_USE

// IID_EnumRecordStatus
#define  IID_EnumRecordStatus GUID_BUILDER(IID_EnumRecordStatus,00000527,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumRecordStatus;
#undef IID_EnumRecordStatus
#endif // IMMEDIATE_GUID_USE

// IID_EnumPosition
#define  IID_EnumPosition GUID_BUILDER(IID_EnumPosition,00000528,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumPosition;
#undef IID_EnumPosition
#endif // IMMEDIATE_GUID_USE

// IID_EnumPropertyAttributes
#define  IID_EnumPropertyAttributes GUID_BUILDER(IID_EnumPropertyAttributes,00000529,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumPropertyAttributes;
#undef IID_EnumPropertyAttributes
#endif // IMMEDIATE_GUID_USE

// IID_EnumErrorValue
#define  IID_EnumErrorValue GUID_BUILDER(IID_EnumErrorValue,0000052A,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumErrorValue;
#undef IID_EnumErrorValue
#endif // IMMEDIATE_GUID_USE

// IID_EnumParameterAttributes
#define  IID_EnumParameterAttributes GUID_BUILDER(IID_EnumParameterAttributes,0000052B,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumParameterAttributes;
#undef IID_EnumParameterAttributes
#endif // IMMEDIATE_GUID_USE

// IID_EnumParameterDirection
#define  IID_EnumParameterDirection GUID_BUILDER(IID_EnumParameterDirection,0000052C,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumParameterDirection;
#undef IID_EnumParameterDirection
#endif // IMMEDIATE_GUID_USE

// IID_EnumFilterCriteria
#define  IID_EnumFilterCriteria GUID_BUILDER(IID_EnumFilterCriteria,0000052D,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumFilterCriteria;
#undef IID_EnumFilterCriteria
#endif // IMMEDIATE_GUID_USE

// IID_EnumCommandType
#define  IID_EnumCommandType GUID_BUILDER(IID_EnumCommandType,0000052E,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumCommandType;
#undef IID_EnumCommandType
#endif // IMMEDIATE_GUID_USE

// IID_EnumCursorLocation
#define  IID_EnumCursorLocation GUID_BUILDER(IID_EnumCursorLocation,0000052F,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumCursorLocation;
#undef IID_EnumCursorLocation
#endif // IMMEDIATE_GUID_USE

// IID_EnumEventStatus
#define  IID_EnumEventStatus GUID_BUILDER(IID_EnumEventStatus,00000530,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumEventStatus;
#undef IID_EnumEventStatus
#endif // IMMEDIATE_GUID_USE

// IID_EnumEventReason
#define  IID_EnumEventReason GUID_BUILDER(IID_EnumEventReason,00000531,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumEventReason;
#undef IID_EnumEventReason
#endif // IMMEDIATE_GUID_USE

// IID_EnumObjectState
#define  IID_EnumObjectState GUID_BUILDER(IID_EnumObjectState,00000532,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumObjectState;
#undef IID_EnumObjectState
#endif // IMMEDIATE_GUID_USE

// IID_EnumSchema
#define  IID_EnumSchema GUID_BUILDER(IID_EnumSchema,00000533,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumSchema;
#undef IID_EnumSchema
#endif // IMMEDIATE_GUID_USE

// IID_EnumMarshalOptions
#define  IID_EnumMarshalOptions GUID_BUILDER(IID_EnumMarshalOptions,00000540,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumMarshalOptions;
#undef IID_EnumMarshalOptions
#endif // IMMEDIATE_GUID_USE

// IID_EnumConnectOption
#define  IID_EnumConnectOption GUID_BUILDER(IID_EnumConnectOption,00000541,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumConnectOption;
#undef IID_EnumConnectOption
#endif // IMMEDIATE_GUID_USE

// IID_EnumGetRowsOption
#define  IID_EnumGetRowsOption GUID_BUILDER(IID_EnumGetRowsOption,00000542,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumGetRowsOption;
#undef IID_EnumGetRowsOption
#endif // IMMEDIATE_GUID_USE

// IID_EnumAffect
#define  IID_EnumAffect GUID_BUILDER(IID_EnumAffect,00000543,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumAffect;
#undef IID_EnumAffect
#endif // IMMEDIATE_GUID_USE

// IID_EnumResync
#define  IID_EnumResync GUID_BUILDER(IID_EnumResync,00000544,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumResync;
#undef IID_EnumResync
#endif // IMMEDIATE_GUID_USE

// IID_EnumCompare
#define  IID_EnumCompare GUID_BUILDER(IID_EnumCompare,00000545,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumCompare;
#undef IID_EnumCompare
#endif // IMMEDIATE_GUID_USE

// IID_EnumFilterGroup
#define  IID_EnumFilterGroup GUID_BUILDER(IID_EnumFilterGroup,00000546,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumFilterGroup;
#undef IID_EnumFilterGroup
#endif // IMMEDIATE_GUID_USE

// IID_EnumSearchDirection
#define  IID_EnumSearchDirection GUID_BUILDER(IID_EnumSearchDirection,00000547,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumSearchDirection;
#undef IID_EnumSearchDirection
#endif // IMMEDIATE_GUID_USE

// IID_EnumPersistFormat
#define  IID_EnumPersistFormat GUID_BUILDER(IID_EnumPersistFormat,00000548,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumPersistFormat;
#undef IID_EnumPersistFormat
#endif // IMMEDIATE_GUID_USE

// IID_EnumStringFormat
#define  IID_EnumStringFormat GUID_BUILDER(IID_EnumStringFormat,00000549,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumStringFormat;
#undef IID_EnumStringFormat
#endif // IMMEDIATE_GUID_USE

// IID_EnumRDSUpdateCriteria
#define  IID_EnumRDSUpdateCriteria GUID_BUILDER(IID_EnumRDSUpdateCriteria,0000054A,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumRDSUpdateCriteria;
#undef IID_EnumRDSUpdateCriteria
#endif // IMMEDIATE_GUID_USE

// IID_EnumRDSAsyncThreadPriority
#define  IID_EnumRDSAsyncThreadPriority GUID_BUILDER(IID_EnumRDSAsyncThreadPriority,0000054B,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumRDSAsyncThreadPriority;
#undef IID_EnumRDSAsyncThreadPriority
#endif // IMMEDIATE_GUID_USE

// IID_EnumCEResync
#define  IID_EnumCEResync GUID_BUILDER(IID_EnumCEResync,00000553,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumCEResync;
#undef IID_EnumCEResync
#endif // IMMEDIATE_GUID_USE

// IID_EnumRDSAutoRecalc
#define  IID_EnumRDSAutoRecalc GUID_BUILDER(IID_EnumRDSAutoRecalc,00000554,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumRDSAutoRecalc;
#undef IID_EnumRDSAutoRecalc
#endif // IMMEDIATE_GUID_USE

// IID_EnumSeek
#define  IID_EnumSeek GUID_BUILDER(IID_EnumSeek,00000552,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumSeek;
#undef IID_EnumSeek
#endif // IMMEDIATE_GUID_USE

// IID_IADORecordGroup
#define  IID_IADORecordGroup GUID_BUILDER(IID_IADORecordGroup,00000511,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_IADORecordGroup;
#undef IID_IADORecordGroup
#endif // IMMEDIATE_GUID_USE

// IID_IADOCustomError
#define  IID_IADOCustomError GUID_BUILDER(IID_IADOCustomError,00000519,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_IADOCustomError;
#undef IID_IADOCustomError
#endif // IMMEDIATE_GUID_USE

// CLSID_CADOError
#define  CLSID_CADOError GUID_BUILDER(CLSID_CADOError,00000541,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
CLSID_CADOError;
#undef CLSID_CADOError
#endif // IMMEDIATE_GUID_USE

// IID_IPrivErrors
#define  IID_IPrivErrors GUID_BUILDER(IID_IPrivErrors,00000502,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_IPrivErrors;
#undef IID_IPrivErrors
#endif // IMMEDIATE_GUID_USE

// CLSID_CADOErrorLookup
#define  CLSID_CADOErrorLookup GUID_BUILDER(CLSID_CADOErrorLookup,00000542,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
CLSID_CADOErrorLookup;
#undef CLSID_CADOErrorLookup
#endif // IMMEDIATE_GUID_USE

// CLSID_ADO
#define  CLSID_ADO GUID_BUILDER(CLSID_ADO,0000051A,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
CLSID_ADO;
#undef CLSID_ADO
#endif // IMMEDIATE_GUID_USE

// IID_ConnectionEvents
#define  IID_ConnectionEvents GUID_BUILDER(IID_ConnectionEvents,00000400,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_ConnectionEvents;
#undef IID_ConnectionEvents
#endif // IMMEDIATE_GUID_USE

// IID_ConnectionEventsVt
#define  IID_ConnectionEventsVt GUID_BUILDER(IID_ConnectionEventsVt,00000402,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_ConnectionEventsVt;
#undef IID_ConnectionEventsVt
#endif // IMMEDIATE_GUID_USE

// IID_IADO10StdObject
#define  IID_IADO10StdObject GUID_BUILDER(IID_IADO10StdObject,00000534,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_IADO10StdObject;
#undef IID_IADO10StdObject
#endif // IMMEDIATE_GUID_USE

// IID__ADO
#define  IID__ADO GUID_BUILDER(IID__ADO,00000534,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID__ADO;
#undef IID__ADO
#endif // IMMEDIATE_GUID_USE

// IID_IADOClass
#define  IID_IADOClass GUID_BUILDER(IID_IADOClass,00000560,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_IADOClass;
#undef IID_IADOClass
#endif // IMMEDIATE_GUID_USE

// IID_EnumRecordCreateOptions
#define  IID_EnumRecordCreateOptions GUID_BUILDER(IID_EnumRecordCreateOptions,00000570,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumRecordCreateOptions;
#undef IID_EnumRecordCreateOptions
#endif // IMMEDIATE_GUID_USE

// IID_EnumRecordOpenOptions
#define  IID_EnumRecordOpenOptions GUID_BUILDER(IID_EnumRecordOpenOptions,00000571,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumRecordOpenOptions;
#undef IID_EnumRecordOpenOptions
#endif // IMMEDIATE_GUID_USE


// IID_EnumMoveRecordOptions
#define  IID_EnumMoveRecordOptions GUID_BUILDER(IID_EnumMoveRecordOptions,00000573,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumMoveRecordOptions;
#undef IID_EnumMoveRecordOptions
#endif // IMMEDIATE_GUID_USE

// IID_EnumCopyRecordOptions
#define  IID_EnumCopyRecordOptions GUID_BUILDER(IID_EnumCopyRecordOptions,00000574,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumCopyRecordOptions;
#undef IID_EnumCopyRecordOptions
#endif // IMMEDIATE_GUID_USE

// IID_EnumMode
#define  IID_EnumMode GUID_BUILDER(IID_EnumMode,00000575,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumMode;
#undef IID_EnumMode
#endif // IMMEDIATE_GUID_USE

// IID_EnumStreamType
#define  IID_EnumStreamType GUID_BUILDER(IID_EnumStreamType,00000576,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumStreamType;
#undef IID_EnumStreamType
#endif // IMMEDIATE_GUID_USE

// IID_EnumLineSeparator
#define  IID_EnumLineSeparator GUID_BUILDER(IID_EnumLineSeparator,00000577,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumLineSeparator;
#undef IID_EnumLineSeparator
#endif // IMMEDIATE_GUID_USE

// IID_EnumStreamOpenOptions
#define  IID_EnumStreamOpenOptions GUID_BUILDER(IID_EnumStreamOpenOptions,0000057A,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumStreamOpenOptions;
#undef IID_EnumStreamOpenOptions
#endif // IMMEDIATE_GUID_USE

// IID_EnumStreamWrite
#define  IID_EnumStreamWrite GUID_BUILDER(IID_EnumStreamWrite,0000057B,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumStreamWrite;
#undef IID_EnumStreamWrite
#endif // IMMEDIATE_GUID_USE

// IID_EnumSaveOptions
#define  IID_EnumSaveOptions GUID_BUILDER(IID_EnumSaveOptions,0000057C,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumSaveOptions;
#undef IID_EnumSaveOptions
#endif // IMMEDIATE_GUID_USE

// IID_EnumRecordType
#define  IID_EnumRecordType GUID_BUILDER(IID_EnumRecordType,0000057D,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumRecordType;
#undef IID_EnumRecordType
#endif // IMMEDIATE_GUID_USE

// IID_EnumFieldStatus
#define  IID_EnumFieldStatus GUID_BUILDER(IID_EnumFieldStatus,0000057E,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumFieldStatus;
#undef IID_EnumFieldStatus
#endif // IMMEDIATE_GUID_USE


#if 0

// ICRecordset
#define  ICRecordset GUID_BUILDER(ICRecordset,00000543,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
ICRecordset;
#undef ICRecordset
#endif // IMMEDIATE_GUID_USE

// IID_EnumStreamReadOptions
#define  IID_EnumStreamReadOptions GUID_BUILDER(IID_EnumStreamReadOptions,00000572,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumStreamReadOptions;
#undef IID_EnumStreamReadOptions
#endif // IMMEDIATE_GUID_USE

// IID_EnumStateProperty
#define  IID_EnumStateProperty GUID_BUILDER(IID_EnumStateProperty,00000578,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumStateProperty;
#undef IID_EnumStateProperty
#endif // IMMEDIATE_GUID_USE

// IID_EnumStreamMode
#define  IID_EnumStreamMode GUID_BUILDER(IID_EnumStreamMode,00000579,0000,0010,80,00,00,AA,00,6D,2E,A4)
#ifdef IMMEDIATE_GUID_USE
IID_EnumStreamMode;
#undef IID_EnumStreamMode
#endif // IMMEDIATE_GUID_USE

#endif

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// End of old guid pool. Newly generated ADO GUID pool follows.


// IID_IADOCommand
#define IID_IADOCommand	GUID_BUILDER(IID_IADOCommand,B08400BD,F9D1,4D02,B8,56,71,D5,DB,A1,23,E9)
#ifdef IMMEDIATE_GUID_USE
IID_IADOCommand;
#undef	IID_IADOCommand
#endif // IMMEDIATE_GUID_USE

#ifdef RESERVED_GUIDS_BEYOND_THIS_POINT

// ADO_Reserved_1
#define ADO_Reserved_1	GUID_BUILDER(ADO_Reserved_1,EF53050B,882E,4776,B6,43,ED,A4,72,E8,E3,F2)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_1;
#undef	ADO_Reserved_1
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_2
#define ADO_Reserved_2	GUID_BUILDER(ADO_Reserved_2,FF184014,B5D3,4310,AB,F0,9B,70,45,A2,CF,17)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_2;
#undef	ADO_Reserved_2
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_3
#define ADO_Reserved_3	GUID_BUILDER(ADO_Reserved_3,B691E011,1797,432E,90,7A,4D,8C,69,33,91,29)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_3;
#undef	ADO_Reserved_3
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_4
#define ADO_Reserved_4	GUID_BUILDER(ADO_Reserved_4,567747F1,658B,4906,82,C4,E9,CD,A1,46,26,15)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_4;
#undef	ADO_Reserved_4
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_5
#define ADO_Reserved_5	GUID_BUILDER(ADO_Reserved_5,986761E8,7269,4890,AA,65,AD,7C,03,69,7A,6D)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_5;
#undef	ADO_Reserved_5
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_6
#define ADO_Reserved_6	GUID_BUILDER(ADO_Reserved_6,ED5A4589,7A9D,41DF,89,86,CC,A9,25,01,A5,DA)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_6;
#undef	ADO_Reserved_6
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_7
#define ADO_Reserved_7	GUID_BUILDER(ADO_Reserved_7,C029178A,F16B,4A06,82,93,A8,08,B7,F8,78,92)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_7;
#undef	ADO_Reserved_7
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_8
#define ADO_Reserved_8	GUID_BUILDER(ADO_Reserved_8,FD6974FD,21FB,409C,96,56,A5,68,FE,C0,AC,01)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_8;
#undef	ADO_Reserved_8
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_9
#define ADO_Reserved_9	GUID_BUILDER(ADO_Reserved_9,F23FCB5E,7159,4CBA,A3,41,0E,7A,A5,15,18,70)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_9;
#undef	ADO_Reserved_9
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_10
#define ADO_Reserved_10	GUID_BUILDER(ADO_Reserved_10,E724D5C9,327C,43F7,86,4C,68,2F,FF,5C,99,93)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_10;
#undef	ADO_Reserved_10
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_11
#define ADO_Reserved_11	GUID_BUILDER(ADO_Reserved_11,2A75196C,D9EB,4129,B8,03,93,13,27,F7,2D,5C)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_11;
#undef	ADO_Reserved_11
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_12
#define ADO_Reserved_12	GUID_BUILDER(ADO_Reserved_12,8831EBB5,2C09,4DDD,9A,7A,AC,13,6D,58,D7,21)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_12;
#undef	ADO_Reserved_12
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_13
#define ADO_Reserved_13	GUID_BUILDER(ADO_Reserved_13,447B1221,64FA,44E9,B1,46,B1,1F,16,E3,14,B2)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_13;
#undef	ADO_Reserved_13
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_14
#define ADO_Reserved_14	GUID_BUILDER(ADO_Reserved_14,FC528DC2,A992,44D3,97,9F,07,F7,F4,45,5F,23)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_14;
#undef	ADO_Reserved_14
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_15
#define ADO_Reserved_15	GUID_BUILDER(ADO_Reserved_15,C2CC7BC0,9F8B,46C8,83,6B,BC,46,70,28,F4,54)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_15;
#undef	ADO_Reserved_15
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_16
#define ADO_Reserved_16	GUID_BUILDER(ADO_Reserved_16,4687EE6C,12CE,4A31,97,E9,E6,49,6D,E7,2C,71)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_16;
#undef	ADO_Reserved_16
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_17
#define ADO_Reserved_17	GUID_BUILDER(ADO_Reserved_17,4B56FC5D,992F,4339,95,81,C5,40,7A,B2,BF,FD)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_17;
#undef	ADO_Reserved_17
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_18
#define ADO_Reserved_18	GUID_BUILDER(ADO_Reserved_18,1F13BFB3,8BA8,46CA,91,78,74,28,EF,9A,85,C0)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_18;
#undef	ADO_Reserved_18
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_19
#define ADO_Reserved_19	GUID_BUILDER(ADO_Reserved_19,0B410060,4D75,4F77,96,A1,68,4C,38,15,E1,B1)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_19;
#undef	ADO_Reserved_19
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_20
#define ADO_Reserved_20	GUID_BUILDER(ADO_Reserved_20,5593F2E0,436B,40B8,81,A8,1B,7E,F4,E6,25,2C)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_20;
#undef	ADO_Reserved_20
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_21
#define ADO_Reserved_21	GUID_BUILDER(ADO_Reserved_21,88447B2F,E1C9,413E,BE,E7,A7,D2,B9,0E,D1,96)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_21;
#undef	ADO_Reserved_21
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_22
#define ADO_Reserved_22	GUID_BUILDER(ADO_Reserved_22,89BFEE1B,8CB5,4A90,89,AF,E8,29,93,4E,6C,48)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_22;
#undef	ADO_Reserved_22
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_23
#define ADO_Reserved_23	GUID_BUILDER(ADO_Reserved_23,28D7F9FC,F485,4BDB,9C,C4,6F,AE,44,F9,9F,D9)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_23;
#undef	ADO_Reserved_23
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_24
#define ADO_Reserved_24	GUID_BUILDER(ADO_Reserved_24,1BB4223F,B0E8,4540,96,FD,B8,FE,D9,A7,C0,8B)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_24;
#undef	ADO_Reserved_24
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_25
#define ADO_Reserved_25	GUID_BUILDER(ADO_Reserved_25,AD1A1568,8B4A,403F,84,76,D8,F6,33,4D,BD,9F)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_25;
#undef	ADO_Reserved_25
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_26
#define ADO_Reserved_26	GUID_BUILDER(ADO_Reserved_26,1326B4D8,EE0B,4054,8F,4C,86,35,9F,00,24,AD)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_26;
#undef	ADO_Reserved_26
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_27
#define ADO_Reserved_27	GUID_BUILDER(ADO_Reserved_27,98B7EB70,7AED,401A,AF,6D,A6,B8,DB,A0,AF,A6)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_27;
#undef	ADO_Reserved_27
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_28
#define ADO_Reserved_28	GUID_BUILDER(ADO_Reserved_28,FD46F2C2,7FDA,4DC9,A2,DB,D9,BE,4F,59,98,C2)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_28;
#undef	ADO_Reserved_28
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_29
#define ADO_Reserved_29	GUID_BUILDER(ADO_Reserved_29,FAA37542,B471,4183,A6,56,99,C8,FD,80,FF,73)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_29;
#undef	ADO_Reserved_29
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_30
#define ADO_Reserved_30	GUID_BUILDER(ADO_Reserved_30,56CE86F1,3116,4104,A5,28,17,D1,1E,DC,68,2A)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_30;
#undef	ADO_Reserved_30
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_31
#define ADO_Reserved_31	GUID_BUILDER(ADO_Reserved_31,83E8CF0E,176F,4908,86,3A,2A,77,4D,76,9B,EF)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_31;
#undef	ADO_Reserved_31
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_32
#define ADO_Reserved_32	GUID_BUILDER(ADO_Reserved_32,0494D18D,98F7,4A38,80,DF,35,F8,80,98,BD,DF)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_32;
#undef	ADO_Reserved_32
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_33
#define ADO_Reserved_33	GUID_BUILDER(ADO_Reserved_33,00C61F59,4E7F,4093,BF,FD,03,53,B4,5D,E5,8B)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_33;
#undef	ADO_Reserved_33
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_34
#define ADO_Reserved_34	GUID_BUILDER(ADO_Reserved_34,732A172F,384D,4C4A,A6,AF,D2,28,20,D3,34,26)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_34;
#undef	ADO_Reserved_34
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_35
#define ADO_Reserved_35	GUID_BUILDER(ADO_Reserved_35,104E1F7E,8993,455C,B7,D8,58,CD,88,74,80,75)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_35;
#undef	ADO_Reserved_35
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_36
#define ADO_Reserved_36	GUID_BUILDER(ADO_Reserved_36,C12B8DFD,42F7,408E,AE,FB,A7,C2,FB,43,49,A7)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_36;
#undef	ADO_Reserved_36
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_37
#define ADO_Reserved_37	GUID_BUILDER(ADO_Reserved_37,EE881FC9,6C2F,45A2,BA,17,24,95,BC,72,4E,55)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_37;
#undef	ADO_Reserved_37
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_38
#define ADO_Reserved_38	GUID_BUILDER(ADO_Reserved_38,7381C764,646B,4F11,A6,73,13,50,98,9D,62,3A)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_38;
#undef	ADO_Reserved_38
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_39
#define ADO_Reserved_39	GUID_BUILDER(ADO_Reserved_39,D8E4965C,F571,4771,8A,74,63,95,05,16,B0,88)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_39;
#undef	ADO_Reserved_39
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_40
#define ADO_Reserved_40	GUID_BUILDER(ADO_Reserved_40,2BE262E5,3A8C,4B07,A3,C3,3B,B7,40,EF,40,95)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_40;
#undef	ADO_Reserved_40
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_41
#define ADO_Reserved_41	GUID_BUILDER(ADO_Reserved_41,3E90A199,4F86,445C,84,8E,A6,17,86,B9,67,D1)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_41;
#undef	ADO_Reserved_41
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_42
#define ADO_Reserved_42	GUID_BUILDER(ADO_Reserved_42,DCD025E0,DA44,47E4,82,65,E4,A7,6B,85,29,0C)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_42;
#undef	ADO_Reserved_42
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_43
#define ADO_Reserved_43	GUID_BUILDER(ADO_Reserved_43,31EFF562,FB6B,41D6,81,AD,30,1B,B0,53,9C,61)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_43;
#undef	ADO_Reserved_43
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_44
#define ADO_Reserved_44	GUID_BUILDER(ADO_Reserved_44,BD3ECD6B,F4A7,42FC,90,F1,75,D5,37,2A,F2,8F)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_44;
#undef	ADO_Reserved_44
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_45
#define ADO_Reserved_45	GUID_BUILDER(ADO_Reserved_45,6EFBC56F,67E4,4F7D,BE,59,C5,D6,FA,21,B7,77)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_45;
#undef	ADO_Reserved_45
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_46
#define ADO_Reserved_46	GUID_BUILDER(ADO_Reserved_46,3BF5E1FC,B960,4564,86,54,07,B0,7A,AF,6E,4F)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_46;
#undef	ADO_Reserved_46
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_47
#define ADO_Reserved_47	GUID_BUILDER(ADO_Reserved_47,2430F883,1462,4899,9A,DE,F7,24,27,FD,5E,E4)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_47;
#undef	ADO_Reserved_47
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_48
#define ADO_Reserved_48	GUID_BUILDER(ADO_Reserved_48,AB663F07,BA4D,42CC,93,C6,F2,EA,9F,C8,BA,74)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_48;
#undef	ADO_Reserved_48
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_49
#define ADO_Reserved_49	GUID_BUILDER(ADO_Reserved_49,D808C6F7,36C0,4302,80,EE,C4,B7,00,F8,D2,38)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_49;
#undef	ADO_Reserved_49
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_50
#define ADO_Reserved_50	GUID_BUILDER(ADO_Reserved_50,AB146E06,E493,4DF0,A1,CD,07,D4,B0,74,46,C3)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_50;
#undef	ADO_Reserved_50
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_51
#define ADO_Reserved_51	GUID_BUILDER(ADO_Reserved_51,74F1FD51,9CB8,4186,8C,3D,DD,F3,55,2A,99,9B)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_51;
#undef	ADO_Reserved_51
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_52
#define ADO_Reserved_52	GUID_BUILDER(ADO_Reserved_52,71701A97,5386,43B0,95,8D,3C,EE,40,57,B1,99)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_52;
#undef	ADO_Reserved_52
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_53
#define ADO_Reserved_53	GUID_BUILDER(ADO_Reserved_53,63CC6087,A6C6,4CCF,8E,D4,17,5B,91,A6,32,C5)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_53;
#undef	ADO_Reserved_53
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_54
#define ADO_Reserved_54	GUID_BUILDER(ADO_Reserved_54,7323FD37,B7D8,4F8A,80,F4,E8,3D,0B,2A,73,B5)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_54;
#undef	ADO_Reserved_54
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_55
#define ADO_Reserved_55	GUID_BUILDER(ADO_Reserved_55,5C666403,2A0A,4B12,8E,1D,41,19,88,DD,E0,0A)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_55;
#undef	ADO_Reserved_55
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_56
#define ADO_Reserved_56	GUID_BUILDER(ADO_Reserved_56,ECA4C14C,5529,49DF,B1,3C,17,F0,22,DB,1B,A6)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_56;
#undef	ADO_Reserved_56
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_57
#define ADO_Reserved_57	GUID_BUILDER(ADO_Reserved_57,304ADE1D,4458,4A6A,93,48,1F,7C,2E,64,D6,FA)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_57;
#undef	ADO_Reserved_57
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_58
#define ADO_Reserved_58	GUID_BUILDER(ADO_Reserved_58,D87A7AF2,FB3C,49BC,B2,69,F3,57,36,E7,23,2E)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_58;
#undef	ADO_Reserved_58
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_59
#define ADO_Reserved_59	GUID_BUILDER(ADO_Reserved_59,542D6D77,AECB,4AFF,B1,C6,54,EF,79,8F,61,ED)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_59;
#undef	ADO_Reserved_59
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_60
#define ADO_Reserved_60	GUID_BUILDER(ADO_Reserved_60,46359618,34AE,410E,AE,20,F3,D4,E1,BD,A6,BE)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_60;
#undef	ADO_Reserved_60
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_61
#define ADO_Reserved_61	GUID_BUILDER(ADO_Reserved_61,F98DF79B,2935,464B,AA,08,CC,EF,F1,5F,71,32)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_61;
#undef	ADO_Reserved_61
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_62
#define ADO_Reserved_62	GUID_BUILDER(ADO_Reserved_62,214887FB,4867,4DD8,83,9D,4C,F0,BB,83,E1,95)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_62;
#undef	ADO_Reserved_62
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_63
#define ADO_Reserved_63	GUID_BUILDER(ADO_Reserved_63,C9B68C08,F663,4386,8F,5B,FA,BA,E0,27,43,6D)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_63;
#undef	ADO_Reserved_63
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_64
#define ADO_Reserved_64	GUID_BUILDER(ADO_Reserved_64,F46511DD,10B6,49CF,AA,75,5E,E2,7C,FD,9E,A4)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_64;
#undef	ADO_Reserved_64
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_65
#define ADO_Reserved_65	GUID_BUILDER(ADO_Reserved_65,C057EF87,F3A8,4890,A9,56,57,8C,07,CD,2E,F8)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_65;
#undef	ADO_Reserved_65
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_66
#define ADO_Reserved_66	GUID_BUILDER(ADO_Reserved_66,1C9E0666,1405,4DC5,BD,A7,65,F4,B4,16,1D,7B)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_66;
#undef	ADO_Reserved_66
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_67
#define ADO_Reserved_67	GUID_BUILDER(ADO_Reserved_67,B91484C2,5E48,438C,91,CD,B9,D6,99,32,30,E4)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_67;
#undef	ADO_Reserved_67
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_68
#define ADO_Reserved_68	GUID_BUILDER(ADO_Reserved_68,17D12BFE,6C9F,4229,87,95,60,20,6F,D1,45,35)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_68;
#undef	ADO_Reserved_68
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_69
#define ADO_Reserved_69	GUID_BUILDER(ADO_Reserved_69,5A816EA3,EE82,4F65,BC,76,74,07,E9,E5,43,58)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_69;
#undef	ADO_Reserved_69
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_70
#define ADO_Reserved_70	GUID_BUILDER(ADO_Reserved_70,3AD0DE2B,AA3E,4508,BE,9E,1E,AA,DF,1C,4D,8B)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_70;
#undef	ADO_Reserved_70
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_71
#define ADO_Reserved_71	GUID_BUILDER(ADO_Reserved_71,54DC8B80,7869,4D90,AB,5C,8C,54,1A,74,EE,F8)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_71;
#undef	ADO_Reserved_71
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_72
#define ADO_Reserved_72	GUID_BUILDER(ADO_Reserved_72,80A200B0,5783,48E7,81,25,B9,E4,BF,59,F7,22)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_72;
#undef	ADO_Reserved_72
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_73
#define ADO_Reserved_73	GUID_BUILDER(ADO_Reserved_73,1502CB61,8C42,4C4B,B9,0C,3A,9E,4E,46,D1,BE)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_73;
#undef	ADO_Reserved_73
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_74
#define ADO_Reserved_74	GUID_BUILDER(ADO_Reserved_74,70EB3F53,91A0,42F5,BE,50,F1,02,DE,C8,92,27)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_74;
#undef	ADO_Reserved_74
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_75
#define ADO_Reserved_75	GUID_BUILDER(ADO_Reserved_75,4680AA81,B27C,4A8F,83,F9,6F,B7,E1,8E,D2,3C)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_75;
#undef	ADO_Reserved_75
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_76
#define ADO_Reserved_76	GUID_BUILDER(ADO_Reserved_76,EF31F9EB,4541,4FCB,8D,67,59,2C,85,50,93,05)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_76;
#undef	ADO_Reserved_76
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_77
#define ADO_Reserved_77	GUID_BUILDER(ADO_Reserved_77,88B77D15,997E,4E3A,83,20,3B,37,83,52,86,D5)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_77;
#undef	ADO_Reserved_77
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_78
#define ADO_Reserved_78	GUID_BUILDER(ADO_Reserved_78,D03A3AA8,1AAC,4867,93,C9,5F,51,D8,7D,6A,74)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_78;
#undef	ADO_Reserved_78
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_79
#define ADO_Reserved_79	GUID_BUILDER(ADO_Reserved_79,47022458,17E7,4BD7,90,81,85,B4,0B,03,6D,5B)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_79;
#undef	ADO_Reserved_79
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_80
#define ADO_Reserved_80	GUID_BUILDER(ADO_Reserved_80,9E5BEE82,F410,44C7,9D,6D,3F,7D,D2,8B,A7,CC)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_80;
#undef	ADO_Reserved_80
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_81
#define ADO_Reserved_81	GUID_BUILDER(ADO_Reserved_81,278A1C47,3C39,41C7,A3,FB,7C,2E,62,0B,E4,44)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_81;
#undef	ADO_Reserved_81
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_82
#define ADO_Reserved_82	GUID_BUILDER(ADO_Reserved_82,964CBF05,8084,4C15,9C,F5,8C,4B,81,41,B4,AE)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_82;
#undef	ADO_Reserved_82
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_83
#define ADO_Reserved_83	GUID_BUILDER(ADO_Reserved_83,A86296A0,F272,4ACD,83,06,FF,CA,FF,89,14,A9)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_83;
#undef	ADO_Reserved_83
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_84
#define ADO_Reserved_84	GUID_BUILDER(ADO_Reserved_84,F805FC7C,7C4A,43A1,B0,14,71,EA,0E,EB,EA,5F)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_84;
#undef	ADO_Reserved_84
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_85
#define ADO_Reserved_85	GUID_BUILDER(ADO_Reserved_85,33E6E9B6,0BEA,4549,90,CB,3B,64,12,DB,8C,F5)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_85;
#undef	ADO_Reserved_85
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_86
#define ADO_Reserved_86	GUID_BUILDER(ADO_Reserved_86,7337E3DC,219F,4D9E,82,5B,0A,2C,18,4E,C0,DE)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_86;
#undef	ADO_Reserved_86
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_87
#define ADO_Reserved_87	GUID_BUILDER(ADO_Reserved_87,7397BAFC,354E,4F18,9F,76,C3,3A,4E,EF,6D,20)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_87;
#undef	ADO_Reserved_87
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_88
#define ADO_Reserved_88	GUID_BUILDER(ADO_Reserved_88,5EC2D163,E671,4186,BE,72,BF,FF,72,D5,7A,5C)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_88;
#undef	ADO_Reserved_88
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_89
#define ADO_Reserved_89	GUID_BUILDER(ADO_Reserved_89,8B37B801,0A35,4F97,A3,43,82,57,B3,E7,6C,79)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_89;
#undef	ADO_Reserved_89
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_90
#define ADO_Reserved_90	GUID_BUILDER(ADO_Reserved_90,FAD396B6,EE4E,4F70,85,54,E8,23,9E,47,05,29)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_90;
#undef	ADO_Reserved_90
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_91
#define ADO_Reserved_91	GUID_BUILDER(ADO_Reserved_91,6063972C,395B,4FEF,A0,04,ED,95,E7,D8,72,0D)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_91;
#undef	ADO_Reserved_91
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_92
#define ADO_Reserved_92	GUID_BUILDER(ADO_Reserved_92,85AEED72,A1F8,4597,82,32,F8,40,EF,C9,21,09)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_92;
#undef	ADO_Reserved_92
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_93
#define ADO_Reserved_93	GUID_BUILDER(ADO_Reserved_93,CE4FD8FF,553A,4424,B1,EA,3E,DF,11,42,AD,8B)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_93;
#undef	ADO_Reserved_93
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_94
#define ADO_Reserved_94	GUID_BUILDER(ADO_Reserved_94,1A856A0F,0844,4DE4,AC,7B,75,30,62,56,39,86)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_94;
#undef	ADO_Reserved_94
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_95
#define ADO_Reserved_95	GUID_BUILDER(ADO_Reserved_95,09A742A1,19ED,43BB,85,E9,99,23,DE,C4,17,F7)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_95;
#undef	ADO_Reserved_95
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_96
#define ADO_Reserved_96	GUID_BUILDER(ADO_Reserved_96,3695BD0C,9DE6,4895,84,E6,B2,4C,E7,55,47,02)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_96;
#undef	ADO_Reserved_96
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_97
#define ADO_Reserved_97	GUID_BUILDER(ADO_Reserved_97,8802531F,6EA8,4A55,8A,18,05,97,86,3C,DA,38)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_97;
#undef	ADO_Reserved_97
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_98
#define ADO_Reserved_98	GUID_BUILDER(ADO_Reserved_98,498E70F0,B13F,4804,AD,D5,72,E8,0E,28,05,E7)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_98;
#undef	ADO_Reserved_98
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_99
#define ADO_Reserved_99	GUID_BUILDER(ADO_Reserved_99,50D0E90F,E3A4,4A93,8B,48,71,21,66,E8,87,CD)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_99;
#undef	ADO_Reserved_99
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_100
#define ADO_Reserved_100	GUID_BUILDER(ADO_Reserved_100,F1D30550,8515,4F8B,93,E1,1E,F0,12,1B,4B,D0)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_100;
#undef	ADO_Reserved_100
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_101
#define ADO_Reserved_101	GUID_BUILDER(ADO_Reserved_101,901CDA31,8CDB,4A5B,91,6B,63,EA,90,1D,8C,E0)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_101;
#undef	ADO_Reserved_101
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_102
#define ADO_Reserved_102	GUID_BUILDER(ADO_Reserved_102,00BDA239,1094,4AEF,93,AD,7C,E2,73,6C,42,25)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_102;
#undef	ADO_Reserved_102
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_103
#define ADO_Reserved_103	GUID_BUILDER(ADO_Reserved_103,DCA4E51E,250E,4AB3,B4,90,F2,CB,9E,8F,6C,C4)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_103;
#undef	ADO_Reserved_103
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_104
#define ADO_Reserved_104	GUID_BUILDER(ADO_Reserved_104,24679EBD,8535,4494,A9,1C,18,91,F0,75,5B,6F)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_104;
#undef	ADO_Reserved_104
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_105
#define ADO_Reserved_105	GUID_BUILDER(ADO_Reserved_105,F041739E,F37E,4925,94,25,FB,51,5E,56,0F,54)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_105;
#undef	ADO_Reserved_105
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_106
#define ADO_Reserved_106	GUID_BUILDER(ADO_Reserved_106,FECACBBF,A73C,4616,84,2F,FE,F5,72,85,70,AB)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_106;
#undef	ADO_Reserved_106
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_107
#define ADO_Reserved_107	GUID_BUILDER(ADO_Reserved_107,DBAD7368,1DED,4A77,B8,0A,1A,EB,12,99,BD,B3)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_107;
#undef	ADO_Reserved_107
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_108
#define ADO_Reserved_108	GUID_BUILDER(ADO_Reserved_108,CFDE81B8,66EF,4503,84,A8,7E,8F,C8,AB,0B,31)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_108;
#undef	ADO_Reserved_108
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_109
#define ADO_Reserved_109	GUID_BUILDER(ADO_Reserved_109,9B7484FA,023A,4FFB,A2,94,11,A6,E5,97,AB,35)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_109;
#undef	ADO_Reserved_109
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_110
#define ADO_Reserved_110	GUID_BUILDER(ADO_Reserved_110,54F0F09C,1201,49A9,B4,65,6B,02,9B,5F,E3,12)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_110;
#undef	ADO_Reserved_110
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_111
#define ADO_Reserved_111	GUID_BUILDER(ADO_Reserved_111,BFFA01F8,EAE7,4FA1,BF,74,37,73,3F,BF,36,4C)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_111;
#undef	ADO_Reserved_111
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_112
#define ADO_Reserved_112	GUID_BUILDER(ADO_Reserved_112,12FAD291,4AAB,4038,9D,D1,04,E4,E7,A9,E0,F4)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_112;
#undef	ADO_Reserved_112
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_113
#define ADO_Reserved_113	GUID_BUILDER(ADO_Reserved_113,8D2AF964,C489,4D77,A8,17,A0,4D,B1,DB,26,A5)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_113;
#undef	ADO_Reserved_113
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_114
#define ADO_Reserved_114	GUID_BUILDER(ADO_Reserved_114,79F89DD7,BE86,4B36,BE,9B,FA,75,24,18,55,68)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_114;
#undef	ADO_Reserved_114
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_115
#define ADO_Reserved_115	GUID_BUILDER(ADO_Reserved_115,4387D7FA,7A52,4F67,BF,B6,7E,7D,7A,B7,C9,DE)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_115;
#undef	ADO_Reserved_115
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_116
#define ADO_Reserved_116	GUID_BUILDER(ADO_Reserved_116,7571252F,0E49,4F4B,A3,87,9E,D9,70,54,68,D8)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_116;
#undef	ADO_Reserved_116
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_117
#define ADO_Reserved_117	GUID_BUILDER(ADO_Reserved_117,0DAB016B,6BA4,470F,98,1A,2B,A7,65,D4,60,4B)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_117;
#undef	ADO_Reserved_117
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_118
#define ADO_Reserved_118	GUID_BUILDER(ADO_Reserved_118,E97D87A3,8A95,4080,8C,A9,ED,9F,05,1A,B7,B2)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_118;
#undef	ADO_Reserved_118
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_119
#define ADO_Reserved_119	GUID_BUILDER(ADO_Reserved_119,C9EA1598,2D23,4978,9B,33,3D,2C,C4,0A,B7,A1)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_119;
#undef	ADO_Reserved_119
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_120
#define ADO_Reserved_120	GUID_BUILDER(ADO_Reserved_120,E41CA9FC,7FC9,4831,90,CE,F5,33,96,CE,42,C3)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_120;
#undef	ADO_Reserved_120
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_121
#define ADO_Reserved_121	GUID_BUILDER(ADO_Reserved_121,15DF0905,4ACC,44F7,A0,1E,0F,EF,56,3C,C4,E5)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_121;
#undef	ADO_Reserved_121
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_122
#define ADO_Reserved_122	GUID_BUILDER(ADO_Reserved_122,D2879A0E,D0B3,42A2,A1,16,D1,5E,13,C7,51,77)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_122;
#undef	ADO_Reserved_122
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_123
#define ADO_Reserved_123	GUID_BUILDER(ADO_Reserved_123,A999A8D2,5E83,4C0E,83,97,18,33,19,32,79,CD)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_123;
#undef	ADO_Reserved_123
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_124
#define ADO_Reserved_124	GUID_BUILDER(ADO_Reserved_124,C6AFAE72,B3FF,48AB,B1,EE,F5,EE,F9,05,DF,47)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_124;
#undef	ADO_Reserved_124
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_125
#define ADO_Reserved_125	GUID_BUILDER(ADO_Reserved_125,0DEADF50,0940,4F0E,AC,3B,94,80,B7,32,2B,1B)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_125;
#undef	ADO_Reserved_125
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_126
#define ADO_Reserved_126	GUID_BUILDER(ADO_Reserved_126,61278818,2FE6,4892,8B,95,A7,5C,AC,6E,21,BB)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_126;
#undef	ADO_Reserved_126
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_127
#define ADO_Reserved_127	GUID_BUILDER(ADO_Reserved_127,3AC2BED7,1111,4E55,B2,06,1F,54,18,94,4C,BA)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_127;
#undef	ADO_Reserved_127
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_128
#define ADO_Reserved_128	GUID_BUILDER(ADO_Reserved_128,3D4751E2,04B8,4593,A0,0D,3A,4B,94,67,4B,E9)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_128;
#undef	ADO_Reserved_128
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_129
#define ADO_Reserved_129	GUID_BUILDER(ADO_Reserved_129,69BC6751,FE10,4B3F,89,35,40,2F,A5,FD,04,82)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_129;
#undef	ADO_Reserved_129
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_130
#define ADO_Reserved_130	GUID_BUILDER(ADO_Reserved_130,5867AF81,995A,4686,8B,CB,13,B6,8B,10,26,8A)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_130;
#undef	ADO_Reserved_130
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_131
#define ADO_Reserved_131	GUID_BUILDER(ADO_Reserved_131,DA46C62F,BDCD,4745,A3,CA,4E,C9,FA,AB,E1,10)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_131;
#undef	ADO_Reserved_131
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_132
#define ADO_Reserved_132	GUID_BUILDER(ADO_Reserved_132,93028AA6,EECC,482F,B3,A4,2F,D4,13,04,96,5E)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_132;
#undef	ADO_Reserved_132
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_133
#define ADO_Reserved_133	GUID_BUILDER(ADO_Reserved_133,AB14F604,D05E,4E50,A4,5B,A8,10,48,E3,A4,75)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_133;
#undef	ADO_Reserved_133
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_134
#define ADO_Reserved_134	GUID_BUILDER(ADO_Reserved_134,35267875,8420,4226,87,C0,25,00,58,56,0F,D2)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_134;
#undef	ADO_Reserved_134
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_135
#define ADO_Reserved_135	GUID_BUILDER(ADO_Reserved_135,16E34932,EEFA,440E,A7,86,6A,36,D2,C6,21,69)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_135;
#undef	ADO_Reserved_135
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_136
#define ADO_Reserved_136	GUID_BUILDER(ADO_Reserved_136,2710A15A,B2B0,46EC,BD,EC,E2,2E,A8,A6,28,FA)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_136;
#undef	ADO_Reserved_136
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_137
#define ADO_Reserved_137	GUID_BUILDER(ADO_Reserved_137,2777696F,CB34,4CC4,A0,A9,02,EA,15,16,63,DD)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_137;
#undef	ADO_Reserved_137
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_138
#define ADO_Reserved_138	GUID_BUILDER(ADO_Reserved_138,D11CA1A0,A261,4BA2,81,68,46,52,32,9A,60,77)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_138;
#undef	ADO_Reserved_138
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_139
#define ADO_Reserved_139	GUID_BUILDER(ADO_Reserved_139,C33509A8,883F,4BEA,AF,B5,35,26,CF,0B,8B,E1)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_139;
#undef	ADO_Reserved_139
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_140
#define ADO_Reserved_140	GUID_BUILDER(ADO_Reserved_140,DEBDC8E1,4F02,43E1,8C,88,0B,A8,E1,50,6B,F5)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_140;
#undef	ADO_Reserved_140
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_141
#define ADO_Reserved_141	GUID_BUILDER(ADO_Reserved_141,552F8531,3F79,4DB3,87,7B,8E,54,C3,5B,38,54)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_141;
#undef	ADO_Reserved_141
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_142
#define ADO_Reserved_142	GUID_BUILDER(ADO_Reserved_142,1E6A2BF4,241C,48A1,90,66,C6,E1,E5,2B,0A,4B)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_142;
#undef	ADO_Reserved_142
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_143
#define ADO_Reserved_143	GUID_BUILDER(ADO_Reserved_143,8E5B2A8D,1F0D,429D,94,95,16,F8,E9,58,06,80)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_143;
#undef	ADO_Reserved_143
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_144
#define ADO_Reserved_144	GUID_BUILDER(ADO_Reserved_144,57FAEC9D,5CDE,4EBE,84,A1,5A,CB,75,7C,D4,51)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_144;
#undef	ADO_Reserved_144
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_145
#define ADO_Reserved_145	GUID_BUILDER(ADO_Reserved_145,707B03C3,A3B0,4F00,81,61,6E,3F,02,7F,F0,B3)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_145;
#undef	ADO_Reserved_145
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_146
#define ADO_Reserved_146	GUID_BUILDER(ADO_Reserved_146,5DD552F4,0718,4BDD,82,6C,7C,C3,5C,DA,1D,93)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_146;
#undef	ADO_Reserved_146
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_147
#define ADO_Reserved_147	GUID_BUILDER(ADO_Reserved_147,F3247F33,E377,4A44,A9,37,AC,E6,36,F6,58,1F)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_147;
#undef	ADO_Reserved_147
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_148
#define ADO_Reserved_148	GUID_BUILDER(ADO_Reserved_148,E7C324C4,38A5,42A8,99,FF,34,5D,AD,8C,D2,29)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_148;
#undef	ADO_Reserved_148
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_149
#define ADO_Reserved_149	GUID_BUILDER(ADO_Reserved_149,D14FCA70,390D,4158,B5,C3,9A,02,D1,F7,85,87)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_149;
#undef	ADO_Reserved_149
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_150
#define ADO_Reserved_150	GUID_BUILDER(ADO_Reserved_150,58D30B5F,92A5,4EF4,8E,45,A0,24,A9,CD,F9,FE)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_150;
#undef	ADO_Reserved_150
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_151
#define ADO_Reserved_151	GUID_BUILDER(ADO_Reserved_151,9673DF76,73E4,4C66,89,14,7F,A4,17,43,6C,4A)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_151;
#undef	ADO_Reserved_151
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_152
#define ADO_Reserved_152	GUID_BUILDER(ADO_Reserved_152,9FA8A7E1,CF3C,4A61,BE,10,1D,85,5F,A0,D5,08)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_152;
#undef	ADO_Reserved_152
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_153
#define ADO_Reserved_153	GUID_BUILDER(ADO_Reserved_153,B657729F,6CC7,4392,BD,56,DC,ED,6E,53,F6,4C)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_153;
#undef	ADO_Reserved_153
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_154
#define ADO_Reserved_154	GUID_BUILDER(ADO_Reserved_154,06E5224B,8C27,4F41,8F,B7,C6,41,E4,C5,04,2D)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_154;
#undef	ADO_Reserved_154
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_155
#define ADO_Reserved_155	GUID_BUILDER(ADO_Reserved_155,2268A619,CC1D,4F72,B8,3F,79,63,C0,13,B1,3D)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_155;
#undef	ADO_Reserved_155
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_156
#define ADO_Reserved_156	GUID_BUILDER(ADO_Reserved_156,FB4810F3,3A65,4C33,B3,99,B5,C9,33,11,11,D7)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_156;
#undef	ADO_Reserved_156
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_157
#define ADO_Reserved_157	GUID_BUILDER(ADO_Reserved_157,9011BE74,6C9D,44F7,BE,2C,8A,2A,BB,62,51,AC)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_157;
#undef	ADO_Reserved_157
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_158
#define ADO_Reserved_158	GUID_BUILDER(ADO_Reserved_158,3145C182,82C6,4082,BB,E7,79,1A,2F,49,6C,B1)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_158;
#undef	ADO_Reserved_158
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_159
#define ADO_Reserved_159	GUID_BUILDER(ADO_Reserved_159,D8865377,8799,4C08,97,E5,D6,7E,88,6F,F5,49)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_159;
#undef	ADO_Reserved_159
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_160
#define ADO_Reserved_160	GUID_BUILDER(ADO_Reserved_160,8993232E,8AFA,4552,A7,8C,C6,6C,9D,3A,E6,D0)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_160;
#undef	ADO_Reserved_160
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_161
#define ADO_Reserved_161	GUID_BUILDER(ADO_Reserved_161,40AF1931,8721,427B,83,5E,50,87,79,BD,1E,B2)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_161;
#undef	ADO_Reserved_161
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_162
#define ADO_Reserved_162	GUID_BUILDER(ADO_Reserved_162,9C6E2B26,4468,427C,8C,F5,01,14,7D,B8,DF,22)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_162;
#undef	ADO_Reserved_162
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_163
#define ADO_Reserved_163	GUID_BUILDER(ADO_Reserved_163,3537FA93,7E92,4CE0,80,96,EF,DC,1A,80,A8,95)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_163;
#undef	ADO_Reserved_163
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_164
#define ADO_Reserved_164	GUID_BUILDER(ADO_Reserved_164,36992492,3E17,47C1,AB,98,5F,0C,49,B4,6A,25)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_164;
#undef	ADO_Reserved_164
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_165
#define ADO_Reserved_165	GUID_BUILDER(ADO_Reserved_165,01662EDB,CE23,4215,AE,9D,51,51,E6,DA,36,3C)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_165;
#undef	ADO_Reserved_165
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_166
#define ADO_Reserved_166	GUID_BUILDER(ADO_Reserved_166,80B4A97B,5256,4397,89,CD,4E,F9,91,0F,1D,E6)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_166;
#undef	ADO_Reserved_166
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_167
#define ADO_Reserved_167	GUID_BUILDER(ADO_Reserved_167,C2341A38,2C6B,414E,96,A8,8B,5E,47,F8,14,DA)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_167;
#undef	ADO_Reserved_167
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_168
#define ADO_Reserved_168	GUID_BUILDER(ADO_Reserved_168,5C2B7578,53FA,4ACE,8E,6C,39,18,2F,68,D2,67)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_168;
#undef	ADO_Reserved_168
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_169
#define ADO_Reserved_169	GUID_BUILDER(ADO_Reserved_169,B80C1E36,611B,49D4,97,19,4E,0C,59,0E,2E,E1)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_169;
#undef	ADO_Reserved_169
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_170
#define ADO_Reserved_170	GUID_BUILDER(ADO_Reserved_170,BA269EB4,B741,4FB2,A9,C9,52,4C,9D,BE,7C,16)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_170;
#undef	ADO_Reserved_170
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_171
#define ADO_Reserved_171	GUID_BUILDER(ADO_Reserved_171,EE49769D,1028,4429,A9,66,2F,A8,1D,70,EE,19)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_171;
#undef	ADO_Reserved_171
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_172
#define ADO_Reserved_172	GUID_BUILDER(ADO_Reserved_172,541FC621,D6E6,4CC4,B4,98,8E,4F,AA,A0,65,BF)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_172;
#undef	ADO_Reserved_172
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_173
#define ADO_Reserved_173	GUID_BUILDER(ADO_Reserved_173,AA8B544C,4067,4E00,96,09,95,EE,21,68,AF,CE)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_173;
#undef	ADO_Reserved_173
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_174
#define ADO_Reserved_174	GUID_BUILDER(ADO_Reserved_174,5B161B2B,D02C,4300,A1,54,CF,DC,25,3B,13,0D)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_174;
#undef	ADO_Reserved_174
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_175
#define ADO_Reserved_175	GUID_BUILDER(ADO_Reserved_175,81F62203,182E,42DE,B1,B7,63,5F,C6,6F,6E,9E)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_175;
#undef	ADO_Reserved_175
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_176
#define ADO_Reserved_176	GUID_BUILDER(ADO_Reserved_176,04934BDD,A530,48EC,91,CE,11,83,42,5B,DB,61)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_176;
#undef	ADO_Reserved_176
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_177
#define ADO_Reserved_177	GUID_BUILDER(ADO_Reserved_177,F6997841,9A99,48AA,B0,56,8C,75,17,06,41,7F)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_177;
#undef	ADO_Reserved_177
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_178
#define ADO_Reserved_178	GUID_BUILDER(ADO_Reserved_178,353FE3F1,DE50,45EE,91,E9,3E,62,E3,C7,86,04)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_178;
#undef	ADO_Reserved_178
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_179
#define ADO_Reserved_179	GUID_BUILDER(ADO_Reserved_179,F142C8C6,9E24,422E,81,BD,D2,94,7F,93,94,D4)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_179;
#undef	ADO_Reserved_179
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_180
#define ADO_Reserved_180	GUID_BUILDER(ADO_Reserved_180,95951773,9566,46C9,86,B0,40,ED,25,46,02,93)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_180;
#undef	ADO_Reserved_180
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_181
#define ADO_Reserved_181	GUID_BUILDER(ADO_Reserved_181,54140563,0F25,4F56,9D,8F,B6,DE,CB,96,DC,E4)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_181;
#undef	ADO_Reserved_181
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_182
#define ADO_Reserved_182	GUID_BUILDER(ADO_Reserved_182,91A48243,AE16,48CF,82,29,00,00,F8,3C,5E,FC)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_182;
#undef	ADO_Reserved_182
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_183
#define ADO_Reserved_183	GUID_BUILDER(ADO_Reserved_183,E0FA1A1F,3967,4392,AB,1A,E2,8B,85,04,68,CA)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_183;
#undef	ADO_Reserved_183
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_184
#define ADO_Reserved_184	GUID_BUILDER(ADO_Reserved_184,5582D772,ABAC,4A85,A0,B3,2E,65,E1,71,10,53)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_184;
#undef	ADO_Reserved_184
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_185
#define ADO_Reserved_185	GUID_BUILDER(ADO_Reserved_185,1CD1F347,8FB4,49A2,B5,65,A6,74,A0,C1,45,0E)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_185;
#undef	ADO_Reserved_185
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_186
#define ADO_Reserved_186	GUID_BUILDER(ADO_Reserved_186,0EC3AA4E,FEF5,4A5C,BD,0A,E9,CD,B7,6A,5F,30)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_186;
#undef	ADO_Reserved_186
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_187
#define ADO_Reserved_187	GUID_BUILDER(ADO_Reserved_187,4118414D,4A21,46DA,88,C1,EF,A7,01,8C,45,27)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_187;
#undef	ADO_Reserved_187
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_188
#define ADO_Reserved_188	GUID_BUILDER(ADO_Reserved_188,D5C1CC0D,E38E,4CB6,89,D9,99,27,7F,12,D1,9E)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_188;
#undef	ADO_Reserved_188
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_189
#define ADO_Reserved_189	GUID_BUILDER(ADO_Reserved_189,0956B82A,94A7,474E,A5,05,1A,76,26,36,AF,08)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_189;
#undef	ADO_Reserved_189
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_190
#define ADO_Reserved_190	GUID_BUILDER(ADO_Reserved_190,2CBF62AB,B8E4,48D0,B5,01,69,CF,63,3C,AA,E6)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_190;
#undef	ADO_Reserved_190
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_191
#define ADO_Reserved_191	GUID_BUILDER(ADO_Reserved_191,C02B8113,AECF,4A34,B3,E9,5B,52,4E,51,44,B5)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_191;
#undef	ADO_Reserved_191
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_192
#define ADO_Reserved_192	GUID_BUILDER(ADO_Reserved_192,1C90947B,4A3A,4ECD,8C,70,F4,3F,E5,2D,46,45)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_192;
#undef	ADO_Reserved_192
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_193
#define ADO_Reserved_193	GUID_BUILDER(ADO_Reserved_193,48175E98,6672,4DB4,B5,74,8C,93,25,8D,BF,14)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_193;
#undef	ADO_Reserved_193
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_194
#define ADO_Reserved_194	GUID_BUILDER(ADO_Reserved_194,99CB88BF,E5C1,4AF0,85,00,72,36,47,DC,D2,05)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_194;
#undef	ADO_Reserved_194
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_195
#define ADO_Reserved_195	GUID_BUILDER(ADO_Reserved_195,6A2CC3CC,7855,4B27,86,F7,98,6B,AA,F9,5F,0F)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_195;
#undef	ADO_Reserved_195
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_196
#define ADO_Reserved_196	GUID_BUILDER(ADO_Reserved_196,7640B336,9EBB,4017,9E,EE,54,01,F4,EC,B1,70)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_196;
#undef	ADO_Reserved_196
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_197
#define ADO_Reserved_197	GUID_BUILDER(ADO_Reserved_197,507B39E1,2965,42EA,92,66,55,8D,E4,31,53,73)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_197;
#undef	ADO_Reserved_197
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_198
#define ADO_Reserved_198	GUID_BUILDER(ADO_Reserved_198,58C591FA,37FF,4428,A0,4A,46,71,98,17,74,8C)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_198;
#undef	ADO_Reserved_198
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_199
#define ADO_Reserved_199	GUID_BUILDER(ADO_Reserved_199,24BE98E9,B43D,49B5,9C,41,20,AF,C2,FE,1D,8D)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_199;
#undef	ADO_Reserved_199
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_200
#define ADO_Reserved_200	GUID_BUILDER(ADO_Reserved_200,041956C5,B951,4C8F,8C,61,8E,12,34,E1,E9,61)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_200;
#undef	ADO_Reserved_200
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_201
#define ADO_Reserved_201	GUID_BUILDER(ADO_Reserved_201,6C98D05C,D366,48B4,80,E3,8F,A1,CC,06,1D,B7)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_201;
#undef	ADO_Reserved_201
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_202
#define ADO_Reserved_202	GUID_BUILDER(ADO_Reserved_202,09570783,A1E8,4A52,BA,74,6C,AC,02,C0,14,8C)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_202;
#undef	ADO_Reserved_202
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_203
#define ADO_Reserved_203	GUID_BUILDER(ADO_Reserved_203,96C8C205,FD0D,4B56,9A,12,39,B3,7E,9D,07,4D)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_203;
#undef	ADO_Reserved_203
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_204
#define ADO_Reserved_204	GUID_BUILDER(ADO_Reserved_204,136C40E1,366E,4BA6,AF,71,C4,9A,EF,17,3F,C0)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_204;
#undef	ADO_Reserved_204
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_205
#define ADO_Reserved_205	GUID_BUILDER(ADO_Reserved_205,A298C799,06FB,466E,B5,6D,3E,CC,6D,0C,D6,75)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_205;
#undef	ADO_Reserved_205
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_206
#define ADO_Reserved_206	GUID_BUILDER(ADO_Reserved_206,41A96542,08F2,4609,B7,6A,ED,93,E5,5B,8C,60)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_206;
#undef	ADO_Reserved_206
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_207
#define ADO_Reserved_207	GUID_BUILDER(ADO_Reserved_207,65A3B57E,06F9,4572,80,91,17,3F,C4,A6,5A,16)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_207;
#undef	ADO_Reserved_207
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_208
#define ADO_Reserved_208	GUID_BUILDER(ADO_Reserved_208,114F3E9D,5431,4DC1,95,42,9B,85,44,CF,83,B2)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_208;
#undef	ADO_Reserved_208
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_209
#define ADO_Reserved_209	GUID_BUILDER(ADO_Reserved_209,41DE92D4,9F2A,4085,8C,C1,C1,04,3E,5B,11,12)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_209;
#undef	ADO_Reserved_209
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_210
#define ADO_Reserved_210	GUID_BUILDER(ADO_Reserved_210,E32A7A98,FF1E,45C9,AA,51,5F,86,9A,9A,48,57)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_210;
#undef	ADO_Reserved_210
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_211
#define ADO_Reserved_211	GUID_BUILDER(ADO_Reserved_211,5E5A209F,3EFC,48BC,A7,1E,F4,CE,BE,4C,A6,25)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_211;
#undef	ADO_Reserved_211
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_212
#define ADO_Reserved_212	GUID_BUILDER(ADO_Reserved_212,C556C1CC,8B2E,482B,B7,8C,E2,F6,FD,A0,4F,4D)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_212;
#undef	ADO_Reserved_212
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_213
#define ADO_Reserved_213	GUID_BUILDER(ADO_Reserved_213,39C54FD9,A22A,43D4,A4,36,D9,CB,C5,53,D5,5A)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_213;
#undef	ADO_Reserved_213
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_214
#define ADO_Reserved_214	GUID_BUILDER(ADO_Reserved_214,750E0BA2,E25C,479F,B0,C1,58,44,A1,4D,08,77)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_214;
#undef	ADO_Reserved_214
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_215
#define ADO_Reserved_215	GUID_BUILDER(ADO_Reserved_215,7ECBDB2C,C5C2,48FB,8A,3A,30,B7,E7,BD,17,25)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_215;
#undef	ADO_Reserved_215
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_216
#define ADO_Reserved_216	GUID_BUILDER(ADO_Reserved_216,0BF18AC7,8BE1,49E6,A8,57,EA,89,3A,83,58,F5)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_216;
#undef	ADO_Reserved_216
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_217
#define ADO_Reserved_217	GUID_BUILDER(ADO_Reserved_217,DA74EAB6,AAFE,42AD,8A,0D,B2,73,35,0C,82,E3)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_217;
#undef	ADO_Reserved_217
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_218
#define ADO_Reserved_218	GUID_BUILDER(ADO_Reserved_218,F6A3D173,E366,424A,AD,0C,25,5C,32,2D,09,80)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_218;
#undef	ADO_Reserved_218
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_219
#define ADO_Reserved_219	GUID_BUILDER(ADO_Reserved_219,7CD83BA3,0516,4366,BB,85,DE,53,03,F7,75,08)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_219;
#undef	ADO_Reserved_219
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_220
#define ADO_Reserved_220	GUID_BUILDER(ADO_Reserved_220,42EDFC05,3A70,4F5C,8C,32,06,5E,61,45,3C,BE)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_220;
#undef	ADO_Reserved_220
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_221
#define ADO_Reserved_221	GUID_BUILDER(ADO_Reserved_221,624BC037,05B0,44E1,85,A7,73,C4,7F,A0,CC,04)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_221;
#undef	ADO_Reserved_221
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_222
#define ADO_Reserved_222	GUID_BUILDER(ADO_Reserved_222,8811F8DD,FA15,4FA6,A7,6E,7E,DA,E7,0D,EC,D4)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_222;
#undef	ADO_Reserved_222
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_223
#define ADO_Reserved_223	GUID_BUILDER(ADO_Reserved_223,DD310D89,9F22,4F49,89,8C,AF,A2,7F,AF,11,1C)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_223;
#undef	ADO_Reserved_223
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_224
#define ADO_Reserved_224	GUID_BUILDER(ADO_Reserved_224,321E3A7D,DF0E,4FF7,98,5D,F6,E6,73,FD,E2,9F)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_224;
#undef	ADO_Reserved_224
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_225
#define ADO_Reserved_225	GUID_BUILDER(ADO_Reserved_225,036D1B77,3737,47CB,9E,75,31,13,13,2D,32,B8)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_225;
#undef	ADO_Reserved_225
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_226
#define ADO_Reserved_226	GUID_BUILDER(ADO_Reserved_226,A46B9E8C,4740,4919,86,34,A3,57,73,F6,53,2F)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_226;
#undef	ADO_Reserved_226
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_227
#define ADO_Reserved_227	GUID_BUILDER(ADO_Reserved_227,7C064E3A,014E,4733,9D,00,5D,03,13,F7,B7,F5)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_227;
#undef	ADO_Reserved_227
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_228
#define ADO_Reserved_228	GUID_BUILDER(ADO_Reserved_228,7CBFF995,A041,4B0A,B7,9B,16,3A,74,2C,DC,CF)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_228;
#undef	ADO_Reserved_228
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_229
#define ADO_Reserved_229	GUID_BUILDER(ADO_Reserved_229,C3271965,BA03,4ABC,8F,D8,98,97,7E,4C,B3,9A)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_229;
#undef	ADO_Reserved_229
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_230
#define ADO_Reserved_230	GUID_BUILDER(ADO_Reserved_230,565DC4B1,8D7A,41C6,AE,01,6C,EF,63,46,4D,5E)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_230;
#undef	ADO_Reserved_230
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_231
#define ADO_Reserved_231	GUID_BUILDER(ADO_Reserved_231,3331E567,EB74,45D2,86,32,20,43,47,DB,BE,04)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_231;
#undef	ADO_Reserved_231
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_232
#define ADO_Reserved_232	GUID_BUILDER(ADO_Reserved_232,3CEE44A8,6FC5,4CD5,AA,9D,1B,67,4C,B6,2E,EC)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_232;
#undef	ADO_Reserved_232
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_233
#define ADO_Reserved_233	GUID_BUILDER(ADO_Reserved_233,CD1BE145,71B9,4CCD,A7,AF,5B,BA,A0,2A,51,E6)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_233;
#undef	ADO_Reserved_233
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_234
#define ADO_Reserved_234	GUID_BUILDER(ADO_Reserved_234,4203C429,F3F0,4DD7,91,24,51,E0,13,95,5E,7A)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_234;
#undef	ADO_Reserved_234
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_235
#define ADO_Reserved_235	GUID_BUILDER(ADO_Reserved_235,BB256836,2804,492F,9C,B2,CF,83,CB,82,63,8A)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_235;
#undef	ADO_Reserved_235
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_236
#define ADO_Reserved_236	GUID_BUILDER(ADO_Reserved_236,8B247756,34AA,45EF,B1,24,A9,60,66,AC,E8,D6)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_236;
#undef	ADO_Reserved_236
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_237
#define ADO_Reserved_237	GUID_BUILDER(ADO_Reserved_237,EF1CF73C,4915,4289,AD,C4,DD,DA,62,70,70,A6)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_237;
#undef	ADO_Reserved_237
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_238
#define ADO_Reserved_238	GUID_BUILDER(ADO_Reserved_238,D0EB0A94,91A0,49D3,97,26,94,52,66,5A,FE,53)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_238;
#undef	ADO_Reserved_238
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_239
#define ADO_Reserved_239	GUID_BUILDER(ADO_Reserved_239,D6F5003E,4C06,47B1,89,E9,D6,3C,3D,7D,41,B6)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_239;
#undef	ADO_Reserved_239
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_240
#define ADO_Reserved_240	GUID_BUILDER(ADO_Reserved_240,AA803151,F4AE,4CE3,BC,92,97,1C,84,2E,F5,BC)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_240;
#undef	ADO_Reserved_240
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_241
#define ADO_Reserved_241	GUID_BUILDER(ADO_Reserved_241,C4BB086F,5B11,4C67,98,6C,8C,D4,8C,5C,E3,8B)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_241;
#undef	ADO_Reserved_241
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_242
#define ADO_Reserved_242	GUID_BUILDER(ADO_Reserved_242,F1C4A502,4744,478F,87,71,C6,94,CC,2D,F7,B6)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_242;
#undef	ADO_Reserved_242
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_243
#define ADO_Reserved_243	GUID_BUILDER(ADO_Reserved_243,2CD39761,F389,4F5E,BE,91,A6,B9,1B,18,AD,12)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_243;
#undef	ADO_Reserved_243
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_244
#define ADO_Reserved_244	GUID_BUILDER(ADO_Reserved_244,8895BA8F,0CB7,4354,A8,EA,CD,9D,F4,1B,F8,88)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_244;
#undef	ADO_Reserved_244
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_245
#define ADO_Reserved_245	GUID_BUILDER(ADO_Reserved_245,71E0B0DC,1245,441D,92,92,32,71,3F,57,97,7A)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_245;
#undef	ADO_Reserved_245
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_246
#define ADO_Reserved_246	GUID_BUILDER(ADO_Reserved_246,7604D0CB,F137,472D,8B,4C,85,66,72,9A,CF,03)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_246;
#undef	ADO_Reserved_246
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_247
#define ADO_Reserved_247	GUID_BUILDER(ADO_Reserved_247,94C9B5AC,8309,4F4B,8E,68,C4,37,7E,C2,B7,91)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_247;
#undef	ADO_Reserved_247
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_248
#define ADO_Reserved_248	GUID_BUILDER(ADO_Reserved_248,0E555180,5E2C,4BF6,90,A0,1B,36,3D,4B,B9,99)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_248;
#undef	ADO_Reserved_248
#endif // IMMEDIATE_GUID_USE

// ADO_Reserved_249
#define ADO_Reserved_249	GUID_BUILDER(ADO_Reserved_249,C077D666,6988,4EAC,A5,52,61,61,55,F9,6A,12)
#ifdef IMMEDIATE_GUID_USE
ADO_Reserved_249;
#undef	ADO_Reserved_249
#endif // IMMEDIATE_GUID_USE

#endif // RESERVED_GUIDS_BEYOND_THIS_POINT
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\vc7addon\devtools\common\win32sdk\include\adptif.h ===
/*++

Copyright (c) 1995-1999  Microsoft Corporation

Module Name:


Abstract:
	Router interface with IPX stack (to be replaced by WinSock 2.0)


Author:

	Vadim Eydelman

Revision History:

--*/
#ifndef _IPX_ADAPTER_
#define _IPX_ADAPTER_

#if _MSC_VER > 1000
#pragma once
#endif

typedef struct _ADDRESS_RESERVED {
	UCHAR			Reserved[28];
} ADDRESS_RESERVED, *PADDRESS_RESERVED;

/*++

        C r e a t e S o c k e t P o r t

Routine Description:

	Creates port to communicate over IPX socket with direct access to NIC

Arguments:
	Socket	- IPX socket number to use (network byte order)

Return Value:
	Handle to communication port that provides NIC oriented interface
	to IPX stack.  Returns INVALID_HANDLE_VALUE if port can not be opened

--*/
HANDLE WINAPI
CreateSocketPort (
	IN USHORT	Socket
);

/*++

        D e l e t e S o c k e t P o r t

Routine Description:

	Cancel all the outstandng requests and dispose of all the resources
	allocated for communication port

Arguments:

	Handle	- Handle to communication port to be disposed of

Return Value:

	NO_ERROR - success
	Windows error code - operation failed
--*/
DWORD WINAPI
DeleteSocketPort (
	IN HANDLE	Handle
);

/*++

        I p x R e c v P a c k e t

Routine Description:

	Enqueue request to receive IPX packet.

Arguments:
	Handle			- Handle to socket port to use
	IpxPacket		- buffer for ipx packet (complete with header)
	IpxPacketLength - length of the buffer
	pReserved		- buffer to exchange NIC information with IPX stack
					(current implementation requires that memory allocated
					for this buffer is immediately followed by the
					IpxPacket buffer)
	lpOverlapped	- structure to be used for async IO, fields are set
					as follows:
						Internal		- Reserved, must be 0
						InternalHigh	- Reserved, must be 0
						Offset			- Reserved, must be 0
						OffsetHigh		- Reserved, must be 0
						hEvent			- event to be signalled when IO
										completes or NULL if CompletionRoutine
										is to be called
	CompletionRoutine -  to be called when IO operation is completes

Return Value:

	NO_ERROR		- if lpOverlapped->hEvent!=NULL, then receive has
					successfully completed (do not need to wait on event,
					however it will be signalled anyway), otherwise,
					receive operation has started and completion routine will
					be called when done (possibly it has been called even
					before this routine returned)
	ERROR_IO_PENDING - only returned if lpOverlapped->hEvent!=NULL and
					receive could not be completed immediately, event will
					be signalled when operation is done:
					call GetOverlapedResult to retrieve result of
					the operation
	other (windows error code) - operation could not be started
					(completion routine won't be called/event won't be
					signalled)
--*/
DWORD WINAPI
IpxRecvPacket (
	IN HANDLE 							Handle,
	OUT PUCHAR 							IpxPacket,
	IN ULONG							IpxPacketLength,
	OUT PADDRESS_RESERVED				lpReserved,
	IN LPOVERLAPPED						lpOverlapped,
	IN LPOVERLAPPED_COMPLETION_ROUTINE	CompletionRoutine
);

/* Use this to retrieve NIC index once IO completes */
#define  GetNicIdx(pReserved)	((ULONG)*((USHORT *)(pReserved+2)))


/*++

        I p x S e n d P a c k e t

Routine Description:

	Enqueue request to send IPX packet.

Arguments:

	Handle			- Handle to socket port to use
	AdapterIdx		- NIC index on which to send
	IpxPacket		- IPX packet complete with header
	IpxPacketLength - length of the packet
	pReserved		- buffer to exchange NIC info with IPX stack
	lpOverlapped	- structure to be used for async IO, fields are set
					as follows:
						Internal		- Reserved, must be 0
						InternalHigh	- Reserved, must be 0
						Offset			- Reserved, must be 0
						OffsetHigh		- Reserved, must be 0
						hEvent			- event to be signalled when IO
										completes or NULL if CompletionRoutine
										is to be called
	CompletionRoutine -  to be called when IO operation is completes

Return Value:

	NO_ERROR		- if lpOverlapped->hEvent!=NULL, then send has
					successfully completed (do not need to wait on event,
					however it will be signalled anyway), otherwise,
					send operation has started and completion routine will
					be called when done (possibly it has been called even
					before this routine returned)
	ERROR_IO_PENDING - only returned if lpOverlapped->hEvent!=NULL and
					send could not be completed immediately, event will
					be signalled when operation is done:
					call GetOverlapedResult to retrieve result of
					the operation
	other (windows error code) - operation could not be started
					(completion routine won't be called/event won't be
					signalled)

--*/
DWORD WINAPI
IpxSendPacket (
	IN HANDLE							Handle,
	IN ULONG							AdapterIdx,
	IN PUCHAR							IpxPacket,
	IN ULONG							IpxPacketLength,
	IN PADDRESS_RESERVED				lpReserved,
	IN LPOVERLAPPED						lpOverlapped,
	IN LPOVERLAPPED_COMPLETION_ROUTINE	CompletionRoutine
);

#endif // _IPX_ADAPTER_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\vc7addon\devtools\common\win32sdk\include\adsdb.h ===
//+---------------------------------------------------------------------------
//  Copyright (C) 1996-1999, Microsoft Corporation.
//
//  File:       adsdb.h
//
//  Contents:   Definitions for the OLE DB provider for ADSI
//
//----------------------------------------------------------------------------

#if _MSC_VER > 1000
#pragma once
#endif

//
// printer status values
//

#ifdef __cplusplus
extern "C" {
#endif

// Most of the constants have been moved into an enum in adstype.h and
// are available publicly in iads.h. This file has been left here so that
// old references to adsdb.h do not break compiles.

#define DBPROPFLAGS_ADSISEARCH          0x0000C000

#ifdef __cplusplus
}
#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\vc7addon\devtools\common\win32sdk\include\adsnms.h ===
//+---------------------------------------------------------------------------
//  Copyright (C) 1996-1999, Microsoft Corporation.
//
//  File:       oledsnms.h
//
//  Contents:   Class Names and schema definitions for ADS objects
//
//----------------------------------------------------------------------------

#if _MSC_VER > 1000
#pragma once
#endif

#ifdef __cplusplus
extern "C" {
#endif

#define NAMESPACE_CLASS_NAME    TEXT("Namespace")
#define COUNTRY_CLASS_NAME      TEXT("Country")
#define LOCALITY_CLASS_NAME     TEXT("Locality")
#define ORGANIZATION_CLASS_NAME TEXT("Organization")
#define ORGANIZATIONUNIT_CLASS_NAME TEXT("Organizational Unit")
#define DOMAIN_CLASS_NAME       TEXT("Domain")
#define COMPUTER_CLASS_NAME     TEXT("Computer")
#define USER_CLASS_NAME         TEXT("User")
#define GROUP_CLASS_NAME        TEXT("Group")
#define GLOBALGROUP_CLASS_NAME  TEXT("GlobalGroup")
#define LOCALGROUP_CLASS_NAME        TEXT("LocalGroup")
#define SERVICE_CLASS_NAME      TEXT("Service")
#define FILESERVICE_CLASS_NAME  TEXT("FileService")
#define SESSION_CLASS_NAME      TEXT("Session")
#define RESOURCE_CLASS_NAME     TEXT("Resource")
#define FILESHARE_CLASS_NAME    TEXT("FileShare")
#define PRINTER_CLASS_NAME      TEXT("PrintQueue")
#define PRINTJOB_CLASS_NAME     TEXT("PrintJob")
#define SCHEMA_CLASS_NAME       TEXT("Schema")
#define CLASS_CLASS_NAME        TEXT("Class")
#define PROPERTY_CLASS_NAME     TEXT("Property")
#define SYNTAX_CLASS_NAME       TEXT("Syntax")
#define ROOTDSE_CLASS_NAME      TEXT("RootDSE")

#define NO_SCHEMA               TEXT("")
#define DOMAIN_SCHEMA_NAME      TEXT("Domain")
#define COMPUTER_SCHEMA_NAME    TEXT("Computer")
#define USER_SCHEMA_NAME        TEXT("User")
#define GROUP_SCHEMA_NAME       TEXT("Group")
#define GLOBALGROUP_SCHEMA_NAME       TEXT("GlobalGroup")
#define LOCALGROUP_SCHEMA_NAME       TEXT("LocalGroup")
#define SERVICE_SCHEMA_NAME     TEXT("Service")
#define PRINTER_SCHEMA_NAME     TEXT("PrintQueue")
#define PRINTJOB_SCHEMA_NAME    TEXT("PrintJob")
#define FILESERVICE_SCHEMA_NAME TEXT("FileService")
#define SESSION_SCHEMA_NAME     TEXT("Session")
#define RESOURCE_SCHEMA_NAME    TEXT("Resource")
#define FILESHARE_SCHEMA_NAME   TEXT("FileShare")
#define FPNW_FILESERVICE_SCHEMA_NAME TEXT("FPNWFileService")
#define FPNW_SESSION_SCHEMA_NAME     TEXT("FPNWSession")
#define FPNW_RESOURCE_SCHEMA_NAME    TEXT("FPNWResource")
#define FPNW_FILESHARE_SCHEMA_NAME   TEXT("FPNWFileShare")

#ifdef __cplusplus
}
#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\vc7addon\devtools\common\win32sdk\include\adshlp.h ===
//+---------------------------------------------------------------------------
//
//  Microsoft Windows
//  Copyright (C) Microsoft Corporation, 1996-1999
//
//  File:       oleds.h
//
//  Contents:   Public header file for all oleds client code
//
//----------------------------------------------------------------------------

#ifndef _ADSHLP_
#define _ADSHLP_

#if _MSC_VER > 1000
#pragma once
#endif

#ifdef __cplusplus
extern "C" {
#endif

HRESULT WINAPI
ADsGetObject(
    LPCWSTR lpszPathName,
    REFIID riid,
    VOID * * ppObject
    );


HRESULT WINAPI
ADsBuildEnumerator(
    IADsContainer *pADsContainer,
    IEnumVARIANT   **ppEnumVariant
    );

HRESULT WINAPI
ADsFreeEnumerator(
    IEnumVARIANT *pEnumVariant
    );

HRESULT WINAPI
ADsEnumerateNext(
    IEnumVARIANT *pEnumVariant,
    ULONG         cElements,
    VARIANT FAR  *pvar,
    ULONG FAR    *pcElementsFetched
    );

HRESULT WINAPI
ADsBuildVarArrayStr(
    LPWSTR * lppPathNames,
    DWORD  dwPathNames,
    VARIANT * pVar
    );

HRESULT WINAPI
ADsBuildVarArrayInt(
    LPDWORD    lpdwObjectTypes,
    DWORD      dwObjectTypes,
    VARIANT * pVar
    );


HRESULT WINAPI
ADsOpenObject(
    LPCWSTR lpszPathName,
    LPCWSTR lpszUserName,
    LPCWSTR lpszPassword,
    DWORD  dwReserved,
    REFIID riid,
    void FAR * FAR * ppObject
    );

//
// Helper functions for extended error support
//

HRESULT WINAPI
ADsGetLastError(
    OUT     LPDWORD lpError,
    OUT     LPWSTR  lpErrorBuf,
    IN      DWORD   dwErrorBufLen,
    OUT     LPWSTR  lpNameBuf,
    IN      DWORD   dwNameBufLen
    );

VOID WINAPI
ADsSetLastError(
    IN  DWORD   dwErr,
    IN  LPCWSTR  pszError,
    IN  LPCWSTR  pszProvider
    );


VOID WINAPI
ADsFreeAllErrorRecords(
    VOID);

LPVOID WINAPI
AllocADsMem(
    DWORD cb
);

BOOL WINAPI
FreeADsMem(
   LPVOID pMem
);

LPVOID WINAPI
ReallocADsMem(
   LPVOID pOldMem,
   DWORD cbOld,
   DWORD cbNew
);

LPWSTR WINAPI
AllocADsStr(
    LPCWSTR pStr
);

BOOL WINAPI
FreeADsStr(
   LPWSTR pStr
);


BOOL WINAPI
ReallocADsStr(
   LPWSTR *ppStr,
   LPWSTR pStr
);


HRESULT WINAPI
ADsEncodeBinaryData (
   PBYTE   pbSrcData,
   DWORD   dwSrcLen,
   LPWSTR  * ppszDestData
   );

HRESULT WINAPI
ADsDecodeBinaryData (
   LPCWSTR szSrcData,
   PBYTE  *ppbDestData,
   ULONG  *pdwDestLen
   );

HRESULT WINAPI
PropVariantToAdsType(
    VARIANT * pVariant,
    DWORD dwNumVariant,
    PADSVALUE *ppAdsValues,
    PDWORD pdwNumValues
    );

HRESULT WINAPI
AdsTypeToPropVariant(
    PADSVALUE pAdsValues,
    DWORD dwNumValues,
    VARIANT * pVariant
    );

void WINAPI
AdsFreeAdsValues(
    PADSVALUE pAdsValues,
    DWORD dwNumValues
    );

//
// Helper routines to convert IADsSecurityDescriptor to a binary
// security descriptor and also to convert a binary SD to 
// IADsSecurityDescriptor.
//
HRESULT WINAPI
BinarySDToSecurityDescriptor(
    PSECURITY_DESCRIPTOR  pSecurityDescriptor,
    VARIANT *pVarsec, 
    LPCWSTR pszServerName,
    LPCWSTR userName,
    LPCWSTR passWord,
    DWORD dwFlags
    );

HRESULT WINAPI
SecurityDescriptorToBinarySD(
    VARIANT vVarSecDes,
    PSECURITY_DESCRIPTOR * ppSecurityDescriptor,
    PDWORD pdwSDLength,
    LPCWSTR pszServerName,
    LPCWSTR userName,
    LPCWSTR passWord,
    DWORD dwFlags
    );

#if DBG

extern LIST_ENTRY ADsMemList ;

extern CRITICAL_SECTION ADsMemCritSect ;

VOID InitADsMem(
    VOID
    ) ;

VOID AssertADsMemLeaks(
    VOID
    ) ;


VOID
DumpMemoryTracker();


#else

#define InitADsMem()
#define AssertADsMemLeaks()

#define DumpMemoryTracker()



#endif


#ifdef __cplusplus
}
#endif

#endif // _ADSHLP_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\vc7addon\devtools\common\win32sdk\include\adserr.h ===
/*++ BUILD Version: 0001    // Increment this if a change has global effects

Copyright (c) 1991-1999  Microsoft Corporation

Module Name:

    oledserr.mc

Abstract:

    Error codes for ADs

Revision History:

--*/


#if _MSC_VER > 1000
#pragma once
#endif

// ---------------------- HRESULT value definitions -----------------
//
// HRESULT definitions
//

#ifdef RC_INVOKED
#define _HRESULT_TYPEDEF_(_sc) _sc
#else // RC_INVOKED
#define _HRESULT_TYPEDEF_(_sc) ((HRESULT)_sc)
#endif // RC_INVOKED

//
//  Values are 32 bit values layed out as follows:
//
//   3 3 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1
//   1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0
//  +---+-+-+-----------------------+-------------------------------+
//  |Sev|C|R|     Facility          |               Code            |
//  +---+-+-+-----------------------+-------------------------------+
//
//  where
//
//      Sev - is the severity code
//
//          00 - Success
//          01 - Informational
//          10 - Warning
//          11 - Error
//
//      C - is the Customer code flag
//
//      R - is a reserved bit
//
//      Facility - is the facility code
//
//      Code - is the facility's status code
//
//
// Define the facility codes
//
#define FACILITY_WINDOWS                 8
#define FACILITY_STORAGE                 3
#define FACILITY_RPC                     1
#define FACILITY_SSPI                    9
#define FACILITY_WIN32                   7
#define FACILITY_CONTROL                 10
#define FACILITY_NULL                    0
#define FACILITY_ITF                     4
#define FACILITY_DISPATCH                2


//
// Define the severity codes
//


//
// MessageId: E_ADS_BAD_PATHNAME
//
// MessageText:
//
//  An invalid directory pathname was passed
//
#define E_ADS_BAD_PATHNAME               _HRESULT_TYPEDEF_(0x80005000L)

//
// MessageId: E_ADS_INVALID_DOMAIN_OBJECT
//
// MessageText:
//
//  An unknown directory domain object was requested
//
#define E_ADS_INVALID_DOMAIN_OBJECT      _HRESULT_TYPEDEF_(0x80005001L)

//
// MessageId: E_ADS_INVALID_USER_OBJECT
//
// MessageText:
//
//  An unknown directory user object was requested
//
#define E_ADS_INVALID_USER_OBJECT        _HRESULT_TYPEDEF_(0x80005002L)

//
// MessageId: E_ADS_INVALID_COMPUTER_OBJECT
//
// MessageText:
//
//  An unknown directory computer object was requested
//
#define E_ADS_INVALID_COMPUTER_OBJECT    _HRESULT_TYPEDEF_(0x80005003L)

//
// MessageId: E_ADS_UNKNOWN_OBJECT
//
// MessageText:
//
//  An unknown directory object was requested
//
#define E_ADS_UNKNOWN_OBJECT             _HRESULT_TYPEDEF_(0x80005004L)

//
// MessageId: E_ADS_PROPERTY_NOT_SET
//
// MessageText:
//
//  The specified directory property was not set
//
#define E_ADS_PROPERTY_NOT_SET           _HRESULT_TYPEDEF_(0x80005005L)

//
// MessageId: E_ADS_PROPERTY_NOT_SUPPORTED
//
// MessageText:
//
//  The specified directory property is not supported
//
#define E_ADS_PROPERTY_NOT_SUPPORTED     _HRESULT_TYPEDEF_(0x80005006L)

//
// MessageId: E_ADS_PROPERTY_INVALID
//
// MessageText:
//
//  The specified directory property is invalid
//
#define E_ADS_PROPERTY_INVALID           _HRESULT_TYPEDEF_(0x80005007L)

//
// MessageId: E_ADS_BAD_PARAMETER
//
// MessageText:
//
//  One or more input parameters are invalid
//
#define E_ADS_BAD_PARAMETER              _HRESULT_TYPEDEF_(0x80005008L)

//
// MessageId: E_ADS_OBJECT_UNBOUND
//
// MessageText:
//
//  The specified directory object is not bound to a remote resource
//
#define E_ADS_OBJECT_UNBOUND             _HRESULT_TYPEDEF_(0x80005009L)

//
// MessageId: E_ADS_PROPERTY_NOT_MODIFIED
//
// MessageText:
//
//  The specified directory object has not been modified
//
#define E_ADS_PROPERTY_NOT_MODIFIED      _HRESULT_TYPEDEF_(0x8000500AL)

//
// MessageId: E_ADS_PROPERTY_MODIFIED
//
// MessageText:
//
//  The specified directory object has been modified
//
#define E_ADS_PROPERTY_MODIFIED          _HRESULT_TYPEDEF_(0x8000500BL)

//
// MessageId: E_ADS_CANT_CONVERT_DATATYPE
//
// MessageText:
//
//  The directory datatype cannot be converted to/from a native DS datatype
//
#define E_ADS_CANT_CONVERT_DATATYPE      _HRESULT_TYPEDEF_(0x8000500CL)

//
// MessageId: E_ADS_PROPERTY_NOT_FOUND
//
// MessageText:
//
//  The directory property cannot be found in the cache.
//
#define E_ADS_PROPERTY_NOT_FOUND         _HRESULT_TYPEDEF_(0x8000500DL)

//
// MessageId: E_ADS_OBJECT_EXISTS
//
// MessageText:
//
//  The directory object exists.
//
#define E_ADS_OBJECT_EXISTS              _HRESULT_TYPEDEF_(0x8000500EL)

//
// MessageId: E_ADS_SCHEMA_VIOLATION
//
// MessageText:
//
//  The attempted action violates the DS schema rules.
//
#define E_ADS_SCHEMA_VIOLATION           _HRESULT_TYPEDEF_(0x8000500FL)

//
// MessageId: E_ADS_COLUMN_NOT_SET
//
// MessageText:
//
//  The specified column in the directory was not set.
//
#define E_ADS_COLUMN_NOT_SET             _HRESULT_TYPEDEF_(0x80005010L)

//
// MessageId: S_ADS_ERRORSOCCURRED
//
// MessageText:
//
//  One or more errors occurred
//
#define S_ADS_ERRORSOCCURRED             _HRESULT_TYPEDEF_(0x00005011L)

//
// MessageId: S_ADS_NOMORE_ROWS
//
// MessageText:
//
//  No more rows to be obatained by the search result.
//
#define S_ADS_NOMORE_ROWS                _HRESULT_TYPEDEF_(0x00005012L)

//
// MessageId: S_ADS_NOMORE_COLUMNS
//
// MessageText:
//
//  No more columns to be obatained for the current row.
//
#define S_ADS_NOMORE_COLUMNS             _HRESULT_TYPEDEF_(0x00005013L)

//
// MessageId: E_ADS_INVALID_FILTER
//
// MessageText:
//
//  The search filter specified is invalid
//
#define E_ADS_INVALID_FILTER             _HRESULT_TYPEDEF_(0x80005014L)
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\vc7addon\devtools\common\win32sdk\include\adtgen.h ===
//+-----------------------------------------------------------------------
//
// Microsoft Windows
//
// Copyright (c) Microsoft Corporation 2000
//
// File:        A D T G E N . H
//
// Contents:    definitions of types/functions required for 
//              generating generic audits.
//
//              !!!WARNING!!!
//              This file is included by lsarpc.idl, therefore, if you
//              change it, make sure to clean build the entire DS depot.
//
//
// History:     
//   07-January-2000  kumarp        created
//
//------------------------------------------------------------------------

#ifndef _ADTGEN_H
#define _ADTGEN_H

//
// type of audit 
//
// AUDIT_TYPE_LEGACY 
//     In this case the audit event schema is stored in a .mc file.
//
// AUDIT_TYPE_WMI    
//     The schema is stored in WMI. (currently not supported)
//

#define AUDIT_TYPE_LEGACY 1
#define AUDIT_TYPE_WMI    2

//
// Type of parameters passed in the AUDIT_PARAMS.Parameters array
// 
// Use the AdtInitParams function to initialize and prepare 
// an array of audit parameters.
//

typedef enum _AUDIT_PARAM_TYPE
{
    //
    // do we need this?
    //

    APT_None = 1,

    //
    // NULL terminated string 
    //

    APT_String,

    //
    // unsigned long
    //

    APT_Ulong,

    //
    // a pointer. use for specifying handles/pointers
    // (32 bit on 32 bit systems and 64 bit on 64 bit systems)
    // Note that the memory to which the pointer points to
    // is not marshalled when using this type. Use this when you
    // are interested in the absolute value of the pointer.
    // A good example of this is when specifying HANDLE values.
    //

    APT_Pointer,

    //
    // SID
    //

    APT_Sid,

    //
    // Logon ID (LUID)
    //

    APT_LogonId,

    //
    // Object Type List
    //

    APT_ObjectTypeList,
    
} AUDIT_PARAM_TYPE;

// 
// There are two types of flags that can be used with a parameter.
//
// - formatting flag
//   This defines the appearance of a parameter when
//   written to the eventlog. Such flags may become obsolete
//   when we move to WMI auditing.
//
// - control flag
//   This causes a specified action to be taken that affects 
//   a parameter value.
//
//   For example:
//   If you use the AP_PrimaryLogonId/AP_ClientLogonId flag,
//   the system will capture the logon-id from the process/thread token.
//

#define AP_ParamTypeBits  8
#define AP_ParamTypeMask  0x000000ffL

//
// the flags values below have overlapping values. this is ok since
// the scope of each flag is limited to the type to which it applies.
//

//
// APT_Ulong : format flag : causes a number to appear in hex
//

#define AP_FormatHex      (0x0001L << AP_ParamTypeBits)

//
// APT_Ulong : format flag : causes a number to be treated as access-mask.
//                           The meaning of each bit depends on the associated
//                           object type.
//

#define AP_AccessMask     (0x0002L << AP_ParamTypeBits)

                                                       
//
// APT_String : format flag : causes a string to be treated as a file-path
//

#define AP_Filespec       (0x0001L << AP_ParamTypeBits)

//
// APT_LogonId : control flag : logon-id is captured from the process token
//

#define AP_PrimaryLogonId (0x0001L << AP_ParamTypeBits)

//
// APT_LogonId : control flag : logon-id is captured from the thread token
//

#define AP_ClientLogonId  (0x0002L << AP_ParamTypeBits)


//
// internal helper macros
//

#define ApExtractType(TypeFlags)  ((AUDIT_PARAM_TYPE)(TypeFlags & AP_ParamTypeMask))
#define ApExtractFlags(TypeFlags) ((TypeFlags & ~AP_ParamTypeMask))

//
// Element of an object-type-list
//
// The AUDIT_OBJECT_TYPES structure identifies an object type element 
// in a hierarchy of object types. The AccessCheckByType functions use 
// an array of such structures to define a hierarchy of an object and 
// its subobjects, such as property sets and properties.
//

typedef struct _AUDIT_OBJECT_TYPE
{
    GUID        ObjectType;     // guid of the (sub)object
    USHORT      Flags;          // currently not defined
    USHORT      Level;          // level within the hierarchy. 
                                // 0 is the root level
    ACCESS_MASK AccessMask;     // access-mask for this (sub)object
} AUDIT_OBJECT_TYPE, *PAUDIT_OBJECT_TYPE;

typedef struct _AUDIT_OBJECT_TYPES
{
    USHORT Count;               // number of object-types in pObjectTypes
    USHORT Flags;               // currently not defined
#ifdef MIDL_PASS
    [size_is(Count)]
#endif
    AUDIT_OBJECT_TYPE* pObjectTypes; // array of object-types
} AUDIT_OBJECT_TYPES, *PAUDIT_OBJECT_TYPES;


//
// Structure that defines a single audit parameter.
//
// LsaGenAuditEvent accepts an array of such elements to
// represent the parameters of the audit to be generated.
//
// It is best to initialize this structure using AdtInitParams function.
// This will ensure compatibility with any future changes to this
// structure.
//

typedef struct _AUDIT_PARAM
{
    AUDIT_PARAM_TYPE Type;      // type
    ULONG Length;               // currently unused
    DWORD Flags;                // currently unused

#ifdef MIDL_PASS
    [switch_type(AUDIT_PARAM_TYPE),switch_is(Type)]
#endif
    union 
    {
#ifdef MIDL_PASS
        [default]
#endif
        ULONG_PTR Data0;

#ifdef MIDL_PASS
        [case(APT_String)]
        [string]
#endif
        PWSTR  String;

        
#ifdef MIDL_PASS
        [case(APT_Ulong,
              APT_Pointer)]
#endif
        ULONG_PTR u;
        
#ifdef MIDL_PASS
        [case(APT_Sid)]
#endif
        SID* psid;
        
#ifdef MIDL_PASS
        [case(APT_LogonId)]
#endif
        ULONG LogonId_LowPart;

#ifdef MIDL_PASS
        [case(APT_ObjectTypeList)]
#endif
        AUDIT_OBJECT_TYPES* pObjectTypes;
    };
    
#ifdef MIDL_PASS
    [switch_type(AUDIT_PARAM_TYPE),switch_is(Type)]
#endif
    union 
    {
#ifdef MIDL_PASS
        [default]
#endif
        ULONG_PTR Data1;

#ifdef MIDL_PASS
        [case(APT_LogonId)]
#endif
        LONG LogonId_HighPart;
    };
    
} AUDIT_PARAM, *PAUDIT_PARAM;


//
// Audit control flags. To be used with AUDIT_PARAMS.Flags
//

#define APF_AuditFailure 0x00000000  // generate a failure audit
#define APF_AuditSuccess 0x00000001  // generate a success audit when set,
                                     // a failure audit otherwise. 

//
// set of valid audit control flags 
//

#define APF_ValidFlags   (APF_AuditSuccess)

//
// Audit parameters passed to LsaGenAuditEvent
//

typedef struct _AUDIT_PARAMS
{
    ULONG  Length;              // size in bytes
    DWORD  Flags;               // currently unused
    USHORT Count;               // number of parameters
#ifdef MIDL_PASS
    [size_is(Count)]
#endif    
    AUDIT_PARAM* Parameters;    // array of parameters
} AUDIT_PARAMS, *PAUDIT_PARAMS;

//
// Defines the elements of a legacy audit event.
//

typedef struct _AUTHZ_AUDIT_EVENT_TYPE_LEGACY
{
    //
    // Audit category ID
    //

    USHORT CategoryId;

    //
    // Audit event ID
    //

    USHORT AuditId;

    //
    // Parameter count
    //

    USHORT ParameterCount;
    
} AUTHZ_AUDIT_EVENT_TYPE_LEGACY, *PAUTHZ_AUDIT_EVENT_TYPE_LEGACY;

typedef
#ifdef MIDL_PASS
[switch_type(BYTE)]
#endif
union _AUTHZ_AUDIT_EVENT_TYPE_UNION
{
#ifdef MIDL_PASS
        [case(AUDIT_TYPE_LEGACY)]
#endif
        AUTHZ_AUDIT_EVENT_TYPE_LEGACY Legacy;
} AUTHZ_AUDIT_EVENT_TYPE_UNION, *PAUTHZ_AUDIT_EVENT_TYPE_UNION;

//
// description of an audit event
//

typedef
struct _AUTHZ_AUDIT_EVENT_TYPE_OLD
{
    // version number

    ULONG Version;
    DWORD dwFlags;
    LONG  RefCount;
    ULONG_PTR hAudit;
    LUID  LinkId;
#ifdef MIDL_PASS
    [switch_is(Version)] 
#endif
    AUTHZ_AUDIT_EVENT_TYPE_UNION u;

} AUTHZ_AUDIT_EVENT_TYPE_OLD;

typedef
#ifdef MIDL_PASS
[handle]
#endif
AUTHZ_AUDIT_EVENT_TYPE_OLD* PAUTHZ_AUDIT_EVENT_TYPE_OLD;

typedef
#ifdef MIDL_PASS
[context_handle]
#endif
PVOID AUDIT_HANDLE, *PAUDIT_HANDLE;

BOOL
AuthzpRegisterAuditEvent(
    IN  PAUTHZ_AUDIT_EVENT_TYPE_OLD pAuditEventType,
    OUT PAUDIT_HANDLE     phAuditContext
    );

BOOL
AuthzpUnregisterAuditEvent(
    IN OUT AUDIT_HANDLE* phAuditContext
    );

#endif //_ADTGEN_H
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\vc7addon\devtools\common\win32sdk\include\aftpapi.h ===
/*
 * NOTE:
 * The appropriate system value must be defined for your platform.
 * The following system values are supported:
 *     CM_OS2
 *     CM_DOS
 *     CM_AIX
 *     CM_MVS
 *     CM_VM
 *     CM_OS400
 *     CM_WINNT
 *
 * This is necessary for the proper setting of
 * AFTP_ENTRY and AFTP_PTR below.
 */

/*
 * This file is organized as follows:
 *  - product specific preprocessor directives that must be before all
 *    other declarations
 *  - AFTP type definitions
 *  - AFTP constants definitions
 *  - AFTP function long to short name mapping
 *  - AFTP function prototypes
 */

#ifndef _aftpapi_h
#define _aftpapi_h


#if defined (CM_WINNT)                                                  
                                                                        
#define WINSNA                                                          
#define AFTP_ENTRY extern void WINAPI                                   
#define AFTP_PTR *                                                      
                                                                        
#elif   defined( CM_DOS ) || defined( CM_OS2 )

#if   !defined(__32BIT__)
#     define AFTP_ENTRY extern void pascal far _loadds
#     define AFTP_PTR far *
#else

#     define AFTP_ENTRY extern void _Far16 _Pascal
#     define AFTP_PTR * _Seg16

#endif

#elif defined( CM_MVS ) || defined( CM_OS400 ) || \
      defined( CM_VM ) || defined(CM_AIX)

#     define AFTP_ENTRY extern void
#     define AFTP_PTR *

#endif


/**********************************************************************
 * AFTP Type Definitions
 **********************************************************************/

typedef unsigned char AFTP_HANDLE_TYPE[8];

typedef unsigned long AFTP_ALLOCATION_SIZE_TYPE;

typedef unsigned long AFTP_BLOCK_SIZE_TYPE;

typedef unsigned long AFTP_BOOLEAN_TYPE;


#if defined (CM_WINNT)                                                  
typedef signed long AFTP_DATA_TYPE_TYPE;                                
#else                                                                   
typedef unsigned long AFTP_DATA_TYPE_TYPE;
#endif                                                                  

typedef unsigned long AFTP_DATE_MODE_TYPE;

typedef unsigned long AFTP_DETAIL_LEVEL_TYPE;

typedef unsigned long AFTP_FILE_MODE_TYPE;

typedef unsigned long AFTP_FILE_SIZE_TYPE;

typedef unsigned long AFTP_FILE_TIME_TYPE;

typedef unsigned long AFTP_FILE_TYPE_TYPE;

typedef unsigned long AFTP_INFO_LEVEL_TYPE;

typedef unsigned long AFTP_LENGTH_TYPE;

typedef unsigned long AFTP_RETURN_CODE_TYPE;

typedef unsigned long AFTP_RECORD_FORMAT_TYPE;

typedef unsigned long AFTP_RECORD_LENGTH_TYPE;

typedef unsigned long AFTP_SECURITY_TYPE;

typedef unsigned long AFTP_TRACE_LEVEL_TYPE;

typedef unsigned long AFTP_VERSION_TYPE;

typedef unsigned long AFTP_WRITE_MODE_TYPE;


/**********************************************************************
 *  AFTP Constant Definitions
 **********************************************************************/

/* Supported Data Transfer Types */

#define AFTP_ASCII            	((AFTP_DATA_TYPE_TYPE)0)
#define AFTP_BINARY           	((AFTP_DATA_TYPE_TYPE)1)
#define AFTP_EBCDIC           	((AFTP_DATA_TYPE_TYPE)2)
#define AFTP_DEFAULT_DATA_TYPE  ((AFTP_DATA_TYPE_TYPE)3)               /*W32*/


/* Supported File Date Modes */

#define AFTP_OLDDATE          ((AFTP_DATE_MODE_TYPE)0)
#define AFTP_NEWDATE          ((AFTP_DATE_MODE_TYPE)1)

/* Format Error Detail Levels */

#define AFTP_DETAIL_RC      ((AFTP_DETAIL_LEVEL_TYPE)1)
#define AFTP_DETAIL_SECOND  ((AFTP_DETAIL_LEVEL_TYPE)2)
#define AFTP_DETAIL_LOG     ((AFTP_DETAIL_LEVEL_TYPE)4)
#define AFTP_DETAIL_INFO    ((AFTP_DETAIL_LEVEL_TYPE)8)
#define AFTP_DETAIL_ALL     ((AFTP_DETAIL_LEVEL_TYPE)15)

/* File Types, Requested and Returned */

#define AFTP_FILE             ((AFTP_FILE_TYPE_TYPE)1)
#define AFTP_DIRECTORY        ((AFTP_FILE_TYPE_TYPE)2)
#define AFTP_ALL_FILES        ((AFTP_FILE_TYPE_TYPE) \
                                  (AFTP_FILE | AFTP_DIRECTORY))

/* Info Level for aftp_dir_open() */

#define AFTP_NATIVE_FILENAMES   ((AFTP_INFO_LEVEL_TYPE)0)
#define AFTP_NATIVE_ATTRIBUTES  ((AFTP_INFO_LEVEL_TYPE)1)

/* Return Codes */

#define AFTP_RC_OK                     ((AFTP_RETURN_CODE_TYPE)0)
#define AFTP_RC_COMM_FAIL_NO_RETRY     ((AFTP_RETURN_CODE_TYPE)1)
#define AFTP_RC_COMM_FAIL_RETRY        ((AFTP_RETURN_CODE_TYPE)2)
#define AFTP_RC_COMM_CONFIG_LOCAL      ((AFTP_RETURN_CODE_TYPE)3)
#define AFTP_RC_COMM_CONFIG_REMOTE     ((AFTP_RETURN_CODE_TYPE)4)
#define AFTP_RC_SECURITY_NOT_VALID     ((AFTP_RETURN_CODE_TYPE)5)
#define AFTP_RC_FAIL_INPUT_ERROR       ((AFTP_RETURN_CODE_TYPE)6)
#define AFTP_RC_FAIL_RETRY             ((AFTP_RETURN_CODE_TYPE)7)
#define AFTP_RC_FAIL_NO_RETRY          ((AFTP_RETURN_CODE_TYPE)8)
#define AFTP_RC_FAIL_FATAL             ((AFTP_RETURN_CODE_TYPE)9)
#define AFTP_RC_PROGRAM_INTERNAL_ERROR ((AFTP_RETURN_CODE_TYPE)10)
#define AFTP_RC_PARAMETER_CHECK        ((AFTP_RETURN_CODE_TYPE)11)
#define AFTP_RC_HANDLE_NOT_VALID       ((AFTP_RETURN_CODE_TYPE)12)
#define AFTP_RC_STATE_CHECK            ((AFTP_RETURN_CODE_TYPE)13)
#define AFTP_RC_BUFFER_TOO_SMALL       ((AFTP_RETURN_CODE_TYPE)14)

/* Supported Record Formats */

#define AFTP_DEFAULT_RECORD_FORMAT ((AFTP_RECORD_FORMAT_TYPE)0)
#define AFTP_V                     ((AFTP_RECORD_FORMAT_TYPE)1)
#define AFTP_VA                    ((AFTP_RECORD_FORMAT_TYPE)2)
#define AFTP_VB                    ((AFTP_RECORD_FORMAT_TYPE)3)
#define AFTP_VM                    ((AFTP_RECORD_FORMAT_TYPE)4)
#define AFTP_VS                    ((AFTP_RECORD_FORMAT_TYPE)5)
#define AFTP_VBA                   ((AFTP_RECORD_FORMAT_TYPE)6)
#define AFTP_VBM                   ((AFTP_RECORD_FORMAT_TYPE)7)
#define AFTP_VBS                   ((AFTP_RECORD_FORMAT_TYPE)8)
#define AFTP_VSA                   ((AFTP_RECORD_FORMAT_TYPE)9)
#define AFTP_VSM                   ((AFTP_RECORD_FORMAT_TYPE)10)
#define AFTP_VBSA                  ((AFTP_RECORD_FORMAT_TYPE)11)
#define AFTP_VBSM                  ((AFTP_RECORD_FORMAT_TYPE)12)
#define AFTP_F                     ((AFTP_RECORD_FORMAT_TYPE)13)
#define AFTP_FA                    ((AFTP_RECORD_FORMAT_TYPE)14)
#define AFTP_FB                    ((AFTP_RECORD_FORMAT_TYPE)15)
#define AFTP_FM                    ((AFTP_RECORD_FORMAT_TYPE)16)
#define AFTP_FBA                   ((AFTP_RECORD_FORMAT_TYPE)17)
#define AFTP_FBM                   ((AFTP_RECORD_FORMAT_TYPE)18)
#define AFTP_FBS                   ((AFTP_RECORD_FORMAT_TYPE)19)
#define AFTP_FBSM                  ((AFTP_RECORD_FORMAT_TYPE)20)
#define AFTP_FBSA                  ((AFTP_RECORD_FORMAT_TYPE)21)
#define AFTP_U                     ((AFTP_RECORD_FORMAT_TYPE)22)
#define AFTP_UA                    ((AFTP_RECORD_FORMAT_TYPE)23)
#define AFTP_UM                    ((AFTP_RECORD_FORMAT_TYPE)24)

/* Conversation Security Type Values */

#define AFTP_SECURITY_NONE     ((AFTP_SECURITY_TYPE)0)
#define AFTP_SECURITY_SAME     ((AFTP_SECURITY_TYPE)1)
#define AFTP_SECURITY_PROGRAM  ((AFTP_SECURITY_TYPE)2)

/* Trace Levels */

#define AFTP_LVL_NO_TRACING            ((AFTP_TRACE_LEVEL_TYPE)   (0))
#define AFTP_LVL_FAILURES              ((AFTP_TRACE_LEVEL_TYPE)  (10))
#define AFTP_LVL_API                   ((AFTP_TRACE_LEVEL_TYPE)  (20))
#define AFTP_LVL_MODULE                ((AFTP_TRACE_LEVEL_TYPE)  (30))
#define AFTP_LVL_FUNCTION              ((AFTP_TRACE_LEVEL_TYPE)  (40))
#define AFTP_LVL_IO_OPEN_CLOSE         ((AFTP_TRACE_LEVEL_TYPE)  (50))
#define AFTP_LVL_LINE_FLOW             ((AFTP_TRACE_LEVEL_TYPE) (100))
#define AFTP_LVL_IO_READ_WRITE         ((AFTP_TRACE_LEVEL_TYPE) (110))
#define AFTP_LVL_STATUS_DUMP           ((AFTP_TRACE_LEVEL_TYPE) (120))
#define AFTP_LVL_VARIABLE              ((AFTP_TRACE_LEVEL_TYPE) (130))
#define AFTP_LVL_LOCATION              ((AFTP_TRACE_LEVEL_TYPE) (140))
#define AFTP_LVL_DATA_TRACE            ((AFTP_TRACE_LEVEL_TYPE) (170))
#define AFTP_LVL_LOOPLOC               ((AFTP_TRACE_LEVEL_TYPE) (200))

#define AFTP_MAX_TRACE_LVL              AFTP_LVL_LOOPLOC

/* Supported File Write Modes */

#define AFTP_REPLACE          ((AFTP_WRITE_MODE_TYPE)0)
#define AFTP_APPEND           ((AFTP_WRITE_MODE_TYPE)1)
#define AFTP_NOREPLACE        ((AFTP_WRITE_MODE_TYPE)2)
#define AFTP_STOREUNIQUE      ((AFTP_WRITE_MODE_TYPE)3)

/* AFTP buffer lengths */

#define AFTP_FILE_NAME_SIZE     ((AFTP_LENGTH_TYPE)512)
#define AFTP_FQLU_NAME_SIZE     ((AFTP_LENGTH_TYPE)18)
#define AFTP_MODE_NAME_SIZE     ((AFTP_LENGTH_TYPE)9)
#define AFTP_PASSWORD_SIZE      ((AFTP_LENGTH_TYPE)11)
#define AFTP_TP_NAME_SIZE       ((AFTP_LENGTH_TYPE)65)
#define AFTP_USERID_SIZE        ((AFTP_LENGTH_TYPE)11)
#define AFTP_MESSAGE_SIZE       ((AFTP_LENGTH_TYPE)512)
#define AFTP_DATA_TYPE_SIZE     ((AFTP_LENGTH_TYPE)7)
#define AFTP_DATE_MODE_SIZE     ((AFTP_LENGTH_TYPE)4)
#define AFTP_RECORD_FORMAT_SIZE ((AFTP_LENGTH_TYPE)8)
#define AFTP_WRITE_MODE_SIZE    ((AFTP_LENGTH_TYPE)12)
#define AFTP_INI_MESSAGE_SIZE   ((AFTP_LENGTH_TYPE)1024)
#define AFTP_SYSTEM_INFO_SIZE   ((AFTP_LENGTH_TYPE)512)

/**********************************************************************
 *  AFTP Long to Short Function Name Mapping
 **********************************************************************/

#define aftp_change_dir                 FTCD
#define aftp_close                      FTCLOSE
#define aftp_connect                    FTCONN
#define aftp_create                     FTCREATE
#define aftp_create_dir                 FTCRTDIR
#define aftp_delete                     FTDEL
#define aftp_destroy                    FTDESTRY
#define aftp_dir_close                  FTDIRCLS
#define aftp_dir_open                   FTDIROPN
#define aftp_dir_read                   FTDIRRD
#define aftp_extract_allocation_size    FTEAS
#define aftp_extract_block_size         FTEBS
#define aftp_extract_date_mode          FTEDM
#define aftp_extract_destination        FTEDST
#define aftp_extract_data_type          FTEDT
#define aftp_extract_mode_name          FTEMN
#define aftp_extract_partner_LU_name    FTEPLU
#define aftp_extract_password           FTEPW
#define aftp_extract_record_format      FTERF
#define aftp_extract_record_length      FTERL
#define aftp_extract_security_type      FTEST
#define aftp_extract_tp_name            FTETPN
#define aftp_extract_trace_level        FTETL
#define aftp_extract_userid             FTEUI
#define aftp_extract_write_mode         FTEWM
#define aftp_format_error               FTFE
#define aftp_get_date_mode_string       FTGDMS
#define aftp_get_data_type_string       FTGDTS
#define aftp_get_record_format_string   FTGRFS
#define aftp_get_write_mode_string      FTGWMS
#define aftp_local_change_dir           FTLCD
#define aftp_local_dir_close            FTLDC
#define aftp_local_dir_open             FTLDO
#define aftp_local_dir_read             FTLDR
#define aftp_load_ini_file              FTLIF
#define aftp_local_query_current_dir    FTLQCD
#define aftp_query_bytes_transferred    FTQBT
#define aftp_query_current_dir          FTQCD
#define aftp_query_local_system_info    FTQLSI
#define aftp_query_local_version        FTQLV
#define aftp_query_system_info          FTQSYS
#define aftp_remove_dir                 FTRD
#define aftp_receive_file               FTRECV
#define aftp_rename                     FTREN
#define aftp_set_allocation_size        FTSAS
#define aftp_set_block_size             FTSBS
#define aftp_set_destination            FTSDEST
#define aftp_set_date_mode              FTSDM
#define aftp_set_data_type              FTSDT
#define aftp_send_file                  FTSEND
#define aftp_set_mode_name              FTSMN
#define aftp_set_password               FTSP
#define aftp_set_record_format          FTSRF
#define aftp_set_record_length          FTSRL
#define aftp_set_security_type          FTSST
#define aftp_set_trace_filename         FTSTF
#define aftp_set_trace_level            FTSTL
#define aftp_set_tp_name                FTSTP
#define aftp_set_userid                 FTSU
#define aftp_set_write_mode             FTSWM

#define ftcd                            FTCD
#define ftclose                         FTCLOSE
#define ftconn                          FTCONN
#define ftcreate                        FTCREATE
#define ftcrtdir                        FTCRTDIR
#define ftdel                           FTDEL
#define ftdestry                        FTDESTRY
#define ftdircls                        FTDIRCLS
#define ftdiropn                        FTDIROPN
#define ftdirrd                         FTDIRRD
#define fteas                           FTEAS
#define ftebs                           FTEBS
#define ftedm                           FTEDM
#define ftedst                          FTEDST
#define ftedt                           FTEDT
#define ftemn                           FTEMN
#define fteplu                          FTEPLU
#define ftepw                           FTEPW
#define fterf                           FTERF
#define fterl                           FTERL
#define ftest                           FTEST
#define ftetpn                          FTETPN
#define fteui                           FTEUI
#define ftewm                           FTEWM
#define ftfe                            FTFE
#define ftgdms                          FTGDMS
#define ftgdts                          FTGDTS
#define ftgrfs                          FTGRFS
#define ftgwms                          FTGWMS
#define ftlcd                           FTLCD
#define ftldc                           FTLDC
#define ftldo                           FTLDO
#define ftldr                           FTLDR
#define ftlif                           FTLIF
#define ftlqcd                          FTLQCD
#define ftqbt                           FTQBT
#define ftqcd                           FTQCD
#define ftqlsi                          FTQLSI
#define ftqlv                           FTQLV
#define ftqsys                          FTQSYS
#define ftrd                            FTRD
#define ftrecv                          FTRECV
#define ftren                           FTREN
#define ftsas                           FTSAS
#define ftsbs                           FTSBS
#define ftsdest                         FTSDEST
#define ftsdm                           FTSDM
#define ftsdt                           FTSDT
#define ftsend                          FTSEND
#define ftstl                           FTSTL
#define ftstf                           FTSTF
#define ftetl                           FTETL
#define ftsmn                           FTSMN
#define ftsp                            FTSP
#define ftsrf                           FTSRF
#define ftsrl                           FTSRL
#define ftsst                           FTSST
#define ftstp                           FTSTP
#define ftsu                            FTSU
#define ftswm                           FTSWM

/**********************************************************************
 *  AFTP Function Prototypes
 **********************************************************************/

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */


AFTP_ENTRY
aftp_change_dir(
    unsigned char AFTP_PTR                  connection_id,
    unsigned char AFTP_PTR                  directory,
    AFTP_LENGTH_TYPE                        length,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_close(
    unsigned char AFTP_PTR                  connection_id,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_connect(
    unsigned char AFTP_PTR                  connection_id,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_create(
    unsigned char AFTP_PTR                  connection_id,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_create_dir(
    unsigned char AFTP_PTR                  connection_id,
    unsigned char AFTP_PTR                  directory,
    AFTP_LENGTH_TYPE                        length,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_delete(
    unsigned char AFTP_PTR                  connection_id,
    unsigned char AFTP_PTR                  filename,
    AFTP_LENGTH_TYPE                        length,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_destroy(
    unsigned char AFTP_PTR                  connection_id,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_dir_close(
    unsigned char AFTP_PTR                  connection_id,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_dir_open(
    unsigned char AFTP_PTR                  connection_id,
    unsigned char AFTP_PTR                  filespec,
    AFTP_LENGTH_TYPE                        length,
    AFTP_FILE_TYPE_TYPE                     file_type,
    AFTP_INFO_LEVEL_TYPE                    info_level,
    unsigned char AFTP_PTR                  path,
    AFTP_LENGTH_TYPE                        path_buffer_length,
    AFTP_LENGTH_TYPE AFTP_PTR               path_returned_length,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_dir_read(
    unsigned char AFTP_PTR                  connection_id,
    unsigned char AFTP_PTR                  dir_entry,
    AFTP_LENGTH_TYPE                        dir_entry_size,
    AFTP_LENGTH_TYPE AFTP_PTR               returned_length,
    AFTP_BOOLEAN_TYPE AFTP_PTR              no_more_entries,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_extract_allocation_size(
    unsigned char AFTP_PTR                  connection_id,
    AFTP_ALLOCATION_SIZE_TYPE AFTP_PTR      allocation_size,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_extract_block_size(
    unsigned char AFTP_PTR                  connection_id,
    AFTP_BLOCK_SIZE_TYPE AFTP_PTR           block_size,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_extract_data_type(
    unsigned char AFTP_PTR                  connection_id,
    AFTP_DATA_TYPE_TYPE AFTP_PTR            data_type,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_extract_date_mode(
    unsigned char AFTP_PTR                  connection_id,
    AFTP_DATE_MODE_TYPE AFTP_PTR            date_mode,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_extract_destination(
    unsigned char AFTP_PTR                  connection_id,
    unsigned char AFTP_PTR                  destination,
    AFTP_LENGTH_TYPE                        destination_size,
    AFTP_LENGTH_TYPE AFTP_PTR               returned_length,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_extract_mode_name(
    unsigned char AFTP_PTR                  connection_id,
    unsigned char AFTP_PTR                  mode_name,
    AFTP_LENGTH_TYPE                        mode_name_size,
    AFTP_LENGTH_TYPE AFTP_PTR               returned_length,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_extract_partner_LU_name(
    unsigned char AFTP_PTR                  connection_id,
    unsigned char AFTP_PTR                  partner_LU_name,
    AFTP_LENGTH_TYPE                        partner_LU_name_size,
    AFTP_LENGTH_TYPE AFTP_PTR               returned_length,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_extract_password(
    unsigned char AFTP_PTR                  connection_id,
    unsigned char AFTP_PTR                  password,
    AFTP_LENGTH_TYPE                        password_size,
    AFTP_LENGTH_TYPE AFTP_PTR               returned_length,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_extract_record_format(
    unsigned char AFTP_PTR                  connection_id,
    AFTP_RECORD_FORMAT_TYPE AFTP_PTR        record_format,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_extract_record_length(
    unsigned char AFTP_PTR                  connection_id,
    AFTP_RECORD_LENGTH_TYPE AFTP_PTR        record_length,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_extract_security_type(
    unsigned char AFTP_PTR                  connection_id,
    AFTP_SECURITY_TYPE AFTP_PTR             security_type,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_extract_tp_name(
    unsigned char AFTP_PTR                  connection_id,
    unsigned char AFTP_PTR                  tp_name,
    AFTP_LENGTH_TYPE                        tp_name_size,
    AFTP_LENGTH_TYPE AFTP_PTR               returned_length,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_extract_userid(
    unsigned char AFTP_PTR                  connection_id,
    unsigned char AFTP_PTR                  userid,
    AFTP_LENGTH_TYPE                        userid_size,
    AFTP_LENGTH_TYPE AFTP_PTR               length,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_extract_write_mode(
    unsigned char AFTP_PTR                  connection_id,
    AFTP_WRITE_MODE_TYPE AFTP_PTR           write_mode,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_get_data_type_string(
    AFTP_DATA_TYPE_TYPE                     data_type,
    unsigned char AFTP_PTR                  data_type_string,
    AFTP_LENGTH_TYPE                        data_type_size,
    AFTP_LENGTH_TYPE AFTP_PTR               returned_length,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_get_date_mode_string(
    AFTP_DATE_MODE_TYPE                     date_mode,
    unsigned char AFTP_PTR                  date_mode_string,
    AFTP_LENGTH_TYPE                        date_mode_size,
    AFTP_LENGTH_TYPE AFTP_PTR               returned_length,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_get_record_format_string(
    AFTP_RECORD_FORMAT_TYPE                 record_format,
    unsigned char AFTP_PTR                  record_format_string,
    AFTP_LENGTH_TYPE                        record_format_size,
    AFTP_LENGTH_TYPE AFTP_PTR               returned_length,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_get_write_mode_string(
    AFTP_WRITE_MODE_TYPE                    write_mode,
    unsigned char AFTP_PTR                  write_mode_string,
    AFTP_LENGTH_TYPE                        write_mode_size,
    AFTP_LENGTH_TYPE AFTP_PTR               returned_length,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_load_ini_file(
    unsigned char AFTP_PTR                  filename,
    AFTP_LENGTH_TYPE                        filename_size,
    unsigned char AFTP_PTR                  program_path,
    AFTP_LENGTH_TYPE                        path_size,
    unsigned char AFTP_PTR                  error_string,
    AFTP_LENGTH_TYPE                        error_string_size,
    AFTP_LENGTH_TYPE AFTP_PTR               returned_length,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_local_change_dir(
    unsigned char AFTP_PTR                  connection_id,
    unsigned char AFTP_PTR                  directory,
    AFTP_LENGTH_TYPE                        length,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_local_dir_close(
    unsigned char AFTP_PTR                  connection_id,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_local_dir_open(
    unsigned char AFTP_PTR                  connection_id,
    unsigned char AFTP_PTR                  filespec,
    AFTP_LENGTH_TYPE                        length,
    AFTP_FILE_TYPE_TYPE                     file_type,
    AFTP_INFO_LEVEL_TYPE                    info_level,
    unsigned char AFTP_PTR                  path,
    AFTP_LENGTH_TYPE                        path_buffer_length,
    AFTP_LENGTH_TYPE AFTP_PTR               path_returned_length,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_local_dir_read(
    unsigned char AFTP_PTR                  connection_id,
    unsigned char AFTP_PTR                  dir_entry,
    AFTP_LENGTH_TYPE                        dir_entry_size,
    AFTP_LENGTH_TYPE AFTP_PTR               returned_length,
    AFTP_BOOLEAN_TYPE AFTP_PTR              no_more_entries,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_local_query_current_dir(
    unsigned char AFTP_PTR                  connection_id,
    unsigned char AFTP_PTR                  directory,
    AFTP_LENGTH_TYPE                        directory_size,
    AFTP_LENGTH_TYPE AFTP_PTR               returned_length,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_query_bytes_transferred(
    unsigned char AFTP_PTR                  connection_id,
    AFTP_LENGTH_TYPE AFTP_PTR               bytes_transferred,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_query_current_dir(
    unsigned char AFTP_PTR                  connection_id,
    unsigned char AFTP_PTR                  directory,
    AFTP_LENGTH_TYPE                        directory_size,
    AFTP_LENGTH_TYPE AFTP_PTR               returned_length,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_query_local_version(
    AFTP_VERSION_TYPE AFTP_PTR              major_version,
    AFTP_VERSION_TYPE AFTP_PTR              minor_version,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_query_local_system_info(
    unsigned char AFTP_PTR                  connection_id,
    unsigned char AFTP_PTR                  system_info,
    AFTP_LENGTH_TYPE                        system_info_size,
    AFTP_LENGTH_TYPE AFTP_PTR               returned_length,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_query_system_info(
    unsigned char AFTP_PTR                  connection_id,
    unsigned char AFTP_PTR                  system_info,
    AFTP_LENGTH_TYPE                        system_info_size,
    AFTP_LENGTH_TYPE AFTP_PTR               returned_length,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_receive_file(
    unsigned char AFTP_PTR                  connection_id,
    unsigned char AFTP_PTR                  local_file,
    AFTP_LENGTH_TYPE                        local_file_length,
    unsigned char AFTP_PTR                  remote_file,
    AFTP_LENGTH_TYPE                        remote_file_length,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_remove_dir(
    unsigned char AFTP_PTR                  connection_id,
    unsigned char AFTP_PTR                  directory,
    AFTP_LENGTH_TYPE                        length,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_rename(
    unsigned char AFTP_PTR                  connection_id,
    unsigned char AFTP_PTR                  oldfile,
    AFTP_LENGTH_TYPE                        oldlength,
    unsigned char AFTP_PTR                  newfile,
    AFTP_LENGTH_TYPE                        newlength,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_send_file(
    unsigned char AFTP_PTR                  connection_id,
    unsigned char AFTP_PTR                  local_file,
    AFTP_LENGTH_TYPE                        local_file_length,
    unsigned char AFTP_PTR                  remote_file,
    AFTP_LENGTH_TYPE                        remote_file_length,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_set_allocation_size(
    unsigned char AFTP_PTR                  connection_id,
    AFTP_ALLOCATION_SIZE_TYPE               allocation_size,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_set_block_size(
    unsigned char AFTP_PTR                  connection_id,
    AFTP_BLOCK_SIZE_TYPE                    block_size,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_set_data_type(
    unsigned char AFTP_PTR                  connection_id,
    AFTP_DATA_TYPE_TYPE                     data_type,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_set_date_mode(
    unsigned char AFTP_PTR                  connection_id,
    AFTP_DATE_MODE_TYPE                     date_mode,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_set_destination(
    unsigned char AFTP_PTR                  connection_id,
    unsigned char AFTP_PTR                  destination,
    AFTP_LENGTH_TYPE                        length,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_set_trace_level(
    AFTP_TRACE_LEVEL_TYPE                   trace_level,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_extract_trace_level(
    AFTP_TRACE_LEVEL_TYPE AFTP_PTR          trace_level,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_set_trace_filename(
    unsigned char AFTP_PTR                  filename,
    AFTP_LENGTH_TYPE                        filename_length,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_set_mode_name(
    unsigned char AFTP_PTR                  connection_id,
    unsigned char AFTP_PTR                  mode_name,
    AFTP_LENGTH_TYPE                        length,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_set_password(
    unsigned char AFTP_PTR                  connection_id,
    unsigned char AFTP_PTR                  password,
    AFTP_LENGTH_TYPE                        length,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_set_record_format(
    unsigned char AFTP_PTR                  connection_id,
    AFTP_RECORD_FORMAT_TYPE                 record_format,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_set_record_length(
    unsigned char AFTP_PTR                  connection_id,
    AFTP_RECORD_LENGTH_TYPE                 record_length,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_set_security_type(
    unsigned char AFTP_PTR                  connection_id,
    AFTP_SECURITY_TYPE                      security_type,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_set_tp_name(
    unsigned char AFTP_PTR                  connection_id,
    unsigned char AFTP_PTR                  tp_name,
    AFTP_LENGTH_TYPE                        length,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_set_userid(
    unsigned char AFTP_PTR                  connection_id,
    unsigned char AFTP_PTR                  userid,
    AFTP_LENGTH_TYPE                        length,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_set_write_mode(
    unsigned char AFTP_PTR                  connection_id,
    AFTP_WRITE_MODE_TYPE                    write_mode,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

AFTP_ENTRY
aftp_format_error(
    unsigned char AFTP_PTR                  connection_id,
    AFTP_DETAIL_LEVEL_TYPE                  detail_level,
    unsigned char AFTP_PTR                  error_str,
    AFTP_LENGTH_TYPE                        error_str_size,
    AFTP_LENGTH_TYPE AFTP_PTR               returned_length,
    AFTP_RETURN_CODE_TYPE AFTP_PTR          rc);

#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\vc7addon\devtools\common\win32sdk\include\adssts.h ===
//+---------------------------------------------------------------------------
//  Copyright (C) 1996-1999, Microsoft Corporation.
//
//  File:       status.h
//
//  Contents:   Status Codes for ADS objects
//
//----------------------------------------------------------------------------

//
// printer status values
//

#ifdef __cplusplus
extern "C" {
#endif

#if _MSC_VER > 1000
#pragma once
#endif

#define ADS_PRINTER_PAUSED                    0x00000001
#define ADS_PRINTER_PENDING_DELETION          0x00000002
#define ADS_PRINTER_ERROR                     0x00000003
#define ADS_PRINTER_PAPER_JAM                 0x00000004
#define ADS_PRINTER_PAPER_OUT                 0x00000005
#define ADS_PRINTER_MANUAL_FEED               0x00000006
#define ADS_PRINTER_PAPER_PROBLEM             0x00000007
#define ADS_PRINTER_OFFLINE                   0x00000008
#define ADS_PRINTER_IO_ACTIVE                 0x00000100
#define ADS_PRINTER_BUSY                      0x00000200
#define ADS_PRINTER_PRINTING                  0x00000400
#define ADS_PRINTER_OUTPUT_BIN_FULL           0x00000800
#define ADS_PRINTER_NOT_AVAILABLE             0x00001000
#define ADS_PRINTER_WAITING                   0x00002000
#define ADS_PRINTER_PROCESSING                0x00004000
#define ADS_PRINTER_INITIALIZING              0x00008000
#define ADS_PRINTER_WARMING_UP                0x00010000
#define ADS_PRINTER_TONER_LOW                 0x00020000
#define ADS_PRINTER_NO_TONER                  0x00040000
#define ADS_PRINTER_PAGE_PUNT                 0x00080000
#define ADS_PRINTER_USER_INTERVENTION         0x00100000
#define ADS_PRINTER_OUT_OF_MEMORY             0x00200000
#define ADS_PRINTER_DOOR_OPEN                 0x00400000
#define ADS_PRINTER_SERVER_UNKNOWN            0x00800000
#define ADS_PRINTER_POWER_SAVE                0x01000000

//
// job status values
//

#define ADS_JOB_PAUSED                        0x00000001
#define ADS_JOB_ERROR                         0x00000002
#define ADS_JOB_DELETING                      0x00000004
#define ADS_JOB_SPOOLING                      0x00000008
#define ADS_JOB_PRINTING                      0x00000010
#define ADS_JOB_OFFLINE                       0x00000020
#define ADS_JOB_PAPEROUT                      0x00000040
#define ADS_JOB_PRINTED                       0x00000080
#define ADS_JOB_DELETED                       0x00000100

//
// service status values
//

#define ADS_SERVICE_STOPPED                0x00000001
#define ADS_SERVICE_START_PENDING	     0x00000002
#define ADS_SERVICE_STOP_PENDING           0x00000003
#define ADS_SERVICE_RUNNING	             0x00000004
#define ADS_SERVICE_CONTINUE_PENDING       0x00000005
#define ADS_SERVICE_PAUSE_PENDING	     0x00000006
#define ADS_SERVICE_PAUSED                 0x00000007
#define ADS_SERVICE_ERROR                  0x00000008

//---------------------------------------------------------------------

//
// Service Type Valid Values
//

#define ADS_SERVICE_OWN_PROCESS           0x00000010
#define ADS_SERVICE_SHARE_PROCESS         0x00000020
#define ADS_SERVICE_KERNEL_DRIVER         0x00000001
#define ADS_SERVICE_FILE_SYSTEM_DRIVER    0x00000002

//
// Start Type Valid Values
//

#define ADS_SERVICE_BOOT_START          SERVICE_BOOT_START
#define ADS_SERVICE_SYSTEM_START        SERVICE_SYSTEM_START
#define ADS_SERVICE_AUTO_START          SERVICE_AUTO_START
#define ADS_SERVICE_DEMAND_START        SERVICE_DEMAND_START
#define ADS_SERVICE_DISABLED           SERVICE_DISABLED

//
// Error Control Values
//

#define ADS_SERVICE_ERROR_IGNORE          0
#define ADS_SERVICE_ERROR_NORMAL          1
#define ADS_SERVICE_ERROR_SEVERE          2
#define ADS_SERVICE_ERROR_CRITICAL        3


#ifdef __cplusplus
}
#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\vc7addon\devtools\common\win32sdk\include\AdsProp.h ===
//+----------------------------------------------------------------------------
//
//  Windows NT Active Directory Service Property Pages
//
//  Microsoft Windows
//  Copyright (C) Microsoft Corporation, 1992-1999.
//
//  File:       adsprop.h
//
//  Contents:   Functions and definitions used in the creation of AD property
//              sheets.
//
//  History:    28-Sept-98 Eric Brown created.
//
//-----------------------------------------------------------------------------

#ifndef _ADSPROP_H_
#define _ADSPROP_H_

#if _MSC_VER > 1000
#pragma once
#endif
#ifdef __cplusplus
extern "C" {
#endif

#define WM_ADSPROP_NOTIFY_PAGEINIT   (WM_USER + 1101) // where LPARAM is the PADSPROPINITPARAMS pointer.
#define WM_ADSPROP_NOTIFY_PAGEHWND   (WM_USER + 1102) // where WPARAM => page's HWND and LPARAM => page's Title
#define WM_ADSPROP_NOTIFY_CHANGE     (WM_USER + 1103) // used to send a change notification to a parent sheet
#define WM_ADSPROP_NOTIFY_APPLY      (WM_USER + 1104) // pages send this to the notification object.
#define WM_ADSPROP_NOTIFY_SETFOCUS   (WM_USER + 1105) // used internally by the notification object.
#define WM_ADSPROP_NOTIFY_FOREGROUND (WM_USER + 1106) // used internally by the notification object.
#define WM_ADSPROP_NOTIFY_EXIT       (WM_USER + 1107) // sent on page release
#define WM_ADSPROP_NOTIFY_ERROR      (WM_USER + 1110) // used to send the notification object an error message

//+----------------------------------------------------------------------------
//
//  Structure:  ADSPROPINITPARAMS
//
//  Usage:      Used to pass page initialization information to new pages from
//              the notify object.
//
//-----------------------------------------------------------------------------
typedef struct _ADSPROPINITPARAMS {
    DWORD              dwSize;          // Set this to the size of the struct.
    DWORD              dwFlags;         // Reserved for future use.
    HRESULT            hr;              // If this is non-zero, then the others
    IDirectoryObject * pDsObj;          // should be ignored.
    LPWSTR             pwzCN;
    PADS_ATTR_INFO     pWritableAttrs;
} ADSPROPINITPARAMS, * PADSPROPINITPARAMS;

//+----------------------------------------------------------------------------
//
//  Structure:  ADSPROPERROR
//
//  Usage:      Used to pass page error information to the notify object
//
//-----------------------------------------------------------------------------
typedef struct _ADSPROPERROR {
    HWND               hwndPage;        // The HWND of the page that had the error
    PWSTR              pszPageTitle;    // The title of the page that had the error
    PWSTR              pszObjPath;      // Path to the object that the error occurred on
    HRESULT            hr;              // If this is non-zero, then the others
                                        // pszError will be ignored
    PWSTR              pszError;        // An error message.  Used only if hr is zero
} ADSPROPERROR, * PADSPROPERROR;

//+----------------------------------------------------------------------------
//
//  Function:   ADsPropCreateNotifyObj
//
//  Synopsis:   Checks to see if the notification window/object exists for this
//              sheet instance and if not creates it.
//
//  Arguments:  [pAppThdDataObj] - the unmarshalled data object pointer.
//              [pwzADsObjName]  - object path name.
//              [phNotifyObj]    - to return the notificion window handle.
//
//  Returns:    HRESULTs.
//
//-----------------------------------------------------------------------------
STDAPI
ADsPropCreateNotifyObj(LPDATAOBJECT pAppThdDataObj, PWSTR pwzADsObjName,
                       HWND * phNotifyObj);

//+----------------------------------------------------------------------------
//
//  Function:   ADsPropGetInitInfo
//
//  Synopsis:   Pages call this at their init time to retreive DS object info.
//
//  Arguments:  [hNotifyObj]  - the notificion window handle.
//              [pInitParams] - struct filled in with DS object info. This
//                              struct must be allocated by the caller before
//                              the call.
//
//  Returns:    FALSE if the notify window has gone away for some reason or
//              if the parameters are invalid.
//
//  Notes:      This call results in the sending of the
//              WM_ADSPROP_NOTIFY_PAGEINIT message to the notify window.
//              pInitParams->pWritableAttrs can be NULL if there are no
//              writable attributes.
//
//-----------------------------------------------------------------------------
STDAPI_(BOOL)
ADsPropGetInitInfo(HWND hNotifyObj, PADSPROPINITPARAMS pInitParams);

//+----------------------------------------------------------------------------
//
//  Function:   ADsPropSetHwnd
//
//  Synopsis:   Pages call this at their dialog init time to send their hwnd.
//
//  Arguments:  [hNotifyObj]  - the notificion window handle.
//              [hPage]       - the page's window handle.
//              [ptzTitle]    - the page's title
//
//  Returns:    FALSE if the notify window has gone away for some reason.
//
//  Notes:      Sends the WM_ADSPROP_NOTIFY_PAGEHWND message to the notify
//              window.
//
//-----------------------------------------------------------------------------
STDAPI_(BOOL)
ADsPropSetHwnd(HWND hNotifyObj, HWND hPage, PTSTR ptzTitle);

//+----------------------------------------------------------------------------
//
//  function:   ADsPropCheckIfWritable
//
//  Synopsis:   See if the attribute is writable by checking if it is in
//              the allowedAttributesEffective array.
//
//  Arguments:  [pwzAttr]        - the attribute name.
//              [pWritableAttrs] - the array of writable attributes.
//
//  Returns:    FALSE if the attribute name is not found in the writable-attrs
//              array or if the array pointer is NULL.
//
//-----------------------------------------------------------------------------
STDAPI_(BOOL)
ADsPropCheckIfWritable(const PWSTR pwzAttr, const PADS_ATTR_INFO pWritableAttrs);

//+----------------------------------------------------------------------------
//
//  function:   ADsPropSendErrorMessage
//
//  Synopsis:   Adds an error message to a list which is presented when
//              ADsPropShowErrorDialog is called
//
//  Arguments:  [hNotifyObj]  - the notificion window handle.
//              [pError]      - the error structure
//
//  Returns:    FALSE if the notify window has gone away for some reason.
//
//-----------------------------------------------------------------------------
STDAPI_(BOOL)
ADsPropSendErrorMessage(HWND hNotifyObj, PADSPROPERROR pError);

//+----------------------------------------------------------------------------
//
//  function:   ADsPropShowErrorDialog
//
//  Synopsis:   Presents an error dialog with the error messages accumulated
//              through calls to ADsPropSendErrorMessage
//
//  Arguments:  [hNotifyObj]  - the notificion window handle.
//              [hPage]       - the property page window handle.
//
//  Returns:    FALSE if the notify window has gone away for some reason.
//
//-----------------------------------------------------------------------------
STDAPI_(BOOL)
ADsPropShowErrorDialog(HWND hNotifyObj, HWND hPage);

#ifdef __cplusplus
}
#endif // __cplusplus

#endif // _ADSPROP_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\vc7addon\devtools\common\win32sdk\include\adsiid.h ===
//+---------------------------------------------------------------------------
//
//  Microsoft Windows
//  Copyright (C) Microsoft Corporation, 1996-1999
//
//  File:       oledsiid.h
//
//  Contents:   extern references for ADs guids
//
//----------------------------------------------------------------------------

#ifndef __ADSIID_H__
#define __ADSIID_H__

#if _MSC_VER > 1000
#pragma once
#endif

#ifdef __cplusplus
extern "C" {
#endif

// uuids from oledsiid.lib

extern const GUID LIBID_ADs;

extern const GUID IID_IADs;

extern const GUID IID_IADsContainer;

extern const GUID IID_IADsNamespaces;



extern const GUID IID_IADsDomain;

extern const GUID IID_IADsUser;

extern const GUID IID_IADsComputerOperations;

extern const GUID IID_IADsComputer;


extern const GUID IID_IADsGroup;

extern const GUID IID_IADsMembers;



extern const GUID IID_IADsPrintQueue;

extern const GUID IID_IADsPrintQueueOperations;


extern const GUID IID_IADsPrintJobOperations;

extern const GUID IID_IADsPrintJob;

extern const GUID IID_IADsCollection;


extern const GUID IID_IADsServiceOperations;

extern const GUID IID_IADsService;


extern const GUID IID_IADsFileServiceOperations;

extern const GUID IID_IADsFileService;


extern const GUID IID_IADsResource;

extern const GUID IID_IADsSession;

extern const GUID IID_IADsFileShare;

extern const GUID IID_IADsSchema;

extern const GUID IID_IADsClass;

extern const GUID IID_IADsProperty;

extern const GUID IID_IADsSyntax;


extern const GUID IID_IADsLocality;

extern const GUID IID_IADsO;

extern const GUID IID_IADsOU;

extern const GUID IID_IADsOpenDSObject;

extern const GUID IID_IADsSearch;

extern const GUID IID_IADsPropertyList;


extern const GUID IID_IDSObject;
extern const GUID IID_IDSSearch;
extern const GUID IID_IDSAttrMgmt;

extern const GUID IID_IDirectorySearch;
extern const GUID IID_IDirectoryObject;
extern const GUID IID_IDirectoryAttrMgmt;


//
// Connection object GUIDs.
//
extern const GUID CLSID_LDAPConnectionObject;

//
// CLSID for owning LDAP objects interfaces
//
extern const GUID CLSID_LDAPObject;

//
// Query object for the LDAP Provider.
//
extern const GUID CLSID_UmiLDAPQueryObject;

extern const GUID CLSID_WinNTConnectionObject;

// Custom interface handling
extern const GUID CLSID_WinNTObject;

//
// OLE DB Provider Guids
//

extern const GUID CLSID_ADsDSOObject;

extern const GUID DBGUID_LDAPDialect;

extern const GUID DBPROPSET_ADSISEARCH;

extern const GUID DBPROPSET_ADSIBIND;


#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\vc7addon\devtools\common\win32sdk\include\agterr.h ===
/**************************************************************************
*                                                                         *
* AgtErr.h - Error code definitions for Microsoft Agent                   *
*                                                                         *
* Copyright (c) 1996-1999, Microsoft Corp. All rights reserved.           *
*                                                                         *
**************************************************************************/

#ifndef _AgentError_h_
#define _AgentError_h_


// Microsoft Agent Error Macros

#define AGENTERROR(x)			MAKE_SCODE(SEVERITY_ERROR,   FACILITY_ITF, (x)+0x2000)
#define AGENTWARNING(x)			MAKE_SCODE(SEVERITY_SUCCESS, FACILITY_ITF, (x)+0x2000)
#define AGENTREQERROR(x)		MAKE_SCODE(SEVERITY_ERROR,   FACILITY_ITF, (x)+0x2100)
#define AGENTPROVIDERERROR(x)	MAKE_SCODE(SEVERITY_ERROR,   FACILITY_ITF, (x)+0x2200)
#define AGENTVOICEERROR(x)		MAKE_SCODE(SEVERITY_ERROR,   FACILITY_ITF, (x)+0x2300)
#define AGENTAUDIOERROR(x)		MAKE_SCODE(SEVERITY_ERROR,   FACILITY_ITF, (x)+0x2400)
#define AGENTCTLERROR(x)		MAKE_SCODE(SEVERITY_ERROR,   FACILITY_ITF, (x)+0x2500)
#define AGENTEXTERROR(x)		MAKE_SCODE(SEVERITY_ERROR,   FACILITY_ITF, (x)+0x2600)


// Agent Errors

#define AGENTERR_CLIENTINVALID							AGENTERROR(1)
#define AGENTERR_CHARACTERINVALID						AGENTERROR(2)
#define AGENTERR_ANIMATIONNOTFOUND						AGENTERROR(3)
#define AGENTERR_STATENOTFOUND							AGENTERROR(4)
#define AGENTERR_AUDIONOTFOUND							AGENTERROR(5)	// No longer used
#define AGENTERR_COMMANDNOTFOUND						AGENTERROR(6)
#define AGENTERR_COMMANDALREADYINUSE					AGENTERROR(7)
#define AGENTERR_MENUNOTFOUND							AGENTERROR(8)
#define AGENTERR_LOSTCONNECTION							AGENTERROR(9)
#define AGENTERR_CHARACTERNOTVISIBLE					AGENTERROR(10)
#define AGENTERR_CHARACTERALREADYLOADED					AGENTERROR(11)
#define AGENTERR_NOBALLOON								AGENTERROR(12)
#define AGENTERR_NOCOMMANDSWINDOW						AGENTERROR(13)
#define AGENTERR_INVALIDPREPARETYPE						AGENTERROR(14)
#define AGENTERR_INVALIDANIMATION						AGENTERROR(15)
#define AGENTERR_CANTMOVEDURINGDRAG						AGENTERROR(16)
#define AGENTERR_CHARACTERNOTACTIVE						AGENTERROR(17)
#define AGENTERR_LANGUAGENOTFOUND						AGENTERROR(18)
#define AGENTERR_TTSLANGUAGENOTFOUND					AGENTERROR(19)
#define AGENTERR_SRLANGUAGENOTFOUND						AGENTERROR(20)
#define AGENTERR_LANGUAGEMISMATCH						AGENTERROR(21)
#define AGENTERR_SPEAKINGDISABLED						AGENTERROR(22)
#define AGENTERR_NOCHARACTERS							AGENTERROR(23)
#define AGENTERR_DEFAULTCHARACTER						AGENTERROR(24)


// Warnings

#define AGENTWARNING_TTSENGINENOTFOUND					AGENTWARNING(1)
#define AGENTWARNING_ONLYCLIENT							AGENTWARNING(2)


// Request Errors

#define AGENTREQERR_OBJECTNOTFOUND						AGENTREQERROR(1)
#define AGENTREQERR_OBJECTINVALID						AGENTREQERROR(2)
#define AGENTREQERR_CANTSTOPOTHERS						AGENTREQERROR(3)
#define AGENTREQERR_CANTINTERRUPTSELF					AGENTREQERROR(4)
#define AGENTREQERR_CANTWAITONSELF						AGENTREQERROR(5)
#define AGENTREQERR_INVALIDBOOKMARK						AGENTREQERROR(6)
#define AGENTREQERR_SUSPENDED							AGENTREQERROR(7)	// No longer used
#define AGENTREQERR_REMOVED								AGENTREQERROR(8)

#define IS_INTERRUPT_ERROR(hRes)						((hRes >= AGENTREQERR_INTERRUPTEDLISTENKEY) && \
											 			 (hRes <= AGENTREQERR_INTERRUPTEDUSER))

#define AGENTREQERR_INTERRUPTEDLISTENKEY				AGENTREQERROR(10)
#define AGENTREQERR_INTERRUPTEDHEARING					AGENTREQERROR(11)
#define AGENTREQERR_INTERRUPTEDCODE						AGENTREQERROR(12)
#define AGENTREQERR_INTERRUPTEDUSER						AGENTREQERROR(13)

#define AGENTREQERR_INVALIDLASTTAG						AGENTREQERROR(14)


// Data Provider Errors

#define AGENTPROVERROR_INIT								AGENTPROVIDERERROR(1)
#define AGENTPROVERROR_CHARACTERVERSION					AGENTPROVIDERERROR(2)
#define AGENTPROVERROR_VERSION							AGENTPROVIDERERROR(3)
#define AGENTPROVERROR_MAGIC							AGENTPROVIDERERROR(4)
#define AGENTPROVERROR_CHARACTERINVALID					AGENTPROVIDERERROR(5)
#define AGENTPROVERROR_WAVEINVALID						AGENTPROVIDERERROR(6)
#define AGENTPROVERROR_WAVECORRUPT						AGENTPROVIDERERROR(7)
#define AGENTPROVERROR_MMIO								AGENTPROVIDERERROR(8)
#define AGENTPROVERROR_PROTOCOL							AGENTPROVIDERERROR(9)


// Audio Errors

#define AGENTAUDIOERROR_DEVICE							AGENTAUDIOERROR(1)
#define AGENTAUDIOERROR_TTSENUMERATOR					AGENTAUDIOERROR(2)
#define AGENTAUDIOERROR_TTSSELECT						AGENTAUDIOERROR(3)
#define AGENTAUDIOERROR_TTSREGISTER						AGENTAUDIOERROR(4)
#define AGENTAUDIOERROR_TTSUNEXPECTED					AGENTAUDIOERROR(5)
#define AGENTAUDIOERROR_LWVINIT							AGENTAUDIOERROR(6)
#define AGENTAUDIOERROR_LWVREGISTER						AGENTAUDIOERROR(7)
#define AGENTAUDIOERROR_LWVUNEXPECTED					AGENTAUDIOERROR(8)


// Agent Control Errors

#define AGENTCTLERROR_NOEVENTSAVAILABLE					AGENTCTLERROR(1)	// No longer used
#define AGENTCTLERROR_SERVERINIT						AGENTCTLERROR(2)
#define AGENTCTLERROR_LANGUAGE							AGENTCTLERROR(3)	// No longer used


// Speech Recognition Errors

#define AGENTVOICEERROR_COULDNTSTARTDEVICE				AGENTVOICEERROR(1)
#define AGENTVOICEERROR_NOTINSTALLED					AGENTVOICEERROR(2)
#define AGENTVOICEERROR_NOTINITIALIZED					AGENTVOICEERROR(3)
#define AGENTVOICEERROR_INVALIDMENU						AGENTVOICEERROR(4)
#define AGENTVOICEERROR_UNCLOSEDALTERNATIVE				AGENTVOICEERROR(5)
#define AGENTVOICEERROR_UNCLOSEDOPTIONAL				AGENTVOICEERROR(6)
#define AGENTVOICEERROR_UNEXPECTEDENDOFALTERNATIVE		AGENTVOICEERROR(7)
#define AGENTVOICEERROR_UNEXPECTEDENDOFOPTIONAL			AGENTVOICEERROR(8)
#define AGENTVOICEERROR_UNEXPECTEDALTERNATIVE			AGENTVOICEERROR(9)
#define AGENTVOICEERROR_NOSRMODE						AGENTVOICEERROR(10)	// No longer used
#define AGENTVOICEERROR_SRMODENOTFOUND					AGENTVOICEERROR(11)
#define AGENTVOICEERROR_SPEECHDISABLED					AGENTVOICEERROR(12)
#define AGENTVOICEERROR_UNEXPECTEDENDOFREPEAT			AGENTVOICEERROR(13)	// No longer used
#define AGENTVOICEERROR_UNCLOSEDREPEAT					AGENTVOICEERROR(14)	// No longer used
#define AGENTVOICEERROR_UNEXPECTEDREPEAT				AGENTVOICEERROR(15)

// Agent Extension Manager Errors

#define AGENTEXTERROR_EXTNOTFOUND						AGENTEXTERROR(1)
#define AGENTEXTERROR_INVALIDCLIENT						AGENTEXTERROR(2)


#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\vc7addon\devtools\common\win32sdk\include\agtctl_i.c ===
/**************************************************************************
*                                                                         *
* AgtCtl_i.c - Interface IID and CLSID definitions for Microsoft Agent    *
*              Control.                                                   *
*                                                                         *
* Copyright (c) 1996-1999, Microsoft Corp. All rights reserved.           *
*                                                                         *
**************************************************************************/

/* this file contains the actual definitions of */
/* the IIDs and CLSIDs */

/* link this file in with the server and any clients */


/* File created by MIDL compiler version 5.01.0164 */
/* at Tue Sep 15 16:56:03 1998
 */
/* Compiler settings for AgentControl.idl:
    Oicf (OptLev=i2), W1, Zp8, env=Win32, ms_ext, c_ext
    error checks: allocation ref bounds_check enum stub_data 
*/
//@@MIDL_FILE_HEADING(  )
#ifdef __cplusplus
extern "C"{
#endif 


#ifndef __IID_DEFINED__
#define __IID_DEFINED__

typedef struct _IID
{
    unsigned long x;
    unsigned short s1;
    unsigned short s2;
    unsigned char  c[8];
} IID;

#endif // __IID_DEFINED__

#ifndef CLSID_DEFINED
#define CLSID_DEFINED
typedef IID CLSID;
#endif // CLSID_DEFINED

const IID IID_IAgentCtlRequest = {0x1DAB85C3,0x803A,0x11D0,{0xAC,0x63,0x00,0xC0,0x4F,0xD9,0x75,0x75}};


const IID IID_IAgentCtlUserInput = {0xC4ABF875,0x8100,0x11D0,{0xAC,0x63,0x00,0xC0,0x4F,0xD9,0x75,0x75}};


const IID IID_IAgentCtlBalloon = {0xF5BE8BD3,0x7DE6,0x11D0,{0x91,0xFE,0x00,0xC0,0x4F,0xD7,0x01,0xA5}};


const IID IID_IAgentCtlBalloonEx = {0x822DB1C0,0x8879,0x11d1,{0x9E,0xC6,0x00,0xC0,0x4F,0xD7,0x08,0x1F}};


const IID IID_IAgentCtlCommand = {0xF5BE8BE3,0x7DE6,0x11D0,{0x91,0xFE,0x00,0xC0,0x4F,0xD7,0x01,0xA5}};


const IID IID_IAgentCtlCommandEx = {0xB0913410,0x3B44,0x11d1,{0xAC,0xBA,0x00,0xC0,0x4F,0xD9,0x75,0x75}};


const IID IID_IAgentCtlCommands = {0xF5BE8BE1,0x7DE6,0x11D0,{0x91,0xFE,0x00,0xC0,0x4F,0xD7,0x01,0xA5}};


const IID IID_IAgentCtlCommandsEx = {0x6BA90C01,0x3910,0x11d1,{0xAC,0xB3,0x00,0xC0,0x4F,0xD9,0x75,0x75}};


const IID IID_IAgentCtlCharacter = {0xF5BE8BD9,0x7DE6,0x11D0,{0x91,0xFE,0x00,0xC0,0x4F,0xD7,0x01,0xA5}};


const IID IID_IAgentCtlAnimationNames = {0x8B77181C,0xD3EF,0x11d1,{0x85,0x00,0x00,0xC0,0x4F,0xA3,0x4A,0x14}};


const IID IID_IAgentCtlCharacterEx = {0xDE8EF600,0x2F82,0x11d1,{0xAC,0xAC,0x00,0xC0,0x4F,0xD9,0x75,0x75}};


const IID IID_IAgentCtlCharacters = {0xF5BE8BE8,0x7DE6,0x11D0,{0x91,0xFE,0x00,0xC0,0x4F,0xD7,0x01,0xA5}};


const IID IID_IAgentCtlAudioObject = {0xF5BE8BDB,0x7DE6,0x11D0,{0x91,0xFE,0x00,0xC0,0x4F,0xD7,0x01,0xA5}};


const IID IID_IAgentCtlAudioObjectEx = {0xF5BE8BF0,0x7DE6,0x11D0,{0x91,0xFE,0x00,0xC0,0x4F,0xD7,0x01,0xA5}};


const IID IID_IAgentCtlSpeechInput = {0xF5BE8BDD,0x7DE6,0x11D0,{0x91,0xFE,0x00,0xC0,0x4F,0xD7,0x01,0xA5}};


const IID IID_IAgentCtlPropertySheet = {0xF5BE8BDF,0x7DE6,0x11D0,{0x91,0xFE,0x00,0xC0,0x4F,0xD7,0x01,0xA5}};


const IID IID_IAgentCtlCommandsWindow = {0x6D0ECB27,0x9968,0x11D0,{0xAC,0x6E,0x00,0xC0,0x4F,0xD9,0x75,0x75}};


const IID IID_IAgentCtl = {0xF5BE8BD1,0x7DE6,0x11D0,{0x91,0xFE,0x00,0xC0,0x4F,0xD7,0x01,0xA5}};


const IID IID_IAgentCtlEx = {0x8563FF20,0x8ECC,0x11d1,{0xB9,0xB4,0x00,0xC0,0x4F,0xD9,0x75,0x75}};


const IID LIBID_AgentObjects = {0xF5BE8BC2,0x7DE6,0x11D0,{0x91,0xFE,0x00,0xC0,0x4F,0xD7,0x01,0xA5}};


const IID DIID__AgentEvents = {0xF5BE8BD4,0x7DE6,0x11D0,{0x91,0xFE,0x00,0xC0,0x4F,0xD7,0x01,0xA5}};


const CLSID CLSID_Agent = {0xD45FD31B,0x5C6E,0x11D1,{0x9E,0xC1,0x00,0xC0,0x4F,0xD7,0x08,0x1F}};


#ifdef __cplusplus
}
#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\vc7addon\devtools\common\win32sdk\include\AF_Irda.h ===
//
// Winsock1.1, IrDA1.1, WindowsNT5.0, Windows98 and WindowsCE1.0.
// Define one of _WIN32_WINNT, _WIN32_WINDOWS, _WIN32_WCE.
//  Copyright (C) Microsoft Corporation, 1994-1999.
//

#ifndef __AFIRDA__
#define __AFIRDA__

#if _MSC_VER > 1000
#pragma once
#endif

#ifndef _WINSOCKAPI_
typedef unsigned char   u_char;
typedef unsigned short  u_short;
typedef unsigned int    u_int;
typedef unsigned long   u_long;
#endif

#define WINDOWS_AF_IRDA         26
#define WINDOWS_PF_IRDA         WINDOWS_AF_IRDA

#define WCE_AF_IRDA             22
#define WCE_PF_IRDA             WCE_AF_IRDA


#if   defined(_WIN32_WINNT) || defined(_WIN32_WINDOWS)
#ifndef AF_IRDA
#define AF_IRDA	                WINDOWS_AF_IRDA
#endif
#define IRDA_PROTO_SOCK_STREAM  1
#elif defined(_WIN32_WCE)
#define AF_IRDA	                WCE_AF_IRDA
#else
#pragma message("One of _WIN32_WINNT | _WIN32_WINDOWS | _WIN32_WCE must be defined.")
#endif

#define PF_IRDA                 AF_IRDA

                            // WINNT, WIN98, WINCE
#define SOL_IRLMP		        0x00FF

#define IRLMP_ENUMDEVICES       0x00000010
#define IRLMP_IAS_SET           0x00000011
#define IRLMP_IAS_QUERY         0x00000012

                            // WINNT, WINCE
#define IRLMP_SEND_PDU_LEN      0x00000013
#define IRLMP_EXCLUSIVE_MODE    0x00000014
#define IRLMP_IRLPT_MODE        0x00000015
#define IRLMP_9WIRE_MODE        0x00000016

                            // WIN98
#define IRLMP_TINYTP_MODE       0x00000017
#define IRLMP_PARAMETERS		0x00000018
#define	IRLMP_DISCOVERY_MODE	0x00000019

                            // WINCE
#define IRLMP_SHARP_MODE        0x00000020

#if defined(_WIN32_WINNT)   // WSAIoctl for lazy discovery
#define SIO_LAZY_DISCOVERY  _IOR('t', 127, u_long)	
#endif

#define IAS_ATTRIB_NO_CLASS     0x00000010
#define IAS_ATTRIB_NO_ATTRIB    0x00000000
#define IAS_ATTRIB_INT          0x00000001
#define IAS_ATTRIB_OCTETSEQ     0x00000002
#define IAS_ATTRIB_STR          0x00000003

#define	IAS_MAX_USER_STRING		256
#define	IAS_MAX_OCTET_STRING	1024
#define IAS_MAX_CLASSNAME		64
#define IAS_MAX_ATTRIBNAME		256

                            // WINNT, WIN98
enum
{
  LM_HB_Extension =             128,    // Any hint byte

  LM_HB1_PnP =                  1,      // First hint byte
  LM_HB1_PDA_Palmtop =          2,
  LM_HB1_Computer =             4,
  LM_HB1_Printer =              8,
  LM_HB1_Modem =                16,
  LM_HB1_Fax =                  32,
  LM_HB1_LANAccess =            64,

  LM_HB2_Telephony =            1,      // Second hint byte
  LM_HB2_FileServer =           2,
};

#define LmCharSetASCII          0
#define LmCharSetISO_8859_1     1
#define LmCharSetISO_8859_2     2
#define LmCharSetISO_8859_3     3
#define LmCharSetISO_8859_4     4
#define LmCharSetISO_8859_5     5
#define LmCharSetISO_8859_6     6
#define LmCharSetISO_8859_7     7
#define LmCharSetISO_8859_8     8
#define LmCharSetISO_8859_9     9
#define LmCharSetUNICODE        0xff

                            // WIN98
typedef u_long LM_BAUD_RATE;

#define  LM_BAUD_1200           1200
#define  LM_BAUD_2400           2400
#define  LM_BAUD_9600           9600
#define  LM_BAUD_19200          19200
#define  LM_BAUD_38400          38400
#define  LM_BAUD_57600          57600
#define  LM_BAUD_115200         115200
#define  LM_BAUD_576K           576000
#define  LM_BAUD_1152K          1152000
#define  LM_BAUD_4M             4000000

typedef struct
{
    u_long          nTXDataBytes;   // Max tx data bytes per packet
    u_long          nRXDataBytes;   // Max rx data bytes per packet
    LM_BAUD_RATE    nBaudRate;      // Negotiated baud rate
    u_long          thresholdTime;  // Threshold (ms)
    u_long          discTime;       // Disconnect (ms)
    u_short         nMSLinkTurn;    // Link turn around (ms)
    u_char          nTXPackets;     // Number packets in transmit window
    u_char          nRXPackets;     // Number packets in receive window
} LM_IRPARMS,*PLM_IRPARMS;

typedef struct _SOCKADDR_IRDA
{
	u_short irdaAddressFamily;
	u_char  irdaDeviceID[4];
	char	irdaServiceName[25];
} SOCKADDR_IRDA, *PSOCKADDR_IRDA, FAR *LPSOCKADDR_IRDA;

typedef struct _WINDOWS_IRDA_DEVICE_INFO
{
	u_char  irdaDeviceID[4];
	char	irdaDeviceName[22];
	u_char	irdaDeviceHints1;
	u_char  irdaDeviceHints2;
	u_char  irdaCharSet;
} WINDOWS_IRDA_DEVICE_INFO, *PWINDOWS_IRDA_DEVICE_INFO, FAR *LPWINDOWS_IRDA_DEVICE_INFO;

typedef struct _WCE_IRDA_DEVICE_INFO
{
	u_char  irdaDeviceID[4];
	char	irdaDeviceName[22];
    u_char  Reserved[2];
} WCE_IRDA_DEVICE_INFO, *PWCE_IRDA_DEVICE_INFO;

#if   defined(_WIN32_WINNT) || defined(_WIN32_WINDOWS)
typedef WINDOWS_IRDA_DEVICE_INFO    IRDA_DEVICE_INFO, *PIRDA_DEVICE_INFO, FAR *LPIRDA_DEVICE_INFO;
#elif defined(_WIN32_WCE)
typedef WCE_IRDA_DEVICE_INFO        IRDA_DEVICE_INFO, *PIRDA_DEVICE_INFO;
#else
#pragma message("One of _WIN32_WINNT | _WIN32_WINDOWS | _WIN32_WCE must be defined.")
#endif

typedef struct _WINDOWS_DEVICELIST
{
	ULONG                       numDevice;
	WINDOWS_IRDA_DEVICE_INFO    Device[1];
} WINDOWS_DEVICELIST, *PWINDOWS_DEVICELIST, FAR *LPWINDOWS_DEVICELIST;

typedef struct _WCE_DEVICELIST
{
	ULONG                       numDevice;
	WCE_IRDA_DEVICE_INFO        Device[1];
} WCE_DEVICELIST, *PWCE_DEVICELIST;

#if   defined(_WIN32_WINNT) || defined(_WIN32_WINDOWS)
typedef WINDOWS_DEVICELIST      DEVICELIST, *PDEVICELIST, FAR *LPDEVICELIST;
#elif defined(_WIN32_WCE)
typedef WCE_DEVICELIST          DEVICELIST, *PDEVICELIST;
#else
#pragma message("One of _WIN32_WINNT | _WIN32_WINDOWS | _WIN32_WCE must be defined.")
#endif

typedef struct _WINDOWS_IAS_SET
{
    char    irdaClassName[IAS_MAX_CLASSNAME];
    char    irdaAttribName[IAS_MAX_ATTRIBNAME];
    u_long	irdaAttribType;
    union
    {
        LONG irdaAttribInt;
        struct
        {
            u_short	Len;
            u_char	OctetSeq[IAS_MAX_OCTET_STRING];
        } irdaAttribOctetSeq;
        struct
        {
            u_char	Len;
            u_char	CharSet;
            u_char	UsrStr[IAS_MAX_USER_STRING];
		} irdaAttribUsrStr;
    } irdaAttribute;
} WINDOWS_IAS_SET, *PWINDOWS_IAS_SET, FAR *LPWINDOWS_IAS_SET;

typedef struct _WINDOWS_IAS_QUERY
{
	u_char	irdaDeviceID[4];
    char    irdaClassName[IAS_MAX_CLASSNAME];
    char    irdaAttribName[IAS_MAX_ATTRIBNAME];
    u_long	irdaAttribType;
    union
    {
        LONG irdaAttribInt;
        struct
        {
            u_long  Len;
            u_char  OctetSeq[IAS_MAX_OCTET_STRING];
        } irdaAttribOctetSeq;
        struct
        {
            u_long  Len;
            u_long	CharSet;
            u_char	UsrStr[IAS_MAX_USER_STRING];
        } irdaAttribUsrStr;
    } irdaAttribute;
} WINDOWS_IAS_QUERY, *PWINDOWS_IAS_QUERY, FAR *LPWINDOWS_IAS_QUERY;

typedef struct _WCE_IAS_SET
{
    char    irdaClassName[61];
    char    irdaAttribName[61];
    u_short irdaAttribType;
    union
    {
        int irdaAttribInt;
        struct
        {
            int     Len;
            u_char  OctetSeq[1];
            u_char  Reserved[3];
        } irdaAttribOctetSeq;
        struct
        {
            int     Len;
            u_char  CharSet;
            u_char  UsrStr[1];
            u_char  Reserved[2];
        } irdaAttribUsrStr;
    } irdaAttribute;
} WCE_IAS_SET, *PWCE_IAS_SET;

typedef struct _WCE_IAS_QUERY
{
	u_char  irdaDeviceID[4];
    char    irdaClassName[61];
    char    irdaAttribName[61];
    u_short irdaAttribType;
    union
    {
        int irdaAttribInt;
        struct
        {
            int     Len;
            u_char  OctetSeq[1];
            u_char  Reserved[3];
        } irdaAttribOctetSeq;
        struct
        {
            int     Len;
            u_char  CharSet;
            u_char  UsrStr[1];
            u_char  Reserved[2];
        } irdaAttribUsrStr;
    } irdaAttribute;
} WCE_IAS_QUERY, *PWCE_IAS_QUERY;

#if   defined(_WIN32_WINNT) || defined(_WIN32_WINDOWS)
typedef WINDOWS_IAS_SET         IAS_SET, *PIAS_SET, FAR *LPIASSET;
typedef WINDOWS_IAS_QUERY       IAS_QUERY, *PIAS_QUERY, FAR *LPIASQUERY;
#elif defined(_WIN32_WCE)
typedef WCE_IAS_SET             IAS_SET, *PIAS_SET;
typedef WCE_IAS_QUERY           IAS_QUERY, *PIAS_QUERY, FAR *LPIASQUERY;
#else
#pragma message("One of _WIN32_WINNT | _WIN32_WINDOWS | _WIN32_WCE must be defined.")
#endif

#endif // __AFIRDA__
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\vc7addon\devtools\common\win32sdk\include\agtctl.h ===
/**************************************************************************
*                                                                         *
* AgtCtl.h - Microsoft Agent Control                                      *
*                                                                         *
* Copyright (c) 1996-1999, Microsoft Corp. All rights reserved.           *
*                                                                         *
**************************************************************************/

#if _MSC_VER < 1200

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


/* File created by MIDL compiler version 3.01.75 */
/* at Tue Sep 01 10:41:00 1998
 */
/* Compiler settings for AgentControl.idl:
    Oicf (OptLev=i2), W1, Zp8, env=Win32, ms_ext, c_ext
    error checks: none
*/
//@@MIDL_FILE_HEADING(  )
#include "rpc.h"
#include "rpcndr.h"
#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __AgtCtlVC5_h__
#define __AgtCtlVC5_h__

#ifdef __cplusplus
extern "C"{
#endif 

/* Forward Declarations */ 

#ifndef __IAgentCtlRequest_FWD_DEFINED__
#define __IAgentCtlRequest_FWD_DEFINED__
typedef interface IAgentCtlRequest IAgentCtlRequest;
#endif 	/* __IAgentCtlRequest_FWD_DEFINED__ */


#ifndef __IAgentCtlUserInput_FWD_DEFINED__
#define __IAgentCtlUserInput_FWD_DEFINED__
typedef interface IAgentCtlUserInput IAgentCtlUserInput;
#endif 	/* __IAgentCtlUserInput_FWD_DEFINED__ */


#ifndef __IAgentCtlBalloon_FWD_DEFINED__
#define __IAgentCtlBalloon_FWD_DEFINED__
typedef interface IAgentCtlBalloon IAgentCtlBalloon;
#endif 	/* __IAgentCtlBalloon_FWD_DEFINED__ */


#ifndef __IAgentCtlBalloonEx_FWD_DEFINED__
#define __IAgentCtlBalloonEx_FWD_DEFINED__
typedef interface IAgentCtlBalloonEx IAgentCtlBalloonEx;
#endif 	/* __IAgentCtlBalloonEx_FWD_DEFINED__ */


#ifndef __IAgentCtlCommand_FWD_DEFINED__
#define __IAgentCtlCommand_FWD_DEFINED__
typedef interface IAgentCtlCommand IAgentCtlCommand;
#endif 	/* __IAgentCtlCommand_FWD_DEFINED__ */


#ifndef __IAgentCtlCommandEx_FWD_DEFINED__
#define __IAgentCtlCommandEx_FWD_DEFINED__
typedef interface IAgentCtlCommandEx IAgentCtlCommandEx;
#endif 	/* __IAgentCtlCommandEx_FWD_DEFINED__ */


#ifndef __IAgentCtlCommands_FWD_DEFINED__
#define __IAgentCtlCommands_FWD_DEFINED__
typedef interface IAgentCtlCommands IAgentCtlCommands;
#endif 	/* __IAgentCtlCommands_FWD_DEFINED__ */


#ifndef __IAgentCtlCommandsEx_FWD_DEFINED__
#define __IAgentCtlCommandsEx_FWD_DEFINED__
typedef interface IAgentCtlCommandsEx IAgentCtlCommandsEx;
#endif 	/* __IAgentCtlCommandsEx_FWD_DEFINED__ */


#ifndef __IAgentCtlCharacter_FWD_DEFINED__
#define __IAgentCtlCharacter_FWD_DEFINED__
typedef interface IAgentCtlCharacter IAgentCtlCharacter;
#endif 	/* __IAgentCtlCharacter_FWD_DEFINED__ */


#ifndef __IAgentCtlAnimationNames_FWD_DEFINED__
#define __IAgentCtlAnimationNames_FWD_DEFINED__
typedef interface IAgentCtlAnimationNames IAgentCtlAnimationNames;
#endif 	/* __IAgentCtlAnimationNames_FWD_DEFINED__ */


#ifndef __IAgentCtlCharacterEx_FWD_DEFINED__
#define __IAgentCtlCharacterEx_FWD_DEFINED__
typedef interface IAgentCtlCharacterEx IAgentCtlCharacterEx;
#endif 	/* __IAgentCtlCharacterEx_FWD_DEFINED__ */


#ifndef __IAgentCtlCharacters_FWD_DEFINED__
#define __IAgentCtlCharacters_FWD_DEFINED__
typedef interface IAgentCtlCharacters IAgentCtlCharacters;
#endif 	/* __IAgentCtlCharacters_FWD_DEFINED__ */


#ifndef __IAgentCtlAudioObject_FWD_DEFINED__
#define __IAgentCtlAudioObject_FWD_DEFINED__
typedef interface IAgentCtlAudioObject IAgentCtlAudioObject;
#endif 	/* __IAgentCtlAudioObject_FWD_DEFINED__ */


#ifndef __IAgentCtlAudioObjectEx_FWD_DEFINED__
#define __IAgentCtlAudioObjectEx_FWD_DEFINED__
typedef interface IAgentCtlAudioObjectEx IAgentCtlAudioObjectEx;
#endif 	/* __IAgentCtlAudioObjectEx_FWD_DEFINED__ */


#ifndef __IAgentCtlSpeechInput_FWD_DEFINED__
#define __IAgentCtlSpeechInput_FWD_DEFINED__
typedef interface IAgentCtlSpeechInput IAgentCtlSpeechInput;
#endif 	/* __IAgentCtlSpeechInput_FWD_DEFINED__ */


#ifndef __IAgentCtlPropertySheet_FWD_DEFINED__
#define __IAgentCtlPropertySheet_FWD_DEFINED__
typedef interface IAgentCtlPropertySheet IAgentCtlPropertySheet;
#endif 	/* __IAgentCtlPropertySheet_FWD_DEFINED__ */


#ifndef __IAgentCtlCommandsWindow_FWD_DEFINED__
#define __IAgentCtlCommandsWindow_FWD_DEFINED__
typedef interface IAgentCtlCommandsWindow IAgentCtlCommandsWindow;
#endif 	/* __IAgentCtlCommandsWindow_FWD_DEFINED__ */


#ifndef __IAgentCtl_FWD_DEFINED__
#define __IAgentCtl_FWD_DEFINED__
typedef interface IAgentCtl IAgentCtl;
#endif 	/* __IAgentCtl_FWD_DEFINED__ */


#ifndef __IAgentCtlEx_FWD_DEFINED__
#define __IAgentCtlEx_FWD_DEFINED__
typedef interface IAgentCtlEx IAgentCtlEx;
#endif 	/* __IAgentCtlEx_FWD_DEFINED__ */


#ifndef __IAgentCtlCharacters_FWD_DEFINED__
#define __IAgentCtlCharacters_FWD_DEFINED__
typedef interface IAgentCtlCharacters IAgentCtlCharacters;
#endif 	/* __IAgentCtlCharacters_FWD_DEFINED__ */


#ifndef __IAgentCtlBalloon_FWD_DEFINED__
#define __IAgentCtlBalloon_FWD_DEFINED__
typedef interface IAgentCtlBalloon IAgentCtlBalloon;
#endif 	/* __IAgentCtlBalloon_FWD_DEFINED__ */


#ifndef __IAgentCtlBalloonEx_FWD_DEFINED__
#define __IAgentCtlBalloonEx_FWD_DEFINED__
typedef interface IAgentCtlBalloonEx IAgentCtlBalloonEx;
#endif 	/* __IAgentCtlBalloonEx_FWD_DEFINED__ */


#ifndef __IAgentCtlCharacter_FWD_DEFINED__
#define __IAgentCtlCharacter_FWD_DEFINED__
typedef interface IAgentCtlCharacter IAgentCtlCharacter;
#endif 	/* __IAgentCtlCharacter_FWD_DEFINED__ */


#ifndef __IAgentCtlCharacterEx_FWD_DEFINED__
#define __IAgentCtlCharacterEx_FWD_DEFINED__
typedef interface IAgentCtlCharacterEx IAgentCtlCharacterEx;
#endif 	/* __IAgentCtlCharacterEx_FWD_DEFINED__ */


#ifndef __IAgentCtlAudioObject_FWD_DEFINED__
#define __IAgentCtlAudioObject_FWD_DEFINED__
typedef interface IAgentCtlAudioObject IAgentCtlAudioObject;
#endif 	/* __IAgentCtlAudioObject_FWD_DEFINED__ */


#ifndef __IAgentCtlAudioObjectEx_FWD_DEFINED__
#define __IAgentCtlAudioObjectEx_FWD_DEFINED__
typedef interface IAgentCtlAudioObjectEx IAgentCtlAudioObjectEx;
#endif 	/* __IAgentCtlAudioObjectEx_FWD_DEFINED__ */


#ifndef __IAgentCtlSpeechInput_FWD_DEFINED__
#define __IAgentCtlSpeechInput_FWD_DEFINED__
typedef interface IAgentCtlSpeechInput IAgentCtlSpeechInput;
#endif 	/* __IAgentCtlSpeechInput_FWD_DEFINED__ */


#ifndef __IAgentCtlPropertySheet_FWD_DEFINED__
#define __IAgentCtlPropertySheet_FWD_DEFINED__
typedef interface IAgentCtlPropertySheet IAgentCtlPropertySheet;
#endif 	/* __IAgentCtlPropertySheet_FWD_DEFINED__ */


#ifndef __IAgentCtlCommands_FWD_DEFINED__
#define __IAgentCtlCommands_FWD_DEFINED__
typedef interface IAgentCtlCommands IAgentCtlCommands;
#endif 	/* __IAgentCtlCommands_FWD_DEFINED__ */


#ifndef __IAgentCtlCommandsEx_FWD_DEFINED__
#define __IAgentCtlCommandsEx_FWD_DEFINED__
typedef interface IAgentCtlCommandsEx IAgentCtlCommandsEx;
#endif 	/* __IAgentCtlCommandsEx_FWD_DEFINED__ */


#ifndef __IAgentCtlCommand_FWD_DEFINED__
#define __IAgentCtlCommand_FWD_DEFINED__
typedef interface IAgentCtlCommand IAgentCtlCommand;
#endif 	/* __IAgentCtlCommand_FWD_DEFINED__ */


#ifndef __IAgentCtlCommandEx_FWD_DEFINED__
#define __IAgentCtlCommandEx_FWD_DEFINED__
typedef interface IAgentCtlCommandEx IAgentCtlCommandEx;
#endif 	/* __IAgentCtlCommandEx_FWD_DEFINED__ */


#ifndef __IAgentCtlRequest_FWD_DEFINED__
#define __IAgentCtlRequest_FWD_DEFINED__
typedef interface IAgentCtlRequest IAgentCtlRequest;
#endif 	/* __IAgentCtlRequest_FWD_DEFINED__ */


#ifndef __IAgentCtlUserInput_FWD_DEFINED__
#define __IAgentCtlUserInput_FWD_DEFINED__
typedef interface IAgentCtlUserInput IAgentCtlUserInput;
#endif 	/* __IAgentCtlUserInput_FWD_DEFINED__ */


#ifndef __IAgentCtlCommandsWindow_FWD_DEFINED__
#define __IAgentCtlCommandsWindow_FWD_DEFINED__
typedef interface IAgentCtlCommandsWindow IAgentCtlCommandsWindow;
#endif 	/* __IAgentCtlCommandsWindow_FWD_DEFINED__ */


#ifndef __IAgentCtl_FWD_DEFINED__
#define __IAgentCtl_FWD_DEFINED__
typedef interface IAgentCtl IAgentCtl;
#endif 	/* __IAgentCtl_FWD_DEFINED__ */


#ifndef __IAgentCtlEx_FWD_DEFINED__
#define __IAgentCtlEx_FWD_DEFINED__
typedef interface IAgentCtlEx IAgentCtlEx;
#endif 	/* __IAgentCtlEx_FWD_DEFINED__ */


#ifndef ___AgentEvents_FWD_DEFINED__
#define ___AgentEvents_FWD_DEFINED__
typedef interface _AgentEvents _AgentEvents;
#endif 	/* ___AgentEvents_FWD_DEFINED__ */


#ifndef __Agent_FWD_DEFINED__
#define __Agent_FWD_DEFINED__

#ifdef __cplusplus
typedef class Agent Agent;
#else
typedef struct Agent Agent;
#endif /* __cplusplus */

#endif 	/* __Agent_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"
#include "ocidl.h"

void __RPC_FAR * __RPC_USER MIDL_user_allocate(size_t);
void __RPC_USER MIDL_user_free( void __RPC_FAR * ); 

/****************************************
 * Generated header for interface: __MIDL_itf_AgentControl_0000
 * at Tue Sep 01 10:41:00 1998
 * using MIDL 3.01.75
 ****************************************/
/* [local] */ 


#define	RequestSuccess	( 0 )

#define	RequestFailed	( 1 )

#define	RequestPending	( 2 )

#define	RequestInterrupted	( 3 )

#define	RequestInProgress	( 4 )



extern RPC_IF_HANDLE __MIDL_itf_AgentControl_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_AgentControl_0000_v0_0_s_ifspec;

#ifndef __IAgentCtlRequest_INTERFACE_DEFINED__
#define __IAgentCtlRequest_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCtlRequest
 * at Tue Sep 01 10:41:00 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentCtlRequest;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("1DAB85C3-803A-11D0-AC63-00C04FD97575")
    IAgentCtlRequest : public IDispatch
    {
    public:
        virtual /* [hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_ID( 
            /* [retval][out] */ long __RPC_FAR *ID) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Status( 
            /* [retval][out] */ long __RPC_FAR *Status) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Description( 
            /* [retval][out] */ BSTR __RPC_FAR *Description) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Number( 
            /* [retval][out] */ long __RPC_FAR *Number) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlRequestVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlRequest __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlRequest __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlRequest __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlRequest __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlRequest __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlRequest __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlRequest __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ID )( 
            IAgentCtlRequest __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *ID);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Status )( 
            IAgentCtlRequest __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Status);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Description )( 
            IAgentCtlRequest __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Description);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Number )( 
            IAgentCtlRequest __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Number);
        
        END_INTERFACE
    } IAgentCtlRequestVtbl;

    interface IAgentCtlRequest
    {
        CONST_VTBL struct IAgentCtlRequestVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlRequest_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlRequest_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlRequest_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlRequest_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlRequest_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlRequest_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlRequest_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlRequest_get_ID(This,ID)	\
    (This)->lpVtbl -> get_ID(This,ID)

#define IAgentCtlRequest_get_Status(This,Status)	\
    (This)->lpVtbl -> get_Status(This,Status)

#define IAgentCtlRequest_get_Description(This,Description)	\
    (This)->lpVtbl -> get_Description(This,Description)

#define IAgentCtlRequest_get_Number(This,Number)	\
    (This)->lpVtbl -> get_Number(This,Number)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [hidden][propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlRequest_get_ID_Proxy( 
    IAgentCtlRequest __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *ID);


void __RPC_STUB IAgentCtlRequest_get_ID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlRequest_get_Status_Proxy( 
    IAgentCtlRequest __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *Status);


void __RPC_STUB IAgentCtlRequest_get_Status_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlRequest_get_Description_Proxy( 
    IAgentCtlRequest __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Description);


void __RPC_STUB IAgentCtlRequest_get_Description_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlRequest_get_Number_Proxy( 
    IAgentCtlRequest __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *Number);


void __RPC_STUB IAgentCtlRequest_get_Number_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlRequest_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlUserInput_INTERFACE_DEFINED__
#define __IAgentCtlUserInput_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCtlUserInput
 * at Tue Sep 01 10:41:00 1998
 * using MIDL 3.01.75
 ****************************************/
/* [object][dual][uuid] */ 



EXTERN_C const IID IID_IAgentCtlUserInput;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("C4ABF875-8100-11D0-AC63-00C04FD97575")
    IAgentCtlUserInput : public IDispatch
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ short __RPC_FAR *pCount) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR __RPC_FAR *pName) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CharacterID( 
            /* [retval][out] */ BSTR __RPC_FAR *pCharacterID) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Confidence( 
            /* [retval][out] */ long __RPC_FAR *pConfidence) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Voice( 
            /* [retval][out] */ BSTR __RPC_FAR *pVoice) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Alt1Name( 
            /* [retval][out] */ BSTR __RPC_FAR *pAlt1Name) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Alt1Confidence( 
            /* [retval][out] */ long __RPC_FAR *pAlt1Confidence) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Alt1Voice( 
            /* [retval][out] */ BSTR __RPC_FAR *pAlt1Voice) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Alt2Name( 
            /* [retval][out] */ BSTR __RPC_FAR *pAlt2Name) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Alt2Confidence( 
            /* [retval][out] */ long __RPC_FAR *pAlt2Confidence) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Alt2Voice( 
            /* [retval][out] */ BSTR __RPC_FAR *pAlt2Voice) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlUserInputVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlUserInput __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlUserInput __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Count )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *pCount);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Name )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pName);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_CharacterID )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pCharacterID);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Confidence )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *pConfidence);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Voice )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pVoice);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Alt1Name )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pAlt1Name);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Alt1Confidence )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *pAlt1Confidence);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Alt1Voice )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pAlt1Voice);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Alt2Name )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pAlt2Name);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Alt2Confidence )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *pAlt2Confidence);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Alt2Voice )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pAlt2Voice);
        
        END_INTERFACE
    } IAgentCtlUserInputVtbl;

    interface IAgentCtlUserInput
    {
        CONST_VTBL struct IAgentCtlUserInputVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlUserInput_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlUserInput_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlUserInput_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlUserInput_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlUserInput_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlUserInput_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlUserInput_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlUserInput_get_Count(This,pCount)	\
    (This)->lpVtbl -> get_Count(This,pCount)

#define IAgentCtlUserInput_get_Name(This,pName)	\
    (This)->lpVtbl -> get_Name(This,pName)

#define IAgentCtlUserInput_get_CharacterID(This,pCharacterID)	\
    (This)->lpVtbl -> get_CharacterID(This,pCharacterID)

#define IAgentCtlUserInput_get_Confidence(This,pConfidence)	\
    (This)->lpVtbl -> get_Confidence(This,pConfidence)

#define IAgentCtlUserInput_get_Voice(This,pVoice)	\
    (This)->lpVtbl -> get_Voice(This,pVoice)

#define IAgentCtlUserInput_get_Alt1Name(This,pAlt1Name)	\
    (This)->lpVtbl -> get_Alt1Name(This,pAlt1Name)

#define IAgentCtlUserInput_get_Alt1Confidence(This,pAlt1Confidence)	\
    (This)->lpVtbl -> get_Alt1Confidence(This,pAlt1Confidence)

#define IAgentCtlUserInput_get_Alt1Voice(This,pAlt1Voice)	\
    (This)->lpVtbl -> get_Alt1Voice(This,pAlt1Voice)

#define IAgentCtlUserInput_get_Alt2Name(This,pAlt2Name)	\
    (This)->lpVtbl -> get_Alt2Name(This,pAlt2Name)

#define IAgentCtlUserInput_get_Alt2Confidence(This,pAlt2Confidence)	\
    (This)->lpVtbl -> get_Alt2Confidence(This,pAlt2Confidence)

#define IAgentCtlUserInput_get_Alt2Voice(This,pAlt2Voice)	\
    (This)->lpVtbl -> get_Alt2Voice(This,pAlt2Voice)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propget] */ HRESULT STDMETHODCALLTYPE IAgentCtlUserInput_get_Count_Proxy( 
    IAgentCtlUserInput __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *pCount);


void __RPC_STUB IAgentCtlUserInput_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget] */ HRESULT STDMETHODCALLTYPE IAgentCtlUserInput_get_Name_Proxy( 
    IAgentCtlUserInput __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pName);


void __RPC_STUB IAgentCtlUserInput_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget] */ HRESULT STDMETHODCALLTYPE IAgentCtlUserInput_get_CharacterID_Proxy( 
    IAgentCtlUserInput __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pCharacterID);


void __RPC_STUB IAgentCtlUserInput_get_CharacterID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget] */ HRESULT STDMETHODCALLTYPE IAgentCtlUserInput_get_Confidence_Proxy( 
    IAgentCtlUserInput __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *pConfidence);


void __RPC_STUB IAgentCtlUserInput_get_Confidence_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget] */ HRESULT STDMETHODCALLTYPE IAgentCtlUserInput_get_Voice_Proxy( 
    IAgentCtlUserInput __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pVoice);


void __RPC_STUB IAgentCtlUserInput_get_Voice_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget] */ HRESULT STDMETHODCALLTYPE IAgentCtlUserInput_get_Alt1Name_Proxy( 
    IAgentCtlUserInput __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pAlt1Name);


void __RPC_STUB IAgentCtlUserInput_get_Alt1Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget] */ HRESULT STDMETHODCALLTYPE IAgentCtlUserInput_get_Alt1Confidence_Proxy( 
    IAgentCtlUserInput __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *pAlt1Confidence);


void __RPC_STUB IAgentCtlUserInput_get_Alt1Confidence_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget] */ HRESULT STDMETHODCALLTYPE IAgentCtlUserInput_get_Alt1Voice_Proxy( 
    IAgentCtlUserInput __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pAlt1Voice);


void __RPC_STUB IAgentCtlUserInput_get_Alt1Voice_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget] */ HRESULT STDMETHODCALLTYPE IAgentCtlUserInput_get_Alt2Name_Proxy( 
    IAgentCtlUserInput __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pAlt2Name);


void __RPC_STUB IAgentCtlUserInput_get_Alt2Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget] */ HRESULT STDMETHODCALLTYPE IAgentCtlUserInput_get_Alt2Confidence_Proxy( 
    IAgentCtlUserInput __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *pAlt2Confidence);


void __RPC_STUB IAgentCtlUserInput_get_Alt2Confidence_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget] */ HRESULT STDMETHODCALLTYPE IAgentCtlUserInput_get_Alt2Voice_Proxy( 
    IAgentCtlUserInput __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pAlt2Voice);


void __RPC_STUB IAgentCtlUserInput_get_Alt2Voice_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlUserInput_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlBalloon_INTERFACE_DEFINED__
#define __IAgentCtlBalloon_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCtlBalloon
 * at Tue Sep 01 10:41:00 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentCtlBalloon;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("F5BE8BD3-7DE6-11D0-91FE-00C04FD701A5")
    IAgentCtlBalloon : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Enabled) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_NumberOfLines( 
            /* [retval][out] */ long __RPC_FAR *Lines) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_CharsPerLine( 
            /* [retval][out] */ long __RPC_FAR *CharsPerLine) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_FontName( 
            /* [retval][out] */ BSTR __RPC_FAR *FontName) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_FontSize( 
            /* [retval][out] */ long __RPC_FAR *FontSize) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_FontBold( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontBold) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_FontItalic( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontItalic) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_FontStrikethru( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontStrikethru) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_FontUnderline( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontUnderline) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ForeColor( 
            /* [retval][out] */ long __RPC_FAR *ForeColor) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_BackColor( 
            /* [retval][out] */ long __RPC_FAR *BackColor) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_BorderColor( 
            /* [retval][out] */ long __RPC_FAR *BorderColor) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Visible( 
            /* [in] */ VARIANT_BOOL Visible) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_FontName( 
            /* [in] */ BSTR FontName) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_FontSize( 
            /* [in] */ long FontSize) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_FontCharSet( 
            /* [in] */ short FontCharSet) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_FontCharSet( 
            /* [retval][out] */ short __RPC_FAR *FontCharSet) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlBalloonVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlBalloon __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlBalloon __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Enabled )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Enabled);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_NumberOfLines )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Lines);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_CharsPerLine )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *CharsPerLine);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontName )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *FontName);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontSize )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *FontSize);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontBold )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontBold);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontItalic )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontItalic);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontStrikethru )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontStrikethru);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontUnderline )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontUnderline);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ForeColor )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *ForeColor);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_BackColor )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *BackColor);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_BorderColor )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *BorderColor);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Visible )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Visible )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_FontName )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [in] */ BSTR FontName);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_FontSize )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [in] */ long FontSize);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_FontCharSet )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [in] */ short FontCharSet);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontCharSet )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *FontCharSet);
        
        END_INTERFACE
    } IAgentCtlBalloonVtbl;

    interface IAgentCtlBalloon
    {
        CONST_VTBL struct IAgentCtlBalloonVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlBalloon_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlBalloon_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlBalloon_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlBalloon_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlBalloon_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlBalloon_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlBalloon_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlBalloon_get_Enabled(This,Enabled)	\
    (This)->lpVtbl -> get_Enabled(This,Enabled)

#define IAgentCtlBalloon_get_NumberOfLines(This,Lines)	\
    (This)->lpVtbl -> get_NumberOfLines(This,Lines)

#define IAgentCtlBalloon_get_CharsPerLine(This,CharsPerLine)	\
    (This)->lpVtbl -> get_CharsPerLine(This,CharsPerLine)

#define IAgentCtlBalloon_get_FontName(This,FontName)	\
    (This)->lpVtbl -> get_FontName(This,FontName)

#define IAgentCtlBalloon_get_FontSize(This,FontSize)	\
    (This)->lpVtbl -> get_FontSize(This,FontSize)

#define IAgentCtlBalloon_get_FontBold(This,FontBold)	\
    (This)->lpVtbl -> get_FontBold(This,FontBold)

#define IAgentCtlBalloon_get_FontItalic(This,FontItalic)	\
    (This)->lpVtbl -> get_FontItalic(This,FontItalic)

#define IAgentCtlBalloon_get_FontStrikethru(This,FontStrikethru)	\
    (This)->lpVtbl -> get_FontStrikethru(This,FontStrikethru)

#define IAgentCtlBalloon_get_FontUnderline(This,FontUnderline)	\
    (This)->lpVtbl -> get_FontUnderline(This,FontUnderline)

#define IAgentCtlBalloon_get_ForeColor(This,ForeColor)	\
    (This)->lpVtbl -> get_ForeColor(This,ForeColor)

#define IAgentCtlBalloon_get_BackColor(This,BackColor)	\
    (This)->lpVtbl -> get_BackColor(This,BackColor)

#define IAgentCtlBalloon_get_BorderColor(This,BorderColor)	\
    (This)->lpVtbl -> get_BorderColor(This,BorderColor)

#define IAgentCtlBalloon_put_Visible(This,Visible)	\
    (This)->lpVtbl -> put_Visible(This,Visible)

#define IAgentCtlBalloon_get_Visible(This,Visible)	\
    (This)->lpVtbl -> get_Visible(This,Visible)

#define IAgentCtlBalloon_put_FontName(This,FontName)	\
    (This)->lpVtbl -> put_FontName(This,FontName)

#define IAgentCtlBalloon_put_FontSize(This,FontSize)	\
    (This)->lpVtbl -> put_FontSize(This,FontSize)

#define IAgentCtlBalloon_put_FontCharSet(This,FontCharSet)	\
    (This)->lpVtbl -> put_FontCharSet(This,FontCharSet)

#define IAgentCtlBalloon_get_FontCharSet(This,FontCharSet)	\
    (This)->lpVtbl -> get_FontCharSet(This,FontCharSet)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_Enabled_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Enabled);


void __RPC_STUB IAgentCtlBalloon_get_Enabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_NumberOfLines_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *Lines);


void __RPC_STUB IAgentCtlBalloon_get_NumberOfLines_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_CharsPerLine_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *CharsPerLine);


void __RPC_STUB IAgentCtlBalloon_get_CharsPerLine_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_FontName_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *FontName);


void __RPC_STUB IAgentCtlBalloon_get_FontName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_FontSize_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *FontSize);


void __RPC_STUB IAgentCtlBalloon_get_FontSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_FontBold_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontBold);


void __RPC_STUB IAgentCtlBalloon_get_FontBold_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_FontItalic_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontItalic);


void __RPC_STUB IAgentCtlBalloon_get_FontItalic_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_FontStrikethru_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontStrikethru);


void __RPC_STUB IAgentCtlBalloon_get_FontStrikethru_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_FontUnderline_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontUnderline);


void __RPC_STUB IAgentCtlBalloon_get_FontUnderline_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_ForeColor_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *ForeColor);


void __RPC_STUB IAgentCtlBalloon_get_ForeColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_BackColor_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *BackColor);


void __RPC_STUB IAgentCtlBalloon_get_BackColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_BorderColor_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *BorderColor);


void __RPC_STUB IAgentCtlBalloon_get_BorderColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_put_Visible_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL Visible);


void __RPC_STUB IAgentCtlBalloon_put_Visible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_Visible_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);


void __RPC_STUB IAgentCtlBalloon_get_Visible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_put_FontName_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [in] */ BSTR FontName);


void __RPC_STUB IAgentCtlBalloon_put_FontName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_put_FontSize_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [in] */ long FontSize);


void __RPC_STUB IAgentCtlBalloon_put_FontSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_put_FontCharSet_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [in] */ short FontCharSet);


void __RPC_STUB IAgentCtlBalloon_put_FontCharSet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_FontCharSet_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *FontCharSet);


void __RPC_STUB IAgentCtlBalloon_get_FontCharSet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlBalloon_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlBalloonEx_INTERFACE_DEFINED__
#define __IAgentCtlBalloonEx_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCtlBalloonEx
 * at Tue Sep 01 10:41:00 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentCtlBalloonEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("822DB1C0-8879-11d1-9EC6-00C04FD7081F")
    IAgentCtlBalloonEx : public IAgentCtlBalloon
    {
    public:
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Style( 
            /* [in] */ long Style) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Style( 
            /* [retval][out] */ long __RPC_FAR *Style) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlBalloonExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlBalloonEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlBalloonEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Enabled )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Enabled);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_NumberOfLines )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Lines);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_CharsPerLine )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *CharsPerLine);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontName )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *FontName);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontSize )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *FontSize);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontBold )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontBold);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontItalic )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontItalic);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontStrikethru )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontStrikethru);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontUnderline )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontUnderline);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ForeColor )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *ForeColor);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_BackColor )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *BackColor);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_BorderColor )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *BorderColor);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Visible )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Visible )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_FontName )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [in] */ BSTR FontName);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_FontSize )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [in] */ long FontSize);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_FontCharSet )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [in] */ short FontCharSet);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontCharSet )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *FontCharSet);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Style )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [in] */ long Style);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Style )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Style);
        
        END_INTERFACE
    } IAgentCtlBalloonExVtbl;

    interface IAgentCtlBalloonEx
    {
        CONST_VTBL struct IAgentCtlBalloonExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlBalloonEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlBalloonEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlBalloonEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlBalloonEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlBalloonEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlBalloonEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlBalloonEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlBalloonEx_get_Enabled(This,Enabled)	\
    (This)->lpVtbl -> get_Enabled(This,Enabled)

#define IAgentCtlBalloonEx_get_NumberOfLines(This,Lines)	\
    (This)->lpVtbl -> get_NumberOfLines(This,Lines)

#define IAgentCtlBalloonEx_get_CharsPerLine(This,CharsPerLine)	\
    (This)->lpVtbl -> get_CharsPerLine(This,CharsPerLine)

#define IAgentCtlBalloonEx_get_FontName(This,FontName)	\
    (This)->lpVtbl -> get_FontName(This,FontName)

#define IAgentCtlBalloonEx_get_FontSize(This,FontSize)	\
    (This)->lpVtbl -> get_FontSize(This,FontSize)

#define IAgentCtlBalloonEx_get_FontBold(This,FontBold)	\
    (This)->lpVtbl -> get_FontBold(This,FontBold)

#define IAgentCtlBalloonEx_get_FontItalic(This,FontItalic)	\
    (This)->lpVtbl -> get_FontItalic(This,FontItalic)

#define IAgentCtlBalloonEx_get_FontStrikethru(This,FontStrikethru)	\
    (This)->lpVtbl -> get_FontStrikethru(This,FontStrikethru)

#define IAgentCtlBalloonEx_get_FontUnderline(This,FontUnderline)	\
    (This)->lpVtbl -> get_FontUnderline(This,FontUnderline)

#define IAgentCtlBalloonEx_get_ForeColor(This,ForeColor)	\
    (This)->lpVtbl -> get_ForeColor(This,ForeColor)

#define IAgentCtlBalloonEx_get_BackColor(This,BackColor)	\
    (This)->lpVtbl -> get_BackColor(This,BackColor)

#define IAgentCtlBalloonEx_get_BorderColor(This,BorderColor)	\
    (This)->lpVtbl -> get_BorderColor(This,BorderColor)

#define IAgentCtlBalloonEx_put_Visible(This,Visible)	\
    (This)->lpVtbl -> put_Visible(This,Visible)

#define IAgentCtlBalloonEx_get_Visible(This,Visible)	\
    (This)->lpVtbl -> get_Visible(This,Visible)

#define IAgentCtlBalloonEx_put_FontName(This,FontName)	\
    (This)->lpVtbl -> put_FontName(This,FontName)

#define IAgentCtlBalloonEx_put_FontSize(This,FontSize)	\
    (This)->lpVtbl -> put_FontSize(This,FontSize)

#define IAgentCtlBalloonEx_put_FontCharSet(This,FontCharSet)	\
    (This)->lpVtbl -> put_FontCharSet(This,FontCharSet)

#define IAgentCtlBalloonEx_get_FontCharSet(This,FontCharSet)	\
    (This)->lpVtbl -> get_FontCharSet(This,FontCharSet)


#define IAgentCtlBalloonEx_put_Style(This,Style)	\
    (This)->lpVtbl -> put_Style(This,Style)

#define IAgentCtlBalloonEx_get_Style(This,Style)	\
    (This)->lpVtbl -> get_Style(This,Style)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloonEx_put_Style_Proxy( 
    IAgentCtlBalloonEx __RPC_FAR * This,
    /* [in] */ long Style);


void __RPC_STUB IAgentCtlBalloonEx_put_Style_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloonEx_get_Style_Proxy( 
    IAgentCtlBalloonEx __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *Style);


void __RPC_STUB IAgentCtlBalloonEx_get_Style_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlBalloonEx_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlCommand_INTERFACE_DEFINED__
#define __IAgentCtlCommand_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCtlCommand
 * at Tue Sep 01 10:41:00 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentCtlCommand;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("F5BE8BE3-7DE6-11D0-91FE-00C04FD701A5")
    IAgentCtlCommand : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Voice( 
            /* [retval][out] */ BSTR __RPC_FAR *Voice) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Voice( 
            /* [in] */ BSTR Voice) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Caption( 
            /* [retval][out] */ BSTR __RPC_FAR *Caption) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Caption( 
            /* [in] */ BSTR Caption) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Enabled) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Enabled( 
            /* [in] */ VARIANT_BOOL Enabled) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Visible( 
            /* [in] */ VARIANT_BOOL Visible) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Confidence( 
            /* [retval][out] */ long __RPC_FAR *Confidence) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Confidence( 
            /* [in] */ long Confidence) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ConfidenceText( 
            /* [retval][out] */ BSTR __RPC_FAR *Text) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_ConfidenceText( 
            /* [in] */ BSTR Text) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlCommandVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlCommand __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlCommand __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Voice )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Voice);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Voice )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [in] */ BSTR Voice);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Caption )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Caption);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Caption )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [in] */ BSTR Caption);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Enabled )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Enabled);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Enabled )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Enabled);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Visible )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Visible )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Confidence )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Confidence);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Confidence )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [in] */ long Confidence);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ConfidenceText )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Text);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_ConfidenceText )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [in] */ BSTR Text);
        
        END_INTERFACE
    } IAgentCtlCommandVtbl;

    interface IAgentCtlCommand
    {
        CONST_VTBL struct IAgentCtlCommandVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlCommand_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlCommand_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlCommand_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlCommand_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlCommand_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlCommand_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlCommand_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlCommand_get_Voice(This,Voice)	\
    (This)->lpVtbl -> get_Voice(This,Voice)

#define IAgentCtlCommand_put_Voice(This,Voice)	\
    (This)->lpVtbl -> put_Voice(This,Voice)

#define IAgentCtlCommand_get_Caption(This,Caption)	\
    (This)->lpVtbl -> get_Caption(This,Caption)

#define IAgentCtlCommand_put_Caption(This,Caption)	\
    (This)->lpVtbl -> put_Caption(This,Caption)

#define IAgentCtlCommand_get_Enabled(This,Enabled)	\
    (This)->lpVtbl -> get_Enabled(This,Enabled)

#define IAgentCtlCommand_put_Enabled(This,Enabled)	\
    (This)->lpVtbl -> put_Enabled(This,Enabled)

#define IAgentCtlCommand_get_Visible(This,Visible)	\
    (This)->lpVtbl -> get_Visible(This,Visible)

#define IAgentCtlCommand_put_Visible(This,Visible)	\
    (This)->lpVtbl -> put_Visible(This,Visible)

#define IAgentCtlCommand_get_Confidence(This,Confidence)	\
    (This)->lpVtbl -> get_Confidence(This,Confidence)

#define IAgentCtlCommand_put_Confidence(This,Confidence)	\
    (This)->lpVtbl -> put_Confidence(This,Confidence)

#define IAgentCtlCommand_get_ConfidenceText(This,Text)	\
    (This)->lpVtbl -> get_ConfidenceText(This,Text)

#define IAgentCtlCommand_put_ConfidenceText(This,Text)	\
    (This)->lpVtbl -> put_ConfidenceText(This,Text)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommand_get_Voice_Proxy( 
    IAgentCtlCommand __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Voice);


void __RPC_STUB IAgentCtlCommand_get_Voice_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommand_put_Voice_Proxy( 
    IAgentCtlCommand __RPC_FAR * This,
    /* [in] */ BSTR Voice);


void __RPC_STUB IAgentCtlCommand_put_Voice_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommand_get_Caption_Proxy( 
    IAgentCtlCommand __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Caption);


void __RPC_STUB IAgentCtlCommand_get_Caption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommand_put_Caption_Proxy( 
    IAgentCtlCommand __RPC_FAR * This,
    /* [in] */ BSTR Caption);


void __RPC_STUB IAgentCtlCommand_put_Caption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommand_get_Enabled_Proxy( 
    IAgentCtlCommand __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Enabled);


void __RPC_STUB IAgentCtlCommand_get_Enabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommand_put_Enabled_Proxy( 
    IAgentCtlCommand __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL Enabled);


void __RPC_STUB IAgentCtlCommand_put_Enabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommand_get_Visible_Proxy( 
    IAgentCtlCommand __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);


void __RPC_STUB IAgentCtlCommand_get_Visible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommand_put_Visible_Proxy( 
    IAgentCtlCommand __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL Visible);


void __RPC_STUB IAgentCtlCommand_put_Visible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommand_get_Confidence_Proxy( 
    IAgentCtlCommand __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *Confidence);


void __RPC_STUB IAgentCtlCommand_get_Confidence_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommand_put_Confidence_Proxy( 
    IAgentCtlCommand __RPC_FAR * This,
    /* [in] */ long Confidence);


void __RPC_STUB IAgentCtlCommand_put_Confidence_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommand_get_ConfidenceText_Proxy( 
    IAgentCtlCommand __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Text);


void __RPC_STUB IAgentCtlCommand_get_ConfidenceText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommand_put_ConfidenceText_Proxy( 
    IAgentCtlCommand __RPC_FAR * This,
    /* [in] */ BSTR Text);


void __RPC_STUB IAgentCtlCommand_put_ConfidenceText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlCommand_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlCommandEx_INTERFACE_DEFINED__
#define __IAgentCtlCommandEx_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCtlCommandEx
 * at Tue Sep 01 10:41:00 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentCtlCommandEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("B0913410-3B44-11d1-ACBA-00C04FD97575")
    IAgentCtlCommandEx : public IAgentCtlCommand
    {
    public:
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_HelpContextID( 
            /* [in] */ long ID) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_HelpContextID( 
            /* [retval][out] */ long __RPC_FAR *ID) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_VoiceCaption( 
            /* [in] */ BSTR VoiceCaption) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_VoiceCaption( 
            /* [retval][out] */ BSTR __RPC_FAR *VoiceCaption) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlCommandExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlCommandEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlCommandEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Voice )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Voice);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Voice )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [in] */ BSTR Voice);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Caption )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Caption);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Caption )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [in] */ BSTR Caption);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Enabled )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Enabled);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Enabled )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Enabled);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Visible )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Visible )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Confidence )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Confidence);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Confidence )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [in] */ long Confidence);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ConfidenceText )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Text);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_ConfidenceText )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [in] */ BSTR Text);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_HelpContextID )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [in] */ long ID);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_HelpContextID )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *ID);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_VoiceCaption )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [in] */ BSTR VoiceCaption);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_VoiceCaption )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *VoiceCaption);
        
        END_INTERFACE
    } IAgentCtlCommandExVtbl;

    interface IAgentCtlCommandEx
    {
        CONST_VTBL struct IAgentCtlCommandExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlCommandEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlCommandEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlCommandEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlCommandEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlCommandEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlCommandEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlCommandEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlCommandEx_get_Voice(This,Voice)	\
    (This)->lpVtbl -> get_Voice(This,Voice)

#define IAgentCtlCommandEx_put_Voice(This,Voice)	\
    (This)->lpVtbl -> put_Voice(This,Voice)

#define IAgentCtlCommandEx_get_Caption(This,Caption)	\
    (This)->lpVtbl -> get_Caption(This,Caption)

#define IAgentCtlCommandEx_put_Caption(This,Caption)	\
    (This)->lpVtbl -> put_Caption(This,Caption)

#define IAgentCtlCommandEx_get_Enabled(This,Enabled)	\
    (This)->lpVtbl -> get_Enabled(This,Enabled)

#define IAgentCtlCommandEx_put_Enabled(This,Enabled)	\
    (This)->lpVtbl -> put_Enabled(This,Enabled)

#define IAgentCtlCommandEx_get_Visible(This,Visible)	\
    (This)->lpVtbl -> get_Visible(This,Visible)

#define IAgentCtlCommandEx_put_Visible(This,Visible)	\
    (This)->lpVtbl -> put_Visible(This,Visible)

#define IAgentCtlCommandEx_get_Confidence(This,Confidence)	\
    (This)->lpVtbl -> get_Confidence(This,Confidence)

#define IAgentCtlCommandEx_put_Confidence(This,Confidence)	\
    (This)->lpVtbl -> put_Confidence(This,Confidence)

#define IAgentCtlCommandEx_get_ConfidenceText(This,Text)	\
    (This)->lpVtbl -> get_ConfidenceText(This,Text)

#define IAgentCtlCommandEx_put_ConfidenceText(This,Text)	\
    (This)->lpVtbl -> put_ConfidenceText(This,Text)


#define IAgentCtlCommandEx_put_HelpContextID(This,ID)	\
    (This)->lpVtbl -> put_HelpContextID(This,ID)

#define IAgentCtlCommandEx_get_HelpContextID(This,ID)	\
    (This)->lpVtbl -> get_HelpContextID(This,ID)

#define IAgentCtlCommandEx_put_VoiceCaption(This,VoiceCaption)	\
    (This)->lpVtbl -> put_VoiceCaption(This,VoiceCaption)

#define IAgentCtlCommandEx_get_VoiceCaption(This,VoiceCaption)	\
    (This)->lpVtbl -> get_VoiceCaption(This,VoiceCaption)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandEx_put_HelpContextID_Proxy( 
    IAgentCtlCommandEx __RPC_FAR * This,
    /* [in] */ long ID);


void __RPC_STUB IAgentCtlCommandEx_put_HelpContextID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandEx_get_HelpContextID_Proxy( 
    IAgentCtlCommandEx __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *ID);


void __RPC_STUB IAgentCtlCommandEx_get_HelpContextID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandEx_put_VoiceCaption_Proxy( 
    IAgentCtlCommandEx __RPC_FAR * This,
    /* [in] */ BSTR VoiceCaption);


void __RPC_STUB IAgentCtlCommandEx_put_VoiceCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandEx_get_VoiceCaption_Proxy( 
    IAgentCtlCommandEx __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *VoiceCaption);


void __RPC_STUB IAgentCtlCommandEx_get_VoiceCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlCommandEx_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlCommands_INTERFACE_DEFINED__
#define __IAgentCtlCommands_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCtlCommands
 * at Tue Sep 01 10:41:00 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentCtlCommands;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("F5BE8BE1-7DE6-11D0-91FE-00C04FD701A5")
    IAgentCtlCommands : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAgentCtlCommandEx __RPC_FAR *__RPC_FAR *Item) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Command( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAgentCtlCommandEx __RPC_FAR *__RPC_FAR *Item) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long __RPC_FAR *Count) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Caption( 
            /* [retval][out] */ BSTR __RPC_FAR *Caption) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Caption( 
            /* [in] */ BSTR Caption) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Voice( 
            /* [retval][out] */ BSTR __RPC_FAR *Voice) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Voice( 
            /* [in] */ BSTR Voice) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Visible( 
            /* [in] */ VARIANT_BOOL Visible) = 0;
        
        virtual /* [restricted][propget][id] */ HRESULT STDMETHODCALLTYPE get_Enum( 
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkEnum) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR Name,
            /* [optional][in] */ VARIANT Caption,
            /* [optional][in] */ VARIANT Voice,
            /* [optional][in] */ VARIANT Enabled,
            /* [optional][in] */ VARIANT Visible,
            /* [retval][out] */ IAgentCtlCommand __RPC_FAR *__RPC_FAR *Command) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Insert( 
            /* [in] */ BSTR Name,
            /* [in] */ BSTR RefName,
            /* [optional][in] */ VARIANT Before,
            /* [optional][in] */ VARIANT Caption,
            /* [optional][in] */ VARIANT Voice,
            /* [optional][in] */ VARIANT Enabled,
            /* [optional][in] */ VARIANT Visible,
            /* [retval][out] */ IAgentCtlCommand __RPC_FAR *__RPC_FAR *Command) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ BSTR Name) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE RemoveAll( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlCommandsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlCommands __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlCommands __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Item )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAgentCtlCommandEx __RPC_FAR *__RPC_FAR *Item);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Command )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAgentCtlCommandEx __RPC_FAR *__RPC_FAR *Item);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Count )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Count);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Caption )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Caption);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Caption )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [in] */ BSTR Caption);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Voice )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Voice);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Voice )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [in] */ BSTR Voice);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Visible )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Visible )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [restricted][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Enum )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkEnum);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Add )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [in] */ BSTR Name,
            /* [optional][in] */ VARIANT Caption,
            /* [optional][in] */ VARIANT Voice,
            /* [optional][in] */ VARIANT Enabled,
            /* [optional][in] */ VARIANT Visible,
            /* [retval][out] */ IAgentCtlCommand __RPC_FAR *__RPC_FAR *Command);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Insert )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [in] */ BSTR Name,
            /* [in] */ BSTR RefName,
            /* [optional][in] */ VARIANT Before,
            /* [optional][in] */ VARIANT Caption,
            /* [optional][in] */ VARIANT Voice,
            /* [optional][in] */ VARIANT Enabled,
            /* [optional][in] */ VARIANT Visible,
            /* [retval][out] */ IAgentCtlCommand __RPC_FAR *__RPC_FAR *Command);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Remove )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [in] */ BSTR Name);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RemoveAll )( 
            IAgentCtlCommands __RPC_FAR * This);
        
        END_INTERFACE
    } IAgentCtlCommandsVtbl;

    interface IAgentCtlCommands
    {
        CONST_VTBL struct IAgentCtlCommandsVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlCommands_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlCommands_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlCommands_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlCommands_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlCommands_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlCommands_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlCommands_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlCommands_get_Item(This,Name,Item)	\
    (This)->lpVtbl -> get_Item(This,Name,Item)

#define IAgentCtlCommands_Command(This,Name,Item)	\
    (This)->lpVtbl -> Command(This,Name,Item)

#define IAgentCtlCommands_get_Count(This,Count)	\
    (This)->lpVtbl -> get_Count(This,Count)

#define IAgentCtlCommands_get_Caption(This,Caption)	\
    (This)->lpVtbl -> get_Caption(This,Caption)

#define IAgentCtlCommands_put_Caption(This,Caption)	\
    (This)->lpVtbl -> put_Caption(This,Caption)

#define IAgentCtlCommands_get_Voice(This,Voice)	\
    (This)->lpVtbl -> get_Voice(This,Voice)

#define IAgentCtlCommands_put_Voice(This,Voice)	\
    (This)->lpVtbl -> put_Voice(This,Voice)

#define IAgentCtlCommands_get_Visible(This,Visible)	\
    (This)->lpVtbl -> get_Visible(This,Visible)

#define IAgentCtlCommands_put_Visible(This,Visible)	\
    (This)->lpVtbl -> put_Visible(This,Visible)

#define IAgentCtlCommands_get_Enum(This,ppunkEnum)	\
    (This)->lpVtbl -> get_Enum(This,ppunkEnum)

#define IAgentCtlCommands_Add(This,Name,Caption,Voice,Enabled,Visible,Command)	\
    (This)->lpVtbl -> Add(This,Name,Caption,Voice,Enabled,Visible,Command)

#define IAgentCtlCommands_Insert(This,Name,RefName,Before,Caption,Voice,Enabled,Visible,Command)	\
    (This)->lpVtbl -> Insert(This,Name,RefName,Before,Caption,Voice,Enabled,Visible,Command)

#define IAgentCtlCommands_Remove(This,Name)	\
    (This)->lpVtbl -> Remove(This,Name)

#define IAgentCtlCommands_RemoveAll(This)	\
    (This)->lpVtbl -> RemoveAll(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_get_Item_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [in] */ BSTR Name,
    /* [retval][out] */ IAgentCtlCommandEx __RPC_FAR *__RPC_FAR *Item);


void __RPC_STUB IAgentCtlCommands_get_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_Command_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [in] */ BSTR Name,
    /* [retval][out] */ IAgentCtlCommandEx __RPC_FAR *__RPC_FAR *Item);


void __RPC_STUB IAgentCtlCommands_Command_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_get_Count_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *Count);


void __RPC_STUB IAgentCtlCommands_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_get_Caption_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Caption);


void __RPC_STUB IAgentCtlCommands_get_Caption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_put_Caption_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [in] */ BSTR Caption);


void __RPC_STUB IAgentCtlCommands_put_Caption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_get_Voice_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Voice);


void __RPC_STUB IAgentCtlCommands_get_Voice_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_put_Voice_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [in] */ BSTR Voice);


void __RPC_STUB IAgentCtlCommands_put_Voice_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_get_Visible_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);


void __RPC_STUB IAgentCtlCommands_get_Visible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_put_Visible_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL Visible);


void __RPC_STUB IAgentCtlCommands_put_Visible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [restricted][propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_get_Enum_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkEnum);


void __RPC_STUB IAgentCtlCommands_get_Enum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_Add_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [in] */ BSTR Name,
    /* [optional][in] */ VARIANT Caption,
    /* [optional][in] */ VARIANT Voice,
    /* [optional][in] */ VARIANT Enabled,
    /* [optional][in] */ VARIANT Visible,
    /* [retval][out] */ IAgentCtlCommand __RPC_FAR *__RPC_FAR *Command);


void __RPC_STUB IAgentCtlCommands_Add_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_Insert_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [in] */ BSTR Name,
    /* [in] */ BSTR RefName,
    /* [optional][in] */ VARIANT Before,
    /* [optional][in] */ VARIANT Caption,
    /* [optional][in] */ VARIANT Voice,
    /* [optional][in] */ VARIANT Enabled,
    /* [optional][in] */ VARIANT Visible,
    /* [retval][out] */ IAgentCtlCommand __RPC_FAR *__RPC_FAR *Command);


void __RPC_STUB IAgentCtlCommands_Insert_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_Remove_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [in] */ BSTR Name);


void __RPC_STUB IAgentCtlCommands_Remove_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_RemoveAll_Proxy( 
    IAgentCtlCommands __RPC_FAR * This);


void __RPC_STUB IAgentCtlCommands_RemoveAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlCommands_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlCommandsEx_INTERFACE_DEFINED__
#define __IAgentCtlCommandsEx_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCtlCommandsEx
 * at Tue Sep 01 10:41:00 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentCtlCommandsEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("6BA90C01-3910-11d1-ACB3-00C04FD97575")
    IAgentCtlCommandsEx : public IAgentCtlCommands
    {
    public:
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_DefaultCommand( 
            /* [in] */ BSTR Name) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_DefaultCommand( 
            /* [retval][out] */ BSTR __RPC_FAR *Name) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_HelpContextID( 
            /* [in] */ long ID) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_HelpContextID( 
            /* [retval][out] */ long __RPC_FAR *ID) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_FontName( 
            /* [in] */ BSTR FontName) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_FontName( 
            /* [retval][out] */ BSTR __RPC_FAR *FontName) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_FontSize( 
            /* [retval][out] */ long __RPC_FAR *FontSize) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_FontSize( 
            /* [in] */ long FontSize) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_VoiceCaption( 
            /* [in] */ BSTR VoiceCaption) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_VoiceCaption( 
            /* [retval][out] */ BSTR __RPC_FAR *VoiceCaption) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_GlobalVoiceCommandsEnabled( 
            /* [in] */ VARIANT_BOOL Enable) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_GlobalVoiceCommandsEnabled( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Enable) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlCommandsExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlCommandsEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlCommandsEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Item )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAgentCtlCommandEx __RPC_FAR *__RPC_FAR *Item);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Command )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAgentCtlCommandEx __RPC_FAR *__RPC_FAR *Item);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Count )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Count);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Caption )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Caption);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Caption )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR Caption);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Voice )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Voice);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Voice )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR Voice);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Visible )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Visible )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [restricted][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Enum )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkEnum);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Add )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR Name,
            /* [optional][in] */ VARIANT Caption,
            /* [optional][in] */ VARIANT Voice,
            /* [optional][in] */ VARIANT Enabled,
            /* [optional][in] */ VARIANT Visible,
            /* [retval][out] */ IAgentCtlCommand __RPC_FAR *__RPC_FAR *Command);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Insert )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR Name,
            /* [in] */ BSTR RefName,
            /* [optional][in] */ VARIANT Before,
            /* [optional][in] */ VARIANT Caption,
            /* [optional][in] */ VARIANT Voice,
            /* [optional][in] */ VARIANT Enabled,
            /* [optional][in] */ VARIANT Visible,
            /* [retval][out] */ IAgentCtlCommand __RPC_FAR *__RPC_FAR *Command);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Remove )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR Name);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RemoveAll )( 
            IAgentCtlCommandsEx __RPC_FAR * This);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_DefaultCommand )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR Name);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_DefaultCommand )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Name);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_HelpContextID )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ long ID);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_HelpContextID )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *ID);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_FontName )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR FontName);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontName )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *FontName);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontSize )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *FontSize);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_FontSize )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ long FontSize);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_VoiceCaption )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR VoiceCaption);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_VoiceCaption )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *VoiceCaption);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_GlobalVoiceCommandsEnabled )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Enable);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_GlobalVoiceCommandsEnabled )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Enable);
        
        END_INTERFACE
    } IAgentCtlCommandsExVtbl;

    interface IAgentCtlCommandsEx
    {
        CONST_VTBL struct IAgentCtlCommandsExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlCommandsEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlCommandsEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlCommandsEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlCommandsEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlCommandsEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlCommandsEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlCommandsEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlCommandsEx_get_Item(This,Name,Item)	\
    (This)->lpVtbl -> get_Item(This,Name,Item)

#define IAgentCtlCommandsEx_Command(This,Name,Item)	\
    (This)->lpVtbl -> Command(This,Name,Item)

#define IAgentCtlCommandsEx_get_Count(This,Count)	\
    (This)->lpVtbl -> get_Count(This,Count)

#define IAgentCtlCommandsEx_get_Caption(This,Caption)	\
    (This)->lpVtbl -> get_Caption(This,Caption)

#define IAgentCtlCommandsEx_put_Caption(This,Caption)	\
    (This)->lpVtbl -> put_Caption(This,Caption)

#define IAgentCtlCommandsEx_get_Voice(This,Voice)	\
    (This)->lpVtbl -> get_Voice(This,Voice)

#define IAgentCtlCommandsEx_put_Voice(This,Voice)	\
    (This)->lpVtbl -> put_Voice(This,Voice)

#define IAgentCtlCommandsEx_get_Visible(This,Visible)	\
    (This)->lpVtbl -> get_Visible(This,Visible)

#define IAgentCtlCommandsEx_put_Visible(This,Visible)	\
    (This)->lpVtbl -> put_Visible(This,Visible)

#define IAgentCtlCommandsEx_get_Enum(This,ppunkEnum)	\
    (This)->lpVtbl -> get_Enum(This,ppunkEnum)

#define IAgentCtlCommandsEx_Add(This,Name,Caption,Voice,Enabled,Visible,Command)	\
    (This)->lpVtbl -> Add(This,Name,Caption,Voice,Enabled,Visible,Command)

#define IAgentCtlCommandsEx_Insert(This,Name,RefName,Before,Caption,Voice,Enabled,Visible,Command)	\
    (This)->lpVtbl -> Insert(This,Name,RefName,Before,Caption,Voice,Enabled,Visible,Command)

#define IAgentCtlCommandsEx_Remove(This,Name)	\
    (This)->lpVtbl -> Remove(This,Name)

#define IAgentCtlCommandsEx_RemoveAll(This)	\
    (This)->lpVtbl -> RemoveAll(This)


#define IAgentCtlCommandsEx_put_DefaultCommand(This,Name)	\
    (This)->lpVtbl -> put_DefaultCommand(This,Name)

#define IAgentCtlCommandsEx_get_DefaultCommand(This,Name)	\
    (This)->lpVtbl -> get_DefaultCommand(This,Name)

#define IAgentCtlCommandsEx_put_HelpContextID(This,ID)	\
    (This)->lpVtbl -> put_HelpContextID(This,ID)

#define IAgentCtlCommandsEx_get_HelpContextID(This,ID)	\
    (This)->lpVtbl -> get_HelpContextID(This,ID)

#define IAgentCtlCommandsEx_put_FontName(This,FontName)	\
    (This)->lpVtbl -> put_FontName(This,FontName)

#define IAgentCtlCommandsEx_get_FontName(This,FontName)	\
    (This)->lpVtbl -> get_FontName(This,FontName)

#define IAgentCtlCommandsEx_get_FontSize(This,FontSize)	\
    (This)->lpVtbl -> get_FontSize(This,FontSize)

#define IAgentCtlCommandsEx_put_FontSize(This,FontSize)	\
    (This)->lpVtbl -> put_FontSize(This,FontSize)

#define IAgentCtlCommandsEx_put_VoiceCaption(This,VoiceCaption)	\
    (This)->lpVtbl -> put_VoiceCaption(This,VoiceCaption)

#define IAgentCtlCommandsEx_get_VoiceCaption(This,VoiceCaption)	\
    (This)->lpVtbl -> get_VoiceCaption(This,VoiceCaption)

#define IAgentCtlCommandsEx_put_GlobalVoiceCommandsEnabled(This,Enable)	\
    (This)->lpVtbl -> put_GlobalVoiceCommandsEnabled(This,Enable)

#define IAgentCtlCommandsEx_get_GlobalVoiceCommandsEnabled(This,Enable)	\
    (This)->lpVtbl -> get_GlobalVoiceCommandsEnabled(This,Enable)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsEx_put_DefaultCommand_Proxy( 
    IAgentCtlCommandsEx __RPC_FAR * This,
    /* [in] */ BSTR Name);


void __RPC_STUB IAgentCtlCommandsEx_put_DefaultCommand_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsEx_get_DefaultCommand_Proxy( 
    IAgentCtlCommandsEx __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Name);


void __RPC_STUB IAgentCtlCommandsEx_get_DefaultCommand_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsEx_put_HelpContextID_Proxy( 
    IAgentCtlCommandsEx __RPC_FAR * This,
    /* [in] */ long ID);


void __RPC_STUB IAgentCtlCommandsEx_put_HelpContextID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsEx_get_HelpContextID_Proxy( 
    IAgentCtlCommandsEx __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *ID);


void __RPC_STUB IAgentCtlCommandsEx_get_HelpContextID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsEx_put_FontName_Proxy( 
    IAgentCtlCommandsEx __RPC_FAR * This,
    /* [in] */ BSTR FontName);


void __RPC_STUB IAgentCtlCommandsEx_put_FontName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsEx_get_FontName_Proxy( 
    IAgentCtlCommandsEx __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *FontName);


void __RPC_STUB IAgentCtlCommandsEx_get_FontName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsEx_get_FontSize_Proxy( 
    IAgentCtlCommandsEx __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *FontSize);


void __RPC_STUB IAgentCtlCommandsEx_get_FontSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsEx_put_FontSize_Proxy( 
    IAgentCtlCommandsEx __RPC_FAR * This,
    /* [in] */ long FontSize);


void __RPC_STUB IAgentCtlCommandsEx_put_FontSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsEx_put_VoiceCaption_Proxy( 
    IAgentCtlCommandsEx __RPC_FAR * This,
    /* [in] */ BSTR VoiceCaption);


void __RPC_STUB IAgentCtlCommandsEx_put_VoiceCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsEx_get_VoiceCaption_Proxy( 
    IAgentCtlCommandsEx __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *VoiceCaption);


void __RPC_STUB IAgentCtlCommandsEx_get_VoiceCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsEx_put_GlobalVoiceCommandsEnabled_Proxy( 
    IAgentCtlCommandsEx __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL Enable);


void __RPC_STUB IAgentCtlCommandsEx_put_GlobalVoiceCommandsEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsEx_get_GlobalVoiceCommandsEnabled_Proxy( 
    IAgentCtlCommandsEx __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Enable);


void __RPC_STUB IAgentCtlCommandsEx_get_GlobalVoiceCommandsEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlCommandsEx_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlCharacter_INTERFACE_DEFINED__
#define __IAgentCtlCharacter_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCtlCharacter
 * at Tue Sep 01 10:41:00 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentCtlCharacter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("F5BE8BD9-7DE6-11D0-91FE-00C04FD701A5")
    IAgentCtlCharacter : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Balloon( 
            /* [retval][out] */ IAgentCtlBalloonEx __RPC_FAR *__RPC_FAR *ppidBalloon) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Commands( 
            /* [retval][out] */ IAgentCtlCommandsEx __RPC_FAR *__RPC_FAR *ppidCommands) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR __RPC_FAR *Name) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Description( 
            /* [retval][out] */ BSTR __RPC_FAR *Description) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Left( 
            short Left) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Left( 
            /* [retval][out] */ short __RPC_FAR *Left) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Top( 
            short Top) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Top( 
            /* [retval][out] */ short __RPC_FAR *Top) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Height( 
            short Height) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Height( 
            /* [retval][out] */ short __RPC_FAR *Height) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Width( 
            short Width) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Width( 
            /* [retval][out] */ short __RPC_FAR *Width) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Speed( 
            /* [retval][out] */ long __RPC_FAR *Speed) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Pitch( 
            /* [retval][out] */ long __RPC_FAR *Pitch) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_IdleOn( 
            VARIANT_BOOL On) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_IdleOn( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Activate( 
            /* [optional][in] */ VARIANT State,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Success) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Play( 
            /* [in] */ BSTR Animation,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Get( 
            /* [in] */ BSTR Type,
            /* [in] */ BSTR Name,
            /* [optional][in] */ VARIANT Queue,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Stop( 
            /* [optional][in] */ VARIANT Request) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Wait( 
            /* [in] */ IDispatch __RPC_FAR *WaitForRequest,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Interrupt( 
            /* [in] */ IDispatch __RPC_FAR *InterruptRequest,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Speak( 
            /* [optional][in] */ VARIANT Text,
            /* [optional][in] */ VARIANT Url,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GestureAt( 
            /* [in] */ short x,
            /* [in] */ short y,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE MoveTo( 
            /* [in] */ short x,
            /* [in] */ short y,
            /* [optional][in] */ VARIANT Speed,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Hide( 
            /* [optional][in] */ VARIANT Fast,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Show( 
            /* [optional][in] */ VARIANT Fast,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE StopAll( 
            /* [optional][in] */ VARIANT Types) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_MoveCause( 
            /* [retval][out] */ short __RPC_FAR *MoveCause) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_VisibilityCause( 
            /* [retval][out] */ short __RPC_FAR *VisibilityCause) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_HasOtherClients( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *HasOtherClients) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_SoundEffectsOn( 
            VARIANT_BOOL On) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_SoundEffectsOn( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR Name) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Description( 
            /* [in] */ BSTR Description) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtraData( 
            /* [retval][out] */ BSTR __RPC_FAR *ExtraData) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlCharacterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlCharacter __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlCharacter __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Balloon )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlBalloonEx __RPC_FAR *__RPC_FAR *ppidBalloon);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Commands )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlCommandsEx __RPC_FAR *__RPC_FAR *ppidCommands);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Name )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Name);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Description )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Description);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Visible )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Left )( 
            IAgentCtlCharacter __RPC_FAR * This,
            short Left);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Left )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Left);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Top )( 
            IAgentCtlCharacter __RPC_FAR * This,
            short Top);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Top )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Top);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Height )( 
            IAgentCtlCharacter __RPC_FAR * This,
            short Height);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Height )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Height);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Width )( 
            IAgentCtlCharacter __RPC_FAR * This,
            short Width);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Width )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Width);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Speed )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Speed);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Pitch )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Pitch);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_IdleOn )( 
            IAgentCtlCharacter __RPC_FAR * This,
            VARIANT_BOOL On);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_IdleOn )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Activate )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [optional][in] */ VARIANT State,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Success);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Play )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [in] */ BSTR Animation,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Get )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [in] */ BSTR Type,
            /* [in] */ BSTR Name,
            /* [optional][in] */ VARIANT Queue,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Stop )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [optional][in] */ VARIANT Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Wait )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [in] */ IDispatch __RPC_FAR *WaitForRequest,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Interrupt )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [in] */ IDispatch __RPC_FAR *InterruptRequest,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Speak )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [optional][in] */ VARIANT Text,
            /* [optional][in] */ VARIANT Url,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GestureAt )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [in] */ short x,
            /* [in] */ short y,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *MoveTo )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [in] */ short x,
            /* [in] */ short y,
            /* [optional][in] */ VARIANT Speed,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Hide )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [optional][in] */ VARIANT Fast,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Show )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [optional][in] */ VARIANT Fast,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *StopAll )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [optional][in] */ VARIANT Types);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_MoveCause )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *MoveCause);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_VisibilityCause )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *VisibilityCause);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_HasOtherClients )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *HasOtherClients);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_SoundEffectsOn )( 
            IAgentCtlCharacter __RPC_FAR * This,
            VARIANT_BOOL On);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SoundEffectsOn )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Name )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [in] */ BSTR Name);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Description )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [in] */ BSTR Description);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ExtraData )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *ExtraData);
        
        END_INTERFACE
    } IAgentCtlCharacterVtbl;

    interface IAgentCtlCharacter
    {
        CONST_VTBL struct IAgentCtlCharacterVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlCharacter_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlCharacter_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlCharacter_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlCharacter_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlCharacter_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlCharacter_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlCharacter_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlCharacter_get_Balloon(This,ppidBalloon)	\
    (This)->lpVtbl -> get_Balloon(This,ppidBalloon)

#define IAgentCtlCharacter_get_Commands(This,ppidCommands)	\
    (This)->lpVtbl -> get_Commands(This,ppidCommands)

#define IAgentCtlCharacter_get_Name(This,Name)	\
    (This)->lpVtbl -> get_Name(This,Name)

#define IAgentCtlCharacter_get_Description(This,Description)	\
    (This)->lpVtbl -> get_Description(This,Description)

#define IAgentCtlCharacter_get_Visible(This,Visible)	\
    (This)->lpVtbl -> get_Visible(This,Visible)

#define IAgentCtlCharacter_put_Left(This,Left)	\
    (This)->lpVtbl -> put_Left(This,Left)

#define IAgentCtlCharacter_get_Left(This,Left)	\
    (This)->lpVtbl -> get_Left(This,Left)

#define IAgentCtlCharacter_put_Top(This,Top)	\
    (This)->lpVtbl -> put_Top(This,Top)

#define IAgentCtlCharacter_get_Top(This,Top)	\
    (This)->lpVtbl -> get_Top(This,Top)

#define IAgentCtlCharacter_put_Height(This,Height)	\
    (This)->lpVtbl -> put_Height(This,Height)

#define IAgentCtlCharacter_get_Height(This,Height)	\
    (This)->lpVtbl -> get_Height(This,Height)

#define IAgentCtlCharacter_put_Width(This,Width)	\
    (This)->lpVtbl -> put_Width(This,Width)

#define IAgentCtlCharacter_get_Width(This,Width)	\
    (This)->lpVtbl -> get_Width(This,Width)

#define IAgentCtlCharacter_get_Speed(This,Speed)	\
    (This)->lpVtbl -> get_Speed(This,Speed)

#define IAgentCtlCharacter_get_Pitch(This,Pitch)	\
    (This)->lpVtbl -> get_Pitch(This,Pitch)

#define IAgentCtlCharacter_put_IdleOn(This,On)	\
    (This)->lpVtbl -> put_IdleOn(This,On)

#define IAgentCtlCharacter_get_IdleOn(This,On)	\
    (This)->lpVtbl -> get_IdleOn(This,On)

#define IAgentCtlCharacter_Activate(This,State,Success)	\
    (This)->lpVtbl -> Activate(This,State,Success)

#define IAgentCtlCharacter_Play(This,Animation,Request)	\
    (This)->lpVtbl -> Play(This,Animation,Request)

#define IAgentCtlCharacter_Get(This,Type,Name,Queue,Request)	\
    (This)->lpVtbl -> Get(This,Type,Name,Queue,Request)

#define IAgentCtlCharacter_Stop(This,Request)	\
    (This)->lpVtbl -> Stop(This,Request)

#define IAgentCtlCharacter_Wait(This,WaitForRequest,Request)	\
    (This)->lpVtbl -> Wait(This,WaitForRequest,Request)

#define IAgentCtlCharacter_Interrupt(This,InterruptRequest,Request)	\
    (This)->lpVtbl -> Interrupt(This,InterruptRequest,Request)

#define IAgentCtlCharacter_Speak(This,Text,Url,Request)	\
    (This)->lpVtbl -> Speak(This,Text,Url,Request)

#define IAgentCtlCharacter_GestureAt(This,x,y,Request)	\
    (This)->lpVtbl -> GestureAt(This,x,y,Request)

#define IAgentCtlCharacter_MoveTo(This,x,y,Speed,Request)	\
    (This)->lpVtbl -> MoveTo(This,x,y,Speed,Request)

#define IAgentCtlCharacter_Hide(This,Fast,Request)	\
    (This)->lpVtbl -> Hide(This,Fast,Request)

#define IAgentCtlCharacter_Show(This,Fast,Request)	\
    (This)->lpVtbl -> Show(This,Fast,Request)

#define IAgentCtlCharacter_StopAll(This,Types)	\
    (This)->lpVtbl -> StopAll(This,Types)

#define IAgentCtlCharacter_get_MoveCause(This,MoveCause)	\
    (This)->lpVtbl -> get_MoveCause(This,MoveCause)

#define IAgentCtlCharacter_get_VisibilityCause(This,VisibilityCause)	\
    (This)->lpVtbl -> get_VisibilityCause(This,VisibilityCause)

#define IAgentCtlCharacter_get_HasOtherClients(This,HasOtherClients)	\
    (This)->lpVtbl -> get_HasOtherClients(This,HasOtherClients)

#define IAgentCtlCharacter_put_SoundEffectsOn(This,On)	\
    (This)->lpVtbl -> put_SoundEffectsOn(This,On)

#define IAgentCtlCharacter_get_SoundEffectsOn(This,On)	\
    (This)->lpVtbl -> get_SoundEffectsOn(This,On)

#define IAgentCtlCharacter_put_Name(This,Name)	\
    (This)->lpVtbl -> put_Name(This,Name)

#define IAgentCtlCharacter_put_Description(This,Description)	\
    (This)->lpVtbl -> put_Description(This,Description)

#define IAgentCtlCharacter_get_ExtraData(This,ExtraData)	\
    (This)->lpVtbl -> get_ExtraData(This,ExtraData)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_Balloon_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ IAgentCtlBalloonEx __RPC_FAR *__RPC_FAR *ppidBalloon);


void __RPC_STUB IAgentCtlCharacter_get_Balloon_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_Commands_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ IAgentCtlCommandsEx __RPC_FAR *__RPC_FAR *ppidCommands);


void __RPC_STUB IAgentCtlCharacter_get_Commands_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_Name_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Name);


void __RPC_STUB IAgentCtlCharacter_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_Description_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Description);


void __RPC_STUB IAgentCtlCharacter_get_Description_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_Visible_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);


void __RPC_STUB IAgentCtlCharacter_get_Visible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_put_Left_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    short Left);


void __RPC_STUB IAgentCtlCharacter_put_Left_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_Left_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Left);


void __RPC_STUB IAgentCtlCharacter_get_Left_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_put_Top_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    short Top);


void __RPC_STUB IAgentCtlCharacter_put_Top_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_Top_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Top);


void __RPC_STUB IAgentCtlCharacter_get_Top_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_put_Height_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    short Height);


void __RPC_STUB IAgentCtlCharacter_put_Height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_Height_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Height);


void __RPC_STUB IAgentCtlCharacter_get_Height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_put_Width_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    short Width);


void __RPC_STUB IAgentCtlCharacter_put_Width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_Width_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Width);


void __RPC_STUB IAgentCtlCharacter_get_Width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_Speed_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *Speed);


void __RPC_STUB IAgentCtlCharacter_get_Speed_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_Pitch_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *Pitch);


void __RPC_STUB IAgentCtlCharacter_get_Pitch_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_put_IdleOn_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    VARIANT_BOOL On);


void __RPC_STUB IAgentCtlCharacter_put_IdleOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_IdleOn_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On);


void __RPC_STUB IAgentCtlCharacter_get_IdleOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_Activate_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [optional][in] */ VARIANT State,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Success);


void __RPC_STUB IAgentCtlCharacter_Activate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_Play_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [in] */ BSTR Animation,
    /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);


void __RPC_STUB IAgentCtlCharacter_Play_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_Get_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [in] */ BSTR Type,
    /* [in] */ BSTR Name,
    /* [optional][in] */ VARIANT Queue,
    /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);


void __RPC_STUB IAgentCtlCharacter_Get_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_Stop_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [optional][in] */ VARIANT Request);


void __RPC_STUB IAgentCtlCharacter_Stop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_Wait_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [in] */ IDispatch __RPC_FAR *WaitForRequest,
    /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);


void __RPC_STUB IAgentCtlCharacter_Wait_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_Interrupt_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [in] */ IDispatch __RPC_FAR *InterruptRequest,
    /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);


void __RPC_STUB IAgentCtlCharacter_Interrupt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_Speak_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [optional][in] */ VARIANT Text,
    /* [optional][in] */ VARIANT Url,
    /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);


void __RPC_STUB IAgentCtlCharacter_Speak_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_GestureAt_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [in] */ short x,
    /* [in] */ short y,
    /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);


void __RPC_STUB IAgentCtlCharacter_GestureAt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_MoveTo_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [in] */ short x,
    /* [in] */ short y,
    /* [optional][in] */ VARIANT Speed,
    /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);


void __RPC_STUB IAgentCtlCharacter_MoveTo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_Hide_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [optional][in] */ VARIANT Fast,
    /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);


void __RPC_STUB IAgentCtlCharacter_Hide_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_Show_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [optional][in] */ VARIANT Fast,
    /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);


void __RPC_STUB IAgentCtlCharacter_Show_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_StopAll_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [optional][in] */ VARIANT Types);


void __RPC_STUB IAgentCtlCharacter_StopAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_MoveCause_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *MoveCause);


void __RPC_STUB IAgentCtlCharacter_get_MoveCause_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_VisibilityCause_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *VisibilityCause);


void __RPC_STUB IAgentCtlCharacter_get_VisibilityCause_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_HasOtherClients_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *HasOtherClients);


void __RPC_STUB IAgentCtlCharacter_get_HasOtherClients_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_put_SoundEffectsOn_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    VARIANT_BOOL On);


void __RPC_STUB IAgentCtlCharacter_put_SoundEffectsOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_SoundEffectsOn_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On);


void __RPC_STUB IAgentCtlCharacter_get_SoundEffectsOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_put_Name_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [in] */ BSTR Name);


void __RPC_STUB IAgentCtlCharacter_put_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_put_Description_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [in] */ BSTR Description);


void __RPC_STUB IAgentCtlCharacter_put_Description_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_ExtraData_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *ExtraData);


void __RPC_STUB IAgentCtlCharacter_get_ExtraData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlCharacter_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlAnimationNames_INTERFACE_DEFINED__
#define __IAgentCtlAnimationNames_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCtlAnimationNames
 * at Tue Sep 01 10:41:00 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentCtlAnimationNames;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("8B77181C-D3EF-11d1-8500-00C04FA34A14")
    IAgentCtlAnimationNames : public IDispatch
    {
    public:
        virtual /* [restricted][propget][id] */ HRESULT STDMETHODCALLTYPE get_Enum( 
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkEnum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlAnimationNamesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlAnimationNames __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlAnimationNames __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlAnimationNames __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlAnimationNames __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlAnimationNames __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlAnimationNames __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlAnimationNames __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [restricted][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Enum )( 
            IAgentCtlAnimationNames __RPC_FAR * This,
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkEnum);
        
        END_INTERFACE
    } IAgentCtlAnimationNamesVtbl;

    interface IAgentCtlAnimationNames
    {
        CONST_VTBL struct IAgentCtlAnimationNamesVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlAnimationNames_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlAnimationNames_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlAnimationNames_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlAnimationNames_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlAnimationNames_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlAnimationNames_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlAnimationNames_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlAnimationNames_get_Enum(This,ppunkEnum)	\
    (This)->lpVtbl -> get_Enum(This,ppunkEnum)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [restricted][propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlAnimationNames_get_Enum_Proxy( 
    IAgentCtlAnimationNames __RPC_FAR * This,
    /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkEnum);


void __RPC_STUB IAgentCtlAnimationNames_get_Enum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlAnimationNames_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlCharacterEx_INTERFACE_DEFINED__
#define __IAgentCtlCharacterEx_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCtlCharacterEx
 * at Tue Sep 01 10:41:00 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentCtlCharacterEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("DE8EF600-2F82-11d1-ACAC-00C04FD97575")
    IAgentCtlCharacterEx : public IAgentCtlCharacter
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ShowPopupMenu( 
            /* [in] */ short x,
            /* [in] */ short y,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Showed) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_AutoPopupMenu( 
            /* [in] */ VARIANT_BOOL On) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoPopupMenu( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_HelpModeOn( 
            /* [in] */ VARIANT_BOOL On) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_HelpModeOn( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_HelpContextID( 
            /* [in] */ long ID) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_HelpContextID( 
            /* [retval][out] */ long __RPC_FAR *ID) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Active( 
            /* [retval][out] */ short __RPC_FAR *State) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Listen( 
            /* [in] */ VARIANT_BOOL Listen,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *StartedListening) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_LanguageID( 
            /* [in] */ long LanguageID) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_LanguageID( 
            /* [retval][out] */ long __RPC_FAR *LanguageID) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_SRModeID( 
            /* [retval][out] */ BSTR __RPC_FAR *EngineModeId) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_SRModeID( 
            /* [in] */ BSTR EngineModeId) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_TTSModeID( 
            /* [retval][out] */ BSTR __RPC_FAR *EngineModeId) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_TTSModeID( 
            /* [in] */ BSTR EngineModeId) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_HelpFile( 
            /* [retval][out] */ BSTR __RPC_FAR *File) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_HelpFile( 
            /* [in] */ BSTR File) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_GUID( 
            /* [retval][out] */ BSTR __RPC_FAR *GUID) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_OriginalHeight( 
            /* [retval][out] */ short __RPC_FAR *Height) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_OriginalWidth( 
            /* [retval][out] */ short __RPC_FAR *Width) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Think( 
            /* [in] */ BSTR Text,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Version( 
            /* [retval][out] */ BSTR __RPC_FAR *Version) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_AnimationNames( 
            /* [retval][out] */ IAgentCtlAnimationNames __RPC_FAR *__RPC_FAR *Names) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_SRStatus( 
            /* [retval][out] */ long __RPC_FAR *Status) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlCharacterExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlCharacterEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlCharacterEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Balloon )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlBalloonEx __RPC_FAR *__RPC_FAR *ppidBalloon);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Commands )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlCommandsEx __RPC_FAR *__RPC_FAR *ppidCommands);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Name )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Name);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Description )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Description);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Visible )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Left )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            short Left);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Left )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Left);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Top )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            short Top);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Top )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Top);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Height )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            short Height);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Height )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Height);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Width )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            short Width);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Width )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Width);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Speed )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Speed);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Pitch )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Pitch);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_IdleOn )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            VARIANT_BOOL On);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_IdleOn )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Activate )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [optional][in] */ VARIANT State,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Success);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Play )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR Animation,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Get )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR Type,
            /* [in] */ BSTR Name,
            /* [optional][in] */ VARIANT Queue,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Stop )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [optional][in] */ VARIANT Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Wait )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ IDispatch __RPC_FAR *WaitForRequest,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Interrupt )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ IDispatch __RPC_FAR *InterruptRequest,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Speak )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [optional][in] */ VARIANT Text,
            /* [optional][in] */ VARIANT Url,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GestureAt )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ short x,
            /* [in] */ short y,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *MoveTo )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ short x,
            /* [in] */ short y,
            /* [optional][in] */ VARIANT Speed,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Hide )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [optional][in] */ VARIANT Fast,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Show )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [optional][in] */ VARIANT Fast,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *StopAll )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [optional][in] */ VARIANT Types);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_MoveCause )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *MoveCause);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_VisibilityCause )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *VisibilityCause);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_HasOtherClients )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *HasOtherClients);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_SoundEffectsOn )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            VARIANT_BOOL On);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SoundEffectsOn )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Name )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR Name);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Description )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR Description);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ExtraData )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *ExtraData);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ShowPopupMenu )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ short x,
            /* [in] */ short y,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Showed);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_AutoPopupMenu )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL On);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_AutoPopupMenu )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_HelpModeOn )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL On);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_HelpModeOn )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_HelpContextID )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ long ID);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_HelpContextID )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *ID);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Active )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *State);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Listen )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Listen,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *StartedListening);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_LanguageID )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ long LanguageID);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_LanguageID )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *LanguageID);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SRModeID )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *EngineModeId);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_SRModeID )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR EngineModeId);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_TTSModeID )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *EngineModeId);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_TTSModeID )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR EngineModeId);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_HelpFile )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *File);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_HelpFile )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR File);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_GUID )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *GUID);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_OriginalHeight )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Height);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_OriginalWidth )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Width);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Think )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR Text,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Version )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Version);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_AnimationNames )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlAnimationNames __RPC_FAR *__RPC_FAR *Names);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SRStatus )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Status);
        
        END_INTERFACE
    } IAgentCtlCharacterExVtbl;

    interface IAgentCtlCharacterEx
    {
        CONST_VTBL struct IAgentCtlCharacterExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlCharacterEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlCharacterEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlCharacterEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlCharacterEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlCharacterEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlCharacterEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlCharacterEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlCharacterEx_get_Balloon(This,ppidBalloon)	\
    (This)->lpVtbl -> get_Balloon(This,ppidBalloon)

#define IAgentCtlCharacterEx_get_Commands(This,ppidCommands)	\
    (This)->lpVtbl -> get_Commands(This,ppidCommands)

#define IAgentCtlCharacterEx_get_Name(This,Name)	\
    (This)->lpVtbl -> get_Name(This,Name)

#define IAgentCtlCharacterEx_get_Description(This,Description)	\
    (This)->lpVtbl -> get_Description(This,Description)

#define IAgentCtlCharacterEx_get_Visible(This,Visible)	\
    (This)->lpVtbl -> get_Visible(This,Visible)

#define IAgentCtlCharacterEx_put_Left(This,Left)	\
    (This)->lpVtbl -> put_Left(This,Left)

#define IAgentCtlCharacterEx_get_Left(This,Left)	\
    (This)->lpVtbl -> get_Left(This,Left)

#define IAgentCtlCharacterEx_put_Top(This,Top)	\
    (This)->lpVtbl -> put_Top(This,Top)

#define IAgentCtlCharacterEx_get_Top(This,Top)	\
    (This)->lpVtbl -> get_Top(This,Top)

#define IAgentCtlCharacterEx_put_Height(This,Height)	\
    (This)->lpVtbl -> put_Height(This,Height)

#define IAgentCtlCharacterEx_get_Height(This,Height)	\
    (This)->lpVtbl -> get_Height(This,Height)

#define IAgentCtlCharacterEx_put_Width(This,Width)	\
    (This)->lpVtbl -> put_Width(This,Width)

#define IAgentCtlCharacterEx_get_Width(This,Width)	\
    (This)->lpVtbl -> get_Width(This,Width)

#define IAgentCtlCharacterEx_get_Speed(This,Speed)	\
    (This)->lpVtbl -> get_Speed(This,Speed)

#define IAgentCtlCharacterEx_get_Pitch(This,Pitch)	\
    (This)->lpVtbl -> get_Pitch(This,Pitch)

#define IAgentCtlCharacterEx_put_IdleOn(This,On)	\
    (This)->lpVtbl -> put_IdleOn(This,On)

#define IAgentCtlCharacterEx_get_IdleOn(This,On)	\
    (This)->lpVtbl -> get_IdleOn(This,On)

#define IAgentCtlCharacterEx_Activate(This,State,Success)	\
    (This)->lpVtbl -> Activate(This,State,Success)

#define IAgentCtlCharacterEx_Play(This,Animation,Request)	\
    (This)->lpVtbl -> Play(This,Animation,Request)

#define IAgentCtlCharacterEx_Get(This,Type,Name,Queue,Request)	\
    (This)->lpVtbl -> Get(This,Type,Name,Queue,Request)

#define IAgentCtlCharacterEx_Stop(This,Request)	\
    (This)->lpVtbl -> Stop(This,Request)

#define IAgentCtlCharacterEx_Wait(This,WaitForRequest,Request)	\
    (This)->lpVtbl -> Wait(This,WaitForRequest,Request)

#define IAgentCtlCharacterEx_Interrupt(This,InterruptRequest,Request)	\
    (This)->lpVtbl -> Interrupt(This,InterruptRequest,Request)

#define IAgentCtlCharacterEx_Speak(This,Text,Url,Request)	\
    (This)->lpVtbl -> Speak(This,Text,Url,Request)

#define IAgentCtlCharacterEx_GestureAt(This,x,y,Request)	\
    (This)->lpVtbl -> GestureAt(This,x,y,Request)

#define IAgentCtlCharacterEx_MoveTo(This,x,y,Speed,Request)	\
    (This)->lpVtbl -> MoveTo(This,x,y,Speed,Request)

#define IAgentCtlCharacterEx_Hide(This,Fast,Request)	\
    (This)->lpVtbl -> Hide(This,Fast,Request)

#define IAgentCtlCharacterEx_Show(This,Fast,Request)	\
    (This)->lpVtbl -> Show(This,Fast,Request)

#define IAgentCtlCharacterEx_StopAll(This,Types)	\
    (This)->lpVtbl -> StopAll(This,Types)

#define IAgentCtlCharacterEx_get_MoveCause(This,MoveCause)	\
    (This)->lpVtbl -> get_MoveCause(This,MoveCause)

#define IAgentCtlCharacterEx_get_VisibilityCause(This,VisibilityCause)	\
    (This)->lpVtbl -> get_VisibilityCause(This,VisibilityCause)

#define IAgentCtlCharacterEx_get_HasOtherClients(This,HasOtherClients)	\
    (This)->lpVtbl -> get_HasOtherClients(This,HasOtherClients)

#define IAgentCtlCharacterEx_put_SoundEffectsOn(This,On)	\
    (This)->lpVtbl -> put_SoundEffectsOn(This,On)

#define IAgentCtlCharacterEx_get_SoundEffectsOn(This,On)	\
    (This)->lpVtbl -> get_SoundEffectsOn(This,On)

#define IAgentCtlCharacterEx_put_Name(This,Name)	\
    (This)->lpVtbl -> put_Name(This,Name)

#define IAgentCtlCharacterEx_put_Description(This,Description)	\
    (This)->lpVtbl -> put_Description(This,Description)

#define IAgentCtlCharacterEx_get_ExtraData(This,ExtraData)	\
    (This)->lpVtbl -> get_ExtraData(This,ExtraData)


#define IAgentCtlCharacterEx_ShowPopupMenu(This,x,y,Showed)	\
    (This)->lpVtbl -> ShowPopupMenu(This,x,y,Showed)

#define IAgentCtlCharacterEx_put_AutoPopupMenu(This,On)	\
    (This)->lpVtbl -> put_AutoPopupMenu(This,On)

#define IAgentCtlCharacterEx_get_AutoPopupMenu(This,On)	\
    (This)->lpVtbl -> get_AutoPopupMenu(This,On)

#define IAgentCtlCharacterEx_put_HelpModeOn(This,On)	\
    (This)->lpVtbl -> put_HelpModeOn(This,On)

#define IAgentCtlCharacterEx_get_HelpModeOn(This,On)	\
    (This)->lpVtbl -> get_HelpModeOn(This,On)

#define IAgentCtlCharacterEx_put_HelpContextID(This,ID)	\
    (This)->lpVtbl -> put_HelpContextID(This,ID)

#define IAgentCtlCharacterEx_get_HelpContextID(This,ID)	\
    (This)->lpVtbl -> get_HelpContextID(This,ID)

#define IAgentCtlCharacterEx_get_Active(This,State)	\
    (This)->lpVtbl -> get_Active(This,State)

#define IAgentCtlCharacterEx_Listen(This,Listen,StartedListening)	\
    (This)->lpVtbl -> Listen(This,Listen,StartedListening)

#define IAgentCtlCharacterEx_put_LanguageID(This,LanguageID)	\
    (This)->lpVtbl -> put_LanguageID(This,LanguageID)

#define IAgentCtlCharacterEx_get_LanguageID(This,LanguageID)	\
    (This)->lpVtbl -> get_LanguageID(This,LanguageID)

#define IAgentCtlCharacterEx_get_SRModeID(This,EngineModeId)	\
    (This)->lpVtbl -> get_SRModeID(This,EngineModeId)

#define IAgentCtlCharacterEx_put_SRModeID(This,EngineModeId)	\
    (This)->lpVtbl -> put_SRModeID(This,EngineModeId)

#define IAgentCtlCharacterEx_get_TTSModeID(This,EngineModeId)	\
    (This)->lpVtbl -> get_TTSModeID(This,EngineModeId)

#define IAgentCtlCharacterEx_put_TTSModeID(This,EngineModeId)	\
    (This)->lpVtbl -> put_TTSModeID(This,EngineModeId)

#define IAgentCtlCharacterEx_get_HelpFile(This,File)	\
    (This)->lpVtbl -> get_HelpFile(This,File)

#define IAgentCtlCharacterEx_put_HelpFile(This,File)	\
    (This)->lpVtbl -> put_HelpFile(This,File)

#define IAgentCtlCharacterEx_get_GUID(This,GUID)	\
    (This)->lpVtbl -> get_GUID(This,GUID)

#define IAgentCtlCharacterEx_get_OriginalHeight(This,Height)	\
    (This)->lpVtbl -> get_OriginalHeight(This,Height)

#define IAgentCtlCharacterEx_get_OriginalWidth(This,Width)	\
    (This)->lpVtbl -> get_OriginalWidth(This,Width)

#define IAgentCtlCharacterEx_Think(This,Text,Request)	\
    (This)->lpVtbl -> Think(This,Text,Request)

#define IAgentCtlCharacterEx_get_Version(This,Version)	\
    (This)->lpVtbl -> get_Version(This,Version)

#define IAgentCtlCharacterEx_get_AnimationNames(This,Names)	\
    (This)->lpVtbl -> get_AnimationNames(This,Names)

#define IAgentCtlCharacterEx_get_SRStatus(This,Status)	\
    (This)->lpVtbl -> get_SRStatus(This,Status)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_ShowPopupMenu_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [in] */ short x,
    /* [in] */ short y,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Showed);


void __RPC_STUB IAgentCtlCharacterEx_ShowPopupMenu_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_put_AutoPopupMenu_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL On);


void __RPC_STUB IAgentCtlCharacterEx_put_AutoPopupMenu_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_AutoPopupMenu_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On);


void __RPC_STUB IAgentCtlCharacterEx_get_AutoPopupMenu_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_put_HelpModeOn_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL On);


void __RPC_STUB IAgentCtlCharacterEx_put_HelpModeOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_HelpModeOn_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On);


void __RPC_STUB IAgentCtlCharacterEx_get_HelpModeOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_put_HelpContextID_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [in] */ long ID);


void __RPC_STUB IAgentCtlCharacterEx_put_HelpContextID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_HelpContextID_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *ID);


void __RPC_STUB IAgentCtlCharacterEx_get_HelpContextID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_Active_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *State);


void __RPC_STUB IAgentCtlCharacterEx_get_Active_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_Listen_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL Listen,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *StartedListening);


void __RPC_STUB IAgentCtlCharacterEx_Listen_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_put_LanguageID_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [in] */ long LanguageID);


void __RPC_STUB IAgentCtlCharacterEx_put_LanguageID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_LanguageID_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *LanguageID);


void __RPC_STUB IAgentCtlCharacterEx_get_LanguageID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_SRModeID_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *EngineModeId);


void __RPC_STUB IAgentCtlCharacterEx_get_SRModeID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_put_SRModeID_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [in] */ BSTR EngineModeId);


void __RPC_STUB IAgentCtlCharacterEx_put_SRModeID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_TTSModeID_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *EngineModeId);


void __RPC_STUB IAgentCtlCharacterEx_get_TTSModeID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_put_TTSModeID_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [in] */ BSTR EngineModeId);


void __RPC_STUB IAgentCtlCharacterEx_put_TTSModeID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_HelpFile_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *File);


void __RPC_STUB IAgentCtlCharacterEx_get_HelpFile_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_put_HelpFile_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [in] */ BSTR File);


void __RPC_STUB IAgentCtlCharacterEx_put_HelpFile_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_GUID_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *GUID);


void __RPC_STUB IAgentCtlCharacterEx_get_GUID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_OriginalHeight_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Height);


void __RPC_STUB IAgentCtlCharacterEx_get_OriginalHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_OriginalWidth_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Width);


void __RPC_STUB IAgentCtlCharacterEx_get_OriginalWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_Think_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [in] */ BSTR Text,
    /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);


void __RPC_STUB IAgentCtlCharacterEx_Think_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_Version_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Version);


void __RPC_STUB IAgentCtlCharacterEx_get_Version_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_AnimationNames_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ IAgentCtlAnimationNames __RPC_FAR *__RPC_FAR *Names);


void __RPC_STUB IAgentCtlCharacterEx_get_AnimationNames_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_SRStatus_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *Status);


void __RPC_STUB IAgentCtlCharacterEx_get_SRStatus_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlCharacterEx_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlCharacters_INTERFACE_DEFINED__
#define __IAgentCtlCharacters_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCtlCharacters
 * at Tue Sep 01 10:41:00 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentCtlCharacters;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("F5BE8BE8-7DE6-11D0-91FE-00C04FD701A5")
    IAgentCtlCharacters : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ BSTR CharacterID,
            /* [retval][out] */ IAgentCtlCharacterEx __RPC_FAR *__RPC_FAR *ppidItem) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Character( 
            /* [in] */ BSTR CharacterID,
            /* [retval][out] */ IAgentCtlCharacterEx __RPC_FAR *__RPC_FAR *ppidItem) = 0;
        
        virtual /* [restricted][propget][id] */ HRESULT STDMETHODCALLTYPE get_Enum( 
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkEnum) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Unload( 
            /* [in] */ BSTR CharacterID) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Load( 
            /* [in] */ BSTR CharacterID,
            /* [optional][in] */ VARIANT LoadKey,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *ppidRequest) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlCharactersVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlCharacters __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlCharacters __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlCharacters __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlCharacters __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlCharacters __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlCharacters __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlCharacters __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Item )( 
            IAgentCtlCharacters __RPC_FAR * This,
            /* [in] */ BSTR CharacterID,
            /* [retval][out] */ IAgentCtlCharacterEx __RPC_FAR *__RPC_FAR *ppidItem);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Character )( 
            IAgentCtlCharacters __RPC_FAR * This,
            /* [in] */ BSTR CharacterID,
            /* [retval][out] */ IAgentCtlCharacterEx __RPC_FAR *__RPC_FAR *ppidItem);
        
        /* [restricted][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Enum )( 
            IAgentCtlCharacters __RPC_FAR * This,
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkEnum);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Unload )( 
            IAgentCtlCharacters __RPC_FAR * This,
            /* [in] */ BSTR CharacterID);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Load )( 
            IAgentCtlCharacters __RPC_FAR * This,
            /* [in] */ BSTR CharacterID,
            /* [optional][in] */ VARIANT LoadKey,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *ppidRequest);
        
        END_INTERFACE
    } IAgentCtlCharactersVtbl;

    interface IAgentCtlCharacters
    {
        CONST_VTBL struct IAgentCtlCharactersVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlCharacters_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlCharacters_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlCharacters_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlCharacters_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlCharacters_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlCharacters_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlCharacters_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlCharacters_get_Item(This,CharacterID,ppidItem)	\
    (This)->lpVtbl -> get_Item(This,CharacterID,ppidItem)

#define IAgentCtlCharacters_Character(This,CharacterID,ppidItem)	\
    (This)->lpVtbl -> Character(This,CharacterID,ppidItem)

#define IAgentCtlCharacters_get_Enum(This,ppunkEnum)	\
    (This)->lpVtbl -> get_Enum(This,ppunkEnum)

#define IAgentCtlCharacters_Unload(This,CharacterID)	\
    (This)->lpVtbl -> Unload(This,CharacterID)

#define IAgentCtlCharacters_Load(This,CharacterID,LoadKey,ppidRequest)	\
    (This)->lpVtbl -> Load(This,CharacterID,LoadKey,ppidRequest)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacters_get_Item_Proxy( 
    IAgentCtlCharacters __RPC_FAR * This,
    /* [in] */ BSTR CharacterID,
    /* [retval][out] */ IAgentCtlCharacterEx __RPC_FAR *__RPC_FAR *ppidItem);


void __RPC_STUB IAgentCtlCharacters_get_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacters_Character_Proxy( 
    IAgentCtlCharacters __RPC_FAR * This,
    /* [in] */ BSTR CharacterID,
    /* [retval][out] */ IAgentCtlCharacterEx __RPC_FAR *__RPC_FAR *ppidItem);


void __RPC_STUB IAgentCtlCharacters_Character_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [restricted][propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacters_get_Enum_Proxy( 
    IAgentCtlCharacters __RPC_FAR * This,
    /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkEnum);


void __RPC_STUB IAgentCtlCharacters_get_Enum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacters_Unload_Proxy( 
    IAgentCtlCharacters __RPC_FAR * This,
    /* [in] */ BSTR CharacterID);


void __RPC_STUB IAgentCtlCharacters_Unload_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacters_Load_Proxy( 
    IAgentCtlCharacters __RPC_FAR * This,
    /* [in] */ BSTR CharacterID,
    /* [optional][in] */ VARIANT LoadKey,
    /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *ppidRequest);


void __RPC_STUB IAgentCtlCharacters_Load_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlCharacters_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlAudioObject_INTERFACE_DEFINED__
#define __IAgentCtlAudioObject_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCtlAudioObject
 * at Tue Sep 01 10:41:00 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentCtlAudioObject;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("F5BE8BDB-7DE6-11D0-91FE-00C04FD701A5")
    IAgentCtlAudioObject : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *AudioEnabled) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_SoundEffects( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *SoundEffects) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlAudioObjectVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlAudioObject __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlAudioObject __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlAudioObject __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlAudioObject __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlAudioObject __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlAudioObject __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlAudioObject __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Enabled )( 
            IAgentCtlAudioObject __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *AudioEnabled);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SoundEffects )( 
            IAgentCtlAudioObject __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *SoundEffects);
        
        END_INTERFACE
    } IAgentCtlAudioObjectVtbl;

    interface IAgentCtlAudioObject
    {
        CONST_VTBL struct IAgentCtlAudioObjectVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlAudioObject_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlAudioObject_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlAudioObject_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlAudioObject_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlAudioObject_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlAudioObject_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlAudioObject_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlAudioObject_get_Enabled(This,AudioEnabled)	\
    (This)->lpVtbl -> get_Enabled(This,AudioEnabled)

#define IAgentCtlAudioObject_get_SoundEffects(This,SoundEffects)	\
    (This)->lpVtbl -> get_SoundEffects(This,SoundEffects)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlAudioObject_get_Enabled_Proxy( 
    IAgentCtlAudioObject __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *AudioEnabled);


void __RPC_STUB IAgentCtlAudioObject_get_Enabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlAudioObject_get_SoundEffects_Proxy( 
    IAgentCtlAudioObject __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *SoundEffects);


void __RPC_STUB IAgentCtlAudioObject_get_SoundEffects_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlAudioObject_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlAudioObjectEx_INTERFACE_DEFINED__
#define __IAgentCtlAudioObjectEx_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCtlAudioObjectEx
 * at Tue Sep 01 10:41:00 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentCtlAudioObjectEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("F5BE8BF0-7DE6-11D0-91FE-00C04FD701A5")
    IAgentCtlAudioObjectEx : public IAgentCtlAudioObject
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Status( 
            /* [retval][out] */ short __RPC_FAR *Available) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlAudioObjectExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlAudioObjectEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlAudioObjectEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlAudioObjectEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlAudioObjectEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlAudioObjectEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlAudioObjectEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlAudioObjectEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Enabled )( 
            IAgentCtlAudioObjectEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *AudioEnabled);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SoundEffects )( 
            IAgentCtlAudioObjectEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *SoundEffects);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Status )( 
            IAgentCtlAudioObjectEx __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Available);
        
        END_INTERFACE
    } IAgentCtlAudioObjectExVtbl;

    interface IAgentCtlAudioObjectEx
    {
        CONST_VTBL struct IAgentCtlAudioObjectExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlAudioObjectEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlAudioObjectEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlAudioObjectEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlAudioObjectEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlAudioObjectEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlAudioObjectEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlAudioObjectEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlAudioObjectEx_get_Enabled(This,AudioEnabled)	\
    (This)->lpVtbl -> get_Enabled(This,AudioEnabled)

#define IAgentCtlAudioObjectEx_get_SoundEffects(This,SoundEffects)	\
    (This)->lpVtbl -> get_SoundEffects(This,SoundEffects)


#define IAgentCtlAudioObjectEx_get_Status(This,Available)	\
    (This)->lpVtbl -> get_Status(This,Available)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlAudioObjectEx_get_Status_Proxy( 
    IAgentCtlAudioObjectEx __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Available);


void __RPC_STUB IAgentCtlAudioObjectEx_get_Status_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlAudioObjectEx_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlSpeechInput_INTERFACE_DEFINED__
#define __IAgentCtlSpeechInput_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCtlSpeechInput
 * at Tue Sep 01 10:41:00 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentCtlSpeechInput;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("F5BE8BDD-7DE6-11D0-91FE-00C04FD701A5")
    IAgentCtlSpeechInput : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *VoiceEnabled) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Language( 
            /* [retval][out] */ BSTR __RPC_FAR *Language) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_HotKey( 
            /* [retval][out] */ BSTR __RPC_FAR *HotKey) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Installed( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *VoiceInstalled) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Engine( 
            /* [retval][out] */ BSTR __RPC_FAR *Engine) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Engine( 
            /* [in] */ BSTR Engine) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ListeningTip( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *ListeningTip) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlSpeechInputVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlSpeechInput __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlSpeechInput __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlSpeechInput __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlSpeechInput __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlSpeechInput __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlSpeechInput __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlSpeechInput __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Enabled )( 
            IAgentCtlSpeechInput __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *VoiceEnabled);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Language )( 
            IAgentCtlSpeechInput __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Language);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_HotKey )( 
            IAgentCtlSpeechInput __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *HotKey);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Installed )( 
            IAgentCtlSpeechInput __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *VoiceInstalled);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Engine )( 
            IAgentCtlSpeechInput __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Engine);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Engine )( 
            IAgentCtlSpeechInput __RPC_FAR * This,
            /* [in] */ BSTR Engine);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ListeningTip )( 
            IAgentCtlSpeechInput __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *ListeningTip);
        
        END_INTERFACE
    } IAgentCtlSpeechInputVtbl;

    interface IAgentCtlSpeechInput
    {
        CONST_VTBL struct IAgentCtlSpeechInputVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlSpeechInput_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlSpeechInput_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlSpeechInput_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlSpeechInput_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlSpeechInput_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlSpeechInput_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlSpeechInput_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlSpeechInput_get_Enabled(This,VoiceEnabled)	\
    (This)->lpVtbl -> get_Enabled(This,VoiceEnabled)

#define IAgentCtlSpeechInput_get_Language(This,Language)	\
    (This)->lpVtbl -> get_Language(This,Language)

#define IAgentCtlSpeechInput_get_HotKey(This,HotKey)	\
    (This)->lpVtbl -> get_HotKey(This,HotKey)

#define IAgentCtlSpeechInput_get_Installed(This,VoiceInstalled)	\
    (This)->lpVtbl -> get_Installed(This,VoiceInstalled)

#define IAgentCtlSpeechInput_get_Engine(This,Engine)	\
    (This)->lpVtbl -> get_Engine(This,Engine)

#define IAgentCtlSpeechInput_put_Engine(This,Engine)	\
    (This)->lpVtbl -> put_Engine(This,Engine)

#define IAgentCtlSpeechInput_get_ListeningTip(This,ListeningTip)	\
    (This)->lpVtbl -> get_ListeningTip(This,ListeningTip)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlSpeechInput_get_Enabled_Proxy( 
    IAgentCtlSpeechInput __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *VoiceEnabled);


void __RPC_STUB IAgentCtlSpeechInput_get_Enabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlSpeechInput_get_Language_Proxy( 
    IAgentCtlSpeechInput __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Language);


void __RPC_STUB IAgentCtlSpeechInput_get_Language_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlSpeechInput_get_HotKey_Proxy( 
    IAgentCtlSpeechInput __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *HotKey);


void __RPC_STUB IAgentCtlSpeechInput_get_HotKey_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlSpeechInput_get_Installed_Proxy( 
    IAgentCtlSpeechInput __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *VoiceInstalled);


void __RPC_STUB IAgentCtlSpeechInput_get_Installed_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlSpeechInput_get_Engine_Proxy( 
    IAgentCtlSpeechInput __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Engine);


void __RPC_STUB IAgentCtlSpeechInput_get_Engine_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlSpeechInput_put_Engine_Proxy( 
    IAgentCtlSpeechInput __RPC_FAR * This,
    /* [in] */ BSTR Engine);


void __RPC_STUB IAgentCtlSpeechInput_put_Engine_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlSpeechInput_get_ListeningTip_Proxy( 
    IAgentCtlSpeechInput __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *ListeningTip);


void __RPC_STUB IAgentCtlSpeechInput_get_ListeningTip_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlSpeechInput_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlPropertySheet_INTERFACE_DEFINED__
#define __IAgentCtlPropertySheet_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCtlPropertySheet
 * at Tue Sep 01 10:41:00 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentCtlPropertySheet;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("F5BE8BDF-7DE6-11D0-91FE-00C04FD701A5")
    IAgentCtlPropertySheet : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Left( 
            /* [retval][out] */ short __RPC_FAR *Left) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Top( 
            /* [retval][out] */ short __RPC_FAR *Top) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Height( 
            /* [retval][out] */ short __RPC_FAR *Height) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Width( 
            /* [retval][out] */ short __RPC_FAR *Width) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Visible( 
            /* [in] */ VARIANT_BOOL Visible) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Page( 
            /* [in] */ BSTR Page) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Page( 
            /* [retval][out] */ BSTR __RPC_FAR *Page) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlPropertySheetVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlPropertySheet __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlPropertySheet __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Left )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Left);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Top )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Top);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Height )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Height);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Width )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Width);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Visible )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Visible )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Page )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [in] */ BSTR Page);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Page )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Page);
        
        END_INTERFACE
    } IAgentCtlPropertySheetVtbl;

    interface IAgentCtlPropertySheet
    {
        CONST_VTBL struct IAgentCtlPropertySheetVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlPropertySheet_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlPropertySheet_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlPropertySheet_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlPropertySheet_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlPropertySheet_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlPropertySheet_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlPropertySheet_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlPropertySheet_get_Left(This,Left)	\
    (This)->lpVtbl -> get_Left(This,Left)

#define IAgentCtlPropertySheet_get_Top(This,Top)	\
    (This)->lpVtbl -> get_Top(This,Top)

#define IAgentCtlPropertySheet_get_Height(This,Height)	\
    (This)->lpVtbl -> get_Height(This,Height)

#define IAgentCtlPropertySheet_get_Width(This,Width)	\
    (This)->lpVtbl -> get_Width(This,Width)

#define IAgentCtlPropertySheet_put_Visible(This,Visible)	\
    (This)->lpVtbl -> put_Visible(This,Visible)

#define IAgentCtlPropertySheet_get_Visible(This,Visible)	\
    (This)->lpVtbl -> get_Visible(This,Visible)

#define IAgentCtlPropertySheet_put_Page(This,Page)	\
    (This)->lpVtbl -> put_Page(This,Page)

#define IAgentCtlPropertySheet_get_Page(This,Page)	\
    (This)->lpVtbl -> get_Page(This,Page)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlPropertySheet_get_Left_Proxy( 
    IAgentCtlPropertySheet __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Left);


void __RPC_STUB IAgentCtlPropertySheet_get_Left_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlPropertySheet_get_Top_Proxy( 
    IAgentCtlPropertySheet __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Top);


void __RPC_STUB IAgentCtlPropertySheet_get_Top_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlPropertySheet_get_Height_Proxy( 
    IAgentCtlPropertySheet __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Height);


void __RPC_STUB IAgentCtlPropertySheet_get_Height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlPropertySheet_get_Width_Proxy( 
    IAgentCtlPropertySheet __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Width);


void __RPC_STUB IAgentCtlPropertySheet_get_Width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlPropertySheet_put_Visible_Proxy( 
    IAgentCtlPropertySheet __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL Visible);


void __RPC_STUB IAgentCtlPropertySheet_put_Visible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlPropertySheet_get_Visible_Proxy( 
    IAgentCtlPropertySheet __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);


void __RPC_STUB IAgentCtlPropertySheet_get_Visible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlPropertySheet_put_Page_Proxy( 
    IAgentCtlPropertySheet __RPC_FAR * This,
    /* [in] */ BSTR Page);


void __RPC_STUB IAgentCtlPropertySheet_put_Page_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlPropertySheet_get_Page_Proxy( 
    IAgentCtlPropertySheet __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Page);


void __RPC_STUB IAgentCtlPropertySheet_get_Page_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlPropertySheet_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlCommandsWindow_INTERFACE_DEFINED__
#define __IAgentCtlCommandsWindow_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCtlCommandsWindow
 * at Tue Sep 01 10:41:00 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentCtlCommandsWindow;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("6D0ECB27-9968-11D0-AC6E-00C04FD97575")
    IAgentCtlCommandsWindow : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Visible( 
            /* [in] */ VARIANT_BOOL Visible) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Left( 
            /* [retval][out] */ short __RPC_FAR *Left) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Top( 
            /* [retval][out] */ short __RPC_FAR *Top) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Height( 
            /* [retval][out] */ short __RPC_FAR *Height) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Width( 
            /* [retval][out] */ short __RPC_FAR *Width) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlCommandsWindowVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlCommandsWindow __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlCommandsWindow __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlCommandsWindow __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlCommandsWindow __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlCommandsWindow __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlCommandsWindow __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlCommandsWindow __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Visible )( 
            IAgentCtlCommandsWindow __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Visible )( 
            IAgentCtlCommandsWindow __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Left )( 
            IAgentCtlCommandsWindow __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Left);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Top )( 
            IAgentCtlCommandsWindow __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Top);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Height )( 
            IAgentCtlCommandsWindow __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Height);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Width )( 
            IAgentCtlCommandsWindow __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Width);
        
        END_INTERFACE
    } IAgentCtlCommandsWindowVtbl;

    interface IAgentCtlCommandsWindow
    {
        CONST_VTBL struct IAgentCtlCommandsWindowVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlCommandsWindow_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlCommandsWindow_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlCommandsWindow_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlCommandsWindow_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlCommandsWindow_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlCommandsWindow_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlCommandsWindow_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlCommandsWindow_get_Visible(This,Visible)	\
    (This)->lpVtbl -> get_Visible(This,Visible)

#define IAgentCtlCommandsWindow_put_Visible(This,Visible)	\
    (This)->lpVtbl -> put_Visible(This,Visible)

#define IAgentCtlCommandsWindow_get_Left(This,Left)	\
    (This)->lpVtbl -> get_Left(This,Left)

#define IAgentCtlCommandsWindow_get_Top(This,Top)	\
    (This)->lpVtbl -> get_Top(This,Top)

#define IAgentCtlCommandsWindow_get_Height(This,Height)	\
    (This)->lpVtbl -> get_Height(This,Height)

#define IAgentCtlCommandsWindow_get_Width(This,Width)	\
    (This)->lpVtbl -> get_Width(This,Width)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsWindow_get_Visible_Proxy( 
    IAgentCtlCommandsWindow __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);


void __RPC_STUB IAgentCtlCommandsWindow_get_Visible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsWindow_put_Visible_Proxy( 
    IAgentCtlCommandsWindow __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL Visible);


void __RPC_STUB IAgentCtlCommandsWindow_put_Visible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsWindow_get_Left_Proxy( 
    IAgentCtlCommandsWindow __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Left);


void __RPC_STUB IAgentCtlCommandsWindow_get_Left_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsWindow_get_Top_Proxy( 
    IAgentCtlCommandsWindow __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Top);


void __RPC_STUB IAgentCtlCommandsWindow_get_Top_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsWindow_get_Height_Proxy( 
    IAgentCtlCommandsWindow __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Height);


void __RPC_STUB IAgentCtlCommandsWindow_get_Height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsWindow_get_Width_Proxy( 
    IAgentCtlCommandsWindow __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Width);


void __RPC_STUB IAgentCtlCommandsWindow_get_Width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlCommandsWindow_INTERFACE_DEFINED__ */


#ifndef __IAgentCtl_INTERFACE_DEFINED__
#define __IAgentCtl_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCtl
 * at Tue Sep 01 10:41:00 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentCtl;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("F5BE8BD1-7DE6-11D0-91FE-00C04FD701A5")
    IAgentCtl : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Characters( 
            /* [retval][out] */ IAgentCtlCharacters __RPC_FAR *__RPC_FAR *Characters) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_AudioOutput( 
            /* [retval][out] */ IAgentCtlAudioObjectEx __RPC_FAR *__RPC_FAR *AudioOutput) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_SpeechInput( 
            /* [retval][out] */ IAgentCtlSpeechInput __RPC_FAR *__RPC_FAR *SpeechInput) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_PropertySheet( 
            /* [retval][out] */ IAgentCtlPropertySheet __RPC_FAR *__RPC_FAR *PropSheet) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_CommandsWindow( 
            /* [retval][out] */ IAgentCtlCommandsWindow __RPC_FAR *__RPC_FAR *CommandsWindow) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Connected( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Connected) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Connected( 
            /* [in] */ VARIANT_BOOL Connected) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Suspended( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Suspended) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtl __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtl __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtl __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtl __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtl __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtl __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtl __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Characters )( 
            IAgentCtl __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlCharacters __RPC_FAR *__RPC_FAR *Characters);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_AudioOutput )( 
            IAgentCtl __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlAudioObjectEx __RPC_FAR *__RPC_FAR *AudioOutput);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SpeechInput )( 
            IAgentCtl __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlSpeechInput __RPC_FAR *__RPC_FAR *SpeechInput);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_PropertySheet )( 
            IAgentCtl __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlPropertySheet __RPC_FAR *__RPC_FAR *PropSheet);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_CommandsWindow )( 
            IAgentCtl __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlCommandsWindow __RPC_FAR *__RPC_FAR *CommandsWindow);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Connected )( 
            IAgentCtl __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Connected);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Connected )( 
            IAgentCtl __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Connected);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Suspended )( 
            IAgentCtl __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Suspended);
        
        END_INTERFACE
    } IAgentCtlVtbl;

    interface IAgentCtl
    {
        CONST_VTBL struct IAgentCtlVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtl_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtl_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtl_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtl_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtl_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtl_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtl_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtl_get_Characters(This,Characters)	\
    (This)->lpVtbl -> get_Characters(This,Characters)

#define IAgentCtl_get_AudioOutput(This,AudioOutput)	\
    (This)->lpVtbl -> get_AudioOutput(This,AudioOutput)

#define IAgentCtl_get_SpeechInput(This,SpeechInput)	\
    (This)->lpVtbl -> get_SpeechInput(This,SpeechInput)

#define IAgentCtl_get_PropertySheet(This,PropSheet)	\
    (This)->lpVtbl -> get_PropertySheet(This,PropSheet)

#define IAgentCtl_get_CommandsWindow(This,CommandsWindow)	\
    (This)->lpVtbl -> get_CommandsWindow(This,CommandsWindow)

#define IAgentCtl_get_Connected(This,Connected)	\
    (This)->lpVtbl -> get_Connected(This,Connected)

#define IAgentCtl_put_Connected(This,Connected)	\
    (This)->lpVtbl -> put_Connected(This,Connected)

#define IAgentCtl_get_Suspended(This,Suspended)	\
    (This)->lpVtbl -> get_Suspended(This,Suspended)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtl_get_Characters_Proxy( 
    IAgentCtl __RPC_FAR * This,
    /* [retval][out] */ IAgentCtlCharacters __RPC_FAR *__RPC_FAR *Characters);


void __RPC_STUB IAgentCtl_get_Characters_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtl_get_AudioOutput_Proxy( 
    IAgentCtl __RPC_FAR * This,
    /* [retval][out] */ IAgentCtlAudioObjectEx __RPC_FAR *__RPC_FAR *AudioOutput);


void __RPC_STUB IAgentCtl_get_AudioOutput_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtl_get_SpeechInput_Proxy( 
    IAgentCtl __RPC_FAR * This,
    /* [retval][out] */ IAgentCtlSpeechInput __RPC_FAR *__RPC_FAR *SpeechInput);


void __RPC_STUB IAgentCtl_get_SpeechInput_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtl_get_PropertySheet_Proxy( 
    IAgentCtl __RPC_FAR * This,
    /* [retval][out] */ IAgentCtlPropertySheet __RPC_FAR *__RPC_FAR *PropSheet);


void __RPC_STUB IAgentCtl_get_PropertySheet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtl_get_CommandsWindow_Proxy( 
    IAgentCtl __RPC_FAR * This,
    /* [retval][out] */ IAgentCtlCommandsWindow __RPC_FAR *__RPC_FAR *CommandsWindow);


void __RPC_STUB IAgentCtl_get_CommandsWindow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtl_get_Connected_Proxy( 
    IAgentCtl __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Connected);


void __RPC_STUB IAgentCtl_get_Connected_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtl_put_Connected_Proxy( 
    IAgentCtl __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL Connected);


void __RPC_STUB IAgentCtl_put_Connected_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtl_get_Suspended_Proxy( 
    IAgentCtl __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Suspended);


void __RPC_STUB IAgentCtl_get_Suspended_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtl_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlEx_INTERFACE_DEFINED__
#define __IAgentCtlEx_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCtlEx
 * at Tue Sep 01 10:41:00 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentCtlEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("8563FF20-8ECC-11d1-B9B4-00C04FD97575")
    IAgentCtlEx : public IAgentCtl
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ShowDefaultCharacterProperties( 
            /* [optional][in] */ VARIANT x,
            /* [optional][in] */ VARIANT y) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_RaiseRequestErrors( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *RaiseErrors) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_RaiseRequestErrors( 
            /* [in] */ VARIANT_BOOL RaiseErrors) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Characters )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlCharacters __RPC_FAR *__RPC_FAR *Characters);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_AudioOutput )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlAudioObjectEx __RPC_FAR *__RPC_FAR *AudioOutput);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SpeechInput )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlSpeechInput __RPC_FAR *__RPC_FAR *SpeechInput);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_PropertySheet )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlPropertySheet __RPC_FAR *__RPC_FAR *PropSheet);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_CommandsWindow )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlCommandsWindow __RPC_FAR *__RPC_FAR *CommandsWindow);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Connected )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Connected);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Connected )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Connected);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Suspended )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Suspended);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ShowDefaultCharacterProperties )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [optional][in] */ VARIANT x,
            /* [optional][in] */ VARIANT y);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_RaiseRequestErrors )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *RaiseErrors);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_RaiseRequestErrors )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL RaiseErrors);
        
        END_INTERFACE
    } IAgentCtlExVtbl;

    interface IAgentCtlEx
    {
        CONST_VTBL struct IAgentCtlExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlEx_get_Characters(This,Characters)	\
    (This)->lpVtbl -> get_Characters(This,Characters)

#define IAgentCtlEx_get_AudioOutput(This,AudioOutput)	\
    (This)->lpVtbl -> get_AudioOutput(This,AudioOutput)

#define IAgentCtlEx_get_SpeechInput(This,SpeechInput)	\
    (This)->lpVtbl -> get_SpeechInput(This,SpeechInput)

#define IAgentCtlEx_get_PropertySheet(This,PropSheet)	\
    (This)->lpVtbl -> get_PropertySheet(This,PropSheet)

#define IAgentCtlEx_get_CommandsWindow(This,CommandsWindow)	\
    (This)->lpVtbl -> get_CommandsWindow(This,CommandsWindow)

#define IAgentCtlEx_get_Connected(This,Connected)	\
    (This)->lpVtbl -> get_Connected(This,Connected)

#define IAgentCtlEx_put_Connected(This,Connected)	\
    (This)->lpVtbl -> put_Connected(This,Connected)

#define IAgentCtlEx_get_Suspended(This,Suspended)	\
    (This)->lpVtbl -> get_Suspended(This,Suspended)


#define IAgentCtlEx_ShowDefaultCharacterProperties(This,x,y)	\
    (This)->lpVtbl -> ShowDefaultCharacterProperties(This,x,y)

#define IAgentCtlEx_get_RaiseRequestErrors(This,RaiseErrors)	\
    (This)->lpVtbl -> get_RaiseRequestErrors(This,RaiseErrors)

#define IAgentCtlEx_put_RaiseRequestErrors(This,RaiseErrors)	\
    (This)->lpVtbl -> put_RaiseRequestErrors(This,RaiseErrors)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlEx_ShowDefaultCharacterProperties_Proxy( 
    IAgentCtlEx __RPC_FAR * This,
    /* [optional][in] */ VARIANT x,
    /* [optional][in] */ VARIANT y);


void __RPC_STUB IAgentCtlEx_ShowDefaultCharacterProperties_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlEx_get_RaiseRequestErrors_Proxy( 
    IAgentCtlEx __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *RaiseErrors);


void __RPC_STUB IAgentCtlEx_get_RaiseRequestErrors_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlEx_put_RaiseRequestErrors_Proxy( 
    IAgentCtlEx __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL RaiseErrors);


void __RPC_STUB IAgentCtlEx_put_RaiseRequestErrors_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlEx_INTERFACE_DEFINED__ */


/****************************************
 * Generated header for interface: __MIDL_itf_AgentControl_0154
 * at Tue Sep 01 10:41:00 1998
 * using MIDL 3.01.75
 ****************************************/
/* [local] */ 


#define	CONTROL_MAJOR_VERSION	( 2 )

#define	CONTROL_MINOR_VERSION	( 0 )



extern RPC_IF_HANDLE __MIDL_itf_AgentControl_0154_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_AgentControl_0154_v0_0_s_ifspec;


#ifndef __AgentObjects_LIBRARY_DEFINED__
#define __AgentObjects_LIBRARY_DEFINED__

/****************************************
 * Generated header for library: AgentObjects
 * at Tue Sep 01 10:41:00 1998
 * using MIDL 3.01.75
 ****************************************/
/* [helpstring][version][uuid] */ 






















EXTERN_C const IID LIBID_AgentObjects;

#ifndef ___AgentEvents_DISPINTERFACE_DEFINED__
#define ___AgentEvents_DISPINTERFACE_DEFINED__

/****************************************
 * Generated header for dispinterface: _AgentEvents
 * at Tue Sep 01 10:41:00 1998
 * using MIDL 3.01.75
 ****************************************/
/* [helpstring][uuid] */ 



EXTERN_C const IID DIID__AgentEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    interface DECLSPEC_UUID("F5BE8BD4-7DE6-11D0-91FE-00C04FD701A5")
    _AgentEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct _AgentEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            _AgentEvents __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            _AgentEvents __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            _AgentEvents __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            _AgentEvents __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            _AgentEvents __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            _AgentEvents __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            _AgentEvents __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        END_INTERFACE
    } _AgentEventsVtbl;

    interface _AgentEvents
    {
        CONST_VTBL struct _AgentEventsVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AgentEvents_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define _AgentEvents_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define _AgentEvents_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define _AgentEvents_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define _AgentEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define _AgentEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define _AgentEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* ___AgentEvents_DISPINTERFACE_DEFINED__ */


#ifdef __cplusplus
EXTERN_C const CLSID CLSID_Agent;

class DECLSPEC_UUID("D45FD31B-5C6E-11D1-9EC1-00C04FD7081F")
Agent;
#endif
#endif /* __AgentObjects_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     unsigned long __RPC_FAR *, unsigned long            , BSTR __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  BSTR_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, BSTR __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  BSTR_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, BSTR __RPC_FAR * ); 
void                      __RPC_USER  BSTR_UserFree(     unsigned long __RPC_FAR *, BSTR __RPC_FAR * ); 

unsigned long             __RPC_USER  VARIANT_UserSize(     unsigned long __RPC_FAR *, unsigned long            , VARIANT __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  VARIANT_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, VARIANT __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  VARIANT_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, VARIANT __RPC_FAR * ); 
void                      __RPC_USER  VARIANT_UserFree(     unsigned long __RPC_FAR *, VARIANT __RPC_FAR * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif

#else // _MSC_VER >= 1200

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


/* File created by MIDL compiler version 5.01.0164 */
/* at Tue Sep 15 16:56:03 1998
 */
/* Compiler settings for AgentControl.idl:
    Oicf (OptLev=i2), W1, Zp8, env=Win32, ms_ext, c_ext
    error checks: allocation ref bounds_check enum stub_data 
*/
//@@MIDL_FILE_HEADING(  )


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 440
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __AgentControl_h__
#define __AgentControl_h__

#ifdef __cplusplus
extern "C"{
#endif 

/* Forward Declarations */ 

#ifndef __IAgentCtlRequest_FWD_DEFINED__
#define __IAgentCtlRequest_FWD_DEFINED__
typedef interface IAgentCtlRequest IAgentCtlRequest;
#endif 	/* __IAgentCtlRequest_FWD_DEFINED__ */


#ifndef __IAgentCtlUserInput_FWD_DEFINED__
#define __IAgentCtlUserInput_FWD_DEFINED__
typedef interface IAgentCtlUserInput IAgentCtlUserInput;
#endif 	/* __IAgentCtlUserInput_FWD_DEFINED__ */


#ifndef __IAgentCtlBalloon_FWD_DEFINED__
#define __IAgentCtlBalloon_FWD_DEFINED__
typedef interface IAgentCtlBalloon IAgentCtlBalloon;
#endif 	/* __IAgentCtlBalloon_FWD_DEFINED__ */


#ifndef __IAgentCtlBalloonEx_FWD_DEFINED__
#define __IAgentCtlBalloonEx_FWD_DEFINED__
typedef interface IAgentCtlBalloonEx IAgentCtlBalloonEx;
#endif 	/* __IAgentCtlBalloonEx_FWD_DEFINED__ */


#ifndef __IAgentCtlCommand_FWD_DEFINED__
#define __IAgentCtlCommand_FWD_DEFINED__
typedef interface IAgentCtlCommand IAgentCtlCommand;
#endif 	/* __IAgentCtlCommand_FWD_DEFINED__ */


#ifndef __IAgentCtlCommandEx_FWD_DEFINED__
#define __IAgentCtlCommandEx_FWD_DEFINED__
typedef interface IAgentCtlCommandEx IAgentCtlCommandEx;
#endif 	/* __IAgentCtlCommandEx_FWD_DEFINED__ */


#ifndef __IAgentCtlCommands_FWD_DEFINED__
#define __IAgentCtlCommands_FWD_DEFINED__
typedef interface IAgentCtlCommands IAgentCtlCommands;
#endif 	/* __IAgentCtlCommands_FWD_DEFINED__ */


#ifndef __IAgentCtlCommandsEx_FWD_DEFINED__
#define __IAgentCtlCommandsEx_FWD_DEFINED__
typedef interface IAgentCtlCommandsEx IAgentCtlCommandsEx;
#endif 	/* __IAgentCtlCommandsEx_FWD_DEFINED__ */


#ifndef __IAgentCtlCharacter_FWD_DEFINED__
#define __IAgentCtlCharacter_FWD_DEFINED__
typedef interface IAgentCtlCharacter IAgentCtlCharacter;
#endif 	/* __IAgentCtlCharacter_FWD_DEFINED__ */


#ifndef __IAgentCtlAnimationNames_FWD_DEFINED__
#define __IAgentCtlAnimationNames_FWD_DEFINED__
typedef interface IAgentCtlAnimationNames IAgentCtlAnimationNames;
#endif 	/* __IAgentCtlAnimationNames_FWD_DEFINED__ */


#ifndef __IAgentCtlCharacterEx_FWD_DEFINED__
#define __IAgentCtlCharacterEx_FWD_DEFINED__
typedef interface IAgentCtlCharacterEx IAgentCtlCharacterEx;
#endif 	/* __IAgentCtlCharacterEx_FWD_DEFINED__ */


#ifndef __IAgentCtlCharacters_FWD_DEFINED__
#define __IAgentCtlCharacters_FWD_DEFINED__
typedef interface IAgentCtlCharacters IAgentCtlCharacters;
#endif 	/* __IAgentCtlCharacters_FWD_DEFINED__ */


#ifndef __IAgentCtlAudioObject_FWD_DEFINED__
#define __IAgentCtlAudioObject_FWD_DEFINED__
typedef interface IAgentCtlAudioObject IAgentCtlAudioObject;
#endif 	/* __IAgentCtlAudioObject_FWD_DEFINED__ */


#ifndef __IAgentCtlAudioObjectEx_FWD_DEFINED__
#define __IAgentCtlAudioObjectEx_FWD_DEFINED__
typedef interface IAgentCtlAudioObjectEx IAgentCtlAudioObjectEx;
#endif 	/* __IAgentCtlAudioObjectEx_FWD_DEFINED__ */


#ifndef __IAgentCtlSpeechInput_FWD_DEFINED__
#define __IAgentCtlSpeechInput_FWD_DEFINED__
typedef interface IAgentCtlSpeechInput IAgentCtlSpeechInput;
#endif 	/* __IAgentCtlSpeechInput_FWD_DEFINED__ */


#ifndef __IAgentCtlPropertySheet_FWD_DEFINED__
#define __IAgentCtlPropertySheet_FWD_DEFINED__
typedef interface IAgentCtlPropertySheet IAgentCtlPropertySheet;
#endif 	/* __IAgentCtlPropertySheet_FWD_DEFINED__ */


#ifndef __IAgentCtlCommandsWindow_FWD_DEFINED__
#define __IAgentCtlCommandsWindow_FWD_DEFINED__
typedef interface IAgentCtlCommandsWindow IAgentCtlCommandsWindow;
#endif 	/* __IAgentCtlCommandsWindow_FWD_DEFINED__ */


#ifndef __IAgentCtl_FWD_DEFINED__
#define __IAgentCtl_FWD_DEFINED__
typedef interface IAgentCtl IAgentCtl;
#endif 	/* __IAgentCtl_FWD_DEFINED__ */


#ifndef __IAgentCtlEx_FWD_DEFINED__
#define __IAgentCtlEx_FWD_DEFINED__
typedef interface IAgentCtlEx IAgentCtlEx;
#endif 	/* __IAgentCtlEx_FWD_DEFINED__ */


#ifndef __IAgentCtlCharacters_FWD_DEFINED__
#define __IAgentCtlCharacters_FWD_DEFINED__
typedef interface IAgentCtlCharacters IAgentCtlCharacters;
#endif 	/* __IAgentCtlCharacters_FWD_DEFINED__ */


#ifndef __IAgentCtlBalloon_FWD_DEFINED__
#define __IAgentCtlBalloon_FWD_DEFINED__
typedef interface IAgentCtlBalloon IAgentCtlBalloon;
#endif 	/* __IAgentCtlBalloon_FWD_DEFINED__ */


#ifndef __IAgentCtlBalloonEx_FWD_DEFINED__
#define __IAgentCtlBalloonEx_FWD_DEFINED__
typedef interface IAgentCtlBalloonEx IAgentCtlBalloonEx;
#endif 	/* __IAgentCtlBalloonEx_FWD_DEFINED__ */


#ifndef __IAgentCtlCharacter_FWD_DEFINED__
#define __IAgentCtlCharacter_FWD_DEFINED__
typedef interface IAgentCtlCharacter IAgentCtlCharacter;
#endif 	/* __IAgentCtlCharacter_FWD_DEFINED__ */


#ifndef __IAgentCtlCharacterEx_FWD_DEFINED__
#define __IAgentCtlCharacterEx_FWD_DEFINED__
typedef interface IAgentCtlCharacterEx IAgentCtlCharacterEx;
#endif 	/* __IAgentCtlCharacterEx_FWD_DEFINED__ */


#ifndef __IAgentCtlAudioObject_FWD_DEFINED__
#define __IAgentCtlAudioObject_FWD_DEFINED__
typedef interface IAgentCtlAudioObject IAgentCtlAudioObject;
#endif 	/* __IAgentCtlAudioObject_FWD_DEFINED__ */


#ifndef __IAgentCtlAudioObjectEx_FWD_DEFINED__
#define __IAgentCtlAudioObjectEx_FWD_DEFINED__
typedef interface IAgentCtlAudioObjectEx IAgentCtlAudioObjectEx;
#endif 	/* __IAgentCtlAudioObjectEx_FWD_DEFINED__ */


#ifndef __IAgentCtlSpeechInput_FWD_DEFINED__
#define __IAgentCtlSpeechInput_FWD_DEFINED__
typedef interface IAgentCtlSpeechInput IAgentCtlSpeechInput;
#endif 	/* __IAgentCtlSpeechInput_FWD_DEFINED__ */


#ifndef __IAgentCtlPropertySheet_FWD_DEFINED__
#define __IAgentCtlPropertySheet_FWD_DEFINED__
typedef interface IAgentCtlPropertySheet IAgentCtlPropertySheet;
#endif 	/* __IAgentCtlPropertySheet_FWD_DEFINED__ */


#ifndef __IAgentCtlCommands_FWD_DEFINED__
#define __IAgentCtlCommands_FWD_DEFINED__
typedef interface IAgentCtlCommands IAgentCtlCommands;
#endif 	/* __IAgentCtlCommands_FWD_DEFINED__ */


#ifndef __IAgentCtlCommandsEx_FWD_DEFINED__
#define __IAgentCtlCommandsEx_FWD_DEFINED__
typedef interface IAgentCtlCommandsEx IAgentCtlCommandsEx;
#endif 	/* __IAgentCtlCommandsEx_FWD_DEFINED__ */


#ifndef __IAgentCtlCommand_FWD_DEFINED__
#define __IAgentCtlCommand_FWD_DEFINED__
typedef interface IAgentCtlCommand IAgentCtlCommand;
#endif 	/* __IAgentCtlCommand_FWD_DEFINED__ */


#ifndef __IAgentCtlCommandEx_FWD_DEFINED__
#define __IAgentCtlCommandEx_FWD_DEFINED__
typedef interface IAgentCtlCommandEx IAgentCtlCommandEx;
#endif 	/* __IAgentCtlCommandEx_FWD_DEFINED__ */


#ifndef __IAgentCtlRequest_FWD_DEFINED__
#define __IAgentCtlRequest_FWD_DEFINED__
typedef interface IAgentCtlRequest IAgentCtlRequest;
#endif 	/* __IAgentCtlRequest_FWD_DEFINED__ */


#ifndef __IAgentCtlUserInput_FWD_DEFINED__
#define __IAgentCtlUserInput_FWD_DEFINED__
typedef interface IAgentCtlUserInput IAgentCtlUserInput;
#endif 	/* __IAgentCtlUserInput_FWD_DEFINED__ */


#ifndef __IAgentCtlCommandsWindow_FWD_DEFINED__
#define __IAgentCtlCommandsWindow_FWD_DEFINED__
typedef interface IAgentCtlCommandsWindow IAgentCtlCommandsWindow;
#endif 	/* __IAgentCtlCommandsWindow_FWD_DEFINED__ */


#ifndef __IAgentCtl_FWD_DEFINED__
#define __IAgentCtl_FWD_DEFINED__
typedef interface IAgentCtl IAgentCtl;
#endif 	/* __IAgentCtl_FWD_DEFINED__ */


#ifndef __IAgentCtlEx_FWD_DEFINED__
#define __IAgentCtlEx_FWD_DEFINED__
typedef interface IAgentCtlEx IAgentCtlEx;
#endif 	/* __IAgentCtlEx_FWD_DEFINED__ */


#ifndef ___AgentEvents_FWD_DEFINED__
#define ___AgentEvents_FWD_DEFINED__
typedef interface _AgentEvents _AgentEvents;
#endif 	/* ___AgentEvents_FWD_DEFINED__ */


#ifndef __Agent_FWD_DEFINED__
#define __Agent_FWD_DEFINED__

#ifdef __cplusplus
typedef class Agent Agent;
#else
typedef struct Agent Agent;
#endif /* __cplusplus */

#endif 	/* __Agent_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"
#include "ocidl.h"

void __RPC_FAR * __RPC_USER MIDL_user_allocate(size_t);
void __RPC_USER MIDL_user_free( void __RPC_FAR * ); 

/* interface __MIDL_itf_AgentControl_0000 */
/* [local] */ 

#define	RequestSuccess	( 0 )

#define	RequestFailed	( 1 )

#define	RequestPending	( 2 )

#define	RequestInterrupted	( 3 )

#define	RequestInProgress	( 4 )



extern RPC_IF_HANDLE __MIDL_itf_AgentControl_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_AgentControl_0000_v0_0_s_ifspec;

#ifndef __IAgentCtlRequest_INTERFACE_DEFINED__
#define __IAgentCtlRequest_INTERFACE_DEFINED__

/* interface IAgentCtlRequest */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentCtlRequest;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1DAB85C3-803A-11D0-AC63-00C04FD97575")
    IAgentCtlRequest : public IDispatch
    {
    public:
        virtual /* [hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_ID( 
            /* [retval][out] */ long __RPC_FAR *ID) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Status( 
            /* [retval][out] */ long __RPC_FAR *Status) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Description( 
            /* [retval][out] */ BSTR __RPC_FAR *Description) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Number( 
            /* [retval][out] */ long __RPC_FAR *Number) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlRequestVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlRequest __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlRequest __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlRequest __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlRequest __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlRequest __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlRequest __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlRequest __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ID )( 
            IAgentCtlRequest __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *ID);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Status )( 
            IAgentCtlRequest __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Status);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Description )( 
            IAgentCtlRequest __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Description);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Number )( 
            IAgentCtlRequest __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Number);
        
        END_INTERFACE
    } IAgentCtlRequestVtbl;

    interface IAgentCtlRequest
    {
        CONST_VTBL struct IAgentCtlRequestVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlRequest_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlRequest_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlRequest_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlRequest_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlRequest_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlRequest_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlRequest_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlRequest_get_ID(This,ID)	\
    (This)->lpVtbl -> get_ID(This,ID)

#define IAgentCtlRequest_get_Status(This,Status)	\
    (This)->lpVtbl -> get_Status(This,Status)

#define IAgentCtlRequest_get_Description(This,Description)	\
    (This)->lpVtbl -> get_Description(This,Description)

#define IAgentCtlRequest_get_Number(This,Number)	\
    (This)->lpVtbl -> get_Number(This,Number)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [hidden][propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlRequest_get_ID_Proxy( 
    IAgentCtlRequest __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *ID);


void __RPC_STUB IAgentCtlRequest_get_ID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlRequest_get_Status_Proxy( 
    IAgentCtlRequest __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *Status);


void __RPC_STUB IAgentCtlRequest_get_Status_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlRequest_get_Description_Proxy( 
    IAgentCtlRequest __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Description);


void __RPC_STUB IAgentCtlRequest_get_Description_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlRequest_get_Number_Proxy( 
    IAgentCtlRequest __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *Number);


void __RPC_STUB IAgentCtlRequest_get_Number_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlRequest_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlUserInput_INTERFACE_DEFINED__
#define __IAgentCtlUserInput_INTERFACE_DEFINED__

/* interface IAgentCtlUserInput */
/* [object][dual][uuid] */ 


EXTERN_C const IID IID_IAgentCtlUserInput;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C4ABF875-8100-11D0-AC63-00C04FD97575")
    IAgentCtlUserInput : public IDispatch
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ short __RPC_FAR *pCount) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR __RPC_FAR *pName) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CharacterID( 
            /* [retval][out] */ BSTR __RPC_FAR *pCharacterID) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Confidence( 
            /* [retval][out] */ long __RPC_FAR *pConfidence) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Voice( 
            /* [retval][out] */ BSTR __RPC_FAR *pVoice) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Alt1Name( 
            /* [retval][out] */ BSTR __RPC_FAR *pAlt1Name) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Alt1Confidence( 
            /* [retval][out] */ long __RPC_FAR *pAlt1Confidence) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Alt1Voice( 
            /* [retval][out] */ BSTR __RPC_FAR *pAlt1Voice) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Alt2Name( 
            /* [retval][out] */ BSTR __RPC_FAR *pAlt2Name) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Alt2Confidence( 
            /* [retval][out] */ long __RPC_FAR *pAlt2Confidence) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Alt2Voice( 
            /* [retval][out] */ BSTR __RPC_FAR *pAlt2Voice) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlUserInputVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlUserInput __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlUserInput __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Count )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *pCount);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Name )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pName);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_CharacterID )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pCharacterID);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Confidence )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *pConfidence);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Voice )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pVoice);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Alt1Name )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pAlt1Name);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Alt1Confidence )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *pAlt1Confidence);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Alt1Voice )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pAlt1Voice);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Alt2Name )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pAlt2Name);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Alt2Confidence )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *pAlt2Confidence);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Alt2Voice )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pAlt2Voice);
        
        END_INTERFACE
    } IAgentCtlUserInputVtbl;

    interface IAgentCtlUserInput
    {
        CONST_VTBL struct IAgentCtlUserInputVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlUserInput_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlUserInput_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlUserInput_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlUserInput_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlUserInput_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlUserInput_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlUserInput_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlUserInput_get_Count(This,pCount)	\
    (This)->lpVtbl -> get_Count(This,pCount)

#define IAgentCtlUserInput_get_Name(This,pName)	\
    (This)->lpVtbl -> get_Name(This,pName)

#define IAgentCtlUserInput_get_CharacterID(This,pCharacterID)	\
    (This)->lpVtbl -> get_CharacterID(This,pCharacterID)

#define IAgentCtlUserInput_get_Confidence(This,pConfidence)	\
    (This)->lpVtbl -> get_Confidence(This,pConfidence)

#define IAgentCtlUserInput_get_Voice(This,pVoice)	\
    (This)->lpVtbl -> get_Voice(This,pVoice)

#define IAgentCtlUserInput_get_Alt1Name(This,pAlt1Name)	\
    (This)->lpVtbl -> get_Alt1Name(This,pAlt1Name)

#define IAgentCtlUserInput_get_Alt1Confidence(This,pAlt1Confidence)	\
    (This)->lpVtbl -> get_Alt1Confidence(This,pAlt1Confidence)

#define IAgentCtlUserInput_get_Alt1Voice(This,pAlt1Voice)	\
    (This)->lpVtbl -> get_Alt1Voice(This,pAlt1Voice)

#define IAgentCtlUserInput_get_Alt2Name(This,pAlt2Name)	\
    (This)->lpVtbl -> get_Alt2Name(This,pAlt2Name)

#define IAgentCtlUserInput_get_Alt2Confidence(This,pAlt2Confidence)	\
    (This)->lpVtbl -> get_Alt2Confidence(This,pAlt2Confidence)

#define IAgentCtlUserInput_get_Alt2Voice(This,pAlt2Voice)	\
    (This)->lpVtbl -> get_Alt2Voice(This,pAlt2Voice)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propget] */ HRESULT STDMETHODCALLTYPE IAgentCtlUserInput_get_Count_Proxy( 
    IAgentCtlUserInput __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *pCount);


void __RPC_STUB IAgentCtlUserInput_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget] */ HRESULT STDMETHODCALLTYPE IAgentCtlUserInput_get_Name_Proxy( 
    IAgentCtlUserInput __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pName);


void __RPC_STUB IAgentCtlUserInput_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget] */ HRESULT STDMETHODCALLTYPE IAgentCtlUserInput_get_CharacterID_Proxy( 
    IAgentCtlUserInput __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pCharacterID);


void __RPC_STUB IAgentCtlUserInput_get_CharacterID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget] */ HRESULT STDMETHODCALLTYPE IAgentCtlUserInput_get_Confidence_Proxy( 
    IAgentCtlUserInput __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *pConfidence);


void __RPC_STUB IAgentCtlUserInput_get_Confidence_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget] */ HRESULT STDMETHODCALLTYPE IAgentCtlUserInput_get_Voice_Proxy( 
    IAgentCtlUserInput __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pVoice);


void __RPC_STUB IAgentCtlUserInput_get_Voice_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget] */ HRESULT STDMETHODCALLTYPE IAgentCtlUserInput_get_Alt1Name_Proxy( 
    IAgentCtlUserInput __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pAlt1Name);


void __RPC_STUB IAgentCtlUserInput_get_Alt1Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget] */ HRESULT STDMETHODCALLTYPE IAgentCtlUserInput_get_Alt1Confidence_Proxy( 
    IAgentCtlUserInput __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *pAlt1Confidence);


void __RPC_STUB IAgentCtlUserInput_get_Alt1Confidence_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget] */ HRESULT STDMETHODCALLTYPE IAgentCtlUserInput_get_Alt1Voice_Proxy( 
    IAgentCtlUserInput __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pAlt1Voice);


void __RPC_STUB IAgentCtlUserInput_get_Alt1Voice_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget] */ HRESULT STDMETHODCALLTYPE IAgentCtlUserInput_get_Alt2Name_Proxy( 
    IAgentCtlUserInput __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pAlt2Name);


void __RPC_STUB IAgentCtlUserInput_get_Alt2Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget] */ HRESULT STDMETHODCALLTYPE IAgentCtlUserInput_get_Alt2Confidence_Proxy( 
    IAgentCtlUserInput __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *pAlt2Confidence);


void __RPC_STUB IAgentCtlUserInput_get_Alt2Confidence_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget] */ HRESULT STDMETHODCALLTYPE IAgentCtlUserInput_get_Alt2Voice_Proxy( 
    IAgentCtlUserInput __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pAlt2Voice);


void __RPC_STUB IAgentCtlUserInput_get_Alt2Voice_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlUserInput_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlBalloon_INTERFACE_DEFINED__
#define __IAgentCtlBalloon_INTERFACE_DEFINED__

/* interface IAgentCtlBalloon */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentCtlBalloon;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F5BE8BD3-7DE6-11D0-91FE-00C04FD701A5")
    IAgentCtlBalloon : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Enabled) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_NumberOfLines( 
            /* [retval][out] */ long __RPC_FAR *Lines) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_CharsPerLine( 
            /* [retval][out] */ long __RPC_FAR *CharsPerLine) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_FontName( 
            /* [retval][out] */ BSTR __RPC_FAR *FontName) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_FontSize( 
            /* [retval][out] */ long __RPC_FAR *FontSize) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_FontBold( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontBold) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_FontItalic( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontItalic) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_FontStrikethru( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontStrikethru) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_FontUnderline( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontUnderline) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ForeColor( 
            /* [retval][out] */ long __RPC_FAR *ForeColor) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_BackColor( 
            /* [retval][out] */ long __RPC_FAR *BackColor) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_BorderColor( 
            /* [retval][out] */ long __RPC_FAR *BorderColor) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Visible( 
            /* [in] */ VARIANT_BOOL Visible) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_FontName( 
            /* [in] */ BSTR FontName) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_FontSize( 
            /* [in] */ long FontSize) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_FontCharSet( 
            /* [in] */ short FontCharSet) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_FontCharSet( 
            /* [retval][out] */ short __RPC_FAR *FontCharSet) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlBalloonVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlBalloon __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlBalloon __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Enabled )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Enabled);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_NumberOfLines )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Lines);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_CharsPerLine )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *CharsPerLine);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontName )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *FontName);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontSize )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *FontSize);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontBold )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontBold);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontItalic )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontItalic);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontStrikethru )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontStrikethru);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontUnderline )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontUnderline);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ForeColor )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *ForeColor);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_BackColor )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *BackColor);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_BorderColor )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *BorderColor);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Visible )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Visible )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_FontName )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [in] */ BSTR FontName);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_FontSize )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [in] */ long FontSize);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_FontCharSet )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [in] */ short FontCharSet);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontCharSet )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *FontCharSet);
        
        END_INTERFACE
    } IAgentCtlBalloonVtbl;

    interface IAgentCtlBalloon
    {
        CONST_VTBL struct IAgentCtlBalloonVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlBalloon_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlBalloon_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlBalloon_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlBalloon_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlBalloon_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlBalloon_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlBalloon_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlBalloon_get_Enabled(This,Enabled)	\
    (This)->lpVtbl -> get_Enabled(This,Enabled)

#define IAgentCtlBalloon_get_NumberOfLines(This,Lines)	\
    (This)->lpVtbl -> get_NumberOfLines(This,Lines)

#define IAgentCtlBalloon_get_CharsPerLine(This,CharsPerLine)	\
    (This)->lpVtbl -> get_CharsPerLine(This,CharsPerLine)

#define IAgentCtlBalloon_get_FontName(This,FontName)	\
    (This)->lpVtbl -> get_FontName(This,FontName)

#define IAgentCtlBalloon_get_FontSize(This,FontSize)	\
    (This)->lpVtbl -> get_FontSize(This,FontSize)

#define IAgentCtlBalloon_get_FontBold(This,FontBold)	\
    (This)->lpVtbl -> get_FontBold(This,FontBold)

#define IAgentCtlBalloon_get_FontItalic(This,FontItalic)	\
    (This)->lpVtbl -> get_FontItalic(This,FontItalic)

#define IAgentCtlBalloon_get_FontStrikethru(This,FontStrikethru)	\
    (This)->lpVtbl -> get_FontStrikethru(This,FontStrikethru)

#define IAgentCtlBalloon_get_FontUnderline(This,FontUnderline)	\
    (This)->lpVtbl -> get_FontUnderline(This,FontUnderline)

#define IAgentCtlBalloon_get_ForeColor(This,ForeColor)	\
    (This)->lpVtbl -> get_ForeColor(This,ForeColor)

#define IAgentCtlBalloon_get_BackColor(This,BackColor)	\
    (This)->lpVtbl -> get_BackColor(This,BackColor)

#define IAgentCtlBalloon_get_BorderColor(This,BorderColor)	\
    (This)->lpVtbl -> get_BorderColor(This,BorderColor)

#define IAgentCtlBalloon_put_Visible(This,Visible)	\
    (This)->lpVtbl -> put_Visible(This,Visible)

#define IAgentCtlBalloon_get_Visible(This,Visible)	\
    (This)->lpVtbl -> get_Visible(This,Visible)

#define IAgentCtlBalloon_put_FontName(This,FontName)	\
    (This)->lpVtbl -> put_FontName(This,FontName)

#define IAgentCtlBalloon_put_FontSize(This,FontSize)	\
    (This)->lpVtbl -> put_FontSize(This,FontSize)

#define IAgentCtlBalloon_put_FontCharSet(This,FontCharSet)	\
    (This)->lpVtbl -> put_FontCharSet(This,FontCharSet)

#define IAgentCtlBalloon_get_FontCharSet(This,FontCharSet)	\
    (This)->lpVtbl -> get_FontCharSet(This,FontCharSet)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_Enabled_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Enabled);


void __RPC_STUB IAgentCtlBalloon_get_Enabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_NumberOfLines_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *Lines);


void __RPC_STUB IAgentCtlBalloon_get_NumberOfLines_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_CharsPerLine_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *CharsPerLine);


void __RPC_STUB IAgentCtlBalloon_get_CharsPerLine_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_FontName_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *FontName);


void __RPC_STUB IAgentCtlBalloon_get_FontName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_FontSize_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *FontSize);


void __RPC_STUB IAgentCtlBalloon_get_FontSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_FontBold_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontBold);


void __RPC_STUB IAgentCtlBalloon_get_FontBold_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_FontItalic_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontItalic);


void __RPC_STUB IAgentCtlBalloon_get_FontItalic_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_FontStrikethru_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontStrikethru);


void __RPC_STUB IAgentCtlBalloon_get_FontStrikethru_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_FontUnderline_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontUnderline);


void __RPC_STUB IAgentCtlBalloon_get_FontUnderline_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_ForeColor_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *ForeColor);


void __RPC_STUB IAgentCtlBalloon_get_ForeColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_BackColor_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *BackColor);


void __RPC_STUB IAgentCtlBalloon_get_BackColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_BorderColor_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *BorderColor);


void __RPC_STUB IAgentCtlBalloon_get_BorderColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_put_Visible_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL Visible);


void __RPC_STUB IAgentCtlBalloon_put_Visible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_Visible_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);


void __RPC_STUB IAgentCtlBalloon_get_Visible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_put_FontName_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [in] */ BSTR FontName);


void __RPC_STUB IAgentCtlBalloon_put_FontName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_put_FontSize_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [in] */ long FontSize);


void __RPC_STUB IAgentCtlBalloon_put_FontSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_put_FontCharSet_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [in] */ short FontCharSet);


void __RPC_STUB IAgentCtlBalloon_put_FontCharSet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_FontCharSet_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *FontCharSet);


void __RPC_STUB IAgentCtlBalloon_get_FontCharSet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlBalloon_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlBalloonEx_INTERFACE_DEFINED__
#define __IAgentCtlBalloonEx_INTERFACE_DEFINED__

/* interface IAgentCtlBalloonEx */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentCtlBalloonEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("822DB1C0-8879-11d1-9EC6-00C04FD7081F")
    IAgentCtlBalloonEx : public IAgentCtlBalloon
    {
    public:
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Style( 
            /* [in] */ long Style) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Style( 
            /* [retval][out] */ long __RPC_FAR *Style) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlBalloonExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlBalloonEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlBalloonEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Enabled )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Enabled);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_NumberOfLines )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Lines);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_CharsPerLine )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *CharsPerLine);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontName )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *FontName);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontSize )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *FontSize);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontBold )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontBold);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontItalic )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontItalic);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontStrikethru )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontStrikethru);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontUnderline )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontUnderline);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ForeColor )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *ForeColor);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_BackColor )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *BackColor);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_BorderColor )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *BorderColor);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Visible )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Visible )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_FontName )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [in] */ BSTR FontName);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_FontSize )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [in] */ long FontSize);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_FontCharSet )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [in] */ short FontCharSet);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontCharSet )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *FontCharSet);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Style )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [in] */ long Style);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Style )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Style);
        
        END_INTERFACE
    } IAgentCtlBalloonExVtbl;

    interface IAgentCtlBalloonEx
    {
        CONST_VTBL struct IAgentCtlBalloonExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlBalloonEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlBalloonEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlBalloonEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlBalloonEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlBalloonEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlBalloonEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlBalloonEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlBalloonEx_get_Enabled(This,Enabled)	\
    (This)->lpVtbl -> get_Enabled(This,Enabled)

#define IAgentCtlBalloonEx_get_NumberOfLines(This,Lines)	\
    (This)->lpVtbl -> get_NumberOfLines(This,Lines)

#define IAgentCtlBalloonEx_get_CharsPerLine(This,CharsPerLine)	\
    (This)->lpVtbl -> get_CharsPerLine(This,CharsPerLine)

#define IAgentCtlBalloonEx_get_FontName(This,FontName)	\
    (This)->lpVtbl -> get_FontName(This,FontName)

#define IAgentCtlBalloonEx_get_FontSize(This,FontSize)	\
    (This)->lpVtbl -> get_FontSize(This,FontSize)

#define IAgentCtlBalloonEx_get_FontBold(This,FontBold)	\
    (This)->lpVtbl -> get_FontBold(This,FontBold)

#define IAgentCtlBalloonEx_get_FontItalic(This,FontItalic)	\
    (This)->lpVtbl -> get_FontItalic(This,FontItalic)

#define IAgentCtlBalloonEx_get_FontStrikethru(This,FontStrikethru)	\
    (This)->lpVtbl -> get_FontStrikethru(This,FontStrikethru)

#define IAgentCtlBalloonEx_get_FontUnderline(This,FontUnderline)	\
    (This)->lpVtbl -> get_FontUnderline(This,FontUnderline)

#define IAgentCtlBalloonEx_get_ForeColor(This,ForeColor)	\
    (This)->lpVtbl -> get_ForeColor(This,ForeColor)

#define IAgentCtlBalloonEx_get_BackColor(This,BackColor)	\
    (This)->lpVtbl -> get_BackColor(This,BackColor)

#define IAgentCtlBalloonEx_get_BorderColor(This,BorderColor)	\
    (This)->lpVtbl -> get_BorderColor(This,BorderColor)

#define IAgentCtlBalloonEx_put_Visible(This,Visible)	\
    (This)->lpVtbl -> put_Visible(This,Visible)

#define IAgentCtlBalloonEx_get_Visible(This,Visible)	\
    (This)->lpVtbl -> get_Visible(This,Visible)

#define IAgentCtlBalloonEx_put_FontName(This,FontName)	\
    (This)->lpVtbl -> put_FontName(This,FontName)

#define IAgentCtlBalloonEx_put_FontSize(This,FontSize)	\
    (This)->lpVtbl -> put_FontSize(This,FontSize)

#define IAgentCtlBalloonEx_put_FontCharSet(This,FontCharSet)	\
    (This)->lpVtbl -> put_FontCharSet(This,FontCharSet)

#define IAgentCtlBalloonEx_get_FontCharSet(This,FontCharSet)	\
    (This)->lpVtbl -> get_FontCharSet(This,FontCharSet)


#define IAgentCtlBalloonEx_put_Style(This,Style)	\
    (This)->lpVtbl -> put_Style(This,Style)

#define IAgentCtlBalloonEx_get_Style(This,Style)	\
    (This)->lpVtbl -> get_Style(This,Style)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloonEx_put_Style_Proxy( 
    IAgentCtlBalloonEx __RPC_FAR * This,
    /* [in] */ long Style);


void __RPC_STUB IAgentCtlBalloonEx_put_Style_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloonEx_get_Style_Proxy( 
    IAgentCtlBalloonEx __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *Style);


void __RPC_STUB IAgentCtlBalloonEx_get_Style_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlBalloonEx_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlCommand_INTERFACE_DEFINED__
#define __IAgentCtlCommand_INTERFACE_DEFINED__

/* interface IAgentCtlCommand */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentCtlCommand;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F5BE8BE3-7DE6-11D0-91FE-00C04FD701A5")
    IAgentCtlCommand : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Voice( 
            /* [retval][out] */ BSTR __RPC_FAR *Voice) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Voice( 
            /* [in] */ BSTR Voice) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Caption( 
            /* [retval][out] */ BSTR __RPC_FAR *Caption) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Caption( 
            /* [in] */ BSTR Caption) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Enabled) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Enabled( 
            /* [in] */ VARIANT_BOOL Enabled) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Visible( 
            /* [in] */ VARIANT_BOOL Visible) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Confidence( 
            /* [retval][out] */ long __RPC_FAR *Confidence) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Confidence( 
            /* [in] */ long Confidence) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ConfidenceText( 
            /* [retval][out] */ BSTR __RPC_FAR *Text) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_ConfidenceText( 
            /* [in] */ BSTR Text) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlCommandVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlCommand __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlCommand __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Voice )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Voice);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Voice )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [in] */ BSTR Voice);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Caption )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Caption);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Caption )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [in] */ BSTR Caption);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Enabled )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Enabled);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Enabled )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Enabled);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Visible )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Visible )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Confidence )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Confidence);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Confidence )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [in] */ long Confidence);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ConfidenceText )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Text);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_ConfidenceText )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [in] */ BSTR Text);
        
        END_INTERFACE
    } IAgentCtlCommandVtbl;

    interface IAgentCtlCommand
    {
        CONST_VTBL struct IAgentCtlCommandVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlCommand_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlCommand_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlCommand_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlCommand_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlCommand_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlCommand_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlCommand_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlCommand_get_Voice(This,Voice)	\
    (This)->lpVtbl -> get_Voice(This,Voice)

#define IAgentCtlCommand_put_Voice(This,Voice)	\
    (This)->lpVtbl -> put_Voice(This,Voice)

#define IAgentCtlCommand_get_Caption(This,Caption)	\
    (This)->lpVtbl -> get_Caption(This,Caption)

#define IAgentCtlCommand_put_Caption(This,Caption)	\
    (This)->lpVtbl -> put_Caption(This,Caption)

#define IAgentCtlCommand_get_Enabled(This,Enabled)	\
    (This)->lpVtbl -> get_Enabled(This,Enabled)

#define IAgentCtlCommand_put_Enabled(This,Enabled)	\
    (This)->lpVtbl -> put_Enabled(This,Enabled)

#define IAgentCtlCommand_get_Visible(This,Visible)	\
    (This)->lpVtbl -> get_Visible(This,Visible)

#define IAgentCtlCommand_put_Visible(This,Visible)	\
    (This)->lpVtbl -> put_Visible(This,Visible)

#define IAgentCtlCommand_get_Confidence(This,Confidence)	\
    (This)->lpVtbl -> get_Confidence(This,Confidence)

#define IAgentCtlCommand_put_Confidence(This,Confidence)	\
    (This)->lpVtbl -> put_Confidence(This,Confidence)

#define IAgentCtlCommand_get_ConfidenceText(This,Text)	\
    (This)->lpVtbl -> get_ConfidenceText(This,Text)

#define IAgentCtlCommand_put_ConfidenceText(This,Text)	\
    (This)->lpVtbl -> put_ConfidenceText(This,Text)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommand_get_Voice_Proxy( 
    IAgentCtlCommand __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Voice);


void __RPC_STUB IAgentCtlCommand_get_Voice_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommand_put_Voice_Proxy( 
    IAgentCtlCommand __RPC_FAR * This,
    /* [in] */ BSTR Voice);


void __RPC_STUB IAgentCtlCommand_put_Voice_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommand_get_Caption_Proxy( 
    IAgentCtlCommand __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Caption);


void __RPC_STUB IAgentCtlCommand_get_Caption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommand_put_Caption_Proxy( 
    IAgentCtlCommand __RPC_FAR * This,
    /* [in] */ BSTR Caption);


void __RPC_STUB IAgentCtlCommand_put_Caption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommand_get_Enabled_Proxy( 
    IAgentCtlCommand __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Enabled);


void __RPC_STUB IAgentCtlCommand_get_Enabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommand_put_Enabled_Proxy( 
    IAgentCtlCommand __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL Enabled);


void __RPC_STUB IAgentCtlCommand_put_Enabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommand_get_Visible_Proxy( 
    IAgentCtlCommand __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);


void __RPC_STUB IAgentCtlCommand_get_Visible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommand_put_Visible_Proxy( 
    IAgentCtlCommand __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL Visible);


void __RPC_STUB IAgentCtlCommand_put_Visible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommand_get_Confidence_Proxy( 
    IAgentCtlCommand __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *Confidence);


void __RPC_STUB IAgentCtlCommand_get_Confidence_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommand_put_Confidence_Proxy( 
    IAgentCtlCommand __RPC_FAR * This,
    /* [in] */ long Confidence);


void __RPC_STUB IAgentCtlCommand_put_Confidence_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommand_get_ConfidenceText_Proxy( 
    IAgentCtlCommand __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Text);


void __RPC_STUB IAgentCtlCommand_get_ConfidenceText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommand_put_ConfidenceText_Proxy( 
    IAgentCtlCommand __RPC_FAR * This,
    /* [in] */ BSTR Text);


void __RPC_STUB IAgentCtlCommand_put_ConfidenceText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlCommand_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlCommandEx_INTERFACE_DEFINED__
#define __IAgentCtlCommandEx_INTERFACE_DEFINED__

/* interface IAgentCtlCommandEx */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentCtlCommandEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B0913410-3B44-11d1-ACBA-00C04FD97575")
    IAgentCtlCommandEx : public IAgentCtlCommand
    {
    public:
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_HelpContextID( 
            /* [in] */ long ID) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_HelpContextID( 
            /* [retval][out] */ long __RPC_FAR *ID) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_VoiceCaption( 
            /* [in] */ BSTR VoiceCaption) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_VoiceCaption( 
            /* [retval][out] */ BSTR __RPC_FAR *VoiceCaption) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlCommandExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlCommandEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlCommandEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Voice )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Voice);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Voice )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [in] */ BSTR Voice);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Caption )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Caption);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Caption )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [in] */ BSTR Caption);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Enabled )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Enabled);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Enabled )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Enabled);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Visible )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Visible )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Confidence )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Confidence);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Confidence )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [in] */ long Confidence);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ConfidenceText )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Text);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_ConfidenceText )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [in] */ BSTR Text);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_HelpContextID )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [in] */ long ID);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_HelpContextID )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *ID);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_VoiceCaption )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [in] */ BSTR VoiceCaption);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_VoiceCaption )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *VoiceCaption);
        
        END_INTERFACE
    } IAgentCtlCommandExVtbl;

    interface IAgentCtlCommandEx
    {
        CONST_VTBL struct IAgentCtlCommandExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlCommandEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlCommandEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlCommandEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlCommandEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlCommandEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlCommandEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlCommandEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlCommandEx_get_Voice(This,Voice)	\
    (This)->lpVtbl -> get_Voice(This,Voice)

#define IAgentCtlCommandEx_put_Voice(This,Voice)	\
    (This)->lpVtbl -> put_Voice(This,Voice)

#define IAgentCtlCommandEx_get_Caption(This,Caption)	\
    (This)->lpVtbl -> get_Caption(This,Caption)

#define IAgentCtlCommandEx_put_Caption(This,Caption)	\
    (This)->lpVtbl -> put_Caption(This,Caption)

#define IAgentCtlCommandEx_get_Enabled(This,Enabled)	\
    (This)->lpVtbl -> get_Enabled(This,Enabled)

#define IAgentCtlCommandEx_put_Enabled(This,Enabled)	\
    (This)->lpVtbl -> put_Enabled(This,Enabled)

#define IAgentCtlCommandEx_get_Visible(This,Visible)	\
    (This)->lpVtbl -> get_Visible(This,Visible)

#define IAgentCtlCommandEx_put_Visible(This,Visible)	\
    (This)->lpVtbl -> put_Visible(This,Visible)

#define IAgentCtlCommandEx_get_Confidence(This,Confidence)	\
    (This)->lpVtbl -> get_Confidence(This,Confidence)

#define IAgentCtlCommandEx_put_Confidence(This,Confidence)	\
    (This)->lpVtbl -> put_Confidence(This,Confidence)

#define IAgentCtlCommandEx_get_ConfidenceText(This,Text)	\
    (This)->lpVtbl -> get_ConfidenceText(This,Text)

#define IAgentCtlCommandEx_put_ConfidenceText(This,Text)	\
    (This)->lpVtbl -> put_ConfidenceText(This,Text)


#define IAgentCtlCommandEx_put_HelpContextID(This,ID)	\
    (This)->lpVtbl -> put_HelpContextID(This,ID)

#define IAgentCtlCommandEx_get_HelpContextID(This,ID)	\
    (This)->lpVtbl -> get_HelpContextID(This,ID)

#define IAgentCtlCommandEx_put_VoiceCaption(This,VoiceCaption)	\
    (This)->lpVtbl -> put_VoiceCaption(This,VoiceCaption)

#define IAgentCtlCommandEx_get_VoiceCaption(This,VoiceCaption)	\
    (This)->lpVtbl -> get_VoiceCaption(This,VoiceCaption)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandEx_put_HelpContextID_Proxy( 
    IAgentCtlCommandEx __RPC_FAR * This,
    /* [in] */ long ID);


void __RPC_STUB IAgentCtlCommandEx_put_HelpContextID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandEx_get_HelpContextID_Proxy( 
    IAgentCtlCommandEx __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *ID);


void __RPC_STUB IAgentCtlCommandEx_get_HelpContextID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandEx_put_VoiceCaption_Proxy( 
    IAgentCtlCommandEx __RPC_FAR * This,
    /* [in] */ BSTR VoiceCaption);


void __RPC_STUB IAgentCtlCommandEx_put_VoiceCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandEx_get_VoiceCaption_Proxy( 
    IAgentCtlCommandEx __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *VoiceCaption);


void __RPC_STUB IAgentCtlCommandEx_get_VoiceCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlCommandEx_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlCommands_INTERFACE_DEFINED__
#define __IAgentCtlCommands_INTERFACE_DEFINED__

/* interface IAgentCtlCommands */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentCtlCommands;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F5BE8BE1-7DE6-11D0-91FE-00C04FD701A5")
    IAgentCtlCommands : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAgentCtlCommandEx __RPC_FAR *__RPC_FAR *Item) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Command( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAgentCtlCommandEx __RPC_FAR *__RPC_FAR *Item) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long __RPC_FAR *Count) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Caption( 
            /* [retval][out] */ BSTR __RPC_FAR *Caption) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Caption( 
            /* [in] */ BSTR Caption) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Voice( 
            /* [retval][out] */ BSTR __RPC_FAR *Voice) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Voice( 
            /* [in] */ BSTR Voice) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Visible( 
            /* [in] */ VARIANT_BOOL Visible) = 0;
        
        virtual /* [restricted][propget][id] */ HRESULT STDMETHODCALLTYPE get_Enum( 
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkEnum) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR Name,
            /* [optional][in] */ VARIANT Caption,
            /* [optional][in] */ VARIANT Voice,
            /* [optional][in] */ VARIANT Enabled,
            /* [optional][in] */ VARIANT Visible,
            /* [retval][out] */ IAgentCtlCommand __RPC_FAR *__RPC_FAR *Command) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Insert( 
            /* [in] */ BSTR Name,
            /* [in] */ BSTR RefName,
            /* [optional][in] */ VARIANT Before,
            /* [optional][in] */ VARIANT Caption,
            /* [optional][in] */ VARIANT Voice,
            /* [optional][in] */ VARIANT Enabled,
            /* [optional][in] */ VARIANT Visible,
            /* [retval][out] */ IAgentCtlCommand __RPC_FAR *__RPC_FAR *Command) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ BSTR Name) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE RemoveAll( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlCommandsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlCommands __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlCommands __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Item )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAgentCtlCommandEx __RPC_FAR *__RPC_FAR *Item);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Command )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAgentCtlCommandEx __RPC_FAR *__RPC_FAR *Item);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Count )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Count);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Caption )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Caption);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Caption )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [in] */ BSTR Caption);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Voice )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Voice);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Voice )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [in] */ BSTR Voice);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Visible )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Visible )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [restricted][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Enum )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkEnum);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Add )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [in] */ BSTR Name,
            /* [optional][in] */ VARIANT Caption,
            /* [optional][in] */ VARIANT Voice,
            /* [optional][in] */ VARIANT Enabled,
            /* [optional][in] */ VARIANT Visible,
            /* [retval][out] */ IAgentCtlCommand __RPC_FAR *__RPC_FAR *Command);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Insert )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [in] */ BSTR Name,
            /* [in] */ BSTR RefName,
            /* [optional][in] */ VARIANT Before,
            /* [optional][in] */ VARIANT Caption,
            /* [optional][in] */ VARIANT Voice,
            /* [optional][in] */ VARIANT Enabled,
            /* [optional][in] */ VARIANT Visible,
            /* [retval][out] */ IAgentCtlCommand __RPC_FAR *__RPC_FAR *Command);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Remove )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [in] */ BSTR Name);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RemoveAll )( 
            IAgentCtlCommands __RPC_FAR * This);
        
        END_INTERFACE
    } IAgentCtlCommandsVtbl;

    interface IAgentCtlCommands
    {
        CONST_VTBL struct IAgentCtlCommandsVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlCommands_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlCommands_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlCommands_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlCommands_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlCommands_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlCommands_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlCommands_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlCommands_get_Item(This,Name,Item)	\
    (This)->lpVtbl -> get_Item(This,Name,Item)

#define IAgentCtlCommands_Command(This,Name,Item)	\
    (This)->lpVtbl -> Command(This,Name,Item)

#define IAgentCtlCommands_get_Count(This,Count)	\
    (This)->lpVtbl -> get_Count(This,Count)

#define IAgentCtlCommands_get_Caption(This,Caption)	\
    (This)->lpVtbl -> get_Caption(This,Caption)

#define IAgentCtlCommands_put_Caption(This,Caption)	\
    (This)->lpVtbl -> put_Caption(This,Caption)

#define IAgentCtlCommands_get_Voice(This,Voice)	\
    (This)->lpVtbl -> get_Voice(This,Voice)

#define IAgentCtlCommands_put_Voice(This,Voice)	\
    (This)->lpVtbl -> put_Voice(This,Voice)

#define IAgentCtlCommands_get_Visible(This,Visible)	\
    (This)->lpVtbl -> get_Visible(This,Visible)

#define IAgentCtlCommands_put_Visible(This,Visible)	\
    (This)->lpVtbl -> put_Visible(This,Visible)

#define IAgentCtlCommands_get_Enum(This,ppunkEnum)	\
    (This)->lpVtbl -> get_Enum(This,ppunkEnum)

#define IAgentCtlCommands_Add(This,Name,Caption,Voice,Enabled,Visible,Command)	\
    (This)->lpVtbl -> Add(This,Name,Caption,Voice,Enabled,Visible,Command)

#define IAgentCtlCommands_Insert(This,Name,RefName,Before,Caption,Voice,Enabled,Visible,Command)	\
    (This)->lpVtbl -> Insert(This,Name,RefName,Before,Caption,Voice,Enabled,Visible,Command)

#define IAgentCtlCommands_Remove(This,Name)	\
    (This)->lpVtbl -> Remove(This,Name)

#define IAgentCtlCommands_RemoveAll(This)	\
    (This)->lpVtbl -> RemoveAll(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_get_Item_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [in] */ BSTR Name,
    /* [retval][out] */ IAgentCtlCommandEx __RPC_FAR *__RPC_FAR *Item);


void __RPC_STUB IAgentCtlCommands_get_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_Command_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [in] */ BSTR Name,
    /* [retval][out] */ IAgentCtlCommandEx __RPC_FAR *__RPC_FAR *Item);


void __RPC_STUB IAgentCtlCommands_Command_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_get_Count_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *Count);


void __RPC_STUB IAgentCtlCommands_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_get_Caption_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Caption);


void __RPC_STUB IAgentCtlCommands_get_Caption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_put_Caption_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [in] */ BSTR Caption);


void __RPC_STUB IAgentCtlCommands_put_Caption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_get_Voice_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Voice);


void __RPC_STUB IAgentCtlCommands_get_Voice_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_put_Voice_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [in] */ BSTR Voice);


void __RPC_STUB IAgentCtlCommands_put_Voice_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_get_Visible_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);


void __RPC_STUB IAgentCtlCommands_get_Visible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_put_Visible_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL Visible);


void __RPC_STUB IAgentCtlCommands_put_Visible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [restricted][propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_get_Enum_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkEnum);


void __RPC_STUB IAgentCtlCommands_get_Enum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_Add_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [in] */ BSTR Name,
    /* [optional][in] */ VARIANT Caption,
    /* [optional][in] */ VARIANT Voice,
    /* [optional][in] */ VARIANT Enabled,
    /* [optional][in] */ VARIANT Visible,
    /* [retval][out] */ IAgentCtlCommand __RPC_FAR *__RPC_FAR *Command);


void __RPC_STUB IAgentCtlCommands_Add_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_Insert_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [in] */ BSTR Name,
    /* [in] */ BSTR RefName,
    /* [optional][in] */ VARIANT Before,
    /* [optional][in] */ VARIANT Caption,
    /* [optional][in] */ VARIANT Voice,
    /* [optional][in] */ VARIANT Enabled,
    /* [optional][in] */ VARIANT Visible,
    /* [retval][out] */ IAgentCtlCommand __RPC_FAR *__RPC_FAR *Command);


void __RPC_STUB IAgentCtlCommands_Insert_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_Remove_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [in] */ BSTR Name);


void __RPC_STUB IAgentCtlCommands_Remove_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_RemoveAll_Proxy( 
    IAgentCtlCommands __RPC_FAR * This);


void __RPC_STUB IAgentCtlCommands_RemoveAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlCommands_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlCommandsEx_INTERFACE_DEFINED__
#define __IAgentCtlCommandsEx_INTERFACE_DEFINED__

/* interface IAgentCtlCommandsEx */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentCtlCommandsEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6BA90C01-3910-11d1-ACB3-00C04FD97575")
    IAgentCtlCommandsEx : public IAgentCtlCommands
    {
    public:
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_DefaultCommand( 
            /* [in] */ BSTR Name) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_DefaultCommand( 
            /* [retval][out] */ BSTR __RPC_FAR *Name) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_HelpContextID( 
            /* [in] */ long ID) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_HelpContextID( 
            /* [retval][out] */ long __RPC_FAR *ID) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_FontName( 
            /* [in] */ BSTR FontName) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_FontName( 
            /* [retval][out] */ BSTR __RPC_FAR *FontName) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_FontSize( 
            /* [retval][out] */ long __RPC_FAR *FontSize) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_FontSize( 
            /* [in] */ long FontSize) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_VoiceCaption( 
            /* [in] */ BSTR VoiceCaption) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_VoiceCaption( 
            /* [retval][out] */ BSTR __RPC_FAR *VoiceCaption) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_GlobalVoiceCommandsEnabled( 
            /* [in] */ VARIANT_BOOL Enable) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_GlobalVoiceCommandsEnabled( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Enable) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlCommandsExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlCommandsEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlCommandsEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Item )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAgentCtlCommandEx __RPC_FAR *__RPC_FAR *Item);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Command )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAgentCtlCommandEx __RPC_FAR *__RPC_FAR *Item);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Count )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Count);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Caption )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Caption);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Caption )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR Caption);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Voice )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Voice);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Voice )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR Voice);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Visible )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Visible )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [restricted][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Enum )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkEnum);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Add )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR Name,
            /* [optional][in] */ VARIANT Caption,
            /* [optional][in] */ VARIANT Voice,
            /* [optional][in] */ VARIANT Enabled,
            /* [optional][in] */ VARIANT Visible,
            /* [retval][out] */ IAgentCtlCommand __RPC_FAR *__RPC_FAR *Command);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Insert )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR Name,
            /* [in] */ BSTR RefName,
            /* [optional][in] */ VARIANT Before,
            /* [optional][in] */ VARIANT Caption,
            /* [optional][in] */ VARIANT Voice,
            /* [optional][in] */ VARIANT Enabled,
            /* [optional][in] */ VARIANT Visible,
            /* [retval][out] */ IAgentCtlCommand __RPC_FAR *__RPC_FAR *Command);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Remove )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR Name);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RemoveAll )( 
            IAgentCtlCommandsEx __RPC_FAR * This);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_DefaultCommand )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR Name);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_DefaultCommand )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Name);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_HelpContextID )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ long ID);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_HelpContextID )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *ID);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_FontName )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR FontName);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontName )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *FontName);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontSize )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *FontSize);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_FontSize )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ long FontSize);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_VoiceCaption )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR VoiceCaption);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_VoiceCaption )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *VoiceCaption);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_GlobalVoiceCommandsEnabled )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Enable);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_GlobalVoiceCommandsEnabled )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Enable);
        
        END_INTERFACE
    } IAgentCtlCommandsExVtbl;

    interface IAgentCtlCommandsEx
    {
        CONST_VTBL struct IAgentCtlCommandsExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlCommandsEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlCommandsEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlCommandsEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlCommandsEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlCommandsEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlCommandsEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlCommandsEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlCommandsEx_get_Item(This,Name,Item)	\
    (This)->lpVtbl -> get_Item(This,Name,Item)

#define IAgentCtlCommandsEx_Command(This,Name,Item)	\
    (This)->lpVtbl -> Command(This,Name,Item)

#define IAgentCtlCommandsEx_get_Count(This,Count)	\
    (This)->lpVtbl -> get_Count(This,Count)

#define IAgentCtlCommandsEx_get_Caption(This,Caption)	\
    (This)->lpVtbl -> get_Caption(This,Caption)

#define IAgentCtlCommandsEx_put_Caption(This,Caption)	\
    (This)->lpVtbl -> put_Caption(This,Caption)

#define IAgentCtlCommandsEx_get_Voice(This,Voice)	\
    (This)->lpVtbl -> get_Voice(This,Voice)

#define IAgentCtlCommandsEx_put_Voice(This,Voice)	\
    (This)->lpVtbl -> put_Voice(This,Voice)

#define IAgentCtlCommandsEx_get_Visible(This,Visible)	\
    (This)->lpVtbl -> get_Visible(This,Visible)

#define IAgentCtlCommandsEx_put_Visible(This,Visible)	\
    (This)->lpVtbl -> put_Visible(This,Visible)

#define IAgentCtlCommandsEx_get_Enum(This,ppunkEnum)	\
    (This)->lpVtbl -> get_Enum(This,ppunkEnum)

#define IAgentCtlCommandsEx_Add(This,Name,Caption,Voice,Enabled,Visible,Command)	\
    (This)->lpVtbl -> Add(This,Name,Caption,Voice,Enabled,Visible,Command)

#define IAgentCtlCommandsEx_Insert(This,Name,RefName,Before,Caption,Voice,Enabled,Visible,Command)	\
    (This)->lpVtbl -> Insert(This,Name,RefName,Before,Caption,Voice,Enabled,Visible,Command)

#define IAgentCtlCommandsEx_Remove(This,Name)	\
    (This)->lpVtbl -> Remove(This,Name)

#define IAgentCtlCommandsEx_RemoveAll(This)	\
    (This)->lpVtbl -> RemoveAll(This)


#define IAgentCtlCommandsEx_put_DefaultCommand(This,Name)	\
    (This)->lpVtbl -> put_DefaultCommand(This,Name)

#define IAgentCtlCommandsEx_get_DefaultCommand(This,Name)	\
    (This)->lpVtbl -> get_DefaultCommand(This,Name)

#define IAgentCtlCommandsEx_put_HelpContextID(This,ID)	\
    (This)->lpVtbl -> put_HelpContextID(This,ID)

#define IAgentCtlCommandsEx_get_HelpContextID(This,ID)	\
    (This)->lpVtbl -> get_HelpContextID(This,ID)

#define IAgentCtlCommandsEx_put_FontName(This,FontName)	\
    (This)->lpVtbl -> put_FontName(This,FontName)

#define IAgentCtlCommandsEx_get_FontName(This,FontName)	\
    (This)->lpVtbl -> get_FontName(This,FontName)

#define IAgentCtlCommandsEx_get_FontSize(This,FontSize)	\
    (This)->lpVtbl -> get_FontSize(This,FontSize)

#define IAgentCtlCommandsEx_put_FontSize(This,FontSize)	\
    (This)->lpVtbl -> put_FontSize(This,FontSize)

#define IAgentCtlCommandsEx_put_VoiceCaption(This,VoiceCaption)	\
    (This)->lpVtbl -> put_VoiceCaption(This,VoiceCaption)

#define IAgentCtlCommandsEx_get_VoiceCaption(This,VoiceCaption)	\
    (This)->lpVtbl -> get_VoiceCaption(This,VoiceCaption)

#define IAgentCtlCommandsEx_put_GlobalVoiceCommandsEnabled(This,Enable)	\
    (This)->lpVtbl -> put_GlobalVoiceCommandsEnabled(This,Enable)

#define IAgentCtlCommandsEx_get_GlobalVoiceCommandsEnabled(This,Enable)	\
    (This)->lpVtbl -> get_GlobalVoiceCommandsEnabled(This,Enable)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsEx_put_DefaultCommand_Proxy( 
    IAgentCtlCommandsEx __RPC_FAR * This,
    /* [in] */ BSTR Name);


void __RPC_STUB IAgentCtlCommandsEx_put_DefaultCommand_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsEx_get_DefaultCommand_Proxy( 
    IAgentCtlCommandsEx __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Name);


void __RPC_STUB IAgentCtlCommandsEx_get_DefaultCommand_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsEx_put_HelpContextID_Proxy( 
    IAgentCtlCommandsEx __RPC_FAR * This,
    /* [in] */ long ID);


void __RPC_STUB IAgentCtlCommandsEx_put_HelpContextID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsEx_get_HelpContextID_Proxy( 
    IAgentCtlCommandsEx __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *ID);


void __RPC_STUB IAgentCtlCommandsEx_get_HelpContextID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsEx_put_FontName_Proxy( 
    IAgentCtlCommandsEx __RPC_FAR * This,
    /* [in] */ BSTR FontName);


void __RPC_STUB IAgentCtlCommandsEx_put_FontName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsEx_get_FontName_Proxy( 
    IAgentCtlCommandsEx __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *FontName);


void __RPC_STUB IAgentCtlCommandsEx_get_FontName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsEx_get_FontSize_Proxy( 
    IAgentCtlCommandsEx __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *FontSize);


void __RPC_STUB IAgentCtlCommandsEx_get_FontSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsEx_put_FontSize_Proxy( 
    IAgentCtlCommandsEx __RPC_FAR * This,
    /* [in] */ long FontSize);


void __RPC_STUB IAgentCtlCommandsEx_put_FontSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsEx_put_VoiceCaption_Proxy( 
    IAgentCtlCommandsEx __RPC_FAR * This,
    /* [in] */ BSTR VoiceCaption);


void __RPC_STUB IAgentCtlCommandsEx_put_VoiceCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsEx_get_VoiceCaption_Proxy( 
    IAgentCtlCommandsEx __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *VoiceCaption);


void __RPC_STUB IAgentCtlCommandsEx_get_VoiceCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsEx_put_GlobalVoiceCommandsEnabled_Proxy( 
    IAgentCtlCommandsEx __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL Enable);


void __RPC_STUB IAgentCtlCommandsEx_put_GlobalVoiceCommandsEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsEx_get_GlobalVoiceCommandsEnabled_Proxy( 
    IAgentCtlCommandsEx __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Enable);


void __RPC_STUB IAgentCtlCommandsEx_get_GlobalVoiceCommandsEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlCommandsEx_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlCharacter_INTERFACE_DEFINED__
#define __IAgentCtlCharacter_INTERFACE_DEFINED__

/* interface IAgentCtlCharacter */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentCtlCharacter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F5BE8BD9-7DE6-11D0-91FE-00C04FD701A5")
    IAgentCtlCharacter : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Balloon( 
            /* [retval][out] */ IAgentCtlBalloonEx __RPC_FAR *__RPC_FAR *ppidBalloon) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Commands( 
            /* [retval][out] */ IAgentCtlCommandsEx __RPC_FAR *__RPC_FAR *ppidCommands) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR __RPC_FAR *Name) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Description( 
            /* [retval][out] */ BSTR __RPC_FAR *Description) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Left( 
            short Left) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Left( 
            /* [retval][out] */ short __RPC_FAR *Left) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Top( 
            short Top) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Top( 
            /* [retval][out] */ short __RPC_FAR *Top) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Height( 
            short Height) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Height( 
            /* [retval][out] */ short __RPC_FAR *Height) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Width( 
            short Width) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Width( 
            /* [retval][out] */ short __RPC_FAR *Width) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Speed( 
            /* [retval][out] */ long __RPC_FAR *Speed) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Pitch( 
            /* [retval][out] */ long __RPC_FAR *Pitch) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_IdleOn( 
            VARIANT_BOOL On) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_IdleOn( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Activate( 
            /* [optional][in] */ VARIANT State,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Success) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Play( 
            /* [in] */ BSTR Animation,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Get( 
            /* [in] */ BSTR Type,
            /* [in] */ BSTR Name,
            /* [optional][in] */ VARIANT Queue,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Stop( 
            /* [optional][in] */ VARIANT Request) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Wait( 
            /* [in] */ IDispatch __RPC_FAR *WaitForRequest,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Interrupt( 
            /* [in] */ IDispatch __RPC_FAR *InterruptRequest,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Speak( 
            /* [optional][in] */ VARIANT Text,
            /* [optional][in] */ VARIANT Url,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GestureAt( 
            /* [in] */ short x,
            /* [in] */ short y,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE MoveTo( 
            /* [in] */ short x,
            /* [in] */ short y,
            /* [optional][in] */ VARIANT Speed,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Hide( 
            /* [optional][in] */ VARIANT Fast,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Show( 
            /* [optional][in] */ VARIANT Fast,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE StopAll( 
            /* [optional][in] */ VARIANT Types) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_MoveCause( 
            /* [retval][out] */ short __RPC_FAR *MoveCause) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_VisibilityCause( 
            /* [retval][out] */ short __RPC_FAR *VisibilityCause) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_HasOtherClients( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *HasOtherClients) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_SoundEffectsOn( 
            VARIANT_BOOL On) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_SoundEffectsOn( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR Name) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Description( 
            /* [in] */ BSTR Description) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtraData( 
            /* [retval][out] */ BSTR __RPC_FAR *ExtraData) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlCharacterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlCharacter __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlCharacter __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Balloon )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlBalloonEx __RPC_FAR *__RPC_FAR *ppidBalloon);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Commands )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlCommandsEx __RPC_FAR *__RPC_FAR *ppidCommands);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Name )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Name);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Description )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Description);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Visible )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Left )( 
            IAgentCtlCharacter __RPC_FAR * This,
            short Left);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Left )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Left);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Top )( 
            IAgentCtlCharacter __RPC_FAR * This,
            short Top);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Top )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Top);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Height )( 
            IAgentCtlCharacter __RPC_FAR * This,
            short Height);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Height )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Height);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Width )( 
            IAgentCtlCharacter __RPC_FAR * This,
            short Width);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Width )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Width);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Speed )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Speed);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Pitch )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Pitch);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_IdleOn )( 
            IAgentCtlCharacter __RPC_FAR * This,
            VARIANT_BOOL On);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_IdleOn )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Activate )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [optional][in] */ VARIANT State,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Success);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Play )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [in] */ BSTR Animation,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Get )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [in] */ BSTR Type,
            /* [in] */ BSTR Name,
            /* [optional][in] */ VARIANT Queue,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Stop )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [optional][in] */ VARIANT Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Wait )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [in] */ IDispatch __RPC_FAR *WaitForRequest,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Interrupt )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [in] */ IDispatch __RPC_FAR *InterruptRequest,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Speak )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [optional][in] */ VARIANT Text,
            /* [optional][in] */ VARIANT Url,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GestureAt )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [in] */ short x,
            /* [in] */ short y,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *MoveTo )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [in] */ short x,
            /* [in] */ short y,
            /* [optional][in] */ VARIANT Speed,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Hide )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [optional][in] */ VARIANT Fast,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Show )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [optional][in] */ VARIANT Fast,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *StopAll )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [optional][in] */ VARIANT Types);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_MoveCause )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *MoveCause);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_VisibilityCause )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *VisibilityCause);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_HasOtherClients )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *HasOtherClients);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_SoundEffectsOn )( 
            IAgentCtlCharacter __RPC_FAR * This,
            VARIANT_BOOL On);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SoundEffectsOn )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Name )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [in] */ BSTR Name);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Description )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [in] */ BSTR Description);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ExtraData )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *ExtraData);
        
        END_INTERFACE
    } IAgentCtlCharacterVtbl;

    interface IAgentCtlCharacter
    {
        CONST_VTBL struct IAgentCtlCharacterVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlCharacter_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlCharacter_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlCharacter_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlCharacter_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlCharacter_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlCharacter_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlCharacter_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlCharacter_get_Balloon(This,ppidBalloon)	\
    (This)->lpVtbl -> get_Balloon(This,ppidBalloon)

#define IAgentCtlCharacter_get_Commands(This,ppidCommands)	\
    (This)->lpVtbl -> get_Commands(This,ppidCommands)

#define IAgentCtlCharacter_get_Name(This,Name)	\
    (This)->lpVtbl -> get_Name(This,Name)

#define IAgentCtlCharacter_get_Description(This,Description)	\
    (This)->lpVtbl -> get_Description(This,Description)

#define IAgentCtlCharacter_get_Visible(This,Visible)	\
    (This)->lpVtbl -> get_Visible(This,Visible)

#define IAgentCtlCharacter_put_Left(This,Left)	\
    (This)->lpVtbl -> put_Left(This,Left)

#define IAgentCtlCharacter_get_Left(This,Left)	\
    (This)->lpVtbl -> get_Left(This,Left)

#define IAgentCtlCharacter_put_Top(This,Top)	\
    (This)->lpVtbl -> put_Top(This,Top)

#define IAgentCtlCharacter_get_Top(This,Top)	\
    (This)->lpVtbl -> get_Top(This,Top)

#define IAgentCtlCharacter_put_Height(This,Height)	\
    (This)->lpVtbl -> put_Height(This,Height)

#define IAgentCtlCharacter_get_Height(This,Height)	\
    (This)->lpVtbl -> get_Height(This,Height)

#define IAgentCtlCharacter_put_Width(This,Width)	\
    (This)->lpVtbl -> put_Width(This,Width)

#define IAgentCtlCharacter_get_Width(This,Width)	\
    (This)->lpVtbl -> get_Width(This,Width)

#define IAgentCtlCharacter_get_Speed(This,Speed)	\
    (This)->lpVtbl -> get_Speed(This,Speed)

#define IAgentCtlCharacter_get_Pitch(This,Pitch)	\
    (This)->lpVtbl -> get_Pitch(This,Pitch)

#define IAgentCtlCharacter_put_IdleOn(This,On)	\
    (This)->lpVtbl -> put_IdleOn(This,On)

#define IAgentCtlCharacter_get_IdleOn(This,On)	\
    (This)->lpVtbl -> get_IdleOn(This,On)

#define IAgentCtlCharacter_Activate(This,State,Success)	\
    (This)->lpVtbl -> Activate(This,State,Success)

#define IAgentCtlCharacter_Play(This,Animation,Request)	\
    (This)->lpVtbl -> Play(This,Animation,Request)

#define IAgentCtlCharacter_Get(This,Type,Name,Queue,Request)	\
    (This)->lpVtbl -> Get(This,Type,Name,Queue,Request)

#define IAgentCtlCharacter_Stop(This,Request)	\
    (This)->lpVtbl -> Stop(This,Request)

#define IAgentCtlCharacter_Wait(This,WaitForRequest,Request)	\
    (This)->lpVtbl -> Wait(This,WaitForRequest,Request)

#define IAgentCtlCharacter_Interrupt(This,InterruptRequest,Request)	\
    (This)->lpVtbl -> Interrupt(This,InterruptRequest,Request)

#define IAgentCtlCharacter_Speak(This,Text,Url,Request)	\
    (This)->lpVtbl -> Speak(This,Text,Url,Request)

#define IAgentCtlCharacter_GestureAt(This,x,y,Request)	\
    (This)->lpVtbl -> GestureAt(This,x,y,Request)

#define IAgentCtlCharacter_MoveTo(This,x,y,Speed,Request)	\
    (This)->lpVtbl -> MoveTo(This,x,y,Speed,Request)

#define IAgentCtlCharacter_Hide(This,Fast,Request)	\
    (This)->lpVtbl -> Hide(This,Fast,Request)

#define IAgentCtlCharacter_Show(This,Fast,Request)	\
    (This)->lpVtbl -> Show(This,Fast,Request)

#define IAgentCtlCharacter_StopAll(This,Types)	\
    (This)->lpVtbl -> StopAll(This,Types)

#define IAgentCtlCharacter_get_MoveCause(This,MoveCause)	\
    (This)->lpVtbl -> get_MoveCause(This,MoveCause)

#define IAgentCtlCharacter_get_VisibilityCause(This,VisibilityCause)	\
    (This)->lpVtbl -> get_VisibilityCause(This,VisibilityCause)

#define IAgentCtlCharacter_get_HasOtherClients(This,HasOtherClients)	\
    (This)->lpVtbl -> get_HasOtherClients(This,HasOtherClients)

#define IAgentCtlCharacter_put_SoundEffectsOn(This,On)	\
    (This)->lpVtbl -> put_SoundEffectsOn(This,On)

#define IAgentCtlCharacter_get_SoundEffectsOn(This,On)	\
    (This)->lpVtbl -> get_SoundEffectsOn(This,On)

#define IAgentCtlCharacter_put_Name(This,Name)	\
    (This)->lpVtbl -> put_Name(This,Name)

#define IAgentCtlCharacter_put_Description(This,Description)	\
    (This)->lpVtbl -> put_Description(This,Description)

#define IAgentCtlCharacter_get_ExtraData(This,ExtraData)	\
    (This)->lpVtbl -> get_ExtraData(This,ExtraData)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_Balloon_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ IAgentCtlBalloonEx __RPC_FAR *__RPC_FAR *ppidBalloon);


void __RPC_STUB IAgentCtlCharacter_get_Balloon_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_Commands_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ IAgentCtlCommandsEx __RPC_FAR *__RPC_FAR *ppidCommands);


void __RPC_STUB IAgentCtlCharacter_get_Commands_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_Name_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Name);


void __RPC_STUB IAgentCtlCharacter_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_Description_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Description);


void __RPC_STUB IAgentCtlCharacter_get_Description_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_Visible_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);


void __RPC_STUB IAgentCtlCharacter_get_Visible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_put_Left_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    short Left);


void __RPC_STUB IAgentCtlCharacter_put_Left_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_Left_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Left);


void __RPC_STUB IAgentCtlCharacter_get_Left_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_put_Top_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    short Top);


void __RPC_STUB IAgentCtlCharacter_put_Top_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_Top_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Top);


void __RPC_STUB IAgentCtlCharacter_get_Top_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_put_Height_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    short Height);


void __RPC_STUB IAgentCtlCharacter_put_Height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_Height_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Height);


void __RPC_STUB IAgentCtlCharacter_get_Height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_put_Width_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    short Width);


void __RPC_STUB IAgentCtlCharacter_put_Width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_Width_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Width);


void __RPC_STUB IAgentCtlCharacter_get_Width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_Speed_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *Speed);


void __RPC_STUB IAgentCtlCharacter_get_Speed_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_Pitch_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *Pitch);


void __RPC_STUB IAgentCtlCharacter_get_Pitch_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_put_IdleOn_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    VARIANT_BOOL On);


void __RPC_STUB IAgentCtlCharacter_put_IdleOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_IdleOn_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On);


void __RPC_STUB IAgentCtlCharacter_get_IdleOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_Activate_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [optional][in] */ VARIANT State,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Success);


void __RPC_STUB IAgentCtlCharacter_Activate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_Play_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [in] */ BSTR Animation,
    /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);


void __RPC_STUB IAgentCtlCharacter_Play_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_Get_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [in] */ BSTR Type,
    /* [in] */ BSTR Name,
    /* [optional][in] */ VARIANT Queue,
    /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);


void __RPC_STUB IAgentCtlCharacter_Get_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_Stop_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [optional][in] */ VARIANT Request);


void __RPC_STUB IAgentCtlCharacter_Stop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_Wait_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [in] */ IDispatch __RPC_FAR *WaitForRequest,
    /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);


void __RPC_STUB IAgentCtlCharacter_Wait_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_Interrupt_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [in] */ IDispatch __RPC_FAR *InterruptRequest,
    /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);


void __RPC_STUB IAgentCtlCharacter_Interrupt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_Speak_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [optional][in] */ VARIANT Text,
    /* [optional][in] */ VARIANT Url,
    /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);


void __RPC_STUB IAgentCtlCharacter_Speak_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_GestureAt_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [in] */ short x,
    /* [in] */ short y,
    /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);


void __RPC_STUB IAgentCtlCharacter_GestureAt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_MoveTo_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [in] */ short x,
    /* [in] */ short y,
    /* [optional][in] */ VARIANT Speed,
    /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);


void __RPC_STUB IAgentCtlCharacter_MoveTo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_Hide_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [optional][in] */ VARIANT Fast,
    /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);


void __RPC_STUB IAgentCtlCharacter_Hide_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_Show_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [optional][in] */ VARIANT Fast,
    /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);


void __RPC_STUB IAgentCtlCharacter_Show_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_StopAll_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [optional][in] */ VARIANT Types);


void __RPC_STUB IAgentCtlCharacter_StopAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_MoveCause_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *MoveCause);


void __RPC_STUB IAgentCtlCharacter_get_MoveCause_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_VisibilityCause_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *VisibilityCause);


void __RPC_STUB IAgentCtlCharacter_get_VisibilityCause_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_HasOtherClients_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *HasOtherClients);


void __RPC_STUB IAgentCtlCharacter_get_HasOtherClients_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_put_SoundEffectsOn_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    VARIANT_BOOL On);


void __RPC_STUB IAgentCtlCharacter_put_SoundEffectsOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_SoundEffectsOn_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On);


void __RPC_STUB IAgentCtlCharacter_get_SoundEffectsOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_put_Name_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [in] */ BSTR Name);


void __RPC_STUB IAgentCtlCharacter_put_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_put_Description_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [in] */ BSTR Description);


void __RPC_STUB IAgentCtlCharacter_put_Description_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_ExtraData_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *ExtraData);


void __RPC_STUB IAgentCtlCharacter_get_ExtraData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlCharacter_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlAnimationNames_INTERFACE_DEFINED__
#define __IAgentCtlAnimationNames_INTERFACE_DEFINED__

/* interface IAgentCtlAnimationNames */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentCtlAnimationNames;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8B77181C-D3EF-11d1-8500-00C04FA34A14")
    IAgentCtlAnimationNames : public IDispatch
    {
    public:
        virtual /* [restricted][propget][id] */ HRESULT STDMETHODCALLTYPE get_Enum( 
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkEnum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlAnimationNamesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlAnimationNames __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlAnimationNames __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlAnimationNames __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlAnimationNames __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlAnimationNames __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlAnimationNames __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlAnimationNames __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [restricted][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Enum )( 
            IAgentCtlAnimationNames __RPC_FAR * This,
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkEnum);
        
        END_INTERFACE
    } IAgentCtlAnimationNamesVtbl;

    interface IAgentCtlAnimationNames
    {
        CONST_VTBL struct IAgentCtlAnimationNamesVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlAnimationNames_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlAnimationNames_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlAnimationNames_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlAnimationNames_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlAnimationNames_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlAnimationNames_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlAnimationNames_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlAnimationNames_get_Enum(This,ppunkEnum)	\
    (This)->lpVtbl -> get_Enum(This,ppunkEnum)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [restricted][propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlAnimationNames_get_Enum_Proxy( 
    IAgentCtlAnimationNames __RPC_FAR * This,
    /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkEnum);


void __RPC_STUB IAgentCtlAnimationNames_get_Enum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlAnimationNames_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlCharacterEx_INTERFACE_DEFINED__
#define __IAgentCtlCharacterEx_INTERFACE_DEFINED__

/* interface IAgentCtlCharacterEx */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentCtlCharacterEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DE8EF600-2F82-11d1-ACAC-00C04FD97575")
    IAgentCtlCharacterEx : public IAgentCtlCharacter
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ShowPopupMenu( 
            /* [in] */ short x,
            /* [in] */ short y,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Showed) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_AutoPopupMenu( 
            /* [in] */ VARIANT_BOOL On) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoPopupMenu( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_HelpModeOn( 
            /* [in] */ VARIANT_BOOL On) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_HelpModeOn( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_HelpContextID( 
            /* [in] */ long ID) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_HelpContextID( 
            /* [retval][out] */ long __RPC_FAR *ID) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Active( 
            /* [retval][out] */ short __RPC_FAR *State) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Listen( 
            /* [in] */ VARIANT_BOOL Listen,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *StartedListening) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_LanguageID( 
            /* [in] */ long LanguageID) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_LanguageID( 
            /* [retval][out] */ long __RPC_FAR *LanguageID) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_SRModeID( 
            /* [retval][out] */ BSTR __RPC_FAR *EngineModeId) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_SRModeID( 
            /* [in] */ BSTR EngineModeId) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_TTSModeID( 
            /* [retval][out] */ BSTR __RPC_FAR *EngineModeId) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_TTSModeID( 
            /* [in] */ BSTR EngineModeId) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_HelpFile( 
            /* [retval][out] */ BSTR __RPC_FAR *File) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_HelpFile( 
            /* [in] */ BSTR File) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_GUID( 
            /* [retval][out] */ BSTR __RPC_FAR *GUID) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_OriginalHeight( 
            /* [retval][out] */ short __RPC_FAR *Height) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_OriginalWidth( 
            /* [retval][out] */ short __RPC_FAR *Width) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Think( 
            /* [in] */ BSTR Text,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Version( 
            /* [retval][out] */ BSTR __RPC_FAR *Version) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_AnimationNames( 
            /* [retval][out] */ IAgentCtlAnimationNames __RPC_FAR *__RPC_FAR *Names) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_SRStatus( 
            /* [retval][out] */ long __RPC_FAR *Status) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlCharacterExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlCharacterEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlCharacterEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Balloon )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlBalloonEx __RPC_FAR *__RPC_FAR *ppidBalloon);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Commands )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlCommandsEx __RPC_FAR *__RPC_FAR *ppidCommands);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Name )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Name);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Description )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Description);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Visible )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Left )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            short Left);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Left )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Left);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Top )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            short Top);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Top )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Top);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Height )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            short Height);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Height )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Height);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Width )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            short Width);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Width )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Width);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Speed )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Speed);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Pitch )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Pitch);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_IdleOn )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            VARIANT_BOOL On);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_IdleOn )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Activate )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [optional][in] */ VARIANT State,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Success);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Play )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR Animation,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Get )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR Type,
            /* [in] */ BSTR Name,
            /* [optional][in] */ VARIANT Queue,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Stop )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [optional][in] */ VARIANT Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Wait )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ IDispatch __RPC_FAR *WaitForRequest,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Interrupt )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ IDispatch __RPC_FAR *InterruptRequest,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Speak )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [optional][in] */ VARIANT Text,
            /* [optional][in] */ VARIANT Url,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GestureAt )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ short x,
            /* [in] */ short y,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *MoveTo )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ short x,
            /* [in] */ short y,
            /* [optional][in] */ VARIANT Speed,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Hide )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [optional][in] */ VARIANT Fast,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Show )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [optional][in] */ VARIANT Fast,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *StopAll )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [optional][in] */ VARIANT Types);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_MoveCause )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *MoveCause);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_VisibilityCause )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *VisibilityCause);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_HasOtherClients )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *HasOtherClients);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_SoundEffectsOn )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            VARIANT_BOOL On);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SoundEffectsOn )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Name )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR Name);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Description )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR Description);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ExtraData )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *ExtraData);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ShowPopupMenu )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ short x,
            /* [in] */ short y,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Showed);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_AutoPopupMenu )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL On);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_AutoPopupMenu )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_HelpModeOn )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL On);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_HelpModeOn )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_HelpContextID )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ long ID);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_HelpContextID )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *ID);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Active )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *State);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Listen )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Listen,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *StartedListening);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_LanguageID )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ long LanguageID);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_LanguageID )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *LanguageID);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SRModeID )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *EngineModeId);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_SRModeID )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR EngineModeId);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_TTSModeID )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *EngineModeId);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_TTSModeID )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR EngineModeId);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_HelpFile )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *File);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_HelpFile )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR File);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_GUID )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *GUID);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_OriginalHeight )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Height);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_OriginalWidth )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Width);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Think )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR Text,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Version )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Version);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_AnimationNames )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlAnimationNames __RPC_FAR *__RPC_FAR *Names);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SRStatus )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Status);
        
        END_INTERFACE
    } IAgentCtlCharacterExVtbl;

    interface IAgentCtlCharacterEx
    {
        CONST_VTBL struct IAgentCtlCharacterExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlCharacterEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlCharacterEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlCharacterEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlCharacterEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlCharacterEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlCharacterEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlCharacterEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlCharacterEx_get_Balloon(This,ppidBalloon)	\
    (This)->lpVtbl -> get_Balloon(This,ppidBalloon)

#define IAgentCtlCharacterEx_get_Commands(This,ppidCommands)	\
    (This)->lpVtbl -> get_Commands(This,ppidCommands)

#define IAgentCtlCharacterEx_get_Name(This,Name)	\
    (This)->lpVtbl -> get_Name(This,Name)

#define IAgentCtlCharacterEx_get_Description(This,Description)	\
    (This)->lpVtbl -> get_Description(This,Description)

#define IAgentCtlCharacterEx_get_Visible(This,Visible)	\
    (This)->lpVtbl -> get_Visible(This,Visible)

#define IAgentCtlCharacterEx_put_Left(This,Left)	\
    (This)->lpVtbl -> put_Left(This,Left)

#define IAgentCtlCharacterEx_get_Left(This,Left)	\
    (This)->lpVtbl -> get_Left(This,Left)

#define IAgentCtlCharacterEx_put_Top(This,Top)	\
    (This)->lpVtbl -> put_Top(This,Top)

#define IAgentCtlCharacterEx_get_Top(This,Top)	\
    (This)->lpVtbl -> get_Top(This,Top)

#define IAgentCtlCharacterEx_put_Height(This,Height)	\
    (This)->lpVtbl -> put_Height(This,Height)

#define IAgentCtlCharacterEx_get_Height(This,Height)	\
    (This)->lpVtbl -> get_Height(This,Height)

#define IAgentCtlCharacterEx_put_Width(This,Width)	\
    (This)->lpVtbl -> put_Width(This,Width)

#define IAgentCtlCharacterEx_get_Width(This,Width)	\
    (This)->lpVtbl -> get_Width(This,Width)

#define IAgentCtlCharacterEx_get_Speed(This,Speed)	\
    (This)->lpVtbl -> get_Speed(This,Speed)

#define IAgentCtlCharacterEx_get_Pitch(This,Pitch)	\
    (This)->lpVtbl -> get_Pitch(This,Pitch)

#define IAgentCtlCharacterEx_put_IdleOn(This,On)	\
    (This)->lpVtbl -> put_IdleOn(This,On)

#define IAgentCtlCharacterEx_get_IdleOn(This,On)	\
    (This)->lpVtbl -> get_IdleOn(This,On)

#define IAgentCtlCharacterEx_Activate(This,State,Success)	\
    (This)->lpVtbl -> Activate(This,State,Success)

#define IAgentCtlCharacterEx_Play(This,Animation,Request)	\
    (This)->lpVtbl -> Play(This,Animation,Request)

#define IAgentCtlCharacterEx_Get(This,Type,Name,Queue,Request)	\
    (This)->lpVtbl -> Get(This,Type,Name,Queue,Request)

#define IAgentCtlCharacterEx_Stop(This,Request)	\
    (This)->lpVtbl -> Stop(This,Request)

#define IAgentCtlCharacterEx_Wait(This,WaitForRequest,Request)	\
    (This)->lpVtbl -> Wait(This,WaitForRequest,Request)

#define IAgentCtlCharacterEx_Interrupt(This,InterruptRequest,Request)	\
    (This)->lpVtbl -> Interrupt(This,InterruptRequest,Request)

#define IAgentCtlCharacterEx_Speak(This,Text,Url,Request)	\
    (This)->lpVtbl -> Speak(This,Text,Url,Request)

#define IAgentCtlCharacterEx_GestureAt(This,x,y,Request)	\
    (This)->lpVtbl -> GestureAt(This,x,y,Request)

#define IAgentCtlCharacterEx_MoveTo(This,x,y,Speed,Request)	\
    (This)->lpVtbl -> MoveTo(This,x,y,Speed,Request)

#define IAgentCtlCharacterEx_Hide(This,Fast,Request)	\
    (This)->lpVtbl -> Hide(This,Fast,Request)

#define IAgentCtlCharacterEx_Show(This,Fast,Request)	\
    (This)->lpVtbl -> Show(This,Fast,Request)

#define IAgentCtlCharacterEx_StopAll(This,Types)	\
    (This)->lpVtbl -> StopAll(This,Types)

#define IAgentCtlCharacterEx_get_MoveCause(This,MoveCause)	\
    (This)->lpVtbl -> get_MoveCause(This,MoveCause)

#define IAgentCtlCharacterEx_get_VisibilityCause(This,VisibilityCause)	\
    (This)->lpVtbl -> get_VisibilityCause(This,VisibilityCause)

#define IAgentCtlCharacterEx_get_HasOtherClients(This,HasOtherClients)	\
    (This)->lpVtbl -> get_HasOtherClients(This,HasOtherClients)

#define IAgentCtlCharacterEx_put_SoundEffectsOn(This,On)	\
    (This)->lpVtbl -> put_SoundEffectsOn(This,On)

#define IAgentCtlCharacterEx_get_SoundEffectsOn(This,On)	\
    (This)->lpVtbl -> get_SoundEffectsOn(This,On)

#define IAgentCtlCharacterEx_put_Name(This,Name)	\
    (This)->lpVtbl -> put_Name(This,Name)

#define IAgentCtlCharacterEx_put_Description(This,Description)	\
    (This)->lpVtbl -> put_Description(This,Description)

#define IAgentCtlCharacterEx_get_ExtraData(This,ExtraData)	\
    (This)->lpVtbl -> get_ExtraData(This,ExtraData)


#define IAgentCtlCharacterEx_ShowPopupMenu(This,x,y,Showed)	\
    (This)->lpVtbl -> ShowPopupMenu(This,x,y,Showed)

#define IAgentCtlCharacterEx_put_AutoPopupMenu(This,On)	\
    (This)->lpVtbl -> put_AutoPopupMenu(This,On)

#define IAgentCtlCharacterEx_get_AutoPopupMenu(This,On)	\
    (This)->lpVtbl -> get_AutoPopupMenu(This,On)

#define IAgentCtlCharacterEx_put_HelpModeOn(This,On)	\
    (This)->lpVtbl -> put_HelpModeOn(This,On)

#define IAgentCtlCharacterEx_get_HelpModeOn(This,On)	\
    (This)->lpVtbl -> get_HelpModeOn(This,On)

#define IAgentCtlCharacterEx_put_HelpContextID(This,ID)	\
    (This)->lpVtbl -> put_HelpContextID(This,ID)

#define IAgentCtlCharacterEx_get_HelpContextID(This,ID)	\
    (This)->lpVtbl -> get_HelpContextID(This,ID)

#define IAgentCtlCharacterEx_get_Active(This,State)	\
    (This)->lpVtbl -> get_Active(This,State)

#define IAgentCtlCharacterEx_Listen(This,Listen,StartedListening)	\
    (This)->lpVtbl -> Listen(This,Listen,StartedListening)

#define IAgentCtlCharacterEx_put_LanguageID(This,LanguageID)	\
    (This)->lpVtbl -> put_LanguageID(This,LanguageID)

#define IAgentCtlCharacterEx_get_LanguageID(This,LanguageID)	\
    (This)->lpVtbl -> get_LanguageID(This,LanguageID)

#define IAgentCtlCharacterEx_get_SRModeID(This,EngineModeId)	\
    (This)->lpVtbl -> get_SRModeID(This,EngineModeId)

#define IAgentCtlCharacterEx_put_SRModeID(This,EngineModeId)	\
    (This)->lpVtbl -> put_SRModeID(This,EngineModeId)

#define IAgentCtlCharacterEx_get_TTSModeID(This,EngineModeId)	\
    (This)->lpVtbl -> get_TTSModeID(This,EngineModeId)

#define IAgentCtlCharacterEx_put_TTSModeID(This,EngineModeId)	\
    (This)->lpVtbl -> put_TTSModeID(This,EngineModeId)

#define IAgentCtlCharacterEx_get_HelpFile(This,File)	\
    (This)->lpVtbl -> get_HelpFile(This,File)

#define IAgentCtlCharacterEx_put_HelpFile(This,File)	\
    (This)->lpVtbl -> put_HelpFile(This,File)

#define IAgentCtlCharacterEx_get_GUID(This,GUID)	\
    (This)->lpVtbl -> get_GUID(This,GUID)

#define IAgentCtlCharacterEx_get_OriginalHeight(This,Height)	\
    (This)->lpVtbl -> get_OriginalHeight(This,Height)

#define IAgentCtlCharacterEx_get_OriginalWidth(This,Width)	\
    (This)->lpVtbl -> get_OriginalWidth(This,Width)

#define IAgentCtlCharacterEx_Think(This,Text,Request)	\
    (This)->lpVtbl -> Think(This,Text,Request)

#define IAgentCtlCharacterEx_get_Version(This,Version)	\
    (This)->lpVtbl -> get_Version(This,Version)

#define IAgentCtlCharacterEx_get_AnimationNames(This,Names)	\
    (This)->lpVtbl -> get_AnimationNames(This,Names)

#define IAgentCtlCharacterEx_get_SRStatus(This,Status)	\
    (This)->lpVtbl -> get_SRStatus(This,Status)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_ShowPopupMenu_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [in] */ short x,
    /* [in] */ short y,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Showed);


void __RPC_STUB IAgentCtlCharacterEx_ShowPopupMenu_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_put_AutoPopupMenu_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL On);


void __RPC_STUB IAgentCtlCharacterEx_put_AutoPopupMenu_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_AutoPopupMenu_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On);


void __RPC_STUB IAgentCtlCharacterEx_get_AutoPopupMenu_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_put_HelpModeOn_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL On);


void __RPC_STUB IAgentCtlCharacterEx_put_HelpModeOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_HelpModeOn_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On);


void __RPC_STUB IAgentCtlCharacterEx_get_HelpModeOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_put_HelpContextID_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [in] */ long ID);


void __RPC_STUB IAgentCtlCharacterEx_put_HelpContextID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_HelpContextID_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *ID);


void __RPC_STUB IAgentCtlCharacterEx_get_HelpContextID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_Active_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *State);


void __RPC_STUB IAgentCtlCharacterEx_get_Active_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_Listen_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL Listen,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *StartedListening);


void __RPC_STUB IAgentCtlCharacterEx_Listen_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_put_LanguageID_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [in] */ long LanguageID);


void __RPC_STUB IAgentCtlCharacterEx_put_LanguageID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_LanguageID_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *LanguageID);


void __RPC_STUB IAgentCtlCharacterEx_get_LanguageID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_SRModeID_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *EngineModeId);


void __RPC_STUB IAgentCtlCharacterEx_get_SRModeID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_put_SRModeID_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [in] */ BSTR EngineModeId);


void __RPC_STUB IAgentCtlCharacterEx_put_SRModeID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_TTSModeID_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *EngineModeId);


void __RPC_STUB IAgentCtlCharacterEx_get_TTSModeID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_put_TTSModeID_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [in] */ BSTR EngineModeId);


void __RPC_STUB IAgentCtlCharacterEx_put_TTSModeID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_HelpFile_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *File);


void __RPC_STUB IAgentCtlCharacterEx_get_HelpFile_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_put_HelpFile_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [in] */ BSTR File);


void __RPC_STUB IAgentCtlCharacterEx_put_HelpFile_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_GUID_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *GUID);


void __RPC_STUB IAgentCtlCharacterEx_get_GUID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_OriginalHeight_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Height);


void __RPC_STUB IAgentCtlCharacterEx_get_OriginalHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_OriginalWidth_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Width);


void __RPC_STUB IAgentCtlCharacterEx_get_OriginalWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_Think_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [in] */ BSTR Text,
    /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);


void __RPC_STUB IAgentCtlCharacterEx_Think_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_Version_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Version);


void __RPC_STUB IAgentCtlCharacterEx_get_Version_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_AnimationNames_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ IAgentCtlAnimationNames __RPC_FAR *__RPC_FAR *Names);


void __RPC_STUB IAgentCtlCharacterEx_get_AnimationNames_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_SRStatus_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *Status);


void __RPC_STUB IAgentCtlCharacterEx_get_SRStatus_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlCharacterEx_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlCharacters_INTERFACE_DEFINED__
#define __IAgentCtlCharacters_INTERFACE_DEFINED__

/* interface IAgentCtlCharacters */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentCtlCharacters;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F5BE8BE8-7DE6-11D0-91FE-00C04FD701A5")
    IAgentCtlCharacters : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ BSTR CharacterID,
            /* [retval][out] */ IAgentCtlCharacterEx __RPC_FAR *__RPC_FAR *ppidItem) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Character( 
            /* [in] */ BSTR CharacterID,
            /* [retval][out] */ IAgentCtlCharacterEx __RPC_FAR *__RPC_FAR *ppidItem) = 0;
        
        virtual /* [restricted][propget][id] */ HRESULT STDMETHODCALLTYPE get_Enum( 
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkEnum) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Unload( 
            /* [in] */ BSTR CharacterID) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Load( 
            /* [in] */ BSTR CharacterID,
            /* [optional][in] */ VARIANT LoadKey,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *ppidRequest) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlCharactersVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlCharacters __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlCharacters __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlCharacters __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlCharacters __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlCharacters __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlCharacters __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlCharacters __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Item )( 
            IAgentCtlCharacters __RPC_FAR * This,
            /* [in] */ BSTR CharacterID,
            /* [retval][out] */ IAgentCtlCharacterEx __RPC_FAR *__RPC_FAR *ppidItem);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Character )( 
            IAgentCtlCharacters __RPC_FAR * This,
            /* [in] */ BSTR CharacterID,
            /* [retval][out] */ IAgentCtlCharacterEx __RPC_FAR *__RPC_FAR *ppidItem);
        
        /* [restricted][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Enum )( 
            IAgentCtlCharacters __RPC_FAR * This,
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkEnum);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Unload )( 
            IAgentCtlCharacters __RPC_FAR * This,
            /* [in] */ BSTR CharacterID);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Load )( 
            IAgentCtlCharacters __RPC_FAR * This,
            /* [in] */ BSTR CharacterID,
            /* [optional][in] */ VARIANT LoadKey,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *ppidRequest);
        
        END_INTERFACE
    } IAgentCtlCharactersVtbl;

    interface IAgentCtlCharacters
    {
        CONST_VTBL struct IAgentCtlCharactersVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlCharacters_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlCharacters_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlCharacters_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlCharacters_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlCharacters_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlCharacters_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlCharacters_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlCharacters_get_Item(This,CharacterID,ppidItem)	\
    (This)->lpVtbl -> get_Item(This,CharacterID,ppidItem)

#define IAgentCtlCharacters_Character(This,CharacterID,ppidItem)	\
    (This)->lpVtbl -> Character(This,CharacterID,ppidItem)

#define IAgentCtlCharacters_get_Enum(This,ppunkEnum)	\
    (This)->lpVtbl -> get_Enum(This,ppunkEnum)

#define IAgentCtlCharacters_Unload(This,CharacterID)	\
    (This)->lpVtbl -> Unload(This,CharacterID)

#define IAgentCtlCharacters_Load(This,CharacterID,LoadKey,ppidRequest)	\
    (This)->lpVtbl -> Load(This,CharacterID,LoadKey,ppidRequest)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacters_get_Item_Proxy( 
    IAgentCtlCharacters __RPC_FAR * This,
    /* [in] */ BSTR CharacterID,
    /* [retval][out] */ IAgentCtlCharacterEx __RPC_FAR *__RPC_FAR *ppidItem);


void __RPC_STUB IAgentCtlCharacters_get_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacters_Character_Proxy( 
    IAgentCtlCharacters __RPC_FAR * This,
    /* [in] */ BSTR CharacterID,
    /* [retval][out] */ IAgentCtlCharacterEx __RPC_FAR *__RPC_FAR *ppidItem);


void __RPC_STUB IAgentCtlCharacters_Character_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [restricted][propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacters_get_Enum_Proxy( 
    IAgentCtlCharacters __RPC_FAR * This,
    /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkEnum);


void __RPC_STUB IAgentCtlCharacters_get_Enum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacters_Unload_Proxy( 
    IAgentCtlCharacters __RPC_FAR * This,
    /* [in] */ BSTR CharacterID);


void __RPC_STUB IAgentCtlCharacters_Unload_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacters_Load_Proxy( 
    IAgentCtlCharacters __RPC_FAR * This,
    /* [in] */ BSTR CharacterID,
    /* [optional][in] */ VARIANT LoadKey,
    /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *ppidRequest);


void __RPC_STUB IAgentCtlCharacters_Load_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlCharacters_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlAudioObject_INTERFACE_DEFINED__
#define __IAgentCtlAudioObject_INTERFACE_DEFINED__

/* interface IAgentCtlAudioObject */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentCtlAudioObject;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F5BE8BDB-7DE6-11D0-91FE-00C04FD701A5")
    IAgentCtlAudioObject : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *AudioEnabled) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_SoundEffects( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *SoundEffects) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlAudioObjectVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlAudioObject __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlAudioObject __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlAudioObject __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlAudioObject __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlAudioObject __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlAudioObject __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlAudioObject __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Enabled )( 
            IAgentCtlAudioObject __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *AudioEnabled);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SoundEffects )( 
            IAgentCtlAudioObject __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *SoundEffects);
        
        END_INTERFACE
    } IAgentCtlAudioObjectVtbl;

    interface IAgentCtlAudioObject
    {
        CONST_VTBL struct IAgentCtlAudioObjectVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlAudioObject_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlAudioObject_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlAudioObject_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlAudioObject_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlAudioObject_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlAudioObject_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlAudioObject_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlAudioObject_get_Enabled(This,AudioEnabled)	\
    (This)->lpVtbl -> get_Enabled(This,AudioEnabled)

#define IAgentCtlAudioObject_get_SoundEffects(This,SoundEffects)	\
    (This)->lpVtbl -> get_SoundEffects(This,SoundEffects)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlAudioObject_get_Enabled_Proxy( 
    IAgentCtlAudioObject __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *AudioEnabled);


void __RPC_STUB IAgentCtlAudioObject_get_Enabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlAudioObject_get_SoundEffects_Proxy( 
    IAgentCtlAudioObject __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *SoundEffects);


void __RPC_STUB IAgentCtlAudioObject_get_SoundEffects_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlAudioObject_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlAudioObjectEx_INTERFACE_DEFINED__
#define __IAgentCtlAudioObjectEx_INTERFACE_DEFINED__

/* interface IAgentCtlAudioObjectEx */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentCtlAudioObjectEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F5BE8BF0-7DE6-11D0-91FE-00C04FD701A5")
    IAgentCtlAudioObjectEx : public IAgentCtlAudioObject
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Status( 
            /* [retval][out] */ short __RPC_FAR *Available) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlAudioObjectExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlAudioObjectEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlAudioObjectEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlAudioObjectEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlAudioObjectEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlAudioObjectEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlAudioObjectEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlAudioObjectEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Enabled )( 
            IAgentCtlAudioObjectEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *AudioEnabled);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SoundEffects )( 
            IAgentCtlAudioObjectEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *SoundEffects);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Status )( 
            IAgentCtlAudioObjectEx __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Available);
        
        END_INTERFACE
    } IAgentCtlAudioObjectExVtbl;

    interface IAgentCtlAudioObjectEx
    {
        CONST_VTBL struct IAgentCtlAudioObjectExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlAudioObjectEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlAudioObjectEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlAudioObjectEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlAudioObjectEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlAudioObjectEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlAudioObjectEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlAudioObjectEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlAudioObjectEx_get_Enabled(This,AudioEnabled)	\
    (This)->lpVtbl -> get_Enabled(This,AudioEnabled)

#define IAgentCtlAudioObjectEx_get_SoundEffects(This,SoundEffects)	\
    (This)->lpVtbl -> get_SoundEffects(This,SoundEffects)


#define IAgentCtlAudioObjectEx_get_Status(This,Available)	\
    (This)->lpVtbl -> get_Status(This,Available)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlAudioObjectEx_get_Status_Proxy( 
    IAgentCtlAudioObjectEx __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Available);


void __RPC_STUB IAgentCtlAudioObjectEx_get_Status_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlAudioObjectEx_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlSpeechInput_INTERFACE_DEFINED__
#define __IAgentCtlSpeechInput_INTERFACE_DEFINED__

/* interface IAgentCtlSpeechInput */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentCtlSpeechInput;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F5BE8BDD-7DE6-11D0-91FE-00C04FD701A5")
    IAgentCtlSpeechInput : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *VoiceEnabled) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Language( 
            /* [retval][out] */ BSTR __RPC_FAR *Language) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_HotKey( 
            /* [retval][out] */ BSTR __RPC_FAR *HotKey) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Installed( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *VoiceInstalled) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Engine( 
            /* [retval][out] */ BSTR __RPC_FAR *Engine) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Engine( 
            /* [in] */ BSTR Engine) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ListeningTip( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *ListeningTip) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlSpeechInputVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlSpeechInput __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlSpeechInput __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlSpeechInput __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlSpeechInput __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlSpeechInput __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlSpeechInput __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlSpeechInput __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Enabled )( 
            IAgentCtlSpeechInput __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *VoiceEnabled);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Language )( 
            IAgentCtlSpeechInput __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Language);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_HotKey )( 
            IAgentCtlSpeechInput __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *HotKey);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Installed )( 
            IAgentCtlSpeechInput __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *VoiceInstalled);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Engine )( 
            IAgentCtlSpeechInput __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Engine);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Engine )( 
            IAgentCtlSpeechInput __RPC_FAR * This,
            /* [in] */ BSTR Engine);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ListeningTip )( 
            IAgentCtlSpeechInput __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *ListeningTip);
        
        END_INTERFACE
    } IAgentCtlSpeechInputVtbl;

    interface IAgentCtlSpeechInput
    {
        CONST_VTBL struct IAgentCtlSpeechInputVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlSpeechInput_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlSpeechInput_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlSpeechInput_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlSpeechInput_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlSpeechInput_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlSpeechInput_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlSpeechInput_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlSpeechInput_get_Enabled(This,VoiceEnabled)	\
    (This)->lpVtbl -> get_Enabled(This,VoiceEnabled)

#define IAgentCtlSpeechInput_get_Language(This,Language)	\
    (This)->lpVtbl -> get_Language(This,Language)

#define IAgentCtlSpeechInput_get_HotKey(This,HotKey)	\
    (This)->lpVtbl -> get_HotKey(This,HotKey)

#define IAgentCtlSpeechInput_get_Installed(This,VoiceInstalled)	\
    (This)->lpVtbl -> get_Installed(This,VoiceInstalled)

#define IAgentCtlSpeechInput_get_Engine(This,Engine)	\
    (This)->lpVtbl -> get_Engine(This,Engine)

#define IAgentCtlSpeechInput_put_Engine(This,Engine)	\
    (This)->lpVtbl -> put_Engine(This,Engine)

#define IAgentCtlSpeechInput_get_ListeningTip(This,ListeningTip)	\
    (This)->lpVtbl -> get_ListeningTip(This,ListeningTip)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlSpeechInput_get_Enabled_Proxy( 
    IAgentCtlSpeechInput __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *VoiceEnabled);


void __RPC_STUB IAgentCtlSpeechInput_get_Enabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlSpeechInput_get_Language_Proxy( 
    IAgentCtlSpeechInput __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Language);


void __RPC_STUB IAgentCtlSpeechInput_get_Language_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlSpeechInput_get_HotKey_Proxy( 
    IAgentCtlSpeechInput __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *HotKey);


void __RPC_STUB IAgentCtlSpeechInput_get_HotKey_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlSpeechInput_get_Installed_Proxy( 
    IAgentCtlSpeechInput __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *VoiceInstalled);


void __RPC_STUB IAgentCtlSpeechInput_get_Installed_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlSpeechInput_get_Engine_Proxy( 
    IAgentCtlSpeechInput __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Engine);


void __RPC_STUB IAgentCtlSpeechInput_get_Engine_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlSpeechInput_put_Engine_Proxy( 
    IAgentCtlSpeechInput __RPC_FAR * This,
    /* [in] */ BSTR Engine);


void __RPC_STUB IAgentCtlSpeechInput_put_Engine_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlSpeechInput_get_ListeningTip_Proxy( 
    IAgentCtlSpeechInput __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *ListeningTip);


void __RPC_STUB IAgentCtlSpeechInput_get_ListeningTip_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlSpeechInput_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlPropertySheet_INTERFACE_DEFINED__
#define __IAgentCtlPropertySheet_INTERFACE_DEFINED__

/* interface IAgentCtlPropertySheet */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentCtlPropertySheet;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F5BE8BDF-7DE6-11D0-91FE-00C04FD701A5")
    IAgentCtlPropertySheet : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Left( 
            /* [retval][out] */ short __RPC_FAR *Left) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Top( 
            /* [retval][out] */ short __RPC_FAR *Top) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Height( 
            /* [retval][out] */ short __RPC_FAR *Height) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Width( 
            /* [retval][out] */ short __RPC_FAR *Width) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Visible( 
            /* [in] */ VARIANT_BOOL Visible) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Page( 
            /* [in] */ BSTR Page) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Page( 
            /* [retval][out] */ BSTR __RPC_FAR *Page) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlPropertySheetVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlPropertySheet __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlPropertySheet __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Left )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Left);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Top )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Top);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Height )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Height);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Width )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Width);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Visible )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Visible )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Page )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [in] */ BSTR Page);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Page )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Page);
        
        END_INTERFACE
    } IAgentCtlPropertySheetVtbl;

    interface IAgentCtlPropertySheet
    {
        CONST_VTBL struct IAgentCtlPropertySheetVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlPropertySheet_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlPropertySheet_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlPropertySheet_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlPropertySheet_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlPropertySheet_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlPropertySheet_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlPropertySheet_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlPropertySheet_get_Left(This,Left)	\
    (This)->lpVtbl -> get_Left(This,Left)

#define IAgentCtlPropertySheet_get_Top(This,Top)	\
    (This)->lpVtbl -> get_Top(This,Top)

#define IAgentCtlPropertySheet_get_Height(This,Height)	\
    (This)->lpVtbl -> get_Height(This,Height)

#define IAgentCtlPropertySheet_get_Width(This,Width)	\
    (This)->lpVtbl -> get_Width(This,Width)

#define IAgentCtlPropertySheet_put_Visible(This,Visible)	\
    (This)->lpVtbl -> put_Visible(This,Visible)

#define IAgentCtlPropertySheet_get_Visible(This,Visible)	\
    (This)->lpVtbl -> get_Visible(This,Visible)

#define IAgentCtlPropertySheet_put_Page(This,Page)	\
    (This)->lpVtbl -> put_Page(This,Page)

#define IAgentCtlPropertySheet_get_Page(This,Page)	\
    (This)->lpVtbl -> get_Page(This,Page)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlPropertySheet_get_Left_Proxy( 
    IAgentCtlPropertySheet __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Left);


void __RPC_STUB IAgentCtlPropertySheet_get_Left_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlPropertySheet_get_Top_Proxy( 
    IAgentCtlPropertySheet __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Top);


void __RPC_STUB IAgentCtlPropertySheet_get_Top_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlPropertySheet_get_Height_Proxy( 
    IAgentCtlPropertySheet __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Height);


void __RPC_STUB IAgentCtlPropertySheet_get_Height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlPropertySheet_get_Width_Proxy( 
    IAgentCtlPropertySheet __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Width);


void __RPC_STUB IAgentCtlPropertySheet_get_Width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlPropertySheet_put_Visible_Proxy( 
    IAgentCtlPropertySheet __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL Visible);


void __RPC_STUB IAgentCtlPropertySheet_put_Visible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlPropertySheet_get_Visible_Proxy( 
    IAgentCtlPropertySheet __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);


void __RPC_STUB IAgentCtlPropertySheet_get_Visible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlPropertySheet_put_Page_Proxy( 
    IAgentCtlPropertySheet __RPC_FAR * This,
    /* [in] */ BSTR Page);


void __RPC_STUB IAgentCtlPropertySheet_put_Page_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlPropertySheet_get_Page_Proxy( 
    IAgentCtlPropertySheet __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Page);


void __RPC_STUB IAgentCtlPropertySheet_get_Page_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlPropertySheet_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlCommandsWindow_INTERFACE_DEFINED__
#define __IAgentCtlCommandsWindow_INTERFACE_DEFINED__

/* interface IAgentCtlCommandsWindow */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentCtlCommandsWindow;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6D0ECB27-9968-11D0-AC6E-00C04FD97575")
    IAgentCtlCommandsWindow : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Visible( 
            /* [in] */ VARIANT_BOOL Visible) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Left( 
            /* [retval][out] */ short __RPC_FAR *Left) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Top( 
            /* [retval][out] */ short __RPC_FAR *Top) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Height( 
            /* [retval][out] */ short __RPC_FAR *Height) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Width( 
            /* [retval][out] */ short __RPC_FAR *Width) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlCommandsWindowVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlCommandsWindow __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlCommandsWindow __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlCommandsWindow __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlCommandsWindow __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlCommandsWindow __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlCommandsWindow __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlCommandsWindow __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Visible )( 
            IAgentCtlCommandsWindow __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Visible )( 
            IAgentCtlCommandsWindow __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Left )( 
            IAgentCtlCommandsWindow __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Left);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Top )( 
            IAgentCtlCommandsWindow __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Top);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Height )( 
            IAgentCtlCommandsWindow __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Height);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Width )( 
            IAgentCtlCommandsWindow __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Width);
        
        END_INTERFACE
    } IAgentCtlCommandsWindowVtbl;

    interface IAgentCtlCommandsWindow
    {
        CONST_VTBL struct IAgentCtlCommandsWindowVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlCommandsWindow_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlCommandsWindow_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlCommandsWindow_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlCommandsWindow_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlCommandsWindow_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlCommandsWindow_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlCommandsWindow_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlCommandsWindow_get_Visible(This,Visible)	\
    (This)->lpVtbl -> get_Visible(This,Visible)

#define IAgentCtlCommandsWindow_put_Visible(This,Visible)	\
    (This)->lpVtbl -> put_Visible(This,Visible)

#define IAgentCtlCommandsWindow_get_Left(This,Left)	\
    (This)->lpVtbl -> get_Left(This,Left)

#define IAgentCtlCommandsWindow_get_Top(This,Top)	\
    (This)->lpVtbl -> get_Top(This,Top)

#define IAgentCtlCommandsWindow_get_Height(This,Height)	\
    (This)->lpVtbl -> get_Height(This,Height)

#define IAgentCtlCommandsWindow_get_Width(This,Width)	\
    (This)->lpVtbl -> get_Width(This,Width)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsWindow_get_Visible_Proxy( 
    IAgentCtlCommandsWindow __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);


void __RPC_STUB IAgentCtlCommandsWindow_get_Visible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsWindow_put_Visible_Proxy( 
    IAgentCtlCommandsWindow __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL Visible);


void __RPC_STUB IAgentCtlCommandsWindow_put_Visible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsWindow_get_Left_Proxy( 
    IAgentCtlCommandsWindow __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Left);


void __RPC_STUB IAgentCtlCommandsWindow_get_Left_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsWindow_get_Top_Proxy( 
    IAgentCtlCommandsWindow __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Top);


void __RPC_STUB IAgentCtlCommandsWindow_get_Top_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsWindow_get_Height_Proxy( 
    IAgentCtlCommandsWindow __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Height);


void __RPC_STUB IAgentCtlCommandsWindow_get_Height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsWindow_get_Width_Proxy( 
    IAgentCtlCommandsWindow __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Width);


void __RPC_STUB IAgentCtlCommandsWindow_get_Width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlCommandsWindow_INTERFACE_DEFINED__ */


#ifndef __IAgentCtl_INTERFACE_DEFINED__
#define __IAgentCtl_INTERFACE_DEFINED__

/* interface IAgentCtl */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentCtl;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F5BE8BD1-7DE6-11D0-91FE-00C04FD701A5")
    IAgentCtl : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Characters( 
            /* [retval][out] */ IAgentCtlCharacters __RPC_FAR *__RPC_FAR *Characters) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_AudioOutput( 
            /* [retval][out] */ IAgentCtlAudioObjectEx __RPC_FAR *__RPC_FAR *AudioOutput) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_SpeechInput( 
            /* [retval][out] */ IAgentCtlSpeechInput __RPC_FAR *__RPC_FAR *SpeechInput) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_PropertySheet( 
            /* [retval][out] */ IAgentCtlPropertySheet __RPC_FAR *__RPC_FAR *PropSheet) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_CommandsWindow( 
            /* [retval][out] */ IAgentCtlCommandsWindow __RPC_FAR *__RPC_FAR *CommandsWindow) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Connected( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Connected) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Connected( 
            /* [in] */ VARIANT_BOOL Connected) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Suspended( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Suspended) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtl __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtl __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtl __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtl __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtl __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtl __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtl __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Characters )( 
            IAgentCtl __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlCharacters __RPC_FAR *__RPC_FAR *Characters);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_AudioOutput )( 
            IAgentCtl __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlAudioObjectEx __RPC_FAR *__RPC_FAR *AudioOutput);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SpeechInput )( 
            IAgentCtl __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlSpeechInput __RPC_FAR *__RPC_FAR *SpeechInput);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_PropertySheet )( 
            IAgentCtl __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlPropertySheet __RPC_FAR *__RPC_FAR *PropSheet);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_CommandsWindow )( 
            IAgentCtl __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlCommandsWindow __RPC_FAR *__RPC_FAR *CommandsWindow);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Connected )( 
            IAgentCtl __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Connected);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Connected )( 
            IAgentCtl __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Connected);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Suspended )( 
            IAgentCtl __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Suspended);
        
        END_INTERFACE
    } IAgentCtlVtbl;

    interface IAgentCtl
    {
        CONST_VTBL struct IAgentCtlVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtl_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtl_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtl_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtl_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtl_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtl_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtl_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtl_get_Characters(This,Characters)	\
    (This)->lpVtbl -> get_Characters(This,Characters)

#define IAgentCtl_get_AudioOutput(This,AudioOutput)	\
    (This)->lpVtbl -> get_AudioOutput(This,AudioOutput)

#define IAgentCtl_get_SpeechInput(This,SpeechInput)	\
    (This)->lpVtbl -> get_SpeechInput(This,SpeechInput)

#define IAgentCtl_get_PropertySheet(This,PropSheet)	\
    (This)->lpVtbl -> get_PropertySheet(This,PropSheet)

#define IAgentCtl_get_CommandsWindow(This,CommandsWindow)	\
    (This)->lpVtbl -> get_CommandsWindow(This,CommandsWindow)

#define IAgentCtl_get_Connected(This,Connected)	\
    (This)->lpVtbl -> get_Connected(This,Connected)

#define IAgentCtl_put_Connected(This,Connected)	\
    (This)->lpVtbl -> put_Connected(This,Connected)

#define IAgentCtl_get_Suspended(This,Suspended)	\
    (This)->lpVtbl -> get_Suspended(This,Suspended)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtl_get_Characters_Proxy( 
    IAgentCtl __RPC_FAR * This,
    /* [retval][out] */ IAgentCtlCharacters __RPC_FAR *__RPC_FAR *Characters);


void __RPC_STUB IAgentCtl_get_Characters_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtl_get_AudioOutput_Proxy( 
    IAgentCtl __RPC_FAR * This,
    /* [retval][out] */ IAgentCtlAudioObjectEx __RPC_FAR *__RPC_FAR *AudioOutput);


void __RPC_STUB IAgentCtl_get_AudioOutput_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtl_get_SpeechInput_Proxy( 
    IAgentCtl __RPC_FAR * This,
    /* [retval][out] */ IAgentCtlSpeechInput __RPC_FAR *__RPC_FAR *SpeechInput);


void __RPC_STUB IAgentCtl_get_SpeechInput_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtl_get_PropertySheet_Proxy( 
    IAgentCtl __RPC_FAR * This,
    /* [retval][out] */ IAgentCtlPropertySheet __RPC_FAR *__RPC_FAR *PropSheet);


void __RPC_STUB IAgentCtl_get_PropertySheet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtl_get_CommandsWindow_Proxy( 
    IAgentCtl __RPC_FAR * This,
    /* [retval][out] */ IAgentCtlCommandsWindow __RPC_FAR *__RPC_FAR *CommandsWindow);


void __RPC_STUB IAgentCtl_get_CommandsWindow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtl_get_Connected_Proxy( 
    IAgentCtl __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Connected);


void __RPC_STUB IAgentCtl_get_Connected_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtl_put_Connected_Proxy( 
    IAgentCtl __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL Connected);


void __RPC_STUB IAgentCtl_put_Connected_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtl_get_Suspended_Proxy( 
    IAgentCtl __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Suspended);


void __RPC_STUB IAgentCtl_get_Suspended_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtl_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlEx_INTERFACE_DEFINED__
#define __IAgentCtlEx_INTERFACE_DEFINED__

/* interface IAgentCtlEx */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentCtlEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8563FF20-8ECC-11d1-B9B4-00C04FD97575")
    IAgentCtlEx : public IAgentCtl
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ShowDefaultCharacterProperties( 
            /* [optional][in] */ VARIANT x,
            /* [optional][in] */ VARIANT y) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_RaiseRequestErrors( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *RaiseErrors) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_RaiseRequestErrors( 
            /* [in] */ VARIANT_BOOL RaiseErrors) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Characters )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlCharacters __RPC_FAR *__RPC_FAR *Characters);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_AudioOutput )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlAudioObjectEx __RPC_FAR *__RPC_FAR *AudioOutput);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SpeechInput )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlSpeechInput __RPC_FAR *__RPC_FAR *SpeechInput);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_PropertySheet )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlPropertySheet __RPC_FAR *__RPC_FAR *PropSheet);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_CommandsWindow )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlCommandsWindow __RPC_FAR *__RPC_FAR *CommandsWindow);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Connected )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Connected);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Connected )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Connected);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Suspended )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Suspended);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ShowDefaultCharacterProperties )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [optional][in] */ VARIANT x,
            /* [optional][in] */ VARIANT y);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_RaiseRequestErrors )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *RaiseErrors);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_RaiseRequestErrors )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL RaiseErrors);
        
        END_INTERFACE
    } IAgentCtlExVtbl;

    interface IAgentCtlEx
    {
        CONST_VTBL struct IAgentCtlExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlEx_get_Characters(This,Characters)	\
    (This)->lpVtbl -> get_Characters(This,Characters)

#define IAgentCtlEx_get_AudioOutput(This,AudioOutput)	\
    (This)->lpVtbl -> get_AudioOutput(This,AudioOutput)

#define IAgentCtlEx_get_SpeechInput(This,SpeechInput)	\
    (This)->lpVtbl -> get_SpeechInput(This,SpeechInput)

#define IAgentCtlEx_get_PropertySheet(This,PropSheet)	\
    (This)->lpVtbl -> get_PropertySheet(This,PropSheet)

#define IAgentCtlEx_get_CommandsWindow(This,CommandsWindow)	\
    (This)->lpVtbl -> get_CommandsWindow(This,CommandsWindow)

#define IAgentCtlEx_get_Connected(This,Connected)	\
    (This)->lpVtbl -> get_Connected(This,Connected)

#define IAgentCtlEx_put_Connected(This,Connected)	\
    (This)->lpVtbl -> put_Connected(This,Connected)

#define IAgentCtlEx_get_Suspended(This,Suspended)	\
    (This)->lpVtbl -> get_Suspended(This,Suspended)


#define IAgentCtlEx_ShowDefaultCharacterProperties(This,x,y)	\
    (This)->lpVtbl -> ShowDefaultCharacterProperties(This,x,y)

#define IAgentCtlEx_get_RaiseRequestErrors(This,RaiseErrors)	\
    (This)->lpVtbl -> get_RaiseRequestErrors(This,RaiseErrors)

#define IAgentCtlEx_put_RaiseRequestErrors(This,RaiseErrors)	\
    (This)->lpVtbl -> put_RaiseRequestErrors(This,RaiseErrors)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlEx_ShowDefaultCharacterProperties_Proxy( 
    IAgentCtlEx __RPC_FAR * This,
    /* [optional][in] */ VARIANT x,
    /* [optional][in] */ VARIANT y);


void __RPC_STUB IAgentCtlEx_ShowDefaultCharacterProperties_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlEx_get_RaiseRequestErrors_Proxy( 
    IAgentCtlEx __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *RaiseErrors);


void __RPC_STUB IAgentCtlEx_get_RaiseRequestErrors_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlEx_put_RaiseRequestErrors_Proxy( 
    IAgentCtlEx __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL RaiseErrors);


void __RPC_STUB IAgentCtlEx_put_RaiseRequestErrors_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlEx_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_AgentControl_0227 */
/* [local] */ 

#define	CONTROL_MAJOR_VERSION	( 2 )

#define	CONTROL_MINOR_VERSION	( 0 )



extern RPC_IF_HANDLE __MIDL_itf_AgentControl_0227_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_AgentControl_0227_v0_0_s_ifspec;


#ifndef __AgentObjects_LIBRARY_DEFINED__
#define __AgentObjects_LIBRARY_DEFINED__

/* library AgentObjects */
/* [helpstring][version][uuid] */ 





















EXTERN_C const IID LIBID_AgentObjects;

#ifndef ___AgentEvents_DISPINTERFACE_DEFINED__
#define ___AgentEvents_DISPINTERFACE_DEFINED__

/* dispinterface _AgentEvents */
/* [helpstring][uuid] */ 


EXTERN_C const IID DIID__AgentEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("F5BE8BD4-7DE6-11D0-91FE-00C04FD701A5")
    _AgentEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct _AgentEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            _AgentEvents __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            _AgentEvents __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            _AgentEvents __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            _AgentEvents __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            _AgentEvents __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            _AgentEvents __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            _AgentEvents __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        END_INTERFACE
    } _AgentEventsVtbl;

    interface _AgentEvents
    {
        CONST_VTBL struct _AgentEventsVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AgentEvents_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define _AgentEvents_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define _AgentEvents_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define _AgentEvents_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define _AgentEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define _AgentEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define _AgentEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* ___AgentEvents_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_Agent;

#ifdef __cplusplus

class DECLSPEC_UUID("D45FD31B-5C6E-11D1-9EC1-00C04FD7081F")
Agent;
#endif
#endif /* __AgentObjects_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     unsigned long __RPC_FAR *, unsigned long            , BSTR __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  BSTR_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, BSTR __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  BSTR_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, BSTR __RPC_FAR * ); 
void                      __RPC_USER  BSTR_UserFree(     unsigned long __RPC_FAR *, BSTR __RPC_FAR * ); 

unsigned long             __RPC_USER  VARIANT_UserSize(     unsigned long __RPC_FAR *, unsigned long            , VARIANT __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  VARIANT_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, VARIANT __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  VARIANT_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, VARIANT __RPC_FAR * ); 
void                      __RPC_USER  VARIANT_UserFree(     unsigned long __RPC_FAR *, VARIANT __RPC_FAR * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif

#endif // _MSC_VER < 1200
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\vc7addon\devtools\common\win32sdk\include\agtsvr.h ===
/**************************************************************************
*                                                                         *
* AgtSvr.h - Microsoft Agent Server                                       *
*                                                                         *
* Copyright (c) 1996-1999, Microsoft Corp. All rights reserved.           *
*                                                                         *
**************************************************************************/

#if _MSC_VER < 1200

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


/* File created by MIDL compiler version 3.01.75 */
/* at Mon Aug 31 17:00:38 1998
 */
/* Compiler settings for AgentServer.idl:
    Oicf (OptLev=i2), W1, Zp8, env=Win32, ms_ext, c_ext
    error checks: none
*/
//@@MIDL_FILE_HEADING(  )
#include "rpc.h"
#include "rpcndr.h"
#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __AgtSvrV5_h__
#define __AgtSvrV5_h__

#ifdef __cplusplus
extern "C"{
#endif 

/* Forward Declarations */ 

#ifndef __IAgentUserInput_FWD_DEFINED__
#define __IAgentUserInput_FWD_DEFINED__
typedef interface IAgentUserInput IAgentUserInput;
#endif 	/* __IAgentUserInput_FWD_DEFINED__ */


#ifndef __IAgentCommand_FWD_DEFINED__
#define __IAgentCommand_FWD_DEFINED__
typedef interface IAgentCommand IAgentCommand;
#endif 	/* __IAgentCommand_FWD_DEFINED__ */


#ifndef __IAgentCommandEx_FWD_DEFINED__
#define __IAgentCommandEx_FWD_DEFINED__
typedef interface IAgentCommandEx IAgentCommandEx;
#endif 	/* __IAgentCommandEx_FWD_DEFINED__ */


#ifndef __IAgentCommands_FWD_DEFINED__
#define __IAgentCommands_FWD_DEFINED__
typedef interface IAgentCommands IAgentCommands;
#endif 	/* __IAgentCommands_FWD_DEFINED__ */


#ifndef __IAgentCommandsEx_FWD_DEFINED__
#define __IAgentCommandsEx_FWD_DEFINED__
typedef interface IAgentCommandsEx IAgentCommandsEx;
#endif 	/* __IAgentCommandsEx_FWD_DEFINED__ */


#ifndef __IAgentCommandWindow_FWD_DEFINED__
#define __IAgentCommandWindow_FWD_DEFINED__
typedef interface IAgentCommandWindow IAgentCommandWindow;
#endif 	/* __IAgentCommandWindow_FWD_DEFINED__ */


#ifndef __IAgentSpeechInputProperties_FWD_DEFINED__
#define __IAgentSpeechInputProperties_FWD_DEFINED__
typedef interface IAgentSpeechInputProperties IAgentSpeechInputProperties;
#endif 	/* __IAgentSpeechInputProperties_FWD_DEFINED__ */


#ifndef __IAgentAudioOutputProperties_FWD_DEFINED__
#define __IAgentAudioOutputProperties_FWD_DEFINED__
typedef interface IAgentAudioOutputProperties IAgentAudioOutputProperties;
#endif 	/* __IAgentAudioOutputProperties_FWD_DEFINED__ */


#ifndef __IAgentAudioOutputPropertiesEx_FWD_DEFINED__
#define __IAgentAudioOutputPropertiesEx_FWD_DEFINED__
typedef interface IAgentAudioOutputPropertiesEx IAgentAudioOutputPropertiesEx;
#endif 	/* __IAgentAudioOutputPropertiesEx_FWD_DEFINED__ */


#ifndef __IAgentPropertySheet_FWD_DEFINED__
#define __IAgentPropertySheet_FWD_DEFINED__
typedef interface IAgentPropertySheet IAgentPropertySheet;
#endif 	/* __IAgentPropertySheet_FWD_DEFINED__ */


#ifndef __IAgentBalloon_FWD_DEFINED__
#define __IAgentBalloon_FWD_DEFINED__
typedef interface IAgentBalloon IAgentBalloon;
#endif 	/* __IAgentBalloon_FWD_DEFINED__ */


#ifndef __IAgentBalloonEx_FWD_DEFINED__
#define __IAgentBalloonEx_FWD_DEFINED__
typedef interface IAgentBalloonEx IAgentBalloonEx;
#endif 	/* __IAgentBalloonEx_FWD_DEFINED__ */


#ifndef __IAgentCharacter_FWD_DEFINED__
#define __IAgentCharacter_FWD_DEFINED__
typedef interface IAgentCharacter IAgentCharacter;
#endif 	/* __IAgentCharacter_FWD_DEFINED__ */


#ifndef __IAgentCharacterEx_FWD_DEFINED__
#define __IAgentCharacterEx_FWD_DEFINED__
typedef interface IAgentCharacterEx IAgentCharacterEx;
#endif 	/* __IAgentCharacterEx_FWD_DEFINED__ */


#ifndef __IAgent_FWD_DEFINED__
#define __IAgent_FWD_DEFINED__
typedef interface IAgent IAgent;
#endif 	/* __IAgent_FWD_DEFINED__ */


#ifndef __IAgentEx_FWD_DEFINED__
#define __IAgentEx_FWD_DEFINED__
typedef interface IAgentEx IAgentEx;
#endif 	/* __IAgentEx_FWD_DEFINED__ */


#ifndef __IAgentNotifySink_FWD_DEFINED__
#define __IAgentNotifySink_FWD_DEFINED__
typedef interface IAgentNotifySink IAgentNotifySink;
#endif 	/* __IAgentNotifySink_FWD_DEFINED__ */


#ifndef __IAgentNotifySinkEx_FWD_DEFINED__
#define __IAgentNotifySinkEx_FWD_DEFINED__
typedef interface IAgentNotifySinkEx IAgentNotifySinkEx;
#endif 	/* __IAgentNotifySinkEx_FWD_DEFINED__ */


#ifndef __IAgentPrivateNotifySink_FWD_DEFINED__
#define __IAgentPrivateNotifySink_FWD_DEFINED__
typedef interface IAgentPrivateNotifySink IAgentPrivateNotifySink;
#endif 	/* __IAgentPrivateNotifySink_FWD_DEFINED__ */


#ifndef __IAgentCustomMarshalMaker_FWD_DEFINED__
#define __IAgentCustomMarshalMaker_FWD_DEFINED__
typedef interface IAgentCustomMarshalMaker IAgentCustomMarshalMaker;
#endif 	/* __IAgentCustomMarshalMaker_FWD_DEFINED__ */


#ifndef __IAgentClientStatus_FWD_DEFINED__
#define __IAgentClientStatus_FWD_DEFINED__
typedef interface IAgentClientStatus IAgentClientStatus;
#endif 	/* __IAgentClientStatus_FWD_DEFINED__ */


#ifndef __AgentServer_FWD_DEFINED__
#define __AgentServer_FWD_DEFINED__

#ifdef __cplusplus
typedef class AgentServer AgentServer;
#else
typedef struct AgentServer AgentServer;
#endif /* __cplusplus */

#endif 	/* __AgentServer_FWD_DEFINED__ */


#ifndef __IAgentUserInput_FWD_DEFINED__
#define __IAgentUserInput_FWD_DEFINED__
typedef interface IAgentUserInput IAgentUserInput;
#endif 	/* __IAgentUserInput_FWD_DEFINED__ */


#ifndef __IAgentCommand_FWD_DEFINED__
#define __IAgentCommand_FWD_DEFINED__
typedef interface IAgentCommand IAgentCommand;
#endif 	/* __IAgentCommand_FWD_DEFINED__ */


#ifndef __IAgentCommandEx_FWD_DEFINED__
#define __IAgentCommandEx_FWD_DEFINED__
typedef interface IAgentCommandEx IAgentCommandEx;
#endif 	/* __IAgentCommandEx_FWD_DEFINED__ */


#ifndef __IAgentCommands_FWD_DEFINED__
#define __IAgentCommands_FWD_DEFINED__
typedef interface IAgentCommands IAgentCommands;
#endif 	/* __IAgentCommands_FWD_DEFINED__ */


#ifndef __IAgentCommandsEx_FWD_DEFINED__
#define __IAgentCommandsEx_FWD_DEFINED__
typedef interface IAgentCommandsEx IAgentCommandsEx;
#endif 	/* __IAgentCommandsEx_FWD_DEFINED__ */


#ifndef __IAgentSpeechInputProperties_FWD_DEFINED__
#define __IAgentSpeechInputProperties_FWD_DEFINED__
typedef interface IAgentSpeechInputProperties IAgentSpeechInputProperties;
#endif 	/* __IAgentSpeechInputProperties_FWD_DEFINED__ */


#ifndef __IAgentAudioOutputProperties_FWD_DEFINED__
#define __IAgentAudioOutputProperties_FWD_DEFINED__
typedef interface IAgentAudioOutputProperties IAgentAudioOutputProperties;
#endif 	/* __IAgentAudioOutputProperties_FWD_DEFINED__ */


#ifndef __IAgentAudioOutputPropertiesEx_FWD_DEFINED__
#define __IAgentAudioOutputPropertiesEx_FWD_DEFINED__
typedef interface IAgentAudioOutputPropertiesEx IAgentAudioOutputPropertiesEx;
#endif 	/* __IAgentAudioOutputPropertiesEx_FWD_DEFINED__ */


#ifndef __IAgentPropertySheet_FWD_DEFINED__
#define __IAgentPropertySheet_FWD_DEFINED__
typedef interface IAgentPropertySheet IAgentPropertySheet;
#endif 	/* __IAgentPropertySheet_FWD_DEFINED__ */


#ifndef __IAgentBalloon_FWD_DEFINED__
#define __IAgentBalloon_FWD_DEFINED__
typedef interface IAgentBalloon IAgentBalloon;
#endif 	/* __IAgentBalloon_FWD_DEFINED__ */


#ifndef __IAgentBalloonEx_FWD_DEFINED__
#define __IAgentBalloonEx_FWD_DEFINED__
typedef interface IAgentBalloonEx IAgentBalloonEx;
#endif 	/* __IAgentBalloonEx_FWD_DEFINED__ */


#ifndef __IAgentCharacter_FWD_DEFINED__
#define __IAgentCharacter_FWD_DEFINED__
typedef interface IAgentCharacter IAgentCharacter;
#endif 	/* __IAgentCharacter_FWD_DEFINED__ */


#ifndef __IAgentCharacterEx_FWD_DEFINED__
#define __IAgentCharacterEx_FWD_DEFINED__
typedef interface IAgentCharacterEx IAgentCharacterEx;
#endif 	/* __IAgentCharacterEx_FWD_DEFINED__ */


#ifndef __IAgent_FWD_DEFINED__
#define __IAgent_FWD_DEFINED__
typedef interface IAgent IAgent;
#endif 	/* __IAgent_FWD_DEFINED__ */


#ifndef __IAgentEx_FWD_DEFINED__
#define __IAgentEx_FWD_DEFINED__
typedef interface IAgentEx IAgentEx;
#endif 	/* __IAgentEx_FWD_DEFINED__ */


#ifndef __IAgentNotifySink_FWD_DEFINED__
#define __IAgentNotifySink_FWD_DEFINED__
typedef interface IAgentNotifySink IAgentNotifySink;
#endif 	/* __IAgentNotifySink_FWD_DEFINED__ */


#ifndef __IAgentNotifySinkEx_FWD_DEFINED__
#define __IAgentNotifySinkEx_FWD_DEFINED__
typedef interface IAgentNotifySinkEx IAgentNotifySinkEx;
#endif 	/* __IAgentNotifySinkEx_FWD_DEFINED__ */


#ifndef __IAgentCommandWindow_FWD_DEFINED__
#define __IAgentCommandWindow_FWD_DEFINED__
typedef interface IAgentCommandWindow IAgentCommandWindow;
#endif 	/* __IAgentCommandWindow_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"
#include "ocidl.h"

void __RPC_FAR * __RPC_USER MIDL_user_allocate(size_t);
void __RPC_USER MIDL_user_free( void __RPC_FAR * ); 

/****************************************
 * Generated header for interface: __MIDL_itf_AgentServer_0000
 * at Mon Aug 31 17:00:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [local] */ 


#define	NeverMoved	( 0 )

#define	UserMoved	( 1 )

#define	ProgramMoved	( 2 )

#define	OtherProgramMoved	( 3 )

#define	SystemMoved	( 4 )

#define	NeverShown	( 0 )

#define	UserHid	( 1 )

#define	UserShowed	( 2 )

#define	ProgramHid	( 3 )

#define	ProgramShowed	( 4 )

#define	OtherProgramHid	( 5 )

#define	OtherProgramShowed	( 6 )

#define	UserHidViaCharacterMenu	( 7 )

#define	UserHidViaTaskbarIcon	( UserHid )

#define	CSHELPCAUSE_COMMAND	( 1 )

#define	CSHELPCAUSE_OTHERPROGRAM	( 2 )

#define	CSHELPCAUSE_OPENCOMMANDSWINDOW	( 3 )

#define	CSHELPCAUSE_CLOSECOMMANDSWINDOW	( 4 )

#define	CSHELPCAUSE_SHOWCHARACTER	( 5 )

#define	CSHELPCAUSE_HIDECHARACTER	( 6 )

#define	CSHELPCAUSE_CHARACTER	( 7 )

#define	ACTIVATE_NOTTOPMOST	( 0 )

#define	ACTIVATE_TOPMOST	( 1 )

#define	ACTIVATE_NOTACTIVE	( 0 )

#define	ACTIVATE_ACTIVE	( 1 )

#define	ACTIVATE_INPUTACTIVE	( 2 )

#define	PREPARE_ANIMATION	( 0 )

#define	PREPARE_STATE	( 1 )

#define	PREPARE_WAVE	( 2 )

#define	STOP_TYPE_PLAY	( 0x1 )

#define	STOP_TYPE_MOVE	( 0x2 )

#define	STOP_TYPE_SPEAK	( 0x4 )

#define	STOP_TYPE_PREPARE	( 0x8 )

#define	STOP_TYPE_NONQUEUEDPREPARE	( 0x10 )

#define	STOP_TYPE_VISIBLE	( 0x20 )

#define	STOP_TYPE_ALL	( 0xffffffff )

#define	BALLOON_STYLE_BALLOON_ON	( 0x1 )

#define	BALLOON_STYLE_SIZETOTEXT	( 0x2 )

#define	BALLOON_STYLE_AUTOHIDE	( 0x4 )

#define	BALLOON_STYLE_AUTOPACE	( 0x8 )

#define	AUDIO_STATUS_AVAILABLE	( 0 )

#define	AUDIO_STATUS_NOAUDIO	( 1 )

#define	AUDIO_STATUS_CANTOPENAUDIO	( 2 )

#define	AUDIO_STATUS_USERSPEAKING	( 3 )

#define	AUDIO_STATUS_CHARACTERSPEAKING	( 4 )

#define	AUDIO_STATUS_SROVERRIDEABLE	( 5 )

#define	AUDIO_STATUS_ERROR	( 6 )

#define	LISTEN_STATUS_CANLISTEN	( 0 )

#define	LISTEN_STATUS_NOAUDIO	( 1 )

#define	LISTEN_STATUS_NOTACTIVE	( 2 )

#define	LISTEN_STATUS_CANTOPENAUDIO	( 3 )

#define	LISTEN_STATUS_COULDNTINITIALIZESPEECH	( 4 )

#define	LISTEN_STATUS_SPEECHDISABLED	( 5 )

#define	LISTEN_STATUS_ERROR	( 6 )

#define	MK_ICON	( 0x1000 )

#define	LSCOMPLETE_CAUSE_PROGRAMDISABLED	( 1 )

#define	LSCOMPLETE_CAUSE_PROGRAMTIMEDOUT	( 2 )

#define	LSCOMPLETE_CAUSE_USERTIMEDOUT	( 3 )

#define	LSCOMPLETE_CAUSE_USERRELEASEDKEY	( 4 )

#define	LSCOMPLETE_CAUSE_USERUTTERANCEENDED	( 5 )

#define	LSCOMPLETE_CAUSE_CLIENTDEACTIVATED	( 6 )

#define	LSCOMPLETE_CAUSE_DEFAULTCHARCHANGE	( 7 )

#define	LSCOMPLETE_CAUSE_USERDISABLED	( 8 )



extern RPC_IF_HANDLE __MIDL_itf_AgentServer_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_AgentServer_0000_v0_0_s_ifspec;

#ifndef __IAgentUserInput_INTERFACE_DEFINED__
#define __IAgentUserInput_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentUserInput
 * at Mon Aug 31 17:00:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentUserInput;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("A7B93C80-7B81-11D0-AC5F-00C04FD97575")
    IAgentUserInput : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCount( 
            /* [out] */ long __RPC_FAR *pdwCount) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetItemID( 
            /* [in] */ long dwItemIndex,
            /* [out] */ long __RPC_FAR *pdwCommandID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetItemConfidence( 
            /* [in] */ long dwItemIndex,
            /* [out] */ long __RPC_FAR *plConfidence) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetItemText( 
            /* [in] */ long dwItemIndex,
            /* [out] */ BSTR __RPC_FAR *pbszText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAllItemData( 
            /* [out] */ VARIANT __RPC_FAR *pdwItemIndices,
            /* [out] */ VARIANT __RPC_FAR *plConfidences,
            /* [out] */ VARIANT __RPC_FAR *pbszText) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentUserInputVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentUserInput __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentUserInput __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentUserInput __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentUserInput __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentUserInput __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentUserInput __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentUserInput __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCount )( 
            IAgentUserInput __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pdwCount);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetItemID )( 
            IAgentUserInput __RPC_FAR * This,
            /* [in] */ long dwItemIndex,
            /* [out] */ long __RPC_FAR *pdwCommandID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetItemConfidence )( 
            IAgentUserInput __RPC_FAR * This,
            /* [in] */ long dwItemIndex,
            /* [out] */ long __RPC_FAR *plConfidence);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetItemText )( 
            IAgentUserInput __RPC_FAR * This,
            /* [in] */ long dwItemIndex,
            /* [out] */ BSTR __RPC_FAR *pbszText);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetAllItemData )( 
            IAgentUserInput __RPC_FAR * This,
            /* [out] */ VARIANT __RPC_FAR *pdwItemIndices,
            /* [out] */ VARIANT __RPC_FAR *plConfidences,
            /* [out] */ VARIANT __RPC_FAR *pbszText);
        
        END_INTERFACE
    } IAgentUserInputVtbl;

    interface IAgentUserInput
    {
        CONST_VTBL struct IAgentUserInputVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentUserInput_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentUserInput_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentUserInput_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentUserInput_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentUserInput_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentUserInput_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentUserInput_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentUserInput_GetCount(This,pdwCount)	\
    (This)->lpVtbl -> GetCount(This,pdwCount)

#define IAgentUserInput_GetItemID(This,dwItemIndex,pdwCommandID)	\
    (This)->lpVtbl -> GetItemID(This,dwItemIndex,pdwCommandID)

#define IAgentUserInput_GetItemConfidence(This,dwItemIndex,plConfidence)	\
    (This)->lpVtbl -> GetItemConfidence(This,dwItemIndex,plConfidence)

#define IAgentUserInput_GetItemText(This,dwItemIndex,pbszText)	\
    (This)->lpVtbl -> GetItemText(This,dwItemIndex,pbszText)

#define IAgentUserInput_GetAllItemData(This,pdwItemIndices,plConfidences,pbszText)	\
    (This)->lpVtbl -> GetAllItemData(This,pdwItemIndices,plConfidences,pbszText)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentUserInput_GetCount_Proxy( 
    IAgentUserInput __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pdwCount);


void __RPC_STUB IAgentUserInput_GetCount_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentUserInput_GetItemID_Proxy( 
    IAgentUserInput __RPC_FAR * This,
    /* [in] */ long dwItemIndex,
    /* [out] */ long __RPC_FAR *pdwCommandID);


void __RPC_STUB IAgentUserInput_GetItemID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentUserInput_GetItemConfidence_Proxy( 
    IAgentUserInput __RPC_FAR * This,
    /* [in] */ long dwItemIndex,
    /* [out] */ long __RPC_FAR *plConfidence);


void __RPC_STUB IAgentUserInput_GetItemConfidence_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentUserInput_GetItemText_Proxy( 
    IAgentUserInput __RPC_FAR * This,
    /* [in] */ long dwItemIndex,
    /* [out] */ BSTR __RPC_FAR *pbszText);


void __RPC_STUB IAgentUserInput_GetItemText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentUserInput_GetAllItemData_Proxy( 
    IAgentUserInput __RPC_FAR * This,
    /* [out] */ VARIANT __RPC_FAR *pdwItemIndices,
    /* [out] */ VARIANT __RPC_FAR *plConfidences,
    /* [out] */ VARIANT __RPC_FAR *pbszText);


void __RPC_STUB IAgentUserInput_GetAllItemData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentUserInput_INTERFACE_DEFINED__ */


#ifndef __IAgentCommand_INTERFACE_DEFINED__
#define __IAgentCommand_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCommand
 * at Mon Aug 31 17:00:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentCommand;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("A7B93C83-7B81-11D0-AC5F-00C04FD97575")
    IAgentCommand : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetCaption( 
            /* [in] */ BSTR bszCaption) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCaption( 
            /* [out] */ BSTR __RPC_FAR *pbszCaption) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetVoice( 
            /* [in] */ BSTR bszVoice) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVoice( 
            /* [out] */ BSTR __RPC_FAR *pbszVoice) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetEnabled( 
            /* [in] */ long bEnabled) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEnabled( 
            /* [out] */ long __RPC_FAR *pbEnabled) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetVisible( 
            /* [in] */ long bVisible) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVisible( 
            /* [out] */ long __RPC_FAR *pbVisible) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetConfidenceThreshold( 
            /* [in] */ long lThreshold) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetConfidenceThreshold( 
            /* [out] */ long __RPC_FAR *plThreshold) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetConfidenceText( 
            /* [in] */ BSTR bszTipText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetConfidenceText( 
            /* [out] */ BSTR __RPC_FAR *pbszTipText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetID( 
            /* [out] */ long __RPC_FAR *pdwID) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCommandVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCommand __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCommand __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCommand __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCommand __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCommand __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCommand __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCommand __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetCaption )( 
            IAgentCommand __RPC_FAR * This,
            /* [in] */ BSTR bszCaption);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCaption )( 
            IAgentCommand __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszCaption);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVoice )( 
            IAgentCommand __RPC_FAR * This,
            /* [in] */ BSTR bszVoice);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVoice )( 
            IAgentCommand __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszVoice);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetEnabled )( 
            IAgentCommand __RPC_FAR * This,
            /* [in] */ long bEnabled);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetEnabled )( 
            IAgentCommand __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbEnabled);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVisible )( 
            IAgentCommand __RPC_FAR * This,
            /* [in] */ long bVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVisible )( 
            IAgentCommand __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetConfidenceThreshold )( 
            IAgentCommand __RPC_FAR * This,
            /* [in] */ long lThreshold);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetConfidenceThreshold )( 
            IAgentCommand __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plThreshold);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetConfidenceText )( 
            IAgentCommand __RPC_FAR * This,
            /* [in] */ BSTR bszTipText);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetConfidenceText )( 
            IAgentCommand __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszTipText);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetID )( 
            IAgentCommand __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pdwID);
        
        END_INTERFACE
    } IAgentCommandVtbl;

    interface IAgentCommand
    {
        CONST_VTBL struct IAgentCommandVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCommand_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCommand_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCommand_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCommand_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCommand_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCommand_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCommand_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCommand_SetCaption(This,bszCaption)	\
    (This)->lpVtbl -> SetCaption(This,bszCaption)

#define IAgentCommand_GetCaption(This,pbszCaption)	\
    (This)->lpVtbl -> GetCaption(This,pbszCaption)

#define IAgentCommand_SetVoice(This,bszVoice)	\
    (This)->lpVtbl -> SetVoice(This,bszVoice)

#define IAgentCommand_GetVoice(This,pbszVoice)	\
    (This)->lpVtbl -> GetVoice(This,pbszVoice)

#define IAgentCommand_SetEnabled(This,bEnabled)	\
    (This)->lpVtbl -> SetEnabled(This,bEnabled)

#define IAgentCommand_GetEnabled(This,pbEnabled)	\
    (This)->lpVtbl -> GetEnabled(This,pbEnabled)

#define IAgentCommand_SetVisible(This,bVisible)	\
    (This)->lpVtbl -> SetVisible(This,bVisible)

#define IAgentCommand_GetVisible(This,pbVisible)	\
    (This)->lpVtbl -> GetVisible(This,pbVisible)

#define IAgentCommand_SetConfidenceThreshold(This,lThreshold)	\
    (This)->lpVtbl -> SetConfidenceThreshold(This,lThreshold)

#define IAgentCommand_GetConfidenceThreshold(This,plThreshold)	\
    (This)->lpVtbl -> GetConfidenceThreshold(This,plThreshold)

#define IAgentCommand_SetConfidenceText(This,bszTipText)	\
    (This)->lpVtbl -> SetConfidenceText(This,bszTipText)

#define IAgentCommand_GetConfidenceText(This,pbszTipText)	\
    (This)->lpVtbl -> GetConfidenceText(This,pbszTipText)

#define IAgentCommand_GetID(This,pdwID)	\
    (This)->lpVtbl -> GetID(This,pdwID)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentCommand_SetCaption_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [in] */ BSTR bszCaption);


void __RPC_STUB IAgentCommand_SetCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommand_GetCaption_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszCaption);


void __RPC_STUB IAgentCommand_GetCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommand_SetVoice_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [in] */ BSTR bszVoice);


void __RPC_STUB IAgentCommand_SetVoice_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommand_GetVoice_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszVoice);


void __RPC_STUB IAgentCommand_GetVoice_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommand_SetEnabled_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [in] */ long bEnabled);


void __RPC_STUB IAgentCommand_SetEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommand_GetEnabled_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbEnabled);


void __RPC_STUB IAgentCommand_GetEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommand_SetVisible_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [in] */ long bVisible);


void __RPC_STUB IAgentCommand_SetVisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommand_GetVisible_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbVisible);


void __RPC_STUB IAgentCommand_GetVisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommand_SetConfidenceThreshold_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [in] */ long lThreshold);


void __RPC_STUB IAgentCommand_SetConfidenceThreshold_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommand_GetConfidenceThreshold_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plThreshold);


void __RPC_STUB IAgentCommand_GetConfidenceThreshold_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommand_SetConfidenceText_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [in] */ BSTR bszTipText);


void __RPC_STUB IAgentCommand_SetConfidenceText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommand_GetConfidenceText_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszTipText);


void __RPC_STUB IAgentCommand_GetConfidenceText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommand_GetID_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pdwID);


void __RPC_STUB IAgentCommand_GetID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCommand_INTERFACE_DEFINED__ */


#ifndef __IAgentCommandEx_INTERFACE_DEFINED__
#define __IAgentCommandEx_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCommandEx
 * at Mon Aug 31 17:00:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentCommandEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("B0913412-3B44-11d1-ACBA-00C04FD97575")
    IAgentCommandEx : public IAgentCommand
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetHelpContextID( 
            /* [in] */ long ulID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetHelpContextID( 
            /* [out] */ long __RPC_FAR *pulID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetVoiceCaption( 
            /* [in] */ BSTR bszVoiceCaption) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVoiceCaption( 
            /* [out] */ BSTR __RPC_FAR *pbszVoiceCaption) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCommandExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCommandEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCommandEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetCaption )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [in] */ BSTR bszCaption);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCaption )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszCaption);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVoice )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [in] */ BSTR bszVoice);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVoice )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszVoice);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetEnabled )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [in] */ long bEnabled);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetEnabled )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbEnabled);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVisible )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [in] */ long bVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVisible )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetConfidenceThreshold )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [in] */ long lThreshold);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetConfidenceThreshold )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plThreshold);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetConfidenceText )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [in] */ BSTR bszTipText);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetConfidenceText )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszTipText);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetID )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pdwID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetHelpContextID )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [in] */ long ulID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetHelpContextID )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pulID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVoiceCaption )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [in] */ BSTR bszVoiceCaption);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVoiceCaption )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszVoiceCaption);
        
        END_INTERFACE
    } IAgentCommandExVtbl;

    interface IAgentCommandEx
    {
        CONST_VTBL struct IAgentCommandExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCommandEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCommandEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCommandEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCommandEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCommandEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCommandEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCommandEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCommandEx_SetCaption(This,bszCaption)	\
    (This)->lpVtbl -> SetCaption(This,bszCaption)

#define IAgentCommandEx_GetCaption(This,pbszCaption)	\
    (This)->lpVtbl -> GetCaption(This,pbszCaption)

#define IAgentCommandEx_SetVoice(This,bszVoice)	\
    (This)->lpVtbl -> SetVoice(This,bszVoice)

#define IAgentCommandEx_GetVoice(This,pbszVoice)	\
    (This)->lpVtbl -> GetVoice(This,pbszVoice)

#define IAgentCommandEx_SetEnabled(This,bEnabled)	\
    (This)->lpVtbl -> SetEnabled(This,bEnabled)

#define IAgentCommandEx_GetEnabled(This,pbEnabled)	\
    (This)->lpVtbl -> GetEnabled(This,pbEnabled)

#define IAgentCommandEx_SetVisible(This,bVisible)	\
    (This)->lpVtbl -> SetVisible(This,bVisible)

#define IAgentCommandEx_GetVisible(This,pbVisible)	\
    (This)->lpVtbl -> GetVisible(This,pbVisible)

#define IAgentCommandEx_SetConfidenceThreshold(This,lThreshold)	\
    (This)->lpVtbl -> SetConfidenceThreshold(This,lThreshold)

#define IAgentCommandEx_GetConfidenceThreshold(This,plThreshold)	\
    (This)->lpVtbl -> GetConfidenceThreshold(This,plThreshold)

#define IAgentCommandEx_SetConfidenceText(This,bszTipText)	\
    (This)->lpVtbl -> SetConfidenceText(This,bszTipText)

#define IAgentCommandEx_GetConfidenceText(This,pbszTipText)	\
    (This)->lpVtbl -> GetConfidenceText(This,pbszTipText)

#define IAgentCommandEx_GetID(This,pdwID)	\
    (This)->lpVtbl -> GetID(This,pdwID)


#define IAgentCommandEx_SetHelpContextID(This,ulID)	\
    (This)->lpVtbl -> SetHelpContextID(This,ulID)

#define IAgentCommandEx_GetHelpContextID(This,pulID)	\
    (This)->lpVtbl -> GetHelpContextID(This,pulID)

#define IAgentCommandEx_SetVoiceCaption(This,bszVoiceCaption)	\
    (This)->lpVtbl -> SetVoiceCaption(This,bszVoiceCaption)

#define IAgentCommandEx_GetVoiceCaption(This,pbszVoiceCaption)	\
    (This)->lpVtbl -> GetVoiceCaption(This,pbszVoiceCaption)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentCommandEx_SetHelpContextID_Proxy( 
    IAgentCommandEx __RPC_FAR * This,
    /* [in] */ long ulID);


void __RPC_STUB IAgentCommandEx_SetHelpContextID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandEx_GetHelpContextID_Proxy( 
    IAgentCommandEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pulID);


void __RPC_STUB IAgentCommandEx_GetHelpContextID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandEx_SetVoiceCaption_Proxy( 
    IAgentCommandEx __RPC_FAR * This,
    /* [in] */ BSTR bszVoiceCaption);


void __RPC_STUB IAgentCommandEx_SetVoiceCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandEx_GetVoiceCaption_Proxy( 
    IAgentCommandEx __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszVoiceCaption);


void __RPC_STUB IAgentCommandEx_GetVoiceCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCommandEx_INTERFACE_DEFINED__ */


#ifndef __IAgentCommands_INTERFACE_DEFINED__
#define __IAgentCommands_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCommands
 * at Mon Aug 31 17:00:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentCommands;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("A7B93C85-7B81-11D0-AC5F-00C04FD97575")
    IAgentCommands : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCommand( 
            /* [in] */ long dwCommandID,
            /* [out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkCommand) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCount( 
            /* [out] */ long __RPC_FAR *pdwCount) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetCaption( 
            /* [in] */ BSTR bszCaption) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCaption( 
            /* [out] */ BSTR __RPC_FAR *pbszCaption) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetVoice( 
            /* [in] */ BSTR bszVoice) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVoice( 
            /* [out] */ BSTR __RPC_FAR *pbszVoice) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetVisible( 
            /* [in] */ long bVisible) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVisible( 
            /* [out] */ long __RPC_FAR *pbVisible) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR bszCaption,
            /* [in] */ BSTR bszVoice,
            /* [in] */ long bEnabled,
            /* [in] */ long bVisible,
            /* [out] */ long __RPC_FAR *pdwID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Insert( 
            /* [in] */ BSTR bszCaption,
            /* [in] */ BSTR bszVoice,
            /* [in] */ long bEnabled,
            /* [in] */ long bVisible,
            /* [in] */ long dwRefID,
            /* [in] */ long bBefore,
            /* [out] */ long __RPC_FAR *pdwID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ long dwID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAll( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCommandsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCommands __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCommands __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCommands __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCommands __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCommands __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCommands __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCommands __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCommand )( 
            IAgentCommands __RPC_FAR * This,
            /* [in] */ long dwCommandID,
            /* [out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkCommand);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCount )( 
            IAgentCommands __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pdwCount);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetCaption )( 
            IAgentCommands __RPC_FAR * This,
            /* [in] */ BSTR bszCaption);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCaption )( 
            IAgentCommands __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszCaption);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVoice )( 
            IAgentCommands __RPC_FAR * This,
            /* [in] */ BSTR bszVoice);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVoice )( 
            IAgentCommands __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszVoice);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVisible )( 
            IAgentCommands __RPC_FAR * This,
            /* [in] */ long bVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVisible )( 
            IAgentCommands __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Add )( 
            IAgentCommands __RPC_FAR * This,
            /* [in] */ BSTR bszCaption,
            /* [in] */ BSTR bszVoice,
            /* [in] */ long bEnabled,
            /* [in] */ long bVisible,
            /* [out] */ long __RPC_FAR *pdwID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Insert )( 
            IAgentCommands __RPC_FAR * This,
            /* [in] */ BSTR bszCaption,
            /* [in] */ BSTR bszVoice,
            /* [in] */ long bEnabled,
            /* [in] */ long bVisible,
            /* [in] */ long dwRefID,
            /* [in] */ long bBefore,
            /* [out] */ long __RPC_FAR *pdwID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Remove )( 
            IAgentCommands __RPC_FAR * This,
            /* [in] */ long dwID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RemoveAll )( 
            IAgentCommands __RPC_FAR * This);
        
        END_INTERFACE
    } IAgentCommandsVtbl;

    interface IAgentCommands
    {
        CONST_VTBL struct IAgentCommandsVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCommands_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCommands_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCommands_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCommands_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCommands_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCommands_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCommands_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCommands_GetCommand(This,dwCommandID,ppunkCommand)	\
    (This)->lpVtbl -> GetCommand(This,dwCommandID,ppunkCommand)

#define IAgentCommands_GetCount(This,pdwCount)	\
    (This)->lpVtbl -> GetCount(This,pdwCount)

#define IAgentCommands_SetCaption(This,bszCaption)	\
    (This)->lpVtbl -> SetCaption(This,bszCaption)

#define IAgentCommands_GetCaption(This,pbszCaption)	\
    (This)->lpVtbl -> GetCaption(This,pbszCaption)

#define IAgentCommands_SetVoice(This,bszVoice)	\
    (This)->lpVtbl -> SetVoice(This,bszVoice)

#define IAgentCommands_GetVoice(This,pbszVoice)	\
    (This)->lpVtbl -> GetVoice(This,pbszVoice)

#define IAgentCommands_SetVisible(This,bVisible)	\
    (This)->lpVtbl -> SetVisible(This,bVisible)

#define IAgentCommands_GetVisible(This,pbVisible)	\
    (This)->lpVtbl -> GetVisible(This,pbVisible)

#define IAgentCommands_Add(This,bszCaption,bszVoice,bEnabled,bVisible,pdwID)	\
    (This)->lpVtbl -> Add(This,bszCaption,bszVoice,bEnabled,bVisible,pdwID)

#define IAgentCommands_Insert(This,bszCaption,bszVoice,bEnabled,bVisible,dwRefID,bBefore,pdwID)	\
    (This)->lpVtbl -> Insert(This,bszCaption,bszVoice,bEnabled,bVisible,dwRefID,bBefore,pdwID)

#define IAgentCommands_Remove(This,dwID)	\
    (This)->lpVtbl -> Remove(This,dwID)

#define IAgentCommands_RemoveAll(This)	\
    (This)->lpVtbl -> RemoveAll(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentCommands_GetCommand_Proxy( 
    IAgentCommands __RPC_FAR * This,
    /* [in] */ long dwCommandID,
    /* [out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkCommand);


void __RPC_STUB IAgentCommands_GetCommand_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommands_GetCount_Proxy( 
    IAgentCommands __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pdwCount);


void __RPC_STUB IAgentCommands_GetCount_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommands_SetCaption_Proxy( 
    IAgentCommands __RPC_FAR * This,
    /* [in] */ BSTR bszCaption);


void __RPC_STUB IAgentCommands_SetCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommands_GetCaption_Proxy( 
    IAgentCommands __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszCaption);


void __RPC_STUB IAgentCommands_GetCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommands_SetVoice_Proxy( 
    IAgentCommands __RPC_FAR * This,
    /* [in] */ BSTR bszVoice);


void __RPC_STUB IAgentCommands_SetVoice_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommands_GetVoice_Proxy( 
    IAgentCommands __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszVoice);


void __RPC_STUB IAgentCommands_GetVoice_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommands_SetVisible_Proxy( 
    IAgentCommands __RPC_FAR * This,
    /* [in] */ long bVisible);


void __RPC_STUB IAgentCommands_SetVisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommands_GetVisible_Proxy( 
    IAgentCommands __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbVisible);


void __RPC_STUB IAgentCommands_GetVisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommands_Add_Proxy( 
    IAgentCommands __RPC_FAR * This,
    /* [in] */ BSTR bszCaption,
    /* [in] */ BSTR bszVoice,
    /* [in] */ long bEnabled,
    /* [in] */ long bVisible,
    /* [out] */ long __RPC_FAR *pdwID);


void __RPC_STUB IAgentCommands_Add_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommands_Insert_Proxy( 
    IAgentCommands __RPC_FAR * This,
    /* [in] */ BSTR bszCaption,
    /* [in] */ BSTR bszVoice,
    /* [in] */ long bEnabled,
    /* [in] */ long bVisible,
    /* [in] */ long dwRefID,
    /* [in] */ long bBefore,
    /* [out] */ long __RPC_FAR *pdwID);


void __RPC_STUB IAgentCommands_Insert_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommands_Remove_Proxy( 
    IAgentCommands __RPC_FAR * This,
    /* [in] */ long dwID);


void __RPC_STUB IAgentCommands_Remove_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommands_RemoveAll_Proxy( 
    IAgentCommands __RPC_FAR * This);


void __RPC_STUB IAgentCommands_RemoveAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCommands_INTERFACE_DEFINED__ */


#ifndef __IAgentCommandsEx_INTERFACE_DEFINED__
#define __IAgentCommandsEx_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCommandsEx
 * at Mon Aug 31 17:00:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentCommandsEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("6BA90C00-3910-11d1-ACB3-00C04FD97575")
    IAgentCommandsEx : public IAgentCommands
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCommandEx( 
            /* [in] */ long dwCommandID,
            /* [out] */ IAgentCommandEx __RPC_FAR *__RPC_FAR *ppCommandEx) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetDefaultID( 
            /* [in] */ long dwID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDefaultID( 
            /* [out] */ long __RPC_FAR *pdwID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetHelpContextID( 
            /* [in] */ long ulHelpID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetHelpContextID( 
            /* [out] */ long __RPC_FAR *pulHelpID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetFontName( 
            /* [in] */ BSTR bszFontName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFontName( 
            /* [out] */ BSTR __RPC_FAR *pbszFontName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetFontSize( 
            /* [in] */ long lFontSize) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFontSize( 
            /* [out] */ long __RPC_FAR *lFontSize) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetVoiceCaption( 
            /* [in] */ BSTR bszVoiceCaption) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVoiceCaption( 
            /* [out] */ BSTR __RPC_FAR *bszVoiceCaption) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddEx( 
            /* [in] */ BSTR bszCaption,
            /* [in] */ BSTR bszVoice,
            /* [in] */ BSTR bszVoiceCaption,
            /* [in] */ long bEnabled,
            /* [in] */ long bVisible,
            /* [in] */ long ulHelpId,
            /* [out] */ long __RPC_FAR *pdwID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertEx( 
            /* [in] */ BSTR bszCaption,
            /* [in] */ BSTR bszVoice,
            /* [in] */ BSTR bszVoiceCaption,
            /* [in] */ long bEnabled,
            /* [in] */ long bVisible,
            /* [in] */ long ulHelpId,
            /* [in] */ long dwRefID,
            /* [in] */ long bBefore,
            /* [out] */ long __RPC_FAR *pdwID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetGlobalVoiceCommandsEnabled( 
            /* [in] */ long bEnable) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetGlobalVoiceCommandsEnabled( 
            /* [out] */ long __RPC_FAR *pbEnabled) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCommandsExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCommandsEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCommandsEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCommand )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ long dwCommandID,
            /* [out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkCommand);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCount )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pdwCount);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetCaption )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR bszCaption);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCaption )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszCaption);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVoice )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR bszVoice);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVoice )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszVoice);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVisible )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ long bVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVisible )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Add )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR bszCaption,
            /* [in] */ BSTR bszVoice,
            /* [in] */ long bEnabled,
            /* [in] */ long bVisible,
            /* [out] */ long __RPC_FAR *pdwID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Insert )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR bszCaption,
            /* [in] */ BSTR bszVoice,
            /* [in] */ long bEnabled,
            /* [in] */ long bVisible,
            /* [in] */ long dwRefID,
            /* [in] */ long bBefore,
            /* [out] */ long __RPC_FAR *pdwID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Remove )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ long dwID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RemoveAll )( 
            IAgentCommandsEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCommandEx )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ long dwCommandID,
            /* [out] */ IAgentCommandEx __RPC_FAR *__RPC_FAR *ppCommandEx);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetDefaultID )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ long dwID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetDefaultID )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pdwID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetHelpContextID )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ long ulHelpID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetHelpContextID )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pulHelpID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFontName )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR bszFontName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontName )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszFontName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFontSize )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ long lFontSize);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontSize )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *lFontSize);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVoiceCaption )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR bszVoiceCaption);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVoiceCaption )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *bszVoiceCaption);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AddEx )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR bszCaption,
            /* [in] */ BSTR bszVoice,
            /* [in] */ BSTR bszVoiceCaption,
            /* [in] */ long bEnabled,
            /* [in] */ long bVisible,
            /* [in] */ long ulHelpId,
            /* [out] */ long __RPC_FAR *pdwID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *InsertEx )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR bszCaption,
            /* [in] */ BSTR bszVoice,
            /* [in] */ BSTR bszVoiceCaption,
            /* [in] */ long bEnabled,
            /* [in] */ long bVisible,
            /* [in] */ long ulHelpId,
            /* [in] */ long dwRefID,
            /* [in] */ long bBefore,
            /* [out] */ long __RPC_FAR *pdwID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetGlobalVoiceCommandsEnabled )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ long bEnable);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetGlobalVoiceCommandsEnabled )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbEnabled);
        
        END_INTERFACE
    } IAgentCommandsExVtbl;

    interface IAgentCommandsEx
    {
        CONST_VTBL struct IAgentCommandsExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCommandsEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCommandsEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCommandsEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCommandsEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCommandsEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCommandsEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCommandsEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCommandsEx_GetCommand(This,dwCommandID,ppunkCommand)	\
    (This)->lpVtbl -> GetCommand(This,dwCommandID,ppunkCommand)

#define IAgentCommandsEx_GetCount(This,pdwCount)	\
    (This)->lpVtbl -> GetCount(This,pdwCount)

#define IAgentCommandsEx_SetCaption(This,bszCaption)	\
    (This)->lpVtbl -> SetCaption(This,bszCaption)

#define IAgentCommandsEx_GetCaption(This,pbszCaption)	\
    (This)->lpVtbl -> GetCaption(This,pbszCaption)

#define IAgentCommandsEx_SetVoice(This,bszVoice)	\
    (This)->lpVtbl -> SetVoice(This,bszVoice)

#define IAgentCommandsEx_GetVoice(This,pbszVoice)	\
    (This)->lpVtbl -> GetVoice(This,pbszVoice)

#define IAgentCommandsEx_SetVisible(This,bVisible)	\
    (This)->lpVtbl -> SetVisible(This,bVisible)

#define IAgentCommandsEx_GetVisible(This,pbVisible)	\
    (This)->lpVtbl -> GetVisible(This,pbVisible)

#define IAgentCommandsEx_Add(This,bszCaption,bszVoice,bEnabled,bVisible,pdwID)	\
    (This)->lpVtbl -> Add(This,bszCaption,bszVoice,bEnabled,bVisible,pdwID)

#define IAgentCommandsEx_Insert(This,bszCaption,bszVoice,bEnabled,bVisible,dwRefID,bBefore,pdwID)	\
    (This)->lpVtbl -> Insert(This,bszCaption,bszVoice,bEnabled,bVisible,dwRefID,bBefore,pdwID)

#define IAgentCommandsEx_Remove(This,dwID)	\
    (This)->lpVtbl -> Remove(This,dwID)

#define IAgentCommandsEx_RemoveAll(This)	\
    (This)->lpVtbl -> RemoveAll(This)


#define IAgentCommandsEx_GetCommandEx(This,dwCommandID,ppCommandEx)	\
    (This)->lpVtbl -> GetCommandEx(This,dwCommandID,ppCommandEx)

#define IAgentCommandsEx_SetDefaultID(This,dwID)	\
    (This)->lpVtbl -> SetDefaultID(This,dwID)

#define IAgentCommandsEx_GetDefaultID(This,pdwID)	\
    (This)->lpVtbl -> GetDefaultID(This,pdwID)

#define IAgentCommandsEx_SetHelpContextID(This,ulHelpID)	\
    (This)->lpVtbl -> SetHelpContextID(This,ulHelpID)

#define IAgentCommandsEx_GetHelpContextID(This,pulHelpID)	\
    (This)->lpVtbl -> GetHelpContextID(This,pulHelpID)

#define IAgentCommandsEx_SetFontName(This,bszFontName)	\
    (This)->lpVtbl -> SetFontName(This,bszFontName)

#define IAgentCommandsEx_GetFontName(This,pbszFontName)	\
    (This)->lpVtbl -> GetFontName(This,pbszFontName)

#define IAgentCommandsEx_SetFontSize(This,lFontSize)	\
    (This)->lpVtbl -> SetFontSize(This,lFontSize)

#define IAgentCommandsEx_GetFontSize(This,lFontSize)	\
    (This)->lpVtbl -> GetFontSize(This,lFontSize)

#define IAgentCommandsEx_SetVoiceCaption(This,bszVoiceCaption)	\
    (This)->lpVtbl -> SetVoiceCaption(This,bszVoiceCaption)

#define IAgentCommandsEx_GetVoiceCaption(This,bszVoiceCaption)	\
    (This)->lpVtbl -> GetVoiceCaption(This,bszVoiceCaption)

#define IAgentCommandsEx_AddEx(This,bszCaption,bszVoice,bszVoiceCaption,bEnabled,bVisible,ulHelpId,pdwID)	\
    (This)->lpVtbl -> AddEx(This,bszCaption,bszVoice,bszVoiceCaption,bEnabled,bVisible,ulHelpId,pdwID)

#define IAgentCommandsEx_InsertEx(This,bszCaption,bszVoice,bszVoiceCaption,bEnabled,bVisible,ulHelpId,dwRefID,bBefore,pdwID)	\
    (This)->lpVtbl -> InsertEx(This,bszCaption,bszVoice,bszVoiceCaption,bEnabled,bVisible,ulHelpId,dwRefID,bBefore,pdwID)

#define IAgentCommandsEx_SetGlobalVoiceCommandsEnabled(This,bEnable)	\
    (This)->lpVtbl -> SetGlobalVoiceCommandsEnabled(This,bEnable)

#define IAgentCommandsEx_GetGlobalVoiceCommandsEnabled(This,pbEnabled)	\
    (This)->lpVtbl -> GetGlobalVoiceCommandsEnabled(This,pbEnabled)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentCommandsEx_GetCommandEx_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [in] */ long dwCommandID,
    /* [out] */ IAgentCommandEx __RPC_FAR *__RPC_FAR *ppCommandEx);


void __RPC_STUB IAgentCommandsEx_GetCommandEx_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_SetDefaultID_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [in] */ long dwID);


void __RPC_STUB IAgentCommandsEx_SetDefaultID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_GetDefaultID_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pdwID);


void __RPC_STUB IAgentCommandsEx_GetDefaultID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_SetHelpContextID_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [in] */ long ulHelpID);


void __RPC_STUB IAgentCommandsEx_SetHelpContextID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_GetHelpContextID_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pulHelpID);


void __RPC_STUB IAgentCommandsEx_GetHelpContextID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_SetFontName_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [in] */ BSTR bszFontName);


void __RPC_STUB IAgentCommandsEx_SetFontName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_GetFontName_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszFontName);


void __RPC_STUB IAgentCommandsEx_GetFontName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_SetFontSize_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [in] */ long lFontSize);


void __RPC_STUB IAgentCommandsEx_SetFontSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_GetFontSize_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *lFontSize);


void __RPC_STUB IAgentCommandsEx_GetFontSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_SetVoiceCaption_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [in] */ BSTR bszVoiceCaption);


void __RPC_STUB IAgentCommandsEx_SetVoiceCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_GetVoiceCaption_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *bszVoiceCaption);


void __RPC_STUB IAgentCommandsEx_GetVoiceCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_AddEx_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [in] */ BSTR bszCaption,
    /* [in] */ BSTR bszVoice,
    /* [in] */ BSTR bszVoiceCaption,
    /* [in] */ long bEnabled,
    /* [in] */ long bVisible,
    /* [in] */ long ulHelpId,
    /* [out] */ long __RPC_FAR *pdwID);


void __RPC_STUB IAgentCommandsEx_AddEx_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_InsertEx_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [in] */ BSTR bszCaption,
    /* [in] */ BSTR bszVoice,
    /* [in] */ BSTR bszVoiceCaption,
    /* [in] */ long bEnabled,
    /* [in] */ long bVisible,
    /* [in] */ long ulHelpId,
    /* [in] */ long dwRefID,
    /* [in] */ long bBefore,
    /* [out] */ long __RPC_FAR *pdwID);


void __RPC_STUB IAgentCommandsEx_InsertEx_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_SetGlobalVoiceCommandsEnabled_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [in] */ long bEnable);


void __RPC_STUB IAgentCommandsEx_SetGlobalVoiceCommandsEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_GetGlobalVoiceCommandsEnabled_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbEnabled);


void __RPC_STUB IAgentCommandsEx_GetGlobalVoiceCommandsEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCommandsEx_INTERFACE_DEFINED__ */


#ifndef __IAgentCommandWindow_INTERFACE_DEFINED__
#define __IAgentCommandWindow_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCommandWindow
 * at Mon Aug 31 17:00:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentCommandWindow;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("6D0ECB23-9968-11D0-AC6E-00C04FD97575")
    IAgentCommandWindow : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetVisible( 
            /* [in] */ long bVisible) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVisible( 
            /* [out] */ long __RPC_FAR *pbVisible) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPosition( 
            /* [out] */ long __RPC_FAR *plLeft,
            /* [out] */ long __RPC_FAR *plTop) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSize( 
            /* [out] */ long __RPC_FAR *plWidth,
            /* [out] */ long __RPC_FAR *plHeight) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCommandWindowVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCommandWindow __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCommandWindow __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCommandWindow __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCommandWindow __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCommandWindow __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCommandWindow __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCommandWindow __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVisible )( 
            IAgentCommandWindow __RPC_FAR * This,
            /* [in] */ long bVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVisible )( 
            IAgentCommandWindow __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetPosition )( 
            IAgentCommandWindow __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plLeft,
            /* [out] */ long __RPC_FAR *plTop);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSize )( 
            IAgentCommandWindow __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plWidth,
            /* [out] */ long __RPC_FAR *plHeight);
        
        END_INTERFACE
    } IAgentCommandWindowVtbl;

    interface IAgentCommandWindow
    {
        CONST_VTBL struct IAgentCommandWindowVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCommandWindow_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCommandWindow_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCommandWindow_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCommandWindow_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCommandWindow_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCommandWindow_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCommandWindow_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCommandWindow_SetVisible(This,bVisible)	\
    (This)->lpVtbl -> SetVisible(This,bVisible)

#define IAgentCommandWindow_GetVisible(This,pbVisible)	\
    (This)->lpVtbl -> GetVisible(This,pbVisible)

#define IAgentCommandWindow_GetPosition(This,plLeft,plTop)	\
    (This)->lpVtbl -> GetPosition(This,plLeft,plTop)

#define IAgentCommandWindow_GetSize(This,plWidth,plHeight)	\
    (This)->lpVtbl -> GetSize(This,plWidth,plHeight)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentCommandWindow_SetVisible_Proxy( 
    IAgentCommandWindow __RPC_FAR * This,
    /* [in] */ long bVisible);


void __RPC_STUB IAgentCommandWindow_SetVisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandWindow_GetVisible_Proxy( 
    IAgentCommandWindow __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbVisible);


void __RPC_STUB IAgentCommandWindow_GetVisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandWindow_GetPosition_Proxy( 
    IAgentCommandWindow __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plLeft,
    /* [out] */ long __RPC_FAR *plTop);


void __RPC_STUB IAgentCommandWindow_GetPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandWindow_GetSize_Proxy( 
    IAgentCommandWindow __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plWidth,
    /* [out] */ long __RPC_FAR *plHeight);


void __RPC_STUB IAgentCommandWindow_GetSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCommandWindow_INTERFACE_DEFINED__ */


#ifndef __IAgentSpeechInputProperties_INTERFACE_DEFINED__
#define __IAgentSpeechInputProperties_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentSpeechInputProperties
 * at Mon Aug 31 17:00:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentSpeechInputProperties;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("A7B93C87-7B81-11D0-AC5F-00C04FD97575")
    IAgentSpeechInputProperties : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetInstalled( 
            /* [out] */ long __RPC_FAR *pbInstalled) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEnabled( 
            /* [out] */ long __RPC_FAR *pbEnabled) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetHotKey( 
            /* [out] */ BSTR __RPC_FAR *pbszHotCharKey) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLCID( 
            /* [out] */ LCID __RPC_FAR *plcidCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEngine( 
            /* [out] */ BSTR __RPC_FAR *pbszEngine) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetEngine( 
            /* [in] */ BSTR bszEngine) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetListeningTip( 
            /* [out] */ long __RPC_FAR *pbListeningTip) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentSpeechInputPropertiesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentSpeechInputProperties __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentSpeechInputProperties __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentSpeechInputProperties __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentSpeechInputProperties __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentSpeechInputProperties __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentSpeechInputProperties __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentSpeechInputProperties __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetInstalled )( 
            IAgentSpeechInputProperties __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbInstalled);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetEnabled )( 
            IAgentSpeechInputProperties __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbEnabled);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetHotKey )( 
            IAgentSpeechInputProperties __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszHotCharKey);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetLCID )( 
            IAgentSpeechInputProperties __RPC_FAR * This,
            /* [out] */ LCID __RPC_FAR *plcidCurrent);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetEngine )( 
            IAgentSpeechInputProperties __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszEngine);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetEngine )( 
            IAgentSpeechInputProperties __RPC_FAR * This,
            /* [in] */ BSTR bszEngine);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetListeningTip )( 
            IAgentSpeechInputProperties __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbListeningTip);
        
        END_INTERFACE
    } IAgentSpeechInputPropertiesVtbl;

    interface IAgentSpeechInputProperties
    {
        CONST_VTBL struct IAgentSpeechInputPropertiesVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentSpeechInputProperties_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentSpeechInputProperties_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentSpeechInputProperties_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentSpeechInputProperties_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentSpeechInputProperties_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentSpeechInputProperties_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentSpeechInputProperties_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentSpeechInputProperties_GetInstalled(This,pbInstalled)	\
    (This)->lpVtbl -> GetInstalled(This,pbInstalled)

#define IAgentSpeechInputProperties_GetEnabled(This,pbEnabled)	\
    (This)->lpVtbl -> GetEnabled(This,pbEnabled)

#define IAgentSpeechInputProperties_GetHotKey(This,pbszHotCharKey)	\
    (This)->lpVtbl -> GetHotKey(This,pbszHotCharKey)

#define IAgentSpeechInputProperties_GetLCID(This,plcidCurrent)	\
    (This)->lpVtbl -> GetLCID(This,plcidCurrent)

#define IAgentSpeechInputProperties_GetEngine(This,pbszEngine)	\
    (This)->lpVtbl -> GetEngine(This,pbszEngine)

#define IAgentSpeechInputProperties_SetEngine(This,bszEngine)	\
    (This)->lpVtbl -> SetEngine(This,bszEngine)

#define IAgentSpeechInputProperties_GetListeningTip(This,pbListeningTip)	\
    (This)->lpVtbl -> GetListeningTip(This,pbListeningTip)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentSpeechInputProperties_GetInstalled_Proxy( 
    IAgentSpeechInputProperties __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbInstalled);


void __RPC_STUB IAgentSpeechInputProperties_GetInstalled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentSpeechInputProperties_GetEnabled_Proxy( 
    IAgentSpeechInputProperties __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbEnabled);


void __RPC_STUB IAgentSpeechInputProperties_GetEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentSpeechInputProperties_GetHotKey_Proxy( 
    IAgentSpeechInputProperties __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszHotCharKey);


void __RPC_STUB IAgentSpeechInputProperties_GetHotKey_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentSpeechInputProperties_GetLCID_Proxy( 
    IAgentSpeechInputProperties __RPC_FAR * This,
    /* [out] */ LCID __RPC_FAR *plcidCurrent);


void __RPC_STUB IAgentSpeechInputProperties_GetLCID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentSpeechInputProperties_GetEngine_Proxy( 
    IAgentSpeechInputProperties __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszEngine);


void __RPC_STUB IAgentSpeechInputProperties_GetEngine_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentSpeechInputProperties_SetEngine_Proxy( 
    IAgentSpeechInputProperties __RPC_FAR * This,
    /* [in] */ BSTR bszEngine);


void __RPC_STUB IAgentSpeechInputProperties_SetEngine_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentSpeechInputProperties_GetListeningTip_Proxy( 
    IAgentSpeechInputProperties __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbListeningTip);


void __RPC_STUB IAgentSpeechInputProperties_GetListeningTip_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentSpeechInputProperties_INTERFACE_DEFINED__ */


#ifndef __IAgentAudioOutputProperties_INTERFACE_DEFINED__
#define __IAgentAudioOutputProperties_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentAudioOutputProperties
 * at Mon Aug 31 17:00:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentAudioOutputProperties;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("A7B93C89-7B81-11D0-AC5F-00C04FD97575")
    IAgentAudioOutputProperties : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetEnabled( 
            /* [out] */ long __RPC_FAR *pbEnabled) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetUsingSoundEffects( 
            /* [out] */ long __RPC_FAR *pbUsingSoundEffects) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentAudioOutputPropertiesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentAudioOutputProperties __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentAudioOutputProperties __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentAudioOutputProperties __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentAudioOutputProperties __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentAudioOutputProperties __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentAudioOutputProperties __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentAudioOutputProperties __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetEnabled )( 
            IAgentAudioOutputProperties __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbEnabled);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetUsingSoundEffects )( 
            IAgentAudioOutputProperties __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbUsingSoundEffects);
        
        END_INTERFACE
    } IAgentAudioOutputPropertiesVtbl;

    interface IAgentAudioOutputProperties
    {
        CONST_VTBL struct IAgentAudioOutputPropertiesVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentAudioOutputProperties_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentAudioOutputProperties_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentAudioOutputProperties_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentAudioOutputProperties_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentAudioOutputProperties_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentAudioOutputProperties_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentAudioOutputProperties_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentAudioOutputProperties_GetEnabled(This,pbEnabled)	\
    (This)->lpVtbl -> GetEnabled(This,pbEnabled)

#define IAgentAudioOutputProperties_GetUsingSoundEffects(This,pbUsingSoundEffects)	\
    (This)->lpVtbl -> GetUsingSoundEffects(This,pbUsingSoundEffects)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentAudioOutputProperties_GetEnabled_Proxy( 
    IAgentAudioOutputProperties __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbEnabled);


void __RPC_STUB IAgentAudioOutputProperties_GetEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentAudioOutputProperties_GetUsingSoundEffects_Proxy( 
    IAgentAudioOutputProperties __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbUsingSoundEffects);


void __RPC_STUB IAgentAudioOutputProperties_GetUsingSoundEffects_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentAudioOutputProperties_INTERFACE_DEFINED__ */


#ifndef __IAgentAudioOutputPropertiesEx_INTERFACE_DEFINED__
#define __IAgentAudioOutputPropertiesEx_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentAudioOutputPropertiesEx
 * at Mon Aug 31 17:00:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentAudioOutputPropertiesEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("A7B93CA0-7B81-11D0-AC5F-00C04FD97575")
    IAgentAudioOutputPropertiesEx : public IAgentAudioOutputProperties
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetStatus( 
            /* [out] */ long __RPC_FAR *plStatus) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentAudioOutputPropertiesExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentAudioOutputPropertiesEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentAudioOutputPropertiesEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentAudioOutputPropertiesEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentAudioOutputPropertiesEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentAudioOutputPropertiesEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentAudioOutputPropertiesEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentAudioOutputPropertiesEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetEnabled )( 
            IAgentAudioOutputPropertiesEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbEnabled);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetUsingSoundEffects )( 
            IAgentAudioOutputPropertiesEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbUsingSoundEffects);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetStatus )( 
            IAgentAudioOutputPropertiesEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plStatus);
        
        END_INTERFACE
    } IAgentAudioOutputPropertiesExVtbl;

    interface IAgentAudioOutputPropertiesEx
    {
        CONST_VTBL struct IAgentAudioOutputPropertiesExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentAudioOutputPropertiesEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentAudioOutputPropertiesEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentAudioOutputPropertiesEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentAudioOutputPropertiesEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentAudioOutputPropertiesEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentAudioOutputPropertiesEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentAudioOutputPropertiesEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentAudioOutputPropertiesEx_GetEnabled(This,pbEnabled)	\
    (This)->lpVtbl -> GetEnabled(This,pbEnabled)

#define IAgentAudioOutputPropertiesEx_GetUsingSoundEffects(This,pbUsingSoundEffects)	\
    (This)->lpVtbl -> GetUsingSoundEffects(This,pbUsingSoundEffects)


#define IAgentAudioOutputPropertiesEx_GetStatus(This,plStatus)	\
    (This)->lpVtbl -> GetStatus(This,plStatus)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentAudioOutputPropertiesEx_GetStatus_Proxy( 
    IAgentAudioOutputPropertiesEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plStatus);


void __RPC_STUB IAgentAudioOutputPropertiesEx_GetStatus_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentAudioOutputPropertiesEx_INTERFACE_DEFINED__ */


#ifndef __IAgentPropertySheet_INTERFACE_DEFINED__
#define __IAgentPropertySheet_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentPropertySheet
 * at Mon Aug 31 17:00:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentPropertySheet;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("A7B93C8B-7B81-11D0-AC5F-00C04FD97575")
    IAgentPropertySheet : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetVisible( 
            /* [out] */ long __RPC_FAR *pbVisible) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetVisible( 
            /* [in] */ long bVisible) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPosition( 
            /* [out] */ long __RPC_FAR *plLeft,
            /* [out] */ long __RPC_FAR *plTop) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSize( 
            /* [out] */ long __RPC_FAR *plWidth,
            /* [out] */ long __RPC_FAR *plHeight) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPage( 
            /* [out] */ BSTR __RPC_FAR *pbszPage) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetPage( 
            /* [in] */ BSTR bszPage) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentPropertySheetVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentPropertySheet __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentPropertySheet __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentPropertySheet __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentPropertySheet __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentPropertySheet __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentPropertySheet __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentPropertySheet __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVisible )( 
            IAgentPropertySheet __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVisible )( 
            IAgentPropertySheet __RPC_FAR * This,
            /* [in] */ long bVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetPosition )( 
            IAgentPropertySheet __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plLeft,
            /* [out] */ long __RPC_FAR *plTop);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSize )( 
            IAgentPropertySheet __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plWidth,
            /* [out] */ long __RPC_FAR *plHeight);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetPage )( 
            IAgentPropertySheet __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszPage);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetPage )( 
            IAgentPropertySheet __RPC_FAR * This,
            /* [in] */ BSTR bszPage);
        
        END_INTERFACE
    } IAgentPropertySheetVtbl;

    interface IAgentPropertySheet
    {
        CONST_VTBL struct IAgentPropertySheetVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentPropertySheet_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentPropertySheet_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentPropertySheet_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentPropertySheet_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentPropertySheet_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentPropertySheet_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentPropertySheet_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentPropertySheet_GetVisible(This,pbVisible)	\
    (This)->lpVtbl -> GetVisible(This,pbVisible)

#define IAgentPropertySheet_SetVisible(This,bVisible)	\
    (This)->lpVtbl -> SetVisible(This,bVisible)

#define IAgentPropertySheet_GetPosition(This,plLeft,plTop)	\
    (This)->lpVtbl -> GetPosition(This,plLeft,plTop)

#define IAgentPropertySheet_GetSize(This,plWidth,plHeight)	\
    (This)->lpVtbl -> GetSize(This,plWidth,plHeight)

#define IAgentPropertySheet_GetPage(This,pbszPage)	\
    (This)->lpVtbl -> GetPage(This,pbszPage)

#define IAgentPropertySheet_SetPage(This,bszPage)	\
    (This)->lpVtbl -> SetPage(This,bszPage)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentPropertySheet_GetVisible_Proxy( 
    IAgentPropertySheet __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbVisible);


void __RPC_STUB IAgentPropertySheet_GetVisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentPropertySheet_SetVisible_Proxy( 
    IAgentPropertySheet __RPC_FAR * This,
    /* [in] */ long bVisible);


void __RPC_STUB IAgentPropertySheet_SetVisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentPropertySheet_GetPosition_Proxy( 
    IAgentPropertySheet __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plLeft,
    /* [out] */ long __RPC_FAR *plTop);


void __RPC_STUB IAgentPropertySheet_GetPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentPropertySheet_GetSize_Proxy( 
    IAgentPropertySheet __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plWidth,
    /* [out] */ long __RPC_FAR *plHeight);


void __RPC_STUB IAgentPropertySheet_GetSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentPropertySheet_GetPage_Proxy( 
    IAgentPropertySheet __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszPage);


void __RPC_STUB IAgentPropertySheet_GetPage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentPropertySheet_SetPage_Proxy( 
    IAgentPropertySheet __RPC_FAR * This,
    /* [in] */ BSTR bszPage);


void __RPC_STUB IAgentPropertySheet_SetPage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentPropertySheet_INTERFACE_DEFINED__ */


#ifndef __IAgentBalloon_INTERFACE_DEFINED__
#define __IAgentBalloon_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentBalloon
 * at Mon Aug 31 17:00:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentBalloon;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("A7B93C8D-7B81-11D0-AC5F-00C04FD97575")
    IAgentBalloon : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetEnabled( 
            /* [out] */ long __RPC_FAR *pbEnabled) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNumLines( 
            /* [out] */ long __RPC_FAR *plLines) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNumCharsPerLine( 
            /* [out] */ long __RPC_FAR *plCharsPerLine) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFontName( 
            /* [out] */ BSTR __RPC_FAR *pbszFontName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFontSize( 
            /* [out] */ long __RPC_FAR *plFontSize) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFontBold( 
            /* [out] */ long __RPC_FAR *pbFontBold) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFontItalic( 
            /* [out] */ long __RPC_FAR *pbFontItalic) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFontStrikethru( 
            /* [out] */ long __RPC_FAR *pbFontStrikethru) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFontUnderline( 
            /* [out] */ long __RPC_FAR *pbFontUnderline) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetForeColor( 
            /* [out] */ long __RPC_FAR *plFGColor) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetBackColor( 
            /* [out] */ long __RPC_FAR *plBGColor) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetBorderColor( 
            /* [out] */ long __RPC_FAR *plBorderColor) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetVisible( 
            /* [in] */ long bVisible) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVisible( 
            /* [out] */ long __RPC_FAR *pbVisible) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetFontName( 
            /* [in] */ BSTR bszFontName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetFontSize( 
            /* [in] */ long lFontSize) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetFontCharSet( 
            /* [in] */ short sFontCharSet) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFontCharSet( 
            /* [out] */ short __RPC_FAR *psFontCharSet) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentBalloonVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentBalloon __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentBalloon __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentBalloon __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentBalloon __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentBalloon __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentBalloon __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetEnabled )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbEnabled);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetNumLines )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plLines);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetNumCharsPerLine )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plCharsPerLine);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontName )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszFontName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontSize )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plFontSize);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontBold )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbFontBold);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontItalic )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbFontItalic);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontStrikethru )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbFontStrikethru);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontUnderline )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbFontUnderline);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetForeColor )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plFGColor);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetBackColor )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plBGColor);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetBorderColor )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plBorderColor);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVisible )( 
            IAgentBalloon __RPC_FAR * This,
            /* [in] */ long bVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVisible )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFontName )( 
            IAgentBalloon __RPC_FAR * This,
            /* [in] */ BSTR bszFontName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFontSize )( 
            IAgentBalloon __RPC_FAR * This,
            /* [in] */ long lFontSize);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFontCharSet )( 
            IAgentBalloon __RPC_FAR * This,
            /* [in] */ short sFontCharSet);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontCharSet )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ short __RPC_FAR *psFontCharSet);
        
        END_INTERFACE
    } IAgentBalloonVtbl;

    interface IAgentBalloon
    {
        CONST_VTBL struct IAgentBalloonVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentBalloon_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentBalloon_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentBalloon_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentBalloon_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentBalloon_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentBalloon_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentBalloon_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentBalloon_GetEnabled(This,pbEnabled)	\
    (This)->lpVtbl -> GetEnabled(This,pbEnabled)

#define IAgentBalloon_GetNumLines(This,plLines)	\
    (This)->lpVtbl -> GetNumLines(This,plLines)

#define IAgentBalloon_GetNumCharsPerLine(This,plCharsPerLine)	\
    (This)->lpVtbl -> GetNumCharsPerLine(This,plCharsPerLine)

#define IAgentBalloon_GetFontName(This,pbszFontName)	\
    (This)->lpVtbl -> GetFontName(This,pbszFontName)

#define IAgentBalloon_GetFontSize(This,plFontSize)	\
    (This)->lpVtbl -> GetFontSize(This,plFontSize)

#define IAgentBalloon_GetFontBold(This,pbFontBold)	\
    (This)->lpVtbl -> GetFontBold(This,pbFontBold)

#define IAgentBalloon_GetFontItalic(This,pbFontItalic)	\
    (This)->lpVtbl -> GetFontItalic(This,pbFontItalic)

#define IAgentBalloon_GetFontStrikethru(This,pbFontStrikethru)	\
    (This)->lpVtbl -> GetFontStrikethru(This,pbFontStrikethru)

#define IAgentBalloon_GetFontUnderline(This,pbFontUnderline)	\
    (This)->lpVtbl -> GetFontUnderline(This,pbFontUnderline)

#define IAgentBalloon_GetForeColor(This,plFGColor)	\
    (This)->lpVtbl -> GetForeColor(This,plFGColor)

#define IAgentBalloon_GetBackColor(This,plBGColor)	\
    (This)->lpVtbl -> GetBackColor(This,plBGColor)

#define IAgentBalloon_GetBorderColor(This,plBorderColor)	\
    (This)->lpVtbl -> GetBorderColor(This,plBorderColor)

#define IAgentBalloon_SetVisible(This,bVisible)	\
    (This)->lpVtbl -> SetVisible(This,bVisible)

#define IAgentBalloon_GetVisible(This,pbVisible)	\
    (This)->lpVtbl -> GetVisible(This,pbVisible)

#define IAgentBalloon_SetFontName(This,bszFontName)	\
    (This)->lpVtbl -> SetFontName(This,bszFontName)

#define IAgentBalloon_SetFontSize(This,lFontSize)	\
    (This)->lpVtbl -> SetFontSize(This,lFontSize)

#define IAgentBalloon_SetFontCharSet(This,sFontCharSet)	\
    (This)->lpVtbl -> SetFontCharSet(This,sFontCharSet)

#define IAgentBalloon_GetFontCharSet(This,psFontCharSet)	\
    (This)->lpVtbl -> GetFontCharSet(This,psFontCharSet)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentBalloon_GetEnabled_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbEnabled);


void __RPC_STUB IAgentBalloon_GetEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetNumLines_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plLines);


void __RPC_STUB IAgentBalloon_GetNumLines_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetNumCharsPerLine_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plCharsPerLine);


void __RPC_STUB IAgentBalloon_GetNumCharsPerLine_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetFontName_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszFontName);


void __RPC_STUB IAgentBalloon_GetFontName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetFontSize_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plFontSize);


void __RPC_STUB IAgentBalloon_GetFontSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetFontBold_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbFontBold);


void __RPC_STUB IAgentBalloon_GetFontBold_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetFontItalic_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbFontItalic);


void __RPC_STUB IAgentBalloon_GetFontItalic_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetFontStrikethru_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbFontStrikethru);


void __RPC_STUB IAgentBalloon_GetFontStrikethru_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetFontUnderline_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbFontUnderline);


void __RPC_STUB IAgentBalloon_GetFontUnderline_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetForeColor_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plFGColor);


void __RPC_STUB IAgentBalloon_GetForeColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetBackColor_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plBGColor);


void __RPC_STUB IAgentBalloon_GetBackColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetBorderColor_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plBorderColor);


void __RPC_STUB IAgentBalloon_GetBorderColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_SetVisible_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [in] */ long bVisible);


void __RPC_STUB IAgentBalloon_SetVisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetVisible_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbVisible);


void __RPC_STUB IAgentBalloon_GetVisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_SetFontName_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [in] */ BSTR bszFontName);


void __RPC_STUB IAgentBalloon_SetFontName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_SetFontSize_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [in] */ long lFontSize);


void __RPC_STUB IAgentBalloon_SetFontSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_SetFontCharSet_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [in] */ short sFontCharSet);


void __RPC_STUB IAgentBalloon_SetFontCharSet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetFontCharSet_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ short __RPC_FAR *psFontCharSet);


void __RPC_STUB IAgentBalloon_GetFontCharSet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentBalloon_INTERFACE_DEFINED__ */


#ifndef __IAgentBalloonEx_INTERFACE_DEFINED__
#define __IAgentBalloonEx_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentBalloonEx
 * at Mon Aug 31 17:00:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentBalloonEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("D7A6D440-8872-11d1-9EC6-00C04FD7081F")
    IAgentBalloonEx : public IAgentBalloon
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetStyle( 
            /* [in] */ long lStyle) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetStyle( 
            /* [out] */ long __RPC_FAR *plStyle) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetNumLines( 
            /* [in] */ long lLines) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetNumCharsPerLine( 
            /* [in] */ long lCharsPerLine) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentBalloonExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentBalloonEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentBalloonEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetEnabled )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbEnabled);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetNumLines )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plLines);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetNumCharsPerLine )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plCharsPerLine);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontName )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszFontName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontSize )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plFontSize);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontBold )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbFontBold);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontItalic )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbFontItalic);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontStrikethru )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbFontStrikethru);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontUnderline )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbFontUnderline);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetForeColor )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plFGColor);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetBackColor )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plBGColor);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetBorderColor )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plBorderColor);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVisible )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [in] */ long bVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVisible )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFontName )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [in] */ BSTR bszFontName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFontSize )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [in] */ long lFontSize);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFontCharSet )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [in] */ short sFontCharSet);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontCharSet )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ short __RPC_FAR *psFontCharSet);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetStyle )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [in] */ long lStyle);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetStyle )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plStyle);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetNumLines )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [in] */ long lLines);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetNumCharsPerLine )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [in] */ long lCharsPerLine);
        
        END_INTERFACE
    } IAgentBalloonExVtbl;

    interface IAgentBalloonEx
    {
        CONST_VTBL struct IAgentBalloonExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentBalloonEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentBalloonEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentBalloonEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentBalloonEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentBalloonEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentBalloonEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentBalloonEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentBalloonEx_GetEnabled(This,pbEnabled)	\
    (This)->lpVtbl -> GetEnabled(This,pbEnabled)

#define IAgentBalloonEx_GetNumLines(This,plLines)	\
    (This)->lpVtbl -> GetNumLines(This,plLines)

#define IAgentBalloonEx_GetNumCharsPerLine(This,plCharsPerLine)	\
    (This)->lpVtbl -> GetNumCharsPerLine(This,plCharsPerLine)

#define IAgentBalloonEx_GetFontName(This,pbszFontName)	\
    (This)->lpVtbl -> GetFontName(This,pbszFontName)

#define IAgentBalloonEx_GetFontSize(This,plFontSize)	\
    (This)->lpVtbl -> GetFontSize(This,plFontSize)

#define IAgentBalloonEx_GetFontBold(This,pbFontBold)	\
    (This)->lpVtbl -> GetFontBold(This,pbFontBold)

#define IAgentBalloonEx_GetFontItalic(This,pbFontItalic)	\
    (This)->lpVtbl -> GetFontItalic(This,pbFontItalic)

#define IAgentBalloonEx_GetFontStrikethru(This,pbFontStrikethru)	\
    (This)->lpVtbl -> GetFontStrikethru(This,pbFontStrikethru)

#define IAgentBalloonEx_GetFontUnderline(This,pbFontUnderline)	\
    (This)->lpVtbl -> GetFontUnderline(This,pbFontUnderline)

#define IAgentBalloonEx_GetForeColor(This,plFGColor)	\
    (This)->lpVtbl -> GetForeColor(This,plFGColor)

#define IAgentBalloonEx_GetBackColor(This,plBGColor)	\
    (This)->lpVtbl -> GetBackColor(This,plBGColor)

#define IAgentBalloonEx_GetBorderColor(This,plBorderColor)	\
    (This)->lpVtbl -> GetBorderColor(This,plBorderColor)

#define IAgentBalloonEx_SetVisible(This,bVisible)	\
    (This)->lpVtbl -> SetVisible(This,bVisible)

#define IAgentBalloonEx_GetVisible(This,pbVisible)	\
    (This)->lpVtbl -> GetVisible(This,pbVisible)

#define IAgentBalloonEx_SetFontName(This,bszFontName)	\
    (This)->lpVtbl -> SetFontName(This,bszFontName)

#define IAgentBalloonEx_SetFontSize(This,lFontSize)	\
    (This)->lpVtbl -> SetFontSize(This,lFontSize)

#define IAgentBalloonEx_SetFontCharSet(This,sFontCharSet)	\
    (This)->lpVtbl -> SetFontCharSet(This,sFontCharSet)

#define IAgentBalloonEx_GetFontCharSet(This,psFontCharSet)	\
    (This)->lpVtbl -> GetFontCharSet(This,psFontCharSet)


#define IAgentBalloonEx_SetStyle(This,lStyle)	\
    (This)->lpVtbl -> SetStyle(This,lStyle)

#define IAgentBalloonEx_GetStyle(This,plStyle)	\
    (This)->lpVtbl -> GetStyle(This,plStyle)

#define IAgentBalloonEx_SetNumLines(This,lLines)	\
    (This)->lpVtbl -> SetNumLines(This,lLines)

#define IAgentBalloonEx_SetNumCharsPerLine(This,lCharsPerLine)	\
    (This)->lpVtbl -> SetNumCharsPerLine(This,lCharsPerLine)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentBalloonEx_SetStyle_Proxy( 
    IAgentBalloonEx __RPC_FAR * This,
    /* [in] */ long lStyle);


void __RPC_STUB IAgentBalloonEx_SetStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloonEx_GetStyle_Proxy( 
    IAgentBalloonEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plStyle);


void __RPC_STUB IAgentBalloonEx_GetStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloonEx_SetNumLines_Proxy( 
    IAgentBalloonEx __RPC_FAR * This,
    /* [in] */ long lLines);


void __RPC_STUB IAgentBalloonEx_SetNumLines_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloonEx_SetNumCharsPerLine_Proxy( 
    IAgentBalloonEx __RPC_FAR * This,
    /* [in] */ long lCharsPerLine);


void __RPC_STUB IAgentBalloonEx_SetNumCharsPerLine_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentBalloonEx_INTERFACE_DEFINED__ */


#ifndef __IAgentCharacter_INTERFACE_DEFINED__
#define __IAgentCharacter_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCharacter
 * at Mon Aug 31 17:00:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentCharacter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("A7B93C8F-7B81-11D0-AC5F-00C04FD97575")
    IAgentCharacter : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetVisible( 
            /* [out] */ long __RPC_FAR *pbVisible) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetPosition( 
            /* [in] */ long lLeft,
            /* [in] */ long lTop) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPosition( 
            /* [out] */ long __RPC_FAR *plLeft,
            /* [out] */ long __RPC_FAR *plTop) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetSize( 
            /* [in] */ long lWidth,
            /* [in] */ long lHeight) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSize( 
            /* [out] */ long __RPC_FAR *plWidth,
            /* [out] */ long __RPC_FAR *plHeight) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetName( 
            /* [out] */ BSTR __RPC_FAR *pbszName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDescription( 
            /* [out] */ BSTR __RPC_FAR *pbszDescription) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTTSSpeed( 
            /* [out] */ long __RPC_FAR *pdwSpeed) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTTSPitch( 
            /* [out] */ short __RPC_FAR *pwPitch) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Activate( 
            /* [in] */ short sState) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetIdleOn( 
            /* [in] */ long bOn) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetIdleOn( 
            /* [out] */ long __RPC_FAR *pbOn) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Prepare( 
            /* [in] */ long dwType,
            /* [in] */ BSTR bszName,
            /* [in] */ long bQueue,
            /* [out] */ long __RPC_FAR *pdwReqID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Play( 
            /* [in] */ BSTR bszAnimation,
            /* [out] */ long __RPC_FAR *pdwReqID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Stop( 
            /* [in] */ long dwReqID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE StopAll( 
            /* [in] */ long lTypes) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Wait( 
            /* [in] */ long dwReqID,
            /* [out] */ long __RPC_FAR *pdwReqID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Interrupt( 
            /* [in] */ long dwReqID,
            /* [out] */ long __RPC_FAR *pdwReqID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Show( 
            /* [in] */ long bFast,
            /* [out] */ long __RPC_FAR *pdwReqID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Hide( 
            /* [in] */ long bFast,
            /* [out] */ long __RPC_FAR *pdwReqID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Speak( 
            /* [in] */ BSTR bszText,
            /* [in] */ BSTR bszUrl,
            /* [out] */ long __RPC_FAR *pdwReqID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveTo( 
            /* [in] */ short x,
            /* [in] */ short y,
            /* [in] */ long lSpeed,
            /* [out] */ long __RPC_FAR *pdwReqID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GestureAt( 
            /* [in] */ short x,
            /* [in] */ short y,
            /* [out] */ long __RPC_FAR *pdwReqID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMoveCause( 
            /* [out] */ long __RPC_FAR *pdwCause) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVisibilityCause( 
            /* [out] */ long __RPC_FAR *pdwCause) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE HasOtherClients( 
            /* [out] */ long __RPC_FAR *plNumOtherClients) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetSoundEffectsOn( 
            /* [in] */ long bOn) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSoundEffectsOn( 
            /* [out] */ long __RPC_FAR *pbOn) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetName( 
            /* [in] */ BSTR bszName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetDescription( 
            /* [in] */ BSTR bszDescription) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetExtraData( 
            /* [out] */ BSTR __RPC_FAR *pbszExtraData) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCharacterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCharacter __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCharacter __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVisible )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetPosition )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ long lLeft,
            /* [in] */ long lTop);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetPosition )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plLeft,
            /* [out] */ long __RPC_FAR *plTop);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetSize )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ long lWidth,
            /* [in] */ long lHeight);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSize )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plWidth,
            /* [out] */ long __RPC_FAR *plHeight);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetName )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetDescription )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszDescription);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTTSSpeed )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pdwSpeed);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTTSPitch )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ short __RPC_FAR *pwPitch);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Activate )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ short sState);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetIdleOn )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ long bOn);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIdleOn )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbOn);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Prepare )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ long dwType,
            /* [in] */ BSTR bszName,
            /* [in] */ long bQueue,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Play )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ BSTR bszAnimation,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Stop )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ long dwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *StopAll )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ long lTypes);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Wait )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ long dwReqID,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Interrupt )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ long dwReqID,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Show )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ long bFast,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Hide )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ long bFast,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Speak )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ BSTR bszText,
            /* [in] */ BSTR bszUrl,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *MoveTo )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ short x,
            /* [in] */ short y,
            /* [in] */ long lSpeed,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GestureAt )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ short x,
            /* [in] */ short y,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetMoveCause )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pdwCause);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVisibilityCause )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pdwCause);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *HasOtherClients )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plNumOtherClients);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetSoundEffectsOn )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ long bOn);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSoundEffectsOn )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbOn);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetName )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ BSTR bszName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetDescription )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ BSTR bszDescription);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetExtraData )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszExtraData);
        
        END_INTERFACE
    } IAgentCharacterVtbl;

    interface IAgentCharacter
    {
        CONST_VTBL struct IAgentCharacterVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCharacter_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCharacter_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCharacter_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCharacter_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCharacter_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCharacter_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCharacter_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCharacter_GetVisible(This,pbVisible)	\
    (This)->lpVtbl -> GetVisible(This,pbVisible)

#define IAgentCharacter_SetPosition(This,lLeft,lTop)	\
    (This)->lpVtbl -> SetPosition(This,lLeft,lTop)

#define IAgentCharacter_GetPosition(This,plLeft,plTop)	\
    (This)->lpVtbl -> GetPosition(This,plLeft,plTop)

#define IAgentCharacter_SetSize(This,lWidth,lHeight)	\
    (This)->lpVtbl -> SetSize(This,lWidth,lHeight)

#define IAgentCharacter_GetSize(This,plWidth,plHeight)	\
    (This)->lpVtbl -> GetSize(This,plWidth,plHeight)

#define IAgentCharacter_GetName(This,pbszName)	\
    (This)->lpVtbl -> GetName(This,pbszName)

#define IAgentCharacter_GetDescription(This,pbszDescription)	\
    (This)->lpVtbl -> GetDescription(This,pbszDescription)

#define IAgentCharacter_GetTTSSpeed(This,pdwSpeed)	\
    (This)->lpVtbl -> GetTTSSpeed(This,pdwSpeed)

#define IAgentCharacter_GetTTSPitch(This,pwPitch)	\
    (This)->lpVtbl -> GetTTSPitch(This,pwPitch)

#define IAgentCharacter_Activate(This,sState)	\
    (This)->lpVtbl -> Activate(This,sState)

#define IAgentCharacter_SetIdleOn(This,bOn)	\
    (This)->lpVtbl -> SetIdleOn(This,bOn)

#define IAgentCharacter_GetIdleOn(This,pbOn)	\
    (This)->lpVtbl -> GetIdleOn(This,pbOn)

#define IAgentCharacter_Prepare(This,dwType,bszName,bQueue,pdwReqID)	\
    (This)->lpVtbl -> Prepare(This,dwType,bszName,bQueue,pdwReqID)

#define IAgentCharacter_Play(This,bszAnimation,pdwReqID)	\
    (This)->lpVtbl -> Play(This,bszAnimation,pdwReqID)

#define IAgentCharacter_Stop(This,dwReqID)	\
    (This)->lpVtbl -> Stop(This,dwReqID)

#define IAgentCharacter_StopAll(This,lTypes)	\
    (This)->lpVtbl -> StopAll(This,lTypes)

#define IAgentCharacter_Wait(This,dwReqID,pdwReqID)	\
    (This)->lpVtbl -> Wait(This,dwReqID,pdwReqID)

#define IAgentCharacter_Interrupt(This,dwReqID,pdwReqID)	\
    (This)->lpVtbl -> Interrupt(This,dwReqID,pdwReqID)

#define IAgentCharacter_Show(This,bFast,pdwReqID)	\
    (This)->lpVtbl -> Show(This,bFast,pdwReqID)

#define IAgentCharacter_Hide(This,bFast,pdwReqID)	\
    (This)->lpVtbl -> Hide(This,bFast,pdwReqID)

#define IAgentCharacter_Speak(This,bszText,bszUrl,pdwReqID)	\
    (This)->lpVtbl -> Speak(This,bszText,bszUrl,pdwReqID)

#define IAgentCharacter_MoveTo(This,x,y,lSpeed,pdwReqID)	\
    (This)->lpVtbl -> MoveTo(This,x,y,lSpeed,pdwReqID)

#define IAgentCharacter_GestureAt(This,x,y,pdwReqID)	\
    (This)->lpVtbl -> GestureAt(This,x,y,pdwReqID)

#define IAgentCharacter_GetMoveCause(This,pdwCause)	\
    (This)->lpVtbl -> GetMoveCause(This,pdwCause)

#define IAgentCharacter_GetVisibilityCause(This,pdwCause)	\
    (This)->lpVtbl -> GetVisibilityCause(This,pdwCause)

#define IAgentCharacter_HasOtherClients(This,plNumOtherClients)	\
    (This)->lpVtbl -> HasOtherClients(This,plNumOtherClients)

#define IAgentCharacter_SetSoundEffectsOn(This,bOn)	\
    (This)->lpVtbl -> SetSoundEffectsOn(This,bOn)

#define IAgentCharacter_GetSoundEffectsOn(This,pbOn)	\
    (This)->lpVtbl -> GetSoundEffectsOn(This,pbOn)

#define IAgentCharacter_SetName(This,bszName)	\
    (This)->lpVtbl -> SetName(This,bszName)

#define IAgentCharacter_SetDescription(This,bszDescription)	\
    (This)->lpVtbl -> SetDescription(This,bszDescription)

#define IAgentCharacter_GetExtraData(This,pbszExtraData)	\
    (This)->lpVtbl -> GetExtraData(This,pbszExtraData)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentCharacter_GetVisible_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbVisible);


void __RPC_STUB IAgentCharacter_GetVisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_SetPosition_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ long lLeft,
    /* [in] */ long lTop);


void __RPC_STUB IAgentCharacter_SetPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_GetPosition_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plLeft,
    /* [out] */ long __RPC_FAR *plTop);


void __RPC_STUB IAgentCharacter_GetPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_SetSize_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ long lWidth,
    /* [in] */ long lHeight);


void __RPC_STUB IAgentCharacter_SetSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_GetSize_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plWidth,
    /* [out] */ long __RPC_FAR *plHeight);


void __RPC_STUB IAgentCharacter_GetSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_GetName_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszName);


void __RPC_STUB IAgentCharacter_GetName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_GetDescription_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszDescription);


void __RPC_STUB IAgentCharacter_GetDescription_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_GetTTSSpeed_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pdwSpeed);


void __RPC_STUB IAgentCharacter_GetTTSSpeed_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_GetTTSPitch_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ short __RPC_FAR *pwPitch);


void __RPC_STUB IAgentCharacter_GetTTSPitch_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_Activate_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ short sState);


void __RPC_STUB IAgentCharacter_Activate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_SetIdleOn_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ long bOn);


void __RPC_STUB IAgentCharacter_SetIdleOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_GetIdleOn_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbOn);


void __RPC_STUB IAgentCharacter_GetIdleOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_Prepare_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ long dwType,
    /* [in] */ BSTR bszName,
    /* [in] */ long bQueue,
    /* [out] */ long __RPC_FAR *pdwReqID);


void __RPC_STUB IAgentCharacter_Prepare_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_Play_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ BSTR bszAnimation,
    /* [out] */ long __RPC_FAR *pdwReqID);


void __RPC_STUB IAgentCharacter_Play_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_Stop_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ long dwReqID);


void __RPC_STUB IAgentCharacter_Stop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_StopAll_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ long lTypes);


void __RPC_STUB IAgentCharacter_StopAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_Wait_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ long dwReqID,
    /* [out] */ long __RPC_FAR *pdwReqID);


void __RPC_STUB IAgentCharacter_Wait_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_Interrupt_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ long dwReqID,
    /* [out] */ long __RPC_FAR *pdwReqID);


void __RPC_STUB IAgentCharacter_Interrupt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_Show_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ long bFast,
    /* [out] */ long __RPC_FAR *pdwReqID);


void __RPC_STUB IAgentCharacter_Show_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_Hide_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ long bFast,
    /* [out] */ long __RPC_FAR *pdwReqID);


void __RPC_STUB IAgentCharacter_Hide_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_Speak_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ BSTR bszText,
    /* [in] */ BSTR bszUrl,
    /* [out] */ long __RPC_FAR *pdwReqID);


void __RPC_STUB IAgentCharacter_Speak_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_MoveTo_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ short x,
    /* [in] */ short y,
    /* [in] */ long lSpeed,
    /* [out] */ long __RPC_FAR *pdwReqID);


void __RPC_STUB IAgentCharacter_MoveTo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_GestureAt_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ short x,
    /* [in] */ short y,
    /* [out] */ long __RPC_FAR *pdwReqID);


void __RPC_STUB IAgentCharacter_GestureAt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_GetMoveCause_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pdwCause);


void __RPC_STUB IAgentCharacter_GetMoveCause_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_GetVisibilityCause_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pdwCause);


void __RPC_STUB IAgentCharacter_GetVisibilityCause_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_HasOtherClients_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plNumOtherClients);


void __RPC_STUB IAgentCharacter_HasOtherClients_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_SetSoundEffectsOn_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ long bOn);


void __RPC_STUB IAgentCharacter_SetSoundEffectsOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_GetSoundEffectsOn_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbOn);


void __RPC_STUB IAgentCharacter_GetSoundEffectsOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_SetName_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ BSTR bszName);


void __RPC_STUB IAgentCharacter_SetName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_SetDescription_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ BSTR bszDescription);


void __RPC_STUB IAgentCharacter_SetDescription_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_GetExtraData_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszExtraData);


void __RPC_STUB IAgentCharacter_GetExtraData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCharacter_INTERFACE_DEFINED__ */


#ifndef __IAgentCharacterEx_INTERFACE_DEFINED__
#define __IAgentCharacterEx_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCharacterEx
 * at Mon Aug 31 17:00:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentCharacterEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("98BBE491-2EED-11d1-ACAC-00C04FD97575")
    IAgentCharacterEx : public IAgentCharacter
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE ShowPopupMenu( 
            /* [in] */ short x,
            /* [in] */ short y) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAutoPopupMenu( 
            /* [in] */ long bAutoPopupMenu) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAutoPopupMenu( 
            /* [out] */ long __RPC_FAR *pbAutoPopupMenu) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetHelpFileName( 
            /* [out] */ BSTR __RPC_FAR *pbszName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetHelpFileName( 
            /* [in] */ BSTR bszName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetHelpModeOn( 
            /* [in] */ long bHelpModeOn) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetHelpModeOn( 
            /* [out] */ long __RPC_FAR *pbHelpModeOn) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetHelpContextID( 
            /* [in] */ long ulID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetHelpContextID( 
            /* [out] */ long __RPC_FAR *pulID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetActive( 
            /* [out] */ short __RPC_FAR *psState) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Listen( 
            /* [in] */ long bListen) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetLanguageID( 
            /* [in] */ long langid) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLanguageID( 
            /* [out] */ long __RPC_FAR *plangid) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTTSModeID( 
            /* [out] */ BSTR __RPC_FAR *pbszModeID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetTTSModeID( 
            /* [in] */ BSTR bszModeID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSRModeID( 
            /* [out] */ BSTR __RPC_FAR *pbszModeID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetSRModeID( 
            /* [in] */ BSTR bszModeID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetGUID( 
            /* [out] */ BSTR __RPC_FAR *pbszID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetOriginalSize( 
            /* [out] */ long __RPC_FAR *plWidth,
            /* [out] */ long __RPC_FAR *plHeight) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Think( 
            /* [in] */ BSTR bszText,
            /* [out] */ long __RPC_FAR *pdwReqID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVersion( 
            /* [out] */ short __RPC_FAR *psMajor,
            /* [out] */ short __RPC_FAR *psMinor) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAnimationNames( 
            /* [out] */ IUnknown __RPC_FAR *__RPC_FAR *punkEnum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSRStatus( 
            /* [out] */ long __RPC_FAR *plStatus) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCharacterExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCharacterEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCharacterEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVisible )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetPosition )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long lLeft,
            /* [in] */ long lTop);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetPosition )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plLeft,
            /* [out] */ long __RPC_FAR *plTop);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetSize )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long lWidth,
            /* [in] */ long lHeight);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSize )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plWidth,
            /* [out] */ long __RPC_FAR *plHeight);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetName )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetDescription )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszDescription);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTTSSpeed )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pdwSpeed);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTTSPitch )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ short __RPC_FAR *pwPitch);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Activate )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ short sState);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetIdleOn )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long bOn);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIdleOn )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbOn);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Prepare )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long dwType,
            /* [in] */ BSTR bszName,
            /* [in] */ long bQueue,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Play )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR bszAnimation,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Stop )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long dwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *StopAll )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long lTypes);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Wait )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long dwReqID,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Interrupt )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long dwReqID,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Show )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long bFast,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Hide )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long bFast,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Speak )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR bszText,
            /* [in] */ BSTR bszUrl,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *MoveTo )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ short x,
            /* [in] */ short y,
            /* [in] */ long lSpeed,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GestureAt )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ short x,
            /* [in] */ short y,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetMoveCause )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pdwCause);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVisibilityCause )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pdwCause);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *HasOtherClients )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plNumOtherClients);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetSoundEffectsOn )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long bOn);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSoundEffectsOn )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbOn);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetName )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR bszName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetDescription )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR bszDescription);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetExtraData )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszExtraData);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ShowPopupMenu )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ short x,
            /* [in] */ short y);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetAutoPopupMenu )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long bAutoPopupMenu);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetAutoPopupMenu )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbAutoPopupMenu);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetHelpFileName )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetHelpFileName )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR bszName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetHelpModeOn )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long bHelpModeOn);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetHelpModeOn )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbHelpModeOn);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetHelpContextID )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long ulID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetHelpContextID )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pulID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetActive )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ short __RPC_FAR *psState);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Listen )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long bListen);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetLanguageID )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long langid);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetLanguageID )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plangid);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTTSModeID )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszModeID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetTTSModeID )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR bszModeID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSRModeID )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszModeID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetSRModeID )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR bszModeID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetGUID )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetOriginalSize )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plWidth,
            /* [out] */ long __RPC_FAR *plHeight);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Think )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR bszText,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVersion )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ short __RPC_FAR *psMajor,
            /* [out] */ short __RPC_FAR *psMinor);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetAnimationNames )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ IUnknown __RPC_FAR *__RPC_FAR *punkEnum);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSRStatus )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plStatus);
        
        END_INTERFACE
    } IAgentCharacterExVtbl;

    interface IAgentCharacterEx
    {
        CONST_VTBL struct IAgentCharacterExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCharacterEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCharacterEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCharacterEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCharacterEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCharacterEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCharacterEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCharacterEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCharacterEx_GetVisible(This,pbVisible)	\
    (This)->lpVtbl -> GetVisible(This,pbVisible)

#define IAgentCharacterEx_SetPosition(This,lLeft,lTop)	\
    (This)->lpVtbl -> SetPosition(This,lLeft,lTop)

#define IAgentCharacterEx_GetPosition(This,plLeft,plTop)	\
    (This)->lpVtbl -> GetPosition(This,plLeft,plTop)

#define IAgentCharacterEx_SetSize(This,lWidth,lHeight)	\
    (This)->lpVtbl -> SetSize(This,lWidth,lHeight)

#define IAgentCharacterEx_GetSize(This,plWidth,plHeight)	\
    (This)->lpVtbl -> GetSize(This,plWidth,plHeight)

#define IAgentCharacterEx_GetName(This,pbszName)	\
    (This)->lpVtbl -> GetName(This,pbszName)

#define IAgentCharacterEx_GetDescription(This,pbszDescription)	\
    (This)->lpVtbl -> GetDescription(This,pbszDescription)

#define IAgentCharacterEx_GetTTSSpeed(This,pdwSpeed)	\
    (This)->lpVtbl -> GetTTSSpeed(This,pdwSpeed)

#define IAgentCharacterEx_GetTTSPitch(This,pwPitch)	\
    (This)->lpVtbl -> GetTTSPitch(This,pwPitch)

#define IAgentCharacterEx_Activate(This,sState)	\
    (This)->lpVtbl -> Activate(This,sState)

#define IAgentCharacterEx_SetIdleOn(This,bOn)	\
    (This)->lpVtbl -> SetIdleOn(This,bOn)

#define IAgentCharacterEx_GetIdleOn(This,pbOn)	\
    (This)->lpVtbl -> GetIdleOn(This,pbOn)

#define IAgentCharacterEx_Prepare(This,dwType,bszName,bQueue,pdwReqID)	\
    (This)->lpVtbl -> Prepare(This,dwType,bszName,bQueue,pdwReqID)

#define IAgentCharacterEx_Play(This,bszAnimation,pdwReqID)	\
    (This)->lpVtbl -> Play(This,bszAnimation,pdwReqID)

#define IAgentCharacterEx_Stop(This,dwReqID)	\
    (This)->lpVtbl -> Stop(This,dwReqID)

#define IAgentCharacterEx_StopAll(This,lTypes)	\
    (This)->lpVtbl -> StopAll(This,lTypes)

#define IAgentCharacterEx_Wait(This,dwReqID,pdwReqID)	\
    (This)->lpVtbl -> Wait(This,dwReqID,pdwReqID)

#define IAgentCharacterEx_Interrupt(This,dwReqID,pdwReqID)	\
    (This)->lpVtbl -> Interrupt(This,dwReqID,pdwReqID)

#define IAgentCharacterEx_Show(This,bFast,pdwReqID)	\
    (This)->lpVtbl -> Show(This,bFast,pdwReqID)

#define IAgentCharacterEx_Hide(This,bFast,pdwReqID)	\
    (This)->lpVtbl -> Hide(This,bFast,pdwReqID)

#define IAgentCharacterEx_Speak(This,bszText,bszUrl,pdwReqID)	\
    (This)->lpVtbl -> Speak(This,bszText,bszUrl,pdwReqID)

#define IAgentCharacterEx_MoveTo(This,x,y,lSpeed,pdwReqID)	\
    (This)->lpVtbl -> MoveTo(This,x,y,lSpeed,pdwReqID)

#define IAgentCharacterEx_GestureAt(This,x,y,pdwReqID)	\
    (This)->lpVtbl -> GestureAt(This,x,y,pdwReqID)

#define IAgentCharacterEx_GetMoveCause(This,pdwCause)	\
    (This)->lpVtbl -> GetMoveCause(This,pdwCause)

#define IAgentCharacterEx_GetVisibilityCause(This,pdwCause)	\
    (This)->lpVtbl -> GetVisibilityCause(This,pdwCause)

#define IAgentCharacterEx_HasOtherClients(This,plNumOtherClients)	\
    (This)->lpVtbl -> HasOtherClients(This,plNumOtherClients)

#define IAgentCharacterEx_SetSoundEffectsOn(This,bOn)	\
    (This)->lpVtbl -> SetSoundEffectsOn(This,bOn)

#define IAgentCharacterEx_GetSoundEffectsOn(This,pbOn)	\
    (This)->lpVtbl -> GetSoundEffectsOn(This,pbOn)

#define IAgentCharacterEx_SetName(This,bszName)	\
    (This)->lpVtbl -> SetName(This,bszName)

#define IAgentCharacterEx_SetDescription(This,bszDescription)	\
    (This)->lpVtbl -> SetDescription(This,bszDescription)

#define IAgentCharacterEx_GetExtraData(This,pbszExtraData)	\
    (This)->lpVtbl -> GetExtraData(This,pbszExtraData)


#define IAgentCharacterEx_ShowPopupMenu(This,x,y)	\
    (This)->lpVtbl -> ShowPopupMenu(This,x,y)

#define IAgentCharacterEx_SetAutoPopupMenu(This,bAutoPopupMenu)	\
    (This)->lpVtbl -> SetAutoPopupMenu(This,bAutoPopupMenu)

#define IAgentCharacterEx_GetAutoPopupMenu(This,pbAutoPopupMenu)	\
    (This)->lpVtbl -> GetAutoPopupMenu(This,pbAutoPopupMenu)

#define IAgentCharacterEx_GetHelpFileName(This,pbszName)	\
    (This)->lpVtbl -> GetHelpFileName(This,pbszName)

#define IAgentCharacterEx_SetHelpFileName(This,bszName)	\
    (This)->lpVtbl -> SetHelpFileName(This,bszName)

#define IAgentCharacterEx_SetHelpModeOn(This,bHelpModeOn)	\
    (This)->lpVtbl -> SetHelpModeOn(This,bHelpModeOn)

#define IAgentCharacterEx_GetHelpModeOn(This,pbHelpModeOn)	\
    (This)->lpVtbl -> GetHelpModeOn(This,pbHelpModeOn)

#define IAgentCharacterEx_SetHelpContextID(This,ulID)	\
    (This)->lpVtbl -> SetHelpContextID(This,ulID)

#define IAgentCharacterEx_GetHelpContextID(This,pulID)	\
    (This)->lpVtbl -> GetHelpContextID(This,pulID)

#define IAgentCharacterEx_GetActive(This,psState)	\
    (This)->lpVtbl -> GetActive(This,psState)

#define IAgentCharacterEx_Listen(This,bListen)	\
    (This)->lpVtbl -> Listen(This,bListen)

#define IAgentCharacterEx_SetLanguageID(This,langid)	\
    (This)->lpVtbl -> SetLanguageID(This,langid)

#define IAgentCharacterEx_GetLanguageID(This,plangid)	\
    (This)->lpVtbl -> GetLanguageID(This,plangid)

#define IAgentCharacterEx_GetTTSModeID(This,pbszModeID)	\
    (This)->lpVtbl -> GetTTSModeID(This,pbszModeID)

#define IAgentCharacterEx_SetTTSModeID(This,bszModeID)	\
    (This)->lpVtbl -> SetTTSModeID(This,bszModeID)

#define IAgentCharacterEx_GetSRModeID(This,pbszModeID)	\
    (This)->lpVtbl -> GetSRModeID(This,pbszModeID)

#define IAgentCharacterEx_SetSRModeID(This,bszModeID)	\
    (This)->lpVtbl -> SetSRModeID(This,bszModeID)

#define IAgentCharacterEx_GetGUID(This,pbszID)	\
    (This)->lpVtbl -> GetGUID(This,pbszID)

#define IAgentCharacterEx_GetOriginalSize(This,plWidth,plHeight)	\
    (This)->lpVtbl -> GetOriginalSize(This,plWidth,plHeight)

#define IAgentCharacterEx_Think(This,bszText,pdwReqID)	\
    (This)->lpVtbl -> Think(This,bszText,pdwReqID)

#define IAgentCharacterEx_GetVersion(This,psMajor,psMinor)	\
    (This)->lpVtbl -> GetVersion(This,psMajor,psMinor)

#define IAgentCharacterEx_GetAnimationNames(This,punkEnum)	\
    (This)->lpVtbl -> GetAnimationNames(This,punkEnum)

#define IAgentCharacterEx_GetSRStatus(This,plStatus)	\
    (This)->lpVtbl -> GetSRStatus(This,plStatus)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentCharacterEx_ShowPopupMenu_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [in] */ short x,
    /* [in] */ short y);


void __RPC_STUB IAgentCharacterEx_ShowPopupMenu_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_SetAutoPopupMenu_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [in] */ long bAutoPopupMenu);


void __RPC_STUB IAgentCharacterEx_SetAutoPopupMenu_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetAutoPopupMenu_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbAutoPopupMenu);


void __RPC_STUB IAgentCharacterEx_GetAutoPopupMenu_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetHelpFileName_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszName);


void __RPC_STUB IAgentCharacterEx_GetHelpFileName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_SetHelpFileName_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [in] */ BSTR bszName);


void __RPC_STUB IAgentCharacterEx_SetHelpFileName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_SetHelpModeOn_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [in] */ long bHelpModeOn);


void __RPC_STUB IAgentCharacterEx_SetHelpModeOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetHelpModeOn_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbHelpModeOn);


void __RPC_STUB IAgentCharacterEx_GetHelpModeOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_SetHelpContextID_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [in] */ long ulID);


void __RPC_STUB IAgentCharacterEx_SetHelpContextID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetHelpContextID_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pulID);


void __RPC_STUB IAgentCharacterEx_GetHelpContextID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetActive_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ short __RPC_FAR *psState);


void __RPC_STUB IAgentCharacterEx_GetActive_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_Listen_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [in] */ long bListen);


void __RPC_STUB IAgentCharacterEx_Listen_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_SetLanguageID_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [in] */ long langid);


void __RPC_STUB IAgentCharacterEx_SetLanguageID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetLanguageID_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plangid);


void __RPC_STUB IAgentCharacterEx_GetLanguageID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetTTSModeID_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszModeID);


void __RPC_STUB IAgentCharacterEx_GetTTSModeID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_SetTTSModeID_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [in] */ BSTR bszModeID);


void __RPC_STUB IAgentCharacterEx_SetTTSModeID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetSRModeID_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszModeID);


void __RPC_STUB IAgentCharacterEx_GetSRModeID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_SetSRModeID_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [in] */ BSTR bszModeID);


void __RPC_STUB IAgentCharacterEx_SetSRModeID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetGUID_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszID);


void __RPC_STUB IAgentCharacterEx_GetGUID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetOriginalSize_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plWidth,
    /* [out] */ long __RPC_FAR *plHeight);


void __RPC_STUB IAgentCharacterEx_GetOriginalSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_Think_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [in] */ BSTR bszText,
    /* [out] */ long __RPC_FAR *pdwReqID);


void __RPC_STUB IAgentCharacterEx_Think_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetVersion_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ short __RPC_FAR *psMajor,
    /* [out] */ short __RPC_FAR *psMinor);


void __RPC_STUB IAgentCharacterEx_GetVersion_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetAnimationNames_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ IUnknown __RPC_FAR *__RPC_FAR *punkEnum);


void __RPC_STUB IAgentCharacterEx_GetAnimationNames_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetSRStatus_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plStatus);


void __RPC_STUB IAgentCharacterEx_GetSRStatus_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCharacterEx_INTERFACE_DEFINED__ */


#ifndef __IAgent_INTERFACE_DEFINED__
#define __IAgent_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgent
 * at Mon Aug 31 17:00:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgent;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("A7B93C91-7B81-11D0-AC5F-00C04FD97575")
    IAgent : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Load( 
            /* [in] */ VARIANT vLoadKey,
            /* [out] */ long __RPC_FAR *pdwCharID,
            /* [out] */ long __RPC_FAR *pdwReqID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Unload( 
            /* [in] */ long dwCharID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Register( 
            /* [in] */ IUnknown __RPC_FAR *punkNotifySink,
            /* [out] */ long __RPC_FAR *pdwSinkID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Unregister( 
            /* [in] */ long dwSinkID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCharacter( 
            /* [in] */ long dwCharID,
            /* [out] */ IDispatch __RPC_FAR *__RPC_FAR *ppunkCharacter) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSuspended( 
            /* [out] */ long __RPC_FAR *pbSuspended) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgent __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgent __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgent __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgent __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgent __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgent __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgent __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Load )( 
            IAgent __RPC_FAR * This,
            /* [in] */ VARIANT vLoadKey,
            /* [out] */ long __RPC_FAR *pdwCharID,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Unload )( 
            IAgent __RPC_FAR * This,
            /* [in] */ long dwCharID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Register )( 
            IAgent __RPC_FAR * This,
            /* [in] */ IUnknown __RPC_FAR *punkNotifySink,
            /* [out] */ long __RPC_FAR *pdwSinkID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Unregister )( 
            IAgent __RPC_FAR * This,
            /* [in] */ long dwSinkID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCharacter )( 
            IAgent __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [out] */ IDispatch __RPC_FAR *__RPC_FAR *ppunkCharacter);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSuspended )( 
            IAgent __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbSuspended);
        
        END_INTERFACE
    } IAgentVtbl;

    interface IAgent
    {
        CONST_VTBL struct IAgentVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgent_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgent_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgent_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgent_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgent_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgent_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgent_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgent_Load(This,vLoadKey,pdwCharID,pdwReqID)	\
    (This)->lpVtbl -> Load(This,vLoadKey,pdwCharID,pdwReqID)

#define IAgent_Unload(This,dwCharID)	\
    (This)->lpVtbl -> Unload(This,dwCharID)

#define IAgent_Register(This,punkNotifySink,pdwSinkID)	\
    (This)->lpVtbl -> Register(This,punkNotifySink,pdwSinkID)

#define IAgent_Unregister(This,dwSinkID)	\
    (This)->lpVtbl -> Unregister(This,dwSinkID)

#define IAgent_GetCharacter(This,dwCharID,ppunkCharacter)	\
    (This)->lpVtbl -> GetCharacter(This,dwCharID,ppunkCharacter)

#define IAgent_GetSuspended(This,pbSuspended)	\
    (This)->lpVtbl -> GetSuspended(This,pbSuspended)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgent_Load_Proxy( 
    IAgent __RPC_FAR * This,
    /* [in] */ VARIANT vLoadKey,
    /* [out] */ long __RPC_FAR *pdwCharID,
    /* [out] */ long __RPC_FAR *pdwReqID);


void __RPC_STUB IAgent_Load_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgent_Unload_Proxy( 
    IAgent __RPC_FAR * This,
    /* [in] */ long dwCharID);


void __RPC_STUB IAgent_Unload_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgent_Register_Proxy( 
    IAgent __RPC_FAR * This,
    /* [in] */ IUnknown __RPC_FAR *punkNotifySink,
    /* [out] */ long __RPC_FAR *pdwSinkID);


void __RPC_STUB IAgent_Register_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgent_Unregister_Proxy( 
    IAgent __RPC_FAR * This,
    /* [in] */ long dwSinkID);


void __RPC_STUB IAgent_Unregister_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgent_GetCharacter_Proxy( 
    IAgent __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [out] */ IDispatch __RPC_FAR *__RPC_FAR *ppunkCharacter);


void __RPC_STUB IAgent_GetCharacter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgent_GetSuspended_Proxy( 
    IAgent __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbSuspended);


void __RPC_STUB IAgent_GetSuspended_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgent_INTERFACE_DEFINED__ */


#ifndef __IAgentEx_INTERFACE_DEFINED__
#define __IAgentEx_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentEx
 * at Mon Aug 31 17:00:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("48D12BA0-5B77-11d1-9EC1-00C04FD7081F")
    IAgentEx : public IAgent
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCharacterEx( 
            /* [in] */ long dwCharID,
            /* [out] */ IAgentCharacterEx __RPC_FAR *__RPC_FAR *ppCharacterEx) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVersion( 
            /* [out] */ short __RPC_FAR *psMajor,
            /* [out] */ short __RPC_FAR *psMinor) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ShowDefaultCharacterProperties( 
            /* [in] */ short x,
            /* [in] */ short y,
            /* [in] */ long bUseDefaultPosition) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Load )( 
            IAgentEx __RPC_FAR * This,
            /* [in] */ VARIANT vLoadKey,
            /* [out] */ long __RPC_FAR *pdwCharID,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Unload )( 
            IAgentEx __RPC_FAR * This,
            /* [in] */ long dwCharID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Register )( 
            IAgentEx __RPC_FAR * This,
            /* [in] */ IUnknown __RPC_FAR *punkNotifySink,
            /* [out] */ long __RPC_FAR *pdwSinkID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Unregister )( 
            IAgentEx __RPC_FAR * This,
            /* [in] */ long dwSinkID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCharacter )( 
            IAgentEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [out] */ IDispatch __RPC_FAR *__RPC_FAR *ppunkCharacter);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSuspended )( 
            IAgentEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbSuspended);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCharacterEx )( 
            IAgentEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [out] */ IAgentCharacterEx __RPC_FAR *__RPC_FAR *ppCharacterEx);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVersion )( 
            IAgentEx __RPC_FAR * This,
            /* [out] */ short __RPC_FAR *psMajor,
            /* [out] */ short __RPC_FAR *psMinor);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ShowDefaultCharacterProperties )( 
            IAgentEx __RPC_FAR * This,
            /* [in] */ short x,
            /* [in] */ short y,
            /* [in] */ long bUseDefaultPosition);
        
        END_INTERFACE
    } IAgentExVtbl;

    interface IAgentEx
    {
        CONST_VTBL struct IAgentExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentEx_Load(This,vLoadKey,pdwCharID,pdwReqID)	\
    (This)->lpVtbl -> Load(This,vLoadKey,pdwCharID,pdwReqID)

#define IAgentEx_Unload(This,dwCharID)	\
    (This)->lpVtbl -> Unload(This,dwCharID)

#define IAgentEx_Register(This,punkNotifySink,pdwSinkID)	\
    (This)->lpVtbl -> Register(This,punkNotifySink,pdwSinkID)

#define IAgentEx_Unregister(This,dwSinkID)	\
    (This)->lpVtbl -> Unregister(This,dwSinkID)

#define IAgentEx_GetCharacter(This,dwCharID,ppunkCharacter)	\
    (This)->lpVtbl -> GetCharacter(This,dwCharID,ppunkCharacter)

#define IAgentEx_GetSuspended(This,pbSuspended)	\
    (This)->lpVtbl -> GetSuspended(This,pbSuspended)


#define IAgentEx_GetCharacterEx(This,dwCharID,ppCharacterEx)	\
    (This)->lpVtbl -> GetCharacterEx(This,dwCharID,ppCharacterEx)

#define IAgentEx_GetVersion(This,psMajor,psMinor)	\
    (This)->lpVtbl -> GetVersion(This,psMajor,psMinor)

#define IAgentEx_ShowDefaultCharacterProperties(This,x,y,bUseDefaultPosition)	\
    (This)->lpVtbl -> ShowDefaultCharacterProperties(This,x,y,bUseDefaultPosition)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentEx_GetCharacterEx_Proxy( 
    IAgentEx __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [out] */ IAgentCharacterEx __RPC_FAR *__RPC_FAR *ppCharacterEx);


void __RPC_STUB IAgentEx_GetCharacterEx_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentEx_GetVersion_Proxy( 
    IAgentEx __RPC_FAR * This,
    /* [out] */ short __RPC_FAR *psMajor,
    /* [out] */ short __RPC_FAR *psMinor);


void __RPC_STUB IAgentEx_GetVersion_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentEx_ShowDefaultCharacterProperties_Proxy( 
    IAgentEx __RPC_FAR * This,
    /* [in] */ short x,
    /* [in] */ short y,
    /* [in] */ long bUseDefaultPosition);


void __RPC_STUB IAgentEx_ShowDefaultCharacterProperties_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentEx_INTERFACE_DEFINED__ */


#ifndef __IAgentNotifySink_INTERFACE_DEFINED__
#define __IAgentNotifySink_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentNotifySink
 * at Mon Aug 31 17:00:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentNotifySink;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("00D18159-8466-11D0-AC63-00C04FD97575")
    IAgentNotifySink : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Command( 
            /* [in] */ long dwCommandID,
            /* [in] */ IUnknown __RPC_FAR *punkUserInput) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ActivateInputState( 
            /* [in] */ long dwCharID,
            /* [in] */ long bActivated) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Restart( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Shutdown( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE VisibleState( 
            /* [in] */ long dwCharID,
            /* [in] */ long bVisible,
            /* [in] */ long dwCause) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Click( 
            /* [in] */ long dwCharID,
            /* [in] */ short fwKeys,
            /* [in] */ long x,
            /* [in] */ long y) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DblClick( 
            /* [in] */ long dwCharID,
            /* [in] */ short fwKeys,
            /* [in] */ long x,
            /* [in] */ long y) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DragStart( 
            /* [in] */ long dwCharID,
            /* [in] */ short fwKeys,
            /* [in] */ long x,
            /* [in] */ long y) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DragComplete( 
            /* [in] */ long dwCharID,
            /* [in] */ short fwKeys,
            /* [in] */ long x,
            /* [in] */ long y) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RequestStart( 
            /* [in] */ long dwRequestID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RequestComplete( 
            /* [in] */ long dwRequestID,
            /* [in] */ long hrStatus) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE BookMark( 
            /* [in] */ long dwBookMarkID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Idle( 
            /* [in] */ long dwCharID,
            /* [in] */ long bStart) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Move( 
            /* [in] */ long dwCharID,
            /* [in] */ long x,
            /* [in] */ long y,
            /* [in] */ long dwCause) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Size( 
            /* [in] */ long dwCharID,
            /* [in] */ long lWidth,
            /* [in] */ long lHeight) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE BalloonVisibleState( 
            /* [in] */ long dwCharID,
            /* [in] */ long bVisible) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentNotifySinkVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentNotifySink __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentNotifySink __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Command )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwCommandID,
            /* [in] */ IUnknown __RPC_FAR *punkUserInput);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ActivateInputState )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long bActivated);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Restart )( 
            IAgentNotifySink __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Shutdown )( 
            IAgentNotifySink __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *VisibleState )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long bVisible,
            /* [in] */ long dwCause);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Click )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ short fwKeys,
            /* [in] */ long x,
            /* [in] */ long y);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DblClick )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ short fwKeys,
            /* [in] */ long x,
            /* [in] */ long y);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DragStart )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ short fwKeys,
            /* [in] */ long x,
            /* [in] */ long y);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DragComplete )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ short fwKeys,
            /* [in] */ long x,
            /* [in] */ long y);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RequestStart )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwRequestID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RequestComplete )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwRequestID,
            /* [in] */ long hrStatus);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *BookMark )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwBookMarkID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Idle )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long bStart);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Move )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long x,
            /* [in] */ long y,
            /* [in] */ long dwCause);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Size )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long lWidth,
            /* [in] */ long lHeight);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *BalloonVisibleState )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long bVisible);
        
        END_INTERFACE
    } IAgentNotifySinkVtbl;

    interface IAgentNotifySink
    {
        CONST_VTBL struct IAgentNotifySinkVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentNotifySink_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentNotifySink_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentNotifySink_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentNotifySink_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentNotifySink_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentNotifySink_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentNotifySink_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentNotifySink_Command(This,dwCommandID,punkUserInput)	\
    (This)->lpVtbl -> Command(This,dwCommandID,punkUserInput)

#define IAgentNotifySink_ActivateInputState(This,dwCharID,bActivated)	\
    (This)->lpVtbl -> ActivateInputState(This,dwCharID,bActivated)

#define IAgentNotifySink_Restart(This)	\
    (This)->lpVtbl -> Restart(This)

#define IAgentNotifySink_Shutdown(This)	\
    (This)->lpVtbl -> Shutdown(This)

#define IAgentNotifySink_VisibleState(This,dwCharID,bVisible,dwCause)	\
    (This)->lpVtbl -> VisibleState(This,dwCharID,bVisible,dwCause)

#define IAgentNotifySink_Click(This,dwCharID,fwKeys,x,y)	\
    (This)->lpVtbl -> Click(This,dwCharID,fwKeys,x,y)

#define IAgentNotifySink_DblClick(This,dwCharID,fwKeys,x,y)	\
    (This)->lpVtbl -> DblClick(This,dwCharID,fwKeys,x,y)

#define IAgentNotifySink_DragStart(This,dwCharID,fwKeys,x,y)	\
    (This)->lpVtbl -> DragStart(This,dwCharID,fwKeys,x,y)

#define IAgentNotifySink_DragComplete(This,dwCharID,fwKeys,x,y)	\
    (This)->lpVtbl -> DragComplete(This,dwCharID,fwKeys,x,y)

#define IAgentNotifySink_RequestStart(This,dwRequestID)	\
    (This)->lpVtbl -> RequestStart(This,dwRequestID)

#define IAgentNotifySink_RequestComplete(This,dwRequestID,hrStatus)	\
    (This)->lpVtbl -> RequestComplete(This,dwRequestID,hrStatus)

#define IAgentNotifySink_BookMark(This,dwBookMarkID)	\
    (This)->lpVtbl -> BookMark(This,dwBookMarkID)

#define IAgentNotifySink_Idle(This,dwCharID,bStart)	\
    (This)->lpVtbl -> Idle(This,dwCharID,bStart)

#define IAgentNotifySink_Move(This,dwCharID,x,y,dwCause)	\
    (This)->lpVtbl -> Move(This,dwCharID,x,y,dwCause)

#define IAgentNotifySink_Size(This,dwCharID,lWidth,lHeight)	\
    (This)->lpVtbl -> Size(This,dwCharID,lWidth,lHeight)

#define IAgentNotifySink_BalloonVisibleState(This,dwCharID,bVisible)	\
    (This)->lpVtbl -> BalloonVisibleState(This,dwCharID,bVisible)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentNotifySink_Command_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwCommandID,
    /* [in] */ IUnknown __RPC_FAR *punkUserInput);


void __RPC_STUB IAgentNotifySink_Command_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_ActivateInputState_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ long bActivated);


void __RPC_STUB IAgentNotifySink_ActivateInputState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_Restart_Proxy( 
    IAgentNotifySink __RPC_FAR * This);


void __RPC_STUB IAgentNotifySink_Restart_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_Shutdown_Proxy( 
    IAgentNotifySink __RPC_FAR * This);


void __RPC_STUB IAgentNotifySink_Shutdown_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_VisibleState_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ long bVisible,
    /* [in] */ long dwCause);


void __RPC_STUB IAgentNotifySink_VisibleState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_Click_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ short fwKeys,
    /* [in] */ long x,
    /* [in] */ long y);


void __RPC_STUB IAgentNotifySink_Click_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_DblClick_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ short fwKeys,
    /* [in] */ long x,
    /* [in] */ long y);


void __RPC_STUB IAgentNotifySink_DblClick_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_DragStart_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ short fwKeys,
    /* [in] */ long x,
    /* [in] */ long y);


void __RPC_STUB IAgentNotifySink_DragStart_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_DragComplete_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ short fwKeys,
    /* [in] */ long x,
    /* [in] */ long y);


void __RPC_STUB IAgentNotifySink_DragComplete_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_RequestStart_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwRequestID);


void __RPC_STUB IAgentNotifySink_RequestStart_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_RequestComplete_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwRequestID,
    /* [in] */ long hrStatus);


void __RPC_STUB IAgentNotifySink_RequestComplete_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_BookMark_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwBookMarkID);


void __RPC_STUB IAgentNotifySink_BookMark_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_Idle_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ long bStart);


void __RPC_STUB IAgentNotifySink_Idle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_Move_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ long x,
    /* [in] */ long y,
    /* [in] */ long dwCause);


void __RPC_STUB IAgentNotifySink_Move_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_Size_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ long lWidth,
    /* [in] */ long lHeight);


void __RPC_STUB IAgentNotifySink_Size_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_BalloonVisibleState_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ long bVisible);


void __RPC_STUB IAgentNotifySink_BalloonVisibleState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentNotifySink_INTERFACE_DEFINED__ */


#ifndef __IAgentNotifySinkEx_INTERFACE_DEFINED__
#define __IAgentNotifySinkEx_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentNotifySinkEx
 * at Mon Aug 31 17:00:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentNotifySinkEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("08C75162-3C9C-11d1-91FE-00C04FD701A5")
    IAgentNotifySinkEx : public IAgentNotifySink
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE HelpComplete( 
            /* [in] */ long dwCharID,
            /* [in] */ long dwCommandID,
            /* [in] */ long dwCause) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ListeningState( 
            /* [in] */ long dwCharID,
            /* [in] */ long bListening,
            /* [in] */ long dwCause) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DefaultCharacterChange( 
            /* [in] */ BSTR bszGUID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AgentPropertyChange( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ActiveClientChange( 
            /* [in] */ long dwCharID,
            /* [in] */ long lStatus) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentNotifySinkExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentNotifySinkEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentNotifySinkEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Command )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCommandID,
            /* [in] */ IUnknown __RPC_FAR *punkUserInput);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ActivateInputState )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long bActivated);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Restart )( 
            IAgentNotifySinkEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Shutdown )( 
            IAgentNotifySinkEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *VisibleState )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long bVisible,
            /* [in] */ long dwCause);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Click )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ short fwKeys,
            /* [in] */ long x,
            /* [in] */ long y);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DblClick )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ short fwKeys,
            /* [in] */ long x,
            /* [in] */ long y);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DragStart )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ short fwKeys,
            /* [in] */ long x,
            /* [in] */ long y);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DragComplete )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ short fwKeys,
            /* [in] */ long x,
            /* [in] */ long y);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RequestStart )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwRequestID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RequestComplete )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwRequestID,
            /* [in] */ long hrStatus);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *BookMark )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwBookMarkID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Idle )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long bStart);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Move )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long x,
            /* [in] */ long y,
            /* [in] */ long dwCause);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Size )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long lWidth,
            /* [in] */ long lHeight);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *BalloonVisibleState )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long bVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *HelpComplete )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long dwCommandID,
            /* [in] */ long dwCause);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ListeningState )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long bListening,
            /* [in] */ long dwCause);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DefaultCharacterChange )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ BSTR bszGUID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AgentPropertyChange )( 
            IAgentNotifySinkEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ActiveClientChange )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long lStatus);
        
        END_INTERFACE
    } IAgentNotifySinkExVtbl;

    interface IAgentNotifySinkEx
    {
        CONST_VTBL struct IAgentNotifySinkExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentNotifySinkEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentNotifySinkEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentNotifySinkEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentNotifySinkEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentNotifySinkEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentNotifySinkEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentNotifySinkEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentNotifySinkEx_Command(This,dwCommandID,punkUserInput)	\
    (This)->lpVtbl -> Command(This,dwCommandID,punkUserInput)

#define IAgentNotifySinkEx_ActivateInputState(This,dwCharID,bActivated)	\
    (This)->lpVtbl -> ActivateInputState(This,dwCharID,bActivated)

#define IAgentNotifySinkEx_Restart(This)	\
    (This)->lpVtbl -> Restart(This)

#define IAgentNotifySinkEx_Shutdown(This)	\
    (This)->lpVtbl -> Shutdown(This)

#define IAgentNotifySinkEx_VisibleState(This,dwCharID,bVisible,dwCause)	\
    (This)->lpVtbl -> VisibleState(This,dwCharID,bVisible,dwCause)

#define IAgentNotifySinkEx_Click(This,dwCharID,fwKeys,x,y)	\
    (This)->lpVtbl -> Click(This,dwCharID,fwKeys,x,y)

#define IAgentNotifySinkEx_DblClick(This,dwCharID,fwKeys,x,y)	\
    (This)->lpVtbl -> DblClick(This,dwCharID,fwKeys,x,y)

#define IAgentNotifySinkEx_DragStart(This,dwCharID,fwKeys,x,y)	\
    (This)->lpVtbl -> DragStart(This,dwCharID,fwKeys,x,y)

#define IAgentNotifySinkEx_DragComplete(This,dwCharID,fwKeys,x,y)	\
    (This)->lpVtbl -> DragComplete(This,dwCharID,fwKeys,x,y)

#define IAgentNotifySinkEx_RequestStart(This,dwRequestID)	\
    (This)->lpVtbl -> RequestStart(This,dwRequestID)

#define IAgentNotifySinkEx_RequestComplete(This,dwRequestID,hrStatus)	\
    (This)->lpVtbl -> RequestComplete(This,dwRequestID,hrStatus)

#define IAgentNotifySinkEx_BookMark(This,dwBookMarkID)	\
    (This)->lpVtbl -> BookMark(This,dwBookMarkID)

#define IAgentNotifySinkEx_Idle(This,dwCharID,bStart)	\
    (This)->lpVtbl -> Idle(This,dwCharID,bStart)

#define IAgentNotifySinkEx_Move(This,dwCharID,x,y,dwCause)	\
    (This)->lpVtbl -> Move(This,dwCharID,x,y,dwCause)

#define IAgentNotifySinkEx_Size(This,dwCharID,lWidth,lHeight)	\
    (This)->lpVtbl -> Size(This,dwCharID,lWidth,lHeight)

#define IAgentNotifySinkEx_BalloonVisibleState(This,dwCharID,bVisible)	\
    (This)->lpVtbl -> BalloonVisibleState(This,dwCharID,bVisible)


#define IAgentNotifySinkEx_HelpComplete(This,dwCharID,dwCommandID,dwCause)	\
    (This)->lpVtbl -> HelpComplete(This,dwCharID,dwCommandID,dwCause)

#define IAgentNotifySinkEx_ListeningState(This,dwCharID,bListening,dwCause)	\
    (This)->lpVtbl -> ListeningState(This,dwCharID,bListening,dwCause)

#define IAgentNotifySinkEx_DefaultCharacterChange(This,bszGUID)	\
    (This)->lpVtbl -> DefaultCharacterChange(This,bszGUID)

#define IAgentNotifySinkEx_AgentPropertyChange(This)	\
    (This)->lpVtbl -> AgentPropertyChange(This)

#define IAgentNotifySinkEx_ActiveClientChange(This,dwCharID,lStatus)	\
    (This)->lpVtbl -> ActiveClientChange(This,dwCharID,lStatus)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentNotifySinkEx_HelpComplete_Proxy( 
    IAgentNotifySinkEx __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ long dwCommandID,
    /* [in] */ long dwCause);


void __RPC_STUB IAgentNotifySinkEx_HelpComplete_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySinkEx_ListeningState_Proxy( 
    IAgentNotifySinkEx __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ long bListening,
    /* [in] */ long dwCause);


void __RPC_STUB IAgentNotifySinkEx_ListeningState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySinkEx_DefaultCharacterChange_Proxy( 
    IAgentNotifySinkEx __RPC_FAR * This,
    /* [in] */ BSTR bszGUID);


void __RPC_STUB IAgentNotifySinkEx_DefaultCharacterChange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySinkEx_AgentPropertyChange_Proxy( 
    IAgentNotifySinkEx __RPC_FAR * This);


void __RPC_STUB IAgentNotifySinkEx_AgentPropertyChange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySinkEx_ActiveClientChange_Proxy( 
    IAgentNotifySinkEx __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ long lStatus);


void __RPC_STUB IAgentNotifySinkEx_ActiveClientChange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentNotifySinkEx_INTERFACE_DEFINED__ */


#ifndef __IAgentPrivateNotifySink_INTERFACE_DEFINED__
#define __IAgentPrivateNotifySink_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentPrivateNotifySink
 * at Mon Aug 31 17:00:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][uuid][local][object] */ 



EXTERN_C const IID IID_IAgentPrivateNotifySink;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("B741B760-8EA6-11d0-AC6A-00C04FD97575")
    IAgentPrivateNotifySink : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE ReleaseAll( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReleaseOne( 
            void __RPC_FAR *pnNotify) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetClientID( 
            DWORD __RPC_FAR *pdwClientID) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentPrivateNotifySinkVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentPrivateNotifySink __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentPrivateNotifySink __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentPrivateNotifySink __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ReleaseAll )( 
            IAgentPrivateNotifySink __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ReleaseOne )( 
            IAgentPrivateNotifySink __RPC_FAR * This,
            void __RPC_FAR *pnNotify);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetClientID )( 
            IAgentPrivateNotifySink __RPC_FAR * This,
            DWORD __RPC_FAR *pdwClientID);
        
        END_INTERFACE
    } IAgentPrivateNotifySinkVtbl;

    interface IAgentPrivateNotifySink
    {
        CONST_VTBL struct IAgentPrivateNotifySinkVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentPrivateNotifySink_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentPrivateNotifySink_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentPrivateNotifySink_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentPrivateNotifySink_ReleaseAll(This)	\
    (This)->lpVtbl -> ReleaseAll(This)

#define IAgentPrivateNotifySink_ReleaseOne(This,pnNotify)	\
    (This)->lpVtbl -> ReleaseOne(This,pnNotify)

#define IAgentPrivateNotifySink_GetClientID(This,pdwClientID)	\
    (This)->lpVtbl -> GetClientID(This,pdwClientID)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentPrivateNotifySink_ReleaseAll_Proxy( 
    IAgentPrivateNotifySink __RPC_FAR * This);


void __RPC_STUB IAgentPrivateNotifySink_ReleaseAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentPrivateNotifySink_ReleaseOne_Proxy( 
    IAgentPrivateNotifySink __RPC_FAR * This,
    void __RPC_FAR *pnNotify);


void __RPC_STUB IAgentPrivateNotifySink_ReleaseOne_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentPrivateNotifySink_GetClientID_Proxy( 
    IAgentPrivateNotifySink __RPC_FAR * This,
    DWORD __RPC_FAR *pdwClientID);


void __RPC_STUB IAgentPrivateNotifySink_GetClientID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentPrivateNotifySink_INTERFACE_DEFINED__ */


#ifndef __IAgentCustomMarshalMaker_INTERFACE_DEFINED__
#define __IAgentCustomMarshalMaker_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCustomMarshalMaker
 * at Mon Aug 31 17:00:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][uuid][hidden][local][object] */ 



EXTERN_C const IID IID_IAgentCustomMarshalMaker;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("408D7542-C8FC-11d1-AA83-00C04FA34D72")
    IAgentCustomMarshalMaker : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Create( 
            /* [in] */ IUnknown __RPC_FAR *pSink,
            /* [in] */ REFIID riidSink,
            /* [out] */ IUnknown __RPC_FAR *__RPC_FAR *pMarshaledSink) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCustomMarshalMakerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCustomMarshalMaker __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCustomMarshalMaker __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCustomMarshalMaker __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Create )( 
            IAgentCustomMarshalMaker __RPC_FAR * This,
            /* [in] */ IUnknown __RPC_FAR *pSink,
            /* [in] */ REFIID riidSink,
            /* [out] */ IUnknown __RPC_FAR *__RPC_FAR *pMarshaledSink);
        
        END_INTERFACE
    } IAgentCustomMarshalMakerVtbl;

    interface IAgentCustomMarshalMaker
    {
        CONST_VTBL struct IAgentCustomMarshalMakerVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCustomMarshalMaker_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCustomMarshalMaker_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCustomMarshalMaker_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCustomMarshalMaker_Create(This,pSink,riidSink,pMarshaledSink)	\
    (This)->lpVtbl -> Create(This,pSink,riidSink,pMarshaledSink)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentCustomMarshalMaker_Create_Proxy( 
    IAgentCustomMarshalMaker __RPC_FAR * This,
    /* [in] */ IUnknown __RPC_FAR *pSink,
    /* [in] */ REFIID riidSink,
    /* [out] */ IUnknown __RPC_FAR *__RPC_FAR *pMarshaledSink);


void __RPC_STUB IAgentCustomMarshalMaker_Create_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCustomMarshalMaker_INTERFACE_DEFINED__ */


#ifndef __IAgentClientStatus_INTERFACE_DEFINED__
#define __IAgentClientStatus_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentClientStatus
 * at Mon Aug 31 17:00:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][uuid][local][object] */ 



EXTERN_C const IID IID_IAgentClientStatus;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("C5649F70-7AED-11d1-B9A8-00C04FD97575")
    IAgentClientStatus : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Ping( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentClientStatusVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentClientStatus __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentClientStatus __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentClientStatus __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Ping )( 
            IAgentClientStatus __RPC_FAR * This);
        
        END_INTERFACE
    } IAgentClientStatusVtbl;

    interface IAgentClientStatus
    {
        CONST_VTBL struct IAgentClientStatusVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentClientStatus_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentClientStatus_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentClientStatus_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentClientStatus_Ping(This)	\
    (This)->lpVtbl -> Ping(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentClientStatus_Ping_Proxy( 
    IAgentClientStatus __RPC_FAR * This);


void __RPC_STUB IAgentClientStatus_Ping_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentClientStatus_INTERFACE_DEFINED__ */


/****************************************
 * Generated header for interface: __MIDL_itf_AgentServer_0156
 * at Mon Aug 31 17:00:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [local] */ 


#define	AGENT_VERSION_MAJOR	( 2 )

#define	AGENT_VERSION_MINOR	( 0 )



extern RPC_IF_HANDLE __MIDL_itf_AgentServer_0156_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_AgentServer_0156_v0_0_s_ifspec;


#ifndef __AgentServerObjects_LIBRARY_DEFINED__
#define __AgentServerObjects_LIBRARY_DEFINED__

/****************************************
 * Generated header for library: AgentServerObjects
 * at Mon Aug 31 17:00:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [helpstring][version][uuid] */ 





















EXTERN_C const IID LIBID_AgentServerObjects;

#ifdef __cplusplus
EXTERN_C const CLSID CLSID_AgentServer;

class DECLSPEC_UUID("D45FD2FC-5C6E-11D1-9EC1-00C04FD7081F")
AgentServer;
#endif
#endif /* __AgentServerObjects_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     unsigned long __RPC_FAR *, unsigned long            , BSTR __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  BSTR_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, BSTR __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  BSTR_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, BSTR __RPC_FAR * ); 
void                      __RPC_USER  BSTR_UserFree(     unsigned long __RPC_FAR *, BSTR __RPC_FAR * ); 

unsigned long             __RPC_USER  VARIANT_UserSize(     unsigned long __RPC_FAR *, unsigned long            , VARIANT __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  VARIANT_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, VARIANT __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  VARIANT_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, VARIANT __RPC_FAR * ); 
void                      __RPC_USER  VARIANT_UserFree(     unsigned long __RPC_FAR *, VARIANT __RPC_FAR * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif

#else // _MSC_VER >= 1200

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


/* File created by MIDL compiler version 5.01.0164 */
/* at Tue Sep 15 16:56:07 1998
 */
/* Compiler settings for AgentServer.idl:
    Oicf (OptLev=i2), W1, Zp8, env=Win32, ms_ext, c_ext
    error checks: allocation ref bounds_check enum stub_data 
*/
//@@MIDL_FILE_HEADING(  )


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 440
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __AgentServer_h__
#define __AgentServer_h__

#ifdef __cplusplus
extern "C"{
#endif 

/* Forward Declarations */ 

#ifndef __IAgentUserInput_FWD_DEFINED__
#define __IAgentUserInput_FWD_DEFINED__
typedef interface IAgentUserInput IAgentUserInput;
#endif 	/* __IAgentUserInput_FWD_DEFINED__ */


#ifndef __IAgentCommand_FWD_DEFINED__
#define __IAgentCommand_FWD_DEFINED__
typedef interface IAgentCommand IAgentCommand;
#endif 	/* __IAgentCommand_FWD_DEFINED__ */


#ifndef __IAgentCommandEx_FWD_DEFINED__
#define __IAgentCommandEx_FWD_DEFINED__
typedef interface IAgentCommandEx IAgentCommandEx;
#endif 	/* __IAgentCommandEx_FWD_DEFINED__ */


#ifndef __IAgentCommands_FWD_DEFINED__
#define __IAgentCommands_FWD_DEFINED__
typedef interface IAgentCommands IAgentCommands;
#endif 	/* __IAgentCommands_FWD_DEFINED__ */


#ifndef __IAgentCommandsEx_FWD_DEFINED__
#define __IAgentCommandsEx_FWD_DEFINED__
typedef interface IAgentCommandsEx IAgentCommandsEx;
#endif 	/* __IAgentCommandsEx_FWD_DEFINED__ */


#ifndef __IAgentCommandWindow_FWD_DEFINED__
#define __IAgentCommandWindow_FWD_DEFINED__
typedef interface IAgentCommandWindow IAgentCommandWindow;
#endif 	/* __IAgentCommandWindow_FWD_DEFINED__ */


#ifndef __IAgentSpeechInputProperties_FWD_DEFINED__
#define __IAgentSpeechInputProperties_FWD_DEFINED__
typedef interface IAgentSpeechInputProperties IAgentSpeechInputProperties;
#endif 	/* __IAgentSpeechInputProperties_FWD_DEFINED__ */


#ifndef __IAgentAudioOutputProperties_FWD_DEFINED__
#define __IAgentAudioOutputProperties_FWD_DEFINED__
typedef interface IAgentAudioOutputProperties IAgentAudioOutputProperties;
#endif 	/* __IAgentAudioOutputProperties_FWD_DEFINED__ */


#ifndef __IAgentAudioOutputPropertiesEx_FWD_DEFINED__
#define __IAgentAudioOutputPropertiesEx_FWD_DEFINED__
typedef interface IAgentAudioOutputPropertiesEx IAgentAudioOutputPropertiesEx;
#endif 	/* __IAgentAudioOutputPropertiesEx_FWD_DEFINED__ */


#ifndef __IAgentPropertySheet_FWD_DEFINED__
#define __IAgentPropertySheet_FWD_DEFINED__
typedef interface IAgentPropertySheet IAgentPropertySheet;
#endif 	/* __IAgentPropertySheet_FWD_DEFINED__ */


#ifndef __IAgentBalloon_FWD_DEFINED__
#define __IAgentBalloon_FWD_DEFINED__
typedef interface IAgentBalloon IAgentBalloon;
#endif 	/* __IAgentBalloon_FWD_DEFINED__ */


#ifndef __IAgentBalloonEx_FWD_DEFINED__
#define __IAgentBalloonEx_FWD_DEFINED__
typedef interface IAgentBalloonEx IAgentBalloonEx;
#endif 	/* __IAgentBalloonEx_FWD_DEFINED__ */


#ifndef __IAgentCharacter_FWD_DEFINED__
#define __IAgentCharacter_FWD_DEFINED__
typedef interface IAgentCharacter IAgentCharacter;
#endif 	/* __IAgentCharacter_FWD_DEFINED__ */


#ifndef __IAgentCharacterEx_FWD_DEFINED__
#define __IAgentCharacterEx_FWD_DEFINED__
typedef interface IAgentCharacterEx IAgentCharacterEx;
#endif 	/* __IAgentCharacterEx_FWD_DEFINED__ */


#ifndef __IAgent_FWD_DEFINED__
#define __IAgent_FWD_DEFINED__
typedef interface IAgent IAgent;
#endif 	/* __IAgent_FWD_DEFINED__ */


#ifndef __IAgentEx_FWD_DEFINED__
#define __IAgentEx_FWD_DEFINED__
typedef interface IAgentEx IAgentEx;
#endif 	/* __IAgentEx_FWD_DEFINED__ */


#ifndef __IAgentNotifySink_FWD_DEFINED__
#define __IAgentNotifySink_FWD_DEFINED__
typedef interface IAgentNotifySink IAgentNotifySink;
#endif 	/* __IAgentNotifySink_FWD_DEFINED__ */


#ifndef __IAgentNotifySinkEx_FWD_DEFINED__
#define __IAgentNotifySinkEx_FWD_DEFINED__
typedef interface IAgentNotifySinkEx IAgentNotifySinkEx;
#endif 	/* __IAgentNotifySinkEx_FWD_DEFINED__ */


#ifndef __IAgentPrivateNotifySink_FWD_DEFINED__
#define __IAgentPrivateNotifySink_FWD_DEFINED__
typedef interface IAgentPrivateNotifySink IAgentPrivateNotifySink;
#endif 	/* __IAgentPrivateNotifySink_FWD_DEFINED__ */


#ifndef __IAgentCustomMarshalMaker_FWD_DEFINED__
#define __IAgentCustomMarshalMaker_FWD_DEFINED__
typedef interface IAgentCustomMarshalMaker IAgentCustomMarshalMaker;
#endif 	/* __IAgentCustomMarshalMaker_FWD_DEFINED__ */


#ifndef __IAgentClientStatus_FWD_DEFINED__
#define __IAgentClientStatus_FWD_DEFINED__
typedef interface IAgentClientStatus IAgentClientStatus;
#endif 	/* __IAgentClientStatus_FWD_DEFINED__ */


#ifndef __AgentServer_FWD_DEFINED__
#define __AgentServer_FWD_DEFINED__

#ifdef __cplusplus
typedef class AgentServer AgentServer;
#else
typedef struct AgentServer AgentServer;
#endif /* __cplusplus */

#endif 	/* __AgentServer_FWD_DEFINED__ */


#ifndef __IAgentUserInput_FWD_DEFINED__
#define __IAgentUserInput_FWD_DEFINED__
typedef interface IAgentUserInput IAgentUserInput;
#endif 	/* __IAgentUserInput_FWD_DEFINED__ */


#ifndef __IAgentCommand_FWD_DEFINED__
#define __IAgentCommand_FWD_DEFINED__
typedef interface IAgentCommand IAgentCommand;
#endif 	/* __IAgentCommand_FWD_DEFINED__ */


#ifndef __IAgentCommandEx_FWD_DEFINED__
#define __IAgentCommandEx_FWD_DEFINED__
typedef interface IAgentCommandEx IAgentCommandEx;
#endif 	/* __IAgentCommandEx_FWD_DEFINED__ */


#ifndef __IAgentCommands_FWD_DEFINED__
#define __IAgentCommands_FWD_DEFINED__
typedef interface IAgentCommands IAgentCommands;
#endif 	/* __IAgentCommands_FWD_DEFINED__ */


#ifndef __IAgentCommandsEx_FWD_DEFINED__
#define __IAgentCommandsEx_FWD_DEFINED__
typedef interface IAgentCommandsEx IAgentCommandsEx;
#endif 	/* __IAgentCommandsEx_FWD_DEFINED__ */


#ifndef __IAgentSpeechInputProperties_FWD_DEFINED__
#define __IAgentSpeechInputProperties_FWD_DEFINED__
typedef interface IAgentSpeechInputProperties IAgentSpeechInputProperties;
#endif 	/* __IAgentSpeechInputProperties_FWD_DEFINED__ */


#ifndef __IAgentAudioOutputProperties_FWD_DEFINED__
#define __IAgentAudioOutputProperties_FWD_DEFINED__
typedef interface IAgentAudioOutputProperties IAgentAudioOutputProperties;
#endif 	/* __IAgentAudioOutputProperties_FWD_DEFINED__ */


#ifndef __IAgentAudioOutputPropertiesEx_FWD_DEFINED__
#define __IAgentAudioOutputPropertiesEx_FWD_DEFINED__
typedef interface IAgentAudioOutputPropertiesEx IAgentAudioOutputPropertiesEx;
#endif 	/* __IAgentAudioOutputPropertiesEx_FWD_DEFINED__ */


#ifndef __IAgentPropertySheet_FWD_DEFINED__
#define __IAgentPropertySheet_FWD_DEFINED__
typedef interface IAgentPropertySheet IAgentPropertySheet;
#endif 	/* __IAgentPropertySheet_FWD_DEFINED__ */


#ifndef __IAgentBalloon_FWD_DEFINED__
#define __IAgentBalloon_FWD_DEFINED__
typedef interface IAgentBalloon IAgentBalloon;
#endif 	/* __IAgentBalloon_FWD_DEFINED__ */


#ifndef __IAgentBalloonEx_FWD_DEFINED__
#define __IAgentBalloonEx_FWD_DEFINED__
typedef interface IAgentBalloonEx IAgentBalloonEx;
#endif 	/* __IAgentBalloonEx_FWD_DEFINED__ */


#ifndef __IAgentCharacter_FWD_DEFINED__
#define __IAgentCharacter_FWD_DEFINED__
typedef interface IAgentCharacter IAgentCharacter;
#endif 	/* __IAgentCharacter_FWD_DEFINED__ */


#ifndef __IAgentCharacterEx_FWD_DEFINED__
#define __IAgentCharacterEx_FWD_DEFINED__
typedef interface IAgentCharacterEx IAgentCharacterEx;
#endif 	/* __IAgentCharacterEx_FWD_DEFINED__ */


#ifndef __IAgent_FWD_DEFINED__
#define __IAgent_FWD_DEFINED__
typedef interface IAgent IAgent;
#endif 	/* __IAgent_FWD_DEFINED__ */


#ifndef __IAgentEx_FWD_DEFINED__
#define __IAgentEx_FWD_DEFINED__
typedef interface IAgentEx IAgentEx;
#endif 	/* __IAgentEx_FWD_DEFINED__ */


#ifndef __IAgentNotifySink_FWD_DEFINED__
#define __IAgentNotifySink_FWD_DEFINED__
typedef interface IAgentNotifySink IAgentNotifySink;
#endif 	/* __IAgentNotifySink_FWD_DEFINED__ */


#ifndef __IAgentNotifySinkEx_FWD_DEFINED__
#define __IAgentNotifySinkEx_FWD_DEFINED__
typedef interface IAgentNotifySinkEx IAgentNotifySinkEx;
#endif 	/* __IAgentNotifySinkEx_FWD_DEFINED__ */


#ifndef __IAgentCommandWindow_FWD_DEFINED__
#define __IAgentCommandWindow_FWD_DEFINED__
typedef interface IAgentCommandWindow IAgentCommandWindow;
#endif 	/* __IAgentCommandWindow_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"
#include "ocidl.h"

void __RPC_FAR * __RPC_USER MIDL_user_allocate(size_t);
void __RPC_USER MIDL_user_free( void __RPC_FAR * ); 

/* interface __MIDL_itf_AgentServer_0000 */
/* [local] */ 

#define	NeverMoved	( 0 )

#define	UserMoved	( 1 )

#define	ProgramMoved	( 2 )

#define	OtherProgramMoved	( 3 )

#define	SystemMoved	( 4 )

#define	NeverShown	( 0 )

#define	UserHid	( 1 )

#define	UserShowed	( 2 )

#define	ProgramHid	( 3 )

#define	ProgramShowed	( 4 )

#define	OtherProgramHid	( 5 )

#define	OtherProgramShowed	( 6 )

#define	UserHidViaCharacterMenu	( 7 )

#define	UserHidViaTaskbarIcon	( UserHid )

#define	CSHELPCAUSE_COMMAND	( 1 )

#define	CSHELPCAUSE_OTHERPROGRAM	( 2 )

#define	CSHELPCAUSE_OPENCOMMANDSWINDOW	( 3 )

#define	CSHELPCAUSE_CLOSECOMMANDSWINDOW	( 4 )

#define	CSHELPCAUSE_SHOWCHARACTER	( 5 )

#define	CSHELPCAUSE_HIDECHARACTER	( 6 )

#define	CSHELPCAUSE_CHARACTER	( 7 )

#define	ACTIVATE_NOTTOPMOST	( 0 )

#define	ACTIVATE_TOPMOST	( 1 )

#define	ACTIVATE_NOTACTIVE	( 0 )

#define	ACTIVATE_ACTIVE	( 1 )

#define	ACTIVATE_INPUTACTIVE	( 2 )

#define	PREPARE_ANIMATION	( 0 )

#define	PREPARE_STATE	( 1 )

#define	PREPARE_WAVE	( 2 )

#define	STOP_TYPE_PLAY	( 0x1 )

#define	STOP_TYPE_MOVE	( 0x2 )

#define	STOP_TYPE_SPEAK	( 0x4 )

#define	STOP_TYPE_PREPARE	( 0x8 )

#define	STOP_TYPE_NONQUEUEDPREPARE	( 0x10 )

#define	STOP_TYPE_VISIBLE	( 0x20 )

#define	STOP_TYPE_ALL	( 0xffffffff )

#define	BALLOON_STYLE_BALLOON_ON	( 0x1 )

#define	BALLOON_STYLE_SIZETOTEXT	( 0x2 )

#define	BALLOON_STYLE_AUTOHIDE	( 0x4 )

#define	BALLOON_STYLE_AUTOPACE	( 0x8 )

#define	AUDIO_STATUS_AVAILABLE	( 0 )

#define	AUDIO_STATUS_NOAUDIO	( 1 )

#define	AUDIO_STATUS_CANTOPENAUDIO	( 2 )

#define	AUDIO_STATUS_USERSPEAKING	( 3 )

#define	AUDIO_STATUS_CHARACTERSPEAKING	( 4 )

#define	AUDIO_STATUS_SROVERRIDEABLE	( 5 )

#define	AUDIO_STATUS_ERROR	( 6 )

#define	LISTEN_STATUS_CANLISTEN	( 0 )

#define	LISTEN_STATUS_NOAUDIO	( 1 )

#define	LISTEN_STATUS_NOTACTIVE	( 2 )

#define	LISTEN_STATUS_CANTOPENAUDIO	( 3 )

#define	LISTEN_STATUS_COULDNTINITIALIZESPEECH	( 4 )

#define	LISTEN_STATUS_SPEECHDISABLED	( 5 )

#define	LISTEN_STATUS_ERROR	( 6 )

#define	MK_ICON	( 0x1000 )

#define	LSCOMPLETE_CAUSE_PROGRAMDISABLED	( 1 )

#define	LSCOMPLETE_CAUSE_PROGRAMTIMEDOUT	( 2 )

#define	LSCOMPLETE_CAUSE_USERTIMEDOUT	( 3 )

#define	LSCOMPLETE_CAUSE_USERRELEASEDKEY	( 4 )

#define	LSCOMPLETE_CAUSE_USERUTTERANCEENDED	( 5 )

#define	LSCOMPLETE_CAUSE_CLIENTDEACTIVATED	( 6 )

#define	LSCOMPLETE_CAUSE_DEFAULTCHARCHANGE	( 7 )

#define	LSCOMPLETE_CAUSE_USERDISABLED	( 8 )



extern RPC_IF_HANDLE __MIDL_itf_AgentServer_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_AgentServer_0000_v0_0_s_ifspec;

#ifndef __IAgentUserInput_INTERFACE_DEFINED__
#define __IAgentUserInput_INTERFACE_DEFINED__

/* interface IAgentUserInput */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentUserInput;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A7B93C80-7B81-11D0-AC5F-00C04FD97575")
    IAgentUserInput : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCount( 
            /* [out] */ long __RPC_FAR *pdwCount) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetItemID( 
            /* [in] */ long dwItemIndex,
            /* [out] */ long __RPC_FAR *pdwCommandID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetItemConfidence( 
            /* [in] */ long dwItemIndex,
            /* [out] */ long __RPC_FAR *plConfidence) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetItemText( 
            /* [in] */ long dwItemIndex,
            /* [out] */ BSTR __RPC_FAR *pbszText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAllItemData( 
            /* [out] */ VARIANT __RPC_FAR *pdwItemIndices,
            /* [out] */ VARIANT __RPC_FAR *plConfidences,
            /* [out] */ VARIANT __RPC_FAR *pbszText) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentUserInputVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentUserInput __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentUserInput __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentUserInput __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentUserInput __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentUserInput __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentUserInput __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentUserInput __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCount )( 
            IAgentUserInput __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pdwCount);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetItemID )( 
            IAgentUserInput __RPC_FAR * This,
            /* [in] */ long dwItemIndex,
            /* [out] */ long __RPC_FAR *pdwCommandID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetItemConfidence )( 
            IAgentUserInput __RPC_FAR * This,
            /* [in] */ long dwItemIndex,
            /* [out] */ long __RPC_FAR *plConfidence);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetItemText )( 
            IAgentUserInput __RPC_FAR * This,
            /* [in] */ long dwItemIndex,
            /* [out] */ BSTR __RPC_FAR *pbszText);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetAllItemData )( 
            IAgentUserInput __RPC_FAR * This,
            /* [out] */ VARIANT __RPC_FAR *pdwItemIndices,
            /* [out] */ VARIANT __RPC_FAR *plConfidences,
            /* [out] */ VARIANT __RPC_FAR *pbszText);
        
        END_INTERFACE
    } IAgentUserInputVtbl;

    interface IAgentUserInput
    {
        CONST_VTBL struct IAgentUserInputVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentUserInput_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentUserInput_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentUserInput_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentUserInput_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentUserInput_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentUserInput_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentUserInput_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentUserInput_GetCount(This,pdwCount)	\
    (This)->lpVtbl -> GetCount(This,pdwCount)

#define IAgentUserInput_GetItemID(This,dwItemIndex,pdwCommandID)	\
    (This)->lpVtbl -> GetItemID(This,dwItemIndex,pdwCommandID)

#define IAgentUserInput_GetItemConfidence(This,dwItemIndex,plConfidence)	\
    (This)->lpVtbl -> GetItemConfidence(This,dwItemIndex,plConfidence)

#define IAgentUserInput_GetItemText(This,dwItemIndex,pbszText)	\
    (This)->lpVtbl -> GetItemText(This,dwItemIndex,pbszText)

#define IAgentUserInput_GetAllItemData(This,pdwItemIndices,plConfidences,pbszText)	\
    (This)->lpVtbl -> GetAllItemData(This,pdwItemIndices,plConfidences,pbszText)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentUserInput_GetCount_Proxy( 
    IAgentUserInput __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pdwCount);


void __RPC_STUB IAgentUserInput_GetCount_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentUserInput_GetItemID_Proxy( 
    IAgentUserInput __RPC_FAR * This,
    /* [in] */ long dwItemIndex,
    /* [out] */ long __RPC_FAR *pdwCommandID);


void __RPC_STUB IAgentUserInput_GetItemID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentUserInput_GetItemConfidence_Proxy( 
    IAgentUserInput __RPC_FAR * This,
    /* [in] */ long dwItemIndex,
    /* [out] */ long __RPC_FAR *plConfidence);


void __RPC_STUB IAgentUserInput_GetItemConfidence_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentUserInput_GetItemText_Proxy( 
    IAgentUserInput __RPC_FAR * This,
    /* [in] */ long dwItemIndex,
    /* [out] */ BSTR __RPC_FAR *pbszText);


void __RPC_STUB IAgentUserInput_GetItemText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentUserInput_GetAllItemData_Proxy( 
    IAgentUserInput __RPC_FAR * This,
    /* [out] */ VARIANT __RPC_FAR *pdwItemIndices,
    /* [out] */ VARIANT __RPC_FAR *plConfidences,
    /* [out] */ VARIANT __RPC_FAR *pbszText);


void __RPC_STUB IAgentUserInput_GetAllItemData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentUserInput_INTERFACE_DEFINED__ */


#ifndef __IAgentCommand_INTERFACE_DEFINED__
#define __IAgentCommand_INTERFACE_DEFINED__

/* interface IAgentCommand */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentCommand;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A7B93C83-7B81-11D0-AC5F-00C04FD97575")
    IAgentCommand : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetCaption( 
            /* [in] */ BSTR bszCaption) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCaption( 
            /* [out] */ BSTR __RPC_FAR *pbszCaption) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetVoice( 
            /* [in] */ BSTR bszVoice) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVoice( 
            /* [out] */ BSTR __RPC_FAR *pbszVoice) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetEnabled( 
            /* [in] */ long bEnabled) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEnabled( 
            /* [out] */ long __RPC_FAR *pbEnabled) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetVisible( 
            /* [in] */ long bVisible) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVisible( 
            /* [out] */ long __RPC_FAR *pbVisible) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetConfidenceThreshold( 
            /* [in] */ long lThreshold) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetConfidenceThreshold( 
            /* [out] */ long __RPC_FAR *plThreshold) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetConfidenceText( 
            /* [in] */ BSTR bszTipText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetConfidenceText( 
            /* [out] */ BSTR __RPC_FAR *pbszTipText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetID( 
            /* [out] */ long __RPC_FAR *pdwID) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCommandVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCommand __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCommand __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCommand __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCommand __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCommand __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCommand __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCommand __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetCaption )( 
            IAgentCommand __RPC_FAR * This,
            /* [in] */ BSTR bszCaption);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCaption )( 
            IAgentCommand __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszCaption);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVoice )( 
            IAgentCommand __RPC_FAR * This,
            /* [in] */ BSTR bszVoice);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVoice )( 
            IAgentCommand __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszVoice);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetEnabled )( 
            IAgentCommand __RPC_FAR * This,
            /* [in] */ long bEnabled);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetEnabled )( 
            IAgentCommand __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbEnabled);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVisible )( 
            IAgentCommand __RPC_FAR * This,
            /* [in] */ long bVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVisible )( 
            IAgentCommand __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetConfidenceThreshold )( 
            IAgentCommand __RPC_FAR * This,
            /* [in] */ long lThreshold);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetConfidenceThreshold )( 
            IAgentCommand __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plThreshold);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetConfidenceText )( 
            IAgentCommand __RPC_FAR * This,
            /* [in] */ BSTR bszTipText);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetConfidenceText )( 
            IAgentCommand __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszTipText);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetID )( 
            IAgentCommand __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pdwID);
        
        END_INTERFACE
    } IAgentCommandVtbl;

    interface IAgentCommand
    {
        CONST_VTBL struct IAgentCommandVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCommand_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCommand_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCommand_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCommand_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCommand_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCommand_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCommand_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCommand_SetCaption(This,bszCaption)	\
    (This)->lpVtbl -> SetCaption(This,bszCaption)

#define IAgentCommand_GetCaption(This,pbszCaption)	\
    (This)->lpVtbl -> GetCaption(This,pbszCaption)

#define IAgentCommand_SetVoice(This,bszVoice)	\
    (This)->lpVtbl -> SetVoice(This,bszVoice)

#define IAgentCommand_GetVoice(This,pbszVoice)	\
    (This)->lpVtbl -> GetVoice(This,pbszVoice)

#define IAgentCommand_SetEnabled(This,bEnabled)	\
    (This)->lpVtbl -> SetEnabled(This,bEnabled)

#define IAgentCommand_GetEnabled(This,pbEnabled)	\
    (This)->lpVtbl -> GetEnabled(This,pbEnabled)

#define IAgentCommand_SetVisible(This,bVisible)	\
    (This)->lpVtbl -> SetVisible(This,bVisible)

#define IAgentCommand_GetVisible(This,pbVisible)	\
    (This)->lpVtbl -> GetVisible(This,pbVisible)

#define IAgentCommand_SetConfidenceThreshold(This,lThreshold)	\
    (This)->lpVtbl -> SetConfidenceThreshold(This,lThreshold)

#define IAgentCommand_GetConfidenceThreshold(This,plThreshold)	\
    (This)->lpVtbl -> GetConfidenceThreshold(This,plThreshold)

#define IAgentCommand_SetConfidenceText(This,bszTipText)	\
    (This)->lpVtbl -> SetConfidenceText(This,bszTipText)

#define IAgentCommand_GetConfidenceText(This,pbszTipText)	\
    (This)->lpVtbl -> GetConfidenceText(This,pbszTipText)

#define IAgentCommand_GetID(This,pdwID)	\
    (This)->lpVtbl -> GetID(This,pdwID)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentCommand_SetCaption_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [in] */ BSTR bszCaption);


void __RPC_STUB IAgentCommand_SetCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommand_GetCaption_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszCaption);


void __RPC_STUB IAgentCommand_GetCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommand_SetVoice_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [in] */ BSTR bszVoice);


void __RPC_STUB IAgentCommand_SetVoice_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommand_GetVoice_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszVoice);


void __RPC_STUB IAgentCommand_GetVoice_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommand_SetEnabled_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [in] */ long bEnabled);


void __RPC_STUB IAgentCommand_SetEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommand_GetEnabled_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbEnabled);


void __RPC_STUB IAgentCommand_GetEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommand_SetVisible_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [in] */ long bVisible);


void __RPC_STUB IAgentCommand_SetVisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommand_GetVisible_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbVisible);


void __RPC_STUB IAgentCommand_GetVisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommand_SetConfidenceThreshold_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [in] */ long lThreshold);


void __RPC_STUB IAgentCommand_SetConfidenceThreshold_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommand_GetConfidenceThreshold_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plThreshold);


void __RPC_STUB IAgentCommand_GetConfidenceThreshold_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommand_SetConfidenceText_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [in] */ BSTR bszTipText);


void __RPC_STUB IAgentCommand_SetConfidenceText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommand_GetConfidenceText_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszTipText);


void __RPC_STUB IAgentCommand_GetConfidenceText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommand_GetID_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pdwID);


void __RPC_STUB IAgentCommand_GetID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCommand_INTERFACE_DEFINED__ */


#ifndef __IAgentCommandEx_INTERFACE_DEFINED__
#define __IAgentCommandEx_INTERFACE_DEFINED__

/* interface IAgentCommandEx */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentCommandEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B0913412-3B44-11d1-ACBA-00C04FD97575")
    IAgentCommandEx : public IAgentCommand
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetHelpContextID( 
            /* [in] */ long ulID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetHelpContextID( 
            /* [out] */ long __RPC_FAR *pulID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetVoiceCaption( 
            /* [in] */ BSTR bszVoiceCaption) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVoiceCaption( 
            /* [out] */ BSTR __RPC_FAR *pbszVoiceCaption) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCommandExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCommandEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCommandEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetCaption )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [in] */ BSTR bszCaption);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCaption )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszCaption);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVoice )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [in] */ BSTR bszVoice);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVoice )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszVoice);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetEnabled )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [in] */ long bEnabled);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetEnabled )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbEnabled);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVisible )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [in] */ long bVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVisible )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetConfidenceThreshold )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [in] */ long lThreshold);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetConfidenceThreshold )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plThreshold);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetConfidenceText )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [in] */ BSTR bszTipText);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetConfidenceText )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszTipText);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetID )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pdwID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetHelpContextID )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [in] */ long ulID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetHelpContextID )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pulID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVoiceCaption )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [in] */ BSTR bszVoiceCaption);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVoiceCaption )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszVoiceCaption);
        
        END_INTERFACE
    } IAgentCommandExVtbl;

    interface IAgentCommandEx
    {
        CONST_VTBL struct IAgentCommandExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCommandEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCommandEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCommandEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCommandEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCommandEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCommandEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCommandEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCommandEx_SetCaption(This,bszCaption)	\
    (This)->lpVtbl -> SetCaption(This,bszCaption)

#define IAgentCommandEx_GetCaption(This,pbszCaption)	\
    (This)->lpVtbl -> GetCaption(This,pbszCaption)

#define IAgentCommandEx_SetVoice(This,bszVoice)	\
    (This)->lpVtbl -> SetVoice(This,bszVoice)

#define IAgentCommandEx_GetVoice(This,pbszVoice)	\
    (This)->lpVtbl -> GetVoice(This,pbszVoice)

#define IAgentCommandEx_SetEnabled(This,bEnabled)	\
    (This)->lpVtbl -> SetEnabled(This,bEnabled)

#define IAgentCommandEx_GetEnabled(This,pbEnabled)	\
    (This)->lpVtbl -> GetEnabled(This,pbEnabled)

#define IAgentCommandEx_SetVisible(This,bVisible)	\
    (This)->lpVtbl -> SetVisible(This,bVisible)

#define IAgentCommandEx_GetVisible(This,pbVisible)	\
    (This)->lpVtbl -> GetVisible(This,pbVisible)

#define IAgentCommandEx_SetConfidenceThreshold(This,lThreshold)	\
    (This)->lpVtbl -> SetConfidenceThreshold(This,lThreshold)

#define IAgentCommandEx_GetConfidenceThreshold(This,plThreshold)	\
    (This)->lpVtbl -> GetConfidenceThreshold(This,plThreshold)

#define IAgentCommandEx_SetConfidenceText(This,bszTipText)	\
    (This)->lpVtbl -> SetConfidenceText(This,bszTipText)

#define IAgentCommandEx_GetConfidenceText(This,pbszTipText)	\
    (This)->lpVtbl -> GetConfidenceText(This,pbszTipText)

#define IAgentCommandEx_GetID(This,pdwID)	\
    (This)->lpVtbl -> GetID(This,pdwID)


#define IAgentCommandEx_SetHelpContextID(This,ulID)	\
    (This)->lpVtbl -> SetHelpContextID(This,ulID)

#define IAgentCommandEx_GetHelpContextID(This,pulID)	\
    (This)->lpVtbl -> GetHelpContextID(This,pulID)

#define IAgentCommandEx_SetVoiceCaption(This,bszVoiceCaption)	\
    (This)->lpVtbl -> SetVoiceCaption(This,bszVoiceCaption)

#define IAgentCommandEx_GetVoiceCaption(This,pbszVoiceCaption)	\
    (This)->lpVtbl -> GetVoiceCaption(This,pbszVoiceCaption)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentCommandEx_SetHelpContextID_Proxy( 
    IAgentCommandEx __RPC_FAR * This,
    /* [in] */ long ulID);


void __RPC_STUB IAgentCommandEx_SetHelpContextID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandEx_GetHelpContextID_Proxy( 
    IAgentCommandEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pulID);


void __RPC_STUB IAgentCommandEx_GetHelpContextID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandEx_SetVoiceCaption_Proxy( 
    IAgentCommandEx __RPC_FAR * This,
    /* [in] */ BSTR bszVoiceCaption);


void __RPC_STUB IAgentCommandEx_SetVoiceCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandEx_GetVoiceCaption_Proxy( 
    IAgentCommandEx __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszVoiceCaption);


void __RPC_STUB IAgentCommandEx_GetVoiceCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCommandEx_INTERFACE_DEFINED__ */


#ifndef __IAgentCommands_INTERFACE_DEFINED__
#define __IAgentCommands_INTERFACE_DEFINED__

/* interface IAgentCommands */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentCommands;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A7B93C85-7B81-11D0-AC5F-00C04FD97575")
    IAgentCommands : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCommand( 
            /* [in] */ long dwCommandID,
            /* [out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkCommand) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCount( 
            /* [out] */ long __RPC_FAR *pdwCount) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetCaption( 
            /* [in] */ BSTR bszCaption) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCaption( 
            /* [out] */ BSTR __RPC_FAR *pbszCaption) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetVoice( 
            /* [in] */ BSTR bszVoice) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVoice( 
            /* [out] */ BSTR __RPC_FAR *pbszVoice) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetVisible( 
            /* [in] */ long bVisible) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVisible( 
            /* [out] */ long __RPC_FAR *pbVisible) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR bszCaption,
            /* [in] */ BSTR bszVoice,
            /* [in] */ long bEnabled,
            /* [in] */ long bVisible,
            /* [out] */ long __RPC_FAR *pdwID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Insert( 
            /* [in] */ BSTR bszCaption,
            /* [in] */ BSTR bszVoice,
            /* [in] */ long bEnabled,
            /* [in] */ long bVisible,
            /* [in] */ long dwRefID,
            /* [in] */ long bBefore,
            /* [out] */ long __RPC_FAR *pdwID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ long dwID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAll( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCommandsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCommands __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCommands __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCommands __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCommands __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCommands __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCommands __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCommands __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCommand )( 
            IAgentCommands __RPC_FAR * This,
            /* [in] */ long dwCommandID,
            /* [out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkCommand);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCount )( 
            IAgentCommands __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pdwCount);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetCaption )( 
            IAgentCommands __RPC_FAR * This,
            /* [in] */ BSTR bszCaption);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCaption )( 
            IAgentCommands __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszCaption);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVoice )( 
            IAgentCommands __RPC_FAR * This,
            /* [in] */ BSTR bszVoice);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVoice )( 
            IAgentCommands __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszVoice);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVisible )( 
            IAgentCommands __RPC_FAR * This,
            /* [in] */ long bVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVisible )( 
            IAgentCommands __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Add )( 
            IAgentCommands __RPC_FAR * This,
            /* [in] */ BSTR bszCaption,
            /* [in] */ BSTR bszVoice,
            /* [in] */ long bEnabled,
            /* [in] */ long bVisible,
            /* [out] */ long __RPC_FAR *pdwID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Insert )( 
            IAgentCommands __RPC_FAR * This,
            /* [in] */ BSTR bszCaption,
            /* [in] */ BSTR bszVoice,
            /* [in] */ long bEnabled,
            /* [in] */ long bVisible,
            /* [in] */ long dwRefID,
            /* [in] */ long bBefore,
            /* [out] */ long __RPC_FAR *pdwID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Remove )( 
            IAgentCommands __RPC_FAR * This,
            /* [in] */ long dwID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RemoveAll )( 
            IAgentCommands __RPC_FAR * This);
        
        END_INTERFACE
    } IAgentCommandsVtbl;

    interface IAgentCommands
    {
        CONST_VTBL struct IAgentCommandsVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCommands_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCommands_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCommands_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCommands_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCommands_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCommands_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCommands_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCommands_GetCommand(This,dwCommandID,ppunkCommand)	\
    (This)->lpVtbl -> GetCommand(This,dwCommandID,ppunkCommand)

#define IAgentCommands_GetCount(This,pdwCount)	\
    (This)->lpVtbl -> GetCount(This,pdwCount)

#define IAgentCommands_SetCaption(This,bszCaption)	\
    (This)->lpVtbl -> SetCaption(This,bszCaption)

#define IAgentCommands_GetCaption(This,pbszCaption)	\
    (This)->lpVtbl -> GetCaption(This,pbszCaption)

#define IAgentCommands_SetVoice(This,bszVoice)	\
    (This)->lpVtbl -> SetVoice(This,bszVoice)

#define IAgentCommands_GetVoice(This,pbszVoice)	\
    (This)->lpVtbl -> GetVoice(This,pbszVoice)

#define IAgentCommands_SetVisible(This,bVisible)	\
    (This)->lpVtbl -> SetVisible(This,bVisible)

#define IAgentCommands_GetVisible(This,pbVisible)	\
    (This)->lpVtbl -> GetVisible(This,pbVisible)

#define IAgentCommands_Add(This,bszCaption,bszVoice,bEnabled,bVisible,pdwID)	\
    (This)->lpVtbl -> Add(This,bszCaption,bszVoice,bEnabled,bVisible,pdwID)

#define IAgentCommands_Insert(This,bszCaption,bszVoice,bEnabled,bVisible,dwRefID,bBefore,pdwID)	\
    (This)->lpVtbl -> Insert(This,bszCaption,bszVoice,bEnabled,bVisible,dwRefID,bBefore,pdwID)

#define IAgentCommands_Remove(This,dwID)	\
    (This)->lpVtbl -> Remove(This,dwID)

#define IAgentCommands_RemoveAll(This)	\
    (This)->lpVtbl -> RemoveAll(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentCommands_GetCommand_Proxy( 
    IAgentCommands __RPC_FAR * This,
    /* [in] */ long dwCommandID,
    /* [out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkCommand);


void __RPC_STUB IAgentCommands_GetCommand_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommands_GetCount_Proxy( 
    IAgentCommands __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pdwCount);


void __RPC_STUB IAgentCommands_GetCount_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommands_SetCaption_Proxy( 
    IAgentCommands __RPC_FAR * This,
    /* [in] */ BSTR bszCaption);


void __RPC_STUB IAgentCommands_SetCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommands_GetCaption_Proxy( 
    IAgentCommands __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszCaption);


void __RPC_STUB IAgentCommands_GetCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommands_SetVoice_Proxy( 
    IAgentCommands __RPC_FAR * This,
    /* [in] */ BSTR bszVoice);


void __RPC_STUB IAgentCommands_SetVoice_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommands_GetVoice_Proxy( 
    IAgentCommands __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszVoice);


void __RPC_STUB IAgentCommands_GetVoice_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommands_SetVisible_Proxy( 
    IAgentCommands __RPC_FAR * This,
    /* [in] */ long bVisible);


void __RPC_STUB IAgentCommands_SetVisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommands_GetVisible_Proxy( 
    IAgentCommands __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbVisible);


void __RPC_STUB IAgentCommands_GetVisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommands_Add_Proxy( 
    IAgentCommands __RPC_FAR * This,
    /* [in] */ BSTR bszCaption,
    /* [in] */ BSTR bszVoice,
    /* [in] */ long bEnabled,
    /* [in] */ long bVisible,
    /* [out] */ long __RPC_FAR *pdwID);


void __RPC_STUB IAgentCommands_Add_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommands_Insert_Proxy( 
    IAgentCommands __RPC_FAR * This,
    /* [in] */ BSTR bszCaption,
    /* [in] */ BSTR bszVoice,
    /* [in] */ long bEnabled,
    /* [in] */ long bVisible,
    /* [in] */ long dwRefID,
    /* [in] */ long bBefore,
    /* [out] */ long __RPC_FAR *pdwID);


void __RPC_STUB IAgentCommands_Insert_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommands_Remove_Proxy( 
    IAgentCommands __RPC_FAR * This,
    /* [in] */ long dwID);


void __RPC_STUB IAgentCommands_Remove_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommands_RemoveAll_Proxy( 
    IAgentCommands __RPC_FAR * This);


void __RPC_STUB IAgentCommands_RemoveAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCommands_INTERFACE_DEFINED__ */


#ifndef __IAgentCommandsEx_INTERFACE_DEFINED__
#define __IAgentCommandsEx_INTERFACE_DEFINED__

/* interface IAgentCommandsEx */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentCommandsEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6BA90C00-3910-11d1-ACB3-00C04FD97575")
    IAgentCommandsEx : public IAgentCommands
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCommandEx( 
            /* [in] */ long dwCommandID,
            /* [out] */ IAgentCommandEx __RPC_FAR *__RPC_FAR *ppCommandEx) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetDefaultID( 
            /* [in] */ long dwID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDefaultID( 
            /* [out] */ long __RPC_FAR *pdwID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetHelpContextID( 
            /* [in] */ long ulHelpID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetHelpContextID( 
            /* [out] */ long __RPC_FAR *pulHelpID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetFontName( 
            /* [in] */ BSTR bszFontName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFontName( 
            /* [out] */ BSTR __RPC_FAR *pbszFontName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetFontSize( 
            /* [in] */ long lFontSize) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFontSize( 
            /* [out] */ long __RPC_FAR *lFontSize) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetVoiceCaption( 
            /* [in] */ BSTR bszVoiceCaption) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVoiceCaption( 
            /* [out] */ BSTR __RPC_FAR *bszVoiceCaption) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddEx( 
            /* [in] */ BSTR bszCaption,
            /* [in] */ BSTR bszVoice,
            /* [in] */ BSTR bszVoiceCaption,
            /* [in] */ long bEnabled,
            /* [in] */ long bVisible,
            /* [in] */ long ulHelpId,
            /* [out] */ long __RPC_FAR *pdwID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertEx( 
            /* [in] */ BSTR bszCaption,
            /* [in] */ BSTR bszVoice,
            /* [in] */ BSTR bszVoiceCaption,
            /* [in] */ long bEnabled,
            /* [in] */ long bVisible,
            /* [in] */ long ulHelpId,
            /* [in] */ long dwRefID,
            /* [in] */ long bBefore,
            /* [out] */ long __RPC_FAR *pdwID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetGlobalVoiceCommandsEnabled( 
            /* [in] */ long bEnable) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetGlobalVoiceCommandsEnabled( 
            /* [out] */ long __RPC_FAR *pbEnabled) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCommandsExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCommandsEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCommandsEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCommand )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ long dwCommandID,
            /* [out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkCommand);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCount )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pdwCount);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetCaption )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR bszCaption);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCaption )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszCaption);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVoice )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR bszVoice);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVoice )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszVoice);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVisible )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ long bVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVisible )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Add )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR bszCaption,
            /* [in] */ BSTR bszVoice,
            /* [in] */ long bEnabled,
            /* [in] */ long bVisible,
            /* [out] */ long __RPC_FAR *pdwID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Insert )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR bszCaption,
            /* [in] */ BSTR bszVoice,
            /* [in] */ long bEnabled,
            /* [in] */ long bVisible,
            /* [in] */ long dwRefID,
            /* [in] */ long bBefore,
            /* [out] */ long __RPC_FAR *pdwID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Remove )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ long dwID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RemoveAll )( 
            IAgentCommandsEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCommandEx )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ long dwCommandID,
            /* [out] */ IAgentCommandEx __RPC_FAR *__RPC_FAR *ppCommandEx);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetDefaultID )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ long dwID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetDefaultID )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pdwID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetHelpContextID )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ long ulHelpID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetHelpContextID )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pulHelpID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFontName )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR bszFontName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontName )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszFontName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFontSize )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ long lFontSize);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontSize )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *lFontSize);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVoiceCaption )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR bszVoiceCaption);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVoiceCaption )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *bszVoiceCaption);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AddEx )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR bszCaption,
            /* [in] */ BSTR bszVoice,
            /* [in] */ BSTR bszVoiceCaption,
            /* [in] */ long bEnabled,
            /* [in] */ long bVisible,
            /* [in] */ long ulHelpId,
            /* [out] */ long __RPC_FAR *pdwID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *InsertEx )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR bszCaption,
            /* [in] */ BSTR bszVoice,
            /* [in] */ BSTR bszVoiceCaption,
            /* [in] */ long bEnabled,
            /* [in] */ long bVisible,
            /* [in] */ long ulHelpId,
            /* [in] */ long dwRefID,
            /* [in] */ long bBefore,
            /* [out] */ long __RPC_FAR *pdwID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetGlobalVoiceCommandsEnabled )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ long bEnable);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetGlobalVoiceCommandsEnabled )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbEnabled);
        
        END_INTERFACE
    } IAgentCommandsExVtbl;

    interface IAgentCommandsEx
    {
        CONST_VTBL struct IAgentCommandsExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCommandsEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCommandsEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCommandsEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCommandsEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCommandsEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCommandsEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCommandsEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCommandsEx_GetCommand(This,dwCommandID,ppunkCommand)	\
    (This)->lpVtbl -> GetCommand(This,dwCommandID,ppunkCommand)

#define IAgentCommandsEx_GetCount(This,pdwCount)	\
    (This)->lpVtbl -> GetCount(This,pdwCount)

#define IAgentCommandsEx_SetCaption(This,bszCaption)	\
    (This)->lpVtbl -> SetCaption(This,bszCaption)

#define IAgentCommandsEx_GetCaption(This,pbszCaption)	\
    (This)->lpVtbl -> GetCaption(This,pbszCaption)

#define IAgentCommandsEx_SetVoice(This,bszVoice)	\
    (This)->lpVtbl -> SetVoice(This,bszVoice)

#define IAgentCommandsEx_GetVoice(This,pbszVoice)	\
    (This)->lpVtbl -> GetVoice(This,pbszVoice)

#define IAgentCommandsEx_SetVisible(This,bVisible)	\
    (This)->lpVtbl -> SetVisible(This,bVisible)

#define IAgentCommandsEx_GetVisible(This,pbVisible)	\
    (This)->lpVtbl -> GetVisible(This,pbVisible)

#define IAgentCommandsEx_Add(This,bszCaption,bszVoice,bEnabled,bVisible,pdwID)	\
    (This)->lpVtbl -> Add(This,bszCaption,bszVoice,bEnabled,bVisible,pdwID)

#define IAgentCommandsEx_Insert(This,bszCaption,bszVoice,bEnabled,bVisible,dwRefID,bBefore,pdwID)	\
    (This)->lpVtbl -> Insert(This,bszCaption,bszVoice,bEnabled,bVisible,dwRefID,bBefore,pdwID)

#define IAgentCommandsEx_Remove(This,dwID)	\
    (This)->lpVtbl -> Remove(This,dwID)

#define IAgentCommandsEx_RemoveAll(This)	\
    (This)->lpVtbl -> RemoveAll(This)


#define IAgentCommandsEx_GetCommandEx(This,dwCommandID,ppCommandEx)	\
    (This)->lpVtbl -> GetCommandEx(This,dwCommandID,ppCommandEx)

#define IAgentCommandsEx_SetDefaultID(This,dwID)	\
    (This)->lpVtbl -> SetDefaultID(This,dwID)

#define IAgentCommandsEx_GetDefaultID(This,pdwID)	\
    (This)->lpVtbl -> GetDefaultID(This,pdwID)

#define IAgentCommandsEx_SetHelpContextID(This,ulHelpID)	\
    (This)->lpVtbl -> SetHelpContextID(This,ulHelpID)

#define IAgentCommandsEx_GetHelpContextID(This,pulHelpID)	\
    (This)->lpVtbl -> GetHelpContextID(This,pulHelpID)

#define IAgentCommandsEx_SetFontName(This,bszFontName)	\
    (This)->lpVtbl -> SetFontName(This,bszFontName)

#define IAgentCommandsEx_GetFontName(This,pbszFontName)	\
    (This)->lpVtbl -> GetFontName(This,pbszFontName)

#define IAgentCommandsEx_SetFontSize(This,lFontSize)	\
    (This)->lpVtbl -> SetFontSize(This,lFontSize)

#define IAgentCommandsEx_GetFontSize(This,lFontSize)	\
    (This)->lpVtbl -> GetFontSize(This,lFontSize)

#define IAgentCommandsEx_SetVoiceCaption(This,bszVoiceCaption)	\
    (This)->lpVtbl -> SetVoiceCaption(This,bszVoiceCaption)

#define IAgentCommandsEx_GetVoiceCaption(This,bszVoiceCaption)	\
    (This)->lpVtbl -> GetVoiceCaption(This,bszVoiceCaption)

#define IAgentCommandsEx_AddEx(This,bszCaption,bszVoice,bszVoiceCaption,bEnabled,bVisible,ulHelpId,pdwID)	\
    (This)->lpVtbl -> AddEx(This,bszCaption,bszVoice,bszVoiceCaption,bEnabled,bVisible,ulHelpId,pdwID)

#define IAgentCommandsEx_InsertEx(This,bszCaption,bszVoice,bszVoiceCaption,bEnabled,bVisible,ulHelpId,dwRefID,bBefore,pdwID)	\
    (This)->lpVtbl -> InsertEx(This,bszCaption,bszVoice,bszVoiceCaption,bEnabled,bVisible,ulHelpId,dwRefID,bBefore,pdwID)

#define IAgentCommandsEx_SetGlobalVoiceCommandsEnabled(This,bEnable)	\
    (This)->lpVtbl -> SetGlobalVoiceCommandsEnabled(This,bEnable)

#define IAgentCommandsEx_GetGlobalVoiceCommandsEnabled(This,pbEnabled)	\
    (This)->lpVtbl -> GetGlobalVoiceCommandsEnabled(This,pbEnabled)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentCommandsEx_GetCommandEx_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [in] */ long dwCommandID,
    /* [out] */ IAgentCommandEx __RPC_FAR *__RPC_FAR *ppCommandEx);


void __RPC_STUB IAgentCommandsEx_GetCommandEx_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_SetDefaultID_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [in] */ long dwID);


void __RPC_STUB IAgentCommandsEx_SetDefaultID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_GetDefaultID_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pdwID);


void __RPC_STUB IAgentCommandsEx_GetDefaultID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_SetHelpContextID_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [in] */ long ulHelpID);


void __RPC_STUB IAgentCommandsEx_SetHelpContextID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_GetHelpContextID_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pulHelpID);


void __RPC_STUB IAgentCommandsEx_GetHelpContextID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_SetFontName_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [in] */ BSTR bszFontName);


void __RPC_STUB IAgentCommandsEx_SetFontName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_GetFontName_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszFontName);


void __RPC_STUB IAgentCommandsEx_GetFontName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_SetFontSize_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [in] */ long lFontSize);


void __RPC_STUB IAgentCommandsEx_SetFontSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_GetFontSize_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *lFontSize);


void __RPC_STUB IAgentCommandsEx_GetFontSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_SetVoiceCaption_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [in] */ BSTR bszVoiceCaption);


void __RPC_STUB IAgentCommandsEx_SetVoiceCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_GetVoiceCaption_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *bszVoiceCaption);


void __RPC_STUB IAgentCommandsEx_GetVoiceCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_AddEx_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [in] */ BSTR bszCaption,
    /* [in] */ BSTR bszVoice,
    /* [in] */ BSTR bszVoiceCaption,
    /* [in] */ long bEnabled,
    /* [in] */ long bVisible,
    /* [in] */ long ulHelpId,
    /* [out] */ long __RPC_FAR *pdwID);


void __RPC_STUB IAgentCommandsEx_AddEx_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_InsertEx_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [in] */ BSTR bszCaption,
    /* [in] */ BSTR bszVoice,
    /* [in] */ BSTR bszVoiceCaption,
    /* [in] */ long bEnabled,
    /* [in] */ long bVisible,
    /* [in] */ long ulHelpId,
    /* [in] */ long dwRefID,
    /* [in] */ long bBefore,
    /* [out] */ long __RPC_FAR *pdwID);


void __RPC_STUB IAgentCommandsEx_InsertEx_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_SetGlobalVoiceCommandsEnabled_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [in] */ long bEnable);


void __RPC_STUB IAgentCommandsEx_SetGlobalVoiceCommandsEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_GetGlobalVoiceCommandsEnabled_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbEnabled);


void __RPC_STUB IAgentCommandsEx_GetGlobalVoiceCommandsEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCommandsEx_INTERFACE_DEFINED__ */


#ifndef __IAgentCommandWindow_INTERFACE_DEFINED__
#define __IAgentCommandWindow_INTERFACE_DEFINED__

/* interface IAgentCommandWindow */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentCommandWindow;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6D0ECB23-9968-11D0-AC6E-00C04FD97575")
    IAgentCommandWindow : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetVisible( 
            /* [in] */ long bVisible) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVisible( 
            /* [out] */ long __RPC_FAR *pbVisible) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPosition( 
            /* [out] */ long __RPC_FAR *plLeft,
            /* [out] */ long __RPC_FAR *plTop) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSize( 
            /* [out] */ long __RPC_FAR *plWidth,
            /* [out] */ long __RPC_FAR *plHeight) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCommandWindowVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCommandWindow __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCommandWindow __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCommandWindow __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCommandWindow __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCommandWindow __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCommandWindow __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCommandWindow __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVisible )( 
            IAgentCommandWindow __RPC_FAR * This,
            /* [in] */ long bVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVisible )( 
            IAgentCommandWindow __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetPosition )( 
            IAgentCommandWindow __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plLeft,
            /* [out] */ long __RPC_FAR *plTop);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSize )( 
            IAgentCommandWindow __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plWidth,
            /* [out] */ long __RPC_FAR *plHeight);
        
        END_INTERFACE
    } IAgentCommandWindowVtbl;

    interface IAgentCommandWindow
    {
        CONST_VTBL struct IAgentCommandWindowVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCommandWindow_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCommandWindow_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCommandWindow_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCommandWindow_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCommandWindow_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCommandWindow_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCommandWindow_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCommandWindow_SetVisible(This,bVisible)	\
    (This)->lpVtbl -> SetVisible(This,bVisible)

#define IAgentCommandWindow_GetVisible(This,pbVisible)	\
    (This)->lpVtbl -> GetVisible(This,pbVisible)

#define IAgentCommandWindow_GetPosition(This,plLeft,plTop)	\
    (This)->lpVtbl -> GetPosition(This,plLeft,plTop)

#define IAgentCommandWindow_GetSize(This,plWidth,plHeight)	\
    (This)->lpVtbl -> GetSize(This,plWidth,plHeight)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentCommandWindow_SetVisible_Proxy( 
    IAgentCommandWindow __RPC_FAR * This,
    /* [in] */ long bVisible);


void __RPC_STUB IAgentCommandWindow_SetVisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandWindow_GetVisible_Proxy( 
    IAgentCommandWindow __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbVisible);


void __RPC_STUB IAgentCommandWindow_GetVisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandWindow_GetPosition_Proxy( 
    IAgentCommandWindow __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plLeft,
    /* [out] */ long __RPC_FAR *plTop);


void __RPC_STUB IAgentCommandWindow_GetPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandWindow_GetSize_Proxy( 
    IAgentCommandWindow __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plWidth,
    /* [out] */ long __RPC_FAR *plHeight);


void __RPC_STUB IAgentCommandWindow_GetSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCommandWindow_INTERFACE_DEFINED__ */


#ifndef __IAgentSpeechInputProperties_INTERFACE_DEFINED__
#define __IAgentSpeechInputProperties_INTERFACE_DEFINED__

/* interface IAgentSpeechInputProperties */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentSpeechInputProperties;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A7B93C87-7B81-11D0-AC5F-00C04FD97575")
    IAgentSpeechInputProperties : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetInstalled( 
            /* [out] */ long __RPC_FAR *pbInstalled) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEnabled( 
            /* [out] */ long __RPC_FAR *pbEnabled) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetHotKey( 
            /* [out] */ BSTR __RPC_FAR *pbszHotCharKey) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLCID( 
            /* [out] */ LCID __RPC_FAR *plcidCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEngine( 
            /* [out] */ BSTR __RPC_FAR *pbszEngine) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetEngine( 
            /* [in] */ BSTR bszEngine) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetListeningTip( 
            /* [out] */ long __RPC_FAR *pbListeningTip) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentSpeechInputPropertiesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentSpeechInputProperties __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentSpeechInputProperties __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentSpeechInputProperties __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentSpeechInputProperties __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentSpeechInputProperties __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentSpeechInputProperties __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentSpeechInputProperties __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetInstalled )( 
            IAgentSpeechInputProperties __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbInstalled);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetEnabled )( 
            IAgentSpeechInputProperties __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbEnabled);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetHotKey )( 
            IAgentSpeechInputProperties __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszHotCharKey);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetLCID )( 
            IAgentSpeechInputProperties __RPC_FAR * This,
            /* [out] */ LCID __RPC_FAR *plcidCurrent);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetEngine )( 
            IAgentSpeechInputProperties __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszEngine);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetEngine )( 
            IAgentSpeechInputProperties __RPC_FAR * This,
            /* [in] */ BSTR bszEngine);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetListeningTip )( 
            IAgentSpeechInputProperties __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbListeningTip);
        
        END_INTERFACE
    } IAgentSpeechInputPropertiesVtbl;

    interface IAgentSpeechInputProperties
    {
        CONST_VTBL struct IAgentSpeechInputPropertiesVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentSpeechInputProperties_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentSpeechInputProperties_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentSpeechInputProperties_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentSpeechInputProperties_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentSpeechInputProperties_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentSpeechInputProperties_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentSpeechInputProperties_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentSpeechInputProperties_GetInstalled(This,pbInstalled)	\
    (This)->lpVtbl -> GetInstalled(This,pbInstalled)

#define IAgentSpeechInputProperties_GetEnabled(This,pbEnabled)	\
    (This)->lpVtbl -> GetEnabled(This,pbEnabled)

#define IAgentSpeechInputProperties_GetHotKey(This,pbszHotCharKey)	\
    (This)->lpVtbl -> GetHotKey(This,pbszHotCharKey)

#define IAgentSpeechInputProperties_GetLCID(This,plcidCurrent)	\
    (This)->lpVtbl -> GetLCID(This,plcidCurrent)

#define IAgentSpeechInputProperties_GetEngine(This,pbszEngine)	\
    (This)->lpVtbl -> GetEngine(This,pbszEngine)

#define IAgentSpeechInputProperties_SetEngine(This,bszEngine)	\
    (This)->lpVtbl -> SetEngine(This,bszEngine)

#define IAgentSpeechInputProperties_GetListeningTip(This,pbListeningTip)	\
    (This)->lpVtbl -> GetListeningTip(This,pbListeningTip)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentSpeechInputProperties_GetInstalled_Proxy( 
    IAgentSpeechInputProperties __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbInstalled);


void __RPC_STUB IAgentSpeechInputProperties_GetInstalled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentSpeechInputProperties_GetEnabled_Proxy( 
    IAgentSpeechInputProperties __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbEnabled);


void __RPC_STUB IAgentSpeechInputProperties_GetEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentSpeechInputProperties_GetHotKey_Proxy( 
    IAgentSpeechInputProperties __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszHotCharKey);


void __RPC_STUB IAgentSpeechInputProperties_GetHotKey_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentSpeechInputProperties_GetLCID_Proxy( 
    IAgentSpeechInputProperties __RPC_FAR * This,
    /* [out] */ LCID __RPC_FAR *plcidCurrent);


void __RPC_STUB IAgentSpeechInputProperties_GetLCID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentSpeechInputProperties_GetEngine_Proxy( 
    IAgentSpeechInputProperties __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszEngine);


void __RPC_STUB IAgentSpeechInputProperties_GetEngine_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentSpeechInputProperties_SetEngine_Proxy( 
    IAgentSpeechInputProperties __RPC_FAR * This,
    /* [in] */ BSTR bszEngine);


void __RPC_STUB IAgentSpeechInputProperties_SetEngine_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentSpeechInputProperties_GetListeningTip_Proxy( 
    IAgentSpeechInputProperties __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbListeningTip);


void __RPC_STUB IAgentSpeechInputProperties_GetListeningTip_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentSpeechInputProperties_INTERFACE_DEFINED__ */


#ifndef __IAgentAudioOutputProperties_INTERFACE_DEFINED__
#define __IAgentAudioOutputProperties_INTERFACE_DEFINED__

/* interface IAgentAudioOutputProperties */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentAudioOutputProperties;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A7B93C89-7B81-11D0-AC5F-00C04FD97575")
    IAgentAudioOutputProperties : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetEnabled( 
            /* [out] */ long __RPC_FAR *pbEnabled) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetUsingSoundEffects( 
            /* [out] */ long __RPC_FAR *pbUsingSoundEffects) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentAudioOutputPropertiesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentAudioOutputProperties __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentAudioOutputProperties __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentAudioOutputProperties __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentAudioOutputProperties __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentAudioOutputProperties __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentAudioOutputProperties __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentAudioOutputProperties __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetEnabled )( 
            IAgentAudioOutputProperties __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbEnabled);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetUsingSoundEffects )( 
            IAgentAudioOutputProperties __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbUsingSoundEffects);
        
        END_INTERFACE
    } IAgentAudioOutputPropertiesVtbl;

    interface IAgentAudioOutputProperties
    {
        CONST_VTBL struct IAgentAudioOutputPropertiesVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentAudioOutputProperties_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentAudioOutputProperties_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentAudioOutputProperties_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentAudioOutputProperties_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentAudioOutputProperties_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentAudioOutputProperties_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentAudioOutputProperties_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentAudioOutputProperties_GetEnabled(This,pbEnabled)	\
    (This)->lpVtbl -> GetEnabled(This,pbEnabled)

#define IAgentAudioOutputProperties_GetUsingSoundEffects(This,pbUsingSoundEffects)	\
    (This)->lpVtbl -> GetUsingSoundEffects(This,pbUsingSoundEffects)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentAudioOutputProperties_GetEnabled_Proxy( 
    IAgentAudioOutputProperties __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbEnabled);


void __RPC_STUB IAgentAudioOutputProperties_GetEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentAudioOutputProperties_GetUsingSoundEffects_Proxy( 
    IAgentAudioOutputProperties __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbUsingSoundEffects);


void __RPC_STUB IAgentAudioOutputProperties_GetUsingSoundEffects_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentAudioOutputProperties_INTERFACE_DEFINED__ */


#ifndef __IAgentAudioOutputPropertiesEx_INTERFACE_DEFINED__
#define __IAgentAudioOutputPropertiesEx_INTERFACE_DEFINED__

/* interface IAgentAudioOutputPropertiesEx */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentAudioOutputPropertiesEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A7B93CA0-7B81-11D0-AC5F-00C04FD97575")
    IAgentAudioOutputPropertiesEx : public IAgentAudioOutputProperties
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetStatus( 
            /* [out] */ long __RPC_FAR *plStatus) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentAudioOutputPropertiesExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentAudioOutputPropertiesEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentAudioOutputPropertiesEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentAudioOutputPropertiesEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentAudioOutputPropertiesEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentAudioOutputPropertiesEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentAudioOutputPropertiesEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentAudioOutputPropertiesEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetEnabled )( 
            IAgentAudioOutputPropertiesEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbEnabled);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetUsingSoundEffects )( 
            IAgentAudioOutputPropertiesEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbUsingSoundEffects);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetStatus )( 
            IAgentAudioOutputPropertiesEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plStatus);
        
        END_INTERFACE
    } IAgentAudioOutputPropertiesExVtbl;

    interface IAgentAudioOutputPropertiesEx
    {
        CONST_VTBL struct IAgentAudioOutputPropertiesExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentAudioOutputPropertiesEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentAudioOutputPropertiesEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentAudioOutputPropertiesEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentAudioOutputPropertiesEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentAudioOutputPropertiesEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentAudioOutputPropertiesEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentAudioOutputPropertiesEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentAudioOutputPropertiesEx_GetEnabled(This,pbEnabled)	\
    (This)->lpVtbl -> GetEnabled(This,pbEnabled)

#define IAgentAudioOutputPropertiesEx_GetUsingSoundEffects(This,pbUsingSoundEffects)	\
    (This)->lpVtbl -> GetUsingSoundEffects(This,pbUsingSoundEffects)


#define IAgentAudioOutputPropertiesEx_GetStatus(This,plStatus)	\
    (This)->lpVtbl -> GetStatus(This,plStatus)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentAudioOutputPropertiesEx_GetStatus_Proxy( 
    IAgentAudioOutputPropertiesEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plStatus);


void __RPC_STUB IAgentAudioOutputPropertiesEx_GetStatus_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentAudioOutputPropertiesEx_INTERFACE_DEFINED__ */


#ifndef __IAgentPropertySheet_INTERFACE_DEFINED__
#define __IAgentPropertySheet_INTERFACE_DEFINED__

/* interface IAgentPropertySheet */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentPropertySheet;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A7B93C8B-7B81-11D0-AC5F-00C04FD97575")
    IAgentPropertySheet : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetVisible( 
            /* [out] */ long __RPC_FAR *pbVisible) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetVisible( 
            /* [in] */ long bVisible) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPosition( 
            /* [out] */ long __RPC_FAR *plLeft,
            /* [out] */ long __RPC_FAR *plTop) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSize( 
            /* [out] */ long __RPC_FAR *plWidth,
            /* [out] */ long __RPC_FAR *plHeight) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPage( 
            /* [out] */ BSTR __RPC_FAR *pbszPage) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetPage( 
            /* [in] */ BSTR bszPage) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentPropertySheetVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentPropertySheet __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentPropertySheet __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentPropertySheet __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentPropertySheet __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentPropertySheet __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentPropertySheet __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentPropertySheet __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVisible )( 
            IAgentPropertySheet __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVisible )( 
            IAgentPropertySheet __RPC_FAR * This,
            /* [in] */ long bVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetPosition )( 
            IAgentPropertySheet __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plLeft,
            /* [out] */ long __RPC_FAR *plTop);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSize )( 
            IAgentPropertySheet __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plWidth,
            /* [out] */ long __RPC_FAR *plHeight);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetPage )( 
            IAgentPropertySheet __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszPage);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetPage )( 
            IAgentPropertySheet __RPC_FAR * This,
            /* [in] */ BSTR bszPage);
        
        END_INTERFACE
    } IAgentPropertySheetVtbl;

    interface IAgentPropertySheet
    {
        CONST_VTBL struct IAgentPropertySheetVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentPropertySheet_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentPropertySheet_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentPropertySheet_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentPropertySheet_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentPropertySheet_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentPropertySheet_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentPropertySheet_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentPropertySheet_GetVisible(This,pbVisible)	\
    (This)->lpVtbl -> GetVisible(This,pbVisible)

#define IAgentPropertySheet_SetVisible(This,bVisible)	\
    (This)->lpVtbl -> SetVisible(This,bVisible)

#define IAgentPropertySheet_GetPosition(This,plLeft,plTop)	\
    (This)->lpVtbl -> GetPosition(This,plLeft,plTop)

#define IAgentPropertySheet_GetSize(This,plWidth,plHeight)	\
    (This)->lpVtbl -> GetSize(This,plWidth,plHeight)

#define IAgentPropertySheet_GetPage(This,pbszPage)	\
    (This)->lpVtbl -> GetPage(This,pbszPage)

#define IAgentPropertySheet_SetPage(This,bszPage)	\
    (This)->lpVtbl -> SetPage(This,bszPage)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentPropertySheet_GetVisible_Proxy( 
    IAgentPropertySheet __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbVisible);


void __RPC_STUB IAgentPropertySheet_GetVisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentPropertySheet_SetVisible_Proxy( 
    IAgentPropertySheet __RPC_FAR * This,
    /* [in] */ long bVisible);


void __RPC_STUB IAgentPropertySheet_SetVisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentPropertySheet_GetPosition_Proxy( 
    IAgentPropertySheet __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plLeft,
    /* [out] */ long __RPC_FAR *plTop);


void __RPC_STUB IAgentPropertySheet_GetPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentPropertySheet_GetSize_Proxy( 
    IAgentPropertySheet __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plWidth,
    /* [out] */ long __RPC_FAR *plHeight);


void __RPC_STUB IAgentPropertySheet_GetSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentPropertySheet_GetPage_Proxy( 
    IAgentPropertySheet __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszPage);


void __RPC_STUB IAgentPropertySheet_GetPage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentPropertySheet_SetPage_Proxy( 
    IAgentPropertySheet __RPC_FAR * This,
    /* [in] */ BSTR bszPage);


void __RPC_STUB IAgentPropertySheet_SetPage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentPropertySheet_INTERFACE_DEFINED__ */


#ifndef __IAgentBalloon_INTERFACE_DEFINED__
#define __IAgentBalloon_INTERFACE_DEFINED__

/* interface IAgentBalloon */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentBalloon;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A7B93C8D-7B81-11D0-AC5F-00C04FD97575")
    IAgentBalloon : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetEnabled( 
            /* [out] */ long __RPC_FAR *pbEnabled) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNumLines( 
            /* [out] */ long __RPC_FAR *plLines) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNumCharsPerLine( 
            /* [out] */ long __RPC_FAR *plCharsPerLine) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFontName( 
            /* [out] */ BSTR __RPC_FAR *pbszFontName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFontSize( 
            /* [out] */ long __RPC_FAR *plFontSize) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFontBold( 
            /* [out] */ long __RPC_FAR *pbFontBold) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFontItalic( 
            /* [out] */ long __RPC_FAR *pbFontItalic) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFontStrikethru( 
            /* [out] */ long __RPC_FAR *pbFontStrikethru) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFontUnderline( 
            /* [out] */ long __RPC_FAR *pbFontUnderline) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetForeColor( 
            /* [out] */ long __RPC_FAR *plFGColor) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetBackColor( 
            /* [out] */ long __RPC_FAR *plBGColor) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetBorderColor( 
            /* [out] */ long __RPC_FAR *plBorderColor) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetVisible( 
            /* [in] */ long bVisible) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVisible( 
            /* [out] */ long __RPC_FAR *pbVisible) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetFontName( 
            /* [in] */ BSTR bszFontName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetFontSize( 
            /* [in] */ long lFontSize) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetFontCharSet( 
            /* [in] */ short sFontCharSet) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFontCharSet( 
            /* [out] */ short __RPC_FAR *psFontCharSet) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentBalloonVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentBalloon __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentBalloon __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentBalloon __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentBalloon __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentBalloon __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentBalloon __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetEnabled )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbEnabled);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetNumLines )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plLines);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetNumCharsPerLine )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plCharsPerLine);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontName )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszFontName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontSize )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plFontSize);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontBold )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbFontBold);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontItalic )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbFontItalic);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontStrikethru )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbFontStrikethru);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontUnderline )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbFontUnderline);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetForeColor )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plFGColor);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetBackColor )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plBGColor);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetBorderColor )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plBorderColor);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVisible )( 
            IAgentBalloon __RPC_FAR * This,
            /* [in] */ long bVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVisible )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFontName )( 
            IAgentBalloon __RPC_FAR * This,
            /* [in] */ BSTR bszFontName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFontSize )( 
            IAgentBalloon __RPC_FAR * This,
            /* [in] */ long lFontSize);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFontCharSet )( 
            IAgentBalloon __RPC_FAR * This,
            /* [in] */ short sFontCharSet);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontCharSet )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ short __RPC_FAR *psFontCharSet);
        
        END_INTERFACE
    } IAgentBalloonVtbl;

    interface IAgentBalloon
    {
        CONST_VTBL struct IAgentBalloonVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentBalloon_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentBalloon_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentBalloon_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentBalloon_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentBalloon_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentBalloon_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentBalloon_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentBalloon_GetEnabled(This,pbEnabled)	\
    (This)->lpVtbl -> GetEnabled(This,pbEnabled)

#define IAgentBalloon_GetNumLines(This,plLines)	\
    (This)->lpVtbl -> GetNumLines(This,plLines)

#define IAgentBalloon_GetNumCharsPerLine(This,plCharsPerLine)	\
    (This)->lpVtbl -> GetNumCharsPerLine(This,plCharsPerLine)

#define IAgentBalloon_GetFontName(This,pbszFontName)	\
    (This)->lpVtbl -> GetFontName(This,pbszFontName)

#define IAgentBalloon_GetFontSize(This,plFontSize)	\
    (This)->lpVtbl -> GetFontSize(This,plFontSize)

#define IAgentBalloon_GetFontBold(This,pbFontBold)	\
    (This)->lpVtbl -> GetFontBold(This,pbFontBold)

#define IAgentBalloon_GetFontItalic(This,pbFontItalic)	\
    (This)->lpVtbl -> GetFontItalic(This,pbFontItalic)

#define IAgentBalloon_GetFontStrikethru(This,pbFontStrikethru)	\
    (This)->lpVtbl -> GetFontStrikethru(This,pbFontStrikethru)

#define IAgentBalloon_GetFontUnderline(This,pbFontUnderline)	\
    (This)->lpVtbl -> GetFontUnderline(This,pbFontUnderline)

#define IAgentBalloon_GetForeColor(This,plFGColor)	\
    (This)->lpVtbl -> GetForeColor(This,plFGColor)

#define IAgentBalloon_GetBackColor(This,plBGColor)	\
    (This)->lpVtbl -> GetBackColor(This,plBGColor)

#define IAgentBalloon_GetBorderColor(This,plBorderColor)	\
    (This)->lpVtbl -> GetBorderColor(This,plBorderColor)

#define IAgentBalloon_SetVisible(This,bVisible)	\
    (This)->lpVtbl -> SetVisible(This,bVisible)

#define IAgentBalloon_GetVisible(This,pbVisible)	\
    (This)->lpVtbl -> GetVisible(This,pbVisible)

#define IAgentBalloon_SetFontName(This,bszFontName)	\
    (This)->lpVtbl -> SetFontName(This,bszFontName)

#define IAgentBalloon_SetFontSize(This,lFontSize)	\
    (This)->lpVtbl -> SetFontSize(This,lFontSize)

#define IAgentBalloon_SetFontCharSet(This,sFontCharSet)	\
    (This)->lpVtbl -> SetFontCharSet(This,sFontCharSet)

#define IAgentBalloon_GetFontCharSet(This,psFontCharSet)	\
    (This)->lpVtbl -> GetFontCharSet(This,psFontCharSet)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentBalloon_GetEnabled_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbEnabled);


void __RPC_STUB IAgentBalloon_GetEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetNumLines_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plLines);


void __RPC_STUB IAgentBalloon_GetNumLines_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetNumCharsPerLine_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plCharsPerLine);


void __RPC_STUB IAgentBalloon_GetNumCharsPerLine_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetFontName_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszFontName);


void __RPC_STUB IAgentBalloon_GetFontName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetFontSize_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plFontSize);


void __RPC_STUB IAgentBalloon_GetFontSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetFontBold_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbFontBold);


void __RPC_STUB IAgentBalloon_GetFontBold_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetFontItalic_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbFontItalic);


void __RPC_STUB IAgentBalloon_GetFontItalic_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetFontStrikethru_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbFontStrikethru);


void __RPC_STUB IAgentBalloon_GetFontStrikethru_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetFontUnderline_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbFontUnderline);


void __RPC_STUB IAgentBalloon_GetFontUnderline_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetForeColor_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plFGColor);


void __RPC_STUB IAgentBalloon_GetForeColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetBackColor_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plBGColor);


void __RPC_STUB IAgentBalloon_GetBackColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetBorderColor_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plBorderColor);


void __RPC_STUB IAgentBalloon_GetBorderColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_SetVisible_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [in] */ long bVisible);


void __RPC_STUB IAgentBalloon_SetVisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetVisible_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbVisible);


void __RPC_STUB IAgentBalloon_GetVisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_SetFontName_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [in] */ BSTR bszFontName);


void __RPC_STUB IAgentBalloon_SetFontName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_SetFontSize_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [in] */ long lFontSize);


void __RPC_STUB IAgentBalloon_SetFontSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_SetFontCharSet_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [in] */ short sFontCharSet);


void __RPC_STUB IAgentBalloon_SetFontCharSet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetFontCharSet_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ short __RPC_FAR *psFontCharSet);


void __RPC_STUB IAgentBalloon_GetFontCharSet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentBalloon_INTERFACE_DEFINED__ */


#ifndef __IAgentBalloonEx_INTERFACE_DEFINED__
#define __IAgentBalloonEx_INTERFACE_DEFINED__

/* interface IAgentBalloonEx */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentBalloonEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D7A6D440-8872-11d1-9EC6-00C04FD7081F")
    IAgentBalloonEx : public IAgentBalloon
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetStyle( 
            /* [in] */ long lStyle) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetStyle( 
            /* [out] */ long __RPC_FAR *plStyle) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetNumLines( 
            /* [in] */ long lLines) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetNumCharsPerLine( 
            /* [in] */ long lCharsPerLine) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentBalloonExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentBalloonEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentBalloonEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetEnabled )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbEnabled);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetNumLines )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plLines);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetNumCharsPerLine )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plCharsPerLine);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontName )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszFontName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontSize )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plFontSize);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontBold )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbFontBold);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontItalic )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbFontItalic);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontStrikethru )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbFontStrikethru);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontUnderline )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbFontUnderline);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetForeColor )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plFGColor);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetBackColor )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plBGColor);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetBorderColor )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plBorderColor);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVisible )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [in] */ long bVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVisible )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFontName )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [in] */ BSTR bszFontName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFontSize )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [in] */ long lFontSize);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFontCharSet )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [in] */ short sFontCharSet);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontCharSet )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ short __RPC_FAR *psFontCharSet);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetStyle )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [in] */ long lStyle);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetStyle )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plStyle);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetNumLines )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [in] */ long lLines);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetNumCharsPerLine )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [in] */ long lCharsPerLine);
        
        END_INTERFACE
    } IAgentBalloonExVtbl;

    interface IAgentBalloonEx
    {
        CONST_VTBL struct IAgentBalloonExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentBalloonEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentBalloonEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentBalloonEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentBalloonEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentBalloonEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentBalloonEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentBalloonEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentBalloonEx_GetEnabled(This,pbEnabled)	\
    (This)->lpVtbl -> GetEnabled(This,pbEnabled)

#define IAgentBalloonEx_GetNumLines(This,plLines)	\
    (This)->lpVtbl -> GetNumLines(This,plLines)

#define IAgentBalloonEx_GetNumCharsPerLine(This,plCharsPerLine)	\
    (This)->lpVtbl -> GetNumCharsPerLine(This,plCharsPerLine)

#define IAgentBalloonEx_GetFontName(This,pbszFontName)	\
    (This)->lpVtbl -> GetFontName(This,pbszFontName)

#define IAgentBalloonEx_GetFontSize(This,plFontSize)	\
    (This)->lpVtbl -> GetFontSize(This,plFontSize)

#define IAgentBalloonEx_GetFontBold(This,pbFontBold)	\
    (This)->lpVtbl -> GetFontBold(This,pbFontBold)

#define IAgentBalloonEx_GetFontItalic(This,pbFontItalic)	\
    (This)->lpVtbl -> GetFontItalic(This,pbFontItalic)

#define IAgentBalloonEx_GetFontStrikethru(This,pbFontStrikethru)	\
    (This)->lpVtbl -> GetFontStrikethru(This,pbFontStrikethru)

#define IAgentBalloonEx_GetFontUnderline(This,pbFontUnderline)	\
    (This)->lpVtbl -> GetFontUnderline(This,pbFontUnderline)

#define IAgentBalloonEx_GetForeColor(This,plFGColor)	\
    (This)->lpVtbl -> GetForeColor(This,plFGColor)

#define IAgentBalloonEx_GetBackColor(This,plBGColor)	\
    (This)->lpVtbl -> GetBackColor(This,plBGColor)

#define IAgentBalloonEx_GetBorderColor(This,plBorderColor)	\
    (This)->lpVtbl -> GetBorderColor(This,plBorderColor)

#define IAgentBalloonEx_SetVisible(This,bVisible)	\
    (This)->lpVtbl -> SetVisible(This,bVisible)

#define IAgentBalloonEx_GetVisible(This,pbVisible)	\
    (This)->lpVtbl -> GetVisible(This,pbVisible)

#define IAgentBalloonEx_SetFontName(This,bszFontName)	\
    (This)->lpVtbl -> SetFontName(This,bszFontName)

#define IAgentBalloonEx_SetFontSize(This,lFontSize)	\
    (This)->lpVtbl -> SetFontSize(This,lFontSize)

#define IAgentBalloonEx_SetFontCharSet(This,sFontCharSet)	\
    (This)->lpVtbl -> SetFontCharSet(This,sFontCharSet)

#define IAgentBalloonEx_GetFontCharSet(This,psFontCharSet)	\
    (This)->lpVtbl -> GetFontCharSet(This,psFontCharSet)


#define IAgentBalloonEx_SetStyle(This,lStyle)	\
    (This)->lpVtbl -> SetStyle(This,lStyle)

#define IAgentBalloonEx_GetStyle(This,plStyle)	\
    (This)->lpVtbl -> GetStyle(This,plStyle)

#define IAgentBalloonEx_SetNumLines(This,lLines)	\
    (This)->lpVtbl -> SetNumLines(This,lLines)

#define IAgentBalloonEx_SetNumCharsPerLine(This,lCharsPerLine)	\
    (This)->lpVtbl -> SetNumCharsPerLine(This,lCharsPerLine)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentBalloonEx_SetStyle_Proxy( 
    IAgentBalloonEx __RPC_FAR * This,
    /* [in] */ long lStyle);


void __RPC_STUB IAgentBalloonEx_SetStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloonEx_GetStyle_Proxy( 
    IAgentBalloonEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plStyle);


void __RPC_STUB IAgentBalloonEx_GetStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloonEx_SetNumLines_Proxy( 
    IAgentBalloonEx __RPC_FAR * This,
    /* [in] */ long lLines);


void __RPC_STUB IAgentBalloonEx_SetNumLines_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloonEx_SetNumCharsPerLine_Proxy( 
    IAgentBalloonEx __RPC_FAR * This,
    /* [in] */ long lCharsPerLine);


void __RPC_STUB IAgentBalloonEx_SetNumCharsPerLine_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentBalloonEx_INTERFACE_DEFINED__ */


#ifndef __IAgentCharacter_INTERFACE_DEFINED__
#define __IAgentCharacter_INTERFACE_DEFINED__

/* interface IAgentCharacter */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentCharacter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A7B93C8F-7B81-11D0-AC5F-00C04FD97575")
    IAgentCharacter : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetVisible( 
            /* [out] */ long __RPC_FAR *pbVisible) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetPosition( 
            /* [in] */ long lLeft,
            /* [in] */ long lTop) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPosition( 
            /* [out] */ long __RPC_FAR *plLeft,
            /* [out] */ long __RPC_FAR *plTop) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetSize( 
            /* [in] */ long lWidth,
            /* [in] */ long lHeight) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSize( 
            /* [out] */ long __RPC_FAR *plWidth,
            /* [out] */ long __RPC_FAR *plHeight) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetName( 
            /* [out] */ BSTR __RPC_FAR *pbszName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDescription( 
            /* [out] */ BSTR __RPC_FAR *pbszDescription) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTTSSpeed( 
            /* [out] */ long __RPC_FAR *pdwSpeed) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTTSPitch( 
            /* [out] */ short __RPC_FAR *pwPitch) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Activate( 
            /* [in] */ short sState) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetIdleOn( 
            /* [in] */ long bOn) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetIdleOn( 
            /* [out] */ long __RPC_FAR *pbOn) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Prepare( 
            /* [in] */ long dwType,
            /* [in] */ BSTR bszName,
            /* [in] */ long bQueue,
            /* [out] */ long __RPC_FAR *pdwReqID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Play( 
            /* [in] */ BSTR bszAnimation,
            /* [out] */ long __RPC_FAR *pdwReqID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Stop( 
            /* [in] */ long dwReqID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE StopAll( 
            /* [in] */ long lTypes) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Wait( 
            /* [in] */ long dwReqID,
            /* [out] */ long __RPC_FAR *pdwReqID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Interrupt( 
            /* [in] */ long dwReqID,
            /* [out] */ long __RPC_FAR *pdwReqID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Show( 
            /* [in] */ long bFast,
            /* [out] */ long __RPC_FAR *pdwReqID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Hide( 
            /* [in] */ long bFast,
            /* [out] */ long __RPC_FAR *pdwReqID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Speak( 
            /* [in] */ BSTR bszText,
            /* [in] */ BSTR bszUrl,
            /* [out] */ long __RPC_FAR *pdwReqID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveTo( 
            /* [in] */ short x,
            /* [in] */ short y,
            /* [in] */ long lSpeed,
            /* [out] */ long __RPC_FAR *pdwReqID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GestureAt( 
            /* [in] */ short x,
            /* [in] */ short y,
            /* [out] */ long __RPC_FAR *pdwReqID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMoveCause( 
            /* [out] */ long __RPC_FAR *pdwCause) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVisibilityCause( 
            /* [out] */ long __RPC_FAR *pdwCause) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE HasOtherClients( 
            /* [out] */ long __RPC_FAR *plNumOtherClients) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetSoundEffectsOn( 
            /* [in] */ long bOn) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSoundEffectsOn( 
            /* [out] */ long __RPC_FAR *pbOn) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetName( 
            /* [in] */ BSTR bszName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetDescription( 
            /* [in] */ BSTR bszDescription) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetExtraData( 
            /* [out] */ BSTR __RPC_FAR *pbszExtraData) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCharacterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCharacter __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCharacter __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVisible )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetPosition )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ long lLeft,
            /* [in] */ long lTop);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetPosition )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plLeft,
            /* [out] */ long __RPC_FAR *plTop);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetSize )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ long lWidth,
            /* [in] */ long lHeight);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSize )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plWidth,
            /* [out] */ long __RPC_FAR *plHeight);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetName )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetDescription )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszDescription);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTTSSpeed )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pdwSpeed);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTTSPitch )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ short __RPC_FAR *pwPitch);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Activate )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ short sState);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetIdleOn )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ long bOn);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIdleOn )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbOn);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Prepare )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ long dwType,
            /* [in] */ BSTR bszName,
            /* [in] */ long bQueue,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Play )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ BSTR bszAnimation,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Stop )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ long dwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *StopAll )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ long lTypes);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Wait )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ long dwReqID,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Interrupt )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ long dwReqID,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Show )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ long bFast,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Hide )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ long bFast,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Speak )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ BSTR bszText,
            /* [in] */ BSTR bszUrl,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *MoveTo )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ short x,
            /* [in] */ short y,
            /* [in] */ long lSpeed,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GestureAt )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ short x,
            /* [in] */ short y,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetMoveCause )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pdwCause);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVisibilityCause )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pdwCause);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *HasOtherClients )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plNumOtherClients);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetSoundEffectsOn )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ long bOn);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSoundEffectsOn )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbOn);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetName )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ BSTR bszName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetDescription )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ BSTR bszDescription);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetExtraData )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszExtraData);
        
        END_INTERFACE
    } IAgentCharacterVtbl;

    interface IAgentCharacter
    {
        CONST_VTBL struct IAgentCharacterVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCharacter_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCharacter_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCharacter_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCharacter_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCharacter_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCharacter_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCharacter_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCharacter_GetVisible(This,pbVisible)	\
    (This)->lpVtbl -> GetVisible(This,pbVisible)

#define IAgentCharacter_SetPosition(This,lLeft,lTop)	\
    (This)->lpVtbl -> SetPosition(This,lLeft,lTop)

#define IAgentCharacter_GetPosition(This,plLeft,plTop)	\
    (This)->lpVtbl -> GetPosition(This,plLeft,plTop)

#define IAgentCharacter_SetSize(This,lWidth,lHeight)	\
    (This)->lpVtbl -> SetSize(This,lWidth,lHeight)

#define IAgentCharacter_GetSize(This,plWidth,plHeight)	\
    (This)->lpVtbl -> GetSize(This,plWidth,plHeight)

#define IAgentCharacter_GetName(This,pbszName)	\
    (This)->lpVtbl -> GetName(This,pbszName)

#define IAgentCharacter_GetDescription(This,pbszDescription)	\
    (This)->lpVtbl -> GetDescription(This,pbszDescription)

#define IAgentCharacter_GetTTSSpeed(This,pdwSpeed)	\
    (This)->lpVtbl -> GetTTSSpeed(This,pdwSpeed)

#define IAgentCharacter_GetTTSPitch(This,pwPitch)	\
    (This)->lpVtbl -> GetTTSPitch(This,pwPitch)

#define IAgentCharacter_Activate(This,sState)	\
    (This)->lpVtbl -> Activate(This,sState)

#define IAgentCharacter_SetIdleOn(This,bOn)	\
    (This)->lpVtbl -> SetIdleOn(This,bOn)

#define IAgentCharacter_GetIdleOn(This,pbOn)	\
    (This)->lpVtbl -> GetIdleOn(This,pbOn)

#define IAgentCharacter_Prepare(This,dwType,bszName,bQueue,pdwReqID)	\
    (This)->lpVtbl -> Prepare(This,dwType,bszName,bQueue,pdwReqID)

#define IAgentCharacter_Play(This,bszAnimation,pdwReqID)	\
    (This)->lpVtbl -> Play(This,bszAnimation,pdwReqID)

#define IAgentCharacter_Stop(This,dwReqID)	\
    (This)->lpVtbl -> Stop(This,dwReqID)

#define IAgentCharacter_StopAll(This,lTypes)	\
    (This)->lpVtbl -> StopAll(This,lTypes)

#define IAgentCharacter_Wait(This,dwReqID,pdwReqID)	\
    (This)->lpVtbl -> Wait(This,dwReqID,pdwReqID)

#define IAgentCharacter_Interrupt(This,dwReqID,pdwReqID)	\
    (This)->lpVtbl -> Interrupt(This,dwReqID,pdwReqID)

#define IAgentCharacter_Show(This,bFast,pdwReqID)	\
    (This)->lpVtbl -> Show(This,bFast,pdwReqID)

#define IAgentCharacter_Hide(This,bFast,pdwReqID)	\
    (This)->lpVtbl -> Hide(This,bFast,pdwReqID)

#define IAgentCharacter_Speak(This,bszText,bszUrl,pdwReqID)	\
    (This)->lpVtbl -> Speak(This,bszText,bszUrl,pdwReqID)

#define IAgentCharacter_MoveTo(This,x,y,lSpeed,pdwReqID)	\
    (This)->lpVtbl -> MoveTo(This,x,y,lSpeed,pdwReqID)

#define IAgentCharacter_GestureAt(This,x,y,pdwReqID)	\
    (This)->lpVtbl -> GestureAt(This,x,y,pdwReqID)

#define IAgentCharacter_GetMoveCause(This,pdwCause)	\
    (This)->lpVtbl -> GetMoveCause(This,pdwCause)

#define IAgentCharacter_GetVisibilityCause(This,pdwCause)	\
    (This)->lpVtbl -> GetVisibilityCause(This,pdwCause)

#define IAgentCharacter_HasOtherClients(This,plNumOtherClients)	\
    (This)->lpVtbl -> HasOtherClients(This,plNumOtherClients)

#define IAgentCharacter_SetSoundEffectsOn(This,bOn)	\
    (This)->lpVtbl -> SetSoundEffectsOn(This,bOn)

#define IAgentCharacter_GetSoundEffectsOn(This,pbOn)	\
    (This)->lpVtbl -> GetSoundEffectsOn(This,pbOn)

#define IAgentCharacter_SetName(This,bszName)	\
    (This)->lpVtbl -> SetName(This,bszName)

#define IAgentCharacter_SetDescription(This,bszDescription)	\
    (This)->lpVtbl -> SetDescription(This,bszDescription)

#define IAgentCharacter_GetExtraData(This,pbszExtraData)	\
    (This)->lpVtbl -> GetExtraData(This,pbszExtraData)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentCharacter_GetVisible_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbVisible);


void __RPC_STUB IAgentCharacter_GetVisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_SetPosition_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ long lLeft,
    /* [in] */ long lTop);


void __RPC_STUB IAgentCharacter_SetPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_GetPosition_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plLeft,
    /* [out] */ long __RPC_FAR *plTop);


void __RPC_STUB IAgentCharacter_GetPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_SetSize_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ long lWidth,
    /* [in] */ long lHeight);


void __RPC_STUB IAgentCharacter_SetSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_GetSize_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plWidth,
    /* [out] */ long __RPC_FAR *plHeight);


void __RPC_STUB IAgentCharacter_GetSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_GetName_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszName);


void __RPC_STUB IAgentCharacter_GetName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_GetDescription_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszDescription);


void __RPC_STUB IAgentCharacter_GetDescription_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_GetTTSSpeed_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pdwSpeed);


void __RPC_STUB IAgentCharacter_GetTTSSpeed_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_GetTTSPitch_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ short __RPC_FAR *pwPitch);


void __RPC_STUB IAgentCharacter_GetTTSPitch_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_Activate_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ short sState);


void __RPC_STUB IAgentCharacter_Activate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_SetIdleOn_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ long bOn);


void __RPC_STUB IAgentCharacter_SetIdleOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_GetIdleOn_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbOn);


void __RPC_STUB IAgentCharacter_GetIdleOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_Prepare_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ long dwType,
    /* [in] */ BSTR bszName,
    /* [in] */ long bQueue,
    /* [out] */ long __RPC_FAR *pdwReqID);


void __RPC_STUB IAgentCharacter_Prepare_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_Play_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ BSTR bszAnimation,
    /* [out] */ long __RPC_FAR *pdwReqID);


void __RPC_STUB IAgentCharacter_Play_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_Stop_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ long dwReqID);


void __RPC_STUB IAgentCharacter_Stop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_StopAll_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ long lTypes);


void __RPC_STUB IAgentCharacter_StopAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_Wait_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ long dwReqID,
    /* [out] */ long __RPC_FAR *pdwReqID);


void __RPC_STUB IAgentCharacter_Wait_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_Interrupt_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ long dwReqID,
    /* [out] */ long __RPC_FAR *pdwReqID);


void __RPC_STUB IAgentCharacter_Interrupt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_Show_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ long bFast,
    /* [out] */ long __RPC_FAR *pdwReqID);


void __RPC_STUB IAgentCharacter_Show_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_Hide_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ long bFast,
    /* [out] */ long __RPC_FAR *pdwReqID);


void __RPC_STUB IAgentCharacter_Hide_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_Speak_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ BSTR bszText,
    /* [in] */ BSTR bszUrl,
    /* [out] */ long __RPC_FAR *pdwReqID);


void __RPC_STUB IAgentCharacter_Speak_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_MoveTo_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ short x,
    /* [in] */ short y,
    /* [in] */ long lSpeed,
    /* [out] */ long __RPC_FAR *pdwReqID);


void __RPC_STUB IAgentCharacter_MoveTo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_GestureAt_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ short x,
    /* [in] */ short y,
    /* [out] */ long __RPC_FAR *pdwReqID);


void __RPC_STUB IAgentCharacter_GestureAt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_GetMoveCause_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pdwCause);


void __RPC_STUB IAgentCharacter_GetMoveCause_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_GetVisibilityCause_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pdwCause);


void __RPC_STUB IAgentCharacter_GetVisibilityCause_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_HasOtherClients_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plNumOtherClients);


void __RPC_STUB IAgentCharacter_HasOtherClients_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_SetSoundEffectsOn_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ long bOn);


void __RPC_STUB IAgentCharacter_SetSoundEffectsOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_GetSoundEffectsOn_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbOn);


void __RPC_STUB IAgentCharacter_GetSoundEffectsOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_SetName_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ BSTR bszName);


void __RPC_STUB IAgentCharacter_SetName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_SetDescription_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ BSTR bszDescription);


void __RPC_STUB IAgentCharacter_SetDescription_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_GetExtraData_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszExtraData);


void __RPC_STUB IAgentCharacter_GetExtraData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCharacter_INTERFACE_DEFINED__ */


#ifndef __IAgentCharacterEx_INTERFACE_DEFINED__
#define __IAgentCharacterEx_INTERFACE_DEFINED__

/* interface IAgentCharacterEx */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentCharacterEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("98BBE491-2EED-11d1-ACAC-00C04FD97575")
    IAgentCharacterEx : public IAgentCharacter
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE ShowPopupMenu( 
            /* [in] */ short x,
            /* [in] */ short y) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAutoPopupMenu( 
            /* [in] */ long bAutoPopupMenu) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAutoPopupMenu( 
            /* [out] */ long __RPC_FAR *pbAutoPopupMenu) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetHelpFileName( 
            /* [out] */ BSTR __RPC_FAR *pbszName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetHelpFileName( 
            /* [in] */ BSTR bszName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetHelpModeOn( 
            /* [in] */ long bHelpModeOn) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetHelpModeOn( 
            /* [out] */ long __RPC_FAR *pbHelpModeOn) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetHelpContextID( 
            /* [in] */ long ulID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetHelpContextID( 
            /* [out] */ long __RPC_FAR *pulID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetActive( 
            /* [out] */ short __RPC_FAR *psState) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Listen( 
            /* [in] */ long bListen) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetLanguageID( 
            /* [in] */ long langid) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLanguageID( 
            /* [out] */ long __RPC_FAR *plangid) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTTSModeID( 
            /* [out] */ BSTR __RPC_FAR *pbszModeID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetTTSModeID( 
            /* [in] */ BSTR bszModeID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSRModeID( 
            /* [out] */ BSTR __RPC_FAR *pbszModeID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetSRModeID( 
            /* [in] */ BSTR bszModeID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetGUID( 
            /* [out] */ BSTR __RPC_FAR *pbszID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetOriginalSize( 
            /* [out] */ long __RPC_FAR *plWidth,
            /* [out] */ long __RPC_FAR *plHeight) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Think( 
            /* [in] */ BSTR bszText,
            /* [out] */ long __RPC_FAR *pdwReqID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVersion( 
            /* [out] */ short __RPC_FAR *psMajor,
            /* [out] */ short __RPC_FAR *psMinor) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAnimationNames( 
            /* [out] */ IUnknown __RPC_FAR *__RPC_FAR *punkEnum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSRStatus( 
            /* [out] */ long __RPC_FAR *plStatus) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCharacterExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCharacterEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCharacterEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVisible )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetPosition )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long lLeft,
            /* [in] */ long lTop);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetPosition )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plLeft,
            /* [out] */ long __RPC_FAR *plTop);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetSize )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long lWidth,
            /* [in] */ long lHeight);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSize )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plWidth,
            /* [out] */ long __RPC_FAR *plHeight);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetName )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetDescription )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszDescription);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTTSSpeed )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pdwSpeed);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTTSPitch )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ short __RPC_FAR *pwPitch);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Activate )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ short sState);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetIdleOn )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long bOn);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIdleOn )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbOn);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Prepare )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long dwType,
            /* [in] */ BSTR bszName,
            /* [in] */ long bQueue,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Play )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR bszAnimation,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Stop )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long dwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *StopAll )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long lTypes);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Wait )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long dwReqID,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Interrupt )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long dwReqID,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Show )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long bFast,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Hide )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long bFast,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Speak )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR bszText,
            /* [in] */ BSTR bszUrl,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *MoveTo )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ short x,
            /* [in] */ short y,
            /* [in] */ long lSpeed,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GestureAt )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ short x,
            /* [in] */ short y,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetMoveCause )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pdwCause);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVisibilityCause )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pdwCause);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *HasOtherClients )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plNumOtherClients);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetSoundEffectsOn )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long bOn);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSoundEffectsOn )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbOn);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetName )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR bszName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetDescription )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR bszDescription);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetExtraData )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszExtraData);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ShowPopupMenu )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ short x,
            /* [in] */ short y);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetAutoPopupMenu )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long bAutoPopupMenu);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetAutoPopupMenu )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbAutoPopupMenu);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetHelpFileName )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetHelpFileName )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR bszName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetHelpModeOn )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long bHelpModeOn);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetHelpModeOn )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbHelpModeOn);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetHelpContextID )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long ulID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetHelpContextID )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pulID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetActive )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ short __RPC_FAR *psState);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Listen )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long bListen);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetLanguageID )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long langid);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetLanguageID )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plangid);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTTSModeID )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszModeID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetTTSModeID )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR bszModeID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSRModeID )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszModeID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetSRModeID )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR bszModeID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetGUID )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetOriginalSize )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plWidth,
            /* [out] */ long __RPC_FAR *plHeight);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Think )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR bszText,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVersion )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ short __RPC_FAR *psMajor,
            /* [out] */ short __RPC_FAR *psMinor);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetAnimationNames )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ IUnknown __RPC_FAR *__RPC_FAR *punkEnum);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSRStatus )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plStatus);
        
        END_INTERFACE
    } IAgentCharacterExVtbl;

    interface IAgentCharacterEx
    {
        CONST_VTBL struct IAgentCharacterExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCharacterEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCharacterEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCharacterEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCharacterEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCharacterEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCharacterEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCharacterEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCharacterEx_GetVisible(This,pbVisible)	\
    (This)->lpVtbl -> GetVisible(This,pbVisible)

#define IAgentCharacterEx_SetPosition(This,lLeft,lTop)	\
    (This)->lpVtbl -> SetPosition(This,lLeft,lTop)

#define IAgentCharacterEx_GetPosition(This,plLeft,plTop)	\
    (This)->lpVtbl -> GetPosition(This,plLeft,plTop)

#define IAgentCharacterEx_SetSize(This,lWidth,lHeight)	\
    (This)->lpVtbl -> SetSize(This,lWidth,lHeight)

#define IAgentCharacterEx_GetSize(This,plWidth,plHeight)	\
    (This)->lpVtbl -> GetSize(This,plWidth,plHeight)

#define IAgentCharacterEx_GetName(This,pbszName)	\
    (This)->lpVtbl -> GetName(This,pbszName)

#define IAgentCharacterEx_GetDescription(This,pbszDescription)	\
    (This)->lpVtbl -> GetDescription(This,pbszDescription)

#define IAgentCharacterEx_GetTTSSpeed(This,pdwSpeed)	\
    (This)->lpVtbl -> GetTTSSpeed(This,pdwSpeed)

#define IAgentCharacterEx_GetTTSPitch(This,pwPitch)	\
    (This)->lpVtbl -> GetTTSPitch(This,pwPitch)

#define IAgentCharacterEx_Activate(This,sState)	\
    (This)->lpVtbl -> Activate(This,sState)

#define IAgentCharacterEx_SetIdleOn(This,bOn)	\
    (This)->lpVtbl -> SetIdleOn(This,bOn)

#define IAgentCharacterEx_GetIdleOn(This,pbOn)	\
    (This)->lpVtbl -> GetIdleOn(This,pbOn)

#define IAgentCharacterEx_Prepare(This,dwType,bszName,bQueue,pdwReqID)	\
    (This)->lpVtbl -> Prepare(This,dwType,bszName,bQueue,pdwReqID)

#define IAgentCharacterEx_Play(This,bszAnimation,pdwReqID)	\
    (This)->lpVtbl -> Play(This,bszAnimation,pdwReqID)

#define IAgentCharacterEx_Stop(This,dwReqID)	\
    (This)->lpVtbl -> Stop(This,dwReqID)

#define IAgentCharacterEx_StopAll(This,lTypes)	\
    (This)->lpVtbl -> StopAll(This,lTypes)

#define IAgentCharacterEx_Wait(This,dwReqID,pdwReqID)	\
    (This)->lpVtbl -> Wait(This,dwReqID,pdwReqID)

#define IAgentCharacterEx_Interrupt(This,dwReqID,pdwReqID)	\
    (This)->lpVtbl -> Interrupt(This,dwReqID,pdwReqID)

#define IAgentCharacterEx_Show(This,bFast,pdwReqID)	\
    (This)->lpVtbl -> Show(This,bFast,pdwReqID)

#define IAgentCharacterEx_Hide(This,bFast,pdwReqID)	\
    (This)->lpVtbl -> Hide(This,bFast,pdwReqID)

#define IAgentCharacterEx_Speak(This,bszText,bszUrl,pdwReqID)	\
    (This)->lpVtbl -> Speak(This,bszText,bszUrl,pdwReqID)

#define IAgentCharacterEx_MoveTo(This,x,y,lSpeed,pdwReqID)	\
    (This)->lpVtbl -> MoveTo(This,x,y,lSpeed,pdwReqID)

#define IAgentCharacterEx_GestureAt(This,x,y,pdwReqID)	\
    (This)->lpVtbl -> GestureAt(This,x,y,pdwReqID)

#define IAgentCharacterEx_GetMoveCause(This,pdwCause)	\
    (This)->lpVtbl -> GetMoveCause(This,pdwCause)

#define IAgentCharacterEx_GetVisibilityCause(This,pdwCause)	\
    (This)->lpVtbl -> GetVisibilityCause(This,pdwCause)

#define IAgentCharacterEx_HasOtherClients(This,plNumOtherClients)	\
    (This)->lpVtbl -> HasOtherClients(This,plNumOtherClients)

#define IAgentCharacterEx_SetSoundEffectsOn(This,bOn)	\
    (This)->lpVtbl -> SetSoundEffectsOn(This,bOn)

#define IAgentCharacterEx_GetSoundEffectsOn(This,pbOn)	\
    (This)->lpVtbl -> GetSoundEffectsOn(This,pbOn)

#define IAgentCharacterEx_SetName(This,bszName)	\
    (This)->lpVtbl -> SetName(This,bszName)

#define IAgentCharacterEx_SetDescription(This,bszDescription)	\
    (This)->lpVtbl -> SetDescription(This,bszDescription)

#define IAgentCharacterEx_GetExtraData(This,pbszExtraData)	\
    (This)->lpVtbl -> GetExtraData(This,pbszExtraData)


#define IAgentCharacterEx_ShowPopupMenu(This,x,y)	\
    (This)->lpVtbl -> ShowPopupMenu(This,x,y)

#define IAgentCharacterEx_SetAutoPopupMenu(This,bAutoPopupMenu)	\
    (This)->lpVtbl -> SetAutoPopupMenu(This,bAutoPopupMenu)

#define IAgentCharacterEx_GetAutoPopupMenu(This,pbAutoPopupMenu)	\
    (This)->lpVtbl -> GetAutoPopupMenu(This,pbAutoPopupMenu)

#define IAgentCharacterEx_GetHelpFileName(This,pbszName)	\
    (This)->lpVtbl -> GetHelpFileName(This,pbszName)

#define IAgentCharacterEx_SetHelpFileName(This,bszName)	\
    (This)->lpVtbl -> SetHelpFileName(This,bszName)

#define IAgentCharacterEx_SetHelpModeOn(This,bHelpModeOn)	\
    (This)->lpVtbl -> SetHelpModeOn(This,bHelpModeOn)

#define IAgentCharacterEx_GetHelpModeOn(This,pbHelpModeOn)	\
    (This)->lpVtbl -> GetHelpModeOn(This,pbHelpModeOn)

#define IAgentCharacterEx_SetHelpContextID(This,ulID)	\
    (This)->lpVtbl -> SetHelpContextID(This,ulID)

#define IAgentCharacterEx_GetHelpContextID(This,pulID)	\
    (This)->lpVtbl -> GetHelpContextID(This,pulID)

#define IAgentCharacterEx_GetActive(This,psState)	\
    (This)->lpVtbl -> GetActive(This,psState)

#define IAgentCharacterEx_Listen(This,bListen)	\
    (This)->lpVtbl -> Listen(This,bListen)

#define IAgentCharacterEx_SetLanguageID(This,langid)	\
    (This)->lpVtbl -> SetLanguageID(This,langid)

#define IAgentCharacterEx_GetLanguageID(This,plangid)	\
    (This)->lpVtbl -> GetLanguageID(This,plangid)

#define IAgentCharacterEx_GetTTSModeID(This,pbszModeID)	\
    (This)->lpVtbl -> GetTTSModeID(This,pbszModeID)

#define IAgentCharacterEx_SetTTSModeID(This,bszModeID)	\
    (This)->lpVtbl -> SetTTSModeID(This,bszModeID)

#define IAgentCharacterEx_GetSRModeID(This,pbszModeID)	\
    (This)->lpVtbl -> GetSRModeID(This,pbszModeID)

#define IAgentCharacterEx_SetSRModeID(This,bszModeID)	\
    (This)->lpVtbl -> SetSRModeID(This,bszModeID)

#define IAgentCharacterEx_GetGUID(This,pbszID)	\
    (This)->lpVtbl -> GetGUID(This,pbszID)

#define IAgentCharacterEx_GetOriginalSize(This,plWidth,plHeight)	\
    (This)->lpVtbl -> GetOriginalSize(This,plWidth,plHeight)

#define IAgentCharacterEx_Think(This,bszText,pdwReqID)	\
    (This)->lpVtbl -> Think(This,bszText,pdwReqID)

#define IAgentCharacterEx_GetVersion(This,psMajor,psMinor)	\
    (This)->lpVtbl -> GetVersion(This,psMajor,psMinor)

#define IAgentCharacterEx_GetAnimationNames(This,punkEnum)	\
    (This)->lpVtbl -> GetAnimationNames(This,punkEnum)

#define IAgentCharacterEx_GetSRStatus(This,plStatus)	\
    (This)->lpVtbl -> GetSRStatus(This,plStatus)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentCharacterEx_ShowPopupMenu_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [in] */ short x,
    /* [in] */ short y);


void __RPC_STUB IAgentCharacterEx_ShowPopupMenu_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_SetAutoPopupMenu_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [in] */ long bAutoPopupMenu);


void __RPC_STUB IAgentCharacterEx_SetAutoPopupMenu_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetAutoPopupMenu_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbAutoPopupMenu);


void __RPC_STUB IAgentCharacterEx_GetAutoPopupMenu_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetHelpFileName_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszName);


void __RPC_STUB IAgentCharacterEx_GetHelpFileName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_SetHelpFileName_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [in] */ BSTR bszName);


void __RPC_STUB IAgentCharacterEx_SetHelpFileName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_SetHelpModeOn_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [in] */ long bHelpModeOn);


void __RPC_STUB IAgentCharacterEx_SetHelpModeOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetHelpModeOn_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbHelpModeOn);


void __RPC_STUB IAgentCharacterEx_GetHelpModeOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_SetHelpContextID_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [in] */ long ulID);


void __RPC_STUB IAgentCharacterEx_SetHelpContextID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetHelpContextID_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pulID);


void __RPC_STUB IAgentCharacterEx_GetHelpContextID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetActive_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ short __RPC_FAR *psState);


void __RPC_STUB IAgentCharacterEx_GetActive_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_Listen_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [in] */ long bListen);


void __RPC_STUB IAgentCharacterEx_Listen_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_SetLanguageID_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [in] */ long langid);


void __RPC_STUB IAgentCharacterEx_SetLanguageID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetLanguageID_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plangid);


void __RPC_STUB IAgentCharacterEx_GetLanguageID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetTTSModeID_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszModeID);


void __RPC_STUB IAgentCharacterEx_GetTTSModeID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_SetTTSModeID_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [in] */ BSTR bszModeID);


void __RPC_STUB IAgentCharacterEx_SetTTSModeID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetSRModeID_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszModeID);


void __RPC_STUB IAgentCharacterEx_GetSRModeID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_SetSRModeID_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [in] */ BSTR bszModeID);


void __RPC_STUB IAgentCharacterEx_SetSRModeID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetGUID_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszID);


void __RPC_STUB IAgentCharacterEx_GetGUID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetOriginalSize_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plWidth,
    /* [out] */ long __RPC_FAR *plHeight);


void __RPC_STUB IAgentCharacterEx_GetOriginalSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_Think_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [in] */ BSTR bszText,
    /* [out] */ long __RPC_FAR *pdwReqID);


void __RPC_STUB IAgentCharacterEx_Think_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetVersion_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ short __RPC_FAR *psMajor,
    /* [out] */ short __RPC_FAR *psMinor);


void __RPC_STUB IAgentCharacterEx_GetVersion_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetAnimationNames_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ IUnknown __RPC_FAR *__RPC_FAR *punkEnum);


void __RPC_STUB IAgentCharacterEx_GetAnimationNames_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetSRStatus_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plStatus);


void __RPC_STUB IAgentCharacterEx_GetSRStatus_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCharacterEx_INTERFACE_DEFINED__ */


#ifndef __IAgent_INTERFACE_DEFINED__
#define __IAgent_INTERFACE_DEFINED__

/* interface IAgent */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgent;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A7B93C91-7B81-11D0-AC5F-00C04FD97575")
    IAgent : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Load( 
            /* [in] */ VARIANT vLoadKey,
            /* [out] */ long __RPC_FAR *pdwCharID,
            /* [out] */ long __RPC_FAR *pdwReqID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Unload( 
            /* [in] */ long dwCharID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Register( 
            /* [in] */ IUnknown __RPC_FAR *punkNotifySink,
            /* [out] */ long __RPC_FAR *pdwSinkID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Unregister( 
            /* [in] */ long dwSinkID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCharacter( 
            /* [in] */ long dwCharID,
            /* [out] */ IDispatch __RPC_FAR *__RPC_FAR *ppunkCharacter) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSuspended( 
            /* [out] */ long __RPC_FAR *pbSuspended) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgent __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgent __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgent __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgent __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgent __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgent __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgent __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Load )( 
            IAgent __RPC_FAR * This,
            /* [in] */ VARIANT vLoadKey,
            /* [out] */ long __RPC_FAR *pdwCharID,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Unload )( 
            IAgent __RPC_FAR * This,
            /* [in] */ long dwCharID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Register )( 
            IAgent __RPC_FAR * This,
            /* [in] */ IUnknown __RPC_FAR *punkNotifySink,
            /* [out] */ long __RPC_FAR *pdwSinkID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Unregister )( 
            IAgent __RPC_FAR * This,
            /* [in] */ long dwSinkID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCharacter )( 
            IAgent __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [out] */ IDispatch __RPC_FAR *__RPC_FAR *ppunkCharacter);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSuspended )( 
            IAgent __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbSuspended);
        
        END_INTERFACE
    } IAgentVtbl;

    interface IAgent
    {
        CONST_VTBL struct IAgentVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgent_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgent_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgent_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgent_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgent_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgent_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgent_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgent_Load(This,vLoadKey,pdwCharID,pdwReqID)	\
    (This)->lpVtbl -> Load(This,vLoadKey,pdwCharID,pdwReqID)

#define IAgent_Unload(This,dwCharID)	\
    (This)->lpVtbl -> Unload(This,dwCharID)

#define IAgent_Register(This,punkNotifySink,pdwSinkID)	\
    (This)->lpVtbl -> Register(This,punkNotifySink,pdwSinkID)

#define IAgent_Unregister(This,dwSinkID)	\
    (This)->lpVtbl -> Unregister(This,dwSinkID)

#define IAgent_GetCharacter(This,dwCharID,ppunkCharacter)	\
    (This)->lpVtbl -> GetCharacter(This,dwCharID,ppunkCharacter)

#define IAgent_GetSuspended(This,pbSuspended)	\
    (This)->lpVtbl -> GetSuspended(This,pbSuspended)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgent_Load_Proxy( 
    IAgent __RPC_FAR * This,
    /* [in] */ VARIANT vLoadKey,
    /* [out] */ long __RPC_FAR *pdwCharID,
    /* [out] */ long __RPC_FAR *pdwReqID);


void __RPC_STUB IAgent_Load_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgent_Unload_Proxy( 
    IAgent __RPC_FAR * This,
    /* [in] */ long dwCharID);


void __RPC_STUB IAgent_Unload_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgent_Register_Proxy( 
    IAgent __RPC_FAR * This,
    /* [in] */ IUnknown __RPC_FAR *punkNotifySink,
    /* [out] */ long __RPC_FAR *pdwSinkID);


void __RPC_STUB IAgent_Register_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgent_Unregister_Proxy( 
    IAgent __RPC_FAR * This,
    /* [in] */ long dwSinkID);


void __RPC_STUB IAgent_Unregister_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgent_GetCharacter_Proxy( 
    IAgent __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [out] */ IDispatch __RPC_FAR *__RPC_FAR *ppunkCharacter);


void __RPC_STUB IAgent_GetCharacter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgent_GetSuspended_Proxy( 
    IAgent __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbSuspended);


void __RPC_STUB IAgent_GetSuspended_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgent_INTERFACE_DEFINED__ */


#ifndef __IAgentEx_INTERFACE_DEFINED__
#define __IAgentEx_INTERFACE_DEFINED__

/* interface IAgentEx */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("48D12BA0-5B77-11d1-9EC1-00C04FD7081F")
    IAgentEx : public IAgent
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCharacterEx( 
            /* [in] */ long dwCharID,
            /* [out] */ IAgentCharacterEx __RPC_FAR *__RPC_FAR *ppCharacterEx) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVersion( 
            /* [out] */ short __RPC_FAR *psMajor,
            /* [out] */ short __RPC_FAR *psMinor) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ShowDefaultCharacterProperties( 
            /* [in] */ short x,
            /* [in] */ short y,
            /* [in] */ long bUseDefaultPosition) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Load )( 
            IAgentEx __RPC_FAR * This,
            /* [in] */ VARIANT vLoadKey,
            /* [out] */ long __RPC_FAR *pdwCharID,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Unload )( 
            IAgentEx __RPC_FAR * This,
            /* [in] */ long dwCharID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Register )( 
            IAgentEx __RPC_FAR * This,
            /* [in] */ IUnknown __RPC_FAR *punkNotifySink,
            /* [out] */ long __RPC_FAR *pdwSinkID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Unregister )( 
            IAgentEx __RPC_FAR * This,
            /* [in] */ long dwSinkID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCharacter )( 
            IAgentEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [out] */ IDispatch __RPC_FAR *__RPC_FAR *ppunkCharacter);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSuspended )( 
            IAgentEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbSuspended);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCharacterEx )( 
            IAgentEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [out] */ IAgentCharacterEx __RPC_FAR *__RPC_FAR *ppCharacterEx);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVersion )( 
            IAgentEx __RPC_FAR * This,
            /* [out] */ short __RPC_FAR *psMajor,
            /* [out] */ short __RPC_FAR *psMinor);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ShowDefaultCharacterProperties )( 
            IAgentEx __RPC_FAR * This,
            /* [in] */ short x,
            /* [in] */ short y,
            /* [in] */ long bUseDefaultPosition);
        
        END_INTERFACE
    } IAgentExVtbl;

    interface IAgentEx
    {
        CONST_VTBL struct IAgentExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentEx_Load(This,vLoadKey,pdwCharID,pdwReqID)	\
    (This)->lpVtbl -> Load(This,vLoadKey,pdwCharID,pdwReqID)

#define IAgentEx_Unload(This,dwCharID)	\
    (This)->lpVtbl -> Unload(This,dwCharID)

#define IAgentEx_Register(This,punkNotifySink,pdwSinkID)	\
    (This)->lpVtbl -> Register(This,punkNotifySink,pdwSinkID)

#define IAgentEx_Unregister(This,dwSinkID)	\
    (This)->lpVtbl -> Unregister(This,dwSinkID)

#define IAgentEx_GetCharacter(This,dwCharID,ppunkCharacter)	\
    (This)->lpVtbl -> GetCharacter(This,dwCharID,ppunkCharacter)

#define IAgentEx_GetSuspended(This,pbSuspended)	\
    (This)->lpVtbl -> GetSuspended(This,pbSuspended)


#define IAgentEx_GetCharacterEx(This,dwCharID,ppCharacterEx)	\
    (This)->lpVtbl -> GetCharacterEx(This,dwCharID,ppCharacterEx)

#define IAgentEx_GetVersion(This,psMajor,psMinor)	\
    (This)->lpVtbl -> GetVersion(This,psMajor,psMinor)

#define IAgentEx_ShowDefaultCharacterProperties(This,x,y,bUseDefaultPosition)	\
    (This)->lpVtbl -> ShowDefaultCharacterProperties(This,x,y,bUseDefaultPosition)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentEx_GetCharacterEx_Proxy( 
    IAgentEx __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [out] */ IAgentCharacterEx __RPC_FAR *__RPC_FAR *ppCharacterEx);


void __RPC_STUB IAgentEx_GetCharacterEx_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentEx_GetVersion_Proxy( 
    IAgentEx __RPC_FAR * This,
    /* [out] */ short __RPC_FAR *psMajor,
    /* [out] */ short __RPC_FAR *psMinor);


void __RPC_STUB IAgentEx_GetVersion_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentEx_ShowDefaultCharacterProperties_Proxy( 
    IAgentEx __RPC_FAR * This,
    /* [in] */ short x,
    /* [in] */ short y,
    /* [in] */ long bUseDefaultPosition);


void __RPC_STUB IAgentEx_ShowDefaultCharacterProperties_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentEx_INTERFACE_DEFINED__ */


#ifndef __IAgentNotifySink_INTERFACE_DEFINED__
#define __IAgentNotifySink_INTERFACE_DEFINED__

/* interface IAgentNotifySink */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentNotifySink;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00D18159-8466-11D0-AC63-00C04FD97575")
    IAgentNotifySink : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Command( 
            /* [in] */ long dwCommandID,
            /* [in] */ IUnknown __RPC_FAR *punkUserInput) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ActivateInputState( 
            /* [in] */ long dwCharID,
            /* [in] */ long bActivated) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Restart( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Shutdown( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE VisibleState( 
            /* [in] */ long dwCharID,
            /* [in] */ long bVisible,
            /* [in] */ long dwCause) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Click( 
            /* [in] */ long dwCharID,
            /* [in] */ short fwKeys,
            /* [in] */ long x,
            /* [in] */ long y) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DblClick( 
            /* [in] */ long dwCharID,
            /* [in] */ short fwKeys,
            /* [in] */ long x,
            /* [in] */ long y) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DragStart( 
            /* [in] */ long dwCharID,
            /* [in] */ short fwKeys,
            /* [in] */ long x,
            /* [in] */ long y) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DragComplete( 
            /* [in] */ long dwCharID,
            /* [in] */ short fwKeys,
            /* [in] */ long x,
            /* [in] */ long y) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RequestStart( 
            /* [in] */ long dwRequestID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RequestComplete( 
            /* [in] */ long dwRequestID,
            /* [in] */ long hrStatus) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE BookMark( 
            /* [in] */ long dwBookMarkID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Idle( 
            /* [in] */ long dwCharID,
            /* [in] */ long bStart) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Move( 
            /* [in] */ long dwCharID,
            /* [in] */ long x,
            /* [in] */ long y,
            /* [in] */ long dwCause) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Size( 
            /* [in] */ long dwCharID,
            /* [in] */ long lWidth,
            /* [in] */ long lHeight) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE BalloonVisibleState( 
            /* [in] */ long dwCharID,
            /* [in] */ long bVisible) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentNotifySinkVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentNotifySink __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentNotifySink __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Command )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwCommandID,
            /* [in] */ IUnknown __RPC_FAR *punkUserInput);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ActivateInputState )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long bActivated);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Restart )( 
            IAgentNotifySink __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Shutdown )( 
            IAgentNotifySink __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *VisibleState )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long bVisible,
            /* [in] */ long dwCause);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Click )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ short fwKeys,
            /* [in] */ long x,
            /* [in] */ long y);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DblClick )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ short fwKeys,
            /* [in] */ long x,
            /* [in] */ long y);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DragStart )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ short fwKeys,
            /* [in] */ long x,
            /* [in] */ long y);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DragComplete )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ short fwKeys,
            /* [in] */ long x,
            /* [in] */ long y);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RequestStart )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwRequestID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RequestComplete )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwRequestID,
            /* [in] */ long hrStatus);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *BookMark )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwBookMarkID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Idle )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long bStart);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Move )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long x,
            /* [in] */ long y,
            /* [in] */ long dwCause);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Size )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long lWidth,
            /* [in] */ long lHeight);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *BalloonVisibleState )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long bVisible);
        
        END_INTERFACE
    } IAgentNotifySinkVtbl;

    interface IAgentNotifySink
    {
        CONST_VTBL struct IAgentNotifySinkVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentNotifySink_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentNotifySink_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentNotifySink_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentNotifySink_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentNotifySink_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentNotifySink_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentNotifySink_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentNotifySink_Command(This,dwCommandID,punkUserInput)	\
    (This)->lpVtbl -> Command(This,dwCommandID,punkUserInput)

#define IAgentNotifySink_ActivateInputState(This,dwCharID,bActivated)	\
    (This)->lpVtbl -> ActivateInputState(This,dwCharID,bActivated)

#define IAgentNotifySink_Restart(This)	\
    (This)->lpVtbl -> Restart(This)

#define IAgentNotifySink_Shutdown(This)	\
    (This)->lpVtbl -> Shutdown(This)

#define IAgentNotifySink_VisibleState(This,dwCharID,bVisible,dwCause)	\
    (This)->lpVtbl -> VisibleState(This,dwCharID,bVisible,dwCause)

#define IAgentNotifySink_Click(This,dwCharID,fwKeys,x,y)	\
    (This)->lpVtbl -> Click(This,dwCharID,fwKeys,x,y)

#define IAgentNotifySink_DblClick(This,dwCharID,fwKeys,x,y)	\
    (This)->lpVtbl -> DblClick(This,dwCharID,fwKeys,x,y)

#define IAgentNotifySink_DragStart(This,dwCharID,fwKeys,x,y)	\
    (This)->lpVtbl -> DragStart(This,dwCharID,fwKeys,x,y)

#define IAgentNotifySink_DragComplete(This,dwCharID,fwKeys,x,y)	\
    (This)->lpVtbl -> DragComplete(This,dwCharID,fwKeys,x,y)

#define IAgentNotifySink_RequestStart(This,dwRequestID)	\
    (This)->lpVtbl -> RequestStart(This,dwRequestID)

#define IAgentNotifySink_RequestComplete(This,dwRequestID,hrStatus)	\
    (This)->lpVtbl -> RequestComplete(This,dwRequestID,hrStatus)

#define IAgentNotifySink_BookMark(This,dwBookMarkID)	\
    (This)->lpVtbl -> BookMark(This,dwBookMarkID)

#define IAgentNotifySink_Idle(This,dwCharID,bStart)	\
    (This)->lpVtbl -> Idle(This,dwCharID,bStart)

#define IAgentNotifySink_Move(This,dwCharID,x,y,dwCause)	\
    (This)->lpVtbl -> Move(This,dwCharID,x,y,dwCause)

#define IAgentNotifySink_Size(This,dwCharID,lWidth,lHeight)	\
    (This)->lpVtbl -> Size(This,dwCharID,lWidth,lHeight)

#define IAgentNotifySink_BalloonVisibleState(This,dwCharID,bVisible)	\
    (This)->lpVtbl -> BalloonVisibleState(This,dwCharID,bVisible)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentNotifySink_Command_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwCommandID,
    /* [in] */ IUnknown __RPC_FAR *punkUserInput);


void __RPC_STUB IAgentNotifySink_Command_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_ActivateInputState_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ long bActivated);


void __RPC_STUB IAgentNotifySink_ActivateInputState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_Restart_Proxy( 
    IAgentNotifySink __RPC_FAR * This);


void __RPC_STUB IAgentNotifySink_Restart_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_Shutdown_Proxy( 
    IAgentNotifySink __RPC_FAR * This);


void __RPC_STUB IAgentNotifySink_Shutdown_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_VisibleState_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ long bVisible,
    /* [in] */ long dwCause);


void __RPC_STUB IAgentNotifySink_VisibleState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_Click_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ short fwKeys,
    /* [in] */ long x,
    /* [in] */ long y);


void __RPC_STUB IAgentNotifySink_Click_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_DblClick_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ short fwKeys,
    /* [in] */ long x,
    /* [in] */ long y);


void __RPC_STUB IAgentNotifySink_DblClick_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_DragStart_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ short fwKeys,
    /* [in] */ long x,
    /* [in] */ long y);


void __RPC_STUB IAgentNotifySink_DragStart_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_DragComplete_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ short fwKeys,
    /* [in] */ long x,
    /* [in] */ long y);


void __RPC_STUB IAgentNotifySink_DragComplete_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_RequestStart_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwRequestID);


void __RPC_STUB IAgentNotifySink_RequestStart_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_RequestComplete_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwRequestID,
    /* [in] */ long hrStatus);


void __RPC_STUB IAgentNotifySink_RequestComplete_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_BookMark_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwBookMarkID);


void __RPC_STUB IAgentNotifySink_BookMark_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_Idle_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ long bStart);


void __RPC_STUB IAgentNotifySink_Idle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_Move_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ long x,
    /* [in] */ long y,
    /* [in] */ long dwCause);


void __RPC_STUB IAgentNotifySink_Move_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_Size_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ long lWidth,
    /* [in] */ long lHeight);


void __RPC_STUB IAgentNotifySink_Size_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_BalloonVisibleState_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ long bVisible);


void __RPC_STUB IAgentNotifySink_BalloonVisibleState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentNotifySink_INTERFACE_DEFINED__ */


#ifndef __IAgentNotifySinkEx_INTERFACE_DEFINED__
#define __IAgentNotifySinkEx_INTERFACE_DEFINED__

/* interface IAgentNotifySinkEx */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentNotifySinkEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("08C75162-3C9C-11d1-91FE-00C04FD701A5")
    IAgentNotifySinkEx : public IAgentNotifySink
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE HelpComplete( 
            /* [in] */ long dwCharID,
            /* [in] */ long dwCommandID,
            /* [in] */ long dwCause) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ListeningState( 
            /* [in] */ long dwCharID,
            /* [in] */ long bListening,
            /* [in] */ long dwCause) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DefaultCharacterChange( 
            /* [in] */ BSTR bszGUID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AgentPropertyChange( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ActiveClientChange( 
            /* [in] */ long dwCharID,
            /* [in] */ long lStatus) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentNotifySinkExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentNotifySinkEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentNotifySinkEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Command )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCommandID,
            /* [in] */ IUnknown __RPC_FAR *punkUserInput);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ActivateInputState )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long bActivated);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Restart )( 
            IAgentNotifySinkEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Shutdown )( 
            IAgentNotifySinkEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *VisibleState )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long bVisible,
            /* [in] */ long dwCause);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Click )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ short fwKeys,
            /* [in] */ long x,
            /* [in] */ long y);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DblClick )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ short fwKeys,
            /* [in] */ long x,
            /* [in] */ long y);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DragStart )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ short fwKeys,
            /* [in] */ long x,
            /* [in] */ long y);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DragComplete )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ short fwKeys,
            /* [in] */ long x,
            /* [in] */ long y);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RequestStart )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwRequestID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RequestComplete )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwRequestID,
            /* [in] */ long hrStatus);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *BookMark )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwBookMarkID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Idle )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long bStart);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Move )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long x,
            /* [in] */ long y,
            /* [in] */ long dwCause);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Size )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long lWidth,
            /* [in] */ long lHeight);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *BalloonVisibleState )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long bVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *HelpComplete )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long dwCommandID,
            /* [in] */ long dwCause);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ListeningState )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long bListening,
            /* [in] */ long dwCause);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DefaultCharacterChange )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ BSTR bszGUID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AgentPropertyChange )( 
            IAgentNotifySinkEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ActiveClientChange )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long lStatus);
        
        END_INTERFACE
    } IAgentNotifySinkExVtbl;

    interface IAgentNotifySinkEx
    {
        CONST_VTBL struct IAgentNotifySinkExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentNotifySinkEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentNotifySinkEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentNotifySinkEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentNotifySinkEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentNotifySinkEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentNotifySinkEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentNotifySinkEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentNotifySinkEx_Command(This,dwCommandID,punkUserInput)	\
    (This)->lpVtbl -> Command(This,dwCommandID,punkUserInput)

#define IAgentNotifySinkEx_ActivateInputState(This,dwCharID,bActivated)	\
    (This)->lpVtbl -> ActivateInputState(This,dwCharID,bActivated)

#define IAgentNotifySinkEx_Restart(This)	\
    (This)->lpVtbl -> Restart(This)

#define IAgentNotifySinkEx_Shutdown(This)	\
    (This)->lpVtbl -> Shutdown(This)

#define IAgentNotifySinkEx_VisibleState(This,dwCharID,bVisible,dwCause)	\
    (This)->lpVtbl -> VisibleState(This,dwCharID,bVisible,dwCause)

#define IAgentNotifySinkEx_Click(This,dwCharID,fwKeys,x,y)	\
    (This)->lpVtbl -> Click(This,dwCharID,fwKeys,x,y)

#define IAgentNotifySinkEx_DblClick(This,dwCharID,fwKeys,x,y)	\
    (This)->lpVtbl -> DblClick(This,dwCharID,fwKeys,x,y)

#define IAgentNotifySinkEx_DragStart(This,dwCharID,fwKeys,x,y)	\
    (This)->lpVtbl -> DragStart(This,dwCharID,fwKeys,x,y)

#define IAgentNotifySinkEx_DragComplete(This,dwCharID,fwKeys,x,y)	\
    (This)->lpVtbl -> DragComplete(This,dwCharID,fwKeys,x,y)

#define IAgentNotifySinkEx_RequestStart(This,dwRequestID)	\
    (This)->lpVtbl -> RequestStart(This,dwRequestID)

#define IAgentNotifySinkEx_RequestComplete(This,dwRequestID,hrStatus)	\
    (This)->lpVtbl -> RequestComplete(This,dwRequestID,hrStatus)

#define IAgentNotifySinkEx_BookMark(This,dwBookMarkID)	\
    (This)->lpVtbl -> BookMark(This,dwBookMarkID)

#define IAgentNotifySinkEx_Idle(This,dwCharID,bStart)	\
    (This)->lpVtbl -> Idle(This,dwCharID,bStart)

#define IAgentNotifySinkEx_Move(This,dwCharID,x,y,dwCause)	\
    (This)->lpVtbl -> Move(This,dwCharID,x,y,dwCause)

#define IAgentNotifySinkEx_Size(This,dwCharID,lWidth,lHeight)	\
    (This)->lpVtbl -> Size(This,dwCharID,lWidth,lHeight)

#define IAgentNotifySinkEx_BalloonVisibleState(This,dwCharID,bVisible)	\
    (This)->lpVtbl -> BalloonVisibleState(This,dwCharID,bVisible)


#define IAgentNotifySinkEx_HelpComplete(This,dwCharID,dwCommandID,dwCause)	\
    (This)->lpVtbl -> HelpComplete(This,dwCharID,dwCommandID,dwCause)

#define IAgentNotifySinkEx_ListeningState(This,dwCharID,bListening,dwCause)	\
    (This)->lpVtbl -> ListeningState(This,dwCharID,bListening,dwCause)

#define IAgentNotifySinkEx_DefaultCharacterChange(This,bszGUID)	\
    (This)->lpVtbl -> DefaultCharacterChange(This,bszGUID)

#define IAgentNotifySinkEx_AgentPropertyChange(This)	\
    (This)->lpVtbl -> AgentPropertyChange(This)

#define IAgentNotifySinkEx_ActiveClientChange(This,dwCharID,lStatus)	\
    (This)->lpVtbl -> ActiveClientChange(This,dwCharID,lStatus)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentNotifySinkEx_HelpComplete_Proxy( 
    IAgentNotifySinkEx __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ long dwCommandID,
    /* [in] */ long dwCause);


void __RPC_STUB IAgentNotifySinkEx_HelpComplete_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySinkEx_ListeningState_Proxy( 
    IAgentNotifySinkEx __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ long bListening,
    /* [in] */ long dwCause);


void __RPC_STUB IAgentNotifySinkEx_ListeningState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySinkEx_DefaultCharacterChange_Proxy( 
    IAgentNotifySinkEx __RPC_FAR * This,
    /* [in] */ BSTR bszGUID);


void __RPC_STUB IAgentNotifySinkEx_DefaultCharacterChange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySinkEx_AgentPropertyChange_Proxy( 
    IAgentNotifySinkEx __RPC_FAR * This);


void __RPC_STUB IAgentNotifySinkEx_AgentPropertyChange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySinkEx_ActiveClientChange_Proxy( 
    IAgentNotifySinkEx __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ long lStatus);


void __RPC_STUB IAgentNotifySinkEx_ActiveClientChange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentNotifySinkEx_INTERFACE_DEFINED__ */


#ifndef __IAgentPrivateNotifySink_INTERFACE_DEFINED__
#define __IAgentPrivateNotifySink_INTERFACE_DEFINED__

/* interface IAgentPrivateNotifySink */
/* [unique][helpstring][uuid][local][object] */ 


EXTERN_C const IID IID_IAgentPrivateNotifySink;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B741B760-8EA6-11d0-AC6A-00C04FD97575")
    IAgentPrivateNotifySink : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE ReleaseAll( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReleaseOne( 
            void __RPC_FAR *pnNotify) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetClientID( 
            DWORD __RPC_FAR *pdwClientID) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentPrivateNotifySinkVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentPrivateNotifySink __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentPrivateNotifySink __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentPrivateNotifySink __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ReleaseAll )( 
            IAgentPrivateNotifySink __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ReleaseOne )( 
            IAgentPrivateNotifySink __RPC_FAR * This,
            void __RPC_FAR *pnNotify);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetClientID )( 
            IAgentPrivateNotifySink __RPC_FAR * This,
            DWORD __RPC_FAR *pdwClientID);
        
        END_INTERFACE
    } IAgentPrivateNotifySinkVtbl;

    interface IAgentPrivateNotifySink
    {
        CONST_VTBL struct IAgentPrivateNotifySinkVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentPrivateNotifySink_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentPrivateNotifySink_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentPrivateNotifySink_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentPrivateNotifySink_ReleaseAll(This)	\
    (This)->lpVtbl -> ReleaseAll(This)

#define IAgentPrivateNotifySink_ReleaseOne(This,pnNotify)	\
    (This)->lpVtbl -> ReleaseOne(This,pnNotify)

#define IAgentPrivateNotifySink_GetClientID(This,pdwClientID)	\
    (This)->lpVtbl -> GetClientID(This,pdwClientID)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentPrivateNotifySink_ReleaseAll_Proxy( 
    IAgentPrivateNotifySink __RPC_FAR * This);


void __RPC_STUB IAgentPrivateNotifySink_ReleaseAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentPrivateNotifySink_ReleaseOne_Proxy( 
    IAgentPrivateNotifySink __RPC_FAR * This,
    void __RPC_FAR *pnNotify);


void __RPC_STUB IAgentPrivateNotifySink_ReleaseOne_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentPrivateNotifySink_GetClientID_Proxy( 
    IAgentPrivateNotifySink __RPC_FAR * This,
    DWORD __RPC_FAR *pdwClientID);


void __RPC_STUB IAgentPrivateNotifySink_GetClientID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentPrivateNotifySink_INTERFACE_DEFINED__ */


#ifndef __IAgentCustomMarshalMaker_INTERFACE_DEFINED__
#define __IAgentCustomMarshalMaker_INTERFACE_DEFINED__

/* interface IAgentCustomMarshalMaker */
/* [unique][helpstring][uuid][hidden][local][object] */ 


EXTERN_C const IID IID_IAgentCustomMarshalMaker;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("408D7542-C8FC-11d1-AA83-00C04FA34D72")
    IAgentCustomMarshalMaker : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Create( 
            /* [in] */ IUnknown __RPC_FAR *pSink,
            /* [in] */ REFIID riidSink,
            /* [out] */ IUnknown __RPC_FAR *__RPC_FAR *pMarshaledSink) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCustomMarshalMakerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCustomMarshalMaker __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCustomMarshalMaker __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCustomMarshalMaker __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Create )( 
            IAgentCustomMarshalMaker __RPC_FAR * This,
            /* [in] */ IUnknown __RPC_FAR *pSink,
            /* [in] */ REFIID riidSink,
            /* [out] */ IUnknown __RPC_FAR *__RPC_FAR *pMarshaledSink);
        
        END_INTERFACE
    } IAgentCustomMarshalMakerVtbl;

    interface IAgentCustomMarshalMaker
    {
        CONST_VTBL struct IAgentCustomMarshalMakerVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCustomMarshalMaker_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCustomMarshalMaker_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCustomMarshalMaker_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCustomMarshalMaker_Create(This,pSink,riidSink,pMarshaledSink)	\
    (This)->lpVtbl -> Create(This,pSink,riidSink,pMarshaledSink)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentCustomMarshalMaker_Create_Proxy( 
    IAgentCustomMarshalMaker __RPC_FAR * This,
    /* [in] */ IUnknown __RPC_FAR *pSink,
    /* [in] */ REFIID riidSink,
    /* [out] */ IUnknown __RPC_FAR *__RPC_FAR *pMarshaledSink);


void __RPC_STUB IAgentCustomMarshalMaker_Create_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCustomMarshalMaker_INTERFACE_DEFINED__ */


#ifndef __IAgentClientStatus_INTERFACE_DEFINED__
#define __IAgentClientStatus_INTERFACE_DEFINED__

/* interface IAgentClientStatus */
/* [unique][helpstring][uuid][local][object] */ 


EXTERN_C const IID IID_IAgentClientStatus;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C5649F70-7AED-11d1-B9A8-00C04FD97575")
    IAgentClientStatus : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Ping( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentClientStatusVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentClientStatus __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentClientStatus __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentClientStatus __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Ping )( 
            IAgentClientStatus __RPC_FAR * This);
        
        END_INTERFACE
    } IAgentClientStatusVtbl;

    interface IAgentClientStatus
    {
        CONST_VTBL struct IAgentClientStatusVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentClientStatus_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentClientStatus_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentClientStatus_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentClientStatus_Ping(This)	\
    (This)->lpVtbl -> Ping(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentClientStatus_Ping_Proxy( 
    IAgentClientStatus __RPC_FAR * This);


void __RPC_STUB IAgentClientStatus_Ping_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentClientStatus_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_AgentServer_0229 */
/* [local] */ 

#define	AGENT_VERSION_MAJOR	( 2 )

#define	AGENT_VERSION_MINOR	( 0 )



extern RPC_IF_HANDLE __MIDL_itf_AgentServer_0229_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_AgentServer_0229_v0_0_s_ifspec;


#ifndef __AgentServerObjects_LIBRARY_DEFINED__
#define __AgentServerObjects_LIBRARY_DEFINED__

/* library AgentServerObjects */
/* [helpstring][version][uuid] */ 




















EXTERN_C const IID LIBID_AgentServerObjects;

EXTERN_C const CLSID CLSID_AgentServer;

#ifdef __cplusplus

class DECLSPEC_UUID("D45FD2FC-5C6E-11D1-9EC1-00C04FD7081F")
AgentServer;
#endif
#endif /* __AgentServerObjects_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     unsigned long __RPC_FAR *, unsigned long            , BSTR __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  BSTR_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, BSTR __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  BSTR_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, BSTR __RPC_FAR * ); 
void                      __RPC_USER  BSTR_UserFree(     unsigned long __RPC_FAR *, BSTR __RPC_FAR * ); 

unsigned long             __RPC_USER  VARIANT_UserSize(     unsigned long __RPC_FAR *, unsigned long            , VARIANT __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  VARIANT_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, VARIANT __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  VARIANT_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, VARIANT __RPC_FAR * ); 
void                      __RPC_USER  VARIANT_UserFree(     unsigned long __RPC_FAR *, VARIANT __RPC_FAR * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif

#endif // _MSC_VER < 1200
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\vc7addon\devtools\common\win32sdk\include\agtsvr_i.c ===
/**************************************************************************
*                                                                         *
* AgtSvr_i.c - Interface IID and CLSID definitions for Microsoft Agent    *
*              Server.                                                    *
*                                                                         *
* Copyright (c) 1996-1999, Microsoft Corp. All rights reserved.           *
*                                                                         *
**************************************************************************/

/* this file contains the actual definitions of */
/* the IIDs and CLSIDs */

/* link this file in with the server and any clients */


/* File created by MIDL compiler version 5.01.0164 */
/* at Tue Sep 15 16:56:07 1998
 */
/* Compiler settings for AgentServer.idl:
    Oicf (OptLev=i2), W1, Zp8, env=Win32, ms_ext, c_ext
    error checks: allocation ref bounds_check enum stub_data 
*/
//@@MIDL_FILE_HEADING(  )
#ifdef __cplusplus
extern "C"{
#endif 


#ifndef __IID_DEFINED__
#define __IID_DEFINED__

typedef struct _IID
{
    unsigned long x;
    unsigned short s1;
    unsigned short s2;
    unsigned char  c[8];
} IID;

#endif // __IID_DEFINED__

#ifndef CLSID_DEFINED
#define CLSID_DEFINED
typedef IID CLSID;
#endif // CLSID_DEFINED

const IID IID_IAgentUserInput = {0xA7B93C80,0x7B81,0x11D0,{0xAC,0x5F,0x00,0xC0,0x4F,0xD9,0x75,0x75}};


const IID IID_IAgentCommand = {0xA7B93C83,0x7B81,0x11D0,{0xAC,0x5F,0x00,0xC0,0x4F,0xD9,0x75,0x75}};


const IID IID_IAgentCommandEx = {0xB0913412,0x3B44,0x11d1,{0xAC,0xBA,0x00,0xC0,0x4F,0xD9,0x75,0x75}};


const IID IID_IAgentCommands = {0xA7B93C85,0x7B81,0x11D0,{0xAC,0x5F,0x00,0xC0,0x4F,0xD9,0x75,0x75}};


const IID IID_IAgentCommandsEx = {0x6BA90C00,0x3910,0x11d1,{0xAC,0xB3,0x00,0xC0,0x4F,0xD9,0x75,0x75}};


const IID IID_IAgentCommandWindow = {0x6D0ECB23,0x9968,0x11D0,{0xAC,0x6E,0x00,0xC0,0x4F,0xD9,0x75,0x75}};


const IID IID_IAgentSpeechInputProperties = {0xA7B93C87,0x7B81,0x11D0,{0xAC,0x5F,0x00,0xC0,0x4F,0xD9,0x75,0x75}};


const IID IID_IAgentAudioOutputProperties = {0xA7B93C89,0x7B81,0x11D0,{0xAC,0x5F,0x00,0xC0,0x4F,0xD9,0x75,0x75}};


const IID IID_IAgentAudioOutputPropertiesEx = {0xA7B93CA0,0x7B81,0x11D0,{0xAC,0x5F,0x00,0xC0,0x4F,0xD9,0x75,0x75}};


const IID IID_IAgentPropertySheet = {0xA7B93C8B,0x7B81,0x11D0,{0xAC,0x5F,0x00,0xC0,0x4F,0xD9,0x75,0x75}};


const IID IID_IAgentBalloon = {0xA7B93C8D,0x7B81,0x11D0,{0xAC,0x5F,0x00,0xC0,0x4F,0xD9,0x75,0x75}};


const IID IID_IAgentBalloonEx = {0xD7A6D440,0x8872,0x11d1,{0x9E,0xC6,0x00,0xC0,0x4F,0xD7,0x08,0x1F}};


const IID IID_IAgentCharacter = {0xA7B93C8F,0x7B81,0x11D0,{0xAC,0x5F,0x00,0xC0,0x4F,0xD9,0x75,0x75}};


const IID IID_IAgentCharacterEx = {0x98BBE491,0x2EED,0x11d1,{0xAC,0xAC,0x00,0xC0,0x4F,0xD9,0x75,0x75}};


const IID IID_IAgent = {0xA7B93C91,0x7B81,0x11D0,{0xAC,0x5F,0x00,0xC0,0x4F,0xD9,0x75,0x75}};


const IID IID_IAgentEx = {0x48D12BA0,0x5B77,0x11d1,{0x9E,0xC1,0x00,0xC0,0x4F,0xD7,0x08,0x1F}};


const IID IID_IAgentNotifySink = {0x00D18159,0x8466,0x11D0,{0xAC,0x63,0x00,0xC0,0x4F,0xD9,0x75,0x75}};


const IID IID_IAgentNotifySinkEx = {0x08C75162,0x3C9C,0x11d1,{0x91,0xFE,0x00,0xC0,0x4F,0xD7,0x01,0xA5}};


const IID IID_IAgentPrivateNotifySink = {0xB741B760,0x8EA6,0x11d0,{0xAC,0x6A,0x00,0xC0,0x4F,0xD9,0x75,0x75}};


const IID IID_IAgentCustomMarshalMaker = {0x408D7542,0xC8FC,0x11d1,{0xAA,0x83,0x00,0xC0,0x4F,0xA3,0x4D,0x72}};


const IID IID_IAgentClientStatus = {0xC5649F70,0x7AED,0x11d1,{0xB9,0xA8,0x00,0xC0,0x4F,0xD9,0x75,0x75}};


const IID LIBID_AgentServerObjects = {0xA7B93C73,0x7B81,0x11D0,{0xAC,0x5F,0x00,0xC0,0x4F,0xD9,0x75,0x75}};


const CLSID CLSID_AgentServer = {0xD45FD2FC,0x5C6E,0x11D1,{0x9E,0xC1,0x00,0xC0,0x4F,0xD7,0x08,0x1F}};


#ifdef __cplusplus
}
#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\vc7addon\devtools\common\win32sdk\include\alphaops.h ===
/*++

Copyright (c) 1992-1999  Digital Equipment Corporation

Module Name:

    alphaops.h

Abstract:

    Alpha AXP instruction and floating constant definitions.

Author:

Revision History:

--*/

#ifndef _ALPHAOPS_
#define _ALPHAOPS_

#if _MSC_VER > 1000
#pragma once
#endif

//
// Instruction types.
//      The Alpha architecture does not number the instruction types,
//      this numbering is for software decoding only.
//

#define ALPHA_UNKNOWN           0       // Reserved or illegal
#define ALPHA_MEMORY            1       // Memory (load/store)
#define ALPHA_FP_MEMORY         2       // Floating point Memory
#define ALPHA_MEMSPC            3       // Memory special
#define ALPHA_JUMP              4       // Jump (memory formation)
#define ALPHA_BRANCH            5       // Branch
#define ALPHA_FP_BRANCH         6       // Floating Point Branch
#define ALPHA_OPERATE           7       // Register-register operate
#define ALPHA_LITERAL           8       // Literal-register operate
#define ALPHA_FP_OPERATE        9       // Floating point operate
#define ALPHA_FP_CONVERT        10      // Floating point convert
#define ALPHA_CALLPAL           11      // Call to PAL
#define ALPHA_EV4_PR            12      // EV4 MTPR/MFPR PAL mode instructions
#define ALPHA_EV4_MEM           13      // EV4 special memory PAL mode access
#define ALPHA_EV4_REI           14      // EV4 PAL mode switch

//
// Instruction Opcodes.
//

#define CALLPAL_OP      0x00    // ALPHA_CALLPAL
#define _01_OP          0x01    // - reserved opcode
#define _02_OP          0x02    // - reserved opcode
#define _03_OP          0x03    // - reserved opcode
#define _04_OP          0x04    // - reserved opcode
#define _05_OP          0x05    // - reserved opcode
#define _06_OP          0x06    // - reserved opcode
#define _07_OP          0x07    // - reserved opcode
#define _0A_OP                  0x0A    // - reserved opcode
#define _0C_OP                  0x0C    // - reserved opcode
#define _0D_OP                  0x0D    // - reserved opcode
#define _0E_OP                  0x0E    // - reserved opcode
#define _1C_OP                  0x1C    // - reserved opcode
#define LDA_OP          0x08    // ALPHA_MEMORY
#define LDAH_OP         0x09    // ALPHA_MEMORY
#define LDBU_OP         0x0A    // ALPHA_MEMORY
#define LDQ_U_OP        0x0B    // ALPHA_MEMORY
#define LDWU_OP         0x0C    // ALPHA_MEMORY
#define STW_OP          0x0D    // ALPHA_MEMORY
#define STB_OP          0x0E    // ALPHA_MEMORY
#define STQ_U_OP        0x0F    // ALPHA_MEMORY
#define ARITH_OP        0x10    // ALPHA_OPERATE or ALPHA_LITERAL
#define BIT_OP          0x11    // ALPHA_OPERATE or ALPHA_LITERAL
#define BYTE_OP         0x12    // ALPHA_OPERATE or ALPHA_LITERAL
#define MUL_OP          0x13    // ALPHA_OPERATE or ALPHA_LITERAL
#define _14_OP          0x14    // - reserved opcode
#define VAXFP_OP        0x15    // ALPHA_FP_OPERATE
#define IEEEFP_OP       0x16    // ALPHA_FP_OPERATE
#define FPOP_OP         0x17    // ALPHA_FP_OPERATE
#define MEMSPC_OP       0x18    // ALPHA_MEMORY
#define PAL19_OP        0x19    // - reserved for PAL mode
//#define MFPR_OP         0x19    // ALPHA_MFPR
#define JMP_OP          0x1A    // ALPHA_JUMP
#define PAL1B_OP        0x1B    // - reserved for PAL mode
#define SEXT_OP         0x1C    // ALPHA_OPERATE
#define PAL1D_OP        0x1D    // - reserved for PAL mode
//#define MTPR_OP         0x1D    // ALPHA_MTPR
#define PAL1E_OP        0x1E    // - reserved for PAL mode
#define PAL1F_OP        0x1F    // - reserved for PAL mode
#define LDF_OP          0x20    // ALPHA_MEMORY
#define LDG_OP          0x21    // ALPHA_MEMORY
#define LDS_OP          0x22    // ALPHA_MEMORY
#define LDT_OP          0x23    // ALPHA_MEMORY
#define STF_OP          0x24    // ALPHA_MEMORY
#define STG_OP          0x25    // ALPHA_MEMORY
#define STS_OP          0x26    // ALPHA_MEMORY
#define STT_OP          0x27    // ALPHA_MEMORY
#define LDL_OP          0x28    // ALPHA_MEMORY
#define LDQ_OP          0x29    // ALPHA_MEMORY
#define LDL_L_OP        0x2A    // ALPHA_MEMORY
#define LDQ_L_OP        0x2B    // ALPHA_MEMORY
#define STL_OP          0x2C    // ALPHA_MEMORY
#define STQ_OP          0x2D    // ALPHA_MEMORY
#define STL_C_OP        0x2E    // ALPHA_MEMORY
#define STQ_C_OP        0x2F    // ALPHA_MEMORY
#define BR_OP           0x30    // ALPHA_BRANCH
#define FBEQ_OP         0x31    // ALPHA_BRANCH
#define FBLT_OP         0x32    // ALPHA_BRANCH
#define FBLE_OP         0x33    // ALPHA_BRANCH
#define BSR_OP          0x34    // ALPHA_BRANCH
#define FBNE_OP         0x35    // ALPHA_BRANCH
#define FBGE_OP         0x36    // ALPHA_BRANCH
#define FBGT_OP         0x37    // ALPHA_BRANCH
#define BLBC_OP         0x38    // ALPHA_BRANCH
#define BEQ_OP          0x39    // ALPHA_BRANCH
#define BLT_OP          0x3A    // ALPHA_BRANCH
#define BLE_OP          0x3B    // ALPHA_BRANCH
#define BLBS_OP         0x3C    // ALPHA_BRANCH
#define BNE_OP          0x3D    // ALPHA_BRANCH
#define BGE_OP          0x3E    // ALPHA_BRANCH
#define BGT_OP          0x3F    // ALPHA_BRANCH

#define LDA_OP_STR      "lda"
#define LDAH_OP_STR     "ldah"
#define LDBU_OP_STR     "ldbu"
#define LDQ_U_OP_STR    "ldq_u"
#define STQ_U_OP_STR    "stq_u"
#define LDF_OP_STR      "ldf"
#define LDG_OP_STR      "ldg"
#define LDS_OP_STR      "lds"
#define LDT_OP_STR      "ldt"
#define LDWU_OP_STR     "ldwu"
#define STF_OP_STR      "stf"
#define STG_OP_STR      "stg"
#define STS_OP_STR      "sts"
#define STT_OP_STR      "stt"
#define LDL_OP_STR      "ldl"
#define LDQ_OP_STR      "ldq"
#define LDL_L_OP_STR    "ldl_l"
#define LDQ_L_OP_STR    "ldq_l"
#define SEXT_OP_STR     "sext"
#define STB_OP_STR      "stb"
#define STL_OP_STR      "stl"
#define STQ_OP_STR      "stq"
#define STL_C_OP_STR    "stl_c"
#define STQ_C_OP_STR    "stq_c"
#define STW_OP_STR      "stw"
#define BR_OP_STR       "br"
#define FBEQ_OP_STR     "fbeq"
#define FBLT_OP_STR     "fblt"
#define FBLE_OP_STR     "fble"
#define BSR_OP_STR      "bsr"
#define FBNE_OP_STR     "fbne"
#define FBGE_OP_STR     "fbge"
#define FBGT_OP_STR     "fbgt"
#define BLBC_OP_STR     "blbc"
#define BEQ_OP_STR      "beq"
#define BLT_OP_STR      "blt"
#define BLE_OP_STR      "ble"
#define BLBS_OP_STR     "blbs"
#define BNE_OP_STR      "bne"
#define BGE_OP_STR      "bge"
#define BGT_OP_STR      "bgt"

//
// Type (1) Memory Instruction Format.
// Type (2) Memory Special Instruction Format.
//
//  3         2 2       2 2       1 1
//  1         6 5       1 0       6 5                             0
// +-----------+---------+---------+-------------------------------+
// |   opcode  |   Ra    |   Rb    |          Memory_disp          |
// +-----------+---------+---------+-------------------------------+
//
//      LDAx    Ra.wq,disp.ab(Rb.ab)            x = (,H)
//      LDx     Ra.wq,disp.ab(Rb.ab)            x = (L,Q,F,G,S,T)
//      LDQ_U   Ra.wq,disp.ab(Rb.ab)
//      LDx_L   Ra.wq,disp.ab(Rb.ab)            x = (L,Q)
//      STx_C   Ra.mq,disp.ab(Rb.ab)            x = (L,Q)
//      STx     Ra.rq,disp.ab(Rb.ab)            x = (L,Q,F,G,S,T)
//      STQ_U   Ra.rq,disp.ab(Rb.ab)
//

typedef struct _Alpha_Memory_Format {
        LONG MemDisp : 16;
        ULONG Rb : 5;
        ULONG Ra : 5;
        ULONG Opcode : 6;
} Alpha_Memory_Format;

//
// Special Memory instruction function codes (in Memdisp).
//

#define TRAPB_FUNC        0x0000
#define EXCB_FUNC         0x0400
#define MB_FUNC           0x4000
#define WMB_FUNC          0x4400
#define MB2_FUNC          0x4800
#define MB3_FUNC          0x4C00
#define FETCH_FUNC        0x8000
#define FETCH_M_FUNC      0xA000
#define RPCC_FUNC         0xC000
#define RC_FUNC           0xE000
#define RS_FUNC           0xF000

#define TRAPB_FUNC_STR     "trapb"
#define EXCB_FUNC_STR      "excb"
#define MB_FUNC_STR        "mb"
#define MB1_FUNC_STR       "wmb"
#define MB2_FUNC_STR       "mb2"
#define MB3_FUNC_STR       "mb3"
#define FETCH_FUNC_STR     "fetch"
#define FETCH_M_FUNC_STR   "fetch_m"
#define RPCC_FUNC_STR      "rpcc"
#define RC_FUNC_STR        "rc"
#define RS_FUNC_STR        "rs"

//
// Type (3) Memory Format Jump Instructions.
//
//  3         2 2       2 2       1 1 1 1
//  1         6 5       1 0       6 5 4 3                         0
// +-----------+---------+---------+---+---------------------------+
// |   opcode  |   Ra    |   Rb    |Fnc|            Hint           |
// +-----------+---------+---------+---+---------------------------+
//
//      xxx     Ra.wq,(Rb.ab),hint      xxx = (JMP, JSR, RET, JSR_COROUTINE)
//

typedef struct _Alpha_Jump_Format {
        LONG Hint : 14;
        ULONG Function : 2;
        ULONG Rb : 5;
        ULONG Ra : 5;
        ULONG Opcode : 6;
} Alpha_Jump_Format;

//
// Jump function codes (in Function, opcode 1A, JMP_OP).
//

#define JMP_FUNC        0x0     // Jump
#define JSR_FUNC        0x1     // Jump to Subroutine
#define RET_FUNC        0x2     // Return from Subroutine
#define JSR_CO_FUNC     0x3     // Jump to Subroutine Return

#define JMP_FUNC_STR      "jmp"
#define JSR_FUNC_STR      "jsr"
#define RET_FUNC_STR      "ret"
#define JSR_CO_FUNC_STR   "jsr_coroutine"

//
// The exception handling compatible return instruction has a hint value
// of 0001. Define a macro that identifies these return instructions.
// The Rb register field is masked out since it is normally, but not
// required to be, RA_REG.
//

#define IS_RETURN_0001_INSTRUCTION(Instruction) \
    (((Instruction) & 0xFFE0FFFF) == 0x6BE08001)

//
// Type (4) Branch Instruction Format.
//
//  3         2 2       2 2
//  1         6 5       1 0                                       0
// +-----------+---------+-----------------------------------------+
// |   opcode  |   Ra    |             Branch_disp                 |
// +-----------+---------+-----------------------------------------+
//
//      Bxx     Ra.rq,disp.al           x = (EQ,NE,LT,LE,GT,GE,LBC,LBS)
//      BxR     Ra.wq,disp.al           x = (,S)
//      FBxx    Ra.rq,disp.al           x = (EQ,NE,LT,LE,GT,GE)
//

typedef struct _Alpha_Branch_Format {
        LONG BranchDisp : 21;
        ULONG Ra : 5;
        ULONG Opcode : 6;
} Alpha_Branch_Format;

//
// Type (5) Operate Register Instruction Format.
// Type (6) Operate Literal Instruction Format.
//               bop = Rb.rq or #b.ib
//
//  3         2 2       2 2       1 1   1 1 1
//  1         6 5       1 0       6 5   3 2 1           5 4       0
// +-----------+---------+---------+-----+-+-------------+---------+
// |   opcode  |   Ra    |   Rb    | SBZ |0|  function   |   Rc    |
// +-----------+---------+---------+-----+-+-------------+---------+
//  3         2 2       2 2             1 1 1
//  1         6 5       1 0             3 2 1           5 4       0
// +-----------+---------+---------------+-+-------------+---------+
// |   opcode  |   Ra    |      LIT      |1|  function   |   Rc    |
// +-----------+---------+---------------+-+-------------+---------+
//
//
//      ADDx    Ra.rq,bop,Rc.wq /V      x = (Q,L)
//      SxADDy  Ra.rq,bop,Rc.wq         x = (4,8), y = (Q, L)
//      CMPx    Ra.rq,bop,Rc.wq         x = (EQ,LT,LE,ULT,ULE)
//      MULx    Ra.rq,bop,Rc.wq /V      x = (Q,L)
//      UMULH   Ra.rq,bop,Rc.wq
//      SUBx    Ra.rq,bop,Rc.wq /V      x = (Q,L)
//      SxSUBy  Ra.rq,bop,Rc.wq         x = (4,8), y = (Q, L)
//      xxx     Ra.rq,bop,Rc.wq         xxx = (AND,BIS,XOR,BIC,ORNOT,EQV)
//      CMOVxx  Ra.rq,bop,Rc.wq         xx = (EQ,NE,LT,LE,GT,GE,LBC,LBS)
//      SxL     Ra.rq,bop,Rc.wq         x = (L,R)
//      SRA     Ra.rq,bop,Rc.wq
//      CMPBGE  Ra.rq,bop,Rc.wq
//      EXTxx   Ra.rq,bop,Rc.wq         xx = (BL,WL,WH,LL,LH,WL,QH)
//      INSxx   Ra.rq,bop,Rc.wq         xx = (BL,WL,WH,LL,LH,WL,QH)
//      MSKxx   Ra.rq,bop,Rc.wq         xx = (BL,WL,WH,LL,LH,WL,QH)
//      ZAPx    Ra.rq,bop,Rc.wq         x = (,NOT)
//

typedef struct _Alpha_OpReg_Format {
        ULONG Rc : 5;
        ULONG Function : 7;
        ULONG RbvType : 1;              // 0 for register format
        ULONG SBZ : 3;
        ULONG Rb : 5;
        ULONG Ra : 5;
        ULONG Opcode : 6;
} Alpha_OpReg_Format;

typedef struct _Alpha_OpLit_Format {
        ULONG Rc : 5;
        ULONG Function : 7;
        ULONG RbvType : 1;              // 1 for literal format
        ULONG Literal : 8;
        ULONG Ra : 5;
        ULONG Opcode : 6;
} Alpha_OpLit_Format;

#define RBV_REGISTER_FORMAT 0
#define RBV_LITERAL_FORMAT 1

//
// Arithmetic operate function codes (in Function, Opcode 10, ARITH_OP).
//

#define ADDL_FUNC       0x00    // Add Longword
#define ADDLV_FUNC      0x40    // Add Longword, Integer Overflow Enable
#define S4ADDL_FUNC     0x02    // Scaled Add Longword by 4
#define S8ADDL_FUNC     0x12    // Scaled Add Longword by 8

#define ADDQ_FUNC       0x20    // Add Quadword
#define ADDQV_FUNC      0x60    // Add Quadword, Integer Overflow Enable
#define S4ADDQ_FUNC     0x22    // Scaled Add Quadword by 4
#define S8ADDQ_FUNC     0x32    // Scaled Add Quadword by 8

#define SUBL_FUNC       0x09    // Subtract Longword
#define SUBLV_FUNC      0x49    // Subtract Longword, Integer Overflow Enable
#define S4SUBL_FUNC     0x0B    // Scaled Subtract Longword by 4
#define S8SUBL_FUNC     0x1B    // Scaled Subtract Longword by 8

#define SUBQ_FUNC       0x29    // Subtract Quadword
#define SUBQV_FUNC      0x69    // Subtract Quadword, Integer Overflow Enable
#define S4SUBQ_FUNC     0x2B    // Scaled Subtract Quadword by 4
#define S8SUBQ_FUNC     0x3B    // Scaled Subtract Quadword by 8

#define CMPEQ_FUNC      0x2D    // Compare Signed Quadword Equal
#define CMPLT_FUNC      0x4D    // Compare Signed Quadword Less Than
#define CMPLE_FUNC      0x6D    // Compare Signed Quadword Less Than or Equal
#define CMPULT_FUNC     0x1D    // Compare Unsigned Quadword Less Than
#define CMPULE_FUNC     0x3D    // Compare Unsigned Quadword Less Than or Equal
#define CMPBGE_FUNC     0x0F    // Compare 8 Unsigned Bytes Greater Than or Equal

#define ADDL_FUNC_STR     "addl"
#define ADDLV_FUNC_STR    "addl/v"
#define S4ADDL_FUNC_STR   "s4addl"
#define S8ADDL_FUNC_STR   "s8addl"

#define ADDQ_FUNC_STR     "addq"
#define ADDQV_FUNC_STR    "addq/v"
#define S4ADDQ_FUNC_STR   "s4addq"
#define S8ADDQ_FUNC_STR   "s8addq"

#define SUBL_FUNC_STR     "subl"
#define SUBLV_FUNC_STR    "subl/v"
#define S4SUBL_FUNC_STR   "s4subl"
#define S8SUBL_FUNC_STR   "s8subl"

#define SUBQ_FUNC_STR     "subq"
#define SUBQV_FUNC_STR    "subq/v"
#define S4SUBQ_FUNC_STR   "s4subq"
#define S8SUBQ_FUNC_STR   "s8subq"

#define CMPEQ_FUNC_STR    "cmpeq"
#define CMPLT_FUNC_STR    "cmplt"
#define CMPLE_FUNC_STR    "cmple"
#define CMPULT_FUNC_STR   "cmpult"
#define CMPULE_FUNC_STR   "cmpule"
#define CMPBGE_FUNC_STR   "cmpbge"

//
// Bit and conditional operate function codes (in Function, Opcode 11, BIT_OP).
//

#define AND_FUNC        0x00    // Logical Product
#define BIC_FUNC        0x08    // Logical Product with Complement
#define BIS_FUNC        0x20    // Logical Sum (OR)
#define EQV_FUNC        0x48    // Logical Equivalence (XORNOT)
#define ORNOT_FUNC      0x28    // Logical Sum with Complement
#define XOR_FUNC        0x40    // Logical Difference

#define CMOVEQ_FUNC     0x24    // CMOVE if Register Equal to Zero
#define CMOVGE_FUNC     0x46    // CMOVE if Register Greater Than or Equal to Zero
#define CMOVGT_FUNC     0x66    // CMOVE if Register Greater Than Zero
#define CMOVLBC_FUNC    0x16    // CMOVE if Register Low Bit Clear
#define CMOVLBS_FUNC    0x14    // CMOVE if Register Low Bit Set
#define CMOVLE_FUNC     0x64    // CMOVE if Register Less Than or Equal to Zero
#define CMOVLT_FUNC     0x44    // CMOVE if Register Less Than Zero
#define CMOVNE_FUNC     0x26    // CMOVE if Register Not Equal to Zero

#define AND_FUNC_STR       "and"
#define BIC_FUNC_STR       "bic"
#define BIS_FUNC_STR       "bis"
#define EQV_FUNC_STR       "eqv"
#define ORNOT_FUNC_STR     "ornot"
#define XOR_FUNC_STR       "xor"

#define CMOVEQ_FUNC_STR    "cmoveq"
#define CMOVGE_FUNC_STR    "cmovge"
#define CMOVGT_FUNC_STR    "cmovgt"
#define CMOVLBC_FUNC_STR   "cmovlbc"
#define CMOVLBS_FUNC_STR   "cmovlbs"
#define CMOVLE_FUNC_STR    "cmovle"
#define CMOVLT_FUNC_STR    "cmovlt"
#define CMOVNE_FUNC_STR    "cmovne"

//
// Shift and byte operate function codes (in Function, Opcode 12, BYTE_OP).
//

#define SLL_FUNC        0x39    // Shift Left Logical
#define SRL_FUNC        0x34    // Shift Right Logical
#define SRA_FUNC        0x3C    // Shift Right Arithmetic

#define EXTBL_FUNC      0x06    // Extract Byte Low
#define EXTWL_FUNC      0x16    // Extract Word Low
#define EXTLL_FUNC      0x26    // Extract Longword Low
#define EXTQL_FUNC      0x36    // Extract Quadword Low
#define EXTWH_FUNC      0x5A    // Extract Word High
#define EXTLH_FUNC      0x6A    // Extract Longword High
#define EXTQH_FUNC      0x7A    // Extract Quadword High

#define INSBL_FUNC      0x0B    // Insert Byte Low
#define INSWL_FUNC      0x1B    // Insert Word Low
#define INSLL_FUNC      0x2B    // Insert Longword Low
#define INSQL_FUNC      0x3B    // Quadword Low
#define INSWH_FUNC      0x57    // Insert Word High
#define INSLH_FUNC      0x67    // Insert Longword High
#define INSQH_FUNC      0x77    // Insert Quadword High

#define MSKBL_FUNC      0x02    // Mask Byte Low
#define MSKWL_FUNC      0x12    // Mask Word Low
#define MSKLL_FUNC      0x22    // Mask Longword Low
#define MSKQL_FUNC      0x32    // Mask Quadword Low
#define MSKWH_FUNC      0x52    // Mask Word High
#define MSKLH_FUNC      0x62    // Mask Longword High
#define MSKQH_FUNC      0x72    // Mask Quadword High

#define ZAP_FUNC        0x30    // Zero Bytes
#define ZAPNOT_FUNC     0x31    // Zero Bytes Not

#define SLL_FUNC_STR    "sll"
#define SRL_FUNC_STR    "srl"
#define SRA_FUNC_STR    "sra"

#define EXTBL_FUNC_STR  "extbl"
#define EXTWL_FUNC_STR  "extwl"
#define EXTLL_FUNC_STR  "extll"
#define EXTQL_FUNC_STR  "extql"
#define EXTWH_FUNC_STR  "extwh"
#define EXTLH_FUNC_STR  "extlh"
#define EXTQH_FUNC_STR  "extqh"

#define INSBL_FUNC_STR  "insbl"
#define INSWL_FUNC_STR  "inswl"
#define INSLL_FUNC_STR  "insll"
#define INSQL_FUNC_STR  "insql"
#define INSWH_FUNC_STR  "inswh"
#define INSLH_FUNC_STR  "inslh"
#define INSQH_FUNC_STR  "insqh"

#define MSKBL_FUNC_STR  "mskbl"
#define MSKWL_FUNC_STR  "mskwl"
#define MSKLL_FUNC_STR  "mskll"
#define MSKQL_FUNC_STR  "mskql"
#define MSKWH_FUNC_STR  "mskwh"
#define MSKLH_FUNC_STR  "msklh"
#define MSKQH_FUNC_STR  "mskqh"

#define ZAP_FUNC_STR    "zap"
#define ZAPNOT_FUNC_STR "zapnot"

//
// Integer multiply operate function codes (in Function, Opcode 13, MUL_OP).
//

#define MULL_FUNC       0x00    // Multiply Longword
#define MULLV_FUNC      0x40    // Multiply Longword, Integer Overflow Enable
#define MULQ_FUNC       0x20    // Multiply Quadword
#define MULQV_FUNC      0x60    // Multiply Quadword, Integer Overflow Enable
#define UMULH_FUNC      0x30    // Unsinged Multiply Quadword High

#define MULL_FUNC_STR   "mull"
#define MULLV_FUNC_STR  "mull/v"
#define MULQ_FUNC_STR   "mulq"
#define MULQV_FUNC_STR  "mulq/v"
#define UMULH_FUNC_STR  "umulh"

//
// Sign extend operate function codes (in Function, Opcode 1c, SEXT_OP).
//

#define SEXTB_FUNC      0x00    // sign extend byte
#define SEXTW_FUNC      0x01    // sign extend word
#define CTPOP_FUNC      0x30    // count population
#define CTLZ_FUNC       0x32    // count leading zeros
#define CTTZ_FUNC       0x33    // count trailing zeros

#define SEXTB_FUNC_STR  "sextb"
#define SEXTW_FUNC_STR  "sextw"
#define CTPOP_FUNC_STR  "ctpop"
#define CTLZ_FUNC_STR   "ctlz"
#define CTTZ_FUNC_STR   "cttz"

//
// Type (7) Floating-point Operate Instruction Format.
// Type (8) Floating-point Convert Instruction Format.
//
// Type 6 and 7 are the same, except for type 7
//      Fc == F31 (1s) and Fb is the source.
//
//  3         2 2       2 2       1 1
//  1         6 5       1 0       6 5                   5 4       0
// +-----------+---------+---------+---------------------+---------+
// |   opcode  |   Fa    |   Fb    |      function       |   Fc    |
// +-----------+---------+---------+---------------------+---------+
//

typedef struct _Alpha_FpOp_Format {
        ULONG Fc : 5;
        ULONG Function : 11;
        ULONG Fb : 5;
        ULONG Fa : 5;
        ULONG Opcode : 6;
} Alpha_FpOp_Format;

//
// Format independent function codes (in Function, Opcode 17)
//

#define CVTLQ_FUNC      0x010
#define CPYS_FUNC       0x020
#define CPYSN_FUNC      0x021
#define CPYSE_FUNC      0x022
#define MT_FPCR_FUNC    0x024
#define MF_FPCR_FUNC    0x025
#define FCMOVEQ_FUNC    0x02A
#define FCMOVNE_FUNC    0x02B
#define FCMOVLT_FUNC    0x02C
#define FCMOVGE_FUNC    0x02D
#define FCMOVLE_FUNC    0x02E
#define FCMOVGT_FUNC    0x02F
#define CVTQL_FUNC      0x030
#define CVTQLV_FUNC     0x130
#define CVTQLSV_FUNC    0x530

#define CVTLQ_FUNC_STR      "cvtlq"
#define CPYS_FUNC_STR       "cpys"
#define CPYSN_FUNC_STR      "cpysn"
#define CPYSE_FUNC_STR      "cpyse"
#define MT_FPCR_FUNC_STR    "mt_fpcr"
#define MF_FPCR_FUNC_STR    "mf_fpcr"
#define FCMOVEQ_FUNC_STR    "fcmoveq"
#define FCMOVNE_FUNC_STR    "fcmovne"
#define FCMOVLT_FUNC_STR    "fcmovlt"
#define FCMOVGE_FUNC_STR    "fcmovge"
#define FCMOVLE_FUNC_STR    "fcmovle"
#define FCMOVGT_FUNC_STR    "fcmovgt"
#define CVTQL_FUNC_STR      "cvtql"
#define CVTQLV_FUNC_STR     "cvtql/v"
#define CVTQLSV_FUNC_STR    "cvtql/sv"

//
// IEEE function codes without flags (in Function, Opcode 16).
//

#define MSK_FP_OP       0x03F

#define ADDS_FUNC       0x000
#define SUBS_FUNC       0x001
#define MULS_FUNC       0x002
#define DIVS_FUNC       0x003
#define ADDT_FUNC       0x020
#define SUBT_FUNC       0x021
#define MULT_FUNC       0x022
#define DIVT_FUNC       0x023
#define CMPTUN_FUNC     0x024
#define CMPTEQ_FUNC     0x025
#define CMPTLT_FUNC     0x026
#define CMPTLE_FUNC     0x027
#define CVTTS_FUNC      0x02C
#define CVTTQ_FUNC      0x02F
#define CVTQS_FUNC      0x03C
#define CVTQT_FUNC      0x03E

#define ADDS_FUNC_STR       "adds"
#define SUBS_FUNC_STR       "subs"
#define MULS_FUNC_STR       "muls"
#define DIVS_FUNC_STR       "divs"
#define ADDT_FUNC_STR       "addt"
#define SUBT_FUNC_STR       "subt"
#define MULT_FUNC_STR       "mult"
#define DIVT_FUNC_STR       "divt"
#define CMPTUN_FUNC_STR     "cmptun"
#define CMPTEQ_FUNC_STR     "cmpteq"
#define CMPTLT_FUNC_STR     "cmptlt"
#define CMPTLE_FUNC_STR     "cmptle"
#define CVTTS_FUNC_STR      "cvtts"
#define CVTTQ_FUNC_STR      "cvttq"
#define CVTQS_FUNC_STR      "cvtqs"
#define CVTQT_FUNC_STR      "cvtqt"

//
// CVTST is a little different.
//

#define CVTST_FUNC      0x2AC
#define CVTST_S_FUNC    0x6AC

#define CVTST_FUNC_STR      "cvtst"
#define CVTST_S_FUNC_STR    "cvtst/s"

//
// VAX function codes without flags (in Function, Opcode 15).
//

#define ADDF_FUNC       0x000
#define CVTDG_FUNC      0x01E
#define ADDG_FUNC       0x020
#define CMPGEQ_FUNC     0x025
#define CMPGLT_FUNC     0x026
#define CMPGLE_FUNC     0x027
#define CVTGF_FUNC      0x02C
#define CVTGD_FUNC      0x02D
#define CVTQF_FUNC      0x03C
#define CVTQG_FUNC      0x03E
#define DIVF_FUNC       0x003
#define DIVG_FUNC       0x023
#define MULF_FUNC       0x002
#define MULG_FUNC       0x022
#define SUBF_FUNC       0x001
#define SUBG_FUNC       0x021
#define CVTGQ_FUNC      0x0AF

#define ADDF_FUNC_STR       "addf"
#define CVTDG_FUNC_STR      "cvtdg"
#define ADDG_FUNC_STR       "addg"
#define CMPGEQ_FUNC_STR     "cmpgeq"
#define CMPGLT_FUNC_STR     "cmpglt"
#define CMPGLE_FUNC_STR     "cmpgle"
#define CVTGF_FUNC_STR      "cvtgf"
#define CVTGD_FUNC_STR      "cvtgd"
#define CVTQF_FUNC_STR      "cvtqf"
#define CVTQG_FUNC_STR      "cvtqg"
#define DIVF_FUNC_STR       "divf"
#define DIVG_FUNC_STR       "divg"
#define MULF_FUNC_STR       "mulf"
#define MULG_FUNC_STR       "mulg"
#define SUBF_FUNC_STR       "subf"
#define SUBG_FUNC_STR       "subg"
#define CVTGQ_FUNC_STR      "cvtgq"

//
// Define subfields within the 11 bit IEEE floating operate function field.
//

#define FP_FUNCTION_MASK      0x03F     // Function code including format

//
// Define the 2 bit format field.
//

#define FP_FORMAT_MASK        0x030
#define FP_FORMAT_S           0x000     // Single (32 bit floating)
#define FP_FORMAT_X           0x010     // Extended (128 bit floating)
#define FP_FORMAT_T           0x020     // Double (64 bit floating)
#define FP_FORMAT_Q           0x030     // Quad (64 bit integer)
#define FP_FORMAT_SHIFT       4

//
// Define the 2 bit rounding mode field.
//

#define FP_ROUND_MASK         0x0C0
#define FP_ROUND_C            0x000     // Chopped
#define FP_ROUND_M            0x040     // Minus Infinity
#define FP_ROUND_N            0x080     // Nearest
#define FP_ROUND_D            0x0C0     // Dynamic
#define FP_ROUND_SHIFT        6

//
// Define the 3 bit trap enable field.
//

#define FP_TRAP_ENABLE_MASK   0x700
#define FP_TRAP_ENABLE_NONE   0x000
#define FP_TRAP_ENABLE_U      0x100     // Underflow
#define FP_TRAP_ENABLE_I      0x200     // Inexact

#define FP_TRAP_ENABLE_S      0x400     // Software Completion
#define FP_TRAP_ENABLE_SU     0x500
#define FP_TRAP_ENABLE_SUI    0x700

#define FP_TRAP_ENABLE_V      0x100     // Integer Overflow
#define FP_TRAP_ENABLE_SV     0x500
#define FP_TRAP_ENABLE_SVI    0x700

#define FP_TRAP_ENABLE_SHIFT  8

//
// VAX and IEEE function flags (or'd with VAX and IEEE function code)
//

#define MSK_FP_FLAGS    0x7C0

#define C_FLAGS         0x000
#define M_FLAGS         0x040
#define NONE_FLAGS      0x080
#define D_FLAGS         0x0C0
#define UC_FLAGS        0x100
#define VC_FLAGS        0x100
#define UM_FLAGS        0x140
#define VM_FLAGS        0x140
#define U_FLAGS         0x180
#define V_FLAGS         0x180
#define UD_FLAGS        0x1C0
#define VD_FLAGS        0x1C0
#define SC_FLAGS        0x400
#define S_FLAGS         0x480
#define SUC_FLAGS       0x500
#define SVC_FLAGS       0x500
#define SUM_FLAGS       0x540
#define SVM_FLAGS       0x540
#define SU_FLAGS        0x580
#define SV_FLAGS        0x580
#define SUD_FLAGS       0x5C0
#define SVD_FLAGS       0x5C0
#define SUIC_FLAGS      0x700
#define SVIC_FLAGS      0x700
#define SUIM_FLAGS      0x740
#define SVIM_FLAGS      0x740
#define SUI_FLAGS       0x780
#define SVI_FLAGS       0x780
#define SUID_FLAGS      0x7C0
#define SVID_FLAGS      0x7C0

#define C_FLAGS_STR       "/c"
#define M_FLAGS_STR       "/m"
#define NONE_FLAGS_STR    ""
#define D_FLAGS_STR       "/d"
#define UC_FLAGS_STR      "/uc"
#define VC_FLAGS_STR      "/vc"
#define UM_FLAGS_STR      "/um"
#define VM_FLAGS_STR      "/vm"
#define U_FLAGS_STR       "/u"
#define V_FLAGS_STR       "/v"
#define UD_FLAGS_STR      "/ud"
#define VD_FLAGS_STR      "/vd"
#define SC_FLAGS_STR      "/sc"
#define S_FLAGS_STR       "/s"
#define SUC_FLAGS_STR     "/suc"
#define SVC_FLAGS_STR     "/svc"
#define SUM_FLAGS_STR     "/sum"
#define SVM_FLAGS_STR     "/svm"
#define SU_FLAGS_STR      "/su"
#define SV_FLAGS_STR      "/sv"
#define SUD_FLAGS_STR     "/sud"
#define SVD_FLAGS_STR     "/svd"
#define SUIC_FLAGS_STR    "/suic"
#define SVIC_FLAGS_STR    "/svic"
#define SUIM_FLAGS_STR    "/suim"
#define SVIM_FLAGS_STR    "/svim"
#define SUI_FLAGS_STR     "/sui"
#define SVI_FLAGS_STR     "/svi"
#define SUID_FLAGS_STR    "/suid"
#define SVID_FLAGS_STR    "/svid"

//
// Type (9) PALcode Instruction Format.
//
//  3         2 2
//  1         6 5                                                 0
// +-----------+---------------------------------------------------+
// |   opcode  |                  PALcode func                     |
// +-----------+---------------------------------------------------+
//

typedef struct _Alpha_PAL_Format {
        ULONG Function : 26;
        ULONG Opcode : 6;
} Alpha_PAL_Format;

//
// Call to PAL function codes (in Function, Opcode 0, CALLPAL_OP).
//
// N.B. - if new call pal functions are added, they must also be added
// in genalpha.c, genalpha.c will generate the include file for .s files
// that will define the call pal mnemonics for assembly language use
//

#define PRIV_PAL_FUNC 0x0
#define UNPRIV_PAL_FUNC 0x80


//
// Unprivileged call pal functions.
//

#define BPT_FUNC       (UNPRIV_PAL_FUNC | 0x00)
#define CALLSYS_FUNC   (UNPRIV_PAL_FUNC | 0x03)
#define IMB_FUNC       (UNPRIV_PAL_FUNC | 0x06)
#define GENTRAP_FUNC   (UNPRIV_PAL_FUNC | 0xAA)
#define RDTEB_FUNC     (UNPRIV_PAL_FUNC | 0xAB)
#define KBPT_FUNC      (UNPRIV_PAL_FUNC | 0xAC)
#define CALLKD_FUNC    (UNPRIV_PAL_FUNC | 0xAD)
#define RDTEB64_FUNC   (UNPRIV_PAL_FUNC | 0xAE)

#define BPT_FUNC_STR       "bpt"
#define CALLSYS_FUNC_STR   "callsys"
#define IMB_FUNC_STR       "imb"
#define RDTEB_FUNC_STR     "rdteb"
#define GENTRAP_FUNC_STR   "gentrap"
#define KBPT_FUNC_STR      "kbpt"
#define CALLKD_FUNC_STR    "callkd"
#define RDTEB64_FUNC_STR   "rdteb64"

//
// Priveleged call pal functions.
//

#define HALT_FUNC       (PRIV_PAL_FUNC | 0x00)
#define RESTART_FUNC    (PRIV_PAL_FUNC | 0x01)
#define DRAINA_FUNC     (PRIV_PAL_FUNC | 0x02)
#define REBOOT_FUNC     (PRIV_PAL_FUNC | 0x03)
#define INITPAL_FUNC    (PRIV_PAL_FUNC | 0x04)
#define WRENTRY_FUNC    (PRIV_PAL_FUNC | 0x05)
#define SWPIRQL_FUNC    (PRIV_PAL_FUNC | 0x06)
#define RDIRQL_FUNC     (PRIV_PAL_FUNC | 0x07)
#define DI_FUNC         (PRIV_PAL_FUNC | 0X08)
#define EI_FUNC         (PRIV_PAL_FUNC | 0x09)
#define SWPPAL_FUNC     (PRIV_PAL_FUNC | 0x0A)
#define SSIR_FUNC       (PRIV_PAL_FUNC | 0x0C)
#define CSIR_FUNC       (PRIV_PAL_FUNC | 0x0D)
#define RFE_FUNC        (PRIV_PAL_FUNC | 0x0E)
#define RETSYS_FUNC     (PRIV_PAL_FUNC | 0x0F)
#define SWPCTX_FUNC     (PRIV_PAL_FUNC | 0x10)
#define SWPPROCESS_FUNC (PRIV_PAL_FUNC | 0x11)
#define RDMCES_FUNC     (PRIV_PAL_FUNC | 0x12)
#define WRMCES_FUNC     (PRIV_PAL_FUNC | 0x13)
#define TBIA_FUNC       (PRIV_PAL_FUNC | 0x14)
#define TBIS_FUNC       (PRIV_PAL_FUNC | 0x15)
#define DTBIS_FUNC      (PRIV_PAL_FUNC | 0x16)
#define TBISASN_FUNC    (PRIV_PAL_FUNC | 0x17)
#define RDKSP_FUNC      (PRIV_PAL_FUNC | 0x18)
#define SWPKSP_FUNC     (PRIV_PAL_FUNC | 0x19)
#define RDPSR_FUNC      (PRIV_PAL_FUNC | 0x1A)
#define RDPCR_FUNC      (PRIV_PAL_FUNC | 0x1C)
#define RDTHREAD_FUNC   (PRIV_PAL_FUNC | 0x1E)
#define TBIM_FUNC       (PRIV_PAL_FUNC | 0x20)
#define TBIMASN_FUNC    (PRIV_PAL_FUNC | 0x21)
#define TBIM64_FUNC     (PRIV_PAL_FUNC | 0x22)
#define TBIS64_FUNC     (PRIV_PAL_FUNC | 0x23)
#define EALNFIX_FUNC    (PRIV_PAL_FUNC | 0x24)
#define DALNFIX_FUNC    (PRIV_PAL_FUNC | 0x25)
#define RDCOUNTERS_FUNC (PRIV_PAL_FUNC | 0x30)
#define RDSTATE_FUNC    (PRIV_PAL_FUNC | 0x31)
#define WRPERFMON_FUNC  (PRIV_PAL_FUNC | 0x32)
#define CP_SLEEP_FUNC   (PRIV_PAL_FUNC | 0x39)

#define HALT_FUNC_STR       "halt"
#define RESTART_FUNC_STR    "restart"
#define DRAINA_FUNC_STR     "draina"
#define REBOOT_FUNC_STR     "reboot"
#define INITPAL_FUNC_STR    "initpal"
#define WRENTRY_FUNC_STR    "wrentry"
#define SWPIRQL_FUNC_STR    "swpirql"
#define RDIRQL_FUNC_STR     "rdirql"
#define DI_FUNC_STR         "di"
#define EI_FUNC_STR         "ei"
#define SWPPAL_FUNC_STR     "swppal"
#define SSIR_FUNC_STR       "ssir"
#define CSIR_FUNC_STR       "csir"
#define RFE_FUNC_STR        "rfe"
#define RETSYS_FUNC_STR     "retsys"
#define SWPCTX_FUNC_STR     "swpctx"
#define SWPPROCESS_FUNC_STR "swpprocess"
#define RDMCES_FUNC_STR     "rdmces"
#define WRMCES_FUNC_STR     "wrmces"
#define TBIA_FUNC_STR       "tbia"
#define TBIS_FUNC_STR       "tbis"
#define DTBIS_FUNC_STR      "dtbis"
#define TBISASN_FUNC_STR    "tbisasn"
#define RDKSP_FUNC_STR      "rdksp"
#define SWPKSP_FUNC_STR     "swpksp"
#define RDPSR_FUNC_STR      "rdpsr"
#define RDPCR_FUNC_STR      "rdpcr"
#define RDTHREAD_FUNC_STR   "rdthread"
#define TBIM_FUNC_STR       "tbim"
#define TBIMASN_FUNC_STR    "tbimasn"
#define TBIM64_FUNC_STR     "tbim64"
#define TBIS64_FUNC_STR     "tbis64"
#define EALNFIX_FUNC_STR    "ealnfix"
#define DALNFIX_FUNC_STR    "dalnfix"
#define RDCOUNTERS_FUNC_STR "rdcounters"
#define RDSTATE_FUNC_STR    "rdstate"
#define WRPERFMON_FUNC_STR  "wrperfmon"
#define CP_SLEEP_FUNC_STR   "cp_sleep"

//
// 21064 (ev4) - specific call pal functions.
//

#define INITPCR_FUNC    (PRIV_PAL_FUNC | 0x38)

#define INITPCR_FUNC_STR   "initpcr"

//
// Type (10) EV4 MTPR/MFPR PAL mode instructions.
//
//  3         2 2       2 2       1 1
//  1         6 5       1 0       6 5             8 7 6 5 4       0
// +-----------+---------+---------+---------------+-+-+-+---------+
// |   opcode  |   Ra    |   Rb    |      IGN      |P|A|I|  Index  |
// +-----------+---------+---------+---------------+-+-+-+---------+
//

typedef struct _Alpha_EV4_PR_Format {
        ULONG Index : 5;
        ULONG Ibox : 1;
        ULONG Abox : 1;
        ULONG PalTemp : 1;
        ULONG IGN : 8;
        ULONG Rb : 5;
        ULONG Ra : 5;
        ULONG Opcode : 6;
} Alpha_EV4_PR_Format;

//
// Type (10) EV5 MTPR/MFPR PAL mode instructions.
//
//  3         2 2       2 2       1 1
//  1         6 5       1 0       6 5                              0
// +-----------+---------+---------+-------------------------------+
// |   opcode  |   Ra    |   Rb    |            Index              |
// +-----------+---------+---------+-------------------------------+
//

typedef struct _Alpha_EV5_PR_Format {
        ULONG Index : 16;
        ULONG Rb : 5;
        ULONG Ra : 5;
        ULONG Opcode : 6;
} Alpha_EV5_PR_Format;

#define MTPR_OP       0x1D
#define MFPR_OP       0x19

#define MTPR_OP_STR   "mt"
#define MFPR_OP_STR   "mf"

//
// Type (11) EV4 special memory PAL mode access.
//
//  3         2 2       2 2       1 1 1 1 1 1
//  1         6 5       1 0       6 5 4 3 2 1                     0
// +-----------+---------+---------+-+-+-+-+-----------------------+
// |   opcode  |   Ra    |   Rb    |P|A|R|Q|         Disp          |
// +-----------+---------+---------+-+-+-+-+-----------------------+
//

typedef struct _Alpha_EV4_MEM_Format {
        ULONG Disp : 12;
        ULONG QuadWord : 1;
        ULONG RWcheck : 1;
        ULONG Alt : 1;
        ULONG Physical : 1;
        ULONG Rb : 5;
        ULONG Ra : 5;
        ULONG Opcode : 6;
} Alpha_EV4_MEM_Format;

//
// Type (11) EV5 special memory PAL mode access.
//
//  3         2 2       2 2       1 1 1 1 1 1
//  1         6 5       1 0       6 5 4 3 2 1                     0
// +-----------+---------+---------+-+-+-+-+-----------------------+
// |   opcode  |   Ra    |   Rb    |P|A|R|Q|         Disp          |
// +-----------+---------+---------+-+-+-+-+-----------------------+
//

typedef struct _Alpha_EV5_MEM_Format {
        ULONG Disp : 10;
        ULONG Lock_Cond: 1;
        ULONG Vpte: 1;
        ULONG QuadWord : 1;
        ULONG RWcheck : 1;
        ULONG Alt : 1;
        ULONG Physical : 1;
        ULONG Rb : 5;
        ULONG Ra : 5;
        ULONG Opcode : 6;
} Alpha_EV5_MEM_Format;

#define HWLD_OP      0x1B
#define HWST_OP      0x1F

#define HWLD_OP_STR  "hwld"
#define HWST_OP_STR  "hwst"

// Type (12) EV4 PAL mode switch.
//
//  3         2 2       2 2       1 1 1 1
//  1         6 5       1 0       6 5 4 3                         0
// +-----------+---------+---------+-+-+---------------------------+
// |   opcode  |   Ra    |   Rb    |1|0|          IGN              |
// +-----------+---------+---------+-+-+---------------------------+

typedef struct _Alpha_EV4_REI_Format {
        ULONG IGN : 14;
        ULONG zero : 1;
        ULONG one : 1;
        ULONG Rb : 5;
        ULONG Ra : 5;
        ULONG Opcode : 6;
} Alpha_EV4_REI_Format;

// Type (12) EV5 PAL mode switch.
//
//  3         2 2       2 2       1 1 1 1
//  1         6 5       1 0       6 5 4 3                         0
// +-----------+---------+---------+-+-+---------------------------+
// |   opcode  |   Ra    |   Rb    |1|0|          IGN              |
// +-----------+---------+---------+-+-+---------------------------+

typedef struct _Alpha_EV5_REI_Format {
        ULONG IGN : 14;
        ULONG Type: 2;
        ULONG Rb : 5;
        ULONG Ra : 5;
        ULONG Opcode : 6;
} Alpha_EV5_REI_Format;

#define REI_OP    0x1E

#define REI_OP_STR  "rei"

//
//
//
typedef union _Alpha_Instruction {
        ULONG Long;
        UCHAR Byte[4];

        Alpha_Memory_Format Memory;
        Alpha_Jump_Format Jump;
        Alpha_Branch_Format Branch;
        Alpha_OpReg_Format OpReg;
        Alpha_OpLit_Format OpLit;
        Alpha_FpOp_Format FpOp;
        Alpha_PAL_Format Pal;
        Alpha_EV4_PR_Format EV4_PR;
        Alpha_EV4_MEM_Format EV4_MEM;
        Alpha_EV4_REI_Format EV4_REI;
        Alpha_EV5_PR_Format EV5_PR;
        Alpha_EV5_MEM_Format EV5_MEM;
        Alpha_EV5_REI_Format EV5_REI;
} ALPHA_INSTRUCTION, *PALPHA_INSTRUCTION;

//
// Define standard integer register assignments.
//

#define V0_REG      0       // v0 - return value register

#define T0_REG      1       // t0 - temporary register
#define T1_REG      2       // t1 - temporary register
#define T2_REG      3       // t2 - temporary register
#define T3_REG      4       // t3 - temporary register
#define T4_REG      5       // t4 - temporary register
#define T5_REG      6       // t5 - temporary register
#define T6_REG      7       // t6 - temporary register
#define T7_REG      8       // t7 - temporary register

#define S0_REG      9       // s0 - saved register
#define S1_REG      10      // s1 - saved register
#define S2_REG      11      // s2 - saved register
#define S3_REG      12      // s3 - saved register
#define S4_REG      13      // s4 - saved register
#define S5_REG      14      // s5 - saved register

#define S6_REG      15      // s6 - saved register, aka fp
#define FP_REG      15      // fp - frame pointer register

#define A0_REG      16      // a0 - argument register
#define A1_REG      17      // a1 - argument register
#define A2_REG      18      // a2 - argument register
#define A3_REG      19      // a3 - argument register
#define A4_REG      20      // a4 - argument register
#define A5_REG      21      // a5 - argument register

#define T8_REG      22      // t8 - temporary register
#define T9_REG      23      // t9 - temporary register
#define T10_REG     24      // t10 - temporary register
#define T11_REG     25      // t11 - temporary register

#define RA_REG      26      // ra - return address register
#define T12_REG     27      // t12 - temporary register
#define AT_REG      28      // at - assembler temporary register
#define GP_REG      29      // gp - global pointer register
#define SP_REG      30      // sp - stack pointer register
#define ZERO_REG    31      // zero - zero register

//
// Define standard floating point register assignments.
//

#define F0_REG      0       // floating return value register (real)
#define F1_REG      1       // floating return value register (imaginary)
#define F16_REG     16      // floating argument register
#define FZERO_REG   31      // floating zero register

//
//  Define standard integer register strings
//

#define V0_REG_STR      "v0"     // - return value register

#define T0_REG_STR      "t0"     // - temporary register
#define T1_REG_STR      "t1"     // - temporary register
#define T2_REG_STR      "t2"     // - temporary register
#define T3_REG_STR      "t3"     // - temporary register
#define T4_REG_STR      "t4"     // - temporary register
#define T5_REG_STR      "t5"     // - temporary register
#define T6_REG_STR      "t6"     // - temporary register
#define T7_REG_STR      "t7"     // - temporary register

#define S0_REG_STR      "s0"     // - saved register
#define S1_REG_STR      "s1"     // - saved register
#define S2_REG_STR      "s2"     // - saved register
#define S3_REG_STR      "s3"     // - saved register
#define S4_REG_STR      "s4"     // - saved register
#define S5_REG_STR      "s5"     // - saved register

#define S6_REG_STR      "s6"     // - saved register, aka fp
#define FP_REG_STR      "fp"     // - frame pointer register

#define A0_REG_STR      "a0"     // - argument register
#define A1_REG_STR      "a1"     // - argument register
#define A2_REG_STR      "a2"     // - argument register
#define A3_REG_STR      "a3"     // - argument register
#define A4_REG_STR      "a4"     // - argument register
#define A5_REG_STR      "a5"     // - argument register

#define T8_REG_STR      "t8"     // - temporary register
#define T9_REG_STR      "t9"     // - temporary register
#define T10_REG_STR     "t10"    // - temporary register
#define T11_REG_STR     "t11"    // - temporary register

#define RA_REG_STR      "ra"     // - return address register
#define T12_REG_STR     "t12"    // - temporary register
#define AT_REG_STR      "at"     // - assembler temporary register
#define GP_REG_STR      "gp"     // - global pointer register
#define SP_REG_STR      "sp"     // - stack pointer register
#define ZERO_REG_STR    "zero"   // - zero register

//
// Define maximum and minimum single and double exponent values.
//

#define DOUBLE_MAXIMUM_EXPONENT 2047
#define DOUBLE_MINIMUM_EXPONENT 0

#define SINGLE_MAXIMUM_EXPONENT 255
#define SINGLE_MINIMUM_EXPONENT 0

//
// Define single and double exponent bias values.
//

#define SINGLE_EXPONENT_BIAS 127
#define DOUBLE_EXPONENT_BIAS 1023

//
// Define the largest single and double values.
//

#define SINGLE_MAXIMUM_VALUE 0x7f7fffff

#define DOUBLE_MAXIMUM_VALUE_HIGH 0x7fefffff
#define DOUBLE_MAXIMUM_VALUE_LOW 0xffffffff

//
// Define single and double quiet and signaling Nan values
// (these are identical to X86 formats; Mips is different).
//

#define SINGLE_QUIET_NAN_PREFIX 0x7fc00000
#define SINGLE_SIGNAL_NAN_PREFIX 0x7f800000
#define SINGLE_QUIET_NAN_VALUE 0xffc00000

#define DOUBLE_QUIET_NAN_PREFIX_HIGH 0x7ff80000
#define DOUBLE_SIGNAL_NAN_PREFIX_HIGH 0x7ff00000
#define DOUBLE_QUIET_NAN_VALUE_HIGH 0xfff80000
#define DOUBLE_QUIET_NAN_VALUE_LOW 0x0

//
// Define positive single and double infinity values.
//

#define SINGLE_INFINITY_VALUE 0x7f800000

#define DOUBLE_INFINITY_VALUE_HIGH 0x7ff00000
#define DOUBLE_INFINITY_VALUE_LOW 0x0

//
// Quadword versions of the above.
//

#define DOUBLE_MAXIMUM_VALUE        ((ULONGLONG)0x7fefffffffffffff)
#define DOUBLE_INFINITY_VALUE       ((ULONGLONG)0x7ff0000000000000)
#define DOUBLE_QUIET_NAN_VALUE      ((ULONGLONG)0xfff8000000000000)

//
// Define result values for IEEE floating point comparison operations.
// True is 2.0 and False is 0.0.
//

#define FP_COMPARE_TRUE             ((ULONGLONG)0x4000000000000000)
#define FP_COMPARE_FALSE            ((ULONGLONG)0x0000000000000000)

//
// Define Alpha AXP rounding modes.
//

#define ROUND_TO_ZERO 0                 // round toward zero
#define ROUND_TO_MINUS_INFINITY 1       // round toward minus infinity
#define ROUND_TO_NEAREST 2              // round to nearest representable value
#define ROUND_TO_PLUS_INFINITY 3        // round toward plus infinity

#endif // _ALPHAOPS_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\vc7addon\devtools\common\win32sdk\include\Amaudio.h ===
//------------------------------------------------------------------------------
// File: AMAudio.h
//
// Desc: Audio related definitions and interfaces for ActiveMovie.
//
// Copyright (c) 1992 - 2000, Microsoft Corporation.  All rights reserved.
//------------------------------------------------------------------------------


#ifndef __AMAUDIO__
#define __AMAUDIO__

#ifdef __cplusplus
extern "C" {
#endif // __cplusplus

#include <mmsystem.h>
#include <dsound.h>

// This is the interface the audio renderer supports to give the application
// access to the direct sound object and buffers it is using, to allow the
// application to use things like the 3D features of Direct Sound for the
// soundtrack of a movie being played with Active Movie

// be nice to our friends in C
#undef INTERFACE
#define INTERFACE IAMDirectSound

DECLARE_INTERFACE_(IAMDirectSound,IUnknown)
{
    /* IUnknown methods */

    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef)(THIS) PURE;
    STDMETHOD_(ULONG,Release)(THIS) PURE;

    /* IAMDirectSound methods */

    STDMETHOD(GetDirectSoundInterface)(THIS_ LPDIRECTSOUND *lplpds) PURE;
    STDMETHOD(GetPrimaryBufferInterface)(THIS_ LPDIRECTSOUNDBUFFER *lplpdsb) PURE;
    STDMETHOD(GetSecondaryBufferInterface)(THIS_ LPDIRECTSOUNDBUFFER *lplpdsb) PURE;
    STDMETHOD(ReleaseDirectSoundInterface)(THIS_ LPDIRECTSOUND lpds) PURE;
    STDMETHOD(ReleasePrimaryBufferInterface)(THIS_ LPDIRECTSOUNDBUFFER lpdsb) PURE;
    STDMETHOD(ReleaseSecondaryBufferInterface)(THIS_ LPDIRECTSOUNDBUFFER lpdsb) PURE;
    STDMETHOD(SetFocusWindow)(THIS_ HWND, BOOL) PURE ;
    STDMETHOD(GetFocusWindow)(THIS_ HWND *, BOOL*) PURE ;
};


#ifdef __cplusplus
}
#endif // __cplusplus
#endif // __AMAUDIO__
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\vc7addon\devtools\common\win32sdk\include\amstream.h ===
#pragma warning( disable: 4049 )  /* more than 64k source lines */

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 6.00.0347 */
/* Compiler settings for amstream.idl:
    Oicf, W1, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __amstream_h__
#define __amstream_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IDirectShowStream_FWD_DEFINED__
#define __IDirectShowStream_FWD_DEFINED__
typedef interface IDirectShowStream IDirectShowStream;
#endif 	/* __IDirectShowStream_FWD_DEFINED__ */


#ifndef __IAMMultiMediaStream_FWD_DEFINED__
#define __IAMMultiMediaStream_FWD_DEFINED__
typedef interface IAMMultiMediaStream IAMMultiMediaStream;
#endif 	/* __IAMMultiMediaStream_FWD_DEFINED__ */


#ifndef __IAMMediaStream_FWD_DEFINED__
#define __IAMMediaStream_FWD_DEFINED__
typedef interface IAMMediaStream IAMMediaStream;
#endif 	/* __IAMMediaStream_FWD_DEFINED__ */


#ifndef __IMediaStreamFilter_FWD_DEFINED__
#define __IMediaStreamFilter_FWD_DEFINED__
typedef interface IMediaStreamFilter IMediaStreamFilter;
#endif 	/* __IMediaStreamFilter_FWD_DEFINED__ */


#ifndef __IDirectDrawMediaSampleAllocator_FWD_DEFINED__
#define __IDirectDrawMediaSampleAllocator_FWD_DEFINED__
typedef interface IDirectDrawMediaSampleAllocator IDirectDrawMediaSampleAllocator;
#endif 	/* __IDirectDrawMediaSampleAllocator_FWD_DEFINED__ */


#ifndef __IDirectDrawMediaSample_FWD_DEFINED__
#define __IDirectDrawMediaSample_FWD_DEFINED__
typedef interface IDirectDrawMediaSample IDirectDrawMediaSample;
#endif 	/* __IDirectDrawMediaSample_FWD_DEFINED__ */


#ifndef __IAMMediaTypeStream_FWD_DEFINED__
#define __IAMMediaTypeStream_FWD_DEFINED__
typedef interface IAMMediaTypeStream IAMMediaTypeStream;
#endif 	/* __IAMMediaTypeStream_FWD_DEFINED__ */


#ifndef __IAMMediaTypeSample_FWD_DEFINED__
#define __IAMMediaTypeSample_FWD_DEFINED__
typedef interface IAMMediaTypeSample IAMMediaTypeSample;
#endif 	/* __IAMMediaTypeSample_FWD_DEFINED__ */


#ifndef __AMMultiMediaStream_FWD_DEFINED__
#define __AMMultiMediaStream_FWD_DEFINED__

#ifdef __cplusplus
typedef class AMMultiMediaStream AMMultiMediaStream;
#else
typedef struct AMMultiMediaStream AMMultiMediaStream;
#endif /* __cplusplus */

#endif 	/* __AMMultiMediaStream_FWD_DEFINED__ */


/* header files for imported files */
#include "unknwn.h"
#include "mmstream.h"
#include "strmif.h"

#ifdef __cplusplus
extern "C"{
#endif 

void * __RPC_USER MIDL_user_allocate(size_t);
void __RPC_USER MIDL_user_free( void * ); 

/* interface __MIDL_itf_amstream_0000 */
/* [local] */ 

#include <ddraw.h>
#include <mmsystem.h>
#include <mmstream.h>
#include <ddstream.h>
#include <austream.h>








enum __MIDL___MIDL_itf_amstream_0000_0001
    {	AMMSF_NOGRAPHTHREAD	= 0x1
    } ;

enum __MIDL___MIDL_itf_amstream_0000_0002
    {	AMMSF_ADDDEFAULTRENDERER	= 0x1,
	AMMSF_CREATEPEER	= 0x2,
	AMMSF_STOPIFNOSAMPLES	= 0x4,
	AMMSF_NOSTALL	= 0x8
    } ;

enum __MIDL___MIDL_itf_amstream_0000_0003
    {	AMMSF_RENDERTYPEMASK	= 0x3,
	AMMSF_RENDERTOEXISTING	= 0,
	AMMSF_RENDERALLSTREAMS	= 0x1,
	AMMSF_NORENDER	= 0x2,
	AMMSF_NOCLOCK	= 0x4,
	AMMSF_RUN	= 0x8
    } ;
typedef /* [public][public][public][public][public][v1_enum] */ 
enum __MIDL___MIDL_itf_amstream_0000_0004
    {	Disabled	= 0,
	ReadData	= 1,
	RenderData	= 2
    } 	OUTPUT_STATE;



extern RPC_IF_HANDLE __MIDL_itf_amstream_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_amstream_0000_v0_0_s_ifspec;

#ifndef __IDirectShowStream_INTERFACE_DEFINED__
#define __IDirectShowStream_INTERFACE_DEFINED__

/* interface IDirectShowStream */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IDirectShowStream;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7DB01C96-C0C3-11d0-8FF1-00C04FD9189D")
    IDirectShowStream : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_FileName( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_FileName( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Video( 
            /* [retval][out] */ OUTPUT_STATE *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Video( 
            /* [in] */ OUTPUT_STATE newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Audio( 
            /* [retval][out] */ OUTPUT_STATE *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Audio( 
            /* [in] */ OUTPUT_STATE newVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDirectShowStreamVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDirectShowStream * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDirectShowStream * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDirectShowStream * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDirectShowStream * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDirectShowStream * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDirectShowStream * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDirectShowStream * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FileName )( 
            IDirectShowStream * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FileName )( 
            IDirectShowStream * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Video )( 
            IDirectShowStream * This,
            /* [retval][out] */ OUTPUT_STATE *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Video )( 
            IDirectShowStream * This,
            /* [in] */ OUTPUT_STATE newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Audio )( 
            IDirectShowStream * This,
            /* [retval][out] */ OUTPUT_STATE *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Audio )( 
            IDirectShowStream * This,
            /* [in] */ OUTPUT_STATE newVal);
        
        END_INTERFACE
    } IDirectShowStreamVtbl;

    interface IDirectShowStream
    {
        CONST_VTBL struct IDirectShowStreamVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDirectShowStream_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IDirectShowStream_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IDirectShowStream_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IDirectShowStream_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IDirectShowStream_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IDirectShowStream_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IDirectShowStream_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IDirectShowStream_get_FileName(This,pVal)	\
    (This)->lpVtbl -> get_FileName(This,pVal)

#define IDirectShowStream_put_FileName(This,newVal)	\
    (This)->lpVtbl -> put_FileName(This,newVal)

#define IDirectShowStream_get_Video(This,pVal)	\
    (This)->lpVtbl -> get_Video(This,pVal)

#define IDirectShowStream_put_Video(This,newVal)	\
    (This)->lpVtbl -> put_Video(This,newVal)

#define IDirectShowStream_get_Audio(This,pVal)	\
    (This)->lpVtbl -> get_Audio(This,pVal)

#define IDirectShowStream_put_Audio(This,newVal)	\
    (This)->lpVtbl -> put_Audio(This,newVal)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IDirectShowStream_get_FileName_Proxy( 
    IDirectShowStream * This,
    /* [retval][out] */ BSTR *pVal);


void __RPC_STUB IDirectShowStream_get_FileName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IDirectShowStream_put_FileName_Proxy( 
    IDirectShowStream * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB IDirectShowStream_put_FileName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IDirectShowStream_get_Video_Proxy( 
    IDirectShowStream * This,
    /* [retval][out] */ OUTPUT_STATE *pVal);


void __RPC_STUB IDirectShowStream_get_Video_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IDirectShowStream_put_Video_Proxy( 
    IDirectShowStream * This,
    /* [in] */ OUTPUT_STATE newVal);


void __RPC_STUB IDirectShowStream_put_Video_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IDirectShowStream_get_Audio_Proxy( 
    IDirectShowStream * This,
    /* [retval][out] */ OUTPUT_STATE *pVal);


void __RPC_STUB IDirectShowStream_get_Audio_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IDirectShowStream_put_Audio_Proxy( 
    IDirectShowStream * This,
    /* [in] */ OUTPUT_STATE newVal);


void __RPC_STUB IDirectShowStream_put_Audio_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IDirectShowStream_INTERFACE_DEFINED__ */


#ifndef __IAMMultiMediaStream_INTERFACE_DEFINED__
#define __IAMMultiMediaStream_INTERFACE_DEFINED__

/* interface IAMMultiMediaStream */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IAMMultiMediaStream;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("BEBE595C-9A6F-11d0-8FDE-00C04FD9189D")
    IAMMultiMediaStream : public IMultiMediaStream
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Initialize( 
            /* [in] */ STREAM_TYPE StreamType,
            /* [in] */ DWORD dwFlags,
            /* [in] */ IGraphBuilder *pFilterGraph) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFilterGraph( 
            /* [out] */ IGraphBuilder **ppGraphBuilder) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFilter( 
            /* [out] */ IMediaStreamFilter **ppFilter) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddMediaStream( 
            /* [in] */ IUnknown *pStreamObject,
            /* [in] */ const MSPID *PurposeId,
            /* [in] */ DWORD dwFlags,
            /* [out] */ IMediaStream **ppNewStream) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OpenFile( 
            /* [in] */ LPCWSTR pszFileName,
            /* [in] */ DWORD dwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OpenMoniker( 
            /* [in] */ IBindCtx *pCtx,
            /* [in] */ IMoniker *pMoniker,
            /* [in] */ DWORD dwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Render( 
            /* [in] */ DWORD dwFlags) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAMMultiMediaStreamVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAMMultiMediaStream * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAMMultiMediaStream * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAMMultiMediaStream * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetInformation )( 
            IAMMultiMediaStream * This,
            /* [out] */ DWORD *pdwFlags,
            /* [out] */ STREAM_TYPE *pStreamType);
        
        HRESULT ( STDMETHODCALLTYPE *GetMediaStream )( 
            IAMMultiMediaStream * This,
            /* [in] */ REFMSPID idPurpose,
            /* [out] */ IMediaStream **ppMediaStream);
        
        HRESULT ( STDMETHODCALLTYPE *EnumMediaStreams )( 
            IAMMultiMediaStream * This,
            /* [in] */ long Index,
            /* [out] */ IMediaStream **ppMediaStream);
        
        HRESULT ( STDMETHODCALLTYPE *GetState )( 
            IAMMultiMediaStream * This,
            /* [out] */ STREAM_STATE *pCurrentState);
        
        HRESULT ( STDMETHODCALLTYPE *SetState )( 
            IAMMultiMediaStream * This,
            /* [in] */ STREAM_STATE NewState);
        
        HRESULT ( STDMETHODCALLTYPE *GetTime )( 
            IAMMultiMediaStream * This,
            /* [out] */ STREAM_TIME *pCurrentTime);
        
        HRESULT ( STDMETHODCALLTYPE *GetDuration )( 
            IAMMultiMediaStream * This,
            /* [out] */ STREAM_TIME *pDuration);
        
        HRESULT ( STDMETHODCALLTYPE *Seek )( 
            IAMMultiMediaStream * This,
            /* [in] */ STREAM_TIME SeekTime);
        
        HRESULT ( STDMETHODCALLTYPE *GetEndOfStreamEventHandle )( 
            IAMMultiMediaStream * This,
            /* [out] */ HANDLE *phEOS);
        
        HRESULT ( STDMETHODCALLTYPE *Initialize )( 
            IAMMultiMediaStream * This,
            /* [in] */ STREAM_TYPE StreamType,
            /* [in] */ DWORD dwFlags,
            /* [in] */ IGraphBuilder *pFilterGraph);
        
        HRESULT ( STDMETHODCALLTYPE *GetFilterGraph )( 
            IAMMultiMediaStream * This,
            /* [out] */ IGraphBuilder **ppGraphBuilder);
        
        HRESULT ( STDMETHODCALLTYPE *GetFilter )( 
            IAMMultiMediaStream * This,
            /* [out] */ IMediaStreamFilter **ppFilter);
        
        HRESULT ( STDMETHODCALLTYPE *AddMediaStream )( 
            IAMMultiMediaStream * This,
            /* [in] */ IUnknown *pStreamObject,
            /* [in] */ const MSPID *PurposeId,
            /* [in] */ DWORD dwFlags,
            /* [out] */ IMediaStream **ppNewStream);
        
        HRESULT ( STDMETHODCALLTYPE *OpenFile )( 
            IAMMultiMediaStream * This,
            /* [in] */ LPCWSTR pszFileName,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *OpenMoniker )( 
            IAMMultiMediaStream * This,
            /* [in] */ IBindCtx *pCtx,
            /* [in] */ IMoniker *pMoniker,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *Render )( 
            IAMMultiMediaStream * This,
            /* [in] */ DWORD dwFlags);
        
        END_INTERFACE
    } IAMMultiMediaStreamVtbl;

    interface IAMMultiMediaStream
    {
        CONST_VTBL struct IAMMultiMediaStreamVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAMMultiMediaStream_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAMMultiMediaStream_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAMMultiMediaStream_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAMMultiMediaStream_GetInformation(This,pdwFlags,pStreamType)	\
    (This)->lpVtbl -> GetInformation(This,pdwFlags,pStreamType)

#define IAMMultiMediaStream_GetMediaStream(This,idPurpose,ppMediaStream)	\
    (This)->lpVtbl -> GetMediaStream(This,idPurpose,ppMediaStream)

#define IAMMultiMediaStream_EnumMediaStreams(This,Index,ppMediaStream)	\
    (This)->lpVtbl -> EnumMediaStreams(This,Index,ppMediaStream)

#define IAMMultiMediaStream_GetState(This,pCurrentState)	\
    (This)->lpVtbl -> GetState(This,pCurrentState)

#define IAMMultiMediaStream_SetState(This,NewState)	\
    (This)->lpVtbl -> SetState(This,NewState)

#define IAMMultiMediaStream_GetTime(This,pCurrentTime)	\
    (This)->lpVtbl -> GetTime(This,pCurrentTime)

#define IAMMultiMediaStream_GetDuration(This,pDuration)	\
    (This)->lpVtbl -> GetDuration(This,pDuration)

#define IAMMultiMediaStream_Seek(This,SeekTime)	\
    (This)->lpVtbl -> Seek(This,SeekTime)

#define IAMMultiMediaStream_GetEndOfStreamEventHandle(This,phEOS)	\
    (This)->lpVtbl -> GetEndOfStreamEventHandle(This,phEOS)


#define IAMMultiMediaStream_Initialize(This,StreamType,dwFlags,pFilterGraph)	\
    (This)->lpVtbl -> Initialize(This,StreamType,dwFlags,pFilterGraph)

#define IAMMultiMediaStream_GetFilterGraph(This,ppGraphBuilder)	\
    (This)->lpVtbl -> GetFilterGraph(This,ppGraphBuilder)

#define IAMMultiMediaStream_GetFilter(This,ppFilter)	\
    (This)->lpVtbl -> GetFilter(This,ppFilter)

#define IAMMultiMediaStream_AddMediaStream(This,pStreamObject,PurposeId,dwFlags,ppNewStream)	\
    (This)->lpVtbl -> AddMediaStream(This,pStreamObject,PurposeId,dwFlags,ppNewStream)

#define IAMMultiMediaStream_OpenFile(This,pszFileName,dwFlags)	\
    (This)->lpVtbl -> OpenFile(This,pszFileName,dwFlags)

#define IAMMultiMediaStream_OpenMoniker(This,pCtx,pMoniker,dwFlags)	\
    (This)->lpVtbl -> OpenMoniker(This,pCtx,pMoniker,dwFlags)

#define IAMMultiMediaStream_Render(This,dwFlags)	\
    (This)->lpVtbl -> Render(This,dwFlags)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAMMultiMediaStream_Initialize_Proxy( 
    IAMMultiMediaStream * This,
    /* [in] */ STREAM_TYPE StreamType,
    /* [in] */ DWORD dwFlags,
    /* [in] */ IGraphBuilder *pFilterGraph);


void __RPC_STUB IAMMultiMediaStream_Initialize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAMMultiMediaStream_GetFilterGraph_Proxy( 
    IAMMultiMediaStream * This,
    /* [out] */ IGraphBuilder **ppGraphBuilder);


void __RPC_STUB IAMMultiMediaStream_GetFilterGraph_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAMMultiMediaStream_GetFilter_Proxy( 
    IAMMultiMediaStream * This,
    /* [out] */ IMediaStreamFilter **ppFilter);


void __RPC_STUB IAMMultiMediaStream_GetFilter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAMMultiMediaStream_AddMediaStream_Proxy( 
    IAMMultiMediaStream * This,
    /* [in] */ IUnknown *pStreamObject,
    /* [in] */ const MSPID *PurposeId,
    /* [in] */ DWORD dwFlags,
    /* [out] */ IMediaStream **ppNewStream);


void __RPC_STUB IAMMultiMediaStream_AddMediaStream_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAMMultiMediaStream_OpenFile_Proxy( 
    IAMMultiMediaStream * This,
    /* [in] */ LPCWSTR pszFileName,
    /* [in] */ DWORD dwFlags);


void __RPC_STUB IAMMultiMediaStream_OpenFile_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAMMultiMediaStream_OpenMoniker_Proxy( 
    IAMMultiMediaStream * This,
    /* [in] */ IBindCtx *pCtx,
    /* [in] */ IMoniker *pMoniker,
    /* [in] */ DWORD dwFlags);


void __RPC_STUB IAMMultiMediaStream_OpenMoniker_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAMMultiMediaStream_Render_Proxy( 
    IAMMultiMediaStream * This,
    /* [in] */ DWORD dwFlags);


void __RPC_STUB IAMMultiMediaStream_Render_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAMMultiMediaStream_INTERFACE_DEFINED__ */


#ifndef __IAMMediaStream_INTERFACE_DEFINED__
#define __IAMMediaStream_INTERFACE_DEFINED__

/* interface IAMMediaStream */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IAMMediaStream;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("BEBE595D-9A6F-11d0-8FDE-00C04FD9189D")
    IAMMediaStream : public IMediaStream
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Initialize( 
            /* [in] */ IUnknown *pSourceObject,
            /* [in] */ DWORD dwFlags,
            /* [in] */ REFMSPID PurposeId,
            /* [in] */ const STREAM_TYPE StreamType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetState( 
            /* [in] */ FILTER_STATE State) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE JoinAMMultiMediaStream( 
            /* [in] */ IAMMultiMediaStream *pAMMultiMediaStream) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE JoinFilter( 
            /* [in] */ IMediaStreamFilter *pMediaStreamFilter) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE JoinFilterGraph( 
            /* [in] */ IFilterGraph *pFilterGraph) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAMMediaStreamVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAMMediaStream * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAMMediaStream * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAMMediaStream * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMultiMediaStream )( 
            IAMMediaStream * This,
            /* [out] */ IMultiMediaStream **ppMultiMediaStream);
        
        HRESULT ( STDMETHODCALLTYPE *GetInformation )( 
            IAMMediaStream * This,
            /* [out] */ MSPID *pPurposeId,
            /* [out] */ STREAM_TYPE *pType);
        
        HRESULT ( STDMETHODCALLTYPE *SetSameFormat )( 
            IAMMediaStream * This,
            /* [in] */ IMediaStream *pStreamThatHasDesiredFormat,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *AllocateSample )( 
            IAMMediaStream * This,
            /* [in] */ DWORD dwFlags,
            /* [out] */ IStreamSample **ppSample);
        
        HRESULT ( STDMETHODCALLTYPE *CreateSharedSample )( 
            IAMMediaStream * This,
            /* [in] */ IStreamSample *pExistingSample,
            /* [in] */ DWORD dwFlags,
            /* [out] */ IStreamSample **ppNewSample);
        
        HRESULT ( STDMETHODCALLTYPE *SendEndOfStream )( 
            IAMMediaStream * This,
            DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *Initialize )( 
            IAMMediaStream * This,
            /* [in] */ IUnknown *pSourceObject,
            /* [in] */ DWORD dwFlags,
            /* [in] */ REFMSPID PurposeId,
            /* [in] */ const STREAM_TYPE StreamType);
        
        HRESULT ( STDMETHODCALLTYPE *SetState )( 
            IAMMediaStream * This,
            /* [in] */ FILTER_STATE State);
        
        HRESULT ( STDMETHODCALLTYPE *JoinAMMultiMediaStream )( 
            IAMMediaStream * This,
            /* [in] */ IAMMultiMediaStream *pAMMultiMediaStream);
        
        HRESULT ( STDMETHODCALLTYPE *JoinFilter )( 
            IAMMediaStream * This,
            /* [in] */ IMediaStreamFilter *pMediaStreamFilter);
        
        HRESULT ( STDMETHODCALLTYPE *JoinFilterGraph )( 
            IAMMediaStream * This,
            /* [in] */ IFilterGraph *pFilterGraph);
        
        END_INTERFACE
    } IAMMediaStreamVtbl;

    interface IAMMediaStream
    {
        CONST_VTBL struct IAMMediaStreamVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAMMediaStream_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAMMediaStream_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAMMediaStream_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAMMediaStream_GetMultiMediaStream(This,ppMultiMediaStream)	\
    (This)->lpVtbl -> GetMultiMediaStream(This,ppMultiMediaStream)

#define IAMMediaStream_GetInformation(This,pPurposeId,pType)	\
    (This)->lpVtbl -> GetInformation(This,pPurposeId,pType)

#define IAMMediaStream_SetSameFormat(This,pStreamThatHasDesiredFormat,dwFlags)	\
    (This)->lpVtbl -> SetSameFormat(This,pStreamThatHasDesiredFormat,dwFlags)

#define IAMMediaStream_AllocateSample(This,dwFlags,ppSample)	\
    (This)->lpVtbl -> AllocateSample(This,dwFlags,ppSample)

#define IAMMediaStream_CreateSharedSample(This,pExistingSample,dwFlags,ppNewSample)	\
    (This)->lpVtbl -> CreateSharedSample(This,pExistingSample,dwFlags,ppNewSample)

#define IAMMediaStream_SendEndOfStream(This,dwFlags)	\
    (This)->lpVtbl -> SendEndOfStream(This,dwFlags)


#define IAMMediaStream_Initialize(This,pSourceObject,dwFlags,PurposeId,StreamType)	\
    (This)->lpVtbl -> Initialize(This,pSourceObject,dwFlags,PurposeId,StreamType)

#define IAMMediaStream_SetState(This,State)	\
    (This)->lpVtbl -> SetState(This,State)

#define IAMMediaStream_JoinAMMultiMediaStream(This,pAMMultiMediaStream)	\
    (This)->lpVtbl -> JoinAMMultiMediaStream(This,pAMMultiMediaStream)

#define IAMMediaStream_JoinFilter(This,pMediaStreamFilter)	\
    (This)->lpVtbl -> JoinFilter(This,pMediaStreamFilter)

#define IAMMediaStream_JoinFilterGraph(This,pFilterGraph)	\
    (This)->lpVtbl -> JoinFilterGraph(This,pFilterGraph)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAMMediaStream_Initialize_Proxy( 
    IAMMediaStream * This,
    /* [in] */ IUnknown *pSourceObject,
    /* [in] */ DWORD dwFlags,
    /* [in] */ REFMSPID PurposeId,
    /* [in] */ const STREAM_TYPE StreamType);


void __RPC_STUB IAMMediaStream_Initialize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAMMediaStream_SetState_Proxy( 
    IAMMediaStream * This,
    /* [in] */ FILTER_STATE State);


void __RPC_STUB IAMMediaStream_SetState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAMMediaStream_JoinAMMultiMediaStream_Proxy( 
    IAMMediaStream * This,
    /* [in] */ IAMMultiMediaStream *pAMMultiMediaStream);


void __RPC_STUB IAMMediaStream_JoinAMMultiMediaStream_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAMMediaStream_JoinFilter_Proxy( 
    IAMMediaStream * This,
    /* [in] */ IMediaStreamFilter *pMediaStreamFilter);


void __RPC_STUB IAMMediaStream_JoinFilter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAMMediaStream_JoinFilterGraph_Proxy( 
    IAMMediaStream * This,
    /* [in] */ IFilterGraph *pFilterGraph);


void __RPC_STUB IAMMediaStream_JoinFilterGraph_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAMMediaStream_INTERFACE_DEFINED__ */


#ifndef __IMediaStreamFilter_INTERFACE_DEFINED__
#define __IMediaStreamFilter_INTERFACE_DEFINED__

/* interface IMediaStreamFilter */
/* [unique][uuid][local][object] */ 


EXTERN_C const IID IID_IMediaStreamFilter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("BEBE595E-9A6F-11d0-8FDE-00C04FD9189D")
    IMediaStreamFilter : public IBaseFilter
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE AddMediaStream( 
            /* [in] */ IAMMediaStream *pAMMediaStream) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMediaStream( 
            /* [in] */ REFMSPID idPurpose,
            /* [out] */ IMediaStream **ppMediaStream) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnumMediaStreams( 
            /* [in] */ long Index,
            /* [out] */ IMediaStream **ppMediaStream) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SupportSeeking( 
            /* [in] */ BOOL bRenderer) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReferenceTimeToStreamTime( 
            /* [out][in] */ REFERENCE_TIME *pTime) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCurrentStreamTime( 
            /* [out] */ REFERENCE_TIME *pCurrentStreamTime) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE WaitUntil( 
            /* [in] */ REFERENCE_TIME WaitStreamTime) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Flush( 
            /* [in] */ BOOL bCancelEOS) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EndOfStream( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMediaStreamFilterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMediaStreamFilter * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMediaStreamFilter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMediaStreamFilter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetClassID )( 
            IMediaStreamFilter * This,
            /* [out] */ CLSID *pClassID);
        
        HRESULT ( STDMETHODCALLTYPE *Stop )( 
            IMediaStreamFilter * This);
        
        HRESULT ( STDMETHODCALLTYPE *Pause )( 
            IMediaStreamFilter * This);
        
        HRESULT ( STDMETHODCALLTYPE *Run )( 
            IMediaStreamFilter * This,
            REFERENCE_TIME tStart);
        
        HRESULT ( STDMETHODCALLTYPE *GetState )( 
            IMediaStreamFilter * This,
            /* [in] */ DWORD dwMilliSecsTimeout,
            /* [out] */ FILTER_STATE *State);
        
        HRESULT ( STDMETHODCALLTYPE *SetSyncSource )( 
            IMediaStreamFilter * This,
            /* [in] */ IReferenceClock *pClock);
        
        HRESULT ( STDMETHODCALLTYPE *GetSyncSource )( 
            IMediaStreamFilter * This,
            /* [out] */ IReferenceClock **pClock);
        
        HRESULT ( STDMETHODCALLTYPE *EnumPins )( 
            IMediaStreamFilter * This,
            /* [out] */ IEnumPins **ppEnum);
        
        HRESULT ( STDMETHODCALLTYPE *FindPin )( 
            IMediaStreamFilter * This,
            /* [string][in] */ LPCWSTR Id,
            /* [out] */ IPin **ppPin);
        
        HRESULT ( STDMETHODCALLTYPE *QueryFilterInfo )( 
            IMediaStreamFilter * This,
            /* [out] */ FILTER_INFO *pInfo);
        
        HRESULT ( STDMETHODCALLTYPE *JoinFilterGraph )( 
            IMediaStreamFilter * This,
            /* [in] */ IFilterGraph *pGraph,
            /* [string][in] */ LPCWSTR pName);
        
        HRESULT ( STDMETHODCALLTYPE *QueryVendorInfo )( 
            IMediaStreamFilter * This,
            /* [string][out] */ LPWSTR *pVendorInfo);
        
        HRESULT ( STDMETHODCALLTYPE *AddMediaStream )( 
            IMediaStreamFilter * This,
            /* [in] */ IAMMediaStream *pAMMediaStream);
        
        HRESULT ( STDMETHODCALLTYPE *GetMediaStream )( 
            IMediaStreamFilter * This,
            /* [in] */ REFMSPID idPurpose,
            /* [out] */ IMediaStream **ppMediaStream);
        
        HRESULT ( STDMETHODCALLTYPE *EnumMediaStreams )( 
            IMediaStreamFilter * This,
            /* [in] */ long Index,
            /* [out] */ IMediaStream **ppMediaStream);
        
        HRESULT ( STDMETHODCALLTYPE *SupportSeeking )( 
            IMediaStreamFilter * This,
            /* [in] */ BOOL bRenderer);
        
        HRESULT ( STDMETHODCALLTYPE *ReferenceTimeToStreamTime )( 
            IMediaStreamFilter * This,
            /* [out][in] */ REFERENCE_TIME *pTime);
        
        HRESULT ( STDMETHODCALLTYPE *GetCurrentStreamTime )( 
            IMediaStreamFilter * This,
            /* [out] */ REFERENCE_TIME *pCurrentStreamTime);
        
        HRESULT ( STDMETHODCALLTYPE *WaitUntil )( 
            IMediaStreamFilter * This,
            /* [in] */ REFERENCE_TIME WaitStreamTime);
        
        HRESULT ( STDMETHODCALLTYPE *Flush )( 
            IMediaStreamFilter * This,
            /* [in] */ BOOL bCancelEOS);
        
        HRESULT ( STDMETHODCALLTYPE *EndOfStream )( 
            IMediaStreamFilter * This);
        
        END_INTERFACE
    } IMediaStreamFilterVtbl;

    interface IMediaStreamFilter
    {
        CONST_VTBL struct IMediaStreamFilterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMediaStreamFilter_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMediaStreamFilter_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMediaStreamFilter_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMediaStreamFilter_GetClassID(This,pClassID)	\
    (This)->lpVtbl -> GetClassID(This,pClassID)


#define IMediaStreamFilter_Stop(This)	\
    (This)->lpVtbl -> Stop(This)

#define IMediaStreamFilter_Pause(This)	\
    (This)->lpVtbl -> Pause(This)

#define IMediaStreamFilter_Run(This,tStart)	\
    (This)->lpVtbl -> Run(This,tStart)

#define IMediaStreamFilter_GetState(This,dwMilliSecsTimeout,State)	\
    (This)->lpVtbl -> GetState(This,dwMilliSecsTimeout,State)

#define IMediaStreamFilter_SetSyncSource(This,pClock)	\
    (This)->lpVtbl -> SetSyncSource(This,pClock)

#define IMediaStreamFilter_GetSyncSource(This,pClock)	\
    (This)->lpVtbl -> GetSyncSource(This,pClock)


#define IMediaStreamFilter_EnumPins(This,ppEnum)	\
    (This)->lpVtbl -> EnumPins(This,ppEnum)

#define IMediaStreamFilter_FindPin(This,Id,ppPin)	\
    (This)->lpVtbl -> FindPin(This,Id,ppPin)

#define IMediaStreamFilter_QueryFilterInfo(This,pInfo)	\
    (This)->lpVtbl -> QueryFilterInfo(This,pInfo)

#define IMediaStreamFilter_JoinFilterGraph(This,pGraph,pName)	\
    (This)->lpVtbl -> JoinFilterGraph(This,pGraph,pName)

#define IMediaStreamFilter_QueryVendorInfo(This,pVendorInfo)	\
    (This)->lpVtbl -> QueryVendorInfo(This,pVendorInfo)


#define IMediaStreamFilter_AddMediaStream(This,pAMMediaStream)	\
    (This)->lpVtbl -> AddMediaStream(This,pAMMediaStream)

#define IMediaStreamFilter_GetMediaStream(This,idPurpose,ppMediaStream)	\
    (This)->lpVtbl -> GetMediaStream(This,idPurpose,ppMediaStream)

#define IMediaStreamFilter_EnumMediaStreams(This,Index,ppMediaStream)	\
    (This)->lpVtbl -> EnumMediaStreams(This,Index,ppMediaStream)

#define IMediaStreamFilter_SupportSeeking(This,bRenderer)	\
    (This)->lpVtbl -> SupportSeeking(This,bRenderer)

#define IMediaStreamFilter_ReferenceTimeToStreamTime(This,pTime)	\
    (This)->lpVtbl -> ReferenceTimeToStreamTime(This,pTime)

#define IMediaStreamFilter_GetCurrentStreamTime(This,pCurrentStreamTime)	\
    (This)->lpVtbl -> GetCurrentStreamTime(This,pCurrentStreamTime)

#define IMediaStreamFilter_WaitUntil(This,WaitStreamTime)	\
    (This)->lpVtbl -> WaitUntil(This,WaitStreamTime)

#define IMediaStreamFilter_Flush(This,bCancelEOS)	\
    (This)->lpVtbl -> Flush(This,bCancelEOS)

#define IMediaStreamFilter_EndOfStream(This)	\
    (This)->lpVtbl -> EndOfStream(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IMediaStreamFilter_AddMediaStream_Proxy( 
    IMediaStreamFilter * This,
    /* [in] */ IAMMediaStream *pAMMediaStream);


void __RPC_STUB IMediaStreamFilter_AddMediaStream_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMediaStreamFilter_GetMediaStream_Proxy( 
    IMediaStreamFilter * This,
    /* [in] */ REFMSPID idPurpose,
    /* [out] */ IMediaStream **ppMediaStream);


void __RPC_STUB IMediaStreamFilter_GetMediaStream_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMediaStreamFilter_EnumMediaStreams_Proxy( 
    IMediaStreamFilter * This,
    /* [in] */ long Index,
    /* [out] */ IMediaStream **ppMediaStream);


void __RPC_STUB IMediaStreamFilter_EnumMediaStreams_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMediaStreamFilter_SupportSeeking_Proxy( 
    IMediaStreamFilter * This,
    /* [in] */ BOOL bRenderer);


void __RPC_STUB IMediaStreamFilter_SupportSeeking_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMediaStreamFilter_ReferenceTimeToStreamTime_Proxy( 
    IMediaStreamFilter * This,
    /* [out][in] */ REFERENCE_TIME *pTime);


void __RPC_STUB IMediaStreamFilter_ReferenceTimeToStreamTime_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMediaStreamFilter_GetCurrentStreamTime_Proxy( 
    IMediaStreamFilter * This,
    /* [out] */ REFERENCE_TIME *pCurrentStreamTime);


void __RPC_STUB IMediaStreamFilter_GetCurrentStreamTime_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMediaStreamFilter_WaitUntil_Proxy( 
    IMediaStreamFilter * This,
    /* [in] */ REFERENCE_TIME WaitStreamTime);


void __RPC_STUB IMediaStreamFilter_WaitUntil_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMediaStreamFilter_Flush_Proxy( 
    IMediaStreamFilter * This,
    /* [in] */ BOOL bCancelEOS);


void __RPC_STUB IMediaStreamFilter_Flush_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMediaStreamFilter_EndOfStream_Proxy( 
    IMediaStreamFilter * This);


void __RPC_STUB IMediaStreamFilter_EndOfStream_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMediaStreamFilter_INTERFACE_DEFINED__ */


#ifndef __IDirectDrawMediaSampleAllocator_INTERFACE_DEFINED__
#define __IDirectDrawMediaSampleAllocator_INTERFACE_DEFINED__

/* interface IDirectDrawMediaSampleAllocator */
/* [unique][uuid][local][object] */ 


EXTERN_C const IID IID_IDirectDrawMediaSampleAllocator;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("AB6B4AFC-F6E4-11d0-900D-00C04FD9189D")
    IDirectDrawMediaSampleAllocator : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetDirectDraw( 
            IDirectDraw **ppDirectDraw) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDirectDrawMediaSampleAllocatorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDirectDrawMediaSampleAllocator * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDirectDrawMediaSampleAllocator * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDirectDrawMediaSampleAllocator * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetDirectDraw )( 
            IDirectDrawMediaSampleAllocator * This,
            IDirectDraw **ppDirectDraw);
        
        END_INTERFACE
    } IDirectDrawMediaSampleAllocatorVtbl;

    interface IDirectDrawMediaSampleAllocator
    {
        CONST_VTBL struct IDirectDrawMediaSampleAllocatorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDirectDrawMediaSampleAllocator_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IDirectDrawMediaSampleAllocator_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IDirectDrawMediaSampleAllocator_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IDirectDrawMediaSampleAllocator_GetDirectDraw(This,ppDirectDraw)	\
    (This)->lpVtbl -> GetDirectDraw(This,ppDirectDraw)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IDirectDrawMediaSampleAllocator_GetDirectDraw_Proxy( 
    IDirectDrawMediaSampleAllocator * This,
    IDirectDraw **ppDirectDraw);


void __RPC_STUB IDirectDrawMediaSampleAllocator_GetDirectDraw_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IDirectDrawMediaSampleAllocator_INTERFACE_DEFINED__ */


#ifndef __IDirectDrawMediaSample_INTERFACE_DEFINED__
#define __IDirectDrawMediaSample_INTERFACE_DEFINED__

/* interface IDirectDrawMediaSample */
/* [unique][uuid][local][object] */ 


EXTERN_C const IID IID_IDirectDrawMediaSample;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("AB6B4AFE-F6E4-11d0-900D-00C04FD9189D")
    IDirectDrawMediaSample : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetSurfaceAndReleaseLock( 
            /* [out] */ IDirectDrawSurface **ppDirectDrawSurface,
            /* [out] */ RECT *pRect) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE LockMediaSamplePointer( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDirectDrawMediaSampleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDirectDrawMediaSample * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDirectDrawMediaSample * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDirectDrawMediaSample * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetSurfaceAndReleaseLock )( 
            IDirectDrawMediaSample * This,
            /* [out] */ IDirectDrawSurface **ppDirectDrawSurface,
            /* [out] */ RECT *pRect);
        
        HRESULT ( STDMETHODCALLTYPE *LockMediaSamplePointer )( 
            IDirectDrawMediaSample * This);
        
        END_INTERFACE
    } IDirectDrawMediaSampleVtbl;

    interface IDirectDrawMediaSample
    {
        CONST_VTBL struct IDirectDrawMediaSampleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDirectDrawMediaSample_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IDirectDrawMediaSample_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IDirectDrawMediaSample_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IDirectDrawMediaSample_GetSurfaceAndReleaseLock(This,ppDirectDrawSurface,pRect)	\
    (This)->lpVtbl -> GetSurfaceAndReleaseLock(This,ppDirectDrawSurface,pRect)

#define IDirectDrawMediaSample_LockMediaSamplePointer(This)	\
    (This)->lpVtbl -> LockMediaSamplePointer(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IDirectDrawMediaSample_GetSurfaceAndReleaseLock_Proxy( 
    IDirectDrawMediaSample * This,
    /* [out] */ IDirectDrawSurface **ppDirectDrawSurface,
    /* [out] */ RECT *pRect);


void __RPC_STUB IDirectDrawMediaSample_GetSurfaceAndReleaseLock_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IDirectDrawMediaSample_LockMediaSamplePointer_Proxy( 
    IDirectDrawMediaSample * This);


void __RPC_STUB IDirectDrawMediaSample_LockMediaSamplePointer_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IDirectDrawMediaSample_INTERFACE_DEFINED__ */


#ifndef __IAMMediaTypeStream_INTERFACE_DEFINED__
#define __IAMMediaTypeStream_INTERFACE_DEFINED__

/* interface IAMMediaTypeStream */
/* [unique][uuid][local][object] */ 


EXTERN_C const IID IID_IAMMediaTypeStream;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("AB6B4AFA-F6E4-11d0-900D-00C04FD9189D")
    IAMMediaTypeStream : public IMediaStream
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetFormat( 
            /* [out] */ AM_MEDIA_TYPE *pMediaType,
            /* [in] */ DWORD dwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetFormat( 
            /* [in] */ AM_MEDIA_TYPE *pMediaType,
            /* [in] */ DWORD dwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateSample( 
            /* [in] */ long lSampleSize,
            /* [in] */ BYTE *pbBuffer,
            /* [in] */ DWORD dwFlags,
            /* [in] */ IUnknown *pUnkOuter,
            /* [out] */ IAMMediaTypeSample **ppAMMediaTypeSample) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetStreamAllocatorRequirements( 
            /* [out] */ ALLOCATOR_PROPERTIES *pProps) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetStreamAllocatorRequirements( 
            /* [in] */ ALLOCATOR_PROPERTIES *pProps) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAMMediaTypeStreamVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAMMediaTypeStream * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAMMediaTypeStream * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAMMediaTypeStream * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMultiMediaStream )( 
            IAMMediaTypeStream * This,
            /* [out] */ IMultiMediaStream **ppMultiMediaStream);
        
        HRESULT ( STDMETHODCALLTYPE *GetInformation )( 
            IAMMediaTypeStream * This,
            /* [out] */ MSPID *pPurposeId,
            /* [out] */ STREAM_TYPE *pType);
        
        HRESULT ( STDMETHODCALLTYPE *SetSameFormat )( 
            IAMMediaTypeStream * This,
            /* [in] */ IMediaStream *pStreamThatHasDesiredFormat,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *AllocateSample )( 
            IAMMediaTypeStream * This,
            /* [in] */ DWORD dwFlags,
            /* [out] */ IStreamSample **ppSample);
        
        HRESULT ( STDMETHODCALLTYPE *CreateSharedSample )( 
            IAMMediaTypeStream * This,
            /* [in] */ IStreamSample *pExistingSample,
            /* [in] */ DWORD dwFlags,
            /* [out] */ IStreamSample **ppNewSample);
        
        HRESULT ( STDMETHODCALLTYPE *SendEndOfStream )( 
            IAMMediaTypeStream * This,
            DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *GetFormat )( 
            IAMMediaTypeStream * This,
            /* [out] */ AM_MEDIA_TYPE *pMediaType,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *SetFormat )( 
            IAMMediaTypeStream * This,
            /* [in] */ AM_MEDIA_TYPE *pMediaType,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *CreateSample )( 
            IAMMediaTypeStream * This,
            /* [in] */ long lSampleSize,
            /* [in] */ BYTE *pbBuffer,
            /* [in] */ DWORD dwFlags,
            /* [in] */ IUnknown *pUnkOuter,
            /* [out] */ IAMMediaTypeSample **ppAMMediaTypeSample);
        
        HRESULT ( STDMETHODCALLTYPE *GetStreamAllocatorRequirements )( 
            IAMMediaTypeStream * This,
            /* [out] */ ALLOCATOR_PROPERTIES *pProps);
        
        HRESULT ( STDMETHODCALLTYPE *SetStreamAllocatorRequirements )( 
            IAMMediaTypeStream * This,
            /* [in] */ ALLOCATOR_PROPERTIES *pProps);
        
        END_INTERFACE
    } IAMMediaTypeStreamVtbl;

    interface IAMMediaTypeStream
    {
        CONST_VTBL struct IAMMediaTypeStreamVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAMMediaTypeStream_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAMMediaTypeStream_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAMMediaTypeStream_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAMMediaTypeStream_GetMultiMediaStream(This,ppMultiMediaStream)	\
    (This)->lpVtbl -> GetMultiMediaStream(This,ppMultiMediaStream)

#define IAMMediaTypeStream_GetInformation(This,pPurposeId,pType)	\
    (This)->lpVtbl -> GetInformation(This,pPurposeId,pType)

#define IAMMediaTypeStream_SetSameFormat(This,pStreamThatHasDesiredFormat,dwFlags)	\
    (This)->lpVtbl -> SetSameFormat(This,pStreamThatHasDesiredFormat,dwFlags)

#define IAMMediaTypeStream_AllocateSample(This,dwFlags,ppSample)	\
    (This)->lpVtbl -> AllocateSample(This,dwFlags,ppSample)

#define IAMMediaTypeStream_CreateSharedSample(This,pExistingSample,dwFlags,ppNewSample)	\
    (This)->lpVtbl -> CreateSharedSample(This,pExistingSample,dwFlags,ppNewSample)

#define IAMMediaTypeStream_SendEndOfStream(This,dwFlags)	\
    (This)->lpVtbl -> SendEndOfStream(This,dwFlags)


#define IAMMediaTypeStream_GetFormat(This,pMediaType,dwFlags)	\
    (This)->lpVtbl -> GetFormat(This,pMediaType,dwFlags)

#define IAMMediaTypeStream_SetFormat(This,pMediaType,dwFlags)	\
    (This)->lpVtbl -> SetFormat(This,pMediaType,dwFlags)

#define IAMMediaTypeStream_CreateSample(This,lSampleSize,pbBuffer,dwFlags,pUnkOuter,ppAMMediaTypeSample)	\
    (This)->lpVtbl -> CreateSample(This,lSampleSize,pbBuffer,dwFlags,pUnkOuter,ppAMMediaTypeSample)

#define IAMMediaTypeStream_GetStreamAllocatorRequirements(This,pProps)	\
    (This)->lpVtbl -> GetStreamAllocatorRequirements(This,pProps)

#define IAMMediaTypeStream_SetStreamAllocatorRequirements(This,pProps)	\
    (This)->lpVtbl -> SetStreamAllocatorRequirements(This,pProps)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAMMediaTypeStream_GetFormat_Proxy( 
    IAMMediaTypeStream * This,
    /* [out] */ AM_MEDIA_TYPE *pMediaType,
    /* [in] */ DWORD dwFlags);


void __RPC_STUB IAMMediaTypeStream_GetFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAMMediaTypeStream_SetFormat_Proxy( 
    IAMMediaTypeStream * This,
    /* [in] */ AM_MEDIA_TYPE *pMediaType,
    /* [in] */ DWORD dwFlags);


void __RPC_STUB IAMMediaTypeStream_SetFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAMMediaTypeStream_CreateSample_Proxy( 
    IAMMediaTypeStream * This,
    /* [in] */ long lSampleSize,
    /* [in] */ BYTE *pbBuffer,
    /* [in] */ DWORD dwFlags,
    /* [in] */ IUnknown *pUnkOuter,
    /* [out] */ IAMMediaTypeSample **ppAMMediaTypeSample);


void __RPC_STUB IAMMediaTypeStream_CreateSample_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAMMediaTypeStream_GetStreamAllocatorRequirements_Proxy( 
    IAMMediaTypeStream * This,
    /* [out] */ ALLOCATOR_PROPERTIES *pProps);


void __RPC_STUB IAMMediaTypeStream_GetStreamAllocatorRequirements_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAMMediaTypeStream_SetStreamAllocatorRequirements_Proxy( 
    IAMMediaTypeStream * This,
    /* [in] */ ALLOCATOR_PROPERTIES *pProps);


void __RPC_STUB IAMMediaTypeStream_SetStreamAllocatorRequirements_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAMMediaTypeStream_INTERFACE_DEFINED__ */


#ifndef __IAMMediaTypeSample_INTERFACE_DEFINED__
#define __IAMMediaTypeSample_INTERFACE_DEFINED__

/* interface IAMMediaTypeSample */
/* [unique][uuid][local][object] */ 


EXTERN_C const IID IID_IAMMediaTypeSample;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("AB6B4AFB-F6E4-11d0-900D-00C04FD9189D")
    IAMMediaTypeSample : public IStreamSample
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetPointer( 
            /* [in] */ BYTE *pBuffer,
            /* [in] */ long lSize) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPointer( 
            /* [out] */ BYTE **ppBuffer) = 0;
        
        virtual long STDMETHODCALLTYPE GetSize( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTime( 
            /* [out] */ REFERENCE_TIME *pTimeStart,
            /* [out] */ REFERENCE_TIME *pTimeEnd) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetTime( 
            /* [in] */ REFERENCE_TIME *pTimeStart,
            /* [in] */ REFERENCE_TIME *pTimeEnd) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsSyncPoint( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetSyncPoint( 
            BOOL bIsSyncPoint) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsPreroll( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetPreroll( 
            BOOL bIsPreroll) = 0;
        
        virtual long STDMETHODCALLTYPE GetActualDataLength( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetActualDataLength( 
            long __MIDL_0017) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMediaType( 
            AM_MEDIA_TYPE **ppMediaType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetMediaType( 
            AM_MEDIA_TYPE *pMediaType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsDiscontinuity( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetDiscontinuity( 
            BOOL bDiscontinuity) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMediaTime( 
            /* [out] */ LONGLONG *pTimeStart,
            /* [out] */ LONGLONG *pTimeEnd) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetMediaTime( 
            /* [in] */ LONGLONG *pTimeStart,
            /* [in] */ LONGLONG *pTimeEnd) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAMMediaTypeSampleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAMMediaTypeSample * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAMMediaTypeSample * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAMMediaTypeSample * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMediaStream )( 
            IAMMediaTypeSample * This,
            /* [in] */ IMediaStream **ppMediaStream);
        
        HRESULT ( STDMETHODCALLTYPE *GetSampleTimes )( 
            IAMMediaTypeSample * This,
            /* [out] */ STREAM_TIME *pStartTime,
            /* [out] */ STREAM_TIME *pEndTime,
            /* [out] */ STREAM_TIME *pCurrentTime);
        
        HRESULT ( STDMETHODCALLTYPE *SetSampleTimes )( 
            IAMMediaTypeSample * This,
            /* [in] */ const STREAM_TIME *pStartTime,
            /* [in] */ const STREAM_TIME *pEndTime);
        
        HRESULT ( STDMETHODCALLTYPE *Update )( 
            IAMMediaTypeSample * This,
            /* [in] */ DWORD dwFlags,
            /* [in] */ HANDLE hEvent,
            /* [in] */ PAPCFUNC pfnAPC,
            /* [in] */ DWORD_PTR dwAPCData);
        
        HRESULT ( STDMETHODCALLTYPE *CompletionStatus )( 
            IAMMediaTypeSample * This,
            /* [in] */ DWORD dwFlags,
            /* [in] */ DWORD dwMilliseconds);
        
        HRESULT ( STDMETHODCALLTYPE *SetPointer )( 
            IAMMediaTypeSample * This,
            /* [in] */ BYTE *pBuffer,
            /* [in] */ long lSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetPointer )( 
            IAMMediaTypeSample * This,
            /* [out] */ BYTE **ppBuffer);
        
        long ( STDMETHODCALLTYPE *GetSize )( 
            IAMMediaTypeSample * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTime )( 
            IAMMediaTypeSample * This,
            /* [out] */ REFERENCE_TIME *pTimeStart,
            /* [out] */ REFERENCE_TIME *pTimeEnd);
        
        HRESULT ( STDMETHODCALLTYPE *SetTime )( 
            IAMMediaTypeSample * This,
            /* [in] */ REFERENCE_TIME *pTimeStart,
            /* [in] */ REFERENCE_TIME *pTimeEnd);
        
        HRESULT ( STDMETHODCALLTYPE *IsSyncPoint )( 
            IAMMediaTypeSample * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetSyncPoint )( 
            IAMMediaTypeSample * This,
            BOOL bIsSyncPoint);
        
        HRESULT ( STDMETHODCALLTYPE *IsPreroll )( 
            IAMMediaTypeSample * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetPreroll )( 
            IAMMediaTypeSample * This,
            BOOL bIsPreroll);
        
        long ( STDMETHODCALLTYPE *GetActualDataLength )( 
            IAMMediaTypeSample * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetActualDataLength )( 
            IAMMediaTypeSample * This,
            long __MIDL_0017);
        
        HRESULT ( STDMETHODCALLTYPE *GetMediaType )( 
            IAMMediaTypeSample * This,
            AM_MEDIA_TYPE **ppMediaType);
        
        HRESULT ( STDMETHODCALLTYPE *SetMediaType )( 
            IAMMediaTypeSample * This,
            AM_MEDIA_TYPE *pMediaType);
        
        HRESULT ( STDMETHODCALLTYPE *IsDiscontinuity )( 
            IAMMediaTypeSample * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetDiscontinuity )( 
            IAMMediaTypeSample * This,
            BOOL bDiscontinuity);
        
        HRESULT ( STDMETHODCALLTYPE *GetMediaTime )( 
            IAMMediaTypeSample * This,
            /* [out] */ LONGLONG *pTimeStart,
            /* [out] */ LONGLONG *pTimeEnd);
        
        HRESULT ( STDMETHODCALLTYPE *SetMediaTime )( 
            IAMMediaTypeSample * This,
            /* [in] */ LONGLONG *pTimeStart,
            /* [in] */ LONGLONG *pTimeEnd);
        
        END_INTERFACE
    } IAMMediaTypeSampleVtbl;

    interface IAMMediaTypeSample
    {
        CONST_VTBL struct IAMMediaTypeSampleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAMMediaTypeSample_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAMMediaTypeSample_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAMMediaTypeSample_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAMMediaTypeSample_GetMediaStream(This,ppMediaStream)	\
    (This)->lpVtbl -> GetMediaStream(This,ppMediaStream)

#define IAMMediaTypeSample_GetSampleTimes(This,pStartTime,pEndTime,pCurrentTime)	\
    (This)->lpVtbl -> GetSampleTimes(This,pStartTime,pEndTime,pCurrentTime)

#define IAMMediaTypeSample_SetSampleTimes(This,pStartTime,pEndTime)	\
    (This)->lpVtbl -> SetSampleTimes(This,pStartTime,pEndTime)

#define IAMMediaTypeSample_Update(This,dwFlags,hEvent,pfnAPC,dwAPCData)	\
    (This)->lpVtbl -> Update(This,dwFlags,hEvent,pfnAPC,dwAPCData)

#define IAMMediaTypeSample_CompletionStatus(This,dwFlags,dwMilliseconds)	\
    (This)->lpVtbl -> CompletionStatus(This,dwFlags,dwMilliseconds)


#define IAMMediaTypeSample_SetPointer(This,pBuffer,lSize)	\
    (This)->lpVtbl -> SetPointer(This,pBuffer,lSize)

#define IAMMediaTypeSample_GetPointer(This,ppBuffer)	\
    (This)->lpVtbl -> GetPointer(This,ppBuffer)

#define IAMMediaTypeSample_GetSize(This)	\
    (This)->lpVtbl -> GetSize(This)

#define IAMMediaTypeSample_GetTime(This,pTimeStart,pTimeEnd)	\
    (This)->lpVtbl -> GetTime(This,pTimeStart,pTimeEnd)

#define IAMMediaTypeSample_SetTime(This,pTimeStart,pTimeEnd)	\
    (This)->lpVtbl -> SetTime(This,pTimeStart,pTimeEnd)

#define IAMMediaTypeSample_IsSyncPoint(This)	\
    (This)->lpVtbl -> IsSyncPoint(This)

#define IAMMediaTypeSample_SetSyncPoint(This,bIsSyncPoint)	\
    (This)->lpVtbl -> SetSyncPoint(This,bIsSyncPoint)

#define IAMMediaTypeSample_IsPreroll(This)	\
    (This)->lpVtbl -> IsPreroll(This)

#define IAMMediaTypeSample_SetPreroll(This,bIsPreroll)	\
    (This)->lpVtbl -> SetPreroll(This,bIsPreroll)

#define IAMMediaTypeSample_GetActualDataLength(This)	\
    (This)->lpVtbl -> GetActualDataLength(This)

#define IAMMediaTypeSample_SetActualDataLength(This,__MIDL_0017)	\
    (This)->lpVtbl -> SetActualDataLength(This,__MIDL_0017)

#define IAMMediaTypeSample_GetMediaType(This,ppMediaType)	\
    (This)->lpVtbl -> GetMediaType(This,ppMediaType)

#define IAMMediaTypeSample_SetMediaType(This,pMediaType)	\
    (This)->lpVtbl -> SetMediaType(This,pMediaType)

#define IAMMediaTypeSample_IsDiscontinuity(This)	\
    (This)->lpVtbl -> IsDiscontinuity(This)

#define IAMMediaTypeSample_SetDiscontinuity(This,bDiscontinuity)	\
    (This)->lpVtbl -> SetDiscontinuity(This,bDiscontinuity)

#define IAMMediaTypeSample_GetMediaTime(This,pTimeStart,pTimeEnd)	\
    (This)->lpVtbl -> GetMediaTime(This,pTimeStart,pTimeEnd)

#define IAMMediaTypeSample_SetMediaTime(This,pTimeStart,pTimeEnd)	\
    (This)->lpVtbl -> SetMediaTime(This,pTimeStart,pTimeEnd)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAMMediaTypeSample_SetPointer_Proxy( 
    IAMMediaTypeSample * This,
    /* [in] */ BYTE *pBuffer,
    /* [in] */ long lSize);


void __RPC_STUB IAMMediaTypeSample_SetPointer_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAMMediaTypeSample_GetPointer_Proxy( 
    IAMMediaTypeSample * This,
    /* [out] */ BYTE **ppBuffer);


void __RPC_STUB IAMMediaTypeSample_GetPointer_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


long STDMETHODCALLTYPE IAMMediaTypeSample_GetSize_Proxy( 
    IAMMediaTypeSample * This);


void __RPC_STUB IAMMediaTypeSample_GetSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAMMediaTypeSample_GetTime_Proxy( 
    IAMMediaTypeSample * This,
    /* [out] */ REFERENCE_TIME *pTimeStart,
    /* [out] */ REFERENCE_TIME *pTimeEnd);


void __RPC_STUB IAMMediaTypeSample_GetTime_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAMMediaTypeSample_SetTime_Proxy( 
    IAMMediaTypeSample * This,
    /* [in] */ REFERENCE_TIME *pTimeStart,
    /* [in] */ REFERENCE_TIME *pTimeEnd);


void __RPC_STUB IAMMediaTypeSample_SetTime_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAMMediaTypeSample_IsSyncPoint_Proxy( 
    IAMMediaTypeSample * This);


void __RPC_STUB IAMMediaTypeSample_IsSyncPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAMMediaTypeSample_SetSyncPoint_Proxy( 
    IAMMediaTypeSample * This,
    BOOL bIsSyncPoint);


void __RPC_STUB IAMMediaTypeSample_SetSyncPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAMMediaTypeSample_IsPreroll_Proxy( 
    IAMMediaTypeSample * This);


void __RPC_STUB IAMMediaTypeSample_IsPreroll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAMMediaTypeSample_SetPreroll_Proxy( 
    IAMMediaTypeSample * This,
    BOOL bIsPreroll);


void __RPC_STUB IAMMediaTypeSample_SetPreroll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


long STDMETHODCALLTYPE IAMMediaTypeSample_GetActualDataLength_Proxy( 
    IAMMediaTypeSample * This);


void __RPC_STUB IAMMediaTypeSample_GetActualDataLength_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAMMediaTypeSample_SetActualDataLength_Proxy( 
    IAMMediaTypeSample * This,
    long __MIDL_0017);


void __RPC_STUB IAMMediaTypeSample_SetActualDataLength_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAMMediaTypeSample_GetMediaType_Proxy( 
    IAMMediaTypeSample * This,
    AM_MEDIA_TYPE **ppMediaType);


void __RPC_STUB IAMMediaTypeSample_GetMediaType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAMMediaTypeSample_SetMediaType_Proxy( 
    IAMMediaTypeSample * This,
    AM_MEDIA_TYPE *pMediaType);


void __RPC_STUB IAMMediaTypeSample_SetMediaType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAMMediaTypeSample_IsDiscontinuity_Proxy( 
    IAMMediaTypeSample * This);


void __RPC_STUB IAMMediaTypeSample_IsDiscontinuity_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAMMediaTypeSample_SetDiscontinuity_Proxy( 
    IAMMediaTypeSample * This,
    BOOL bDiscontinuity);


void __RPC_STUB IAMMediaTypeSample_SetDiscontinuity_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAMMediaTypeSample_GetMediaTime_Proxy( 
    IAMMediaTypeSample * This,
    /* [out] */ LONGLONG *pTimeStart,
    /* [out] */ LONGLONG *pTimeEnd);


void __RPC_STUB IAMMediaTypeSample_GetMediaTime_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAMMediaTypeSample_SetMediaTime_Proxy( 
    IAMMediaTypeSample * This,
    /* [in] */ LONGLONG *pTimeStart,
    /* [in] */ LONGLONG *pTimeEnd);


void __RPC_STUB IAMMediaTypeSample_SetMediaTime_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAMMediaTypeSample_INTERFACE_DEFINED__ */



#ifndef __DirectShowStreamLib_LIBRARY_DEFINED__
#define __DirectShowStreamLib_LIBRARY_DEFINED__

/* library DirectShowStreamLib */
/* [helpstring][version][uuid] */ 


EXTERN_C const IID LIBID_DirectShowStreamLib;

EXTERN_C const CLSID CLSID_AMMultiMediaStream;

#ifdef __cplusplus

class DECLSPEC_UUID("49c47ce5-9ba4-11d0-8212-00c04fc32c45")
AMMultiMediaStream;
#endif
#endif /* __DirectShowStreamLib_LIBRARY_DEFINED__ */

/* interface __MIDL_itf_amstream_0409 */
/* [local] */ 

#ifndef __cplusplus
EXTERN_C const CLSID CLSID_AMMultiMediaStream;
#endif
DEFINE_GUID(CLSID_AMDirectDrawStream, /* 49c47ce4-9ba4-11d0-8212-00c04fc32c45 */
0x49c47ce4, 0x9ba4, 0x11d0, 0x82, 0x12, 0x00, 0xc0, 0x4f, 0xc3, 0x2c, 0x45);
DEFINE_GUID(CLSID_AMAudioStream, /* 8496e040-af4c-11d0-8212-00c04fc32c45 */
0x8496e040, 0xaf4c, 0x11d0, 0x82, 0x12, 0x00, 0xc0, 0x4f, 0xc3, 0x2c, 0x45);
DEFINE_GUID(CLSID_AMAudioData, /* f2468580-af8a-11d0-8212-00c04fc32c45 */
0xf2468580, 0xaf8a, 0x11d0, 0x82, 0x12, 0x00, 0xc0, 0x4f, 0xc3, 0x2c, 0x45);
DEFINE_GUID(CLSID_AMMediaTypeStream, /* CF0F2F7C-F7BF-11d0-900D-00C04FD9189D */
0xcf0f2f7c, 0xf7bf, 0x11d0, 0x90, 0xd, 0x0, 0xc0, 0x4f, 0xd9, 0x18, 0x9d);


extern RPC_IF_HANDLE __MIDL_itf_amstream_0409_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_amstream_0409_v0_0_s_ifspec;

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     unsigned long *, unsigned long            , BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal(  unsigned long *, unsigned char *, BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal(unsigned long *, unsigned char *, BSTR * ); 
void                      __RPC_USER  BSTR_UserFree(     unsigned long *, BSTR * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\vc7addon\devtools\common\win32sdk\include\appavcap.h ===
//****************************************************************************
//  File:       APPAVCAP.H
//  Content:    
//     Network audio/video application capability interface. Provides
//     data structures for adding, removing, enumerating, prioritizing,
//     and enabling/disabling codecs independently for send/receive.
//
//  Copyright (c) Microsoft Corporation 1999, All rights reserved
//
// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF 
// ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO 
// THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A 
// PARTICULAR PURPOSE.
//****************************************************************************


#ifndef _APPAVCAP_H
#define _APPAVCAP_H

#include <mmreg.h>
#include <msacm.h>

#include <pshpack8.h> /* Assume 8 byte packing throughout */

// For use as dimension for variable size arrays
#define VARIABLE_DIM 1

// CPU utilization numbers for NetMeeting-provided codecs
#define LNH_48_CPU 97
#define LNH_8_CPU  47
#define LNH_12_CPU 48
#define LNH_16_CPU 49
#define MS_G723_CPU 70
#define CCITT_A_CPU 24
#define	CCITT_U_CPU 25


// AUDIO_FORMAT_ID is an index into an array of AUDCAPS structures
typedef DWORD AUDIO_FORMAT_ID;
#define INVALID_AUDIO_FORMAT 0xffffffff
typedef DWORD MEDIA_FORMAT_ID;
#define INVALID_MEDIA_FORMAT 0xffffffff
// VIDEO_FORMAT_ID is an index into an array of VIDCAPS structures
typedef DWORD VIDEO_FORMAT_ID;
#define INVALID_VIDEO_FORMAT 0xffffffff

/*
 *  @doc  EXTERNAL DATASTRUC
 *
 *	AUDIO capabilities info structure
 *
 *	@struct AUDCAP_INFO | AUDIO capabilities info structure.
 *	Use for both input and output when calling capabilties APIs.
 *	The fields are input-only, output-only or input/output depending on the API used.
 *	Behavior is undefined if these are altered.
 */

// basic audcap structure
typedef struct BasicAudCapInfo
{
	WORD wFormatTag;			// @field The ACM format tag
	AUDIO_FORMAT_ID	Id;			// @field (OUTPUT only) The local id (a.k.a. *Handle*) of this capability entry
	char szFormat[ACMFORMATDETAILS_FORMAT_CHARS];	// @field (OUTPUT only) Descriptive string of
													// the format, e.g. "Microsoft GSM 6.10"
	UINT uMaxBitrate;			// @field (OUTPUT only) Worst case bitrate
	UINT uAvgBitrate;			// @field The average bitrate for this codec
	WORD wCPUUtilizationEncode;	// @field % of Pentium 90Mhz needed for compress
	WORD wCPUUtilizationDecode;	// @field % of Pentium 90Mhz needed for decompress
	
	BOOL bSendEnabled;			// @field OK to use this format for sending
	BOOL bRecvEnabled;			// @field OK to use this format for receiving
	WORD wSortIndex;			// @field The ordered position of this entry
								// in the capability table. Can be used as input only 
								// in ReorderFormats
}BASIC_AUDCAP_INFO, *PBASIC_AUDCAP_INFO, AUDCAP_INFO, *PAUDCAP_INFO;

/*
 *	@struct AUDCAP_INFO_LIST | List of AUDCAP_INFO structures
 */
typedef struct _audcapinfolist
{
	ULONG	cFormats;			// @field Number of AUDCAP_INFO structures in this list
	AUDCAP_INFO	aFormats[VARIABLE_DIM];	// @field cFormats AUDCAP_INFO structures
} AUDCAP_INFO_LIST, *PAUDCAP_INFO_LIST;

/*
 *	@enum VIDEO_SIZES | Enumeration values for the three video sizes supported by NetMeeting
 */
typedef enum
{
	Small = 0,	// @emem Small size video
	Medium,		// @emem Medium size video
	Large		// @emem Large size video
} VIDEO_SIZES;

/*
 *	VIDEO capabilities info structure
 *
 *	@struct VIDCAP_INFO | VIDEO capabilities info structure.
 *	Use for both input and output when calling capabilties APIs.
 *	The fields are input-only, output-only or input/output depending on the API used.
 *	Behavior is undefined if these are altered.
 */

// VIDCAP_INFO structure
typedef struct BasicVidCapInfo
{
	// format identification
	DWORD dwFormatTag;			// @field The format tag of this format
	VIDEO_FORMAT_ID	Id;			// @field (OUTPUT only) The local id (a.k.a. *Handle*) of this capability entry
	char szFormat[ACMFORMATDETAILS_FORMAT_CHARS];	// @field (OUTPUT only) Descriptive string of,
													// the formate.g. "Microsoft H.263"
	// NetMeeting specific info
	WORD wCPUUtilizationEncode;	// @field % of Pentium 90Mhz needed for compress
	WORD wCPUUtilizationDecode;	// @field % of Pentium 90Mhz needed for decompress
	BOOL bSendEnabled;			// @field OK to use this format for sending
	BOOL bRecvEnabled;			// @field OK to use this format for receiving
	WORD wSortIndex;			// @field (OUTPUT only) The ordered position of this entry
								// in the capability table.

	// video format details
	VIDEO_SIZES enumVideoSize;	// @field The video size for this format. Different video sizes for 
								// the same formats must be added as separate formats 
    BITMAPINFOHEADER bih;		// @field The BITMAPINFOHEADER sturcture for the video 
								// size in enumVideosize
	UINT uFrameRate;			// @field Number of frames per second
	DWORD dwBitsPerSample;		// @field number of bits per sample for this format. Must
								// match the value in bih.biBitCount
	UINT uAvgBitrate;			// @field The average bitrate for this codec
	UINT uMaxBitrate;			// (OUTPUT only) Worst case bitrate
}BASIC_VIDCAP_INFO, *PBASIC_VIDCAP_INFO, VIDCAP_INFO, *PVIDCAP_INFO;


/*
 *	@struct VIDCAP_INFO_LIST | List of VIDCAP_INFO structures
 */
typedef struct _vidcapinfolist
{
	ULONG	cFormats;// @field Number of VIDCAP_INFO structures in this list
	VIDCAP_INFO	aFormats[VARIABLE_DIM];	// @field cFormats VIDCAP_INFO structures
} VIDCAP_INFO_LIST, *PVIDCAP_INFO_LIST;

#include <poppack.h> /* End byte packing */


#endif	//#ifndef _APPAVCAP_H
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\vc7addon\devtools\common\win32sdk\include\Amparse.h ===
//------------------------------------------------------------------------------
// File: AMParse.h
//
// Desc: Interface to the parser to get current time.  This is useful for
//       multifile playback.
//
// Copyright (c) 1996 - 2000, Microsoft Corporation.  All rights reserved.
//------------------------------------------------------------------------------


#ifndef __AMPARSE__
#define __AMPARSE__

#ifdef __cplusplus
extern "C" {
#endif // __cplusplus


DEFINE_GUID(IID_IAMParse,
0xc47a3420, 0x005c, 0x11d2, 0x90, 0x38, 0x00, 0xa0, 0xc9, 0x69, 0x72, 0x98);

//
//  Parser interface - supported by MPEG-2 splitter filter
//
DECLARE_INTERFACE_(IAMParse, IUnknown) {
    STDMETHOD(GetParseTime) (THIS_
                             REFERENCE_TIME *prtCurrent
                            ) PURE;
    STDMETHOD(SetParseTime) (THIS_
                             REFERENCE_TIME rtCurrent
                            ) PURE;
    STDMETHOD(Flush) (THIS) PURE;
};

#ifdef __cplusplus
}
#endif // __cplusplus
#endif // __AMPARSE__
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\vc7addon\devtools\common\win32sdk\include\appccfg.h ===
/*****************************************************************************/
/*                                                                           */
/* Header: appccfg.h                                                         */
/*                                                                           */
/* (C) COPYRIGHT Data Connection Ltd 1993 - 2000                             */
/* Copyright (c) Microsoft Corporation.  All rights reserved.                */
/*                                                                           */
/* Header for appccfg.c                                                      */
/*                                                                           */
/*****************************************************************************/

/*****************************************************************************/
/* If appccfg.h not already included then define APPCCFG_INCLUDED to avoid   */
/* it being included again.                                                  */
/*****************************************************************************/

#ifndef APPCCFG_INCLUDED
#define APPCCFG_INCLUDED

#ifdef __cplusplus
extern "C" {
#endif

/*****************************************************************************/
/*                                                                           */
/* HANDLE WINAPI GetAppcConfig( HANDLE hWnd, LPSTR pLocalLu, LPSTR pMode,    */
/*                              LPINT pNumRemLu, INT iMaxRemLu, LPSTR pRemLu,*/
/*                              LPINT pAsyncRetCode)                         */
/*                                                                           */
/* Parameters                                                                */
/* ----------                                                                */
/*                                                                           */
/*  IN      hWnd      Handle of window to which completion is to be posted.  */
/*                    If NULL no completion message will be posted but       */
/*                    pAsyncRetCode must be valid. If hWnd is non-NULL it    */
/*                    must be valid & pAsyncRetCode must be NULL.            */
/*                                                                           */
/*  IN      pLocalLU  Pointer to max 8 byte ASCII local LU name (should be 8 */
/*                    ASCII blanks to request info on Remote LUs partnered   */
/*                    to the default Local LU for this user. If none is      */
/*                    configured then APPC_CFG_ERROR_NO_DEFAULT_LOCAL will   */
/*                    be returned in the LPARAM).                            */
/*                                                                           */
/*  IN      pMode     Pointer to max 8 byte ASCII mode name (usually         */
/*                    "QPCSUPP" for a 5250 emulator)                         */
/*                                                                           */
/*  IN/OUT  pNumRemLu Pointer to int to receive the number of Remote LUs     */
/*                    available. (If more than MaxRemLu then only the first  */
/*                    MaxRemLu of them will have been copied)                */
/*                                                                           */
/*  IN      iMaxRemLu Int giving the max number of Remote LU names the       */
/*                    buffer can hold. (size of buffer in bytes / 9)         */
/*                                                                           */
/*  IN/OUT  pRemLu    Pointer to buffer to receive Remote LUs                */
/*                    The data will be returned as an array of max 8 byte    */
/*                    ASCII strings each followed by a terminating NULL      */
/*                                                                           */
/*  IN/OUT  pAsyncRetCode                                                    */
/*                    Optional pointer to int to take the RetCode on         */
/*                    completion of the async part of the call. Only         */
/*                    required if hWnd is NULL. If the request is not        */
/*                    accepted the value in AsyncRetCode is undefined.       */
/*                    It the request was accepted then until the request is  */
/*                    completed AsyncRetCode will contain the value          */
/*                    APPC_CFG_PENDING. Final values are as in the LPARAM of */
/*                    the completion message. If hWnd != NULL, pAsyncRetCode */
/*                    must be NULL.                                          */
/*                                                                           */
/*                                                                           */
/* Returns                                                                   */
/* -------                                                                   */
/*                                                                           */
/* On Call                                                                   */
/* -------                                                                   */
/*  HANDLE  This VerbId will be returned in the WPARAM of any completion     */
/*          message. (VerbId & APPC_CFG_SUCCESS) evaluates to TRUE if the    */
/*          request was accepted.                                            */
/*                                                                           */
/*          If the above expression evaluates to FALSE then VerbId will      */
/*          have one of the following values:                                */
/*                                                                           */
/*             APPC_CFG_ERROR_NO_APPC_INIT                                   */
/*             APPC_CFG_ERROR_INVALID_HWND                                   */
/*             APPC_CFG_ERROR_BAD_POINTER                                    */
/*             APPC_CFG_ERROR_UNCLEAR_COMPLETION_MODE                        */
/*             APPC_CFG_ERROR_TOO_MANY_REQUESTS                              */
/*             APPC_CFG_ERROR_GENERAL_FAILURE                                */
/*                                                                           */
/*                                                                           */
/*                                                                           */
/* On Receipt of completion message                                          */
/* --------------------------------                                          */
/*  MSG     Equal to return from RegisterWindowMessage with                  */
/*          WIN_APPC_CFG_COMPLETION_MSG passed as message name.              */
/*                                                                           */
/*  WPARAM  VerbId returned on the initiating call.                          */
/*                                                                           */
/*  LPARAM  Retcode which will be one of the following:                      */
/*                                                                           */
/*             APPC_CFG_SUCCESS_NO_DEFAULT_REMOTE                            */
/*             APPC_CFG_SUCCESS_DEFAULT_REMOTE                               */
/*                                                                           */
/*             APPC_CFG_ERROR_NO_DEFAULT_LOCAL_LU                            */
/*             APPC_CFG_ERROR_BAD_LOCAL_LU                                   */
/*             APPC_CFG_ERROR_GENERAL_FAILURE                                */
/*                                                                           */
/*  (Retcode & APPC_CFG_ERROR)   evaluates to TRUE for an error retcode      */
/*  (Retcode & APPC_CFG_SUCCESS) evaluates to TRUE for a success retcode     */
/*                                                                           */
/*                                                                           */
/*                                                                           */
/* Comments                                                                  */
/* --------                                                                  */
/*  This call attempts to get all the remote systems (partner LUs) which can */
/*  be accessed by the logged on user with the given local LU and mode name. */
/*  The final retcode also indicates if there is a default remote system     */
/*  configured.                                                              */
/*                                                                           */
/*  Completion will either be signified by the posting of a completion       */
/*  message or by the change of *pAsyncRetCode to a value other than         */
/*  APPC_CFG_PENDING. The latter mechanism is intended for use by console    */
/*  apps with no windows or on non-Windows platforms. Completion can then    */
/*  be tested by code similar to the below:                                  */
/*                                                                           */
/*                while (*pAsyncRetCode == APPC_CFG_PENDING)                 */
/*                {                                                          */
/*                  sleep(250);                                              */
/*                }                                                          */
/*                                                                           */
/*  Note that one of hWnd & pAsyncRetCode must be NULL and the other valid.  */
/*  If this isn't the case APPC_CFG_ERROR_UNCLEAR_COMPLETION_MODE will be    */
/*  returned.                                                                */
/*                                                                           */
/*  All strings are null terminated and are NOT space padded                 */
/*                                                                           */
/*  If the buffer is too short, the reported number of remote LU's available */
/*  MAY be GREATER than the actual number. (This will only be the case where */
/*  a particular Local Lu is configured at multiple nodes, and has the       */
/*  remote on multiple nodes.) When the call is made again which a buffer    */
/*  large enough to take all the remote LU, the reported number will be      */
/*  correct.                                                                 */
/*                                                                           */
/*  ALL MEMORY TO WHICH POINTERS ARE PASSED MUST REMAIN VALID TILL A         */
/*  COMPLETION MESSAGE IS RECEIVED                                           */
/*                                                                           */
/*  WinAPPCStartup MUST be called first                                      */
/*                                                                           */
/*****************************************************************************/
/*****************************************************************************/
/* Entry point prototype                                                     */
/*****************************************************************************/
extern HANDLE WINAPI GetAppcConfig( HANDLE hWnd, LPSTR pLocalLu, LPSTR pMode,
                                 LPINT pNumRemLu, INT iMaxRemLu, LPSTR pRemLu,
                                 LPINT pAsyncRetCode);

/*****************************************************************************/
/* Completion Message Name                                                   */
/*****************************************************************************/
#define  WIN_APPC_CFG_COMPLETION_MSG "WinAppcCfg"

/*****************************************************************************/
/* Test values                                                               */
/*****************************************************************************/
#define  APPC_CFG_SUCCESS                      0x1000
#define  APPC_CFG_ERROR                        0x2000
#define  APPC_CFG_PENDING                      0xFFFF

/*****************************************************************************/
/* Retcodes                                                                  */
/*****************************************************************************/
#define  APPC_CFG_SUCCESS_NO_DEFAULT_REMOTE     (APPC_CFG_SUCCESS + 1)
#define  APPC_CFG_SUCCESS_DEFAULT_REMOTE        (APPC_CFG_SUCCESS + 2)
#define  APPC_CFG_SUCCESS_NAMES                 (APPC_CFG_SUCCESS + 3)
#define  APPC_CFG_SUCCESS_NAMES_INCOMPLETE      (APPC_CFG_SUCCESS + 2)

#define  APPC_CFG_ERROR_NO_DEFAULT_LOCAL_LU     (APPC_CFG_ERROR + 1)
#define  APPC_CFG_ERROR_BAD_LOCAL_LU            (APPC_CFG_ERROR + 2)
#define  APPC_CFG_ERROR_GENERAL_FAILURE         (APPC_CFG_ERROR + 3)
#define  APPC_CFG_ERROR_INVALID_HWND            (APPC_CFG_ERROR + 4)
#define  APPC_CFG_ERROR_BAD_POINTER             (APPC_CFG_ERROR + 5)
#define  APPC_CFG_ERROR_TOO_MANY_REQUESTS       (APPC_CFG_ERROR + 6)
#define  APPC_CFG_ERROR_NO_APPC_INIT            (APPC_CFG_ERROR + 7)
#define  APPC_CFG_ERROR_UNCLEAR_COMPLETION_MODE (APPC_CFG_ERROR + 8)
#define  APPC_CFG_ERROR_BAD_PARAMETER           (APPC_CFG_ERROR + 10)



/*****************************************************************************/
/*                                                                           */
/* HANDLE WINAPI GetAppcConfigEx( HANDLE hWnd, LPSTR pAssociate, INT CmdCode,*/
/*                              LPINT pNumNames, INT iMaxNames, LPSTR pNames,*/
/*                              LPINT pAsyncRetCode)                         */
/*                                                                           */
/* Parameters                                                                */
/* ----------                                                                */
/*                                                                           */
/*  IN      hWnd      Handle of window to which completion is to be posted.  */
/*                    If NULL no completion message will be posted but       */
/*                    pAsyncRetCode must be valid. If hWnd is non-NULL it    */
/*                    must be valid & pAsyncRetCode must be NULL.            */
/*                                                                           */
/*  IN      pAssociate Pointer to ASCII name that qualifies which names to   */
/*                    retrieve. The meaning of the name depends on CmdCode.  */
/*                    The name could be a Local LU,a Remote LU, a SNA        */
/*                    Server, or a NULL pointer.                             */
/*                    For SNA Server the syntax may be a Machine name, or    */
/*                    Service name:Machine name (ex SNASRV02:THISBOX )       */
/*                                                                           */
/*  IN      CmdCode   Specifies what names to retrieve and what association  */
/*                    to use.                                                */
/*                    NAMES_LOCALFORREMOTE  get Local LU names that can      */
/*                                          partner with the Remote LU name  */
/*                                          that pAssociate points to.       */
/*                                                                           */
/*                    NAMES_LOCALFORLOCAL   get Local LU names that can      */
/*                                          partner with the Local LU name   */
/*                                          that pAssociate points to.       */
/*                                                                           */
/*                    NAMES_LOCALFORNODE    get Local LU names that          */
/*                                          are defined on the SNA Server    */
/*                                          that pAssociate points to.       */
/*                                                                           */
/*                    NAMES_LOCALFORALL     get all Local LU names that      */
/*                                          are defined on the sub-domain.   */
/*                                          pAssociate is ignored.           */
/*                                                                           */
/*                    NAMES_REMOTEFORLOCAL  get Remote LU names that can     */
/*                                          partner with the Local LU name   */
/*                                          that pAssociate points to.       */
/*                                                                           */
/*                    NAMES_REMOTEFORNODE   get Remote LU names that         */
/*                                          are defined on the SNA Server    */
/*                                          that pAssociate points to.       */
/*                                                                           */
/*                    NAMES_REMOTEFORALL    get all Remote LU names that     */
/*                                          are defined on the sub-domain.   */
/*                                          pAssociate is ignored.           */
/*                                                                           */
/*                    NAMES_MODEFORALL      get all Mode names that          */
/*                                          are defined on the sub-domain.   */
/*                                          pAssociate is ignored.           */
/*                                                                           */
/*                                                                           */
/*                                                                           */
/*  IN/OUT  pNumNames Pointer to int to receive the number of names          */
/*                    available. (If more than MaxRemLu then only the first  */
/*                    MaxRemLu of them will have been copied)                */
/*                                                                           */
/*  IN      iMaxNames Int giving the max number of names the                 */
/*                    buffer can hold. (size of buffer in bytes / 9)         */
/*                                                                           */
/*  IN/OUT  pNames    Pointer to buffer to receive names.                    */
/*                    The data will be returned as an array of max 8 byte    */
/*                    ASCII strings each followed by a terminating NULL      */
/*                                                                           */
/*  IN/OUT  pAsyncRetCode                                                    */
/*                    Optional pointer to int to take the RetCode on         */
/*                    completion of the async part of the call. Only         */
/*                    required if hWnd is NULL. If the request is not        */
/*                    accepted the value in AsyncRetCode is undefined.       */
/*                    It the request was accepted then until the request is  */
/*                    completed AsyncRetCode will contain the value          */
/*                    APPC_CFG_PENDING. Final values are as in the LPARAM of */
/*                    the completion message. If hWnd != NULL, pAsyncRetCode */
/*                    must be NULL.                                          */
/*                                                                           */
/*                                                                           */
/* Returns                                                                   */
/* -------                                                                   */
/*                                                                           */
/* On Call                                                                   */
/* -------                                                                   */
/*  HANDLE  This VerbId will be returned in the WPARAM of any completion     */
/*          message. (VerbId & APPC_CFG_SUCCESS) evaluates to TRUE if the    */
/*          request was accepted.                                            */
/*                                                                           */
/*          If the above expression evaluates to FALSE then VerbId will      */
/*          have one of the following values:                                */
/*                                                                           */
/*             APPC_CFG_ERROR_NO_APPC_INIT                                   */
/*             APPC_CFG_ERROR_INVALID_HWND                                   */
/*             APPC_CFG_ERROR_BAD_POINTER                                    */
/*             APPC_CFG_ERROR_UNCLEAR_COMPLETION_MODE                        */
/*             APPC_CFG_ERROR_TOO_MANY_REQUESTS                              */
/*             APPC_CFG_ERROR_GENERAL_FAILURE                                */
/*                                                                           */
/*                                                                           */
/*                                                                           */
/* On Receipt of completion message                                          */
/* --------------------------------                                          */
/*  MSG     Equal to return from RegisterWindowMessage with                  */
/*          WIN_APPC_CFG_COMPLETION_MSG passed as message name.              */
/*                                                                           */
/*  WPARAM  VerbId returned on the initiating call.                          */
/*                                                                           */
/*  LPARAM  Retcode which will be one of the following:                      */
/*                                                                           */
/*             APPC_CFG_SUCCESS_NAMES                                        */
/*             APPC_CFG_SUCCESS_NAMES_INCOMPLETE                             */
/*                                                                           */
/*             APPC_CFG_ERROR_BAD_PARAMETER                                  */
/*             APPC_CFG_ERROR_GENERAL_FAILURE                                */
/*                                                                           */
/*  (Retcode & APPC_CFG_ERROR)   evaluates to TRUE for an error retcode      */
/*  (Retcode & APPC_CFG_SUCCESS) evaluates to TRUE for a success retcode     */
/*                                                                           */
/*                                                                           */
/*                                                                           */
/* Comments                                                                  */
/* --------                                                                  */
/*                                                                           */
/*  Completion will either be signified by the posting of a completion       */
/*  message or by the change of *pAsyncRetCode to a value other than         */
/*  APPC_CFG_PENDING. The latter mechanism is intended for use by console    */
/*  apps with no windows or on non-Windows platforms. Completion can then    */
/*  be tested by code similar to the below:                                  */
/*                                                                           */
/*                while (*pAsyncRetCode == APPC_CFG_PENDING)                 */
/*                {                                                          */
/*                  sleep(250);                                              */
/*                }                                                          */
/*                                                                           */
/*  Note that one of hWnd & pAsyncRetCode must be NULL and the other valid.  */
/*  If this isn't the case APPC_CFG_ERROR_UNCLEAR_COMPLETION_MODE will be    */
/*  returned.                                                                */
/*                                                                           */
/*  All strings are null terminated and are NOT space padded                 */
/*                                                                           */
/*  If the buffer is too short, the reported number of remote LU's available */
/*  MAY be GREATER than the actual number.                                   */
/*                                                                           */
/*  ALL MEMORY TO WHICH POINTERS ARE PASSED MUST REMAIN VALID TILL A         */
/*  COMPLETION MESSAGE IS RECEIVED                                           */
/*                                                                           */
/*  WinAPPCStartup MUST be called first                                      */
/*                                                                           */
/*****************************************************************************/
/*****************************************************************************/
/* Entry point prototype                                                     */
/*****************************************************************************/
extern HANDLE WINAPI GetAppcConfigEx( HANDLE hWnd, LPSTR pAssociate, INT CmdCode,
                                 LPINT pNumNames, INT iMaxNames, LPSTR pNames,
                                 LPINT pAsyncRetCode);


/*****************************************************************************/
/* CmdCode values                                                            */
/*****************************************************************************/
#ifndef NAMES_LOCALFORREMOTE
#define NAMES_LOCALFORREMOTE	1
#define NAMES_LOCALFORLOCAL		2
#define NAMES_LOCALFORNODE		3
#define NAMES_LOCALFORALL		4
#define NAMES_REMOTEFORLOCAL	5
#define NAMES_REMOTEFORNODE		6
#define NAMES_REMOTEFORALL		7
#define NAMES_MODEFORALL		8
#endif

#ifdef __cplusplus
}
#endif

/*****************************************************************************/
/* End ifndef APPCCFG_INCLUDED                                               */
/*****************************************************************************/
#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\vc7addon\devtools\common\win32sdk\include\AmVa.h ===
//------------------------------------------------------------------------------
// File: AMVA.h
//
// Desc: DirectShowMotionComp include file.
//
// Copyright (c) 1997 - 2000, Microsoft Corporation.  All rights reserved.
//------------------------------------------------------------------------------


#ifndef __AMVA_INCLUDED__
#define __AMVA_INCLUDED__

#ifdef __cplusplus
extern "C" {
#endif


#define AMVA_TYPEINDEX_OUTPUTFRAME 0xFFFFFFFF

//  Flags for QueryRenderStatus
#define AMVA_QUERYRENDERSTATUSF_READ     0x00000001  // Query for read
                                                     // set this bit to 0
                                                     // if query for update

typedef struct _tag_AMVAUncompBufferInfo
{
 DWORD                   dwMinNumSurfaces;           // IN   min number of surfaces to be allocated
 DWORD                   dwMaxNumSurfaces;           // IN   max number of surfaces to be allocated
 DDPIXELFORMAT           ddUncompPixelFormat;        // IN   pixel format of surfaces to be allocated
} AMVAUncompBufferInfo, *LPAMVAUncompBufferInfo;

typedef struct _tag_AMVAUncompDataInfo
{
    DWORD                   dwUncompWidth;              // [in]     width of uncompressed data
    DWORD                   dwUncompHeight;             // [in]     height of uncompressed data
    DDPIXELFORMAT           ddUncompPixelFormat;        // [in]     pixel-format of uncompressed data
} AMVAUncompDataInfo, *LPAMVAUncompDataInfo;

typedef struct _tag_AMVAInternalMemInfo
{
    DWORD                   dwScratchMemAlloc;          // [out]    amount of scratch memory will the hal allocate for its private use
} AMVAInternalMemInfo, *LPAMVAInternalMemInfo;


typedef struct _tag_AMVACompBufferInfo
{
    DWORD                   dwNumCompBuffers;           // [out]    number of buffers reqd for compressed data
    DWORD                   dwWidthToCreate;            // [out]    Width of surface to create
    DWORD                   dwHeightToCreate;           // [out]    Height of surface to create
    DWORD                   dwBytesToAllocate;          // [out]    Total number of bytes used by each surface
    DDSCAPS2                ddCompCaps;                 // [out]    caps to create surfaces to store compressed data
    DDPIXELFORMAT           ddPixelFormat;              // [out]    fourcc to create surfaces to store compressed data
} AMVACompBufferInfo, *LPAMVACompBufferInfo;


// Note that you are NOT allowed to store any pointer in pMiscData
typedef struct _tag_AMVABeginFrameInfo
{
    DWORD                dwDestSurfaceIndex;         // IN  destination buffer in which to decoding this frame
    LPVOID               pInputData;                 // IN  pointer to misc data
    DWORD                dwSizeInputData;            // IN  size of other misc data to begin frame
    LPVOID               pOutputData;                // OUT pointer to data which the VGA is going to fill
    DWORD                dwSizeOutputData;           // IN  size of data which the VGA is going to fill
} AMVABeginFrameInfo, *LPAMVABeginFrameInfo;

// Note that you are NOT allowed to store any pointer in pMiscData
typedef struct _tag_AMVAEndFrameInfo
{
    DWORD                   dwSizeMiscData;             // [in]     size of other misc data to begin frame
    LPVOID                  pMiscData;                  // [in]     pointer to misc data
} AMVAEndFrameInfo, *LPAMVAEndFrameInfo;

typedef struct _tag_AMVABUFFERINFO
{
    DWORD                   dwTypeIndex;                // [in]    Type of buffer
    DWORD                   dwBufferIndex;              // [in]    Buffer index
    DWORD                   dwDataOffset;               // [in]    offset of relevant data from the beginning of buffer
    DWORD                   dwDataSize;                 // [in]    size of relevant data
} AMVABUFFERINFO, *LPAMVABUFFERINFO;

#ifdef __cplusplus
};
#endif

#endif // _AMVA_INCLUDED
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\vc7addon\devtools\common\win32sdk\include\appc_c.h ===
/*****************************************************************************/
/* Now a stub file to allow back compatibility, real file is winappc.h       */
/* Copyright (c) Microsoft Corporation.  All rights reserved.                */
/*****************************************************************************/
#include <winappc.h>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\vc7addon\devtools\common\win32sdk\include\appfftp.h ===
/*
 * NOTE: The Microsoft Host Integration Server 2000 AFTP services use a buffer
 *       size defined in an earlier version of AFTP. You *must* use this header
 *       file to ensure compatibility. The aftpapi.h file #included below defines
 *       the current AFTP version. The constants specific to the Microsoft implementation
 *       are redefined to appropriate values in this file.
 * Copyright (c) Microsoft Corporation.  All rights reserved.
 */

/*
 * The appropriate system value must be defined for your platform.
 * The following system values are supported:
 *     CM_OS2
 *     CM_DOS
 *     CM_AIX
 *     CM_MVS
 *     CM_VM
 *     CM_OS400
 *     CM_WINNT                                                          *W32*
 *
 * This is necessary for the proper setting of
 * AFTP_ENTRY and AFTP_PTR below.
 */


#ifndef _aftp_h
#define _aftp_h

#include <aftpapi.h>


#undef AFTP_FILE_NAME_SIZE
#undef AFTP_FQLU_NAME_SIZE
#undef AFTP_MODE_NAME_SIZE
#undef AFTP_PASSWORD_SIZE
#undef AFTP_TP_NAME_SIZE
#undef AFTP_USERID_SIZE
#undef AFTP_MESSAGE_SIZE
#undef AFTP_DATA_TYPE_SIZE
#undef AFTP_DATE_MODE_SIZE
#undef AFTP_RECORD_FORMAT_SIZE
#undef AFTP_WRITE_MODE_SIZE
#undef AFTP_INI_MESSAGE_SIZE
#undef AFTP_SYSTEM_INFO_SIZE


#define AFTP_FILE_NAME_SIZE     ((AFTP_LENGTH_TYPE)512)
#define AFTP_FQLU_NAME_SIZE     ((AFTP_LENGTH_TYPE)64)
#define AFTP_MODE_NAME_SIZE     ((AFTP_LENGTH_TYPE)8)
#define AFTP_PASSWORD_SIZE      ((AFTP_LENGTH_TYPE)10)
#define AFTP_TP_NAME_SIZE       ((AFTP_LENGTH_TYPE)64)
#define AFTP_USERID_SIZE        ((AFTP_LENGTH_TYPE)10)
#define AFTP_MESSAGE_SIZE       ((AFTP_LENGTH_TYPE)2048)
#define AFTP_DATA_TYPE_SIZE     ((AFTP_LENGTH_TYPE)64)
#define AFTP_DATE_MODE_SIZE     ((AFTP_LENGTH_TYPE)64)
#define AFTP_RECORD_FORMAT_SIZE ((AFTP_LENGTH_TYPE)64)
#define AFTP_WRITE_MODE_SIZE    ((AFTP_LENGTH_TYPE)64)
#define AFTP_INI_MESSAGE_SIZE   ((AFTP_LENGTH_TYPE)1024)
#define AFTP_SYSTEM_INFO_SIZE   ((AFTP_LENGTH_TYPE)512)

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\vc7addon\devtools\common\win32sdk\include\asptlb.h ===
#pragma warning( disable: 4049 )  /* more than 64k source lines */

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 5.03.0268 */
/* at Wed Jul 07 15:54:33 1999
 */
/* Compiler settings for asp.idl:
    Oicf (OptLev=i2), W1, Zp8, env=Win32 (32b run), ms_ext, c_ext
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 440
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef ___asptlb_h__
#define ___asptlb_h__

/* Forward Declarations */ 

#ifndef __IStringList_FWD_DEFINED__
#define __IStringList_FWD_DEFINED__
typedef interface IStringList IStringList;
#endif 	/* __IStringList_FWD_DEFINED__ */


#ifndef __IRequestDictionary_FWD_DEFINED__
#define __IRequestDictionary_FWD_DEFINED__
typedef interface IRequestDictionary IRequestDictionary;
#endif 	/* __IRequestDictionary_FWD_DEFINED__ */


#ifndef __IRequest_FWD_DEFINED__
#define __IRequest_FWD_DEFINED__
typedef interface IRequest IRequest;
#endif 	/* __IRequest_FWD_DEFINED__ */


#ifndef __Request_FWD_DEFINED__
#define __Request_FWD_DEFINED__

#ifdef __cplusplus
typedef class Request Request;
#else
typedef struct Request Request;
#endif /* __cplusplus */

#endif 	/* __Request_FWD_DEFINED__ */


#ifndef __IReadCookie_FWD_DEFINED__
#define __IReadCookie_FWD_DEFINED__
typedef interface IReadCookie IReadCookie;
#endif 	/* __IReadCookie_FWD_DEFINED__ */


#ifndef __IWriteCookie_FWD_DEFINED__
#define __IWriteCookie_FWD_DEFINED__
typedef interface IWriteCookie IWriteCookie;
#endif 	/* __IWriteCookie_FWD_DEFINED__ */


#ifndef __IResponse_FWD_DEFINED__
#define __IResponse_FWD_DEFINED__
typedef interface IResponse IResponse;
#endif 	/* __IResponse_FWD_DEFINED__ */


#ifndef __Response_FWD_DEFINED__
#define __Response_FWD_DEFINED__

#ifdef __cplusplus
typedef class Response Response;
#else
typedef struct Response Response;
#endif /* __cplusplus */

#endif 	/* __Response_FWD_DEFINED__ */


#ifndef __IVariantDictionary_FWD_DEFINED__
#define __IVariantDictionary_FWD_DEFINED__
typedef interface IVariantDictionary IVariantDictionary;
#endif 	/* __IVariantDictionary_FWD_DEFINED__ */


#ifndef __ISessionObject_FWD_DEFINED__
#define __ISessionObject_FWD_DEFINED__
typedef interface ISessionObject ISessionObject;
#endif 	/* __ISessionObject_FWD_DEFINED__ */


#ifndef __Session_FWD_DEFINED__
#define __Session_FWD_DEFINED__

#ifdef __cplusplus
typedef class Session Session;
#else
typedef struct Session Session;
#endif /* __cplusplus */

#endif 	/* __Session_FWD_DEFINED__ */


#ifndef __IApplicationObject_FWD_DEFINED__
#define __IApplicationObject_FWD_DEFINED__
typedef interface IApplicationObject IApplicationObject;
#endif 	/* __IApplicationObject_FWD_DEFINED__ */


#ifndef __Application_FWD_DEFINED__
#define __Application_FWD_DEFINED__

#ifdef __cplusplus
typedef class Application Application;
#else
typedef struct Application Application;
#endif /* __cplusplus */

#endif 	/* __Application_FWD_DEFINED__ */


#ifndef __IASPError_FWD_DEFINED__
#define __IASPError_FWD_DEFINED__
typedef interface IASPError IASPError;
#endif 	/* __IASPError_FWD_DEFINED__ */


#ifndef __IServer_FWD_DEFINED__
#define __IServer_FWD_DEFINED__
typedef interface IServer IServer;
#endif 	/* __IServer_FWD_DEFINED__ */


#ifndef __Server_FWD_DEFINED__
#define __Server_FWD_DEFINED__

#ifdef __cplusplus
typedef class Server Server;
#else
typedef struct Server Server;
#endif /* __cplusplus */

#endif 	/* __Server_FWD_DEFINED__ */


#ifndef __IScriptingContext_FWD_DEFINED__
#define __IScriptingContext_FWD_DEFINED__
typedef interface IScriptingContext IScriptingContext;
#endif 	/* __IScriptingContext_FWD_DEFINED__ */


#ifndef __ScriptingContext_FWD_DEFINED__
#define __ScriptingContext_FWD_DEFINED__

#ifdef __cplusplus
typedef class ScriptingContext ScriptingContext;
#else
typedef struct ScriptingContext ScriptingContext;
#endif /* __cplusplus */

#endif 	/* __ScriptingContext_FWD_DEFINED__ */


#ifdef __cplusplus
extern "C"{
#endif 

void __RPC_FAR * __RPC_USER MIDL_user_allocate(size_t);
void __RPC_USER MIDL_user_free( void __RPC_FAR * ); 


#ifndef __ASPTypeLibrary_LIBRARY_DEFINED__
#define __ASPTypeLibrary_LIBRARY_DEFINED__

/* library ASPTypeLibrary */
/* [version][lcid][helpstring][uuid] */ 


DEFINE_GUID(LIBID_ASPTypeLibrary,0xD97A6DA0,0xA85C,0x11cf,0x83,0xAE,0x00,0xA0,0xC9,0x0C,0x2B,0xD8);

#ifndef __IStringList_INTERFACE_DEFINED__
#define __IStringList_INTERFACE_DEFINED__

/* interface IStringList */
/* [object][hidden][dual][oleautomation][helpstring][uuid] */ 


DEFINE_GUID(IID_IStringList,0xD97A6DA0,0xA85D,0x11cf,0x83,0xAE,0x00,0xA0,0xC9,0x0C,0x2B,0xD8);

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D97A6DA0-A85D-11cf-83AE-00A0C90C2BD8")
    IStringList : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in][optional] */ VARIANT i,
            /* [retval][out] */ VARIANT __RPC_FAR *pVariantReturn) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ int __RPC_FAR *cStrRet) = 0;
        
        virtual /* [restricted][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppEnumReturn) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IStringListVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IStringList __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IStringList __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IStringList __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IStringList __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IStringList __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IStringList __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IStringList __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Item )( 
            IStringList __RPC_FAR * This,
            /* [in][optional] */ VARIANT i,
            /* [retval][out] */ VARIANT __RPC_FAR *pVariantReturn);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Count )( 
            IStringList __RPC_FAR * This,
            /* [retval][out] */ int __RPC_FAR *cStrRet);
        
        /* [restricted][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get__NewEnum )( 
            IStringList __RPC_FAR * This,
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppEnumReturn);
        
        END_INTERFACE
    } IStringListVtbl;

    interface IStringList
    {
        CONST_VTBL struct IStringListVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IStringList_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IStringList_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IStringList_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IStringList_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IStringList_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IStringList_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IStringList_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IStringList_get_Item(This,i,pVariantReturn)	\
    (This)->lpVtbl -> get_Item(This,i,pVariantReturn)

#define IStringList_get_Count(This,cStrRet)	\
    (This)->lpVtbl -> get_Count(This,cStrRet)

#define IStringList_get__NewEnum(This,ppEnumReturn)	\
    (This)->lpVtbl -> get__NewEnum(This,ppEnumReturn)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [id][propget] */ HRESULT STDMETHODCALLTYPE IStringList_get_Item_Proxy( 
    IStringList __RPC_FAR * This,
    /* [in][optional] */ VARIANT i,
    /* [retval][out] */ VARIANT __RPC_FAR *pVariantReturn);


void __RPC_STUB IStringList_get_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IStringList_get_Count_Proxy( 
    IStringList __RPC_FAR * This,
    /* [retval][out] */ int __RPC_FAR *cStrRet);


void __RPC_STUB IStringList_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [restricted][id][propget] */ HRESULT STDMETHODCALLTYPE IStringList_get__NewEnum_Proxy( 
    IStringList __RPC_FAR * This,
    /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppEnumReturn);


void __RPC_STUB IStringList_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IStringList_INTERFACE_DEFINED__ */


#ifndef __IRequestDictionary_INTERFACE_DEFINED__
#define __IRequestDictionary_INTERFACE_DEFINED__

/* interface IRequestDictionary */
/* [object][hidden][dual][oleautomation][helpstring][uuid] */ 


DEFINE_GUID(IID_IRequestDictionary,0xD97A6DA0,0xA85F,0x11df,0x83,0xAE,0x00,0xA0,0xC9,0x0C,0x2B,0xD8);

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D97A6DA0-A85F-11df-83AE-00A0C90C2BD8")
    IRequestDictionary : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in][optional] */ VARIANT Var,
            /* [retval][out] */ VARIANT __RPC_FAR *pVariantReturn) = 0;
        
        virtual /* [restricted][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppEnumReturn) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ int __RPC_FAR *cStrRet) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Key( 
            /* [in] */ VARIANT VarKey,
            /* [retval][out] */ VARIANT __RPC_FAR *pvar) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IRequestDictionaryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IRequestDictionary __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IRequestDictionary __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IRequestDictionary __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IRequestDictionary __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IRequestDictionary __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IRequestDictionary __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IRequestDictionary __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Item )( 
            IRequestDictionary __RPC_FAR * This,
            /* [in][optional] */ VARIANT Var,
            /* [retval][out] */ VARIANT __RPC_FAR *pVariantReturn);
        
        /* [restricted][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get__NewEnum )( 
            IRequestDictionary __RPC_FAR * This,
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppEnumReturn);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Count )( 
            IRequestDictionary __RPC_FAR * This,
            /* [retval][out] */ int __RPC_FAR *cStrRet);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Key )( 
            IRequestDictionary __RPC_FAR * This,
            /* [in] */ VARIANT VarKey,
            /* [retval][out] */ VARIANT __RPC_FAR *pvar);
        
        END_INTERFACE
    } IRequestDictionaryVtbl;

    interface IRequestDictionary
    {
        CONST_VTBL struct IRequestDictionaryVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IRequestDictionary_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IRequestDictionary_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IRequestDictionary_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IRequestDictionary_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IRequestDictionary_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IRequestDictionary_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IRequestDictionary_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IRequestDictionary_get_Item(This,Var,pVariantReturn)	\
    (This)->lpVtbl -> get_Item(This,Var,pVariantReturn)

#define IRequestDictionary_get__NewEnum(This,ppEnumReturn)	\
    (This)->lpVtbl -> get__NewEnum(This,ppEnumReturn)

#define IRequestDictionary_get_Count(This,cStrRet)	\
    (This)->lpVtbl -> get_Count(This,cStrRet)

#define IRequestDictionary_get_Key(This,VarKey,pvar)	\
    (This)->lpVtbl -> get_Key(This,VarKey,pvar)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [id][propget] */ HRESULT STDMETHODCALLTYPE IRequestDictionary_get_Item_Proxy( 
    IRequestDictionary __RPC_FAR * This,
    /* [in][optional] */ VARIANT Var,
    /* [retval][out] */ VARIANT __RPC_FAR *pVariantReturn);


void __RPC_STUB IRequestDictionary_get_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [restricted][id][propget] */ HRESULT STDMETHODCALLTYPE IRequestDictionary_get__NewEnum_Proxy( 
    IRequestDictionary __RPC_FAR * This,
    /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppEnumReturn);


void __RPC_STUB IRequestDictionary_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IRequestDictionary_get_Count_Proxy( 
    IRequestDictionary __RPC_FAR * This,
    /* [retval][out] */ int __RPC_FAR *cStrRet);


void __RPC_STUB IRequestDictionary_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget] */ HRESULT STDMETHODCALLTYPE IRequestDictionary_get_Key_Proxy( 
    IRequestDictionary __RPC_FAR * This,
    /* [in] */ VARIANT VarKey,
    /* [retval][out] */ VARIANT __RPC_FAR *pvar);


void __RPC_STUB IRequestDictionary_get_Key_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IRequestDictionary_INTERFACE_DEFINED__ */


#ifndef __IRequest_INTERFACE_DEFINED__
#define __IRequest_INTERFACE_DEFINED__

/* interface IRequest */
/* [object][hidden][dual][oleautomation][uuid] */ 


DEFINE_GUID(IID_IRequest,0xD97A6DA0,0xA861,0x11cf,0x93,0xAE,0x00,0xA0,0xC9,0x0C,0x2B,0xD8);

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D97A6DA0-A861-11cf-93AE-00A0C90C2BD8")
    IRequest : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ BSTR bstrVar,
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppObjReturn) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_QueryString( 
            /* [retval][out] */ IRequestDictionary __RPC_FAR *__RPC_FAR *ppDictReturn) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Form( 
            /* [retval][out] */ IRequestDictionary __RPC_FAR *__RPC_FAR *ppDictReturn) = 0;
        
        virtual /* [hidden][propget] */ HRESULT STDMETHODCALLTYPE get_Body( 
            /* [retval][out] */ IRequestDictionary __RPC_FAR *__RPC_FAR *ppDictReturn) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ServerVariables( 
            /* [retval][out] */ IRequestDictionary __RPC_FAR *__RPC_FAR *ppDictReturn) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ClientCertificate( 
            /* [retval][out] */ IRequestDictionary __RPC_FAR *__RPC_FAR *ppDictReturn) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Cookies( 
            /* [retval][out] */ IRequestDictionary __RPC_FAR *__RPC_FAR *ppDictReturn) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TotalBytes( 
            /* [retval][out] */ long __RPC_FAR *pcbTotal) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE BinaryRead( 
            /* [out][in] */ VARIANT __RPC_FAR *pvarCountToRead,
            /* [retval][out] */ VARIANT __RPC_FAR *pvarReturn) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IRequestVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IRequest __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IRequest __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IRequest __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IRequest __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IRequest __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IRequest __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IRequest __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Item )( 
            IRequest __RPC_FAR * This,
            /* [in] */ BSTR bstrVar,
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppObjReturn);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_QueryString )( 
            IRequest __RPC_FAR * This,
            /* [retval][out] */ IRequestDictionary __RPC_FAR *__RPC_FAR *ppDictReturn);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Form )( 
            IRequest __RPC_FAR * This,
            /* [retval][out] */ IRequestDictionary __RPC_FAR *__RPC_FAR *ppDictReturn);
        
        /* [hidden][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Body )( 
            IRequest __RPC_FAR * This,
            /* [retval][out] */ IRequestDictionary __RPC_FAR *__RPC_FAR *ppDictReturn);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ServerVariables )( 
            IRequest __RPC_FAR * This,
            /* [retval][out] */ IRequestDictionary __RPC_FAR *__RPC_FAR *ppDictReturn);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ClientCertificate )( 
            IRequest __RPC_FAR * This,
            /* [retval][out] */ IRequestDictionary __RPC_FAR *__RPC_FAR *ppDictReturn);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Cookies )( 
            IRequest __RPC_FAR * This,
            /* [retval][out] */ IRequestDictionary __RPC_FAR *__RPC_FAR *ppDictReturn);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_TotalBytes )( 
            IRequest __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *pcbTotal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *BinaryRead )( 
            IRequest __RPC_FAR * This,
            /* [out][in] */ VARIANT __RPC_FAR *pvarCountToRead,
            /* [retval][out] */ VARIANT __RPC_FAR *pvarReturn);
        
        END_INTERFACE
    } IRequestVtbl;

    interface IRequest
    {
        CONST_VTBL struct IRequestVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IRequest_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IRequest_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IRequest_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IRequest_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IRequest_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IRequest_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IRequest_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IRequest_get_Item(This,bstrVar,ppObjReturn)	\
    (This)->lpVtbl -> get_Item(This,bstrVar,ppObjReturn)

#define IRequest_get_QueryString(This,ppDictReturn)	\
    (This)->lpVtbl -> get_QueryString(This,ppDictReturn)

#define IRequest_get_Form(This,ppDictReturn)	\
    (This)->lpVtbl -> get_Form(This,ppDictReturn)

#define IRequest_get_Body(This,ppDictReturn)	\
    (This)->lpVtbl -> get_Body(This,ppDictReturn)

#define IRequest_get_ServerVariables(This,ppDictReturn)	\
    (This)->lpVtbl -> get_ServerVariables(This,ppDictReturn)

#define IRequest_get_ClientCertificate(This,ppDictReturn)	\
    (This)->lpVtbl -> get_ClientCertificate(This,ppDictReturn)

#define IRequest_get_Cookies(This,ppDictReturn)	\
    (This)->lpVtbl -> get_Cookies(This,ppDictReturn)

#define IRequest_get_TotalBytes(This,pcbTotal)	\
    (This)->lpVtbl -> get_TotalBytes(This,pcbTotal)

#define IRequest_BinaryRead(This,pvarCountToRead,pvarReturn)	\
    (This)->lpVtbl -> BinaryRead(This,pvarCountToRead,pvarReturn)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [id][propget] */ HRESULT STDMETHODCALLTYPE IRequest_get_Item_Proxy( 
    IRequest __RPC_FAR * This,
    /* [in] */ BSTR bstrVar,
    /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppObjReturn);


void __RPC_STUB IRequest_get_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IRequest_get_QueryString_Proxy( 
    IRequest __RPC_FAR * This,
    /* [retval][out] */ IRequestDictionary __RPC_FAR *__RPC_FAR *ppDictReturn);


void __RPC_STUB IRequest_get_QueryString_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IRequest_get_Form_Proxy( 
    IRequest __RPC_FAR * This,
    /* [retval][out] */ IRequestDictionary __RPC_FAR *__RPC_FAR *ppDictReturn);


void __RPC_STUB IRequest_get_Form_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][propget] */ HRESULT STDMETHODCALLTYPE IRequest_get_Body_Proxy( 
    IRequest __RPC_FAR * This,
    /* [retval][out] */ IRequestDictionary __RPC_FAR *__RPC_FAR *ppDictReturn);


void __RPC_STUB IRequest_get_Body_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IRequest_get_ServerVariables_Proxy( 
    IRequest __RPC_FAR * This,
    /* [retval][out] */ IRequestDictionary __RPC_FAR *__RPC_FAR *ppDictReturn);


void __RPC_STUB IRequest_get_ServerVariables_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IRequest_get_ClientCertificate_Proxy( 
    IRequest __RPC_FAR * This,
    /* [retval][out] */ IRequestDictionary __RPC_FAR *__RPC_FAR *ppDictReturn);


void __RPC_STUB IRequest_get_ClientCertificate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IRequest_get_Cookies_Proxy( 
    IRequest __RPC_FAR * This,
    /* [retval][out] */ IRequestDictionary __RPC_FAR *__RPC_FAR *ppDictReturn);


void __RPC_STUB IRequest_get_Cookies_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IRequest_get_TotalBytes_Proxy( 
    IRequest __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *pcbTotal);


void __RPC_STUB IRequest_get_TotalBytes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IRequest_BinaryRead_Proxy( 
    IRequest __RPC_FAR * This,
    /* [out][in] */ VARIANT __RPC_FAR *pvarCountToRead,
    /* [retval][out] */ VARIANT __RPC_FAR *pvarReturn);


void __RPC_STUB IRequest_BinaryRead_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IRequest_INTERFACE_DEFINED__ */


DEFINE_GUID(CLSID_Request,0x920c25d0,0x25d9,0x11d0,0xa5,0x5f,0x00,0xa0,0xc9,0x0c,0x20,0x91);

#ifdef __cplusplus

class DECLSPEC_UUID("920c25d0-25d9-11d0-a55f-00a0c90c2091")
Request;
#endif

#ifndef __IReadCookie_INTERFACE_DEFINED__
#define __IReadCookie_INTERFACE_DEFINED__

/* interface IReadCookie */
/* [object][hidden][dual][oleautomation][helpstring][uuid] */ 


DEFINE_GUID(IID_IReadCookie,0x71EAF260,0x0CE0,0x11D0,0xA5,0x3E,0x00,0xA0,0xC9,0x0C,0x20,0x91);

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("71EAF260-0CE0-11D0-A53E-00A0C90C2091")
    IReadCookie : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in][optional] */ VARIANT Var,
            /* [retval][out] */ VARIANT __RPC_FAR *pVariantReturn) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_HasKeys( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pfHasKeys) = 0;
        
        virtual /* [restricted][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppEnumReturn) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ int __RPC_FAR *cStrRet) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Key( 
            /* [in] */ VARIANT VarKey,
            /* [retval][out] */ VARIANT __RPC_FAR *pvar) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IReadCookieVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IReadCookie __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IReadCookie __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IReadCookie __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IReadCookie __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IReadCookie __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IReadCookie __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IReadCookie __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Item )( 
            IReadCookie __RPC_FAR * This,
            /* [in][optional] */ VARIANT Var,
            /* [retval][out] */ VARIANT __RPC_FAR *pVariantReturn);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_HasKeys )( 
            IReadCookie __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pfHasKeys);
        
        /* [restricted][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get__NewEnum )( 
            IReadCookie __RPC_FAR * This,
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppEnumReturn);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Count )( 
            IReadCookie __RPC_FAR * This,
            /* [retval][out] */ int __RPC_FAR *cStrRet);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Key )( 
            IReadCookie __RPC_FAR * This,
            /* [in] */ VARIANT VarKey,
            /* [retval][out] */ VARIANT __RPC_FAR *pvar);
        
        END_INTERFACE
    } IReadCookieVtbl;

    interface IReadCookie
    {
        CONST_VTBL struct IReadCookieVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IReadCookie_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IReadCookie_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IReadCookie_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IReadCookie_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IReadCookie_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IReadCookie_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IReadCookie_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IReadCookie_get_Item(This,Var,pVariantReturn)	\
    (This)->lpVtbl -> get_Item(This,Var,pVariantReturn)

#define IReadCookie_get_HasKeys(This,pfHasKeys)	\
    (This)->lpVtbl -> get_HasKeys(This,pfHasKeys)

#define IReadCookie_get__NewEnum(This,ppEnumReturn)	\
    (This)->lpVtbl -> get__NewEnum(This,ppEnumReturn)

#define IReadCookie_get_Count(This,cStrRet)	\
    (This)->lpVtbl -> get_Count(This,cStrRet)

#define IReadCookie_get_Key(This,VarKey,pvar)	\
    (This)->lpVtbl -> get_Key(This,VarKey,pvar)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [id][propget] */ HRESULT STDMETHODCALLTYPE IReadCookie_get_Item_Proxy( 
    IReadCookie __RPC_FAR * This,
    /* [in][optional] */ VARIANT Var,
    /* [retval][out] */ VARIANT __RPC_FAR *pVariantReturn);


void __RPC_STUB IReadCookie_get_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IReadCookie_get_HasKeys_Proxy( 
    IReadCookie __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pfHasKeys);


void __RPC_STUB IReadCookie_get_HasKeys_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [restricted][id][propget] */ HRESULT STDMETHODCALLTYPE IReadCookie_get__NewEnum_Proxy( 
    IReadCookie __RPC_FAR * This,
    /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppEnumReturn);


void __RPC_STUB IReadCookie_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IReadCookie_get_Count_Proxy( 
    IReadCookie __RPC_FAR * This,
    /* [retval][out] */ int __RPC_FAR *cStrRet);


void __RPC_STUB IReadCookie_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget] */ HRESULT STDMETHODCALLTYPE IReadCookie_get_Key_Proxy( 
    IReadCookie __RPC_FAR * This,
    /* [in] */ VARIANT VarKey,
    /* [retval][out] */ VARIANT __RPC_FAR *pvar);


void __RPC_STUB IReadCookie_get_Key_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IReadCookie_INTERFACE_DEFINED__ */


#ifndef __IWriteCookie_INTERFACE_DEFINED__
#define __IWriteCookie_INTERFACE_DEFINED__

/* interface IWriteCookie */
/* [object][hidden][dual][oleautomation][helpstring][uuid] */ 


DEFINE_GUID(IID_IWriteCookie,0xD97A6DA0,0xA862,0x11cf,0x84,0xAE,0x00,0xA0,0xC9,0x0C,0x2B,0xD8);

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D97A6DA0-A862-11cf-84AE-00A0C90C2BD8")
    IWriteCookie : public IDispatch
    {
    public:
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_Item( 
            /* [in][optional] */ VARIANT key,
            /* [in] */ BSTR bstrValue) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Expires( 
            /* [in] */ DATE dtExpires) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Domain( 
            /* [in] */ BSTR bstrDomain) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Path( 
            /* [in] */ BSTR bstrPath) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Secure( 
            /* [in] */ VARIANT_BOOL fSecure) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_HasKeys( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pfHasKeys) = 0;
        
        virtual /* [restricted][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppEnumReturn) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IWriteCookieVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IWriteCookie __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IWriteCookie __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IWriteCookie __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IWriteCookie __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IWriteCookie __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IWriteCookie __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IWriteCookie __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Item )( 
            IWriteCookie __RPC_FAR * This,
            /* [in][optional] */ VARIANT key,
            /* [in] */ BSTR bstrValue);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Expires )( 
            IWriteCookie __RPC_FAR * This,
            /* [in] */ DATE dtExpires);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Domain )( 
            IWriteCookie __RPC_FAR * This,
            /* [in] */ BSTR bstrDomain);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Path )( 
            IWriteCookie __RPC_FAR * This,
            /* [in] */ BSTR bstrPath);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Secure )( 
            IWriteCookie __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL fSecure);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_HasKeys )( 
            IWriteCookie __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pfHasKeys);
        
        /* [restricted][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get__NewEnum )( 
            IWriteCookie __RPC_FAR * This,
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppEnumReturn);
        
        END_INTERFACE
    } IWriteCookieVtbl;

    interface IWriteCookie
    {
        CONST_VTBL struct IWriteCookieVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IWriteCookie_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IWriteCookie_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IWriteCookie_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IWriteCookie_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IWriteCookie_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IWriteCookie_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IWriteCookie_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IWriteCookie_put_Item(This,key,bstrValue)	\
    (This)->lpVtbl -> put_Item(This,key,bstrValue)

#define IWriteCookie_put_Expires(This,dtExpires)	\
    (This)->lpVtbl -> put_Expires(This,dtExpires)

#define IWriteCookie_put_Domain(This,bstrDomain)	\
    (This)->lpVtbl -> put_Domain(This,bstrDomain)

#define IWriteCookie_put_Path(This,bstrPath)	\
    (This)->lpVtbl -> put_Path(This,bstrPath)

#define IWriteCookie_put_Secure(This,fSecure)	\
    (This)->lpVtbl -> put_Secure(This,fSecure)

#define IWriteCookie_get_HasKeys(This,pfHasKeys)	\
    (This)->lpVtbl -> get_HasKeys(This,pfHasKeys)

#define IWriteCookie_get__NewEnum(This,ppEnumReturn)	\
    (This)->lpVtbl -> get__NewEnum(This,ppEnumReturn)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [id][propput] */ HRESULT STDMETHODCALLTYPE IWriteCookie_put_Item_Proxy( 
    IWriteCookie __RPC_FAR * This,
    /* [in][optional] */ VARIANT key,
    /* [in] */ BSTR bstrValue);


void __RPC_STUB IWriteCookie_put_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IWriteCookie_put_Expires_Proxy( 
    IWriteCookie __RPC_FAR * This,
    /* [in] */ DATE dtExpires);


void __RPC_STUB IWriteCookie_put_Expires_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IWriteCookie_put_Domain_Proxy( 
    IWriteCookie __RPC_FAR * This,
    /* [in] */ BSTR bstrDomain);


void __RPC_STUB IWriteCookie_put_Domain_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IWriteCookie_put_Path_Proxy( 
    IWriteCookie __RPC_FAR * This,
    /* [in] */ BSTR bstrPath);


void __RPC_STUB IWriteCookie_put_Path_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IWriteCookie_put_Secure_Proxy( 
    IWriteCookie __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL fSecure);


void __RPC_STUB IWriteCookie_put_Secure_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IWriteCookie_get_HasKeys_Proxy( 
    IWriteCookie __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pfHasKeys);


void __RPC_STUB IWriteCookie_get_HasKeys_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [restricted][id][propget] */ HRESULT STDMETHODCALLTYPE IWriteCookie_get__NewEnum_Proxy( 
    IWriteCookie __RPC_FAR * This,
    /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppEnumReturn);


void __RPC_STUB IWriteCookie_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IWriteCookie_INTERFACE_DEFINED__ */


#ifndef __IResponse_INTERFACE_DEFINED__
#define __IResponse_INTERFACE_DEFINED__

/* interface IResponse */
/* [object][hidden][dual][oleautomation][uuid] */ 


DEFINE_GUID(IID_IResponse,0xD97A6DA0,0xA864,0x11cf,0x83,0xBE,0x00,0xA0,0xC9,0x0C,0x2B,0xD8);

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D97A6DA0-A864-11cf-83BE-00A0C90C2BD8")
    IResponse : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Buffer( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *fIsBuffering) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Buffer( 
            /* [in] */ VARIANT_BOOL fIsBuffering) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ContentType( 
            /* [retval][out] */ BSTR __RPC_FAR *pbstrContentTypeRet) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ContentType( 
            /* [in] */ BSTR bstrContentType) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Expires( 
            /* [retval][out] */ VARIANT __RPC_FAR *pvarExpiresMinutesRet) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Expires( 
            /* [in] */ long lExpiresMinutes) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ExpiresAbsolute( 
            /* [retval][out] */ VARIANT __RPC_FAR *pvarExpiresRet) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ExpiresAbsolute( 
            /* [in] */ DATE dtExpires) = 0;
        
        virtual /* [propget][helpstring] */ HRESULT STDMETHODCALLTYPE get_Cookies( 
            /* [retval][out] */ IRequestDictionary __RPC_FAR *__RPC_FAR *ppCookies) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Status( 
            /* [retval][out] */ BSTR __RPC_FAR *pbstrStatusRet) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Status( 
            /* [in] */ BSTR bstrStatus) = 0;
        
        virtual /* [hidden] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR bstrHeaderValue,
            /* [in] */ BSTR bstrHeaderName) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddHeader( 
            /* [in] */ BSTR bstrHeaderName,
            /* [in] */ BSTR bstrHeaderValue) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AppendToLog( 
            /* [in] */ BSTR bstrLogEntry) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE BinaryWrite( 
            /* [in] */ VARIANT varInput) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE End( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Flush( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Redirect( 
            /* [in] */ BSTR bstrURL) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Write( 
            /* [in] */ VARIANT varText) = 0;
        
        virtual /* [hidden] */ HRESULT STDMETHODCALLTYPE WriteBlock( 
            /* [in] */ short iBlockNumber) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE IsClientConnected( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pfIsClientConnected) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_CharSet( 
            /* [retval][out] */ BSTR __RPC_FAR *pbstrCharSetRet) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CharSet( 
            /* [in] */ BSTR bstrCharSet) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Pics( 
            /* [in] */ BSTR bstrHeaderValue) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_CacheControl( 
            /* [retval][out] */ BSTR __RPC_FAR *pbstrCacheControl) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CacheControl( 
            /* [in] */ BSTR bstrCacheControl) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IResponseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IResponse __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IResponse __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IResponse __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IResponse __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IResponse __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IResponse __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IResponse __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Buffer )( 
            IResponse __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *fIsBuffering);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Buffer )( 
            IResponse __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL fIsBuffering);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ContentType )( 
            IResponse __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pbstrContentTypeRet);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_ContentType )( 
            IResponse __RPC_FAR * This,
            /* [in] */ BSTR bstrContentType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Expires )( 
            IResponse __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *pvarExpiresMinutesRet);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Expires )( 
            IResponse __RPC_FAR * This,
            /* [in] */ long lExpiresMinutes);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ExpiresAbsolute )( 
            IResponse __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *pvarExpiresRet);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_ExpiresAbsolute )( 
            IResponse __RPC_FAR * This,
            /* [in] */ DATE dtExpires);
        
        /* [propget][helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Cookies )( 
            IResponse __RPC_FAR * This,
            /* [retval][out] */ IRequestDictionary __RPC_FAR *__RPC_FAR *ppCookies);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Status )( 
            IResponse __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pbstrStatusRet);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Status )( 
            IResponse __RPC_FAR * This,
            /* [in] */ BSTR bstrStatus);
        
        /* [hidden] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Add )( 
            IResponse __RPC_FAR * This,
            /* [in] */ BSTR bstrHeaderValue,
            /* [in] */ BSTR bstrHeaderName);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AddHeader )( 
            IResponse __RPC_FAR * This,
            /* [in] */ BSTR bstrHeaderName,
            /* [in] */ BSTR bstrHeaderValue);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AppendToLog )( 
            IResponse __RPC_FAR * This,
            /* [in] */ BSTR bstrLogEntry);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *BinaryWrite )( 
            IResponse __RPC_FAR * This,
            /* [in] */ VARIANT varInput);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Clear )( 
            IResponse __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *End )( 
            IResponse __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Flush )( 
            IResponse __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Redirect )( 
            IResponse __RPC_FAR * This,
            /* [in] */ BSTR bstrURL);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Write )( 
            IResponse __RPC_FAR * This,
            /* [in] */ VARIANT varText);
        
        /* [hidden] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *WriteBlock )( 
            IResponse __RPC_FAR * This,
            /* [in] */ short iBlockNumber);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *IsClientConnected )( 
            IResponse __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pfIsClientConnected);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_CharSet )( 
            IResponse __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pbstrCharSetRet);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_CharSet )( 
            IResponse __RPC_FAR * This,
            /* [in] */ BSTR bstrCharSet);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Pics )( 
            IResponse __RPC_FAR * This,
            /* [in] */ BSTR bstrHeaderValue);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_CacheControl )( 
            IResponse __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pbstrCacheControl);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_CacheControl )( 
            IResponse __RPC_FAR * This,
            /* [in] */ BSTR bstrCacheControl);
        
        END_INTERFACE
    } IResponseVtbl;

    interface IResponse
    {
        CONST_VTBL struct IResponseVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IResponse_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IResponse_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IResponse_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IResponse_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IResponse_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IResponse_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IResponse_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IResponse_get_Buffer(This,fIsBuffering)	\
    (This)->lpVtbl -> get_Buffer(This,fIsBuffering)

#define IResponse_put_Buffer(This,fIsBuffering)	\
    (This)->lpVtbl -> put_Buffer(This,fIsBuffering)

#define IResponse_get_ContentType(This,pbstrContentTypeRet)	\
    (This)->lpVtbl -> get_ContentType(This,pbstrContentTypeRet)

#define IResponse_put_ContentType(This,bstrContentType)	\
    (This)->lpVtbl -> put_ContentType(This,bstrContentType)

#define IResponse_get_Expires(This,pvarExpiresMinutesRet)	\
    (This)->lpVtbl -> get_Expires(This,pvarExpiresMinutesRet)

#define IResponse_put_Expires(This,lExpiresMinutes)	\
    (This)->lpVtbl -> put_Expires(This,lExpiresMinutes)

#define IResponse_get_ExpiresAbsolute(This,pvarExpiresRet)	\
    (This)->lpVtbl -> get_ExpiresAbsolute(This,pvarExpiresRet)

#define IResponse_put_ExpiresAbsolute(This,dtExpires)	\
    (This)->lpVtbl -> put_ExpiresAbsolute(This,dtExpires)

#define IResponse_get_Cookies(This,ppCookies)	\
    (This)->lpVtbl -> get_Cookies(This,ppCookies)

#define IResponse_get_Status(This,pbstrStatusRet)	\
    (This)->lpVtbl -> get_Status(This,pbstrStatusRet)

#define IResponse_put_Status(This,bstrStatus)	\
    (This)->lpVtbl -> put_Status(This,bstrStatus)

#define IResponse_Add(This,bstrHeaderValue,bstrHeaderName)	\
    (This)->lpVtbl -> Add(This,bstrHeaderValue,bstrHeaderName)

#define IResponse_AddHeader(This,bstrHeaderName,bstrHeaderValue)	\
    (This)->lpVtbl -> AddHeader(This,bstrHeaderName,bstrHeaderValue)

#define IResponse_AppendToLog(This,bstrLogEntry)	\
    (This)->lpVtbl -> AppendToLog(This,bstrLogEntry)

#define IResponse_BinaryWrite(This,varInput)	\
    (This)->lpVtbl -> BinaryWrite(This,varInput)

#define IResponse_Clear(This)	\
    (This)->lpVtbl -> Clear(This)

#define IResponse_End(This)	\
    (This)->lpVtbl -> End(This)

#define IResponse_Flush(This)	\
    (This)->lpVtbl -> Flush(This)

#define IResponse_Redirect(This,bstrURL)	\
    (This)->lpVtbl -> Redirect(This,bstrURL)

#define IResponse_Write(This,varText)	\
    (This)->lpVtbl -> Write(This,varText)

#define IResponse_WriteBlock(This,iBlockNumber)	\
    (This)->lpVtbl -> WriteBlock(This,iBlockNumber)

#define IResponse_IsClientConnected(This,pfIsClientConnected)	\
    (This)->lpVtbl -> IsClientConnected(This,pfIsClientConnected)

#define IResponse_get_CharSet(This,pbstrCharSetRet)	\
    (This)->lpVtbl -> get_CharSet(This,pbstrCharSetRet)

#define IResponse_put_CharSet(This,bstrCharSet)	\
    (This)->lpVtbl -> put_CharSet(This,bstrCharSet)

#define IResponse_Pics(This,bstrHeaderValue)	\
    (This)->lpVtbl -> Pics(This,bstrHeaderValue)

#define IResponse_get_CacheControl(This,pbstrCacheControl)	\
    (This)->lpVtbl -> get_CacheControl(This,pbstrCacheControl)

#define IResponse_put_CacheControl(This,bstrCacheControl)	\
    (This)->lpVtbl -> put_CacheControl(This,bstrCacheControl)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IResponse_get_Buffer_Proxy( 
    IResponse __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *fIsBuffering);


void __RPC_STUB IResponse_get_Buffer_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IResponse_put_Buffer_Proxy( 
    IResponse __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL fIsBuffering);


void __RPC_STUB IResponse_put_Buffer_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IResponse_get_ContentType_Proxy( 
    IResponse __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pbstrContentTypeRet);


void __RPC_STUB IResponse_get_ContentType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IResponse_put_ContentType_Proxy( 
    IResponse __RPC_FAR * This,
    /* [in] */ BSTR bstrContentType);


void __RPC_STUB IResponse_put_ContentType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IResponse_get_Expires_Proxy( 
    IResponse __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *pvarExpiresMinutesRet);


void __RPC_STUB IResponse_get_Expires_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IResponse_put_Expires_Proxy( 
    IResponse __RPC_FAR * This,
    /* [in] */ long lExpiresMinutes);


void __RPC_STUB IResponse_put_Expires_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IResponse_get_ExpiresAbsolute_Proxy( 
    IResponse __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *pvarExpiresRet);


void __RPC_STUB IResponse_get_ExpiresAbsolute_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IResponse_put_ExpiresAbsolute_Proxy( 
    IResponse __RPC_FAR * This,
    /* [in] */ DATE dtExpires);


void __RPC_STUB IResponse_put_ExpiresAbsolute_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][helpstring] */ HRESULT STDMETHODCALLTYPE IResponse_get_Cookies_Proxy( 
    IResponse __RPC_FAR * This,
    /* [retval][out] */ IRequestDictionary __RPC_FAR *__RPC_FAR *ppCookies);


void __RPC_STUB IResponse_get_Cookies_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IResponse_get_Status_Proxy( 
    IResponse __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pbstrStatusRet);


void __RPC_STUB IResponse_get_Status_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IResponse_put_Status_Proxy( 
    IResponse __RPC_FAR * This,
    /* [in] */ BSTR bstrStatus);


void __RPC_STUB IResponse_put_Status_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden] */ HRESULT STDMETHODCALLTYPE IResponse_Add_Proxy( 
    IResponse __RPC_FAR * This,
    /* [in] */ BSTR bstrHeaderValue,
    /* [in] */ BSTR bstrHeaderName);


void __RPC_STUB IResponse_Add_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IResponse_AddHeader_Proxy( 
    IResponse __RPC_FAR * This,
    /* [in] */ BSTR bstrHeaderName,
    /* [in] */ BSTR bstrHeaderValue);


void __RPC_STUB IResponse_AddHeader_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IResponse_AppendToLog_Proxy( 
    IResponse __RPC_FAR * This,
    /* [in] */ BSTR bstrLogEntry);


void __RPC_STUB IResponse_AppendToLog_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IResponse_BinaryWrite_Proxy( 
    IResponse __RPC_FAR * This,
    /* [in] */ VARIANT varInput);


void __RPC_STUB IResponse_BinaryWrite_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IResponse_Clear_Proxy( 
    IResponse __RPC_FAR * This);


void __RPC_STUB IResponse_Clear_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IResponse_End_Proxy( 
    IResponse __RPC_FAR * This);


void __RPC_STUB IResponse_End_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IResponse_Flush_Proxy( 
    IResponse __RPC_FAR * This);


void __RPC_STUB IResponse_Flush_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IResponse_Redirect_Proxy( 
    IResponse __RPC_FAR * This,
    /* [in] */ BSTR bstrURL);


void __RPC_STUB IResponse_Redirect_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IResponse_Write_Proxy( 
    IResponse __RPC_FAR * This,
    /* [in] */ VARIANT varText);


void __RPC_STUB IResponse_Write_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden] */ HRESULT STDMETHODCALLTYPE IResponse_WriteBlock_Proxy( 
    IResponse __RPC_FAR * This,
    /* [in] */ short iBlockNumber);


void __RPC_STUB IResponse_WriteBlock_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IResponse_IsClientConnected_Proxy( 
    IResponse __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pfIsClientConnected);


void __RPC_STUB IResponse_IsClientConnected_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IResponse_get_CharSet_Proxy( 
    IResponse __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pbstrCharSetRet);


void __RPC_STUB IResponse_get_CharSet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IResponse_put_CharSet_Proxy( 
    IResponse __RPC_FAR * This,
    /* [in] */ BSTR bstrCharSet);


void __RPC_STUB IResponse_put_CharSet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IResponse_Pics_Proxy( 
    IResponse __RPC_FAR * This,
    /* [in] */ BSTR bstrHeaderValue);


void __RPC_STUB IResponse_Pics_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IResponse_get_CacheControl_Proxy( 
    IResponse __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pbstrCacheControl);


void __RPC_STUB IResponse_get_CacheControl_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IResponse_put_CacheControl_Proxy( 
    IResponse __RPC_FAR * This,
    /* [in] */ BSTR bstrCacheControl);


void __RPC_STUB IResponse_put_CacheControl_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IResponse_INTERFACE_DEFINED__ */


DEFINE_GUID(CLSID_Response,0x46E19BA0,0x25DD,0x11D0,0xA5,0x5F,0x00,0xA0,0xC9,0x0C,0x20,0x91);

#ifdef __cplusplus

class DECLSPEC_UUID("46E19BA0-25DD-11D0-A55F-00A0C90C2091")
Response;
#endif

#ifndef __IVariantDictionary_INTERFACE_DEFINED__
#define __IVariantDictionary_INTERFACE_DEFINED__

/* interface IVariantDictionary */
/* [object][hidden][dual][oleautomation][helpstring][uuid] */ 


DEFINE_GUID(IID_IVariantDictionary,0x4a7deb90,0xb069,0x11d0,0xb3,0x73,0x00,0xa0,0xc9,0x0c,0x2b,0xd8);

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4a7deb90-b069-11d0-b373-00a0c90c2bd8")
    IVariantDictionary : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT VarKey,
            /* [retval][out] */ VARIANT __RPC_FAR *pvar) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Item( 
            /* [in] */ VARIANT VarKey,
            /* [in] */ VARIANT var) = 0;
        
        virtual /* [propputref][id] */ HRESULT STDMETHODCALLTYPE putref_Item( 
            /* [in] */ VARIANT VarKey,
            /* [in] */ VARIANT var) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Key( 
            /* [in] */ VARIANT VarKey,
            /* [retval][out] */ VARIANT __RPC_FAR *pvar) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ int __RPC_FAR *cStrRet) = 0;
        
        virtual /* [restricted][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppEnumReturn) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ VARIANT VarKey) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE RemoveAll( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVariantDictionaryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IVariantDictionary __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IVariantDictionary __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IVariantDictionary __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IVariantDictionary __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IVariantDictionary __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IVariantDictionary __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IVariantDictionary __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Item )( 
            IVariantDictionary __RPC_FAR * This,
            /* [in] */ VARIANT VarKey,
            /* [retval][out] */ VARIANT __RPC_FAR *pvar);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Item )( 
            IVariantDictionary __RPC_FAR * This,
            /* [in] */ VARIANT VarKey,
            /* [in] */ VARIANT var);
        
        /* [propputref][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *putref_Item )( 
            IVariantDictionary __RPC_FAR * This,
            /* [in] */ VARIANT VarKey,
            /* [in] */ VARIANT var);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Key )( 
            IVariantDictionary __RPC_FAR * This,
            /* [in] */ VARIANT VarKey,
            /* [retval][out] */ VARIANT __RPC_FAR *pvar);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Count )( 
            IVariantDictionary __RPC_FAR * This,
            /* [retval][out] */ int __RPC_FAR *cStrRet);
        
        /* [restricted][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get__NewEnum )( 
            IVariantDictionary __RPC_FAR * This,
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppEnumReturn);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Remove )( 
            IVariantDictionary __RPC_FAR * This,
            /* [in] */ VARIANT VarKey);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RemoveAll )( 
            IVariantDictionary __RPC_FAR * This);
        
        END_INTERFACE
    } IVariantDictionaryVtbl;

    interface IVariantDictionary
    {
        CONST_VTBL struct IVariantDictionaryVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVariantDictionary_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IVariantDictionary_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IVariantDictionary_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IVariantDictionary_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IVariantDictionary_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IVariantDictionary_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IVariantDictionary_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IVariantDictionary_get_Item(This,VarKey,pvar)	\
    (This)->lpVtbl -> get_Item(This,VarKey,pvar)

#define IVariantDictionary_put_Item(This,VarKey,var)	\
    (This)->lpVtbl -> put_Item(This,VarKey,var)

#define IVariantDictionary_putref_Item(This,VarKey,var)	\
    (This)->lpVtbl -> putref_Item(This,VarKey,var)

#define IVariantDictionary_get_Key(This,VarKey,pvar)	\
    (This)->lpVtbl -> get_Key(This,VarKey,pvar)

#define IVariantDictionary_get_Count(This,cStrRet)	\
    (This)->lpVtbl -> get_Count(This,cStrRet)

#define IVariantDictionary_get__NewEnum(This,ppEnumReturn)	\
    (This)->lpVtbl -> get__NewEnum(This,ppEnumReturn)

#define IVariantDictionary_Remove(This,VarKey)	\
    (This)->lpVtbl -> Remove(This,VarKey)

#define IVariantDictionary_RemoveAll(This)	\
    (This)->lpVtbl -> RemoveAll(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [id][propget] */ HRESULT STDMETHODCALLTYPE IVariantDictionary_get_Item_Proxy( 
    IVariantDictionary __RPC_FAR * This,
    /* [in] */ VARIANT VarKey,
    /* [retval][out] */ VARIANT __RPC_FAR *pvar);


void __RPC_STUB IVariantDictionary_get_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IVariantDictionary_put_Item_Proxy( 
    IVariantDictionary __RPC_FAR * This,
    /* [in] */ VARIANT VarKey,
    /* [in] */ VARIANT var);


void __RPC_STUB IVariantDictionary_put_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propputref][id] */ HRESULT STDMETHODCALLTYPE IVariantDictionary_putref_Item_Proxy( 
    IVariantDictionary __RPC_FAR * This,
    /* [in] */ VARIANT VarKey,
    /* [in] */ VARIANT var);


void __RPC_STUB IVariantDictionary_putref_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget] */ HRESULT STDMETHODCALLTYPE IVariantDictionary_get_Key_Proxy( 
    IVariantDictionary __RPC_FAR * This,
    /* [in] */ VARIANT VarKey,
    /* [retval][out] */ VARIANT __RPC_FAR *pvar);


void __RPC_STUB IVariantDictionary_get_Key_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IVariantDictionary_get_Count_Proxy( 
    IVariantDictionary __RPC_FAR * This,
    /* [retval][out] */ int __RPC_FAR *cStrRet);


void __RPC_STUB IVariantDictionary_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [restricted][id][propget] */ HRESULT STDMETHODCALLTYPE IVariantDictionary_get__NewEnum_Proxy( 
    IVariantDictionary __RPC_FAR * This,
    /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppEnumReturn);


void __RPC_STUB IVariantDictionary_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IVariantDictionary_Remove_Proxy( 
    IVariantDictionary __RPC_FAR * This,
    /* [in] */ VARIANT VarKey);


void __RPC_STUB IVariantDictionary_Remove_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IVariantDictionary_RemoveAll_Proxy( 
    IVariantDictionary __RPC_FAR * This);


void __RPC_STUB IVariantDictionary_RemoveAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IVariantDictionary_INTERFACE_DEFINED__ */


#ifndef __ISessionObject_INTERFACE_DEFINED__
#define __ISessionObject_INTERFACE_DEFINED__

/* interface ISessionObject */
/* [object][hidden][oleautomation][dual][uuid] */ 


DEFINE_GUID(IID_ISessionObject,0xD97A6DA0,0xA865,0x11cf,0x83,0xAF,0x00,0xA0,0xC9,0x0C,0x2B,0xD8);

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D97A6DA0-A865-11cf-83AF-00A0C90C2BD8")
    ISessionObject : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_SessionID( 
            /* [retval][out] */ BSTR __RPC_FAR *pbstrRet) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Value( 
            /* [in] */ BSTR bstrValue,
            /* [retval][out] */ VARIANT __RPC_FAR *pvar) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Value( 
            /* [in] */ BSTR bstrValue,
            /* [in] */ VARIANT var) = 0;
        
        virtual /* [propputref][id] */ HRESULT STDMETHODCALLTYPE putref_Value( 
            /* [in] */ BSTR bstrValue,
            /* [in] */ VARIANT var) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Timeout( 
            /* [retval][out] */ long __RPC_FAR *plvar) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Timeout( 
            /* [in] */ long lvar) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Abandon( void) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_CodePage( 
            /* [retval][out] */ long __RPC_FAR *plvar) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CodePage( 
            /* [in] */ long lvar) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_LCID( 
            /* [retval][out] */ long __RPC_FAR *plvar) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_LCID( 
            /* [in] */ long lvar) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_StaticObjects( 
            /* [retval][out] */ IVariantDictionary __RPC_FAR *__RPC_FAR *ppTaggedObjects) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Contents( 
            /* [retval][out] */ IVariantDictionary __RPC_FAR *__RPC_FAR *ppProperties) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ISessionObjectVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            ISessionObject __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            ISessionObject __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            ISessionObject __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            ISessionObject __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            ISessionObject __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            ISessionObject __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            ISessionObject __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SessionID )( 
            ISessionObject __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pbstrRet);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Value )( 
            ISessionObject __RPC_FAR * This,
            /* [in] */ BSTR bstrValue,
            /* [retval][out] */ VARIANT __RPC_FAR *pvar);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Value )( 
            ISessionObject __RPC_FAR * This,
            /* [in] */ BSTR bstrValue,
            /* [in] */ VARIANT var);
        
        /* [propputref][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *putref_Value )( 
            ISessionObject __RPC_FAR * This,
            /* [in] */ BSTR bstrValue,
            /* [in] */ VARIANT var);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Timeout )( 
            ISessionObject __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *plvar);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Timeout )( 
            ISessionObject __RPC_FAR * This,
            /* [in] */ long lvar);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Abandon )( 
            ISessionObject __RPC_FAR * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_CodePage )( 
            ISessionObject __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *plvar);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_CodePage )( 
            ISessionObject __RPC_FAR * This,
            /* [in] */ long lvar);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_LCID )( 
            ISessionObject __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *plvar);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_LCID )( 
            ISessionObject __RPC_FAR * This,
            /* [in] */ long lvar);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_StaticObjects )( 
            ISessionObject __RPC_FAR * This,
            /* [retval][out] */ IVariantDictionary __RPC_FAR *__RPC_FAR *ppTaggedObjects);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Contents )( 
            ISessionObject __RPC_FAR * This,
            /* [retval][out] */ IVariantDictionary __RPC_FAR *__RPC_FAR *ppProperties);
        
        END_INTERFACE
    } ISessionObjectVtbl;

    interface ISessionObject
    {
        CONST_VTBL struct ISessionObjectVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISessionObject_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define ISessionObject_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define ISessionObject_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define ISessionObject_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define ISessionObject_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define ISessionObject_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define ISessionObject_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define ISessionObject_get_SessionID(This,pbstrRet)	\
    (This)->lpVtbl -> get_SessionID(This,pbstrRet)

#define ISessionObject_get_Value(This,bstrValue,pvar)	\
    (This)->lpVtbl -> get_Value(This,bstrValue,pvar)

#define ISessionObject_put_Value(This,bstrValue,var)	\
    (This)->lpVtbl -> put_Value(This,bstrValue,var)

#define ISessionObject_putref_Value(This,bstrValue,var)	\
    (This)->lpVtbl -> putref_Value(This,bstrValue,var)

#define ISessionObject_get_Timeout(This,plvar)	\
    (This)->lpVtbl -> get_Timeout(This,plvar)

#define ISessionObject_put_Timeout(This,lvar)	\
    (This)->lpVtbl -> put_Timeout(This,lvar)

#define ISessionObject_Abandon(This)	\
    (This)->lpVtbl -> Abandon(This)

#define ISessionObject_get_CodePage(This,plvar)	\
    (This)->lpVtbl -> get_CodePage(This,plvar)

#define ISessionObject_put_CodePage(This,lvar)	\
    (This)->lpVtbl -> put_CodePage(This,lvar)

#define ISessionObject_get_LCID(This,plvar)	\
    (This)->lpVtbl -> get_LCID(This,plvar)

#define ISessionObject_put_LCID(This,lvar)	\
    (This)->lpVtbl -> put_LCID(This,lvar)

#define ISessionObject_get_StaticObjects(This,ppTaggedObjects)	\
    (This)->lpVtbl -> get_StaticObjects(This,ppTaggedObjects)

#define ISessionObject_get_Contents(This,ppProperties)	\
    (This)->lpVtbl -> get_Contents(This,ppProperties)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE ISessionObject_get_SessionID_Proxy( 
    ISessionObject __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pbstrRet);


void __RPC_STUB ISessionObject_get_SessionID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE ISessionObject_get_Value_Proxy( 
    ISessionObject __RPC_FAR * This,
    /* [in] */ BSTR bstrValue,
    /* [retval][out] */ VARIANT __RPC_FAR *pvar);


void __RPC_STUB ISessionObject_get_Value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE ISessionObject_put_Value_Proxy( 
    ISessionObject __RPC_FAR * This,
    /* [in] */ BSTR bstrValue,
    /* [in] */ VARIANT var);


void __RPC_STUB ISessionObject_put_Value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propputref][id] */ HRESULT STDMETHODCALLTYPE ISessionObject_putref_Value_Proxy( 
    ISessionObject __RPC_FAR * This,
    /* [in] */ BSTR bstrValue,
    /* [in] */ VARIANT var);


void __RPC_STUB ISessionObject_putref_Value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE ISessionObject_get_Timeout_Proxy( 
    ISessionObject __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *plvar);


void __RPC_STUB ISessionObject_get_Timeout_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE ISessionObject_put_Timeout_Proxy( 
    ISessionObject __RPC_FAR * This,
    /* [in] */ long lvar);


void __RPC_STUB ISessionObject_put_Timeout_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE ISessionObject_Abandon_Proxy( 
    ISessionObject __RPC_FAR * This);


void __RPC_STUB ISessionObject_Abandon_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE ISessionObject_get_CodePage_Proxy( 
    ISessionObject __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *plvar);


void __RPC_STUB ISessionObject_get_CodePage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE ISessionObject_put_CodePage_Proxy( 
    ISessionObject __RPC_FAR * This,
    /* [in] */ long lvar);


void __RPC_STUB ISessionObject_put_CodePage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE ISessionObject_get_LCID_Proxy( 
    ISessionObject __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *plvar);


void __RPC_STUB ISessionObject_get_LCID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE ISessionObject_put_LCID_Proxy( 
    ISessionObject __RPC_FAR * This,
    /* [in] */ long lvar);


void __RPC_STUB ISessionObject_put_LCID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE ISessionObject_get_StaticObjects_Proxy( 
    ISessionObject __RPC_FAR * This,
    /* [retval][out] */ IVariantDictionary __RPC_FAR *__RPC_FAR *ppTaggedObjects);


void __RPC_STUB ISessionObject_get_StaticObjects_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE ISessionObject_get_Contents_Proxy( 
    ISessionObject __RPC_FAR * This,
    /* [retval][out] */ IVariantDictionary __RPC_FAR *__RPC_FAR *ppProperties);


void __RPC_STUB ISessionObject_get_Contents_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __ISessionObject_INTERFACE_DEFINED__ */


DEFINE_GUID(CLSID_Session,0x509F8F20,0x25DE,0x11D0,0xA5,0x5F,0x00,0xA0,0xC9,0x0C,0x20,0x91);

#ifdef __cplusplus

class DECLSPEC_UUID("509F8F20-25DE-11D0-A55F-00A0C90C2091")
Session;
#endif

#ifndef __IApplicationObject_INTERFACE_DEFINED__
#define __IApplicationObject_INTERFACE_DEFINED__

/* interface IApplicationObject */
/* [object][hidden][dual][oleautomation][uuid] */ 


DEFINE_GUID(IID_IApplicationObject,0xD97A6DA0,0xA866,0x11cf,0x83,0xAE,0x10,0xA0,0xC9,0x0C,0x2B,0xD8);

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D97A6DA0-A866-11cf-83AE-10A0C90C2BD8")
    IApplicationObject : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Value( 
            /* [in] */ BSTR bstrValue,
            /* [retval][out] */ VARIANT __RPC_FAR *pvar) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Value( 
            /* [in] */ BSTR bstrValue,
            /* [in] */ VARIANT var) = 0;
        
        virtual /* [propputref][id] */ HRESULT STDMETHODCALLTYPE putref_Value( 
            /* [in] */ BSTR bstrValue,
            /* [in] */ VARIANT var) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Lock( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE UnLock( void) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_StaticObjects( 
            /* [retval][out] */ IVariantDictionary __RPC_FAR *__RPC_FAR *ppProperties) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Contents( 
            /* [retval][out] */ IVariantDictionary __RPC_FAR *__RPC_FAR *ppProperties) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IApplicationObjectVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IApplicationObject __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IApplicationObject __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IApplicationObject __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IApplicationObject __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IApplicationObject __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IApplicationObject __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IApplicationObject __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Value )( 
            IApplicationObject __RPC_FAR * This,
            /* [in] */ BSTR bstrValue,
            /* [retval][out] */ VARIANT __RPC_FAR *pvar);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Value )( 
            IApplicationObject __RPC_FAR * This,
            /* [in] */ BSTR bstrValue,
            /* [in] */ VARIANT var);
        
        /* [propputref][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *putref_Value )( 
            IApplicationObject __RPC_FAR * This,
            /* [in] */ BSTR bstrValue,
            /* [in] */ VARIANT var);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Lock )( 
            IApplicationObject __RPC_FAR * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *UnLock )( 
            IApplicationObject __RPC_FAR * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_StaticObjects )( 
            IApplicationObject __RPC_FAR * This,
            /* [retval][out] */ IVariantDictionary __RPC_FAR *__RPC_FAR *ppProperties);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Contents )( 
            IApplicationObject __RPC_FAR * This,
            /* [retval][out] */ IVariantDictionary __RPC_FAR *__RPC_FAR *ppProperties);
        
        END_INTERFACE
    } IApplicationObjectVtbl;

    interface IApplicationObject
    {
        CONST_VTBL struct IApplicationObjectVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IApplicationObject_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IApplicationObject_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IApplicationObject_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IApplicationObject_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IApplicationObject_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IApplicationObject_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IApplicationObject_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IApplicationObject_get_Value(This,bstrValue,pvar)	\
    (This)->lpVtbl -> get_Value(This,bstrValue,pvar)

#define IApplicationObject_put_Value(This,bstrValue,var)	\
    (This)->lpVtbl -> put_Value(This,bstrValue,var)

#define IApplicationObject_putref_Value(This,bstrValue,var)	\
    (This)->lpVtbl -> putref_Value(This,bstrValue,var)

#define IApplicationObject_Lock(This)	\
    (This)->lpVtbl -> Lock(This)

#define IApplicationObject_UnLock(This)	\
    (This)->lpVtbl -> UnLock(This)

#define IApplicationObject_get_StaticObjects(This,ppProperties)	\
    (This)->lpVtbl -> get_StaticObjects(This,ppProperties)

#define IApplicationObject_get_Contents(This,ppProperties)	\
    (This)->lpVtbl -> get_Contents(This,ppProperties)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propget][id] */ HRESULT STDMETHODCALLTYPE IApplicationObject_get_Value_Proxy( 
    IApplicationObject __RPC_FAR * This,
    /* [in] */ BSTR bstrValue,
    /* [retval][out] */ VARIANT __RPC_FAR *pvar);


void __RPC_STUB IApplicationObject_get_Value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IApplicationObject_put_Value_Proxy( 
    IApplicationObject __RPC_FAR * This,
    /* [in] */ BSTR bstrValue,
    /* [in] */ VARIANT var);


void __RPC_STUB IApplicationObject_put_Value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propputref][id] */ HRESULT STDMETHODCALLTYPE IApplicationObject_putref_Value_Proxy( 
    IApplicationObject __RPC_FAR * This,
    /* [in] */ BSTR bstrValue,
    /* [in] */ VARIANT var);


void __RPC_STUB IApplicationObject_putref_Value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IApplicationObject_Lock_Proxy( 
    IApplicationObject __RPC_FAR * This);


void __RPC_STUB IApplicationObject_Lock_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IApplicationObject_UnLock_Proxy( 
    IApplicationObject __RPC_FAR * This);


void __RPC_STUB IApplicationObject_UnLock_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IApplicationObject_get_StaticObjects_Proxy( 
    IApplicationObject __RPC_FAR * This,
    /* [retval][out] */ IVariantDictionary __RPC_FAR *__RPC_FAR *ppProperties);


void __RPC_STUB IApplicationObject_get_StaticObjects_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IApplicationObject_get_Contents_Proxy( 
    IApplicationObject __RPC_FAR * This,
    /* [retval][out] */ IVariantDictionary __RPC_FAR *__RPC_FAR *ppProperties);


void __RPC_STUB IApplicationObject_get_Contents_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IApplicationObject_INTERFACE_DEFINED__ */


DEFINE_GUID(CLSID_Application,0x7C3BAF00,0x25DE,0x11D0,0xA5,0x5F,0x00,0xA0,0xC9,0x0C,0x20,0x91);

#ifdef __cplusplus

class DECLSPEC_UUID("7C3BAF00-25DE-11D0-A55F-00A0C90C2091")
Application;
#endif

#ifndef __IASPError_INTERFACE_DEFINED__
#define __IASPError_INTERFACE_DEFINED__

/* interface IASPError */
/* [object][hidden][dual][oleautomation][helpstring][uuid] */ 


DEFINE_GUID(IID_IASPError,0xF5A6893E,0xA0F5,0x11d1,0x8C,0x4B,0x00,0xC0,0x4F,0xC3,0x24,0xA4);

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F5A6893E-A0F5-11d1-8C4B-00C04FC324A4")
    IASPError : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ASPCode( 
            /* [retval][out] */ BSTR __RPC_FAR *pbstrASPCode) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Number( 
            /* [retval][out] */ long __RPC_FAR *plNumber) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Category( 
            /* [retval][out] */ BSTR __RPC_FAR *pbstrSource) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_File( 
            /* [retval][out] */ BSTR __RPC_FAR *pbstrFileName) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Line( 
            /* [retval][out] */ long __RPC_FAR *plLineNumber) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Description( 
            /* [retval][out] */ BSTR __RPC_FAR *pbstrDescription) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ASPDescription( 
            /* [retval][out] */ BSTR __RPC_FAR *pbstrDescription) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Column( 
            /* [retval][out] */ long __RPC_FAR *plColumn) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Source( 
            /* [retval][out] */ BSTR __RPC_FAR *pbstrLineText) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IASPErrorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IASPError __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IASPError __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IASPError __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IASPError __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IASPError __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IASPError __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IASPError __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ASPCode )( 
            IASPError __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pbstrASPCode);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Number )( 
            IASPError __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *plNumber);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Category )( 
            IASPError __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pbstrSource);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_File )( 
            IASPError __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pbstrFileName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Line )( 
            IASPError __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *plLineNumber);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Description )( 
            IASPError __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pbstrDescription);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ASPDescription )( 
            IASPError __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pbstrDescription);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Column )( 
            IASPError __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *plColumn);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Source )( 
            IASPError __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pbstrLineText);
        
        END_INTERFACE
    } IASPErrorVtbl;

    interface IASPError
    {
        CONST_VTBL struct IASPErrorVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IASPError_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IASPError_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IASPError_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IASPError_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IASPError_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IASPError_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IASPError_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IASPError_get_ASPCode(This,pbstrASPCode)	\
    (This)->lpVtbl -> get_ASPCode(This,pbstrASPCode)

#define IASPError_get_Number(This,plNumber)	\
    (This)->lpVtbl -> get_Number(This,plNumber)

#define IASPError_get_Category(This,pbstrSource)	\
    (This)->lpVtbl -> get_Category(This,pbstrSource)

#define IASPError_get_File(This,pbstrFileName)	\
    (This)->lpVtbl -> get_File(This,pbstrFileName)

#define IASPError_get_Line(This,plLineNumber)	\
    (This)->lpVtbl -> get_Line(This,plLineNumber)

#define IASPError_get_Description(This,pbstrDescription)	\
    (This)->lpVtbl -> get_Description(This,pbstrDescription)

#define IASPError_get_ASPDescription(This,pbstrDescription)	\
    (This)->lpVtbl -> get_ASPDescription(This,pbstrDescription)

#define IASPError_get_Column(This,plColumn)	\
    (This)->lpVtbl -> get_Column(This,plColumn)

#define IASPError_get_Source(This,pbstrLineText)	\
    (This)->lpVtbl -> get_Source(This,pbstrLineText)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IASPError_get_ASPCode_Proxy( 
    IASPError __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pbstrASPCode);


void __RPC_STUB IASPError_get_ASPCode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IASPError_get_Number_Proxy( 
    IASPError __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *plNumber);


void __RPC_STUB IASPError_get_Number_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IASPError_get_Category_Proxy( 
    IASPError __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pbstrSource);


void __RPC_STUB IASPError_get_Category_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IASPError_get_File_Proxy( 
    IASPError __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pbstrFileName);


void __RPC_STUB IASPError_get_File_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IASPError_get_Line_Proxy( 
    IASPError __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *plLineNumber);


void __RPC_STUB IASPError_get_Line_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IASPError_get_Description_Proxy( 
    IASPError __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pbstrDescription);


void __RPC_STUB IASPError_get_Description_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IASPError_get_ASPDescription_Proxy( 
    IASPError __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pbstrDescription);


void __RPC_STUB IASPError_get_ASPDescription_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IASPError_get_Column_Proxy( 
    IASPError __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *plColumn);


void __RPC_STUB IASPError_get_Column_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IASPError_get_Source_Proxy( 
    IASPError __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pbstrLineText);


void __RPC_STUB IASPError_get_Source_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IASPError_INTERFACE_DEFINED__ */


#ifndef __IServer_INTERFACE_DEFINED__
#define __IServer_INTERFACE_DEFINED__

/* interface IServer */
/* [object][hidden][dual][oleautomation][uuid] */ 


DEFINE_GUID(IID_IServer,0xD97A6DA0,0xA867,0x11cf,0x83,0xAE,0x01,0xA0,0xC9,0x0C,0x2B,0xD8);

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D97A6DA0-A867-11cf-83AE-01A0C90C2BD8")
    IServer : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ScriptTimeout( 
            /* [retval][out] */ long __RPC_FAR *plTimeoutSeconds) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ScriptTimeout( 
            /* [in] */ long lTimeoutSeconds) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CreateObject( 
            /* [in] */ BSTR bstrProgID,
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppDispObject) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE HTMLEncode( 
            /* [in] */ BSTR bstrIn,
            /* [retval][out] */ BSTR __RPC_FAR *pbstrEncoded) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE MapPath( 
            /* [in] */ BSTR bstrLogicalPath,
            /* [retval][out] */ BSTR __RPC_FAR *pbstrPhysicalPath) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE URLEncode( 
            /* [in] */ BSTR bstrIn,
            /* [retval][out] */ BSTR __RPC_FAR *pbstrEncoded) = 0;
        
        virtual /* [hidden] */ HRESULT STDMETHODCALLTYPE URLPathEncode( 
            /* [in] */ BSTR bstrIn,
            /* [retval][out] */ BSTR __RPC_FAR *pbstrEncoded) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Execute( 
            /* [in] */ BSTR bstrLogicalPath) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Transfer( 
            /* [in] */ BSTR bstrLogicalPath) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetLastError( 
            /* [retval][out] */ IASPError __RPC_FAR *__RPC_FAR *ppASPErrorObject) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IServerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IServer __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IServer __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IServer __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IServer __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IServer __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IServer __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IServer __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ScriptTimeout )( 
            IServer __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *plTimeoutSeconds);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_ScriptTimeout )( 
            IServer __RPC_FAR * This,
            /* [in] */ long lTimeoutSeconds);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CreateObject )( 
            IServer __RPC_FAR * This,
            /* [in] */ BSTR bstrProgID,
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppDispObject);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *HTMLEncode )( 
            IServer __RPC_FAR * This,
            /* [in] */ BSTR bstrIn,
            /* [retval][out] */ BSTR __RPC_FAR *pbstrEncoded);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *MapPath )( 
            IServer __RPC_FAR * This,
            /* [in] */ BSTR bstrLogicalPath,
            /* [retval][out] */ BSTR __RPC_FAR *pbstrPhysicalPath);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *URLEncode )( 
            IServer __RPC_FAR * This,
            /* [in] */ BSTR bstrIn,
            /* [retval][out] */ BSTR __RPC_FAR *pbstrEncoded);
        
        /* [hidden] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *URLPathEncode )( 
            IServer __RPC_FAR * This,
            /* [in] */ BSTR bstrIn,
            /* [retval][out] */ BSTR __RPC_FAR *pbstrEncoded);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Execute )( 
            IServer __RPC_FAR * This,
            /* [in] */ BSTR bstrLogicalPath);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Transfer )( 
            IServer __RPC_FAR * This,
            /* [in] */ BSTR bstrLogicalPath);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetLastError )( 
            IServer __RPC_FAR * This,
            /* [retval][out] */ IASPError __RPC_FAR *__RPC_FAR *ppASPErrorObject);
        
        END_INTERFACE
    } IServerVtbl;

    interface IServer
    {
        CONST_VTBL struct IServerVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IServer_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IServer_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IServer_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IServer_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IServer_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IServer_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IServer_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IServer_get_ScriptTimeout(This,plTimeoutSeconds)	\
    (This)->lpVtbl -> get_ScriptTimeout(This,plTimeoutSeconds)

#define IServer_put_ScriptTimeout(This,lTimeoutSeconds)	\
    (This)->lpVtbl -> put_ScriptTimeout(This,lTimeoutSeconds)

#define IServer_CreateObject(This,bstrProgID,ppDispObject)	\
    (This)->lpVtbl -> CreateObject(This,bstrProgID,ppDispObject)

#define IServer_HTMLEncode(This,bstrIn,pbstrEncoded)	\
    (This)->lpVtbl -> HTMLEncode(This,bstrIn,pbstrEncoded)

#define IServer_MapPath(This,bstrLogicalPath,pbstrPhysicalPath)	\
    (This)->lpVtbl -> MapPath(This,bstrLogicalPath,pbstrPhysicalPath)

#define IServer_URLEncode(This,bstrIn,pbstrEncoded)	\
    (This)->lpVtbl -> URLEncode(This,bstrIn,pbstrEncoded)

#define IServer_URLPathEncode(This,bstrIn,pbstrEncoded)	\
    (This)->lpVtbl -> URLPathEncode(This,bstrIn,pbstrEncoded)

#define IServer_Execute(This,bstrLogicalPath)	\
    (This)->lpVtbl -> Execute(This,bstrLogicalPath)

#define IServer_Transfer(This,bstrLogicalPath)	\
    (This)->lpVtbl -> Transfer(This,bstrLogicalPath)

#define IServer_GetLastError(This,ppASPErrorObject)	\
    (This)->lpVtbl -> GetLastError(This,ppASPErrorObject)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IServer_get_ScriptTimeout_Proxy( 
    IServer __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *plTimeoutSeconds);


void __RPC_STUB IServer_get_ScriptTimeout_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IServer_put_ScriptTimeout_Proxy( 
    IServer __RPC_FAR * This,
    /* [in] */ long lTimeoutSeconds);


void __RPC_STUB IServer_put_ScriptTimeout_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IServer_CreateObject_Proxy( 
    IServer __RPC_FAR * This,
    /* [in] */ BSTR bstrProgID,
    /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppDispObject);


void __RPC_STUB IServer_CreateObject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IServer_HTMLEncode_Proxy( 
    IServer __RPC_FAR * This,
    /* [in] */ BSTR bstrIn,
    /* [retval][out] */ BSTR __RPC_FAR *pbstrEncoded);


void __RPC_STUB IServer_HTMLEncode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IServer_MapPath_Proxy( 
    IServer __RPC_FAR * This,
    /* [in] */ BSTR bstrLogicalPath,
    /* [retval][out] */ BSTR __RPC_FAR *pbstrPhysicalPath);


void __RPC_STUB IServer_MapPath_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IServer_URLEncode_Proxy( 
    IServer __RPC_FAR * This,
    /* [in] */ BSTR bstrIn,
    /* [retval][out] */ BSTR __RPC_FAR *pbstrEncoded);


void __RPC_STUB IServer_URLEncode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden] */ HRESULT STDMETHODCALLTYPE IServer_URLPathEncode_Proxy( 
    IServer __RPC_FAR * This,
    /* [in] */ BSTR bstrIn,
    /* [retval][out] */ BSTR __RPC_FAR *pbstrEncoded);


void __RPC_STUB IServer_URLPathEncode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IServer_Execute_Proxy( 
    IServer __RPC_FAR * This,
    /* [in] */ BSTR bstrLogicalPath);


void __RPC_STUB IServer_Execute_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IServer_Transfer_Proxy( 
    IServer __RPC_FAR * This,
    /* [in] */ BSTR bstrLogicalPath);


void __RPC_STUB IServer_Transfer_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IServer_GetLastError_Proxy( 
    IServer __RPC_FAR * This,
    /* [retval][out] */ IASPError __RPC_FAR *__RPC_FAR *ppASPErrorObject);


void __RPC_STUB IServer_GetLastError_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IServer_INTERFACE_DEFINED__ */


DEFINE_GUID(CLSID_Server,0xA506D160,0x25E0,0x11D0,0xA5,0x5F,0x00,0xA0,0xC9,0x0C,0x20,0x91);

#ifdef __cplusplus

class DECLSPEC_UUID("A506D160-25E0-11D0-A55F-00A0C90C2091")
Server;
#endif

#ifndef __IScriptingContext_INTERFACE_DEFINED__
#define __IScriptingContext_INTERFACE_DEFINED__

/* interface IScriptingContext */
/* [object][hidden][dual][oleautomation][helpstring][uuid] */ 


DEFINE_GUID(IID_IScriptingContext,0xD97A6DA0,0xA868,0x11cf,0x83,0xAE,0x00,0xB0,0xC9,0x0C,0x2B,0xD8);

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D97A6DA0-A868-11cf-83AE-00B0C90C2BD8")
    IScriptingContext : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Request( 
            /* [retval][out] */ IRequest __RPC_FAR *__RPC_FAR *ppRequest) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Response( 
            /* [retval][out] */ IResponse __RPC_FAR *__RPC_FAR *ppResponse) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Server( 
            /* [retval][out] */ IServer __RPC_FAR *__RPC_FAR *ppServer) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ ISessionObject __RPC_FAR *__RPC_FAR *ppSession) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IApplicationObject __RPC_FAR *__RPC_FAR *ppApplication) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IScriptingContextVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IScriptingContext __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IScriptingContext __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IScriptingContext __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IScriptingContext __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IScriptingContext __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IScriptingContext __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IScriptingContext __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Request )( 
            IScriptingContext __RPC_FAR * This,
            /* [retval][out] */ IRequest __RPC_FAR *__RPC_FAR *ppRequest);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Response )( 
            IScriptingContext __RPC_FAR * This,
            /* [retval][out] */ IResponse __RPC_FAR *__RPC_FAR *ppResponse);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Server )( 
            IScriptingContext __RPC_FAR * This,
            /* [retval][out] */ IServer __RPC_FAR *__RPC_FAR *ppServer);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Session )( 
            IScriptingContext __RPC_FAR * This,
            /* [retval][out] */ ISessionObject __RPC_FAR *__RPC_FAR *ppSession);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Application )( 
            IScriptingContext __RPC_FAR * This,
            /* [retval][out] */ IApplicationObject __RPC_FAR *__RPC_FAR *ppApplication);
        
        END_INTERFACE
    } IScriptingContextVtbl;

    interface IScriptingContext
    {
        CONST_VTBL struct IScriptingContextVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IScriptingContext_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IScriptingContext_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IScriptingContext_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IScriptingContext_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IScriptingContext_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IScriptingContext_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IScriptingContext_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IScriptingContext_get_Request(This,ppRequest)	\
    (This)->lpVtbl -> get_Request(This,ppRequest)

#define IScriptingContext_get_Response(This,ppResponse)	\
    (This)->lpVtbl -> get_Response(This,ppResponse)

#define IScriptingContext_get_Server(This,ppServer)	\
    (This)->lpVtbl -> get_Server(This,ppServer)

#define IScriptingContext_get_Session(This,ppSession)	\
    (This)->lpVtbl -> get_Session(This,ppSession)

#define IScriptingContext_get_Application(This,ppApplication)	\
    (This)->lpVtbl -> get_Application(This,ppApplication)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IScriptingContext_get_Request_Proxy( 
    IScriptingContext __RPC_FAR * This,
    /* [retval][out] */ IRequest __RPC_FAR *__RPC_FAR *ppRequest);


void __RPC_STUB IScriptingContext_get_Request_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IScriptingContext_get_Response_Proxy( 
    IScriptingContext __RPC_FAR * This,
    /* [retval][out] */ IResponse __RPC_FAR *__RPC_FAR *ppResponse);


void __RPC_STUB IScriptingContext_get_Response_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IScriptingContext_get_Server_Proxy( 
    IScriptingContext __RPC_FAR * This,
    /* [retval][out] */ IServer __RPC_FAR *__RPC_FAR *ppServer);


void __RPC_STUB IScriptingContext_get_Server_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IScriptingContext_get_Session_Proxy( 
    IScriptingContext __RPC_FAR * This,
    /* [retval][out] */ ISessionObject __RPC_FAR *__RPC_FAR *ppSession);


void __RPC_STUB IScriptingContext_get_Session_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IScriptingContext_get_Application_Proxy( 
    IScriptingContext __RPC_FAR * This,
    /* [retval][out] */ IApplicationObject __RPC_FAR *__RPC_FAR *ppApplication);


void __RPC_STUB IScriptingContext_get_Application_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IScriptingContext_INTERFACE_DEFINED__ */


DEFINE_GUID(CLSID_ScriptingContext,0xD97A6DA0,0xA868,0x11cf,0x83,0xAE,0x11,0xB0,0xC9,0x0C,0x2B,0xD8);

#ifdef __cplusplus

class DECLSPEC_UUID("D97A6DA0-A868-11cf-83AE-11B0C90C2BD8")
ScriptingContext;
#endif
#endif /* __ASPTypeLibrary_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\vc7addon\devtools\common\win32sdk\include\aqadmtyp.h ===
/*
        @doc ADVANCED QUEUEING DATA TYPES
        @module aqadmtyp.h | Data types used in advanced queueing interfaces
*/

/*++/

Copyright (c) 1999  Microsoft Corporation

Module Name:

    aqadmtyp.h

Abstract:

    This module defines data types used in advanced queueing interfaces


--*/
#ifndef __AQADMTYP_H__
#define __AQADMTYP_H__

#ifdef __midl
#define MIDL(x) x
#else
#define MIDL(x)
#endif

// max *required* size of buffer returned by implementor of QAPI
// If the size of the requested information exceeds this constant,
// then QAPI *may* truncate the buffer.
#define QUEUE_ADMIN_MAX_BUFFER_REQUIRED  200

// @enum QUEUE_ADMIN_VERSIONS | Enum specify current and supported
//  queue admin versions.
// @emem CURRENT_QUEUE_ADMIN_VERSION | The current queue admin version
//  that all structures should have this value in their dwVersion field.
typedef enum tagQUEUE_ADMIN_VERSIONS {
    CURRENT_QUEUE_ADMIN_VERSION = 4,
} QUEUE_ADMIN_VERSIONS;


// 
// @struct MESSAGE_FILTER | Structure describing criteria for selecting 
// messages
// @field DWORD | dwVersion | Version of MESSAGE_FILTER struct - must be CURRENT_QUEUE_ADMIN_VERSION
// @field DWORD | fFlags | <t MESSAGE_FILTER_FLAGS> indicating which 
//  fields of filter are specified
// @field LPCWSTR | szMessageId | Message ID, as returned in a MESSAGE_INFO 
// struct
// @field LPCWSTR | szMessageSender | Messages sent by this sender match
// @field LPCWSTR | szMessageRecipient | Messages sent to this recipient match
// @field DWORD | dwLargerThanSize | Messages larger than this value match
// @field SYSTEMTIME | stOlderThan | Messages older than this value match
//
typedef struct tagMESSAGE_FILTER {
                    DWORD dwVersion; 
                    DWORD fFlags;
    MIDL([string])  LPCWSTR szMessageId;
    MIDL([string])  LPCWSTR szMessageSender;
    MIDL([string])  LPCWSTR szMessageRecipient;
                    DWORD  dwLargerThanSize;
                    SYSTEMTIME stOlderThan;
} MESSAGE_FILTER, *PMESSAGE_FILTER;

// @enum MESSAGE_FILTER_FLAGS | Type specifying the type of filter 
// requested.  These are bitflags and can be OR'd together.
// @emem MF_MESSAGEID | The <e MESSAGE_FILTER.szMessageId> is specified
// @emem MF_SENDER | The <e MESSAGE_FILTER.szMessageSender> is specified
// @emem MF_RECIPIENT | The <e MESSAGE_FILTER.szMessageRecipient> is specified
// @emem MF_SIZE | The <e MESSAGE_FILTER.dwLargerThanSize> is specified
// @emem MF_TIME | The <e MESSAGE_FILTER.stOlderThan> is specified
// @emem MF_FROZEN | The <e MESSAGE_FILTER.fFrozen> is specified
// @emem MF_FAILED | Selects messages that have had a failed delivery attempt
// @emem MF_INVERTSENSE | If set, indicates that the negation of the filter
// @emem MF_ALL | Select all messages
typedef enum tagMESSAGE_FILTER_FLAGS {
                    MF_MESSAGEID                = 0x00000001,
                    MF_SENDER                   = 0x00000002,
                    MF_RECIPIENT                = 0x00000004,
                    MF_SIZE                     = 0x00000008,
                    MF_TIME                     = 0x00000010,
                    MF_FROZEN                   = 0x00000020,
                    MF_FAILED                   = 0x00000100,
                    MF_ALL                      = 0x40000000,
                    MF_INVERTSENSE              = 0x80000000
} MESSAGE_FILTER_FLAGS;

// @enum MESSAGE_ACTION | Type specifying possible administrative actions
//      that may be applied to messages in a virtual server, link, or queue
// @emem MA_DELETE | Remove message from the virtual server, link, or queue
// @emem MA_DELETE_SILENT | Remove message without generating an NDR
// @emem MA_FREEZE | Freeze the message in the virtual server, link, or queue
// @emem MA_THAW | Un-freeze the message in the virtual server, link, or queue
// @emem MA_COUNT | Null operation, does not affect messages, but does return count.
typedef enum tagMESSAGE_ACTION {
                    MA_THAW_GLOBAL              = 0x00000001, 
                    MA_COUNT                    = 0x00000002,
                    MA_FREEZE_GLOBAL            = 0x00000004,
            		MA_DELETE                   = 0x00000008,
                    MA_DELETE_SILENT            = 0x00000010
} MESSAGE_ACTION;

// @enum MESSAGE_ENUM_FILTER_TYPE | Type specifying the type of filter 
// requested.  These are bitflags and can be OR'd together.
// @emem MEF_FIRST_N_MESSAGES | Return the first 
// <e MESSAGE_ENUM_FILTER.cMessages> messages
// @emem MEF_N_LARGEST_MESSAGES | Return the largest 
// <e MESSAGE_ENUM_FILTER.cMessages> messages
// @emem MEF_N_OLDEST_MESSAGES | Return the oldest
// <e MESSAGE_ENUM_FILTER.cMessages> messages
// @emem MF_SENDER | The <e MESSAGE_ENUM_FILTER.szMessageSender> is specified
// @emem MF_RECIPIENT | The <e MESSAGE_ENUM_FILTER.szMessageRecipient> is specified
// @emem MEF_OLDER_THAN | Return messages older than 
// <e MESSAGE_ENUM_FILTER.stDate>
// @emem MEF_LARGER_THAN | Return messages larger than 
// <e MESSAGE_ENUM_FILTER.cbSize> bytes
// @emem MEF_FROZEN | Return messages that are frozen
// @emem MEF_INVERTSENSE  | Invert the meaning of the filter
// @emem MEF_ALL | Select all messages
// @emem MEF_FAILED | Return only messages that have had failed delivery
// attempts.
typedef enum tagMESSAGE_ENUM_FILTER_TYPE {
                    MEF_FIRST_N_MESSAGES        = 0x00000001,
                    MEF_SENDER                  = 0x00000002,
                    MEF_RECIPIENT               = 0x00000004,
                    MEF_LARGER_THAN             = 0x00000008,
                    MEF_OLDER_THAN              = 0x00000010,
                    MEF_FROZEN                  = 0x00000020,
                    MEF_N_LARGEST_MESSAGES      = 0x00000040,
                    MEF_N_OLDEST_MESSAGES       = 0x00000080,
                    MEF_FAILED                  = 0x00000100,
                    MEF_ALL                     = 0x40000000,
                    MEF_INVERTSENSE             = 0x80000000,
} MESSAGE_ENUM_FILTER_TYPE;

// @struct MESSAGE_ENUM_FILTER | Structure describing criteria for enumerating
// messages
// @field DWORD | dwVersion | Version of filter - must be CURRENT_QUEUE_ADMIN_VERSION
// @field MESSAGE_ENUM_FILTER_TYPE | mefType | <t MESSAGE_ENUM_FILTER_TYPE> Flags for filter.
// @field DWORD | cMessages | Number of messages to return
// @field DWORD | cbSize | Size parameter of messages
// @field DWORD | cSkipMessages | Number of messages at front of queue to skip.
//  This is provided to allow "paged" queries to the server.
// @field SYSTEMTIME | stDate | Date/Time parameter of messages
typedef struct tagMESSAGE_ENUM_FILTER {
                    DWORD dwVersion;
                    DWORD mefType;
                    DWORD cMessages;
                    DWORD cbSize;
                    DWORD cSkipMessages;
                    SYSTEMTIME stDate;
    MIDL([string])  LPCWSTR szMessageSender;
    MIDL([string])  LPCWSTR szMessageRecipient;
} MESSAGE_ENUM_FILTER, *PMESSAGE_ENUM_FILTER;


// @enum LINK_INFO_FLAGS | Type specifying the state of the link 
// @emem LI_ACTIVE | Link has an active connection transferring mail
// @emem LI_READY | Link is ready for a connection, but there are no connections
// @emem LI_RETRY | Link is waiting for the retry interval to elapse
// @emem LI_SCHEDULED | Link is waiting for the next scheduled time
// @emem LI_REMOTE | Link is to be activated by remote server. A connection
//  will not be made unless requested by a remote server.
// @emem LI_FROZEN | Link was frozen by administrative action
// @emem LI_TYPE_REMOTE_DELIVERY | Messages on link are being delivered
//  remotely.  This is the default type of link.
// @emem LI_TYPE_LOCAL_DELIVERY | Messages on this link are being delivered
//  locally.
// @emem LI_TYPE_PENDING_CAT | Messages on this link are pending message
//  categorization.
// @emem LI_TYPE_PENDING_ROUTING | Messages on this link have not been routed
//  to their next hop.
// @emem LI_TYPE_CURRENTLY_UNREACHABLE | Messages on this link do not have an 
//  available route to their final destination.  This is due to transient 
//  network or server errors.  These messages will be retried when a route
//  becomes available.
// @emem LI_TYPE_INTERNAL | This link is an internal link not described 
//  by the above.
typedef enum tagLINK_INFO_FLAGS {
                    LI_ACTIVE                       = 0x00000001,
                    LI_READY                        = 0x00000002,
                    LI_RETRY                        = 0x00000004,
                    LI_SCHEDULED                    = 0x00000008,
                    LI_REMOTE                       = 0x00000010,
                    LI_FROZEN                       = 0x00000020,
                    LI_TYPE_REMOTE_DELIVERY         = 0x00000100,
                    LI_TYPE_LOCAL_DELIVERY          = 0x00000200,
                    LI_TYPE_PENDING_ROUTING         = 0x00000400,
                    LI_TYPE_PENDING_CAT             = 0x00000800,
                    LI_TYPE_CURRENTLY_UNREACHABLE   = 0x00001000,
                    LI_TYPE_DEFERRED_DELIVERY       = 0x00002000,
                    LI_TYPE_INTERNAL                = 0x00004000,
                    LI_TYPE_PENDING_SUBMIT          = 0x00008000,
} LINK_INFO_FLAGS;

// @enum LINK_ACTION | Actions that can be applied to a link
// @emem LA_KICK | Force a connection to be made for this link. 
//  This will even work for connections pending retry or a scheduled connection.
// @emem LA_FREEZE | Prevent outbound connections from being made for a link
// @emem LA_THAW | Undo a previous admin freeze action.
typedef enum tagLINK_ACTION {
                    LA_INTERNAL                 = 0x00000000,
                    LA_KICK                     = 0x00000001,
                    LA_FREEZE                   = 0x00000020,
                    LA_THAW                     = 0x00000040,
} LINK_ACTION;

//
// @struct LINK_INFO | Structure describing state of a virtual server AQ link
// @field DWORD | dwVersion | Version of LINK_INFO structure - will be CURRENT_QUEUE_ADMIN_VERSION
// @field LPWSTR | szLinkName | Name of next-hop
// @field DWORD | cMessages | Number of messages queued up for this link
// @field DWORD | fStateFlags | <t LINK_INFO_FLAGS> indicating Link State
// @field SYSTEMTIME | stNextScheduledConnection | The time at which the next
// connection will be attempted.
// @field SYSTEMTIME | stOldestMessage | The oldest message on this link
// @field ULARGE_INTEGER | cbLinkVolume | Total number of bytes on link
// @field LPWSTR | szLinkDN | DN associated with this link by routing.  Can be NULL.
// @field LPWSTR | szExtendedStateInfo | If present, this provides additional state
// information about why a link is in <t LI_RETRY> state.
// @field DWORD | dwSupportedLinkActions | Tells which <t LINK_ACTIONS> are supported
// by this link.
typedef struct tagLINK_INFO {
                    DWORD dwVersion; 
    MIDL([string])  LPWSTR szLinkName;
                    DWORD cMessages;
                    DWORD fStateFlags;
                    SYSTEMTIME stNextScheduledConnection;
                    SYSTEMTIME stOldestMessage;
                    ULARGE_INTEGER cbLinkVolume;
    MIDL([string])  LPWSTR szLinkDN;
    MIDL([string])  LPWSTR szExtendedStateInfo;
                    DWORD  dwSupportedLinkActions;
} LINK_INFO, *PLINK_INFO;

//
// @struct QUEUE_INFO | Structure describing state of a virtual server link 
// queue
// @field DWORD | dwVersion | Version of LINK_INFO structure - will be CURRENT_QUEUE_ADMIN_VERSION
// @field LPWSTR | szQueueName | Name of queue
// @field LPWSTR | szLinkName | Name of link that is servicing this queue
// @field DWORD | cMessages | Number of messages on this queue
// @field ULARGE_INTEGER | cbQueueVolume | Total number of bytes on queue
// @field DWORD | dwMsgEnumFlagsSupported | The types of message enumeration supported
typedef struct tagQUEUE_INFO {
                    DWORD dwVersion; 
    MIDL([string])  LPWSTR szQueueName;
    MIDL([string])  LPWSTR szLinkName;
                    DWORD cMessages;
                    ULARGE_INTEGER cbQueueVolume;
                    DWORD dwMsgEnumFlagsSupported;
} QUEUE_INFO, *PQUEUE_INFO;

//
// @enum AQ_MESSAGE_FLAGS | Flags describing message properties
// @flag MP_HIGH | High Priority Message
// @flag MP_NORMAL | Normal Priority Message
// @flag MP_LOW | Low Priority Message
// @flag MP_MSG_FROZEN | Message has been frozen by admin.
// @flag MP_MSG_RETRY | Delivery has been attempted and failed at least once
//  for this message.
// @flag MP_MSG_CONTENT_AVAILABLE | The content for this message can be 
//  accessed through the QAPI.
typedef enum tagAQ_MESSAGE_FLAGS {
                    MP_HIGH                     = 0x00000001,
                    MP_NORMAL                   = 0x00000002,
                    MP_LOW                      = 0x00000004,
                    MP_MSG_FROZEN               = 0x00000008,
                    MP_MSG_RETRY                = 0x00000010,
                    MP_MSG_CONTENT_AVAILABLE    = 0x00000020,
} AQ_MESSAGE_FLAGS;

// @struct MESSAGE_INFO | Structure describing a single mail message
// @field DWORD | dwVersion | Version of LINK_INFO structure - will be CURRENT_QUEUE_ADMIN_VERSION
// @field LPWSTR | szMessageId | Message ID
// @field LPWSTR | szSender | Sender Address, from "From:" header
// @field LPWSTR | szSubject | Message Subject
// @field DWORD | cRecipients | Number of recipients
// @field LPWSTR | szRecipients | Recipient Addresses, from "To:" header
// @field DWORD | cCCRecipients | Number of CC recipients
// @field LPWSTR | szCCRecipients | CC Recipient Addresses, from "CC:" header
// @field DWORD | cBCCRecipients | Number of BCC recipients
// @field LPWSTR | szBCCRecipients | BCC Recipient Addresses, from "BCC:" header
// @field DWORD | cbMessageSize | size of message in bytes
// @field DWORD | fMsgFlags | <t AQ_MESSAGE_FLAGS> describing message properties.
// @field SYSTEMTIME | stSubmission | Time of message submission
// @field SYSTEMTIME | stReceived | Time message was received by this server
// @field SYSTEMTIME | stExpiry | Time message will expire by if not delivered
// to all recipients, thus generating an NDR
// @field DWORD | cFailures | The number of failured delivery attempts for 
// this message
// @field DWORD | cEnvRecipients | The number of envelope recipeints
// @field DWORD | cbEnvRecipients | The size in bytes of the envelope recipients
// @field WCHAR * | mszEnvRecipients | A multi-string UNICODE buffer containing
// a NULL-terminated string for each recipient.  The buffer itself is terminated
// by an additional NULL.  Each recipient string will be formatted in the proxy
// address format of 'addr-type ":" address'.  The addr-type should match
// the address type found in the DS (ie SMTP).  The address should be returned 
// in it's native format.
typedef struct tagMESSAGE_INFO {
                                    DWORD dwVersion; 
    MIDL([string])                  LPWSTR szMessageId;
    MIDL([string])                  LPWSTR szSender;
    MIDL([string])                  LPWSTR szSubject;
                                    DWORD cRecipients;
    MIDL([string])                  LPWSTR szRecipients;
                                    DWORD cCCRecipients;
    MIDL([string])                  LPWSTR szCCRecipients;
                                    DWORD cBCCRecipients;
    MIDL([string])                  LPWSTR szBCCRecipients;
                                    DWORD fMsgFlags;
                                    DWORD cbMessageSize;
                                    SYSTEMTIME stSubmission;
                                    SYSTEMTIME stReceived;
                                    SYSTEMTIME stExpiry;
                                    DWORD cFailures;
                                    DWORD cEnvRecipients;
                                    DWORD cbEnvRecipients;
    MIDL([size_is(cbEnvRecipients/sizeof(WCHAR))]) WCHAR *mszEnvRecipients;
} MESSAGE_INFO, *PMESSAGE_INFO;

typedef enum tagQUEUELINK_TYPE {
                    QLT_QUEUE,
                    QLT_LINK,
                    QLT_NONE
} QUEUELINK_TYPE;

typedef struct tagQUEUELINK_ID {
                    GUID            uuid;
    MIDL([string])  LPWSTR          szName;
                    DWORD           dwId;
                    QUEUELINK_TYPE  qltType;
} QUEUELINK_ID;

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\vc7addon\devtools\common\win32sdk\include\austream.h ===
#pragma warning( disable: 4049 )  /* more than 64k source lines */

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 6.00.0347 */
/* Compiler settings for austream.idl:
    Oicf, W1, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __austream_h__
#define __austream_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IAudioMediaStream_FWD_DEFINED__
#define __IAudioMediaStream_FWD_DEFINED__
typedef interface IAudioMediaStream IAudioMediaStream;
#endif 	/* __IAudioMediaStream_FWD_DEFINED__ */


#ifndef __IAudioStreamSample_FWD_DEFINED__
#define __IAudioStreamSample_FWD_DEFINED__
typedef interface IAudioStreamSample IAudioStreamSample;
#endif 	/* __IAudioStreamSample_FWD_DEFINED__ */


#ifndef __IMemoryData_FWD_DEFINED__
#define __IMemoryData_FWD_DEFINED__
typedef interface IMemoryData IMemoryData;
#endif 	/* __IMemoryData_FWD_DEFINED__ */


#ifndef __IAudioData_FWD_DEFINED__
#define __IAudioData_FWD_DEFINED__
typedef interface IAudioData IAudioData;
#endif 	/* __IAudioData_FWD_DEFINED__ */


/* header files for imported files */
#include "unknwn.h"
#include "mmstream.h"

#ifdef __cplusplus
extern "C"{
#endif 

void * __RPC_USER MIDL_user_allocate(size_t);
void __RPC_USER MIDL_user_free( void * ); 

/* interface __MIDL_itf_austream_0000 */
/* [local] */ 

//
//	The following declarations within the 'if 0' block are dummy typedefs used to make
//	the ddstream.idl file build.  The actual definitions are contained in DDRAW.H
//
#if 0
typedef struct tWAVEFORMATEX WAVEFORMATEX;

#endif






extern RPC_IF_HANDLE __MIDL_itf_austream_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_austream_0000_v0_0_s_ifspec;

#ifndef __IAudioMediaStream_INTERFACE_DEFINED__
#define __IAudioMediaStream_INTERFACE_DEFINED__

/* interface IAudioMediaStream */
/* [unique][uuid][local][object] */ 


EXTERN_C const IID IID_IAudioMediaStream;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("f7537560-a3be-11d0-8212-00c04fc32c45")
    IAudioMediaStream : public IMediaStream
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetFormat( 
            /* [out] */ WAVEFORMATEX *pWaveFormatCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetFormat( 
            /* [in] */ const WAVEFORMATEX *lpWaveFormat) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateSample( 
            /* [in] */ IAudioData *pAudioData,
            /* [in] */ DWORD dwFlags,
            /* [out] */ IAudioStreamSample **ppSample) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAudioMediaStreamVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAudioMediaStream * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAudioMediaStream * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAudioMediaStream * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMultiMediaStream )( 
            IAudioMediaStream * This,
            /* [out] */ IMultiMediaStream **ppMultiMediaStream);
        
        HRESULT ( STDMETHODCALLTYPE *GetInformation )( 
            IAudioMediaStream * This,
            /* [out] */ MSPID *pPurposeId,
            /* [out] */ STREAM_TYPE *pType);
        
        HRESULT ( STDMETHODCALLTYPE *SetSameFormat )( 
            IAudioMediaStream * This,
            /* [in] */ IMediaStream *pStreamThatHasDesiredFormat,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *AllocateSample )( 
            IAudioMediaStream * This,
            /* [in] */ DWORD dwFlags,
            /* [out] */ IStreamSample **ppSample);
        
        HRESULT ( STDMETHODCALLTYPE *CreateSharedSample )( 
            IAudioMediaStream * This,
            /* [in] */ IStreamSample *pExistingSample,
            /* [in] */ DWORD dwFlags,
            /* [out] */ IStreamSample **ppNewSample);
        
        HRESULT ( STDMETHODCALLTYPE *SendEndOfStream )( 
            IAudioMediaStream * This,
            DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *GetFormat )( 
            IAudioMediaStream * This,
            /* [out] */ WAVEFORMATEX *pWaveFormatCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *SetFormat )( 
            IAudioMediaStream * This,
            /* [in] */ const WAVEFORMATEX *lpWaveFormat);
        
        HRESULT ( STDMETHODCALLTYPE *CreateSample )( 
            IAudioMediaStream * This,
            /* [in] */ IAudioData *pAudioData,
            /* [in] */ DWORD dwFlags,
            /* [out] */ IAudioStreamSample **ppSample);
        
        END_INTERFACE
    } IAudioMediaStreamVtbl;

    interface IAudioMediaStream
    {
        CONST_VTBL struct IAudioMediaStreamVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAudioMediaStream_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAudioMediaStream_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAudioMediaStream_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAudioMediaStream_GetMultiMediaStream(This,ppMultiMediaStream)	\
    (This)->lpVtbl -> GetMultiMediaStream(This,ppMultiMediaStream)

#define IAudioMediaStream_GetInformation(This,pPurposeId,pType)	\
    (This)->lpVtbl -> GetInformation(This,pPurposeId,pType)

#define IAudioMediaStream_SetSameFormat(This,pStreamThatHasDesiredFormat,dwFlags)	\
    (This)->lpVtbl -> SetSameFormat(This,pStreamThatHasDesiredFormat,dwFlags)

#define IAudioMediaStream_AllocateSample(This,dwFlags,ppSample)	\
    (This)->lpVtbl -> AllocateSample(This,dwFlags,ppSample)

#define IAudioMediaStream_CreateSharedSample(This,pExistingSample,dwFlags,ppNewSample)	\
    (This)->lpVtbl -> CreateSharedSample(This,pExistingSample,dwFlags,ppNewSample)

#define IAudioMediaStream_SendEndOfStream(This,dwFlags)	\
    (This)->lpVtbl -> SendEndOfStream(This,dwFlags)


#define IAudioMediaStream_GetFormat(This,pWaveFormatCurrent)	\
    (This)->lpVtbl -> GetFormat(This,pWaveFormatCurrent)

#define IAudioMediaStream_SetFormat(This,lpWaveFormat)	\
    (This)->lpVtbl -> SetFormat(This,lpWaveFormat)

#define IAudioMediaStream_CreateSample(This,pAudioData,dwFlags,ppSample)	\
    (This)->lpVtbl -> CreateSample(This,pAudioData,dwFlags,ppSample)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAudioMediaStream_GetFormat_Proxy( 
    IAudioMediaStream * This,
    /* [out] */ WAVEFORMATEX *pWaveFormatCurrent);


void __RPC_STUB IAudioMediaStream_GetFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAudioMediaStream_SetFormat_Proxy( 
    IAudioMediaStream * This,
    /* [in] */ const WAVEFORMATEX *lpWaveFormat);


void __RPC_STUB IAudioMediaStream_SetFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAudioMediaStream_CreateSample_Proxy( 
    IAudioMediaStream * This,
    /* [in] */ IAudioData *pAudioData,
    /* [in] */ DWORD dwFlags,
    /* [out] */ IAudioStreamSample **ppSample);


void __RPC_STUB IAudioMediaStream_CreateSample_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAudioMediaStream_INTERFACE_DEFINED__ */


#ifndef __IAudioStreamSample_INTERFACE_DEFINED__
#define __IAudioStreamSample_INTERFACE_DEFINED__

/* interface IAudioStreamSample */
/* [unique][uuid][local][object] */ 


EXTERN_C const IID IID_IAudioStreamSample;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("345fee00-aba5-11d0-8212-00c04fc32c45")
    IAudioStreamSample : public IStreamSample
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAudioData( 
            /* [out] */ IAudioData **ppAudio) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAudioStreamSampleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAudioStreamSample * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAudioStreamSample * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAudioStreamSample * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMediaStream )( 
            IAudioStreamSample * This,
            /* [in] */ IMediaStream **ppMediaStream);
        
        HRESULT ( STDMETHODCALLTYPE *GetSampleTimes )( 
            IAudioStreamSample * This,
            /* [out] */ STREAM_TIME *pStartTime,
            /* [out] */ STREAM_TIME *pEndTime,
            /* [out] */ STREAM_TIME *pCurrentTime);
        
        HRESULT ( STDMETHODCALLTYPE *SetSampleTimes )( 
            IAudioStreamSample * This,
            /* [in] */ const STREAM_TIME *pStartTime,
            /* [in] */ const STREAM_TIME *pEndTime);
        
        HRESULT ( STDMETHODCALLTYPE *Update )( 
            IAudioStreamSample * This,
            /* [in] */ DWORD dwFlags,
            /* [in] */ HANDLE hEvent,
            /* [in] */ PAPCFUNC pfnAPC,
            /* [in] */ DWORD_PTR dwAPCData);
        
        HRESULT ( STDMETHODCALLTYPE *CompletionStatus )( 
            IAudioStreamSample * This,
            /* [in] */ DWORD dwFlags,
            /* [in] */ DWORD dwMilliseconds);
        
        HRESULT ( STDMETHODCALLTYPE *GetAudioData )( 
            IAudioStreamSample * This,
            /* [out] */ IAudioData **ppAudio);
        
        END_INTERFACE
    } IAudioStreamSampleVtbl;

    interface IAudioStreamSample
    {
        CONST_VTBL struct IAudioStreamSampleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAudioStreamSample_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAudioStreamSample_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAudioStreamSample_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAudioStreamSample_GetMediaStream(This,ppMediaStream)	\
    (This)->lpVtbl -> GetMediaStream(This,ppMediaStream)

#define IAudioStreamSample_GetSampleTimes(This,pStartTime,pEndTime,pCurrentTime)	\
    (This)->lpVtbl -> GetSampleTimes(This,pStartTime,pEndTime,pCurrentTime)

#define IAudioStreamSample_SetSampleTimes(This,pStartTime,pEndTime)	\
    (This)->lpVtbl -> SetSampleTimes(This,pStartTime,pEndTime)

#define IAudioStreamSample_Update(This,dwFlags,hEvent,pfnAPC,dwAPCData)	\
    (This)->lpVtbl -> Update(This,dwFlags,hEvent,pfnAPC,dwAPCData)

#define IAudioStreamSample_CompletionStatus(This,dwFlags,dwMilliseconds)	\
    (This)->lpVtbl -> CompletionStatus(This,dwFlags,dwMilliseconds)


#define IAudioStreamSample_GetAudioData(This,ppAudio)	\
    (This)->lpVtbl -> GetAudioData(This,ppAudio)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAudioStreamSample_GetAudioData_Proxy( 
    IAudioStreamSample * This,
    /* [out] */ IAudioData **ppAudio);


void __RPC_STUB IAudioStreamSample_GetAudioData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAudioStreamSample_INTERFACE_DEFINED__ */


#ifndef __IMemoryData_INTERFACE_DEFINED__
#define __IMemoryData_INTERFACE_DEFINED__

/* interface IMemoryData */
/* [unique][uuid][local][object] */ 


EXTERN_C const IID IID_IMemoryData;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("327fc560-af60-11d0-8212-00c04fc32c45")
    IMemoryData : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetBuffer( 
            /* [in] */ DWORD cbSize,
            /* [in] */ BYTE *pbData,
            /* [in] */ DWORD dwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetInfo( 
            /* [out] */ DWORD *pdwLength,
            /* [out] */ BYTE **ppbData,
            /* [out] */ DWORD *pcbActualData) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetActual( 
            /* [in] */ DWORD cbDataValid) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMemoryDataVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMemoryData * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMemoryData * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMemoryData * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetBuffer )( 
            IMemoryData * This,
            /* [in] */ DWORD cbSize,
            /* [in] */ BYTE *pbData,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *GetInfo )( 
            IMemoryData * This,
            /* [out] */ DWORD *pdwLength,
            /* [out] */ BYTE **ppbData,
            /* [out] */ DWORD *pcbActualData);
        
        HRESULT ( STDMETHODCALLTYPE *SetActual )( 
            IMemoryData * This,
            /* [in] */ DWORD cbDataValid);
        
        END_INTERFACE
    } IMemoryDataVtbl;

    interface IMemoryData
    {
        CONST_VTBL struct IMemoryDataVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMemoryData_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMemoryData_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMemoryData_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMemoryData_SetBuffer(This,cbSize,pbData,dwFlags)	\
    (This)->lpVtbl -> SetBuffer(This,cbSize,pbData,dwFlags)

#define IMemoryData_GetInfo(This,pdwLength,ppbData,pcbActualData)	\
    (This)->lpVtbl -> GetInfo(This,pdwLength,ppbData,pcbActualData)

#define IMemoryData_SetActual(This,cbDataValid)	\
    (This)->lpVtbl -> SetActual(This,cbDataValid)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IMemoryData_SetBuffer_Proxy( 
    IMemoryData * This,
    /* [in] */ DWORD cbSize,
    /* [in] */ BYTE *pbData,
    /* [in] */ DWORD dwFlags);


void __RPC_STUB IMemoryData_SetBuffer_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMemoryData_GetInfo_Proxy( 
    IMemoryData * This,
    /* [out] */ DWORD *pdwLength,
    /* [out] */ BYTE **ppbData,
    /* [out] */ DWORD *pcbActualData);


void __RPC_STUB IMemoryData_GetInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMemoryData_SetActual_Proxy( 
    IMemoryData * This,
    /* [in] */ DWORD cbDataValid);


void __RPC_STUB IMemoryData_SetActual_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMemoryData_INTERFACE_DEFINED__ */


#ifndef __IAudioData_INTERFACE_DEFINED__
#define __IAudioData_INTERFACE_DEFINED__

/* interface IAudioData */
/* [unique][uuid][local][object] */ 


EXTERN_C const IID IID_IAudioData;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("54c719c0-af60-11d0-8212-00c04fc32c45")
    IAudioData : public IMemoryData
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetFormat( 
            /* [out] */ WAVEFORMATEX *pWaveFormatCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetFormat( 
            /* [in] */ const WAVEFORMATEX *lpWaveFormat) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAudioDataVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAudioData * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAudioData * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAudioData * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetBuffer )( 
            IAudioData * This,
            /* [in] */ DWORD cbSize,
            /* [in] */ BYTE *pbData,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *GetInfo )( 
            IAudioData * This,
            /* [out] */ DWORD *pdwLength,
            /* [out] */ BYTE **ppbData,
            /* [out] */ DWORD *pcbActualData);
        
        HRESULT ( STDMETHODCALLTYPE *SetActual )( 
            IAudioData * This,
            /* [in] */ DWORD cbDataValid);
        
        HRESULT ( STDMETHODCALLTYPE *GetFormat )( 
            IAudioData * This,
            /* [out] */ WAVEFORMATEX *pWaveFormatCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *SetFormat )( 
            IAudioData * This,
            /* [in] */ const WAVEFORMATEX *lpWaveFormat);
        
        END_INTERFACE
    } IAudioDataVtbl;

    interface IAudioData
    {
        CONST_VTBL struct IAudioDataVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAudioData_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAudioData_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAudioData_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAudioData_SetBuffer(This,cbSize,pbData,dwFlags)	\
    (This)->lpVtbl -> SetBuffer(This,cbSize,pbData,dwFlags)

#define IAudioData_GetInfo(This,pdwLength,ppbData,pcbActualData)	\
    (This)->lpVtbl -> GetInfo(This,pdwLength,ppbData,pcbActualData)

#define IAudioData_SetActual(This,cbDataValid)	\
    (This)->lpVtbl -> SetActual(This,cbDataValid)


#define IAudioData_GetFormat(This,pWaveFormatCurrent)	\
    (This)->lpVtbl -> GetFormat(This,pWaveFormatCurrent)

#define IAudioData_SetFormat(This,lpWaveFormat)	\
    (This)->lpVtbl -> SetFormat(This,lpWaveFormat)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAudioData_GetFormat_Proxy( 
    IAudioData * This,
    /* [out] */ WAVEFORMATEX *pWaveFormatCurrent);


void __RPC_STUB IAudioData_GetFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAudioData_SetFormat_Proxy( 
    IAudioData * This,
    /* [in] */ const WAVEFORMATEX *lpWaveFormat);


void __RPC_STUB IAudioData_SetFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAudioData_INTERFACE_DEFINED__ */


/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\vc7addon\devtools\common\win32sdk\include\atsmedia.h ===
//------------------------------------------------------------------------------
// File: ATSMedia.h
//
// Desc: Broadcast Driver Architecture Media Definitions for ATSC
//
// Copyright (c) 1996 - 2000, Microsoft Corporation.  All rights reserved.
//------------------------------------------------------------------------------


#if !defined(_KSMEDIA_)
#error KSMEDIA.H must be included before BDAMEDIA.H
#endif // !defined(_KSMEDIA_)

#if !defined(_BDAMEDIA_)
#error BDAMEDIA.H must be included before ATSCMEDIA.H
#endif // !defined(_KSMEDIA_)

#if !defined(_ATSCMEDIA_)
#define _ATSCMEDIA_


//===========================================================================
//
//  ATSC Network Type
//
//===========================================================================

#define STATIC_BDANETWORKTYPE_ATSC\
    0x71985f51, 0x1ca1, 0x11d3, 0x9c, 0xc8, 0x0, 0xc0, 0x4f, 0x79, 0x71, 0xe0
DEFINE_GUIDSTRUCT("71985F51-1CA1-11d3-9CC8-00C04F7971E0", BDANETWORKTYPE_ATSC);
#define BDANETWORKTYPE_ATSC DEFINE_GUIDNAMED(BDANETWORKTYPE_ATSC)


#endif // _ATSCMEDIA_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\vc7addon\devtools\common\win32sdk\include\atalkwsh.h ===
/*++

Copyright (c) 1992-1999  Microsoft Corporation

Module Name:

    wshatalk.h

Abstract:

	This is the header file for application using Windows Sockets for
	Appletalk.

Revision History:
    10 Jul 1992     Initial Version

--*/

#ifndef	_ATALKWSH_
#define	_ATALKWSH_

#if _MSC_VER > 1000
#pragma once
#endif

//
//  All protocol types should be specified in the Decimal base
//

#define DECIMAL_BASE    			10

//
//  Protocol number 0 is invalid in the Appletalk case
//

#define	ATPROTO_BASE				(1000 * AF_APPLETALK)
#define	SOL_APPLETALK				(ATPROTO_BASE)

#define DDPPROTO_RTMP   			(ATPROTO_BASE + 1)
#define DDPPROTO_NBP    			(ATPROTO_BASE + 2)
#define DDPPROTO_ATP    			(ATPROTO_BASE + 3)
#define DDPPROTO_AEP    			(ATPROTO_BASE + 4)
#define DDPPROTO_RTMPRQ 			(ATPROTO_BASE + 5)
#define DDPPROTO_ZIP    			(ATPROTO_BASE + 6)
#define DDPPROTO_ADSP   			(ATPROTO_BASE + 7)

#define DDPPROTO_MAX    			(ATPROTO_BASE + 255)

//
//  Define the higher layer appletalk protocol types
//

#define ATPROTO_ADSP        		(DDPPROTO_MAX + 1)
#define ATPROTO_ATP         		(DDPPROTO_MAX + 2)
#define ATPROTO_ASP         		(DDPPROTO_MAX + 3)
#define ATPROTO_PAP         		(DDPPROTO_MAX + 4)

#define SO_REGISTER_NAME     		0xA000
#define SO_DEREGISTER_NAME   		0xA001
#define SO_REMOVE_NAME				SO_DEREGISTER_NAME
#define SO_LOOKUP_NAME       		0xA002
#define SO_CONFIRM_NAME       		0xA003
#define	SO_LOOKUP_MYZONE			0xA004
#define	SO_GETMYZONE				SO_LOOKUP_MYZONE
#define SO_LOOKUP_ZONES      		0xA005
#define SO_GETZONELIST				SO_LOOKUP_ZONES
#define	SO_LOOKUP_ZONES_ON_ADAPTER	0xA006
#define	SO_GETLOCALZONES			SO_LOOKUP_ZONES_ON_ADAPTER
#define	SO_LOOKUP_NETDEF_ON_ADAPTER	0xA007
#define	SO_GETNETINFO				SO_LOOKUP_NETDEF_ON_ADAPTER

//
//  PAP-specific options
//

#define SO_PAP_SET_SERVER_STATUS	0xA007
#define SO_PAP_GET_SERVER_STATUS	0xA008
#define	SO_PAP_PRIME_READ			0xA009


#define ATADDR_ANY             		0            // Dynamic socket (=0)
#define ATADDR_BROADCAST       		0xFF         // Broadcast node id (=ff)

//
//	Define flags/error codes peculiar to Appletalk
//

#define	WSAEMSGPARTIAL				(WSABASEERR+100)


//	Maximum pap status size
#define	MAX_PAP_STATUS_SIZE			255
#define	MIN_PAP_READ_BUF_SIZE		4096

//	These are the unused 4 bytes returned in the PAP status packet. If ever
//	they are to be interpreted, they will be available.
#define	PAP_UNUSED_STATUS_BYTES		4


//
//  SOCKADDR_AT structure
//

typedef struct sockaddr_at
{
    USHORT    sat_family;
    USHORT    sat_net;
    UCHAR     sat_node;
    UCHAR     sat_socket;
} SOCKADDR_AT, *PSOCKADDR_AT;


//
//	***WARNING***
//	This is defined to be the same as the ATALK ADDRESS defined in atalktdi.h
//	Change this if the other changes.
//

typedef	union
{
	struct
	{
		USHORT		Network;
		UCHAR		Node;
		UCHAR       Socket;
	};
	ULONG			Address;
} WSH_ATALK_ADDRESS, *PWSH_ATALK_ADDRESS;

//
//  Typedefs for the various options
//

//
//  ***WARNING***:
//  This should be exactly the same as NBP_NAME defined in atalktdi.h
//

#define MAX_ENTITY  32
typedef struct
{
    CHAR    ObjectNameLen;
    CHAR    ObjectName[MAX_ENTITY];
    CHAR    TypeNameLen;
    CHAR    TypeName[MAX_ENTITY];
    CHAR    ZoneNameLen;
    CHAR    ZoneName[MAX_ENTITY];
} WSH_NBP_NAME, *PWSH_NBP_NAME;

typedef struct
{
	WSH_ATALK_ADDRESS		Address;
	USHORT					Enumerator;
	WSH_NBP_NAME			NbpName;
} WSH_NBP_TUPLE, *PWSH_NBP_TUPLE;

typedef WSH_NBP_NAME    WSH_REGISTER_NAME, *PWSH_REGISTER_NAME;
typedef WSH_NBP_NAME    WSH_DEREGISTER_NAME, *PWSH_DEREGISTER_NAME;
typedef WSH_NBP_NAME    WSH_REMOVE_NAME, *PWSH_REMOVE_NAME;

typedef struct _WSH_LOOKUP_ZONES
{
    ULONG   NoZones;

    //
    //  CHAR    Zones[] - null separated zones
    //

} WSH_LOOKUP_ZONES, *PWSH_LOOKUP_ZONES;

typedef struct _WSH_LOOKUP_NETDEF_ON_ADAPTER
{
	USHORT	NetworkRangeLowerEnd;
	USHORT	NetworkRangeUpperEnd;

	//	This will be followed by a null terminated ansi default zone.
	//	PUCHAR	DefaultZone[]

} WSH_LOOKUP_NETDEF_ON_ADAPTER , *PWSH_LOOKUP_NETDEF_ON_ADAPTER;

typedef struct _WSH_LOOKUP_NAME
{
    WSH_NBP_TUPLE    LookupTuple;
    ULONG   NoTuples;

    //
    //  Array of NoTuple WSH_NBP_TUPLEs
    //

} WSH_LOOKUP_NAME, *PWSH_LOOKUP_NAME;

typedef struct _WSH_PAP_GET_SERVER_STATUS
{
	SOCKADDR_AT			ServerAddr;
	UCHAR				Reserved[PAP_UNUSED_STATUS_BYTES];
	UCHAR				ServerStatus[MAX_PAP_STATUS_SIZE+1];

} WSH_PAP_GET_SERVER_STATUS, *PWSH_PAP_GET_SERVER_STATUS;

#endif	// _ATALKWSH_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\vc7addon\devtools\common\win32sdk\include\audguids.h ===
/******************************************************************************
*
*  (C) COPYRIGHT MICROSOFT CORP., 1998-1999
*
*  TITLE:       audguids.h
*
*  VERSION:     2.0
*
*  DATE:        9 December, 1999
*
*  DESCRIPTION:
*   Header file used by WIA to specify audio format GUIDS.
*
******************************************************************************/

//
//  Audio Format GUIDS
//

// {F818E146-07AF-40ff-AE55-BE8F2C065DBE}
DEFINE_GUID(AUDFMT_WAV, 0xf818e146, 0x07af, 0x40ff, 0xae, 0x55, 0xbe, 0x8f, 0x2c, 0x06, 0x5d, 0xbe);

// 0fbc71fb-43bf-49f2-9190-e6fecff37e54
DEFINE_GUID(AUDFMT_MP3, 0x0fbc71fb, 0x43bf, 0x49f2, 0x91, 0x90, 0xe6, 0xfe, 0xcf, 0xf3, 0x7e, 0x54);

// 66e2bf4f-b6fc-443f-94c8-2f33c8a65aaf
DEFINE_GUID(AUDFMT_AIFF, 0x66e2bf4f,0xb6fc,0x443f,0x94,0xc8,0x2f,0x33,0xc8,0xa6,0x5a,0xaf);
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\vc7addon\devtools\common\win32sdk\include\AuDevCod.h ===
//------------------------------------------------------------------------------
// File: AudEvCod.h
//
// Desc: List of Audio device error event codes and the expected params.
//
// Copyright (c) 1999 - 2000, Microsoft Corporation.  All rights reserved.
//------------------------------------------------------------------------------



#ifndef __AUDEVCOD__
#define __AUDEVCOD__


#define EC_SND_DEVICE_ERROR_BASE   0x0200

typedef enum _tagSND_DEVICE_ERROR {

    SNDDEV_ERROR_Open=1,
    SNDDEV_ERROR_Close=2,
    SNDDEV_ERROR_GetCaps=3,
    SNDDEV_ERROR_PrepareHeader=4,
    SNDDEV_ERROR_UnprepareHeader=5,
    SNDDEV_ERROR_Reset=6,
    SNDDEV_ERROR_Restart=7,
    SNDDEV_ERROR_GetPosition=8,
    SNDDEV_ERROR_Write=9,
    SNDDEV_ERROR_Pause=10,
    SNDDEV_ERROR_Stop=11,
    SNDDEV_ERROR_Start=12,
    SNDDEV_ERROR_AddBuffer=13,
    SNDDEV_ERROR_Query=14,

} SNDDEV_ERR;


// Sound device error event codes
// ==============================
//
// All audio device error events are always passed on to the application, and are
// never processed by the filter graph


#define EC_SNDDEV_IN_ERROR                    (EC_SND_DEVICE_ERROR_BASE + 0x00)
#define EC_SNDDEV_OUT_ERROR                   (EC_SND_DEVICE_ERROR_BASE + 0x01)
// Parameters: ( DWORD, DWORD)
// lParam1 is an enum SND_DEVICE_ERROR which notifies the app how the device was
// being accessed when the failure occurred.
//
// lParam2 is the error returned from the sound device call.
//

#endif // __AUDEVCOD__
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\vc7addon\devtools\common\win32sdk\include\Authif.h ===
/*/////////////////////////////////////////////////////////////////////////////
//
// Copyright (c) Microsoft Corporation. All rights reserved.
//
// FILE
//
//    authif.h
//
// SYNOPSIS
//
//    Declares the interface for extensions to the Internet Authentication
//    Service.
//
// MODIFICATION HISTORY
//
//    09/28/1998    Original version.
//
/////////////////////////////////////////////////////////////////////////////*/

#ifndef _AUTHIF_H_
#define _AUTHIF_H_
#if _MSC_VER >= 1000
#pragma once
#endif

/*
 *  Enumerates the attribute types that are passed to the extension DLL.  The
 *  RADIUS standard attributes are included for convenience and should not be
 *  considered exhaustive.
 */
typedef enum _RADIUS_ATTRIBUTE_TYPE {

    /* Used to terminate attribute arrays. */
    ratMinimum = 0,

    /* RADIUS standard attributes. */
    ratUserName = 1,
    ratUserPassword = 2,
    ratCHAPPassword = 3,
    ratNASIPAddress = 4,
    ratNASPort = 5,
    ratServiceType = 6,
    ratFramedProtocol = 7,
    ratFramedIPAddress = 8,
    ratFramedIPNetmask = 9,
    ratFramedRouting = 10,
    ratFilterId = 11,
    ratFramedMTU = 12,
    ratFramedCompression = 13,
    ratLoginIPHost = 14,
    ratLoginService = 15,
    ratLoginPort = 16,
    ratReplyMessage = 18,
    ratCallbackNumber = 19,
    ratCallbackId = 20,
    ratFramedRoute = 22,
    ratFramedIPXNetwork = 23,
    ratState = 24,
    ratClass = 25,
    ratVendorSpecific = 26,
    ratSessionTimeout = 27,
    ratIdleTimeout = 28,
    ratTerminationAction = 29,
    ratCalledStationId = 30,
    ratCallingStationId = 31,
    ratNASIdentifier = 32,
    ratProxyState = 33,
    ratLoginLATService = 34,
    ratLoginLATNode = 35,
    ratLoginLATGroup = 36,
    ratFramedAppleTalkLink = 37,
    ratFramedAppleTalkNetwork = 38,
    ratFramedAppleTalkZone = 39,
    ratAcctStatusType = 40,
    ratAcctDelayTime = 41,
    ratAcctInputOctets = 42,
    ratAcctOutputOctets = 43,
    ratAcctSessionId = 44,
    ratAcctAuthentic = 45,
    ratAcctSessionTime = 46,
    ratAcctInputPackets = 47,
    ratAcctOutputPackets = 48,
    ratAcctTerminationCause = 49,
    ratCHAPChallenge = 60,
    ratNASPortType = 61,
    ratPortLimit = 62,

    /* Extended attribute types used to pass additional information. */
    ratCode = 262,             /* Request type code. */
    ratIdentifier = 263,       /* Request identifier. */
    ratAuthenticator = 264,    /* Request authenticator. */
    ratSrcIPAddress = 265,     /* Source IP address. */
    ratSrcPort = 266,          /* Source IP port. */
    ratProvider = 267,         /* Authentication provider. */
    ratStrippedUserName = 268, /* User-Name with realm stripped. */
    ratFQUserName = 269,       /* Fully-Qualified-User-Name. */
    ratPolicyName = 270        /* Remote Access Policy name. */
} RADIUS_ATTRIBUTE_TYPE;

/*
 *  Enumerates the different authentication providers used for processing a
 *  request. Used for the ratProvider extended attribute.
 */
typedef enum _RADIUS_AUTHENTICATION_PROVIDER {
    rapUnknown,
    rapUsersFile,
    rapProxy,
    rapWindowsNT,
    rapMCIS,
    rapODBC,
    rapNone
} RADIUS_AUTHENTICATION_PROVIDER;

/*
 *  Enumerates the different RADIUS data types. A type of 'rdtUnknown' means
 *  the attribute was not recognized by the dictionary.
 */
typedef enum _RADIUS_DATA_TYPE {
   rdtUnknown,
   rdtString,
   rdtAddress,
   rdtInteger,
   rdtTime
} RADIUS_DATA_TYPE;

/*
 *  Struct representing a RADIUS or extended attribute.
 */
typedef struct _RADIUS_ATTRIBUTE {
    DWORD dwAttrType;            /* Attribute type */
    RADIUS_DATA_TYPE fDataType;  /* RADIUS_DATA_TYPE of the value */
    DWORD cbDataLength;          /* Length of the value (in bytes) */
    union {
        DWORD dwValue;           /* For rdtAddress, rdtInteger, and rdtTime */
        PCSTR lpValue;           /* For rdtUnknown, and rdtString */
    };
} RADIUS_ATTRIBUTE, *PRADIUS_ATTRIBUTE;

/*
 *  Enumerates the different actions an extension DLL can generate in
 *  response to an Access-Request.
 */
typedef enum _RADIUS_ACTION {
   raContinue,
   raReject,
   raAccept
} RADIUS_ACTION, *PRADIUS_ACTION;


/*
 * Routines exported by a RADIUS extension DLL.
 */

/*
 * RadiusExtensionInit is optional. If it exists, it will be invoked prior to
 * the service coming on-line. A return value other than NO_ERROR prevents the
 * service from initializing.
 */
#define RADIUS_EXTENSION_INIT "RadiusExtensionInit"
typedef DWORD (WINAPI *PRADIUS_EXTENSION_INIT)( VOID );

/*
 * RadiusExtensionTerm is optional. If it exists, it will be invoked prior to
 * unloading the DLL to give the extension a chance to clean-up.
 */
#define RADIUS_EXTENSION_TERM "RadiusExtensionTerm"
typedef VOID (WINAPI *PRADIUS_EXTENSION_TERM)( VOID );

/*
 * RadiusExtensionProcess is mandatory for NT4. For Windows 2000, an
 * extension may export RadiusExtensionProcessEx (q.v.) instead.
 *
 * Parameters:
 *   pAttrs      Array of attributes from the request. It is terminated by an
 *               attribute with dwAttrType set to ratMinimum. These attributes
 *               should be treated as read-only and must not be referenced
 *               after the function returns.
 *   pfAction    For Access-Requests, this parameter will be non-NULL with
 *               *pfAction == raContinue. The extension DLL can set *pfAction
 *               to abort further processing and force an Access-Accept or
 *               Access-Reject.  For all other request types, this parameter
 *               will be NULL.
 *
 * Return Value:
 *     A return value other than NO_ERROR causes the request to be discarded.
 */
#define RADIUS_EXTENSION_PROCESS "RadiusExtensionProcess"
typedef DWORD (WINAPI *PRADIUS_EXTENSION_PROCESS)(
    IN CONST RADIUS_ATTRIBUTE *pAttrs,
    OUT OPTIONAL PRADIUS_ACTION pfAction
    );

/*
 * RadiusExtensionProcessEx is only supported on Windows 2000. If it exits,
 * RadiusExtensionProcess is ignored.
 *
 * Parameters:
 *   pInAttrs    Array of attributes from the request. It is terminated by an
 *               attribute with dwAttrType set to ratMinimum. These attributes
 *               should be treated as read-only and must not be referenced
 *               after the function returns.
 *   pOutAttrs   Array of attributes to add to the response. It is terminated
 *               by an attribute with dwAttrType set to ratMinimum.
 *               *pOutAttrs may be set to NULL if no attributes are returned.
 *   pfAction    For Access-Requests, this parameter will be non-NULL with
 *               *pfAction == raContinue. The extension DLL can set *pfAction
 *               to abort further processing and force an Access-Accept or
 *               Access-Reject.  For all other request types, this parameter
 *               will be NULL.
 *
 * Return Value:
 *     A return value other than NO_ERROR causes the request to be discarded.
 */
#define RADIUS_EXTENSION_PROCESS_EX "RadiusExtensionProcessEx"
typedef DWORD (WINAPI *PRADIUS_EXTENSION_PROCESS_EX)(
    IN CONST RADIUS_ATTRIBUTE *pInAttrs,
    OUT PRADIUS_ATTRIBUTE *pOutAttrs,
    OUT OPTIONAL PRADIUS_ACTION pfAction
    );

/*
 * RadiusExtensionFreeAttributes must be defined if RadiusExtensionProcessEx
 * is defined. It is used to free the attributes returned by
 * RadiusExtensionProcessEx
 *
 * Parameters:
 *   pAttrs     Array of attributes to be freed.
 */
#define RADIUS_EXTENSION_FREE_ATTRIBUTES "RadiusExtensionFreeAttributes"
typedef VOID (WINAPI *PRADIUS_EXTENSION_FREE_ATTRIBUTES)(
    IN PRADIUS_ATTRIBUTE pAttrs
    );

/*
 *  Defines used for installation of an extension DLL.
 *  The following registry values are used for loading extensions:
 *
 *      HKLM\System\CurrentControlSet\Services\AuthSrv\Parameters
 *          ExtensionDLLs      (REG_MULTI_SZ)  <list of DLL paths>
 *          AuthorizationDLLs  (REG_MULTI_SZ)  <list of DLL paths>
 *
 *  ExtensionDLLs are invoked before any of the built-in authentication
 *  providers. They receive all the attributes from the request plus all
 *  the extended attribute types.
 *
 *  AuthorizationDLLs are invoked after the built-in authentication and
 *  authorization providers. They receive all the attributes from the
 *  response plus all the extended attributes types. AuthorizationDLLs may
 *  not return an action of raAccept.
 */

#define AUTHSRV_PARAMETERS_KEY_W \
    L"System\\CurrentControlSet\\Services\\AuthSrv\\Parameters"

#define AUTHSRV_EXTENSIONS_VALUE_W \
    L"ExtensionDLLs"

#define AUTHSRV_AUTHORIZATION_VALUE_W \
    L"AuthorizationDLLs"

#endif  /* _AUTHIF_H_ */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\vc7addon\devtools\common\win32sdk\include\authz.h ===
/*++

Copyright (c) 2000 Microsoft Corporation

Module Name:

    authz.h

Abstract:

    This module contains the authorization framework APIs and any public data
    structures needed to call these APIs.

Author:

    Kedar Dubhashi - March 2000

Revision History:

    Created - March 2000

--*/

#ifndef __AUTHZ_H__
#define __AUTHZ_H__

#ifdef __cplusplus
extern "C" {
#endif

#if !defined(_AUTHZ_)
#define AUTHZAPI DECLSPEC_IMPORT
#else 
#define AUTHZAPI
#endif

#include <windows.h>
#include <adtgen.h>

//
// Flags which may be used at the time of client context creation using a sid.
//

#define AUTHZ_SKIP_TOKEN_GROUPS  0x2
              
DECLARE_HANDLE(AUTHZ_ACCESS_CHECK_RESULTS_HANDLE);
DECLARE_HANDLE(AUTHZ_CLIENT_CONTEXT_HANDLE);
DECLARE_HANDLE(AUTHZ_RESOURCE_MANAGER_HANDLE);
DECLARE_HANDLE(AUTHZ_AUDIT_EVENT_HANDLE);
DECLARE_HANDLE(AUTHZ_AUDIT_EVENT_TYPE_HANDLE);

typedef AUTHZ_ACCESS_CHECK_RESULTS_HANDLE *PAUTHZ_ACCESS_CHECK_RESULTS_HANDLE;
typedef AUTHZ_CLIENT_CONTEXT_HANDLE       *PAUTHZ_CLIENT_CONTEXT_HANDLE;
typedef AUTHZ_RESOURCE_MANAGER_HANDLE     *PAUTHZ_RESOURCE_MANAGER_HANDLE;
typedef AUTHZ_AUDIT_EVENT_HANDLE          *PAUTHZ_AUDIT_EVENT_HANDLE;
typedef AUTHZ_AUDIT_EVENT_TYPE_HANDLE     *PAUTHZ_AUDIT_EVENT_TYPE_HANDLE;

//
// Structure defining the access check request.
//

typedef struct _AUTHZ_ACCESS_REQUEST
{
    ACCESS_MASK DesiredAccess;

    //
    // To replace the principal self sid in the acl.
    //

    PSID PrincipalSelfSid;

    //
    // Object type list represented by an array of (level, guid) pair and the
    // number of elements in the array. This is a post-fix representation of the
    // object tree.
    // These fields should be set to NULL and 0 respectively except when per
    // property access is desired.
    //

    POBJECT_TYPE_LIST ObjectTypeList;
    DWORD ObjectTypeListLength;

    //
    // To support completely business rules based access. This will be passed as
    // input to the callback access check function. Access check algorithm does
    // not interpret these.
    //

    PVOID OptionalArguments;
    
} AUTHZ_ACCESS_REQUEST, *PAUTHZ_ACCESS_REQUEST;

//
// Structure to return the results of the access check call.
//

typedef struct _AUTHZ_ACCESS_REPLY
{
    //
    // The length of the array representing the object type list structure. If
    // no object type is used to represent the object, then the length must be
    // set to 1.
    //
    // Note: This parameter must be filled!
    //

    DWORD ResultListLength;

    //
    // Array of granted access masks. This memory is allocated by the RM. Access
    // check routines just fill in the values.
    //

    PACCESS_MASK GrantedAccessMask;
    
    //
    // Array of SACL evaluation results.  This memory is allocated by the RM, if SACL
    // evaluation results are desired. Access check routines just fill in the values.
    // Sacl evaluation will only be performed if auditing is requested.
    //
    
#define AUTHZ_GENERATE_SUCCESS_AUDIT 0x1
#define AUTHZ_GENERATE_FAILURE_AUDIT 0x2

    PDWORD SaclEvaluationResults OPTIONAL;
    
    //
    // Array of results for each element of the array. This memory is allocated
    // by the RM. Access check routines just fill in the values.
    //

    PDWORD Error;

} AUTHZ_ACCESS_REPLY, *PAUTHZ_ACCESS_REPLY;


//
// Typedefs for callback functions to be provided by the resource manager.
//

//
// Callback access check function takes in
//     AuthzClientContext - a client context
//     pAce - pointer to a callback ace
//     pArgs - Optional arguments that were passed to AuthzAccessCheck thru
//             AuthzAccessRequest->OptionalArguments are passed back here.
//     pbAceApplicable - The resource manager must supply whether the ace should
//         be used in the computation of access evaluation
//
// Returns
//     TRUE if the API succeeded.
//     FALSE on any intermediate errors (like failed memory allocation)
//         In case of failure, the caller must use SetLastError(ErrorValue).
//

typedef BOOL (CALLBACK *PFN_AUTHZ_DYNAMIC_ACCESS_CHECK) (
                  IN AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,
                  IN PACE_HEADER                 pAce,
                  IN PVOID                       pArgs                OPTIONAL,
                  IN OUT PBOOL                   pbAceApplicable
                  );

//
// Callback compute dynamic groups function takes in
//     AuthzClientContext - a client context
//     pArgs - Optional arguments that supplied to AuthzInitializeClientContext*
//         thru DynamicGroupArgs are passed back here..
//     pSidAttrArray - To allocate and return an array of (sids, attribute)
//         pairs to be added to the normal part of the client context.
//     pSidCount - Number of elements in pSidAttrArray
//     pRestrictedSidAttrArray - To allocate and return an array of (sids, attribute)
//         pairs to be added to the restricted part of the client context.
//     pRestrictedSidCount - Number of elements in pRestrictedSidAttrArray
//
// Note:
//    Memory returned thru both these array will be freed by the callback
//    free function defined by the resource manager.
//
// Returns
//     TRUE if the API succeeded.
//     FALSE on any intermediate errors (like failed memory allocation)
//         In case of failure, the caller must use SetLastError(ErrorValue).
//

typedef BOOL (CALLBACK *PFN_AUTHZ_COMPUTE_DYNAMIC_GROUPS) (
                  IN  AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,
                  IN  PVOID                       Args,
                  OUT PSID_AND_ATTRIBUTES         *pSidAttrArray,
                  OUT PDWORD                      pSidCount,
                  OUT PSID_AND_ATTRIBUTES         *pRestrictedSidAttrArray,
                  OUT PDWORD                      pRestrictedSidCount
                  );

//
// Callback free function takes in
//     pSidAttrArray - To be freed. This has been allocated by the compute
//     dynamic groups function.
//

typedef VOID (CALLBACK *PFN_AUTHZ_FREE_DYNAMIC_GROUPS) (
                  IN PSID_AND_ATTRIBUTES pSidAttrArray
                  );

//
// Valid flags for AuthzAccessCheck
//

#define AUTHZ_ACCESS_CHECK_NO_DEEP_COPY_SD 0x00000001

AUTHZAPI
BOOL
WINAPI
AuthzAccessCheck(
    IN     DWORD                              Flags,
    IN     AUTHZ_CLIENT_CONTEXT_HANDLE        hAuthzClientContext,
    IN     PAUTHZ_ACCESS_REQUEST              pRequest,
    IN     AUTHZ_AUDIT_EVENT_HANDLE           hAuditEvent                      OPTIONAL,
    IN     PSECURITY_DESCRIPTOR               pSecurityDescriptor,
    IN     PSECURITY_DESCRIPTOR               *OptionalSecurityDescriptorArray OPTIONAL,
    IN     DWORD                              OptionalSecurityDescriptorCount,
    IN OUT PAUTHZ_ACCESS_REPLY                pReply,
    OUT    PAUTHZ_ACCESS_CHECK_RESULTS_HANDLE phAccessCheckResults             OPTIONAL
    );

AUTHZAPI
BOOL
WINAPI
AuthzCachedAccessCheck(
    IN     DWORD                             Flags,
    IN     AUTHZ_ACCESS_CHECK_RESULTS_HANDLE hAccessCheckResults,
    IN     PAUTHZ_ACCESS_REQUEST             pRequest,
    IN     AUTHZ_AUDIT_EVENT_HANDLE          hAuditEvent          OPTIONAL,
    IN OUT PAUTHZ_ACCESS_REPLY               pReply
    );

AUTHZAPI
BOOL
WINAPI
AuthzOpenObjectAudit(
    IN DWORD                       Flags,
    IN AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,
    IN PAUTHZ_ACCESS_REQUEST       pRequest,
    IN AUTHZ_AUDIT_EVENT_HANDLE    hAuditEvent,
    IN PSECURITY_DESCRIPTOR        pSecurityDescriptor,
    IN PSECURITY_DESCRIPTOR        *OptionalSecurityDescriptorArray OPTIONAL,
    IN DWORD                       OptionalSecurityDescriptorCount,
    IN PAUTHZ_ACCESS_REPLY         pReply
    );

AUTHZAPI
BOOL
WINAPI
AuthzFreeHandle(
    IN OUT AUTHZ_ACCESS_CHECK_RESULTS_HANDLE hAccessCheckResults
    );

//
// Flags for AuthzInitializeResourceManager
//

#define AUTHZ_RM_FLAG_NO_AUDIT 0x1

#define AUTHZ_VALID_RM_INIT_FLAGS (AUTHZ_RM_FLAG_NO_AUDIT)

AUTHZAPI
BOOL
WINAPI
AuthzInitializeResourceManager(
    IN DWORD                            Flags,
    IN PFN_AUTHZ_DYNAMIC_ACCESS_CHECK   pfnDynamicAccessCheck   OPTIONAL,
    IN PFN_AUTHZ_COMPUTE_DYNAMIC_GROUPS pfnComputeDynamicGroups OPTIONAL,
    IN PFN_AUTHZ_FREE_DYNAMIC_GROUPS    pfnFreeDynamicGroups    OPTIONAL,
    IN PCWSTR                           szResourceManagerName,
    OUT PAUTHZ_RESOURCE_MANAGER_HANDLE  phAuthzResourceManager
    );

AUTHZAPI
BOOL
WINAPI
AuthzFreeResourceManager(
    IN AUTHZ_RESOURCE_MANAGER_HANDLE hAuthzResourceManager
    );

AUTHZAPI
BOOL
WINAPI
AuthzInitializeContextFromToken(
    IN  DWORD                         Flags,
    IN  HANDLE                        TokenHandle,
    IN  AUTHZ_RESOURCE_MANAGER_HANDLE hAuthzResourceManager,
    IN  PLARGE_INTEGER                pExpirationTime        OPTIONAL,
    IN  LUID                          Identifier,
    IN  PVOID                         DynamicGroupArgs       OPTIONAL,
    OUT PAUTHZ_CLIENT_CONTEXT_HANDLE  phAuthzClientContext
    );

AUTHZAPI
BOOL
WINAPI
AuthzInitializeContextFromSid(
    IN  DWORD                         Flags,
    IN  PSID                          UserSid,
    IN  AUTHZ_RESOURCE_MANAGER_HANDLE hAuthzResourceManager,
    IN  PLARGE_INTEGER                pExpirationTime        OPTIONAL,
    IN  LUID                          Identifier,
    IN  PVOID                         DynamicGroupArgs       OPTIONAL,
    OUT PAUTHZ_CLIENT_CONTEXT_HANDLE  phAuthzClientContext
    );

AUTHZAPI
BOOL
WINAPI
AuthzInitializeContextFromAuthzContext(
    IN  DWORD                        Flags,
    IN  AUTHZ_CLIENT_CONTEXT_HANDLE  hAuthzClientContext,
    IN  PLARGE_INTEGER               pExpirationTime         OPTIONAL,
    IN  LUID                         Identifier,
    IN  PVOID                        DynamicGroupArgs,
    OUT PAUTHZ_CLIENT_CONTEXT_HANDLE phNewAuthzClientContext
    );

AUTHZAPI
BOOL
WINAPI
AuthzAddSidsToContext(
    IN  AUTHZ_CLIENT_CONTEXT_HANDLE  hAuthzClientContext,
    IN  PSID_AND_ATTRIBUTES          Sids                    OPTIONAL,
    IN  DWORD                        SidCount,
    IN  PSID_AND_ATTRIBUTES          RestrictedSids          OPTIONAL,
    IN  DWORD                        RestrictedSidCount,
    OUT PAUTHZ_CLIENT_CONTEXT_HANDLE phNewAuthzClientContext
    );

//
// Enumeration type to be used to specify the type of information to be
// retrieved from an existing AuthzClientContext.
//

typedef enum _AUTHZ_CONTEXT_INFORMATION_CLASS
{
    AuthzContextInfoUserSid = 1,
    AuthzContextInfoGroupsSids,
    AuthzContextInfoRestrictedSids,
    AuthzContextInfoPrivileges,
    AuthzContextInfoExpirationTime,
    AuthzContextInfoServerContext,
    AuthzContextInfoIdentifier,
    AuthzContextInfoSource,
    AuthzContextInfoAll
} AUTHZ_CONTEXT_INFORMATION_CLASS;

AUTHZAPI
BOOL
WINAPI
AuthzGetInformationFromContext(
    IN  AUTHZ_CLIENT_CONTEXT_HANDLE     hAuthzClientContext,
    IN  AUTHZ_CONTEXT_INFORMATION_CLASS InfoClass,
    IN  DWORD                           BufferSize,
    OUT PDWORD                          pSizeRequired,
    OUT PVOID                           Buffer
);

AUTHZAPI
BOOL
WINAPI
AuthzFreeContext(
    IN AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext
    );

//
// Valid flags that may be used in AuthzInitializeObjectAccessAuditEvent().
//

#define AUTHZ_NO_SUCCESS_AUDIT                   0x00000001
#define AUTHZ_NO_FAILURE_AUDIT                   0x00000002
#define AUTHZ_NO_ALLOC_STRINGS                   0x00000004

#define AUTHZ_VALID_OBJECT_ACCESS_AUDIT_FLAGS    (AUTHZ_NO_SUCCESS_AUDIT | \
                                                  AUTHZ_NO_FAILURE_AUDIT | \
                                                  AUTHZ_NO_ALLOC_STRINGS)

AUTHZAPI
BOOL
WINAPI
AuthzInitializeObjectAccessAuditEvent(
    IN  DWORD                         Flags,
    IN  AUTHZ_AUDIT_EVENT_TYPE_HANDLE hAuditEventType,
    IN  PWSTR                         szOperationType,
    IN  PWSTR                         szObjectType,
    IN  PWSTR                         szObjectName,
    IN  PWSTR                         szAdditionalInfo,
    OUT PAUTHZ_AUDIT_EVENT_HANDLE     phAuditEvent,
    IN  DWORD                         dwAdditionalParameterCount,
    ...
    );
    
//
// Enumeration type to be used to specify the type of information to be
// retrieved from an existing AUTHZ_AUDIT_EVENT_HANDLE.
//

typedef enum _AUTHZ_AUDIT_EVENT_INFORMATION_CLASS
{
    AuthzAuditEventInfoFlags = 1,
    AuthzAuditEventInfoOperationType,
    AuthzAuditEventInfoObjectType,
    AuthzAuditEventInfoObjectName,
    AuthzAuditEventInfoAdditionalInfo,
} AUTHZ_AUDIT_EVENT_INFORMATION_CLASS;

AUTHZAPI
BOOL
WINAPI
AuthzGetInformationFromAuditEvent(
    IN  AUTHZ_AUDIT_EVENT_HANDLE            hAuditEvent,
    IN  AUTHZ_AUDIT_EVENT_INFORMATION_CLASS InfoClass,
    IN  DWORD                               BufferSize,
    OUT PDWORD                              pSizeRequired,
    OUT PVOID                               Buffer
    );

AUTHZAPI
BOOL
WINAPI
AuthzFreeAuditEvent(
    IN AUTHZ_AUDIT_EVENT_HANDLE hAuditEvent
    );

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\vc7addon\devtools\common\win32sdk\include\avifmt.h ===
/****************************************************************************/
/*                                                                          */
/*        AVIFMT.H - Include file for working with AVI files                */
/*                                                                          */
/*        Note: You must include WINDOWS.H and MMSYSTEM.H before            */
/*        including this file.                                              */
/*                                                                          */
/*        Copyright (c) 1991-1998, Microsoft Corp.  All rights reserved.    */
/*                                                                          */
/*                                                                          */
/****************************************************************************/

#ifndef _INC_AVIFMT
#define _INC_AVIFMT	100	/* version number * 100 + revision */

#ifdef __cplusplus
extern "C" {            /* Assume C declarations for C++ */
#endif	/* __cplusplus */

// begin_vfw32

#ifdef _MSC_VER
#pragma warning(disable:4200)
#endif

/* The following is a short description of the AVI file format.  Please
 * see the accompanying documentation for a full explanation.
 *
 * An AVI file is the following RIFF form:
 *
 *	RIFF('AVI'
 *	      LIST('hdrl'
 *		    avih(<MainAVIHeader>)
 *                  LIST ('strl'
 *                      strh(<Stream header>)
 *                      strf(<Stream format>)
 *                      ... additional header data
 *            LIST('movi'	
 *      	  { LIST('rec'
 *      		      SubChunk...
 *      		   )
 *      	      | SubChunk } ....	
 *            )
 *            [ <AVIIndex> ]
 *      )
 *
 *	The main file header specifies how many streams are present.  For
 *	each one, there must be a stream header chunk and a stream format
 *	chunk, enlosed in a 'strl' LIST chunk.  The 'strf' chunk contains
 *	type-specific format information; for a video stream, this should
 *	be a BITMAPINFO structure, including palette.  For an audio stream,
 *	this should be a WAVEFORMAT (or PCMWAVEFORMAT) structure.
 *
 *	The actual data is contained in subchunks within the 'movi' LIST
 *	chunk.  The first two characters of each data chunk are the
 *	stream number with which that data is associated.
 *
 *	Some defined chunk types:
 *           Video Streams:
 *                  ##db:	RGB DIB bits
 *                  ##dc:	RLE8 compressed DIB bits
 *                  ##pc:	Palette Change
 *
 *           Audio Streams:
 *                  ##wb:	waveform audio bytes
 *
 * The grouping into LIST 'rec' chunks implies only that the contents of
 *   the chunk should be read into memory at the same time.  This
 *   grouping is used for files specifically intended to be played from
 *   CD-ROM.
 *
 * The index chunk at the end of the file should contain one entry for
 *   each data chunk in the file.
 *
 * Limitations for the current software:
 *	Only one video stream and one audio stream are allowed.
 *	The streams must start at the beginning of the file.
 *
 *
 * To register codec types please obtain a copy of the Multimedia
 * Developer Registration Kit from:
 *
 *  Microsoft Corporation
 *  Multimedia Systems Group
 *  Product Marketing
 *  One Microsoft Way
 *  Redmond, WA 98052-6399
 *
 */

#ifndef mmioFOURCC
#define mmioFOURCC( ch0, ch1, ch2, ch3 )				\
		( (DWORD)(BYTE)(ch0) | ( (DWORD)(BYTE)(ch1) << 8 ) |	\
		( (DWORD)(BYTE)(ch2) << 16 ) | ( (DWORD)(BYTE)(ch3) << 24 ) )
#endif

/* Macro to make a TWOCC out of two characters */
#ifndef aviTWOCC
#define aviTWOCC(ch0, ch1) ((WORD)(BYTE)(ch0) | ((WORD)(BYTE)(ch1) << 8))
#endif

typedef WORD TWOCC;

/* form types, list types, and chunk types */
#define formtypeAVI             mmioFOURCC('A', 'V', 'I', ' ')
#define listtypeAVIHEADER       mmioFOURCC('h', 'd', 'r', 'l')
#define ckidAVIMAINHDR          mmioFOURCC('a', 'v', 'i', 'h')
#define listtypeSTREAMHEADER    mmioFOURCC('s', 't', 'r', 'l')
#define ckidSTREAMHEADER        mmioFOURCC('s', 't', 'r', 'h')
#define ckidSTREAMFORMAT        mmioFOURCC('s', 't', 'r', 'f')
#define ckidSTREAMHANDLERDATA   mmioFOURCC('s', 't', 'r', 'd')
#define ckidSTREAMNAME		mmioFOURCC('s', 't', 'r', 'n')

#define listtypeAVIMOVIE        mmioFOURCC('m', 'o', 'v', 'i')
#define listtypeAVIRECORD       mmioFOURCC('r', 'e', 'c', ' ')

#define ckidAVINEWINDEX         mmioFOURCC('i', 'd', 'x', '1')

/*
** Stream types for the <fccType> field of the stream header.
*/
#define streamtypeVIDEO         mmioFOURCC('v', 'i', 'd', 's')
#define streamtypeAUDIO         mmioFOURCC('a', 'u', 'd', 's')
#define streamtypeMIDI		mmioFOURCC('m', 'i', 'd', 's')
#define streamtypeTEXT          mmioFOURCC('t', 'x', 't', 's')

/* Basic chunk types */
#define cktypeDIBbits           aviTWOCC('d', 'b')
#define cktypeDIBcompressed     aviTWOCC('d', 'c')
#define cktypePALchange         aviTWOCC('p', 'c')
#define cktypeWAVEbytes         aviTWOCC('w', 'b')

/* Chunk id to use for extra chunks for padding. */
#define ckidAVIPADDING          mmioFOURCC('J', 'U', 'N', 'K')

/*
** Useful macros
**
** Warning: These are nasty macro, and MS C 6.0 compiles some of them
** incorrectly if optimizations are on.  Ack.
*/

/* Macro to get stream number out of a FOURCC ckid */
#define FromHex(n)	(((n) >= 'A') ? ((n) + 10 - 'A') : ((n) - '0'))
#define StreamFromFOURCC(fcc) ((WORD) ((FromHex(LOBYTE(LOWORD(fcc))) << 4) + \
                                             (FromHex(HIBYTE(LOWORD(fcc))))))

/* Macro to get TWOCC chunk type out of a FOURCC ckid */
#define TWOCCFromFOURCC(fcc)    HIWORD(fcc)

/* Macro to make a ckid for a chunk out of a TWOCC and a stream number
** from 0-255.
*/
#define ToHex(n)	((BYTE) (((n) > 9) ? ((n) - 10 + 'A') : ((n) + '0')))
#define MAKEAVICKID(tcc, stream) \
        MAKELONG((ToHex((stream) & 0x0f) << 8) | \
			    (ToHex(((stream) & 0xf0) >> 4)), tcc)

/*
** Main AVI File Header
*/	
		
/* flags for use in <dwFlags> in AVIFileHdr */
#define AVIF_HASINDEX		0x00000010	// Index at end of file
#define AVIF_MUSTUSEINDEX	0x00000020
#define AVIF_ISINTERLEAVED	0x00000100
#define AVIF_TRUSTCKTYPE	0x00000800	// Use CKType to find key frames
#define AVIF_WASCAPTUREFILE	0x00010000
#define AVIF_COPYRIGHTED	0x00020000

/* The AVI File Header LIST chunk should be padded to this size */
#define AVI_HEADERSIZE  2048                    // size of AVI header list

typedef struct
{
    DWORD		dwMicroSecPerFrame;	// frame display rate (or 0L)
    DWORD		dwMaxBytesPerSec;	// max. transfer rate
    DWORD		dwPaddingGranularity;	// pad to multiples of this
                                                // size; normally 2K.
    DWORD		dwFlags;		// the ever-present flags
    DWORD		dwTotalFrames;		// # frames in file
    DWORD		dwInitialFrames;
    DWORD		dwStreams;
    DWORD		dwSuggestedBufferSize;

    DWORD		dwWidth;
    DWORD		dwHeight;

    DWORD		dwReserved[4];
} MainAVIHeader;

/*
** Stream header
*/

#define AVISF_DISABLED			0x00000001

#define AVISF_VIDEO_PALCHANGES		0x00010000

typedef struct {
    FOURCC		fccType;
    FOURCC		fccHandler;
    DWORD		dwFlags;	/* Contains AVITF_* flags */
    WORD		wPriority;
    WORD		wLanguage;
    DWORD		dwInitialFrames;
    DWORD		dwScale;	
    DWORD		dwRate;	/* dwRate / dwScale == samples/second */
    DWORD		dwStart;
    DWORD		dwLength; /* In units above... */
    DWORD		dwSuggestedBufferSize;
    DWORD		dwQuality;
    DWORD		dwSampleSize;
    RECT		rcFrame;
} AVIStreamHeader;

/* Flags for index */
#define AVIIF_LIST          0x00000001L // chunk is a 'LIST'
#define AVIIF_KEYFRAME      0x00000010L // this frame is a key frame.

#define AVIIF_NOTIME	    0x00000100L // this frame doesn't take any time
#define AVIIF_COMPUSE       0x0FFF0000L // these bits are for compressor use

typedef struct
{
    DWORD		ckid;
    DWORD		dwFlags;
    DWORD		dwChunkOffset;		// Position of chunk
    DWORD		dwChunkLength;		// Length of chunk
} AVIINDEXENTRY;

/*
** Palette change chunk
**
** Used in video streams.
*/
typedef struct
{
    BYTE		bFirstEntry;	/* first entry to change */
    BYTE		bNumEntries;	/* # entries to change (0 if 256) */
    WORD		wFlags;		/* Mostly to preserve alignment... */
    PALETTEENTRY	peNew[];	/* New color specifications */
} AVIPALCHANGE;

// end_vfw32

#ifdef __cplusplus
}                       /* End of extern "C" { */
#endif	/* __cplusplus */

#endif /* _INC_AVIFMT */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\vc7addon\devtools\common\win32sdk\include\basetsd.h ===
/*++

Copyright (c) Microsoft Corporation.  All rights reserved.

Module Name:

    basetsd.h

Abstract:

    Type definitions for the basic sized types.

Author:

Revision History:

--*/

#ifndef _BASETSD_H_
#define _BASETSD_H_

#if _MSC_VER > 1000
#pragma once
#endif

#ifdef __cplusplus
extern "C" {
#endif

typedef signed char         INT8, *PINT8;
typedef signed short        INT16, *PINT16;
typedef signed int          INT32, *PINT32;
typedef signed __int64      INT64, *PINT64;
typedef unsigned char       UINT8, *PUINT8;
typedef unsigned short      UINT16, *PUINT16;
typedef unsigned int        UINT32, *PUINT32;
typedef unsigned __int64    UINT64, *PUINT64;

//
// The following types are guaranteed to be signed and 32 bits wide.
//

typedef signed int LONG32, *PLONG32;

//
// The following types are guaranteed to be unsigned and 32 bits wide.
//

typedef unsigned int ULONG32, *PULONG32;
typedef unsigned int DWORD32, *PDWORD32;

#if !defined(_W64)
#if !defined(__midl) && (defined(_X86_) || defined(_M_IX86)) && _MSC_VER >= 1300
#define _W64 __w64
#else
#define _W64
#endif
#endif

//
// The INT_PTR is guaranteed to be the same size as a pointer.  Its
// size with change with pointer size (32/64).  It should be used
// anywhere that a pointer is cast to an integer type. UINT_PTR is
// the unsigned variation.
//
// __int3264 is intrinsic to 64b MIDL but not to old MIDL or to C compiler.
//
#if ( 501 < __midl )

    typedef [public] __int3264 INT_PTR, *PINT_PTR;
    typedef [public] unsigned __int3264 UINT_PTR, *PUINT_PTR;

    typedef [public] __int3264 LONG_PTR, *PLONG_PTR;
    typedef [public] unsigned __int3264 ULONG_PTR, *PULONG_PTR;

#else  // midl64
// old midl and C++ compiler

#if defined(_WIN64)
    typedef __int64 INT_PTR, *PINT_PTR;
    typedef unsigned __int64 UINT_PTR, *PUINT_PTR;

    typedef __int64 LONG_PTR, *PLONG_PTR;
    typedef unsigned __int64 ULONG_PTR, *PULONG_PTR;

    #define __int3264   __int64

#else
    typedef _W64 int INT_PTR, *PINT_PTR;
    typedef _W64 unsigned int UINT_PTR, *PUINT_PTR;

    typedef _W64 long LONG_PTR, *PLONG_PTR;
    typedef _W64 unsigned long ULONG_PTR, *PULONG_PTR;

    #define __int3264   __int32

#endif
#endif // midl64

//
// HALF_PTR is half the size of a pointer it intended for use with
// within strcuture which contain a pointer and two small fields.
// UHALF_PTR is the unsigned variation.
//

#ifdef _WIN64

#define ADDRESS_TAG_BIT 0x40000000000UI64

typedef __int64 SHANDLE_PTR;
typedef unsigned __int64 HANDLE_PTR;
typedef unsigned int UHALF_PTR, *PUHALF_PTR;
typedef int HALF_PTR, *PHALF_PTR;

#if !defined(__midl)
__inline
unsigned long
HandleToULong(
    const void *h
    )
{
    return((unsigned long) (ULONG_PTR) h );
}

__inline
long
HandleToLong(
    const void *h
    )
{
    return((long) (LONG_PTR) h );
}

__inline
void *
ULongToHandle(
    const unsigned long h
    )
{
    return((void *) (UINT_PTR) h );
}


__inline
void *
LongToHandle(
    const long h
    )
{
    return((void *) (INT_PTR) h );
}


__inline
unsigned long
PtrToUlong(
    const void  *p
    )
{
    return((unsigned long) (ULONG_PTR) p );
}

__inline
unsigned int
PtrToUint(
    const void  *p
    )
{
    return((unsigned int) (UINT_PTR) p );
}

__inline
unsigned short
PtrToUshort(
    const void  *p
    )
{
    return((unsigned short) (unsigned long) (ULONG_PTR) p );
}

__inline
long
PtrToLong(
    const void  *p
    )
{
    return((long) (LONG_PTR) p );
}

__inline
int
PtrToInt(
    const void  *p
    )
{
    return((int) (INT_PTR) p );
}

__inline
short
PtrToShort(
    const void  *p
    )
{
    return((short) (long) (LONG_PTR) p );
}

__inline
void *
IntToPtr(
    const int i
    )
// Caution: IntToPtr() sign-extends the int value.
{
    return( (void *)(INT_PTR)i );
}

__inline
void *
UIntToPtr(
    const unsigned int ui
    )
// Caution: UIntToPtr() zero-extends the unsigned int value.
{
    return( (void *)(UINT_PTR)ui );
}

__inline
void *
LongToPtr(
    const long l
    )
// Caution: LongToPtr() sign-extends the long value.
{
    return( (void *)(LONG_PTR)l );
}

__inline
void *
ULongToPtr(
    const unsigned long ul
    )
// Caution: ULongToPtr() zero-extends the unsigned long value.
{
    return( (void *)(ULONG_PTR)ul );
}

#endif // !_midl

#else  // !_WIN64

#define ADDRESS_TAG_BIT 0x80000000UL

typedef unsigned short UHALF_PTR, *PUHALF_PTR;
typedef short HALF_PTR, *PHALF_PTR;
typedef _W64 long SHANDLE_PTR;
typedef _W64 unsigned long HANDLE_PTR;

#define HandleToULong( h ) ((ULONG)(ULONG_PTR)(h) )
#define HandleToLong( h )  ((LONG)(LONG_PTR) (h) )
#define ULongToHandle( ul ) ((HANDLE)(ULONG_PTR) (ul) )
#define LongToHandle( h )   ((HANDLE)(LONG_PTR) (h) )
#define PtrToUlong( p ) ((ULONG)(ULONG_PTR) (p) )
#define PtrToLong( p )  ((LONG)(LONG_PTR) (p) )
#define PtrToUint( p ) ((UINT)(UINT_PTR) (p) )
#define PtrToInt( p )  ((INT)(INT_PTR) (p) )
#define PtrToUshort( p ) ((unsigned short)(ULONG_PTR)(p) )
#define PtrToShort( p )  ((short)(LONG_PTR)(p) )
#define IntToPtr( i )    ((VOID *)(INT_PTR)((int)i))
#define UIntToPtr( ui )  ((VOID *)(UINT_PTR)((unsigned int)ui))
#define LongToPtr( l )   ((VOID *)(LONG_PTR)((long)l))
#define ULongToPtr( ul ) ((VOID *)(ULONG_PTR)((unsigned long)ul))

#endif // !_WIN64

#define HandleToUlong(h)  HandleToULong(h)
#define UlongToHandle(ul) ULongToHandle(ul)
#define UlongToPtr(ul) ULongToPtr(ul)
#define UintToPtr(ui)  UIntToPtr(ui)

#define MAXUINT_PTR  (~((UINT_PTR)0))
#define MAXINT_PTR   ((INT_PTR)(MAXUINT_PTR >> 1))
#define MININT_PTR   (~MAXINT_PTR)

#define MAXULONG_PTR (~((ULONG_PTR)0))
#define MAXLONG_PTR  ((LONG_PTR)(MAXULONG_PTR >> 1))
#define MINLONG_PTR  (~MAXLONG_PTR)

#define MAXUHALF_PTR ((UHALF_PTR)~0)
#define MAXHALF_PTR  ((HALF_PTR)(MAXUHALF_PTR >> 1))
#define MINHALF_PTR  (~MAXHALF_PTR)

//
// SIZE_T used for counts or ranges which need to span the range of
// of a pointer.  SSIZE_T is the signed variation.
//

typedef ULONG_PTR SIZE_T, *PSIZE_T;
typedef LONG_PTR SSIZE_T, *PSSIZE_T;

//
// Add Windows flavor DWORD_PTR types
//

typedef ULONG_PTR DWORD_PTR, *PDWORD_PTR;

//
// The following types are guaranteed to be signed and 64 bits wide.
//

typedef __int64 LONG64, *PLONG64;


//
// The following types are guaranteed to be unsigned and 64 bits wide.
//

typedef unsigned __int64 ULONG64, *PULONG64;
typedef unsigned __int64 DWORD64, *PDWORD64;

//
// Thread affinity.
//

typedef ULONG_PTR KAFFINITY;
typedef KAFFINITY *PKAFFINITY;

#ifdef __cplusplus
}
#endif

#endif // _BASETSD_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\vc7addon\devtools\common\win32sdk\include\bdaiface.h ===
#pragma warning( disable: 4049 )  /* more than 64k source lines */

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 6.00.0347 */
/* Compiler settings for bdaiface.idl:
    Oicf, W1, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __bdaiface_h__
#define __bdaiface_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IBDA_NetworkProvider_FWD_DEFINED__
#define __IBDA_NetworkProvider_FWD_DEFINED__
typedef interface IBDA_NetworkProvider IBDA_NetworkProvider;
#endif 	/* __IBDA_NetworkProvider_FWD_DEFINED__ */


#ifndef __IBDA_EthernetFilter_FWD_DEFINED__
#define __IBDA_EthernetFilter_FWD_DEFINED__
typedef interface IBDA_EthernetFilter IBDA_EthernetFilter;
#endif 	/* __IBDA_EthernetFilter_FWD_DEFINED__ */


#ifndef __IBDA_IPV4Filter_FWD_DEFINED__
#define __IBDA_IPV4Filter_FWD_DEFINED__
typedef interface IBDA_IPV4Filter IBDA_IPV4Filter;
#endif 	/* __IBDA_IPV4Filter_FWD_DEFINED__ */


#ifndef __IBDA_IPV6Filter_FWD_DEFINED__
#define __IBDA_IPV6Filter_FWD_DEFINED__
typedef interface IBDA_IPV6Filter IBDA_IPV6Filter;
#endif 	/* __IBDA_IPV6Filter_FWD_DEFINED__ */


#ifndef __IBDA_DeviceControl_FWD_DEFINED__
#define __IBDA_DeviceControl_FWD_DEFINED__
typedef interface IBDA_DeviceControl IBDA_DeviceControl;
#endif 	/* __IBDA_DeviceControl_FWD_DEFINED__ */


#ifndef __IBDA_PinControl_FWD_DEFINED__
#define __IBDA_PinControl_FWD_DEFINED__
typedef interface IBDA_PinControl IBDA_PinControl;
#endif 	/* __IBDA_PinControl_FWD_DEFINED__ */


#ifndef __IBDA_SignalProperties_FWD_DEFINED__
#define __IBDA_SignalProperties_FWD_DEFINED__
typedef interface IBDA_SignalProperties IBDA_SignalProperties;
#endif 	/* __IBDA_SignalProperties_FWD_DEFINED__ */


#ifndef __IBDA_SignalStatistics_FWD_DEFINED__
#define __IBDA_SignalStatistics_FWD_DEFINED__
typedef interface IBDA_SignalStatistics IBDA_SignalStatistics;
#endif 	/* __IBDA_SignalStatistics_FWD_DEFINED__ */


#ifndef __IBDA_Topology_FWD_DEFINED__
#define __IBDA_Topology_FWD_DEFINED__
typedef interface IBDA_Topology IBDA_Topology;
#endif 	/* __IBDA_Topology_FWD_DEFINED__ */


#ifndef __IBDA_VoidTransform_FWD_DEFINED__
#define __IBDA_VoidTransform_FWD_DEFINED__
typedef interface IBDA_VoidTransform IBDA_VoidTransform;
#endif 	/* __IBDA_VoidTransform_FWD_DEFINED__ */


#ifndef __IBDA_NullTransform_FWD_DEFINED__
#define __IBDA_NullTransform_FWD_DEFINED__
typedef interface IBDA_NullTransform IBDA_NullTransform;
#endif 	/* __IBDA_NullTransform_FWD_DEFINED__ */


#ifndef __IBDA_FrequencyFilter_FWD_DEFINED__
#define __IBDA_FrequencyFilter_FWD_DEFINED__
typedef interface IBDA_FrequencyFilter IBDA_FrequencyFilter;
#endif 	/* __IBDA_FrequencyFilter_FWD_DEFINED__ */


#ifndef __IBDA_LNBInfo_FWD_DEFINED__
#define __IBDA_LNBInfo_FWD_DEFINED__
typedef interface IBDA_LNBInfo IBDA_LNBInfo;
#endif 	/* __IBDA_LNBInfo_FWD_DEFINED__ */


#ifndef __IBDA_AutoDemodulate_FWD_DEFINED__
#define __IBDA_AutoDemodulate_FWD_DEFINED__
typedef interface IBDA_AutoDemodulate IBDA_AutoDemodulate;
#endif 	/* __IBDA_AutoDemodulate_FWD_DEFINED__ */


#ifndef __IBDA_DigitalDemodulator_FWD_DEFINED__
#define __IBDA_DigitalDemodulator_FWD_DEFINED__
typedef interface IBDA_DigitalDemodulator IBDA_DigitalDemodulator;
#endif 	/* __IBDA_DigitalDemodulator_FWD_DEFINED__ */


#ifndef __IBDA_IPSinkControl_FWD_DEFINED__
#define __IBDA_IPSinkControl_FWD_DEFINED__
typedef interface IBDA_IPSinkControl IBDA_IPSinkControl;
#endif 	/* __IBDA_IPSinkControl_FWD_DEFINED__ */


#ifndef __IBDA_IPSinkInfo_FWD_DEFINED__
#define __IBDA_IPSinkInfo_FWD_DEFINED__
typedef interface IBDA_IPSinkInfo IBDA_IPSinkInfo;
#endif 	/* __IBDA_IPSinkInfo_FWD_DEFINED__ */


#ifndef __IEnumPIDMap_FWD_DEFINED__
#define __IEnumPIDMap_FWD_DEFINED__
typedef interface IEnumPIDMap IEnumPIDMap;
#endif 	/* __IEnumPIDMap_FWD_DEFINED__ */


#ifndef __IMPEG2PIDMap_FWD_DEFINED__
#define __IMPEG2PIDMap_FWD_DEFINED__
typedef interface IMPEG2PIDMap IMPEG2PIDMap;
#endif 	/* __IMPEG2PIDMap_FWD_DEFINED__ */


/* header files for imported files */
#include "unknwn.h"
#include "strmif.h"
#include "BdaTypes.h"

#ifdef __cplusplus
extern "C"{
#endif 

void * __RPC_USER MIDL_user_allocate(size_t);
void __RPC_USER MIDL_user_free( void * ); 

#ifndef __IBDA_NetworkProvider_INTERFACE_DEFINED__
#define __IBDA_NetworkProvider_INTERFACE_DEFINED__

/* interface IBDA_NetworkProvider */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IBDA_NetworkProvider;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("fd501041-8ebe-11ce-8183-00aa00577da2")
    IBDA_NetworkProvider : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE PutSignalSource( 
            /* [in] */ ULONG ulSignalSource) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSignalSource( 
            /* [out][in] */ ULONG *pulSignalSource) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNetworkType( 
            /* [out][in] */ GUID *pguidNetworkType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PutTuningSpace( 
            /* [in] */ REFGUID guidTuningSpace) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTuningSpace( 
            /* [out][in] */ GUID *pguidTuingSpace) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RegisterDeviceFilter( 
            /* [in] */ IUnknown *pUnkFilterControl,
            /* [out][in] */ ULONG *ppvRegisitrationContext) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UnRegisterDeviceFilter( 
            /* [in] */ ULONG pvRegistrationContext) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_NetworkProviderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IBDA_NetworkProvider * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IBDA_NetworkProvider * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IBDA_NetworkProvider * This);
        
        HRESULT ( STDMETHODCALLTYPE *PutSignalSource )( 
            IBDA_NetworkProvider * This,
            /* [in] */ ULONG ulSignalSource);
        
        HRESULT ( STDMETHODCALLTYPE *GetSignalSource )( 
            IBDA_NetworkProvider * This,
            /* [out][in] */ ULONG *pulSignalSource);
        
        HRESULT ( STDMETHODCALLTYPE *GetNetworkType )( 
            IBDA_NetworkProvider * This,
            /* [out][in] */ GUID *pguidNetworkType);
        
        HRESULT ( STDMETHODCALLTYPE *PutTuningSpace )( 
            IBDA_NetworkProvider * This,
            /* [in] */ REFGUID guidTuningSpace);
        
        HRESULT ( STDMETHODCALLTYPE *GetTuningSpace )( 
            IBDA_NetworkProvider * This,
            /* [out][in] */ GUID *pguidTuingSpace);
        
        HRESULT ( STDMETHODCALLTYPE *RegisterDeviceFilter )( 
            IBDA_NetworkProvider * This,
            /* [in] */ IUnknown *pUnkFilterControl,
            /* [out][in] */ ULONG *ppvRegisitrationContext);
        
        HRESULT ( STDMETHODCALLTYPE *UnRegisterDeviceFilter )( 
            IBDA_NetworkProvider * This,
            /* [in] */ ULONG pvRegistrationContext);
        
        END_INTERFACE
    } IBDA_NetworkProviderVtbl;

    interface IBDA_NetworkProvider
    {
        CONST_VTBL struct IBDA_NetworkProviderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_NetworkProvider_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IBDA_NetworkProvider_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IBDA_NetworkProvider_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IBDA_NetworkProvider_PutSignalSource(This,ulSignalSource)	\
    (This)->lpVtbl -> PutSignalSource(This,ulSignalSource)

#define IBDA_NetworkProvider_GetSignalSource(This,pulSignalSource)	\
    (This)->lpVtbl -> GetSignalSource(This,pulSignalSource)

#define IBDA_NetworkProvider_GetNetworkType(This,pguidNetworkType)	\
    (This)->lpVtbl -> GetNetworkType(This,pguidNetworkType)

#define IBDA_NetworkProvider_PutTuningSpace(This,guidTuningSpace)	\
    (This)->lpVtbl -> PutTuningSpace(This,guidTuningSpace)

#define IBDA_NetworkProvider_GetTuningSpace(This,pguidTuingSpace)	\
    (This)->lpVtbl -> GetTuningSpace(This,pguidTuingSpace)

#define IBDA_NetworkProvider_RegisterDeviceFilter(This,pUnkFilterControl,ppvRegisitrationContext)	\
    (This)->lpVtbl -> RegisterDeviceFilter(This,pUnkFilterControl,ppvRegisitrationContext)

#define IBDA_NetworkProvider_UnRegisterDeviceFilter(This,pvRegistrationContext)	\
    (This)->lpVtbl -> UnRegisterDeviceFilter(This,pvRegistrationContext)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IBDA_NetworkProvider_PutSignalSource_Proxy( 
    IBDA_NetworkProvider * This,
    /* [in] */ ULONG ulSignalSource);


void __RPC_STUB IBDA_NetworkProvider_PutSignalSource_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_NetworkProvider_GetSignalSource_Proxy( 
    IBDA_NetworkProvider * This,
    /* [out][in] */ ULONG *pulSignalSource);


void __RPC_STUB IBDA_NetworkProvider_GetSignalSource_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_NetworkProvider_GetNetworkType_Proxy( 
    IBDA_NetworkProvider * This,
    /* [out][in] */ GUID *pguidNetworkType);


void __RPC_STUB IBDA_NetworkProvider_GetNetworkType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_NetworkProvider_PutTuningSpace_Proxy( 
    IBDA_NetworkProvider * This,
    /* [in] */ REFGUID guidTuningSpace);


void __RPC_STUB IBDA_NetworkProvider_PutTuningSpace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_NetworkProvider_GetTuningSpace_Proxy( 
    IBDA_NetworkProvider * This,
    /* [out][in] */ GUID *pguidTuingSpace);


void __RPC_STUB IBDA_NetworkProvider_GetTuningSpace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_NetworkProvider_RegisterDeviceFilter_Proxy( 
    IBDA_NetworkProvider * This,
    /* [in] */ IUnknown *pUnkFilterControl,
    /* [out][in] */ ULONG *ppvRegisitrationContext);


void __RPC_STUB IBDA_NetworkProvider_RegisterDeviceFilter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_NetworkProvider_UnRegisterDeviceFilter_Proxy( 
    IBDA_NetworkProvider * This,
    /* [in] */ ULONG pvRegistrationContext);


void __RPC_STUB IBDA_NetworkProvider_UnRegisterDeviceFilter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IBDA_NetworkProvider_INTERFACE_DEFINED__ */


#ifndef __IBDA_EthernetFilter_INTERFACE_DEFINED__
#define __IBDA_EthernetFilter_INTERFACE_DEFINED__

/* interface IBDA_EthernetFilter */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IBDA_EthernetFilter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("71985F43-1CA1-11d3-9CC8-00C04F7971E0")
    IBDA_EthernetFilter : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetMulticastListSize( 
            /* [out][in] */ ULONG *pulcbAddresses) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PutMulticastList( 
            /* [in] */ ULONG ulcbAddresses,
            /* [size_is][in] */ BYTE pAddressList[  ]) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMulticastList( 
            /* [out][in] */ ULONG *pulcbAddresses,
            /* [size_is][out] */ BYTE pAddressList[  ]) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PutMulticastMode( 
            /* [in] */ ULONG ulModeMask) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMulticastMode( 
            /* [out] */ ULONG *pulModeMask) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_EthernetFilterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IBDA_EthernetFilter * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IBDA_EthernetFilter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IBDA_EthernetFilter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMulticastListSize )( 
            IBDA_EthernetFilter * This,
            /* [out][in] */ ULONG *pulcbAddresses);
        
        HRESULT ( STDMETHODCALLTYPE *PutMulticastList )( 
            IBDA_EthernetFilter * This,
            /* [in] */ ULONG ulcbAddresses,
            /* [size_is][in] */ BYTE pAddressList[  ]);
        
        HRESULT ( STDMETHODCALLTYPE *GetMulticastList )( 
            IBDA_EthernetFilter * This,
            /* [out][in] */ ULONG *pulcbAddresses,
            /* [size_is][out] */ BYTE pAddressList[  ]);
        
        HRESULT ( STDMETHODCALLTYPE *PutMulticastMode )( 
            IBDA_EthernetFilter * This,
            /* [in] */ ULONG ulModeMask);
        
        HRESULT ( STDMETHODCALLTYPE *GetMulticastMode )( 
            IBDA_EthernetFilter * This,
            /* [out] */ ULONG *pulModeMask);
        
        END_INTERFACE
    } IBDA_EthernetFilterVtbl;

    interface IBDA_EthernetFilter
    {
        CONST_VTBL struct IBDA_EthernetFilterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_EthernetFilter_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IBDA_EthernetFilter_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IBDA_EthernetFilter_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IBDA_EthernetFilter_GetMulticastListSize(This,pulcbAddresses)	\
    (This)->lpVtbl -> GetMulticastListSize(This,pulcbAddresses)

#define IBDA_EthernetFilter_PutMulticastList(This,ulcbAddresses,pAddressList)	\
    (This)->lpVtbl -> PutMulticastList(This,ulcbAddresses,pAddressList)

#define IBDA_EthernetFilter_GetMulticastList(This,pulcbAddresses,pAddressList)	\
    (This)->lpVtbl -> GetMulticastList(This,pulcbAddresses,pAddressList)

#define IBDA_EthernetFilter_PutMulticastMode(This,ulModeMask)	\
    (This)->lpVtbl -> PutMulticastMode(This,ulModeMask)

#define IBDA_EthernetFilter_GetMulticastMode(This,pulModeMask)	\
    (This)->lpVtbl -> GetMulticastMode(This,pulModeMask)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IBDA_EthernetFilter_GetMulticastListSize_Proxy( 
    IBDA_EthernetFilter * This,
    /* [out][in] */ ULONG *pulcbAddresses);


void __RPC_STUB IBDA_EthernetFilter_GetMulticastListSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_EthernetFilter_PutMulticastList_Proxy( 
    IBDA_EthernetFilter * This,
    /* [in] */ ULONG ulcbAddresses,
    /* [size_is][in] */ BYTE pAddressList[  ]);


void __RPC_STUB IBDA_EthernetFilter_PutMulticastList_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_EthernetFilter_GetMulticastList_Proxy( 
    IBDA_EthernetFilter * This,
    /* [out][in] */ ULONG *pulcbAddresses,
    /* [size_is][out] */ BYTE pAddressList[  ]);


void __RPC_STUB IBDA_EthernetFilter_GetMulticastList_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_EthernetFilter_PutMulticastMode_Proxy( 
    IBDA_EthernetFilter * This,
    /* [in] */ ULONG ulModeMask);


void __RPC_STUB IBDA_EthernetFilter_PutMulticastMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_EthernetFilter_GetMulticastMode_Proxy( 
    IBDA_EthernetFilter * This,
    /* [out] */ ULONG *pulModeMask);


void __RPC_STUB IBDA_EthernetFilter_GetMulticastMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IBDA_EthernetFilter_INTERFACE_DEFINED__ */


#ifndef __IBDA_IPV4Filter_INTERFACE_DEFINED__
#define __IBDA_IPV4Filter_INTERFACE_DEFINED__

/* interface IBDA_IPV4Filter */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IBDA_IPV4Filter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("71985F44-1CA1-11d3-9CC8-00C04F7971E0")
    IBDA_IPV4Filter : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetMulticastListSize( 
            /* [out][in] */ ULONG *pulcbAddresses) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PutMulticastList( 
            /* [in] */ ULONG ulcbAddresses,
            /* [size_is][in] */ BYTE pAddressList[  ]) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMulticastList( 
            /* [out][in] */ ULONG *pulcbAddresses,
            /* [size_is][out] */ BYTE pAddressList[  ]) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PutMulticastMode( 
            /* [in] */ ULONG ulModeMask) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMulticastMode( 
            /* [out] */ ULONG *pulModeMask) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_IPV4FilterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IBDA_IPV4Filter * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IBDA_IPV4Filter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IBDA_IPV4Filter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMulticastListSize )( 
            IBDA_IPV4Filter * This,
            /* [out][in] */ ULONG *pulcbAddresses);
        
        HRESULT ( STDMETHODCALLTYPE *PutMulticastList )( 
            IBDA_IPV4Filter * This,
            /* [in] */ ULONG ulcbAddresses,
            /* [size_is][in] */ BYTE pAddressList[  ]);
        
        HRESULT ( STDMETHODCALLTYPE *GetMulticastList )( 
            IBDA_IPV4Filter * This,
            /* [out][in] */ ULONG *pulcbAddresses,
            /* [size_is][out] */ BYTE pAddressList[  ]);
        
        HRESULT ( STDMETHODCALLTYPE *PutMulticastMode )( 
            IBDA_IPV4Filter * This,
            /* [in] */ ULONG ulModeMask);
        
        HRESULT ( STDMETHODCALLTYPE *GetMulticastMode )( 
            IBDA_IPV4Filter * This,
            /* [out] */ ULONG *pulModeMask);
        
        END_INTERFACE
    } IBDA_IPV4FilterVtbl;

    interface IBDA_IPV4Filter
    {
        CONST_VTBL struct IBDA_IPV4FilterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_IPV4Filter_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IBDA_IPV4Filter_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IBDA_IPV4Filter_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IBDA_IPV4Filter_GetMulticastListSize(This,pulcbAddresses)	\
    (This)->lpVtbl -> GetMulticastListSize(This,pulcbAddresses)

#define IBDA_IPV4Filter_PutMulticastList(This,ulcbAddresses,pAddressList)	\
    (This)->lpVtbl -> PutMulticastList(This,ulcbAddresses,pAddressList)

#define IBDA_IPV4Filter_GetMulticastList(This,pulcbAddresses,pAddressList)	\
    (This)->lpVtbl -> GetMulticastList(This,pulcbAddresses,pAddressList)

#define IBDA_IPV4Filter_PutMulticastMode(This,ulModeMask)	\
    (This)->lpVtbl -> PutMulticastMode(This,ulModeMask)

#define IBDA_IPV4Filter_GetMulticastMode(This,pulModeMask)	\
    (This)->lpVtbl -> GetMulticastMode(This,pulModeMask)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IBDA_IPV4Filter_GetMulticastListSize_Proxy( 
    IBDA_IPV4Filter * This,
    /* [out][in] */ ULONG *pulcbAddresses);


void __RPC_STUB IBDA_IPV4Filter_GetMulticastListSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_IPV4Filter_PutMulticastList_Proxy( 
    IBDA_IPV4Filter * This,
    /* [in] */ ULONG ulcbAddresses,
    /* [size_is][in] */ BYTE pAddressList[  ]);


void __RPC_STUB IBDA_IPV4Filter_PutMulticastList_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_IPV4Filter_GetMulticastList_Proxy( 
    IBDA_IPV4Filter * This,
    /* [out][in] */ ULONG *pulcbAddresses,
    /* [size_is][out] */ BYTE pAddressList[  ]);


void __RPC_STUB IBDA_IPV4Filter_GetMulticastList_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_IPV4Filter_PutMulticastMode_Proxy( 
    IBDA_IPV4Filter * This,
    /* [in] */ ULONG ulModeMask);


void __RPC_STUB IBDA_IPV4Filter_PutMulticastMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_IPV4Filter_GetMulticastMode_Proxy( 
    IBDA_IPV4Filter * This,
    /* [out] */ ULONG *pulModeMask);


void __RPC_STUB IBDA_IPV4Filter_GetMulticastMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IBDA_IPV4Filter_INTERFACE_DEFINED__ */


#ifndef __IBDA_IPV6Filter_INTERFACE_DEFINED__
#define __IBDA_IPV6Filter_INTERFACE_DEFINED__

/* interface IBDA_IPV6Filter */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IBDA_IPV6Filter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E1785A74-2A23-4fb3-9245-A8F88017EF33")
    IBDA_IPV6Filter : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetMulticastListSize( 
            /* [out][in] */ ULONG *pulcbAddresses) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PutMulticastList( 
            /* [in] */ ULONG ulcbAddresses,
            /* [size_is][in] */ BYTE pAddressList[  ]) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMulticastList( 
            /* [out][in] */ ULONG *pulcbAddresses,
            /* [size_is][out] */ BYTE pAddressList[  ]) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PutMulticastMode( 
            /* [in] */ ULONG ulModeMask) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMulticastMode( 
            /* [out] */ ULONG *pulModeMask) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_IPV6FilterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IBDA_IPV6Filter * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IBDA_IPV6Filter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IBDA_IPV6Filter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMulticastListSize )( 
            IBDA_IPV6Filter * This,
            /* [out][in] */ ULONG *pulcbAddresses);
        
        HRESULT ( STDMETHODCALLTYPE *PutMulticastList )( 
            IBDA_IPV6Filter * This,
            /* [in] */ ULONG ulcbAddresses,
            /* [size_is][in] */ BYTE pAddressList[  ]);
        
        HRESULT ( STDMETHODCALLTYPE *GetMulticastList )( 
            IBDA_IPV6Filter * This,
            /* [out][in] */ ULONG *pulcbAddresses,
            /* [size_is][out] */ BYTE pAddressList[  ]);
        
        HRESULT ( STDMETHODCALLTYPE *PutMulticastMode )( 
            IBDA_IPV6Filter * This,
            /* [in] */ ULONG ulModeMask);
        
        HRESULT ( STDMETHODCALLTYPE *GetMulticastMode )( 
            IBDA_IPV6Filter * This,
            /* [out] */ ULONG *pulModeMask);
        
        END_INTERFACE
    } IBDA_IPV6FilterVtbl;

    interface IBDA_IPV6Filter
    {
        CONST_VTBL struct IBDA_IPV6FilterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_IPV6Filter_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IBDA_IPV6Filter_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IBDA_IPV6Filter_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IBDA_IPV6Filter_GetMulticastListSize(This,pulcbAddresses)	\
    (This)->lpVtbl -> GetMulticastListSize(This,pulcbAddresses)

#define IBDA_IPV6Filter_PutMulticastList(This,ulcbAddresses,pAddressList)	\
    (This)->lpVtbl -> PutMulticastList(This,ulcbAddresses,pAddressList)

#define IBDA_IPV6Filter_GetMulticastList(This,pulcbAddresses,pAddressList)	\
    (This)->lpVtbl -> GetMulticastList(This,pulcbAddresses,pAddressList)

#define IBDA_IPV6Filter_PutMulticastMode(This,ulModeMask)	\
    (This)->lpVtbl -> PutMulticastMode(This,ulModeMask)

#define IBDA_IPV6Filter_GetMulticastMode(This,pulModeMask)	\
    (This)->lpVtbl -> GetMulticastMode(This,pulModeMask)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IBDA_IPV6Filter_GetMulticastListSize_Proxy( 
    IBDA_IPV6Filter * This,
    /* [out][in] */ ULONG *pulcbAddresses);


void __RPC_STUB IBDA_IPV6Filter_GetMulticastListSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_IPV6Filter_PutMulticastList_Proxy( 
    IBDA_IPV6Filter * This,
    /* [in] */ ULONG ulcbAddresses,
    /* [size_is][in] */ BYTE pAddressList[  ]);


void __RPC_STUB IBDA_IPV6Filter_PutMulticastList_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_IPV6Filter_GetMulticastList_Proxy( 
    IBDA_IPV6Filter * This,
    /* [out][in] */ ULONG *pulcbAddresses,
    /* [size_is][out] */ BYTE pAddressList[  ]);


void __RPC_STUB IBDA_IPV6Filter_GetMulticastList_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_IPV6Filter_PutMulticastMode_Proxy( 
    IBDA_IPV6Filter * This,
    /* [in] */ ULONG ulModeMask);


void __RPC_STUB IBDA_IPV6Filter_PutMulticastMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_IPV6Filter_GetMulticastMode_Proxy( 
    IBDA_IPV6Filter * This,
    /* [out] */ ULONG *pulModeMask);


void __RPC_STUB IBDA_IPV6Filter_GetMulticastMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IBDA_IPV6Filter_INTERFACE_DEFINED__ */


#ifndef __IBDA_DeviceControl_INTERFACE_DEFINED__
#define __IBDA_DeviceControl_INTERFACE_DEFINED__

/* interface IBDA_DeviceControl */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IBDA_DeviceControl;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("FD0A5AF3-B41D-11d2-9C95-00C04F7971E0")
    IBDA_DeviceControl : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE StartChanges( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CheckChanges( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CommitChanges( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetChangeState( 
            /* [out][in] */ ULONG *pState) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_DeviceControlVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IBDA_DeviceControl * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IBDA_DeviceControl * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IBDA_DeviceControl * This);
        
        HRESULT ( STDMETHODCALLTYPE *StartChanges )( 
            IBDA_DeviceControl * This);
        
        HRESULT ( STDMETHODCALLTYPE *CheckChanges )( 
            IBDA_DeviceControl * This);
        
        HRESULT ( STDMETHODCALLTYPE *CommitChanges )( 
            IBDA_DeviceControl * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetChangeState )( 
            IBDA_DeviceControl * This,
            /* [out][in] */ ULONG *pState);
        
        END_INTERFACE
    } IBDA_DeviceControlVtbl;

    interface IBDA_DeviceControl
    {
        CONST_VTBL struct IBDA_DeviceControlVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_DeviceControl_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IBDA_DeviceControl_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IBDA_DeviceControl_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IBDA_DeviceControl_StartChanges(This)	\
    (This)->lpVtbl -> StartChanges(This)

#define IBDA_DeviceControl_CheckChanges(This)	\
    (This)->lpVtbl -> CheckChanges(This)

#define IBDA_DeviceControl_CommitChanges(This)	\
    (This)->lpVtbl -> CommitChanges(This)

#define IBDA_DeviceControl_GetChangeState(This,pState)	\
    (This)->lpVtbl -> GetChangeState(This,pState)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IBDA_DeviceControl_StartChanges_Proxy( 
    IBDA_DeviceControl * This);


void __RPC_STUB IBDA_DeviceControl_StartChanges_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_DeviceControl_CheckChanges_Proxy( 
    IBDA_DeviceControl * This);


void __RPC_STUB IBDA_DeviceControl_CheckChanges_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_DeviceControl_CommitChanges_Proxy( 
    IBDA_DeviceControl * This);


void __RPC_STUB IBDA_DeviceControl_CommitChanges_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_DeviceControl_GetChangeState_Proxy( 
    IBDA_DeviceControl * This,
    /* [out][in] */ ULONG *pState);


void __RPC_STUB IBDA_DeviceControl_GetChangeState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IBDA_DeviceControl_INTERFACE_DEFINED__ */


#ifndef __IBDA_PinControl_INTERFACE_DEFINED__
#define __IBDA_PinControl_INTERFACE_DEFINED__

/* interface IBDA_PinControl */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IBDA_PinControl;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0DED49D5-A8B7-4d5d-97A1-12B0C195874D")
    IBDA_PinControl : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetPinID( 
            /* [out][in] */ ULONG *pulPinID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPinType( 
            /* [out][in] */ ULONG *pulPinType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RegistrationContext( 
            /* [out][in] */ ULONG *pulRegistrationCtx) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_PinControlVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IBDA_PinControl * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IBDA_PinControl * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IBDA_PinControl * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetPinID )( 
            IBDA_PinControl * This,
            /* [out][in] */ ULONG *pulPinID);
        
        HRESULT ( STDMETHODCALLTYPE *GetPinType )( 
            IBDA_PinControl * This,
            /* [out][in] */ ULONG *pulPinType);
        
        HRESULT ( STDMETHODCALLTYPE *RegistrationContext )( 
            IBDA_PinControl * This,
            /* [out][in] */ ULONG *pulRegistrationCtx);
        
        END_INTERFACE
    } IBDA_PinControlVtbl;

    interface IBDA_PinControl
    {
        CONST_VTBL struct IBDA_PinControlVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_PinControl_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IBDA_PinControl_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IBDA_PinControl_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IBDA_PinControl_GetPinID(This,pulPinID)	\
    (This)->lpVtbl -> GetPinID(This,pulPinID)

#define IBDA_PinControl_GetPinType(This,pulPinType)	\
    (This)->lpVtbl -> GetPinType(This,pulPinType)

#define IBDA_PinControl_RegistrationContext(This,pulRegistrationCtx)	\
    (This)->lpVtbl -> RegistrationContext(This,pulRegistrationCtx)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IBDA_PinControl_GetPinID_Proxy( 
    IBDA_PinControl * This,
    /* [out][in] */ ULONG *pulPinID);


void __RPC_STUB IBDA_PinControl_GetPinID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_PinControl_GetPinType_Proxy( 
    IBDA_PinControl * This,
    /* [out][in] */ ULONG *pulPinType);


void __RPC_STUB IBDA_PinControl_GetPinType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_PinControl_RegistrationContext_Proxy( 
    IBDA_PinControl * This,
    /* [out][in] */ ULONG *pulRegistrationCtx);


void __RPC_STUB IBDA_PinControl_RegistrationContext_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IBDA_PinControl_INTERFACE_DEFINED__ */


#ifndef __IBDA_SignalProperties_INTERFACE_DEFINED__
#define __IBDA_SignalProperties_INTERFACE_DEFINED__

/* interface IBDA_SignalProperties */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IBDA_SignalProperties;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D2F1644B-B409-11d2-BC69-00A0C9EE9E16")
    IBDA_SignalProperties : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE PutNetworkType( 
            /* [in] */ REFGUID guidNetworkType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNetworkType( 
            /* [out][in] */ GUID *pguidNetworkType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PutSignalSource( 
            /* [in] */ ULONG ulSignalSource) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSignalSource( 
            /* [out][in] */ ULONG *pulSignalSource) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PutTuningSpace( 
            /* [in] */ REFGUID guidTuningSpace) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTuningSpace( 
            /* [out][in] */ GUID *pguidTuingSpace) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_SignalPropertiesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IBDA_SignalProperties * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IBDA_SignalProperties * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IBDA_SignalProperties * This);
        
        HRESULT ( STDMETHODCALLTYPE *PutNetworkType )( 
            IBDA_SignalProperties * This,
            /* [in] */ REFGUID guidNetworkType);
        
        HRESULT ( STDMETHODCALLTYPE *GetNetworkType )( 
            IBDA_SignalProperties * This,
            /* [out][in] */ GUID *pguidNetworkType);
        
        HRESULT ( STDMETHODCALLTYPE *PutSignalSource )( 
            IBDA_SignalProperties * This,
            /* [in] */ ULONG ulSignalSource);
        
        HRESULT ( STDMETHODCALLTYPE *GetSignalSource )( 
            IBDA_SignalProperties * This,
            /* [out][in] */ ULONG *pulSignalSource);
        
        HRESULT ( STDMETHODCALLTYPE *PutTuningSpace )( 
            IBDA_SignalProperties * This,
            /* [in] */ REFGUID guidTuningSpace);
        
        HRESULT ( STDMETHODCALLTYPE *GetTuningSpace )( 
            IBDA_SignalProperties * This,
            /* [out][in] */ GUID *pguidTuingSpace);
        
        END_INTERFACE
    } IBDA_SignalPropertiesVtbl;

    interface IBDA_SignalProperties
    {
        CONST_VTBL struct IBDA_SignalPropertiesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_SignalProperties_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IBDA_SignalProperties_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IBDA_SignalProperties_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IBDA_SignalProperties_PutNetworkType(This,guidNetworkType)	\
    (This)->lpVtbl -> PutNetworkType(This,guidNetworkType)

#define IBDA_SignalProperties_GetNetworkType(This,pguidNetworkType)	\
    (This)->lpVtbl -> GetNetworkType(This,pguidNetworkType)

#define IBDA_SignalProperties_PutSignalSource(This,ulSignalSource)	\
    (This)->lpVtbl -> PutSignalSource(This,ulSignalSource)

#define IBDA_SignalProperties_GetSignalSource(This,pulSignalSource)	\
    (This)->lpVtbl -> GetSignalSource(This,pulSignalSource)

#define IBDA_SignalProperties_PutTuningSpace(This,guidTuningSpace)	\
    (This)->lpVtbl -> PutTuningSpace(This,guidTuningSpace)

#define IBDA_SignalProperties_GetTuningSpace(This,pguidTuingSpace)	\
    (This)->lpVtbl -> GetTuningSpace(This,pguidTuingSpace)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IBDA_SignalProperties_PutNetworkType_Proxy( 
    IBDA_SignalProperties * This,
    /* [in] */ REFGUID guidNetworkType);


void __RPC_STUB IBDA_SignalProperties_PutNetworkType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_SignalProperties_GetNetworkType_Proxy( 
    IBDA_SignalProperties * This,
    /* [out][in] */ GUID *pguidNetworkType);


void __RPC_STUB IBDA_SignalProperties_GetNetworkType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_SignalProperties_PutSignalSource_Proxy( 
    IBDA_SignalProperties * This,
    /* [in] */ ULONG ulSignalSource);


void __RPC_STUB IBDA_SignalProperties_PutSignalSource_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_SignalProperties_GetSignalSource_Proxy( 
    IBDA_SignalProperties * This,
    /* [out][in] */ ULONG *pulSignalSource);


void __RPC_STUB IBDA_SignalProperties_GetSignalSource_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_SignalProperties_PutTuningSpace_Proxy( 
    IBDA_SignalProperties * This,
    /* [in] */ REFGUID guidTuningSpace);


void __RPC_STUB IBDA_SignalProperties_PutTuningSpace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_SignalProperties_GetTuningSpace_Proxy( 
    IBDA_SignalProperties * This,
    /* [out][in] */ GUID *pguidTuingSpace);


void __RPC_STUB IBDA_SignalProperties_GetTuningSpace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IBDA_SignalProperties_INTERFACE_DEFINED__ */


#ifndef __IBDA_SignalStatistics_INTERFACE_DEFINED__
#define __IBDA_SignalStatistics_INTERFACE_DEFINED__

/* interface IBDA_SignalStatistics */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IBDA_SignalStatistics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1347D106-CF3A-428a-A5CB-AC0D9A2A4338")
    IBDA_SignalStatistics : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE put_SignalStrength( 
            /* [in] */ LONG lDbStrength) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_SignalStrength( 
            /* [out][in] */ LONG *plDbStrength) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE put_SignalQuality( 
            /* [in] */ LONG lPercentQuality) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_SignalQuality( 
            /* [out][in] */ LONG *plPercentQuality) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE put_SignalPresent( 
            /* [in] */ BOOLEAN fPresent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_SignalPresent( 
            /* [out][in] */ BOOLEAN *pfPresent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE put_SignalLocked( 
            /* [in] */ BOOLEAN fLocked) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_SignalLocked( 
            /* [out][in] */ BOOLEAN *pfLocked) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE put_SampleTime( 
            /* [in] */ LONG lmsSampleTime) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_SampleTime( 
            /* [out][in] */ LONG *plmsSampleTime) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_SignalStatisticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IBDA_SignalStatistics * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IBDA_SignalStatistics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IBDA_SignalStatistics * This);
        
        HRESULT ( STDMETHODCALLTYPE *put_SignalStrength )( 
            IBDA_SignalStatistics * This,
            /* [in] */ LONG lDbStrength);
        
        HRESULT ( STDMETHODCALLTYPE *get_SignalStrength )( 
            IBDA_SignalStatistics * This,
            /* [out][in] */ LONG *plDbStrength);
        
        HRESULT ( STDMETHODCALLTYPE *put_SignalQuality )( 
            IBDA_SignalStatistics * This,
            /* [in] */ LONG lPercentQuality);
        
        HRESULT ( STDMETHODCALLTYPE *get_SignalQuality )( 
            IBDA_SignalStatistics * This,
            /* [out][in] */ LONG *plPercentQuality);
        
        HRESULT ( STDMETHODCALLTYPE *put_SignalPresent )( 
            IBDA_SignalStatistics * This,
            /* [in] */ BOOLEAN fPresent);
        
        HRESULT ( STDMETHODCALLTYPE *get_SignalPresent )( 
            IBDA_SignalStatistics * This,
            /* [out][in] */ BOOLEAN *pfPresent);
        
        HRESULT ( STDMETHODCALLTYPE *put_SignalLocked )( 
            IBDA_SignalStatistics * This,
            /* [in] */ BOOLEAN fLocked);
        
        HRESULT ( STDMETHODCALLTYPE *get_SignalLocked )( 
            IBDA_SignalStatistics * This,
            /* [out][in] */ BOOLEAN *pfLocked);
        
        HRESULT ( STDMETHODCALLTYPE *put_SampleTime )( 
            IBDA_SignalStatistics * This,
            /* [in] */ LONG lmsSampleTime);
        
        HRESULT ( STDMETHODCALLTYPE *get_SampleTime )( 
            IBDA_SignalStatistics * This,
            /* [out][in] */ LONG *plmsSampleTime);
        
        END_INTERFACE
    } IBDA_SignalStatisticsVtbl;

    interface IBDA_SignalStatistics
    {
        CONST_VTBL struct IBDA_SignalStatisticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_SignalStatistics_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IBDA_SignalStatistics_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IBDA_SignalStatistics_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IBDA_SignalStatistics_put_SignalStrength(This,lDbStrength)	\
    (This)->lpVtbl -> put_SignalStrength(This,lDbStrength)

#define IBDA_SignalStatistics_get_SignalStrength(This,plDbStrength)	\
    (This)->lpVtbl -> get_SignalStrength(This,plDbStrength)

#define IBDA_SignalStatistics_put_SignalQuality(This,lPercentQuality)	\
    (This)->lpVtbl -> put_SignalQuality(This,lPercentQuality)

#define IBDA_SignalStatistics_get_SignalQuality(This,plPercentQuality)	\
    (This)->lpVtbl -> get_SignalQuality(This,plPercentQuality)

#define IBDA_SignalStatistics_put_SignalPresent(This,fPresent)	\
    (This)->lpVtbl -> put_SignalPresent(This,fPresent)

#define IBDA_SignalStatistics_get_SignalPresent(This,pfPresent)	\
    (This)->lpVtbl -> get_SignalPresent(This,pfPresent)

#define IBDA_SignalStatistics_put_SignalLocked(This,fLocked)	\
    (This)->lpVtbl -> put_SignalLocked(This,fLocked)

#define IBDA_SignalStatistics_get_SignalLocked(This,pfLocked)	\
    (This)->lpVtbl -> get_SignalLocked(This,pfLocked)

#define IBDA_SignalStatistics_put_SampleTime(This,lmsSampleTime)	\
    (This)->lpVtbl -> put_SampleTime(This,lmsSampleTime)

#define IBDA_SignalStatistics_get_SampleTime(This,plmsSampleTime)	\
    (This)->lpVtbl -> get_SampleTime(This,plmsSampleTime)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IBDA_SignalStatistics_put_SignalStrength_Proxy( 
    IBDA_SignalStatistics * This,
    /* [in] */ LONG lDbStrength);


void __RPC_STUB IBDA_SignalStatistics_put_SignalStrength_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_SignalStatistics_get_SignalStrength_Proxy( 
    IBDA_SignalStatistics * This,
    /* [out][in] */ LONG *plDbStrength);


void __RPC_STUB IBDA_SignalStatistics_get_SignalStrength_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_SignalStatistics_put_SignalQuality_Proxy( 
    IBDA_SignalStatistics * This,
    /* [in] */ LONG lPercentQuality);


void __RPC_STUB IBDA_SignalStatistics_put_SignalQuality_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_SignalStatistics_get_SignalQuality_Proxy( 
    IBDA_SignalStatistics * This,
    /* [out][in] */ LONG *plPercentQuality);


void __RPC_STUB IBDA_SignalStatistics_get_SignalQuality_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_SignalStatistics_put_SignalPresent_Proxy( 
    IBDA_SignalStatistics * This,
    /* [in] */ BOOLEAN fPresent);


void __RPC_STUB IBDA_SignalStatistics_put_SignalPresent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_SignalStatistics_get_SignalPresent_Proxy( 
    IBDA_SignalStatistics * This,
    /* [out][in] */ BOOLEAN *pfPresent);


void __RPC_STUB IBDA_SignalStatistics_get_SignalPresent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_SignalStatistics_put_SignalLocked_Proxy( 
    IBDA_SignalStatistics * This,
    /* [in] */ BOOLEAN fLocked);


void __RPC_STUB IBDA_SignalStatistics_put_SignalLocked_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_SignalStatistics_get_SignalLocked_Proxy( 
    IBDA_SignalStatistics * This,
    /* [out][in] */ BOOLEAN *pfLocked);


void __RPC_STUB IBDA_SignalStatistics_get_SignalLocked_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_SignalStatistics_put_SampleTime_Proxy( 
    IBDA_SignalStatistics * This,
    /* [in] */ LONG lmsSampleTime);


void __RPC_STUB IBDA_SignalStatistics_put_SampleTime_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_SignalStatistics_get_SampleTime_Proxy( 
    IBDA_SignalStatistics * This,
    /* [out][in] */ LONG *plmsSampleTime);


void __RPC_STUB IBDA_SignalStatistics_get_SampleTime_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IBDA_SignalStatistics_INTERFACE_DEFINED__ */


#ifndef __IBDA_Topology_INTERFACE_DEFINED__
#define __IBDA_Topology_INTERFACE_DEFINED__

/* interface IBDA_Topology */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IBDA_Topology;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("79B56888-7FEA-4690-B45D-38FD3C7849BE")
    IBDA_Topology : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetNodeTypes( 
            /* [out][in] */ ULONG *pulcNodeTypes,
            /* [in] */ ULONG ulcNodeTypesMax,
            /* [size_is][out][in] */ ULONG rgulNodeTypes[  ]) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNodeDescriptors( 
            /* [out][in] */ ULONG *ulcNodeDescriptors,
            /* [in] */ ULONG ulcNodeDescriptorsMax,
            /* [size_is][out][in] */ BDANODE_DESCRIPTOR rgNodeDescriptors[  ]) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNodeInterfaces( 
            /* [in] */ ULONG ulNodeType,
            /* [out][in] */ ULONG *pulcInterfaces,
            /* [in] */ ULONG ulcInterfacesMax,
            /* [size_is][out][in] */ GUID rgguidInterfaces[  ]) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPinTypes( 
            /* [out][in] */ ULONG *pulcPinTypes,
            /* [in] */ ULONG ulcPinTypesMax,
            /* [size_is][out][in] */ ULONG rgulPinTypes[  ]) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTemplateConnections( 
            /* [out][in] */ ULONG *pulcConnections,
            /* [in] */ ULONG ulcConnectionsMax,
            /* [size_is][out][in] */ BDA_TEMPLATE_CONNECTION rgConnections[  ]) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreatePin( 
            /* [in] */ ULONG ulPinType,
            /* [out][in] */ ULONG *pulPinId) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeletePin( 
            /* [in] */ ULONG ulPinId) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetMediaType( 
            /* [in] */ ULONG ulPinId,
            /* [in] */ AM_MEDIA_TYPE *pMediaType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetMedium( 
            /* [in] */ ULONG ulPinId,
            /* [in] */ REGPINMEDIUM *pMedium) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateTopology( 
            /* [in] */ ULONG ulInputPinId,
            /* [in] */ ULONG ulOutputPinId) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetControlNode( 
            /* [in] */ ULONG ulInputPinId,
            /* [in] */ ULONG ulOutputPinId,
            /* [in] */ ULONG ulNodeType,
            /* [out][in] */ IUnknown **ppControlNode) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_TopologyVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IBDA_Topology * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IBDA_Topology * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IBDA_Topology * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetNodeTypes )( 
            IBDA_Topology * This,
            /* [out][in] */ ULONG *pulcNodeTypes,
            /* [in] */ ULONG ulcNodeTypesMax,
            /* [size_is][out][in] */ ULONG rgulNodeTypes[  ]);
        
        HRESULT ( STDMETHODCALLTYPE *GetNodeDescriptors )( 
            IBDA_Topology * This,
            /* [out][in] */ ULONG *ulcNodeDescriptors,
            /* [in] */ ULONG ulcNodeDescriptorsMax,
            /* [size_is][out][in] */ BDANODE_DESCRIPTOR rgNodeDescriptors[  ]);
        
        HRESULT ( STDMETHODCALLTYPE *GetNodeInterfaces )( 
            IBDA_Topology * This,
            /* [in] */ ULONG ulNodeType,
            /* [out][in] */ ULONG *pulcInterfaces,
            /* [in] */ ULONG ulcInterfacesMax,
            /* [size_is][out][in] */ GUID rgguidInterfaces[  ]);
        
        HRESULT ( STDMETHODCALLTYPE *GetPinTypes )( 
            IBDA_Topology * This,
            /* [out][in] */ ULONG *pulcPinTypes,
            /* [in] */ ULONG ulcPinTypesMax,
            /* [size_is][out][in] */ ULONG rgulPinTypes[  ]);
        
        HRESULT ( STDMETHODCALLTYPE *GetTemplateConnections )( 
            IBDA_Topology * This,
            /* [out][in] */ ULONG *pulcConnections,
            /* [in] */ ULONG ulcConnectionsMax,
            /* [size_is][out][in] */ BDA_TEMPLATE_CONNECTION rgConnections[  ]);
        
        HRESULT ( STDMETHODCALLTYPE *CreatePin )( 
            IBDA_Topology * This,
            /* [in] */ ULONG ulPinType,
            /* [out][in] */ ULONG *pulPinId);
        
        HRESULT ( STDMETHODCALLTYPE *DeletePin )( 
            IBDA_Topology * This,
            /* [in] */ ULONG ulPinId);
        
        HRESULT ( STDMETHODCALLTYPE *SetMediaType )( 
            IBDA_Topology * This,
            /* [in] */ ULONG ulPinId,
            /* [in] */ AM_MEDIA_TYPE *pMediaType);
        
        HRESULT ( STDMETHODCALLTYPE *SetMedium )( 
            IBDA_Topology * This,
            /* [in] */ ULONG ulPinId,
            /* [in] */ REGPINMEDIUM *pMedium);
        
        HRESULT ( STDMETHODCALLTYPE *CreateTopology )( 
            IBDA_Topology * This,
            /* [in] */ ULONG ulInputPinId,
            /* [in] */ ULONG ulOutputPinId);
        
        HRESULT ( STDMETHODCALLTYPE *GetControlNode )( 
            IBDA_Topology * This,
            /* [in] */ ULONG ulInputPinId,
            /* [in] */ ULONG ulOutputPinId,
            /* [in] */ ULONG ulNodeType,
            /* [out][in] */ IUnknown **ppControlNode);
        
        END_INTERFACE
    } IBDA_TopologyVtbl;

    interface IBDA_Topology
    {
        CONST_VTBL struct IBDA_TopologyVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_Topology_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IBDA_Topology_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IBDA_Topology_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IBDA_Topology_GetNodeTypes(This,pulcNodeTypes,ulcNodeTypesMax,rgulNodeTypes)	\
    (This)->lpVtbl -> GetNodeTypes(This,pulcNodeTypes,ulcNodeTypesMax,rgulNodeTypes)

#define IBDA_Topology_GetNodeDescriptors(This,ulcNodeDescriptors,ulcNodeDescriptorsMax,rgNodeDescriptors)	\
    (This)->lpVtbl -> GetNodeDescriptors(This,ulcNodeDescriptors,ulcNodeDescriptorsMax,rgNodeDescriptors)

#define IBDA_Topology_GetNodeInterfaces(This,ulNodeType,pulcInterfaces,ulcInterfacesMax,rgguidInterfaces)	\
    (This)->lpVtbl -> GetNodeInterfaces(This,ulNodeType,pulcInterfaces,ulcInterfacesMax,rgguidInterfaces)

#define IBDA_Topology_GetPinTypes(This,pulcPinTypes,ulcPinTypesMax,rgulPinTypes)	\
    (This)->lpVtbl -> GetPinTypes(This,pulcPinTypes,ulcPinTypesMax,rgulPinTypes)

#define IBDA_Topology_GetTemplateConnections(This,pulcConnections,ulcConnectionsMax,rgConnections)	\
    (This)->lpVtbl -> GetTemplateConnections(This,pulcConnections,ulcConnectionsMax,rgConnections)

#define IBDA_Topology_CreatePin(This,ulPinType,pulPinId)	\
    (This)->lpVtbl -> CreatePin(This,ulPinType,pulPinId)

#define IBDA_Topology_DeletePin(This,ulPinId)	\
    (This)->lpVtbl -> DeletePin(This,ulPinId)

#define IBDA_Topology_SetMediaType(This,ulPinId,pMediaType)	\
    (This)->lpVtbl -> SetMediaType(This,ulPinId,pMediaType)

#define IBDA_Topology_SetMedium(This,ulPinId,pMedium)	\
    (This)->lpVtbl -> SetMedium(This,ulPinId,pMedium)

#define IBDA_Topology_CreateTopology(This,ulInputPinId,ulOutputPinId)	\
    (This)->lpVtbl -> CreateTopology(This,ulInputPinId,ulOutputPinId)

#define IBDA_Topology_GetControlNode(This,ulInputPinId,ulOutputPinId,ulNodeType,ppControlNode)	\
    (This)->lpVtbl -> GetControlNode(This,ulInputPinId,ulOutputPinId,ulNodeType,ppControlNode)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IBDA_Topology_GetNodeTypes_Proxy( 
    IBDA_Topology * This,
    /* [out][in] */ ULONG *pulcNodeTypes,
    /* [in] */ ULONG ulcNodeTypesMax,
    /* [size_is][out][in] */ ULONG rgulNodeTypes[  ]);


void __RPC_STUB IBDA_Topology_GetNodeTypes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_Topology_GetNodeDescriptors_Proxy( 
    IBDA_Topology * This,
    /* [out][in] */ ULONG *ulcNodeDescriptors,
    /* [in] */ ULONG ulcNodeDescriptorsMax,
    /* [size_is][out][in] */ BDANODE_DESCRIPTOR rgNodeDescriptors[  ]);


void __RPC_STUB IBDA_Topology_GetNodeDescriptors_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_Topology_GetNodeInterfaces_Proxy( 
    IBDA_Topology * This,
    /* [in] */ ULONG ulNodeType,
    /* [out][in] */ ULONG *pulcInterfaces,
    /* [in] */ ULONG ulcInterfacesMax,
    /* [size_is][out][in] */ GUID rgguidInterfaces[  ]);


void __RPC_STUB IBDA_Topology_GetNodeInterfaces_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_Topology_GetPinTypes_Proxy( 
    IBDA_Topology * This,
    /* [out][in] */ ULONG *pulcPinTypes,
    /* [in] */ ULONG ulcPinTypesMax,
    /* [size_is][out][in] */ ULONG rgulPinTypes[  ]);


void __RPC_STUB IBDA_Topology_GetPinTypes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_Topology_GetTemplateConnections_Proxy( 
    IBDA_Topology * This,
    /* [out][in] */ ULONG *pulcConnections,
    /* [in] */ ULONG ulcConnectionsMax,
    /* [size_is][out][in] */ BDA_TEMPLATE_CONNECTION rgConnections[  ]);


void __RPC_STUB IBDA_Topology_GetTemplateConnections_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_Topology_CreatePin_Proxy( 
    IBDA_Topology * This,
    /* [in] */ ULONG ulPinType,
    /* [out][in] */ ULONG *pulPinId);


void __RPC_STUB IBDA_Topology_CreatePin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_Topology_DeletePin_Proxy( 
    IBDA_Topology * This,
    /* [in] */ ULONG ulPinId);


void __RPC_STUB IBDA_Topology_DeletePin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_Topology_SetMediaType_Proxy( 
    IBDA_Topology * This,
    /* [in] */ ULONG ulPinId,
    /* [in] */ AM_MEDIA_TYPE *pMediaType);


void __RPC_STUB IBDA_Topology_SetMediaType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_Topology_SetMedium_Proxy( 
    IBDA_Topology * This,
    /* [in] */ ULONG ulPinId,
    /* [in] */ REGPINMEDIUM *pMedium);


void __RPC_STUB IBDA_Topology_SetMedium_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_Topology_CreateTopology_Proxy( 
    IBDA_Topology * This,
    /* [in] */ ULONG ulInputPinId,
    /* [in] */ ULONG ulOutputPinId);


void __RPC_STUB IBDA_Topology_CreateTopology_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_Topology_GetControlNode_Proxy( 
    IBDA_Topology * This,
    /* [in] */ ULONG ulInputPinId,
    /* [in] */ ULONG ulOutputPinId,
    /* [in] */ ULONG ulNodeType,
    /* [out][in] */ IUnknown **ppControlNode);


void __RPC_STUB IBDA_Topology_GetControlNode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IBDA_Topology_INTERFACE_DEFINED__ */


#ifndef __IBDA_VoidTransform_INTERFACE_DEFINED__
#define __IBDA_VoidTransform_INTERFACE_DEFINED__

/* interface IBDA_VoidTransform */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IBDA_VoidTransform;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("71985F46-1CA1-11d3-9CC8-00C04F7971E0")
    IBDA_VoidTransform : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Start( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Stop( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_VoidTransformVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IBDA_VoidTransform * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IBDA_VoidTransform * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IBDA_VoidTransform * This);
        
        HRESULT ( STDMETHODCALLTYPE *Start )( 
            IBDA_VoidTransform * This);
        
        HRESULT ( STDMETHODCALLTYPE *Stop )( 
            IBDA_VoidTransform * This);
        
        END_INTERFACE
    } IBDA_VoidTransformVtbl;

    interface IBDA_VoidTransform
    {
        CONST_VTBL struct IBDA_VoidTransformVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_VoidTransform_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IBDA_VoidTransform_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IBDA_VoidTransform_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IBDA_VoidTransform_Start(This)	\
    (This)->lpVtbl -> Start(This)

#define IBDA_VoidTransform_Stop(This)	\
    (This)->lpVtbl -> Stop(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IBDA_VoidTransform_Start_Proxy( 
    IBDA_VoidTransform * This);


void __RPC_STUB IBDA_VoidTransform_Start_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_VoidTransform_Stop_Proxy( 
    IBDA_VoidTransform * This);


void __RPC_STUB IBDA_VoidTransform_Stop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IBDA_VoidTransform_INTERFACE_DEFINED__ */


#ifndef __IBDA_NullTransform_INTERFACE_DEFINED__
#define __IBDA_NullTransform_INTERFACE_DEFINED__

/* interface IBDA_NullTransform */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IBDA_NullTransform;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DDF15B0D-BD25-11d2-9CA0-00C04F7971E0")
    IBDA_NullTransform : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Start( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Stop( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_NullTransformVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IBDA_NullTransform * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IBDA_NullTransform * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IBDA_NullTransform * This);
        
        HRESULT ( STDMETHODCALLTYPE *Start )( 
            IBDA_NullTransform * This);
        
        HRESULT ( STDMETHODCALLTYPE *Stop )( 
            IBDA_NullTransform * This);
        
        END_INTERFACE
    } IBDA_NullTransformVtbl;

    interface IBDA_NullTransform
    {
        CONST_VTBL struct IBDA_NullTransformVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_NullTransform_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IBDA_NullTransform_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IBDA_NullTransform_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IBDA_NullTransform_Start(This)	\
    (This)->lpVtbl -> Start(This)

#define IBDA_NullTransform_Stop(This)	\
    (This)->lpVtbl -> Stop(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IBDA_NullTransform_Start_Proxy( 
    IBDA_NullTransform * This);


void __RPC_STUB IBDA_NullTransform_Start_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_NullTransform_Stop_Proxy( 
    IBDA_NullTransform * This);


void __RPC_STUB IBDA_NullTransform_Stop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IBDA_NullTransform_INTERFACE_DEFINED__ */


#ifndef __IBDA_FrequencyFilter_INTERFACE_DEFINED__
#define __IBDA_FrequencyFilter_INTERFACE_DEFINED__

/* interface IBDA_FrequencyFilter */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IBDA_FrequencyFilter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("71985F47-1CA1-11d3-9CC8-00C04F7971E0")
    IBDA_FrequencyFilter : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE put_Autotune( 
            /* [in] */ ULONG ulTransponder) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_Autotune( 
            /* [out][in] */ ULONG *pulTransponder) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE put_Frequency( 
            /* [in] */ ULONG ulFrequency) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_Frequency( 
            /* [out][in] */ ULONG *pulFrequency) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE put_Polarity( 
            /* [in] */ Polarisation Polarity) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_Polarity( 
            /* [out][in] */ Polarisation *pPolarity) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE put_Range( 
            /* [in] */ ULONG ulRange) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_Range( 
            /* [out][in] */ ULONG *pulRange) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE put_Bandwidth( 
            /* [in] */ ULONG ulBandwidth) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_Bandwidth( 
            /* [out][in] */ ULONG *pulBandwidth) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE put_FrequencyMultiplier( 
            /* [in] */ ULONG ulMultiplier) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_FrequencyMultiplier( 
            /* [out][in] */ ULONG *pulMultiplier) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_FrequencyFilterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IBDA_FrequencyFilter * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IBDA_FrequencyFilter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IBDA_FrequencyFilter * This);
        
        HRESULT ( STDMETHODCALLTYPE *put_Autotune )( 
            IBDA_FrequencyFilter * This,
            /* [in] */ ULONG ulTransponder);
        
        HRESULT ( STDMETHODCALLTYPE *get_Autotune )( 
            IBDA_FrequencyFilter * This,
            /* [out][in] */ ULONG *pulTransponder);
        
        HRESULT ( STDMETHODCALLTYPE *put_Frequency )( 
            IBDA_FrequencyFilter * This,
            /* [in] */ ULONG ulFrequency);
        
        HRESULT ( STDMETHODCALLTYPE *get_Frequency )( 
            IBDA_FrequencyFilter * This,
            /* [out][in] */ ULONG *pulFrequency);
        
        HRESULT ( STDMETHODCALLTYPE *put_Polarity )( 
            IBDA_FrequencyFilter * This,
            /* [in] */ Polarisation Polarity);
        
        HRESULT ( STDMETHODCALLTYPE *get_Polarity )( 
            IBDA_FrequencyFilter * This,
            /* [out][in] */ Polarisation *pPolarity);
        
        HRESULT ( STDMETHODCALLTYPE *put_Range )( 
            IBDA_FrequencyFilter * This,
            /* [in] */ ULONG ulRange);
        
        HRESULT ( STDMETHODCALLTYPE *get_Range )( 
            IBDA_FrequencyFilter * This,
            /* [out][in] */ ULONG *pulRange);
        
        HRESULT ( STDMETHODCALLTYPE *put_Bandwidth )( 
            IBDA_FrequencyFilter * This,
            /* [in] */ ULONG ulBandwidth);
        
        HRESULT ( STDMETHODCALLTYPE *get_Bandwidth )( 
            IBDA_FrequencyFilter * This,
            /* [out][in] */ ULONG *pulBandwidth);
        
        HRESULT ( STDMETHODCALLTYPE *put_FrequencyMultiplier )( 
            IBDA_FrequencyFilter * This,
            /* [in] */ ULONG ulMultiplier);
        
        HRESULT ( STDMETHODCALLTYPE *get_FrequencyMultiplier )( 
            IBDA_FrequencyFilter * This,
            /* [out][in] */ ULONG *pulMultiplier);
        
        END_INTERFACE
    } IBDA_FrequencyFilterVtbl;

    interface IBDA_FrequencyFilter
    {
        CONST_VTBL struct IBDA_FrequencyFilterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_FrequencyFilter_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IBDA_FrequencyFilter_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IBDA_FrequencyFilter_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IBDA_FrequencyFilter_put_Autotune(This,ulTransponder)	\
    (This)->lpVtbl -> put_Autotune(This,ulTransponder)

#define IBDA_FrequencyFilter_get_Autotune(This,pulTransponder)	\
    (This)->lpVtbl -> get_Autotune(This,pulTransponder)

#define IBDA_FrequencyFilter_put_Frequency(This,ulFrequency)	\
    (This)->lpVtbl -> put_Frequency(This,ulFrequency)

#define IBDA_FrequencyFilter_get_Frequency(This,pulFrequency)	\
    (This)->lpVtbl -> get_Frequency(This,pulFrequency)

#define IBDA_FrequencyFilter_put_Polarity(This,Polarity)	\
    (This)->lpVtbl -> put_Polarity(This,Polarity)

#define IBDA_FrequencyFilter_get_Polarity(This,pPolarity)	\
    (This)->lpVtbl -> get_Polarity(This,pPolarity)

#define IBDA_FrequencyFilter_put_Range(This,ulRange)	\
    (This)->lpVtbl -> put_Range(This,ulRange)

#define IBDA_FrequencyFilter_get_Range(This,pulRange)	\
    (This)->lpVtbl -> get_Range(This,pulRange)

#define IBDA_FrequencyFilter_put_Bandwidth(This,ulBandwidth)	\
    (This)->lpVtbl -> put_Bandwidth(This,ulBandwidth)

#define IBDA_FrequencyFilter_get_Bandwidth(This,pulBandwidth)	\
    (This)->lpVtbl -> get_Bandwidth(This,pulBandwidth)

#define IBDA_FrequencyFilter_put_FrequencyMultiplier(This,ulMultiplier)	\
    (This)->lpVtbl -> put_FrequencyMultiplier(This,ulMultiplier)

#define IBDA_FrequencyFilter_get_FrequencyMultiplier(This,pulMultiplier)	\
    (This)->lpVtbl -> get_FrequencyMultiplier(This,pulMultiplier)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IBDA_FrequencyFilter_put_Autotune_Proxy( 
    IBDA_FrequencyFilter * This,
    /* [in] */ ULONG ulTransponder);


void __RPC_STUB IBDA_FrequencyFilter_put_Autotune_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_FrequencyFilter_get_Autotune_Proxy( 
    IBDA_FrequencyFilter * This,
    /* [out][in] */ ULONG *pulTransponder);


void __RPC_STUB IBDA_FrequencyFilter_get_Autotune_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_FrequencyFilter_put_Frequency_Proxy( 
    IBDA_FrequencyFilter * This,
    /* [in] */ ULONG ulFrequency);


void __RPC_STUB IBDA_FrequencyFilter_put_Frequency_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_FrequencyFilter_get_Frequency_Proxy( 
    IBDA_FrequencyFilter * This,
    /* [out][in] */ ULONG *pulFrequency);


void __RPC_STUB IBDA_FrequencyFilter_get_Frequency_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_FrequencyFilter_put_Polarity_Proxy( 
    IBDA_FrequencyFilter * This,
    /* [in] */ Polarisation Polarity);


void __RPC_STUB IBDA_FrequencyFilter_put_Polarity_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_FrequencyFilter_get_Polarity_Proxy( 
    IBDA_FrequencyFilter * This,
    /* [out][in] */ Polarisation *pPolarity);


void __RPC_STUB IBDA_FrequencyFilter_get_Polarity_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_FrequencyFilter_put_Range_Proxy( 
    IBDA_FrequencyFilter * This,
    /* [in] */ ULONG ulRange);


void __RPC_STUB IBDA_FrequencyFilter_put_Range_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_FrequencyFilter_get_Range_Proxy( 
    IBDA_FrequencyFilter * This,
    /* [out][in] */ ULONG *pulRange);


void __RPC_STUB IBDA_FrequencyFilter_get_Range_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_FrequencyFilter_put_Bandwidth_Proxy( 
    IBDA_FrequencyFilter * This,
    /* [in] */ ULONG ulBandwidth);


void __RPC_STUB IBDA_FrequencyFilter_put_Bandwidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_FrequencyFilter_get_Bandwidth_Proxy( 
    IBDA_FrequencyFilter * This,
    /* [out][in] */ ULONG *pulBandwidth);


void __RPC_STUB IBDA_FrequencyFilter_get_Bandwidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_FrequencyFilter_put_FrequencyMultiplier_Proxy( 
    IBDA_FrequencyFilter * This,
    /* [in] */ ULONG ulMultiplier);


void __RPC_STUB IBDA_FrequencyFilter_put_FrequencyMultiplier_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_FrequencyFilter_get_FrequencyMultiplier_Proxy( 
    IBDA_FrequencyFilter * This,
    /* [out][in] */ ULONG *pulMultiplier);


void __RPC_STUB IBDA_FrequencyFilter_get_FrequencyMultiplier_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IBDA_FrequencyFilter_INTERFACE_DEFINED__ */


#ifndef __IBDA_LNBInfo_INTERFACE_DEFINED__
#define __IBDA_LNBInfo_INTERFACE_DEFINED__

/* interface IBDA_LNBInfo */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IBDA_LNBInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("992CF102-49F9-4719-A664-C4F23E2408F4")
    IBDA_LNBInfo : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE put_LocalOscilatorFrequencyLowBand( 
            /* [in] */ ULONG ulLOFLow) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_LocalOscilatorFrequencyLowBand( 
            /* [out][in] */ ULONG *pulLOFLow) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE put_LocalOscilatorFrequencyHighBand( 
            /* [in] */ ULONG ulLOFHigh) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_LocalOscilatorFrequencyHighBand( 
            /* [out][in] */ ULONG *pulLOFHigh) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE put_HighLowSwitchFrequency( 
            /* [in] */ ULONG ulSwitchFrequency) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_HighLowSwitchFrequency( 
            /* [out][in] */ ULONG *pulSwitchFrequency) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_LNBInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IBDA_LNBInfo * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IBDA_LNBInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IBDA_LNBInfo * This);
        
        HRESULT ( STDMETHODCALLTYPE *put_LocalOscilatorFrequencyLowBand )( 
            IBDA_LNBInfo * This,
            /* [in] */ ULONG ulLOFLow);
        
        HRESULT ( STDMETHODCALLTYPE *get_LocalOscilatorFrequencyLowBand )( 
            IBDA_LNBInfo * This,
            /* [out][in] */ ULONG *pulLOFLow);
        
        HRESULT ( STDMETHODCALLTYPE *put_LocalOscilatorFrequencyHighBand )( 
            IBDA_LNBInfo * This,
            /* [in] */ ULONG ulLOFHigh);
        
        HRESULT ( STDMETHODCALLTYPE *get_LocalOscilatorFrequencyHighBand )( 
            IBDA_LNBInfo * This,
            /* [out][in] */ ULONG *pulLOFHigh);
        
        HRESULT ( STDMETHODCALLTYPE *put_HighLowSwitchFrequency )( 
            IBDA_LNBInfo * This,
            /* [in] */ ULONG ulSwitchFrequency);
        
        HRESULT ( STDMETHODCALLTYPE *get_HighLowSwitchFrequency )( 
            IBDA_LNBInfo * This,
            /* [out][in] */ ULONG *pulSwitchFrequency);
        
        END_INTERFACE
    } IBDA_LNBInfoVtbl;

    interface IBDA_LNBInfo
    {
        CONST_VTBL struct IBDA_LNBInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_LNBInfo_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IBDA_LNBInfo_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IBDA_LNBInfo_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IBDA_LNBInfo_put_LocalOscilatorFrequencyLowBand(This,ulLOFLow)	\
    (This)->lpVtbl -> put_LocalOscilatorFrequencyLowBand(This,ulLOFLow)

#define IBDA_LNBInfo_get_LocalOscilatorFrequencyLowBand(This,pulLOFLow)	\
    (This)->lpVtbl -> get_LocalOscilatorFrequencyLowBand(This,pulLOFLow)

#define IBDA_LNBInfo_put_LocalOscilatorFrequencyHighBand(This,ulLOFHigh)	\
    (This)->lpVtbl -> put_LocalOscilatorFrequencyHighBand(This,ulLOFHigh)

#define IBDA_LNBInfo_get_LocalOscilatorFrequencyHighBand(This,pulLOFHigh)	\
    (This)->lpVtbl -> get_LocalOscilatorFrequencyHighBand(This,pulLOFHigh)

#define IBDA_LNBInfo_put_HighLowSwitchFrequency(This,ulSwitchFrequency)	\
    (This)->lpVtbl -> put_HighLowSwitchFrequency(This,ulSwitchFrequency)

#define IBDA_LNBInfo_get_HighLowSwitchFrequency(This,pulSwitchFrequency)	\
    (This)->lpVtbl -> get_HighLowSwitchFrequency(This,pulSwitchFrequency)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IBDA_LNBInfo_put_LocalOscilatorFrequencyLowBand_Proxy( 
    IBDA_LNBInfo * This,
    /* [in] */ ULONG ulLOFLow);


void __RPC_STUB IBDA_LNBInfo_put_LocalOscilatorFrequencyLowBand_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_LNBInfo_get_LocalOscilatorFrequencyLowBand_Proxy( 
    IBDA_LNBInfo * This,
    /* [out][in] */ ULONG *pulLOFLow);


void __RPC_STUB IBDA_LNBInfo_get_LocalOscilatorFrequencyLowBand_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_LNBInfo_put_LocalOscilatorFrequencyHighBand_Proxy( 
    IBDA_LNBInfo * This,
    /* [in] */ ULONG ulLOFHigh);


void __RPC_STUB IBDA_LNBInfo_put_LocalOscilatorFrequencyHighBand_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_LNBInfo_get_LocalOscilatorFrequencyHighBand_Proxy( 
    IBDA_LNBInfo * This,
    /* [out][in] */ ULONG *pulLOFHigh);


void __RPC_STUB IBDA_LNBInfo_get_LocalOscilatorFrequencyHighBand_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_LNBInfo_put_HighLowSwitchFrequency_Proxy( 
    IBDA_LNBInfo * This,
    /* [in] */ ULONG ulSwitchFrequency);


void __RPC_STUB IBDA_LNBInfo_put_HighLowSwitchFrequency_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_LNBInfo_get_HighLowSwitchFrequency_Proxy( 
    IBDA_LNBInfo * This,
    /* [out][in] */ ULONG *pulSwitchFrequency);


void __RPC_STUB IBDA_LNBInfo_get_HighLowSwitchFrequency_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IBDA_LNBInfo_INTERFACE_DEFINED__ */


#ifndef __IBDA_AutoDemodulate_INTERFACE_DEFINED__
#define __IBDA_AutoDemodulate_INTERFACE_DEFINED__

/* interface IBDA_AutoDemodulate */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IBDA_AutoDemodulate;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DDF15B12-BD25-11d2-9CA0-00C04F7971E0")
    IBDA_AutoDemodulate : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE put_AutoDemodulate( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_AutoDemodulateVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IBDA_AutoDemodulate * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IBDA_AutoDemodulate * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IBDA_AutoDemodulate * This);
        
        HRESULT ( STDMETHODCALLTYPE *put_AutoDemodulate )( 
            IBDA_AutoDemodulate * This);
        
        END_INTERFACE
    } IBDA_AutoDemodulateVtbl;

    interface IBDA_AutoDemodulate
    {
        CONST_VTBL struct IBDA_AutoDemodulateVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_AutoDemodulate_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IBDA_AutoDemodulate_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IBDA_AutoDemodulate_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IBDA_AutoDemodulate_put_AutoDemodulate(This)	\
    (This)->lpVtbl -> put_AutoDemodulate(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IBDA_AutoDemodulate_put_AutoDemodulate_Proxy( 
    IBDA_AutoDemodulate * This);


void __RPC_STUB IBDA_AutoDemodulate_put_AutoDemodulate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IBDA_AutoDemodulate_INTERFACE_DEFINED__ */


#ifndef __IBDA_DigitalDemodulator_INTERFACE_DEFINED__
#define __IBDA_DigitalDemodulator_INTERFACE_DEFINED__

/* interface IBDA_DigitalDemodulator */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IBDA_DigitalDemodulator;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("EF30F379-985B-4d10-B640-A79D5E04E1E0")
    IBDA_DigitalDemodulator : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE put_ModulationType( 
            /* [in] */ ModulationType *pModulationType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_ModulationType( 
            /* [out][in] */ ModulationType *pModulationType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE put_InnerFECMethod( 
            /* [in] */ FECMethod *pFECMethod) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_InnerFECMethod( 
            /* [out][in] */ FECMethod *pFECMethod) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE put_InnerFECRate( 
            /* [in] */ BinaryConvolutionCodeRate *pFECRate) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_InnerFECRate( 
            /* [out][in] */ BinaryConvolutionCodeRate *pFECRate) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE put_OuterFECMethod( 
            /* [in] */ FECMethod *pFECMethod) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_OuterFECMethod( 
            /* [out][in] */ FECMethod *pFECMethod) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE put_OuterFECRate( 
            /* [in] */ BinaryConvolutionCodeRate *pFECRate) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_OuterFECRate( 
            /* [out][in] */ BinaryConvolutionCodeRate *pFECRate) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE put_SymbolRate( 
            /* [in] */ ULONG *pSymbolRate) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_SymbolRate( 
            /* [out][in] */ ULONG *pSymbolRate) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE put_SpectralInversion( 
            /* [in] */ SpectralInversion *pSpectralInversion) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_SpectralInversion( 
            /* [out][in] */ SpectralInversion *pSpectralInversion) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_DigitalDemodulatorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IBDA_DigitalDemodulator * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IBDA_DigitalDemodulator * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IBDA_DigitalDemodulator * This);
        
        HRESULT ( STDMETHODCALLTYPE *put_ModulationType )( 
            IBDA_DigitalDemodulator * This,
            /* [in] */ ModulationType *pModulationType);
        
        HRESULT ( STDMETHODCALLTYPE *get_ModulationType )( 
            IBDA_DigitalDemodulator * This,
            /* [out][in] */ ModulationType *pModulationType);
        
        HRESULT ( STDMETHODCALLTYPE *put_InnerFECMethod )( 
            IBDA_DigitalDemodulator * This,
            /* [in] */ FECMethod *pFECMethod);
        
        HRESULT ( STDMETHODCALLTYPE *get_InnerFECMethod )( 
            IBDA_DigitalDemodulator * This,
            /* [out][in] */ FECMethod *pFECMethod);
        
        HRESULT ( STDMETHODCALLTYPE *put_InnerFECRate )( 
            IBDA_DigitalDemodulator * This,
            /* [in] */ BinaryConvolutionCodeRate *pFECRate);
        
        HRESULT ( STDMETHODCALLTYPE *get_InnerFECRate )( 
            IBDA_DigitalDemodulator * This,
            /* [out][in] */ BinaryConvolutionCodeRate *pFECRate);
        
        HRESULT ( STDMETHODCALLTYPE *put_OuterFECMethod )( 
            IBDA_DigitalDemodulator * This,
            /* [in] */ FECMethod *pFECMethod);
        
        HRESULT ( STDMETHODCALLTYPE *get_OuterFECMethod )( 
            IBDA_DigitalDemodulator * This,
            /* [out][in] */ FECMethod *pFECMethod);
        
        HRESULT ( STDMETHODCALLTYPE *put_OuterFECRate )( 
            IBDA_DigitalDemodulator * This,
            /* [in] */ BinaryConvolutionCodeRate *pFECRate);
        
        HRESULT ( STDMETHODCALLTYPE *get_OuterFECRate )( 
            IBDA_DigitalDemodulator * This,
            /* [out][in] */ BinaryConvolutionCodeRate *pFECRate);
        
        HRESULT ( STDMETHODCALLTYPE *put_SymbolRate )( 
            IBDA_DigitalDemodulator * This,
            /* [in] */ ULONG *pSymbolRate);
        
        HRESULT ( STDMETHODCALLTYPE *get_SymbolRate )( 
            IBDA_DigitalDemodulator * This,
            /* [out][in] */ ULONG *pSymbolRate);
        
        HRESULT ( STDMETHODCALLTYPE *put_SpectralInversion )( 
            IBDA_DigitalDemodulator * This,
            /* [in] */ SpectralInversion *pSpectralInversion);
        
        HRESULT ( STDMETHODCALLTYPE *get_SpectralInversion )( 
            IBDA_DigitalDemodulator * This,
            /* [out][in] */ SpectralInversion *pSpectralInversion);
        
        END_INTERFACE
    } IBDA_DigitalDemodulatorVtbl;

    interface IBDA_DigitalDemodulator
    {
        CONST_VTBL struct IBDA_DigitalDemodulatorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_DigitalDemodulator_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IBDA_DigitalDemodulator_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IBDA_DigitalDemodulator_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IBDA_DigitalDemodulator_put_ModulationType(This,pModulationType)	\
    (This)->lpVtbl -> put_ModulationType(This,pModulationType)

#define IBDA_DigitalDemodulator_get_ModulationType(This,pModulationType)	\
    (This)->lpVtbl -> get_ModulationType(This,pModulationType)

#define IBDA_DigitalDemodulator_put_InnerFECMethod(This,pFECMethod)	\
    (This)->lpVtbl -> put_InnerFECMethod(This,pFECMethod)

#define IBDA_DigitalDemodulator_get_InnerFECMethod(This,pFECMethod)	\
    (This)->lpVtbl -> get_InnerFECMethod(This,pFECMethod)

#define IBDA_DigitalDemodulator_put_InnerFECRate(This,pFECRate)	\
    (This)->lpVtbl -> put_InnerFECRate(This,pFECRate)

#define IBDA_DigitalDemodulator_get_InnerFECRate(This,pFECRate)	\
    (This)->lpVtbl -> get_InnerFECRate(This,pFECRate)

#define IBDA_DigitalDemodulator_put_OuterFECMethod(This,pFECMethod)	\
    (This)->lpVtbl -> put_OuterFECMethod(This,pFECMethod)

#define IBDA_DigitalDemodulator_get_OuterFECMethod(This,pFECMethod)	\
    (This)->lpVtbl -> get_OuterFECMethod(This,pFECMethod)

#define IBDA_DigitalDemodulator_put_OuterFECRate(This,pFECRate)	\
    (This)->lpVtbl -> put_OuterFECRate(This,pFECRate)

#define IBDA_DigitalDemodulator_get_OuterFECRate(This,pFECRate)	\
    (This)->lpVtbl -> get_OuterFECRate(This,pFECRate)

#define IBDA_DigitalDemodulator_put_SymbolRate(This,pSymbolRate)	\
    (This)->lpVtbl -> put_SymbolRate(This,pSymbolRate)

#define IBDA_DigitalDemodulator_get_SymbolRate(This,pSymbolRate)	\
    (This)->lpVtbl -> get_SymbolRate(This,pSymbolRate)

#define IBDA_DigitalDemodulator_put_SpectralInversion(This,pSpectralInversion)	\
    (This)->lpVtbl -> put_SpectralInversion(This,pSpectralInversion)

#define IBDA_DigitalDemodulator_get_SpectralInversion(This,pSpectralInversion)	\
    (This)->lpVtbl -> get_SpectralInversion(This,pSpectralInversion)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IBDA_DigitalDemodulator_put_ModulationType_Proxy( 
    IBDA_DigitalDemodulator * This,
    /* [in] */ ModulationType *pModulationType);


void __RPC_STUB IBDA_DigitalDemodulator_put_ModulationType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_DigitalDemodulator_get_ModulationType_Proxy( 
    IBDA_DigitalDemodulator * This,
    /* [out][in] */ ModulationType *pModulationType);


void __RPC_STUB IBDA_DigitalDemodulator_get_ModulationType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_DigitalDemodulator_put_InnerFECMethod_Proxy( 
    IBDA_DigitalDemodulator * This,
    /* [in] */ FECMethod *pFECMethod);


void __RPC_STUB IBDA_DigitalDemodulator_put_InnerFECMethod_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_DigitalDemodulator_get_InnerFECMethod_Proxy( 
    IBDA_DigitalDemodulator * This,
    /* [out][in] */ FECMethod *pFECMethod);


void __RPC_STUB IBDA_DigitalDemodulator_get_InnerFECMethod_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_DigitalDemodulator_put_InnerFECRate_Proxy( 
    IBDA_DigitalDemodulator * This,
    /* [in] */ BinaryConvolutionCodeRate *pFECRate);


void __RPC_STUB IBDA_DigitalDemodulator_put_InnerFECRate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_DigitalDemodulator_get_InnerFECRate_Proxy( 
    IBDA_DigitalDemodulator * This,
    /* [out][in] */ BinaryConvolutionCodeRate *pFECRate);


void __RPC_STUB IBDA_DigitalDemodulator_get_InnerFECRate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_DigitalDemodulator_put_OuterFECMethod_Proxy( 
    IBDA_DigitalDemodulator * This,
    /* [in] */ FECMethod *pFECMethod);


void __RPC_STUB IBDA_DigitalDemodulator_put_OuterFECMethod_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_DigitalDemodulator_get_OuterFECMethod_Proxy( 
    IBDA_DigitalDemodulator * This,
    /* [out][in] */ FECMethod *pFECMethod);


void __RPC_STUB IBDA_DigitalDemodulator_get_OuterFECMethod_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_DigitalDemodulator_put_OuterFECRate_Proxy( 
    IBDA_DigitalDemodulator * This,
    /* [in] */ BinaryConvolutionCodeRate *pFECRate);


void __RPC_STUB IBDA_DigitalDemodulator_put_OuterFECRate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_DigitalDemodulator_get_OuterFECRate_Proxy( 
    IBDA_DigitalDemodulator * This,
    /* [out][in] */ BinaryConvolutionCodeRate *pFECRate);


void __RPC_STUB IBDA_DigitalDemodulator_get_OuterFECRate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_DigitalDemodulator_put_SymbolRate_Proxy( 
    IBDA_DigitalDemodulator * This,
    /* [in] */ ULONG *pSymbolRate);


void __RPC_STUB IBDA_DigitalDemodulator_put_SymbolRate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_DigitalDemodulator_get_SymbolRate_Proxy( 
    IBDA_DigitalDemodulator * This,
    /* [out][in] */ ULONG *pSymbolRate);


void __RPC_STUB IBDA_DigitalDemodulator_get_SymbolRate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_DigitalDemodulator_put_SpectralInversion_Proxy( 
    IBDA_DigitalDemodulator * This,
    /* [in] */ SpectralInversion *pSpectralInversion);


void __RPC_STUB IBDA_DigitalDemodulator_put_SpectralInversion_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_DigitalDemodulator_get_SpectralInversion_Proxy( 
    IBDA_DigitalDemodulator * This,
    /* [out][in] */ SpectralInversion *pSpectralInversion);


void __RPC_STUB IBDA_DigitalDemodulator_get_SpectralInversion_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IBDA_DigitalDemodulator_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_bdaiface_0412 */
/* [local] */ 

typedef /* [public] */ 
enum __MIDL___MIDL_itf_bdaiface_0412_0001
    {	KSPROPERTY_IPSINK_MULTICASTLIST	= 0,
	KSPROPERTY_IPSINK_ADAPTER_DESCRIPTION	= KSPROPERTY_IPSINK_MULTICASTLIST + 1,
	KSPROPERTY_IPSINK_ADAPTER_ADDRESS	= KSPROPERTY_IPSINK_ADAPTER_DESCRIPTION + 1
    } 	KSPROPERTY_IPSINK;



extern RPC_IF_HANDLE __MIDL_itf_bdaiface_0412_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_bdaiface_0412_v0_0_s_ifspec;

#ifndef __IBDA_IPSinkControl_INTERFACE_DEFINED__
#define __IBDA_IPSinkControl_INTERFACE_DEFINED__

/* interface IBDA_IPSinkControl */
/* [helpstring][unique][uuid][object] */ 


EXTERN_C const IID IID_IBDA_IPSinkControl;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3F4DC8E2-4050-11d3-8F4B-00C04F7971E2")
    IBDA_IPSinkControl : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetMulticastList( 
            /* [out][in] */ unsigned long *pulcbSize,
            /* [out][in] */ BYTE **pbBuffer) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAdapterIPAddress( 
            /* [out][in] */ unsigned long *pulcbSize,
            /* [out][in] */ BYTE **pbBuffer) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_IPSinkControlVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IBDA_IPSinkControl * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IBDA_IPSinkControl * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IBDA_IPSinkControl * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMulticastList )( 
            IBDA_IPSinkControl * This,
            /* [out][in] */ unsigned long *pulcbSize,
            /* [out][in] */ BYTE **pbBuffer);
        
        HRESULT ( STDMETHODCALLTYPE *GetAdapterIPAddress )( 
            IBDA_IPSinkControl * This,
            /* [out][in] */ unsigned long *pulcbSize,
            /* [out][in] */ BYTE **pbBuffer);
        
        END_INTERFACE
    } IBDA_IPSinkControlVtbl;

    interface IBDA_IPSinkControl
    {
        CONST_VTBL struct IBDA_IPSinkControlVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_IPSinkControl_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IBDA_IPSinkControl_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IBDA_IPSinkControl_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IBDA_IPSinkControl_GetMulticastList(This,pulcbSize,pbBuffer)	\
    (This)->lpVtbl -> GetMulticastList(This,pulcbSize,pbBuffer)

#define IBDA_IPSinkControl_GetAdapterIPAddress(This,pulcbSize,pbBuffer)	\
    (This)->lpVtbl -> GetAdapterIPAddress(This,pulcbSize,pbBuffer)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IBDA_IPSinkControl_GetMulticastList_Proxy( 
    IBDA_IPSinkControl * This,
    /* [out][in] */ unsigned long *pulcbSize,
    /* [out][in] */ BYTE **pbBuffer);


void __RPC_STUB IBDA_IPSinkControl_GetMulticastList_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_IPSinkControl_GetAdapterIPAddress_Proxy( 
    IBDA_IPSinkControl * This,
    /* [out][in] */ unsigned long *pulcbSize,
    /* [out][in] */ BYTE **pbBuffer);


void __RPC_STUB IBDA_IPSinkControl_GetAdapterIPAddress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IBDA_IPSinkControl_INTERFACE_DEFINED__ */


#ifndef __IBDA_IPSinkInfo_INTERFACE_DEFINED__
#define __IBDA_IPSinkInfo_INTERFACE_DEFINED__

/* interface IBDA_IPSinkInfo */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IBDA_IPSinkInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A750108F-492E-4d51-95F7-649B23FF7AD7")
    IBDA_IPSinkInfo : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE get_MulticastList( 
            /* [out][in] */ ULONG *pulcbAddresses,
            /* [size_is][out] */ BYTE **ppbAddressList) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_AdapterIPAddress( 
            /* [out] */ BSTR *pbstrBuffer) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_AdapterDescription( 
            /* [out] */ BSTR *pbstrBuffer) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_IPSinkInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IBDA_IPSinkInfo * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IBDA_IPSinkInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IBDA_IPSinkInfo * This);
        
        HRESULT ( STDMETHODCALLTYPE *get_MulticastList )( 
            IBDA_IPSinkInfo * This,
            /* [out][in] */ ULONG *pulcbAddresses,
            /* [size_is][out] */ BYTE **ppbAddressList);
        
        HRESULT ( STDMETHODCALLTYPE *get_AdapterIPAddress )( 
            IBDA_IPSinkInfo * This,
            /* [out] */ BSTR *pbstrBuffer);
        
        HRESULT ( STDMETHODCALLTYPE *get_AdapterDescription )( 
            IBDA_IPSinkInfo * This,
            /* [out] */ BSTR *pbstrBuffer);
        
        END_INTERFACE
    } IBDA_IPSinkInfoVtbl;

    interface IBDA_IPSinkInfo
    {
        CONST_VTBL struct IBDA_IPSinkInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_IPSinkInfo_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IBDA_IPSinkInfo_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IBDA_IPSinkInfo_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IBDA_IPSinkInfo_get_MulticastList(This,pulcbAddresses,ppbAddressList)	\
    (This)->lpVtbl -> get_MulticastList(This,pulcbAddresses,ppbAddressList)

#define IBDA_IPSinkInfo_get_AdapterIPAddress(This,pbstrBuffer)	\
    (This)->lpVtbl -> get_AdapterIPAddress(This,pbstrBuffer)

#define IBDA_IPSinkInfo_get_AdapterDescription(This,pbstrBuffer)	\
    (This)->lpVtbl -> get_AdapterDescription(This,pbstrBuffer)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IBDA_IPSinkInfo_get_MulticastList_Proxy( 
    IBDA_IPSinkInfo * This,
    /* [out][in] */ ULONG *pulcbAddresses,
    /* [size_is][out] */ BYTE **ppbAddressList);


void __RPC_STUB IBDA_IPSinkInfo_get_MulticastList_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_IPSinkInfo_get_AdapterIPAddress_Proxy( 
    IBDA_IPSinkInfo * This,
    /* [out] */ BSTR *pbstrBuffer);


void __RPC_STUB IBDA_IPSinkInfo_get_AdapterIPAddress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IBDA_IPSinkInfo_get_AdapterDescription_Proxy( 
    IBDA_IPSinkInfo * This,
    /* [out] */ BSTR *pbstrBuffer);


void __RPC_STUB IBDA_IPSinkInfo_get_AdapterDescription_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IBDA_IPSinkInfo_INTERFACE_DEFINED__ */


#ifndef __IEnumPIDMap_INTERFACE_DEFINED__
#define __IEnumPIDMap_INTERFACE_DEFINED__

/* interface IEnumPIDMap */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IEnumPIDMap;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("afb6c2a2-2c41-11d3-8a60-0000f81e0e4a")
    IEnumPIDMap : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Next( 
            /* [in] */ ULONG cRequest,
            /* [size_is][out][in] */ PID_MAP *pPIDMap,
            /* [out] */ ULONG *pcReceived) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Skip( 
            /* [in] */ ULONG cRecords) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clone( 
            /* [out] */ IEnumPIDMap **ppIEnumPIDMap) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumPIDMapVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IEnumPIDMap * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IEnumPIDMap * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IEnumPIDMap * This);
        
        HRESULT ( STDMETHODCALLTYPE *Next )( 
            IEnumPIDMap * This,
            /* [in] */ ULONG cRequest,
            /* [size_is][out][in] */ PID_MAP *pPIDMap,
            /* [out] */ ULONG *pcReceived);
        
        HRESULT ( STDMETHODCALLTYPE *Skip )( 
            IEnumPIDMap * This,
            /* [in] */ ULONG cRecords);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            IEnumPIDMap * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clone )( 
            IEnumPIDMap * This,
            /* [out] */ IEnumPIDMap **ppIEnumPIDMap);
        
        END_INTERFACE
    } IEnumPIDMapVtbl;

    interface IEnumPIDMap
    {
        CONST_VTBL struct IEnumPIDMapVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumPIDMap_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IEnumPIDMap_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IEnumPIDMap_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IEnumPIDMap_Next(This,cRequest,pPIDMap,pcReceived)	\
    (This)->lpVtbl -> Next(This,cRequest,pPIDMap,pcReceived)

#define IEnumPIDMap_Skip(This,cRecords)	\
    (This)->lpVtbl -> Skip(This,cRecords)

#define IEnumPIDMap_Reset(This)	\
    (This)->lpVtbl -> Reset(This)

#define IEnumPIDMap_Clone(This,ppIEnumPIDMap)	\
    (This)->lpVtbl -> Clone(This,ppIEnumPIDMap)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IEnumPIDMap_Next_Proxy( 
    IEnumPIDMap * This,
    /* [in] */ ULONG cRequest,
    /* [size_is][out][in] */ PID_MAP *pPIDMap,
    /* [out] */ ULONG *pcReceived);


void __RPC_STUB IEnumPIDMap_Next_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumPIDMap_Skip_Proxy( 
    IEnumPIDMap * This,
    /* [in] */ ULONG cRecords);


void __RPC_STUB IEnumPIDMap_Skip_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumPIDMap_Reset_Proxy( 
    IEnumPIDMap * This);


void __RPC_STUB IEnumPIDMap_Reset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumPIDMap_Clone_Proxy( 
    IEnumPIDMap * This,
    /* [out] */ IEnumPIDMap **ppIEnumPIDMap);


void __RPC_STUB IEnumPIDMap_Clone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IEnumPIDMap_INTERFACE_DEFINED__ */


#ifndef __IMPEG2PIDMap_INTERFACE_DEFINED__
#define __IMPEG2PIDMap_INTERFACE_DEFINED__

/* interface IMPEG2PIDMap */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IMPEG2PIDMap;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("afb6c2a1-2c41-11d3-8a60-0000f81e0e4a")
    IMPEG2PIDMap : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE MapPID( 
            /* [in] */ ULONG culPID,
            /* [in] */ ULONG *pulPID,
            /* [in] */ MEDIA_SAMPLE_CONTENT MediaSampleContent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UnmapPID( 
            /* [in] */ ULONG culPID,
            /* [in] */ ULONG *pulPID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnumPIDMap( 
            /* [out] */ IEnumPIDMap **pIEnumPIDMap) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMPEG2PIDMapVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMPEG2PIDMap * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMPEG2PIDMap * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMPEG2PIDMap * This);
        
        HRESULT ( STDMETHODCALLTYPE *MapPID )( 
            IMPEG2PIDMap * This,
            /* [in] */ ULONG culPID,
            /* [in] */ ULONG *pulPID,
            /* [in] */ MEDIA_SAMPLE_CONTENT MediaSampleContent);
        
        HRESULT ( STDMETHODCALLTYPE *UnmapPID )( 
            IMPEG2PIDMap * This,
            /* [in] */ ULONG culPID,
            /* [in] */ ULONG *pulPID);
        
        HRESULT ( STDMETHODCALLTYPE *EnumPIDMap )( 
            IMPEG2PIDMap * This,
            /* [out] */ IEnumPIDMap **pIEnumPIDMap);
        
        END_INTERFACE
    } IMPEG2PIDMapVtbl;

    interface IMPEG2PIDMap
    {
        CONST_VTBL struct IMPEG2PIDMapVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMPEG2PIDMap_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMPEG2PIDMap_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMPEG2PIDMap_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMPEG2PIDMap_MapPID(This,culPID,pulPID,MediaSampleContent)	\
    (This)->lpVtbl -> MapPID(This,culPID,pulPID,MediaSampleContent)

#define IMPEG2PIDMap_UnmapPID(This,culPID,pulPID)	\
    (This)->lpVtbl -> UnmapPID(This,culPID,pulPID)

#define IMPEG2PIDMap_EnumPIDMap(This,pIEnumPIDMap)	\
    (This)->lpVtbl -> EnumPIDMap(This,pIEnumPIDMap)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IMPEG2PIDMap_MapPID_Proxy( 
    IMPEG2PIDMap * This,
    /* [in] */ ULONG culPID,
    /* [in] */ ULONG *pulPID,
    /* [in] */ MEDIA_SAMPLE_CONTENT MediaSampleContent);


void __RPC_STUB IMPEG2PIDMap_MapPID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMPEG2PIDMap_UnmapPID_Proxy( 
    IMPEG2PIDMap * This,
    /* [in] */ ULONG culPID,
    /* [in] */ ULONG *pulPID);


void __RPC_STUB IMPEG2PIDMap_UnmapPID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMPEG2PIDMap_EnumPIDMap_Proxy( 
    IMPEG2PIDMap * This,
    /* [out] */ IEnumPIDMap **pIEnumPIDMap);


void __RPC_STUB IMPEG2PIDMap_EnumPIDMap_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMPEG2PIDMap_INTERFACE_DEFINED__ */


/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     unsigned long *, unsigned long            , BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal(  unsigned long *, unsigned char *, BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal(unsigned long *, unsigned char *, BSTR * ); 
void                      __RPC_USER  BSTR_UserFree(     unsigned long *, BSTR * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\vc7addon\devtools\common\win32sdk\include\basetyps.h ===
//+---------------------------------------------------------------------------
//
//  Microsoft Windows
//  Copyright (c) Microsoft Corporation. All rights reserved.
//
//  File:       basetyps.h
//
//----------------------------------------------------------------------------
#if !defined( _BASETYPS_H_ )
#define _BASETYPS_H_

#if _MSC_VER > 1000
#pragma once
#endif

// Common macros gleamed from COMPOBJ.H

#ifdef __cplusplus
    #define EXTERN_C    extern "C"
#else
    #define EXTERN_C    extern
#endif

#ifdef _WIN32

// Win32 doesn't support __export

#define STDMETHODCALLTYPE       __stdcall
#define STDMETHODVCALLTYPE      __cdecl

#define STDAPICALLTYPE          __stdcall
#define STDAPIVCALLTYPE         __cdecl

#else

#define STDMETHODCALLTYPE       __export __stdcall
#define STDMETHODVCALLTYPE      __export __cdecl

#define STDAPICALLTYPE          __export __stdcall
#define STDAPIVCALLTYPE         __export __cdecl

#endif

#define STDAPI                  EXTERN_C HRESULT STDAPICALLTYPE
#define STDAPI_(type)           EXTERN_C type STDAPICALLTYPE

#define STDMETHODIMP            HRESULT STDMETHODCALLTYPE
#define STDMETHODIMP_(type)     type STDMETHODCALLTYPE

// The 'V' versions allow Variable Argument lists.

#define STDAPIV                 EXTERN_C HRESULT STDAPIVCALLTYPE
#define STDAPIV_(type)          EXTERN_C type STDAPIVCALLTYPE

#define STDMETHODIMPV           HRESULT STDMETHODVCALLTYPE
#define STDMETHODIMPV_(type)    type STDMETHODVCALLTYPE




/****** Interface Declaration ***********************************************/

/*
 *      These are macros for declaring interfaces.  They exist so that
 *      a single definition of the interface is simulataneously a proper
 *      declaration of the interface structures (C++ abstract classes)
 *      for both C and C++.
 *
 *      DECLARE_INTERFACE(iface) is used to declare an interface that does
 *      not derive from a base interface.
 *      DECLARE_INTERFACE_(iface, baseiface) is used to declare an interface
 *      that does derive from a base interface.
 *
 *      By default if the source file has a .c extension the C version of
 *      the interface declaratations will be expanded; if it has a .cpp
 *      extension the C++ version will be expanded. if you want to force
 *      the C version expansion even though the source file has a .cpp
 *      extension, then define the macro "CINTERFACE".
 *      eg.     cl -DCINTERFACE file.cpp
 *
 *      Example Interface declaration:
 *
 *          #undef  INTERFACE
 *          #define INTERFACE   IClassFactory
 *
 *          DECLARE_INTERFACE_(IClassFactory, IUnknown)
 *          {
 *              // *** IUnknown methods ***
 *              STDMETHOD(QueryInterface) (THIS_
 *                                        REFIID riid,
 *                                        LPVOID FAR* ppvObj) PURE;
 *              STDMETHOD_(ULONG,AddRef) (THIS) PURE;
 *              STDMETHOD_(ULONG,Release) (THIS) PURE;
 *
 *              // *** IClassFactory methods ***
 *              STDMETHOD(CreateInstance) (THIS_
 *                                        LPUNKNOWN pUnkOuter,
 *                                        REFIID riid,
 *                                        LPVOID FAR* ppvObject) PURE;
 *          };
 *
 *      Example C++ expansion:
 *
 *          struct FAR IClassFactory : public IUnknown
 *          {
 *              virtual HRESULT STDMETHODCALLTYPE QueryInterface(
 *                                                  IID FAR& riid,
 *                                                  LPVOID FAR* ppvObj) = 0;
 *              virtual HRESULT STDMETHODCALLTYPE AddRef(void) = 0;
 *              virtual HRESULT STDMETHODCALLTYPE Release(void) = 0;
 *              virtual HRESULT STDMETHODCALLTYPE CreateInstance(
 *                                              LPUNKNOWN pUnkOuter,
 *                                              IID FAR& riid,
 *                                              LPVOID FAR* ppvObject) = 0;
 *          };
 *
 *          NOTE: Our documentation says '#define interface class' but we use
 *          'struct' instead of 'class' to keep a lot of 'public:' lines
 *          out of the interfaces.  The 'FAR' forces the 'this' pointers to
 *          be far, which is what we need.
 *
 *      Example C expansion:
 *
 *          typedef struct IClassFactory
 *          {
 *              const struct IClassFactoryVtbl FAR* lpVtbl;
 *          } IClassFactory;
 *
 *          typedef struct IClassFactoryVtbl IClassFactoryVtbl;
 *
 *          struct IClassFactoryVtbl
 *          {
 *              HRESULT (STDMETHODCALLTYPE * QueryInterface) (
 *                                                  IClassFactory FAR* This,
 *                                                  IID FAR* riid,
 *                                                  LPVOID FAR* ppvObj) ;
 *              HRESULT (STDMETHODCALLTYPE * AddRef) (IClassFactory FAR* This) ;
 *              HRESULT (STDMETHODCALLTYPE * Release) (IClassFactory FAR* This) ;
 *              HRESULT (STDMETHODCALLTYPE * CreateInstance) (
 *                                                  IClassFactory FAR* This,
 *                                                  LPUNKNOWN pUnkOuter,
 *                                                  IID FAR* riid,
 *                                                  LPVOID FAR* ppvObject);
 *              HRESULT (STDMETHODCALLTYPE * LockServer) (
 *                                                  IClassFactory FAR* This,
 *                                                  BOOL fLock);
 *          };
 */


#if defined(__cplusplus) && !defined(CINTERFACE)
//#define interface               struct FAR
#define interface struct
#define STDMETHOD(method)       virtual HRESULT STDMETHODCALLTYPE method
#define STDMETHOD_(type,method) virtual type STDMETHODCALLTYPE method
#define STDMETHODV(method)       virtual HRESULT STDMETHODVCALLTYPE method
#define STDMETHODV_(type,method) virtual type STDMETHODVCALLTYPE method
#define PURE                    = 0
#define THIS_
#define THIS                    void
#define DECLARE_INTERFACE(iface)    interface DECLSPEC_NOVTABLE iface
#define DECLARE_INTERFACE_(iface, baseiface)    interface DECLSPEC_NOVTABLE iface : public baseiface



#else

#define interface               struct

#define STDMETHOD(method)       HRESULT (STDMETHODCALLTYPE * method)
#define STDMETHOD_(type,method) type (STDMETHODCALLTYPE * method)
#define STDMETHODV(method)       HRESULT (STDMETHODVCALLTYPE * method)
#define STDMETHODV_(type,method) type (STDMETHODVCALLTYPE * method)




#define PURE
#define THIS_                   INTERFACE FAR* This,
#define THIS                    INTERFACE FAR* This
#ifdef CONST_VTABLE
#define DECLARE_INTERFACE(iface)    typedef interface iface { \
                                    const struct iface##Vtbl FAR* lpVtbl; \
                                } iface; \
                                typedef const struct iface##Vtbl iface##Vtbl; \
                                const struct iface##Vtbl
#else
#define DECLARE_INTERFACE(iface)    typedef interface iface { \
                                    struct iface##Vtbl FAR* lpVtbl; \
                                } iface; \
                                typedef struct iface##Vtbl iface##Vtbl; \
                                struct iface##Vtbl
#endif
#define DECLARE_INTERFACE_(iface, baseiface)    DECLARE_INTERFACE(iface)

#endif

#include <guiddef.h>

#ifndef _ERROR_STATUS_T_DEFINED
typedef unsigned long error_status_t;
#define _ERROR_STATUS_T_DEFINED
#endif

#ifndef _WCHAR_T_DEFINED
typedef unsigned short wchar_t;
#define _WCHAR_T_DEFINED
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\vc7addon\devtools\common\win32sdk\include\Aviriff.h ===
//------------------------------------------------------------------------------
// File: AVIRIFF.h
//
// Desc: Structures and defines for the RIFF AVI file format extended to
//       handle very large/long files.
//
// Copyright (c) 1996 - 2000, Microsoft Corporation.  All rights reserved.
//------------------------------------------------------------------------------


#pragma warning(disable: 4097 4511 4512 4514 4705)


#if !defined AVIRIFF_H
#define AVIRIFF_H

#if !defined NUMELMS
  #define NUMELMS(aa) (sizeof(aa)/sizeof((aa)[0]))
#endif

// all structures in this file are packed on word boundaries
//
#include <pshpack2.h>

/*
 * heres the general layout of an AVI riff file (new format)
 *
 * RIFF (3F??????) AVI       <- not more than 1 GB in size
 *     LIST (size) hdrl
 *         avih (0038)
 *         LIST (size) strl
 *             strh (0038)
 *             strf (????)
 *             indx (3ff8)   <- size may vary, should be sector sized
 *         LIST (size) strl
 *             strh (0038)
 *             strf (????)
 *             indx (3ff8)   <- size may vary, should be sector sized
 *         LIST (size) odml
 *             dmlh (????)
 *         JUNK (size)       <- fill to align to sector - 12
 *     LIST (7f??????) movi  <- aligned on sector - 12
 *         00dc (size)       <- sector aligned
 *         01wb (size)       <- sector aligned
 *         ix00 (size)       <- sector aligned
 *     idx1 (00??????)       <- sector aligned
 * RIFF (7F??????) AVIX
 *     JUNK (size)           <- fill to align to sector -12
 *     LIST (size) movi
 *         00dc (size)       <- sector aligned
 * RIFF (7F??????) AVIX      <- not more than 2GB in size
 *     JUNK (size)           <- fill to align to sector - 12
 *     LIST (size) movi
 *         00dc (size)       <- sector aligned
 *
 *-===================================================================*/

//
// structures for manipulating RIFF headers
//
#define FCC(ch4) ((((DWORD)(ch4) & 0xFF) << 24) |     \
                  (((DWORD)(ch4) & 0xFF00) << 8) |    \
                  (((DWORD)(ch4) & 0xFF0000) >> 8) |  \
                  (((DWORD)(ch4) & 0xFF000000) >> 24))

typedef struct _riffchunk {
   FOURCC fcc;
   DWORD  cb;
   } RIFFCHUNK, * LPRIFFCHUNK;
typedef struct _rifflist {
   FOURCC fcc;
   DWORD  cb;
   FOURCC fccListType;
   } RIFFLIST, * LPRIFFLIST;

#define RIFFROUND(cb) ((cb) + ((cb)&1))
#define RIFFNEXT(pChunk) (LPRIFFCHUNK)((LPBYTE)(pChunk) \
                          + sizeof(RIFFCHUNK) \
                          + RIFFROUND(((LPRIFFCHUNK)pChunk)->cb))


//
// ==================== avi header structures ===========================
//

// main header for the avi file (compatibility header)
//
#define ckidMAINAVIHEADER FCC('avih')
typedef struct _avimainheader {
    FOURCC fcc;                    // 'avih'
    DWORD  cb;                     // size of this structure -8
    DWORD  dwMicroSecPerFrame;     // frame display rate (or 0L)
    DWORD  dwMaxBytesPerSec;       // max. transfer rate
    DWORD  dwPaddingGranularity;   // pad to multiples of this size; normally 2K.
    DWORD  dwFlags;                // the ever-present flags
    #define AVIF_HASINDEX        0x00000010 // Index at end of file?
    #define AVIF_MUSTUSEINDEX    0x00000020
    #define AVIF_ISINTERLEAVED   0x00000100
    #define AVIF_TRUSTCKTYPE     0x00000800 // Use CKType to find key frames
    #define AVIF_WASCAPTUREFILE  0x00010000
    #define AVIF_COPYRIGHTED     0x00020000
    DWORD  dwTotalFrames;          // # frames in first movi list
    DWORD  dwInitialFrames;
    DWORD  dwStreams;
    DWORD  dwSuggestedBufferSize;
    DWORD  dwWidth;
    DWORD  dwHeight;
    DWORD  dwReserved[4];
    } AVIMAINHEADER;

#define ckidODML          FCC('odml')
#define ckidAVIEXTHEADER  FCC('dmlh')
typedef struct _aviextheader {
   FOURCC  fcc;                    // 'dmlh'
   DWORD   cb;                     // size of this structure -8
   DWORD   dwGrandFrames;          // total number of frames in the file
   DWORD   dwFuture[61];           // to be defined later
   } AVIEXTHEADER;

//
// structure of an AVI stream header riff chunk
//
#define ckidSTREAMLIST   FCC('strl')

#ifndef ckidSTREAMHEADER
#define ckidSTREAMHEADER FCC('strh')
#endif
typedef struct _avistreamheader {
   FOURCC fcc;          // 'strh'
   DWORD  cb;           // size of this structure - 8

   FOURCC fccType;      // stream type codes

   #ifndef streamtypeVIDEO
   #define streamtypeVIDEO FCC('vids')
   #define streamtypeAUDIO FCC('auds')
   #define streamtypeMIDI  FCC('mids')
   #define streamtypeTEXT  FCC('txts')
   #endif

   FOURCC fccHandler;
   DWORD  dwFlags;
   #define AVISF_DISABLED          0x00000001
   #define AVISF_VIDEO_PALCHANGES  0x00010000

   WORD   wPriority;
   WORD   wLanguage;
   DWORD  dwInitialFrames;
   DWORD  dwScale;
   DWORD  dwRate;       // dwRate/dwScale is stream tick rate in ticks/sec
   DWORD  dwStart;
   DWORD  dwLength;
   DWORD  dwSuggestedBufferSize;
   DWORD  dwQuality;
   DWORD  dwSampleSize;
   struct {
      short int left;
      short int top;
      short int right;
      short int bottom;
      }   rcFrame;
   } AVISTREAMHEADER;


//
// structure of an AVI stream format chunk
//
#ifndef ckidSTREAMFORMAT
#define ckidSTREAMFORMAT FCC('strf')
#endif
//
// avi stream formats are different for each stream type
//
// BITMAPINFOHEADER for video streams
// WAVEFORMATEX or PCMWAVEFORMAT for audio streams
// nothing for text streams
// nothing for midi streams


#pragma warning(disable:4200)
//
// structure of old style AVI index
//
#define ckidAVIOLDINDEX FCC('idx1')
typedef struct _avioldindex {
   FOURCC  fcc;        // 'idx1'
   DWORD   cb;         // size of this structure -8
   struct _avioldindex_entry {
      DWORD   dwChunkId;
      DWORD   dwFlags;

      #ifndef AVIIF_LIST
      #define AVIIF_LIST       0x00000001
      #define AVIIF_KEYFRAME   0x00000010
      #endif
     
      #define AVIIF_NO_TIME    0x00000100
      #define AVIIF_COMPRESSOR 0x0FFF0000  // unused?
      DWORD   dwOffset;    // offset of riff chunk header for the data
      DWORD   dwSize;      // size of the data (excluding riff header size)
      } aIndex[];          // size of this array
   } AVIOLDINDEX;


//
// ============ structures for timecode in an AVI file =================
//

#ifndef TIMECODE_DEFINED
#define TIMECODE_DEFINED

// defined
// timecode time structure
//
typedef union _timecode {
   struct {
      WORD   wFrameRate;
      WORD   wFrameFract;
      LONG   cFrames;
      };
   DWORDLONG  qw;
   } TIMECODE;

#endif // TIMECODE_DEFINED

#define TIMECODE_RATE_30DROP 0   // this MUST be zero

// struct for all the SMPTE timecode info
//
typedef struct _timecodedata {
   TIMECODE time;
   DWORD    dwSMPTEflags;
   DWORD    dwUser;
   } TIMECODEDATA;

// dwSMPTEflags masks/values
//
#define TIMECODE_SMPTE_BINARY_GROUP 0x07
#define TIMECODE_SMPTE_COLOR_FRAME  0x08

//
// ============ structures for new style AVI indexes =================
//

// index type codes
//
#define AVI_INDEX_OF_INDEXES       0x00
#define AVI_INDEX_OF_CHUNKS        0x01
#define AVI_INDEX_OF_TIMED_CHUNKS  0x02
#define AVI_INDEX_OF_SUB_2FIELD    0x03
#define AVI_INDEX_IS_DATA          0x80

// index subtype codes
//
#define AVI_INDEX_SUB_DEFAULT     0x00

// INDEX_OF_CHUNKS subtype codes
//
#define AVI_INDEX_SUB_2FIELD      0x01

// meta structure of all avi indexes
//
typedef struct _avimetaindex {
   FOURCC fcc;
   UINT   cb;
   WORD   wLongsPerEntry;
   BYTE   bIndexSubType;
   BYTE   bIndexType;
   DWORD  nEntriesInUse;
   DWORD  dwChunkId;
   DWORD  dwReserved[3];
   DWORD  adwIndex[];
   } AVIMETAINDEX;

#define STDINDEXSIZE 0x4000
#define NUMINDEX(wLongsPerEntry) ((STDINDEXSIZE-32)/4/(wLongsPerEntry))
#define NUMINDEXFILL(wLongsPerEntry) ((STDINDEXSIZE/4) - NUMINDEX(wLongsPerEntry))

// structure of a super index (INDEX_OF_INDEXES)
//
#define ckidAVISUPERINDEX FCC('indx')
typedef struct _avisuperindex {
   FOURCC   fcc;               // 'indx'
   UINT     cb;                // size of this structure
   WORD     wLongsPerEntry;    // ==4
   BYTE     bIndexSubType;     // ==0 (frame index) or AVI_INDEX_SUB_2FIELD 
   BYTE     bIndexType;        // ==AVI_INDEX_OF_INDEXES
   DWORD    nEntriesInUse;     // offset of next unused entry in aIndex
   DWORD    dwChunkId;         // chunk ID of chunks being indexed, (i.e. RGB8)
   DWORD    dwReserved[3];     // must be 0
   struct _avisuperindex_entry {
      DWORDLONG qwOffset;    // 64 bit offset to sub index chunk
      DWORD    dwSize;       // 32 bit size of sub index chunk
      DWORD    dwDuration;   // time span of subindex chunk (in stream ticks)
      } aIndex[NUMINDEX(4)];
   } AVISUPERINDEX;
#define Valid_SUPERINDEX(pi) (*(DWORD *)(&((pi)->wLongsPerEntry)) == (4 | (AVI_INDEX_OF_INDEXES << 24)))

// struct of a standard index (AVI_INDEX_OF_CHUNKS)
//
typedef struct _avistdindex_entry {
   DWORD dwOffset;       // 32 bit offset to data (points to data, not riff header)
   DWORD dwSize;         // 31 bit size of data (does not include size of riff header), bit 31 is deltaframe bit
   } AVISTDINDEX_ENTRY;
#define AVISTDINDEX_DELTAFRAME ( 0x80000000) // Delta frames have the high bit set
#define AVISTDINDEX_SIZEMASK   (~0x80000000)

typedef struct _avistdindex {
   FOURCC   fcc;               // 'indx' or '##ix'
   UINT     cb;                // size of this structure
   WORD     wLongsPerEntry;    // ==2
   BYTE     bIndexSubType;     // ==0
   BYTE     bIndexType;        // ==AVI_INDEX_OF_CHUNKS
   DWORD    nEntriesInUse;     // offset of next unused entry in aIndex
   DWORD    dwChunkId;         // chunk ID of chunks being indexed, (i.e. RGB8)
   DWORDLONG qwBaseOffset;     // base offset that all index intries are relative to
   DWORD    dwReserved_3;      // must be 0
   AVISTDINDEX_ENTRY aIndex[NUMINDEX(2)];
   } AVISTDINDEX;

// struct of a time variant standard index (AVI_INDEX_OF_TIMED_CHUNKS)
//
typedef struct _avitimedindex_entry {
   DWORD dwOffset;       // 32 bit offset to data (points to data, not riff header)
   DWORD dwSize;         // 31 bit size of data (does not include size of riff header) (high bit is deltaframe bit)
   DWORD dwDuration;     // how much time the chunk should be played (in stream ticks)
   } AVITIMEDINDEX_ENTRY;

typedef struct _avitimedindex {
   FOURCC   fcc;               // 'indx' or '##ix'
   UINT     cb;                // size of this structure
   WORD     wLongsPerEntry;    // ==3
   BYTE     bIndexSubType;     // ==0
   BYTE     bIndexType;        // ==AVI_INDEX_OF_TIMED_CHUNKS
   DWORD    nEntriesInUse;     // offset of next unused entry in aIndex
   DWORD    dwChunkId;         // chunk ID of chunks being indexed, (i.e. RGB8)
   DWORDLONG qwBaseOffset;     // base offset that all index intries are relative to
   DWORD    dwReserved_3;      // must be 0
   AVITIMEDINDEX_ENTRY aIndex[NUMINDEX(3)];
   DWORD adwTrailingFill[NUMINDEXFILL(3)]; // to align struct to correct size
   } AVITIMEDINDEX;

// structure of a timecode stream
//
typedef struct _avitimecodeindex {
   FOURCC   fcc;               // 'indx' or '##ix'
   UINT     cb;                // size of this structure
   WORD     wLongsPerEntry;    // ==4
   BYTE     bIndexSubType;     // ==0
   BYTE     bIndexType;        // ==AVI_INDEX_IS_DATA
   DWORD    nEntriesInUse;     // offset of next unused entry in aIndex
   DWORD    dwChunkId;         // 'time'
   DWORD    dwReserved[3];     // must be 0
   TIMECODEDATA aIndex[NUMINDEX(sizeof(TIMECODEDATA)/sizeof(LONG))];
   } AVITIMECODEINDEX;

// structure of a timecode discontinuity list (when wLongsPerEntry == 7)
//
typedef struct _avitcdlindex_entry {
    DWORD    dwTick;           // stream tick time that maps to this timecode value
    TIMECODE time;
    DWORD    dwSMPTEflags;
    DWORD    dwUser;
    TCHAR    szReelId[12];
    } AVITCDLINDEX_ENTRY;

typedef struct _avitcdlindex {
   FOURCC   fcc;               // 'indx' or '##ix'
   UINT     cb;                // size of this structure
   WORD     wLongsPerEntry;    // ==7 (must be 4 or more all 'tcdl' indexes
   BYTE     bIndexSubType;     // ==0
   BYTE     bIndexType;        // ==AVI_INDEX_IS_DATA
   DWORD    nEntriesInUse;     // offset of next unused entry in aIndex
   DWORD    dwChunkId;         // 'tcdl'
   DWORD    dwReserved[3];     // must be 0
   AVITCDLINDEX_ENTRY aIndex[NUMINDEX(7)];
   DWORD adwTrailingFill[NUMINDEXFILL(7)]; // to align struct to correct size
   } AVITCDLINDEX;

typedef struct _avifieldindex_chunk {
   FOURCC   fcc;               // 'ix##'
   DWORD    cb;                // size of this structure
   WORD     wLongsPerEntry;    // must be 3 (size of each entry in
                               // aIndex array)
   BYTE     bIndexSubType;     // AVI_INDEX_2FIELD
   BYTE     bIndexType;        // AVI_INDEX_OF_CHUNKS
   DWORD    nEntriesInUse;     //
   DWORD    dwChunkId;         // '##dc' or '##db'
   DWORDLONG qwBaseOffset;     // offsets in aIndex array are relative to this
   DWORD    dwReserved3;       // must be 0
   struct _avifieldindex_entry {
      DWORD    dwOffset;
      DWORD    dwSize;         // size of all fields
                               // (bit 31 set for NON-keyframes)
      DWORD    dwOffsetField2; // offset to second field
   } aIndex[  ];
} AVIFIELDINDEX, * PAVIFIELDINDEX;


#include <poppack.h>

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\vc7addon\devtools\common\win32sdk\include\BatClass.h ===
/*++ BUILD Version: 0001    // Increment this if a change has global effects

Copyright (c) Microsoft Corporation.  All rights reserved.

Module Name:

    batclass.h

Abstract:

    Defines battery class driver interfaces.

Author:

    Ken Reneris (kenr) 02-Feb-1997

Revision History:
    7-10-98 split this file out of poclass.h (MHills)

--*/


//
// Battery device GUID
//

DEFINE_GUID( GUID_DEVICE_BATTERY, 0x72631e54L, 0x78A4, 0x11d0, 0xbc, 0xf7, 0x00, 0xaa, 0x00, 0xb7, 0xb3, 0x2a );

DEFINE_GUID (BATTERY_STATUS_WMI_GUID,
             0xfc4670d1, 0xebbf, 0x416e, 0x87, 0xce, 0x37, 0x4a, 0x4e, 0xbc, 0x11, 0x1a);
DEFINE_GUID (BATTERY_RUNTIME_WMI_GUID,
             0x535a3767, 0x1ac2, 0x49bc, 0xa0, 0x77, 0x3f, 0x7a, 0x02, 0xe4, 0x0a, 0xec);
DEFINE_GUID (BATTERY_TEMPERATURE_WMI_GUID,
             0x1a52a14d, 0xadce, 0x4a44, 0x9a, 0x3e, 0xc8, 0xd8, 0xf1, 0x5f, 0xf2, 0xc2);
DEFINE_GUID (BATTERY_FULL_CHARGED_CAPACITY_WMI_GUID,
             0x40b40565, 0x96f7, 0x4435, 0x86, 0x94, 0x97, 0xe0, 0xe4, 0x39, 0x59, 0x05);
DEFINE_GUID (BATTERY_CYCLE_COUNT_WMI_GUID,
             0xef98db24, 0x0014, 0x4c25, 0xa5, 0x0b, 0xc7, 0x24, 0xae, 0x5c, 0xd3, 0x71);
DEFINE_GUID (BATTERY_STATIC_DATA_WMI_GUID,
             0x05e1e463, 0xe4e2, 0x4ea9, 0x80, 0xcb, 0x9b, 0xd4, 0xb3, 0xca, 0x06, 0x55);
DEFINE_GUID (BATTERY_STATUS_CHANGE_WMI_GUID,
             0xcddfa0c3, 0x7c5b, 0x4e43, 0xa0, 0x34, 0x05, 0x9f, 0xa5, 0xb8, 0x43, 0x64);
DEFINE_GUID (BATTERY_TAG_CHANGE_WMI_GUID,
             0x5e1f6e19, 0x8786, 0x4d23, 0x94, 0xfc, 0x9e, 0x74, 0x6b, 0xd5, 0xd8, 0x88);

#ifndef _BATCLASS_
#define _BATCLASS_
//
// Battery driver interface
//
// IOCTL_BATTERY_QUERY_TAG
// IOCTL_BATTERY_QUERY_INFORMATION
// IOCTL_BATTERY_SET_INFORMATION
// IOCTL_BATTERY_QUERY_STATUS
//



//
// IOCTL_BATTERY_QUERY_TAG
//

#define IOCTL_BATTERY_QUERY_TAG         \
        CTL_CODE(FILE_DEVICE_BATTERY, 0x10, METHOD_BUFFERED, FILE_READ_ACCESS)

#define BATTERY_TAG_INVALID 0



//
// IOCTL_BATTERY_QUERY_INFORMATION
//

#define IOCTL_BATTERY_QUERY_INFORMATION \
        CTL_CODE(FILE_DEVICE_BATTERY, 0x11, METHOD_BUFFERED, FILE_READ_ACCESS)

typedef enum {
    BatteryInformation,
    BatteryGranularityInformation,
    BatteryTemperature,
    BatteryEstimatedTime,
    BatteryDeviceName,
    BatteryManufactureDate,
    BatteryManufactureName,
    BatteryUniqueID,
    BatterySerialNumber
} BATTERY_QUERY_INFORMATION_LEVEL;

typedef struct _BATTERY_QUERY_INFORMATION {
    ULONG                           BatteryTag;
    BATTERY_QUERY_INFORMATION_LEVEL InformationLevel;
    LONG                            AtRate;
} BATTERY_QUERY_INFORMATION, *PBATTERY_QUERY_INFORMATION;

//
// Format of data returned when
// BATTERY_INFORMATION_LEVEL = BatteryInformation
//
typedef struct _BATTERY_INFORMATION {
    ULONG       Capabilities;
    UCHAR       Technology;
    UCHAR       Reserved[3];
    UCHAR       Chemistry[4];
    ULONG       DesignedCapacity;
    ULONG       FullChargedCapacity;
    ULONG       DefaultAlert1;
    ULONG       DefaultAlert2;
    ULONG       CriticalBias;
    ULONG       CycleCount;
} BATTERY_INFORMATION, *PBATTERY_INFORMATION;

//
// BATTERY_INFORMATION.Capabilities flags
//
#define BATTERY_SYSTEM_BATTERY          0x80000000
#define BATTERY_CAPACITY_RELATIVE       0x40000000
#define BATTERY_IS_SHORT_TERM           0x20000000
#define BATTERY_SET_CHARGE_SUPPORTED    0x00000001
#define BATTERY_SET_DISCHARGE_SUPPORTED 0x00000002
#define BATTERY_SET_RESUME_SUPPORTED    0x00000004

//
// BATTERY_INFORMATION.XXXCapacity constants
//
#define BATTERY_UNKNOWN_CAPACITY 0xFFFFFFFF

//
// BatteryEstimatedTime constant
//
#define BATTERY_UNKNOWN_TIME 0xFFFFFFFF

//
// Max battery driver BATTERY_QUERY_INFORMATION_LEVEL string storage
// size in bytes.
//
#define MAX_BATTERY_STRING_SIZE 128

//
// Struct for accessing the packed date format in BatteryManufactureDate.
//
typedef struct _BATTERY_MANUFACTURE_DATE
{
    UCHAR   Day;
    UCHAR   Month;
    USHORT  Year;
} BATTERY_MANUFACTURE_DATE, *PBATTERY_MANUFACTURE_DATE;



//
// IOCTL_BATTERY_SET_INFORMATION
//

#define IOCTL_BATTERY_SET_INFORMATION   \
        CTL_CODE(FILE_DEVICE_BATTERY, 0x12, METHOD_BUFFERED, FILE_WRITE_ACCESS)

typedef enum {
    BatteryCriticalBias,
    BatteryCharge,
    BatteryDischarge
} BATTERY_SET_INFORMATION_LEVEL;

typedef struct _BATTERY_SET_INFORMATION {
    ULONG                         BatteryTag;
    BATTERY_SET_INFORMATION_LEVEL InformationLevel;
    UCHAR                         Buffer[1];
} BATTERY_SET_INFORMATION, *PBATTERY_SET_INFORMATION;



//
// IOCTL_BATTERY_QUERY_STATUS
//

#define IOCTL_BATTERY_QUERY_STATUS      \
        CTL_CODE(FILE_DEVICE_BATTERY, 0x13, METHOD_BUFFERED, FILE_READ_ACCESS)

//
// Structure of input buffer to IOCTL_BATTERY_QUERY_STATUS
//
typedef struct _BATTERY_WAIT_STATUS {
    ULONG       BatteryTag;
    ULONG       Timeout;
    ULONG       PowerState;
    ULONG       LowCapacity;
    ULONG       HighCapacity;
} BATTERY_WAIT_STATUS, *PBATTERY_WAIT_STATUS;

//
// Structure of output buffer from IOCTL_BATTERY_QUERY_STATUS
//
typedef struct _BATTERY_STATUS {
    ULONG       PowerState;
    ULONG       Capacity;
    ULONG       Voltage;
    LONG        Rate;
} BATTERY_STATUS, *PBATTERY_STATUS;

//
// BATTERY_STATUS.PowerState flags
//
#define BATTERY_POWER_ON_LINE   0x00000001
#define BATTERY_DISCHARGING     0x00000002
#define BATTERY_CHARGING        0x00000004
#define BATTERY_CRITICAL        0x00000008

//
// BATTERY_STATUS Constant
// BATTERY_UNKNOWN_CAPACITY defined above for IOCTL_BATTERY_QUERY_INFORMATION
//
#define BATTERY_UNKNOWN_VOLTAGE 0xFFFFFFFF
#define BATTERY_UNKNOWN_RATE    0x80000000


#ifndef _WINDOWS_

//
// Battery Class-Miniport device driver interfaces
//

typedef
NTSTATUS
(*BCLASS_QUERY_TAG)(
    IN PVOID Context,
    OUT PULONG BatteryTag
    );

typedef
NTSTATUS
(*BCLASS_QUERY_INFORMATION)(
    IN PVOID Context,
    IN ULONG BatteryTag,
    IN BATTERY_QUERY_INFORMATION_LEVEL Level,
    IN LONG AtRate OPTIONAL,
    OUT PVOID Buffer,
    IN  ULONG BufferLength,
    OUT PULONG ReturnedLength
    );

typedef
NTSTATUS
(*BCLASS_QUERY_STATUS)(
    IN PVOID Context,
    IN ULONG BatteryTag,
    OUT PBATTERY_STATUS BatteryStatus
    );

typedef struct {
    ULONG                   PowerState;
    ULONG                   LowCapacity;
    ULONG                   HighCapacity;
} BATTERY_NOTIFY, *PBATTERY_NOTIFY;

typedef
NTSTATUS
(*BCLASS_SET_STATUS_NOTIFY)(
    IN PVOID Context,
    IN ULONG BatteryTag,
    IN PBATTERY_NOTIFY BatteryNotify
    );

typedef
NTSTATUS
(*BCLASS_SET_INFORMATION)(
    IN PVOID Context,
    IN ULONG BatteryTag,
    IN BATTERY_SET_INFORMATION_LEVEL Level,
    IN PVOID Buffer OPTIONAL
    );

typedef
NTSTATUS
(*BCLASS_DISABLE_STATUS_NOTIFY)(
    IN PVOID Context
    );


typedef struct {
    USHORT                          MajorVersion;
    USHORT                          MinorVersion;

    PVOID                           Context;        // Miniport context

    BCLASS_QUERY_TAG                QueryTag;
    BCLASS_QUERY_INFORMATION        QueryInformation;
    BCLASS_SET_INFORMATION          SetInformation;
    BCLASS_QUERY_STATUS             QueryStatus;
    BCLASS_SET_STATUS_NOTIFY        SetStatusNotify;
    BCLASS_DISABLE_STATUS_NOTIFY    DisableStatusNotify;
    PDEVICE_OBJECT                  Pdo;
    PUNICODE_STRING                 DeviceName;
} BATTERY_MINIPORT_INFO, *PBATTERY_MINIPORT_INFO;



#define BATTERY_CLASS_MAJOR_VERSION     0x0001
#define BATTERY_CLASS_MINOR_VERSION     0x0000

//
// WMI data block structures
//

typedef struct _BATTERY_WMI_STATUS {
    ULONG Tag;
    ULONG RemainingCapacity;
    LONG ChargeRate;
    LONG DischargeRate;
    ULONG Voltage;
    BOOLEAN PowerOnline;
    BOOLEAN Charging;
    BOOLEAN Discharging;
    BOOLEAN Critical;
} BATTERY_WMI_STATUS, *PBATTERY_WMI_STATUS;

typedef struct _BATTERY_WMI_RUNTIME
{
    ULONG Tag;
    ULONG EstimatedRuntime;
} BATTERY_WMI_RUNTIME, *PBATTERY_WMI_RUNTIME;

typedef struct _BATTERY_WMI_TEMPERATURE
{
    ULONG Tag;
    ULONG Temperature;
} BATTERY_WMI_TEMPERATURE, *PBATTERY_WMI_TEMPERATURE;

typedef struct _BATTERY_WMI_FULL_CHARGED_CAPACITY
{
    ULONG Tag;
    ULONG FullChargedCapacity;
} BATTERY_WMI_FULL_CHARGED_CAPACITY, *PBATTERY_WMI_FULL_CHARGED_CAPACITY;

typedef struct _BATTERY_WMI_CYCLE_COUNT
{
    ULONG Tag;
    ULONG CycleCount;
} BATTERY_WMI_CYCLE_COUNT, *PBATTERY_WMI_CYCLE_COUNT;

typedef struct _BATTERY_WMI_STATIC_DATA
{
    ULONG Tag;
    WCHAR ManufactureDate[25];
    BATTERY_REPORTING_SCALE Granularity [4];
    ULONG Capabilities;
    UCHAR Technology;
    ULONG Chemistry;
    ULONG DesignedCapacity;
    ULONG DefaultAlert1;
    ULONG DefaultAlert2;
    ULONG CriticalBias;
    WCHAR Strings[1];
    // Four variable length string values are stored with the first USHORT
    // value containing the length of the string in bytes.
    //
    // Device Name
    // Manufacture Name
    // Serial Number
    // UniqueID
    //
} BATTERY_WMI_STATIC_DATA, *PBATTERY_WMI_STATIC_DATA;

typedef struct _BATTERY_WMI_STATUS_CHANGE
{
    ULONG Tag;
    BOOLEAN PowerOnline;
    BOOLEAN Charging;
    BOOLEAN Discharging;
    BOOLEAN Critical;
} BATTERY_WMI_STATUS_CHANGE, *PBATTERY_WMI_STATUS_CHANGE;

typedef struct _BATTERY_TAG_CHANGE
{
    ULONG Tag;
} BATTERY_TAG_CHANGE, *PBATTERY_TAG_CHANGE;


//
// Battery class driver functions
//

#if !defined(BATTERYCLASS)
    #define BATTERYCLASSAPI DECLSPEC_IMPORT
#else
    #define BATTERYCLASSAPI
#endif


NTSTATUS
BATTERYCLASSAPI
BatteryClassInitializeDevice (
    IN PBATTERY_MINIPORT_INFO MiniportInfo,
    IN PVOID *ClassData
    );

NTSTATUS
BATTERYCLASSAPI
BatteryClassUnload (
    IN PVOID ClassData
    );

NTSTATUS
BATTERYCLASSAPI
BatteryClassIoctl (
    IN PVOID ClassData,
    IN PIRP Irp
    );

NTSTATUS
BATTERYCLASSAPI
BatteryClassSystemControl (
    IN  PVOID ClassData,
    IN  PVOID WmiLibContext, //PWMILIB_CONTEXT
    IN  PDEVICE_OBJECT  DeviceObject,
    IN  PIRP Irp,
    OUT PVOID Disposition //PSYSCTL_IRP_DISPOSITION
    );

NTSTATUS
BATTERYCLASSAPI
BatteryClassQueryWmiDataBlock(
    IN PVOID ClassData,
    IN PDEVICE_OBJECT DeviceObject,
    IN PIRP Irp,
    IN ULONG GuidIndex,
    IN OUT PULONG InstanceLengthArray,
    IN ULONG OutBufferSize,
    OUT PUCHAR Buffer
    );


NTSTATUS
BATTERYCLASSAPI
BatteryClassStatusNotify (
    IN PVOID ClassData
    );

#endif // _WINDOWS_

#endif // _BATCLASS_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\vc7addon\devtools\common\win32sdk\include\bdatif.h ===
#pragma warning( disable: 4049 )  /* more than 64k source lines */

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 6.00.0347 */
/* Compiler settings for bdatif.idl:
    Oicf, W1, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __bdatif_h__
#define __bdatif_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IMPEG2_TIF_CONTROL_FWD_DEFINED__
#define __IMPEG2_TIF_CONTROL_FWD_DEFINED__
typedef interface IMPEG2_TIF_CONTROL IMPEG2_TIF_CONTROL;
#endif 	/* __IMPEG2_TIF_CONTROL_FWD_DEFINED__ */


#ifndef __ITuneRequestInfo_FWD_DEFINED__
#define __ITuneRequestInfo_FWD_DEFINED__
typedef interface ITuneRequestInfo ITuneRequestInfo;
#endif 	/* __ITuneRequestInfo_FWD_DEFINED__ */


#ifndef __IGuideDataEvent_FWD_DEFINED__
#define __IGuideDataEvent_FWD_DEFINED__
typedef interface IGuideDataEvent IGuideDataEvent;
#endif 	/* __IGuideDataEvent_FWD_DEFINED__ */


#ifndef __IGuideDataProperty_FWD_DEFINED__
#define __IGuideDataProperty_FWD_DEFINED__
typedef interface IGuideDataProperty IGuideDataProperty;
#endif 	/* __IGuideDataProperty_FWD_DEFINED__ */


#ifndef __IEnumGuideDataProperties_FWD_DEFINED__
#define __IEnumGuideDataProperties_FWD_DEFINED__
typedef interface IEnumGuideDataProperties IEnumGuideDataProperties;
#endif 	/* __IEnumGuideDataProperties_FWD_DEFINED__ */


#ifndef __IEnumTuneRequests_FWD_DEFINED__
#define __IEnumTuneRequests_FWD_DEFINED__
typedef interface IEnumTuneRequests IEnumTuneRequests;
#endif 	/* __IEnumTuneRequests_FWD_DEFINED__ */


#ifndef __IGuideData_FWD_DEFINED__
#define __IGuideData_FWD_DEFINED__
typedef interface IGuideData IGuideData;
#endif 	/* __IGuideData_FWD_DEFINED__ */


#ifndef __IGuideDataLoader_FWD_DEFINED__
#define __IGuideDataLoader_FWD_DEFINED__
typedef interface IGuideDataLoader IGuideDataLoader;
#endif 	/* __IGuideDataLoader_FWD_DEFINED__ */


#ifndef __TIFLoad_FWD_DEFINED__
#define __TIFLoad_FWD_DEFINED__

#ifdef __cplusplus
typedef class TIFLoad TIFLoad;
#else
typedef struct TIFLoad TIFLoad;
#endif /* __cplusplus */

#endif 	/* __TIFLoad_FWD_DEFINED__ */


/* header files for imported files */
#include "unknwn.h"
#include "strmif.h"
#include "tuner.h"

#ifdef __cplusplus
extern "C"{
#endif 

void * __RPC_USER MIDL_user_allocate(size_t);
void __RPC_USER MIDL_user_free( void * ); 

/* interface __MIDL_itf_bdatif_0000 */
/* [local] */ 

//+-------------------------------------------------------------------------
//
//  Microsoft Windows
//  Copyright (C) Microsoft Corporation, 1999.
//
//--------------------------------------------------------------------------
#if ( _MSC_VER >= 800 )
#pragma warning(disable:4201)    /* Nameless struct/union */
#endif
#if ( _MSC_VER >= 1020 )
#pragma once
#endif




extern RPC_IF_HANDLE __MIDL_itf_bdatif_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_bdatif_0000_v0_0_s_ifspec;

#ifndef __IMPEG2_TIF_CONTROL_INTERFACE_DEFINED__
#define __IMPEG2_TIF_CONTROL_INTERFACE_DEFINED__

/* interface IMPEG2_TIF_CONTROL */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IMPEG2_TIF_CONTROL;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F9BAC2F9-4149-4916-B2EF-FAA202326862")
    IMPEG2_TIF_CONTROL : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE RegisterTIF( 
            /* [in] */ IUnknown *pUnkTIF,
            /* [out][in] */ ULONG *ppvRegistrationContext) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE UnregisterTIF( 
            /* [in] */ ULONG pvRegistrationContext) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddPIDs( 
            /* [in] */ ULONG ulcPIDs,
            /* [in] */ ULONG *pulPIDs) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE DeletePIDs( 
            /* [in] */ ULONG ulcPIDs,
            /* [in] */ ULONG *pulPIDs) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetPIDCount( 
            /* [out] */ ULONG *pulcPIDs) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetPIDs( 
            /* [out] */ ULONG *pulcPIDs,
            /* [out] */ ULONG *pulPIDs) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMPEG2_TIF_CONTROLVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMPEG2_TIF_CONTROL * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMPEG2_TIF_CONTROL * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMPEG2_TIF_CONTROL * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RegisterTIF )( 
            IMPEG2_TIF_CONTROL * This,
            /* [in] */ IUnknown *pUnkTIF,
            /* [out][in] */ ULONG *ppvRegistrationContext);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *UnregisterTIF )( 
            IMPEG2_TIF_CONTROL * This,
            /* [in] */ ULONG pvRegistrationContext);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddPIDs )( 
            IMPEG2_TIF_CONTROL * This,
            /* [in] */ ULONG ulcPIDs,
            /* [in] */ ULONG *pulPIDs);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DeletePIDs )( 
            IMPEG2_TIF_CONTROL * This,
            /* [in] */ ULONG ulcPIDs,
            /* [in] */ ULONG *pulPIDs);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetPIDCount )( 
            IMPEG2_TIF_CONTROL * This,
            /* [out] */ ULONG *pulcPIDs);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetPIDs )( 
            IMPEG2_TIF_CONTROL * This,
            /* [out] */ ULONG *pulcPIDs,
            /* [out] */ ULONG *pulPIDs);
        
        END_INTERFACE
    } IMPEG2_TIF_CONTROLVtbl;

    interface IMPEG2_TIF_CONTROL
    {
        CONST_VTBL struct IMPEG2_TIF_CONTROLVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMPEG2_TIF_CONTROL_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMPEG2_TIF_CONTROL_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMPEG2_TIF_CONTROL_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMPEG2_TIF_CONTROL_RegisterTIF(This,pUnkTIF,ppvRegistrationContext)	\
    (This)->lpVtbl -> RegisterTIF(This,pUnkTIF,ppvRegistrationContext)

#define IMPEG2_TIF_CONTROL_UnregisterTIF(This,pvRegistrationContext)	\
    (This)->lpVtbl -> UnregisterTIF(This,pvRegistrationContext)

#define IMPEG2_TIF_CONTROL_AddPIDs(This,ulcPIDs,pulPIDs)	\
    (This)->lpVtbl -> AddPIDs(This,ulcPIDs,pulPIDs)

#define IMPEG2_TIF_CONTROL_DeletePIDs(This,ulcPIDs,pulPIDs)	\
    (This)->lpVtbl -> DeletePIDs(This,ulcPIDs,pulPIDs)

#define IMPEG2_TIF_CONTROL_GetPIDCount(This,pulcPIDs)	\
    (This)->lpVtbl -> GetPIDCount(This,pulcPIDs)

#define IMPEG2_TIF_CONTROL_GetPIDs(This,pulcPIDs,pulPIDs)	\
    (This)->lpVtbl -> GetPIDs(This,pulcPIDs,pulPIDs)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMPEG2_TIF_CONTROL_RegisterTIF_Proxy( 
    IMPEG2_TIF_CONTROL * This,
    /* [in] */ IUnknown *pUnkTIF,
    /* [out][in] */ ULONG *ppvRegistrationContext);


void __RPC_STUB IMPEG2_TIF_CONTROL_RegisterTIF_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMPEG2_TIF_CONTROL_UnregisterTIF_Proxy( 
    IMPEG2_TIF_CONTROL * This,
    /* [in] */ ULONG pvRegistrationContext);


void __RPC_STUB IMPEG2_TIF_CONTROL_UnregisterTIF_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMPEG2_TIF_CONTROL_AddPIDs_Proxy( 
    IMPEG2_TIF_CONTROL * This,
    /* [in] */ ULONG ulcPIDs,
    /* [in] */ ULONG *pulPIDs);


void __RPC_STUB IMPEG2_TIF_CONTROL_AddPIDs_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMPEG2_TIF_CONTROL_DeletePIDs_Proxy( 
    IMPEG2_TIF_CONTROL * This,
    /* [in] */ ULONG ulcPIDs,
    /* [in] */ ULONG *pulPIDs);


void __RPC_STUB IMPEG2_TIF_CONTROL_DeletePIDs_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMPEG2_TIF_CONTROL_GetPIDCount_Proxy( 
    IMPEG2_TIF_CONTROL * This,
    /* [out] */ ULONG *pulcPIDs);


void __RPC_STUB IMPEG2_TIF_CONTROL_GetPIDCount_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMPEG2_TIF_CONTROL_GetPIDs_Proxy( 
    IMPEG2_TIF_CONTROL * This,
    /* [out] */ ULONG *pulcPIDs,
    /* [out] */ ULONG *pulPIDs);


void __RPC_STUB IMPEG2_TIF_CONTROL_GetPIDs_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMPEG2_TIF_CONTROL_INTERFACE_DEFINED__ */


#ifndef __ITuneRequestInfo_INTERFACE_DEFINED__
#define __ITuneRequestInfo_INTERFACE_DEFINED__

/* interface ITuneRequestInfo */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_ITuneRequestInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A3B152DF-7A90-4218-AC54-9830BEE8C0B6")
    ITuneRequestInfo : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetLocatorData( 
            /* [in] */ ITuneRequest *Request) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetComponentData( 
            /* [in] */ ITuneRequest *CurrentRequest) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CreateComponentList( 
            /* [in] */ ITuneRequest *CurrentRequest) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetNextProgram( 
            /* [in] */ ITuneRequest *CurrentRequest,
            /* [retval][out] */ ITuneRequest **TuneRequest) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetPreviousProgram( 
            /* [in] */ ITuneRequest *CurrentRequest,
            /* [retval][out] */ ITuneRequest **TuneRequest) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetNextLocator( 
            /* [in] */ ITuneRequest *CurrentRequest,
            /* [retval][out] */ ITuneRequest **TuneRequest) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetPreviousLocator( 
            /* [in] */ ITuneRequest *CurrentRequest,
            /* [retval][out] */ ITuneRequest **TuneRequest) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ITuneRequestInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ITuneRequestInfo * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ITuneRequestInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ITuneRequestInfo * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetLocatorData )( 
            ITuneRequestInfo * This,
            /* [in] */ ITuneRequest *Request);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetComponentData )( 
            ITuneRequestInfo * This,
            /* [in] */ ITuneRequest *CurrentRequest);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreateComponentList )( 
            ITuneRequestInfo * This,
            /* [in] */ ITuneRequest *CurrentRequest);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetNextProgram )( 
            ITuneRequestInfo * This,
            /* [in] */ ITuneRequest *CurrentRequest,
            /* [retval][out] */ ITuneRequest **TuneRequest);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetPreviousProgram )( 
            ITuneRequestInfo * This,
            /* [in] */ ITuneRequest *CurrentRequest,
            /* [retval][out] */ ITuneRequest **TuneRequest);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetNextLocator )( 
            ITuneRequestInfo * This,
            /* [in] */ ITuneRequest *CurrentRequest,
            /* [retval][out] */ ITuneRequest **TuneRequest);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetPreviousLocator )( 
            ITuneRequestInfo * This,
            /* [in] */ ITuneRequest *CurrentRequest,
            /* [retval][out] */ ITuneRequest **TuneRequest);
        
        END_INTERFACE
    } ITuneRequestInfoVtbl;

    interface ITuneRequestInfo
    {
        CONST_VTBL struct ITuneRequestInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ITuneRequestInfo_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define ITuneRequestInfo_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define ITuneRequestInfo_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define ITuneRequestInfo_GetLocatorData(This,Request)	\
    (This)->lpVtbl -> GetLocatorData(This,Request)

#define ITuneRequestInfo_GetComponentData(This,CurrentRequest)	\
    (This)->lpVtbl -> GetComponentData(This,CurrentRequest)

#define ITuneRequestInfo_CreateComponentList(This,CurrentRequest)	\
    (This)->lpVtbl -> CreateComponentList(This,CurrentRequest)

#define ITuneRequestInfo_GetNextProgram(This,CurrentRequest,TuneRequest)	\
    (This)->lpVtbl -> GetNextProgram(This,CurrentRequest,TuneRequest)

#define ITuneRequestInfo_GetPreviousProgram(This,CurrentRequest,TuneRequest)	\
    (This)->lpVtbl -> GetPreviousProgram(This,CurrentRequest,TuneRequest)

#define ITuneRequestInfo_GetNextLocator(This,CurrentRequest,TuneRequest)	\
    (This)->lpVtbl -> GetNextLocator(This,CurrentRequest,TuneRequest)

#define ITuneRequestInfo_GetPreviousLocator(This,CurrentRequest,TuneRequest)	\
    (This)->lpVtbl -> GetPreviousLocator(This,CurrentRequest,TuneRequest)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring] */ HRESULT STDMETHODCALLTYPE ITuneRequestInfo_GetLocatorData_Proxy( 
    ITuneRequestInfo * This,
    /* [in] */ ITuneRequest *Request);


void __RPC_STUB ITuneRequestInfo_GetLocatorData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE ITuneRequestInfo_GetComponentData_Proxy( 
    ITuneRequestInfo * This,
    /* [in] */ ITuneRequest *CurrentRequest);


void __RPC_STUB ITuneRequestInfo_GetComponentData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE ITuneRequestInfo_CreateComponentList_Proxy( 
    ITuneRequestInfo * This,
    /* [in] */ ITuneRequest *CurrentRequest);


void __RPC_STUB ITuneRequestInfo_CreateComponentList_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE ITuneRequestInfo_GetNextProgram_Proxy( 
    ITuneRequestInfo * This,
    /* [in] */ ITuneRequest *CurrentRequest,
    /* [retval][out] */ ITuneRequest **TuneRequest);


void __RPC_STUB ITuneRequestInfo_GetNextProgram_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE ITuneRequestInfo_GetPreviousProgram_Proxy( 
    ITuneRequestInfo * This,
    /* [in] */ ITuneRequest *CurrentRequest,
    /* [retval][out] */ ITuneRequest **TuneRequest);


void __RPC_STUB ITuneRequestInfo_GetPreviousProgram_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE ITuneRequestInfo_GetNextLocator_Proxy( 
    ITuneRequestInfo * This,
    /* [in] */ ITuneRequest *CurrentRequest,
    /* [retval][out] */ ITuneRequest **TuneRequest);


void __RPC_STUB ITuneRequestInfo_GetNextLocator_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE ITuneRequestInfo_GetPreviousLocator_Proxy( 
    ITuneRequestInfo * This,
    /* [in] */ ITuneRequest *CurrentRequest,
    /* [retval][out] */ ITuneRequest **TuneRequest);


void __RPC_STUB ITuneRequestInfo_GetPreviousLocator_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __ITuneRequestInfo_INTERFACE_DEFINED__ */


#ifndef __IGuideDataEvent_INTERFACE_DEFINED__
#define __IGuideDataEvent_INTERFACE_DEFINED__

/* interface IGuideDataEvent */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IGuideDataEvent;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("EFDA0C80-F395-42c3-9B3C-56B37DEC7BB7")
    IGuideDataEvent : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GuideDataAcquired( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ProgramChanged( 
            /* [in] */ VARIANT varProgramDescriptionID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ServiceChanged( 
            /* [in] */ VARIANT varServiceDescriptionID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ScheduleEntryChanged( 
            /* [in] */ VARIANT varScheduleEntryDescriptionID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ProgramDeleted( 
            /* [in] */ VARIANT varProgramDescriptionID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ServiceDeleted( 
            /* [in] */ VARIANT varServiceDescriptionID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ScheduleDeleted( 
            /* [in] */ VARIANT varScheduleEntryDescriptionID) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IGuideDataEventVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IGuideDataEvent * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IGuideDataEvent * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IGuideDataEvent * This);
        
        HRESULT ( STDMETHODCALLTYPE *GuideDataAcquired )( 
            IGuideDataEvent * This);
        
        HRESULT ( STDMETHODCALLTYPE *ProgramChanged )( 
            IGuideDataEvent * This,
            /* [in] */ VARIANT varProgramDescriptionID);
        
        HRESULT ( STDMETHODCALLTYPE *ServiceChanged )( 
            IGuideDataEvent * This,
            /* [in] */ VARIANT varServiceDescriptionID);
        
        HRESULT ( STDMETHODCALLTYPE *ScheduleEntryChanged )( 
            IGuideDataEvent * This,
            /* [in] */ VARIANT varScheduleEntryDescriptionID);
        
        HRESULT ( STDMETHODCALLTYPE *ProgramDeleted )( 
            IGuideDataEvent * This,
            /* [in] */ VARIANT varProgramDescriptionID);
        
        HRESULT ( STDMETHODCALLTYPE *ServiceDeleted )( 
            IGuideDataEvent * This,
            /* [in] */ VARIANT varServiceDescriptionID);
        
        HRESULT ( STDMETHODCALLTYPE *ScheduleDeleted )( 
            IGuideDataEvent * This,
            /* [in] */ VARIANT varScheduleEntryDescriptionID);
        
        END_INTERFACE
    } IGuideDataEventVtbl;

    interface IGuideDataEvent
    {
        CONST_VTBL struct IGuideDataEventVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IGuideDataEvent_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IGuideDataEvent_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IGuideDataEvent_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IGuideDataEvent_GuideDataAcquired(This)	\
    (This)->lpVtbl -> GuideDataAcquired(This)

#define IGuideDataEvent_ProgramChanged(This,varProgramDescriptionID)	\
    (This)->lpVtbl -> ProgramChanged(This,varProgramDescriptionID)

#define IGuideDataEvent_ServiceChanged(This,varServiceDescriptionID)	\
    (This)->lpVtbl -> ServiceChanged(This,varServiceDescriptionID)

#define IGuideDataEvent_ScheduleEntryChanged(This,varScheduleEntryDescriptionID)	\
    (This)->lpVtbl -> ScheduleEntryChanged(This,varScheduleEntryDescriptionID)

#define IGuideDataEvent_ProgramDeleted(This,varProgramDescriptionID)	\
    (This)->lpVtbl -> ProgramDeleted(This,varProgramDescriptionID)

#define IGuideDataEvent_ServiceDeleted(This,varServiceDescriptionID)	\
    (This)->lpVtbl -> ServiceDeleted(This,varServiceDescriptionID)

#define IGuideDataEvent_ScheduleDeleted(This,varScheduleEntryDescriptionID)	\
    (This)->lpVtbl -> ScheduleDeleted(This,varScheduleEntryDescriptionID)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IGuideDataEvent_GuideDataAcquired_Proxy( 
    IGuideDataEvent * This);


void __RPC_STUB IGuideDataEvent_GuideDataAcquired_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IGuideDataEvent_ProgramChanged_Proxy( 
    IGuideDataEvent * This,
    /* [in] */ VARIANT varProgramDescriptionID);


void __RPC_STUB IGuideDataEvent_ProgramChanged_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IGuideDataEvent_ServiceChanged_Proxy( 
    IGuideDataEvent * This,
    /* [in] */ VARIANT varServiceDescriptionID);


void __RPC_STUB IGuideDataEvent_ServiceChanged_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IGuideDataEvent_ScheduleEntryChanged_Proxy( 
    IGuideDataEvent * This,
    /* [in] */ VARIANT varScheduleEntryDescriptionID);


void __RPC_STUB IGuideDataEvent_ScheduleEntryChanged_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IGuideDataEvent_ProgramDeleted_Proxy( 
    IGuideDataEvent * This,
    /* [in] */ VARIANT varProgramDescriptionID);


void __RPC_STUB IGuideDataEvent_ProgramDeleted_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IGuideDataEvent_ServiceDeleted_Proxy( 
    IGuideDataEvent * This,
    /* [in] */ VARIANT varServiceDescriptionID);


void __RPC_STUB IGuideDataEvent_ServiceDeleted_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IGuideDataEvent_ScheduleDeleted_Proxy( 
    IGuideDataEvent * This,
    /* [in] */ VARIANT varScheduleEntryDescriptionID);


void __RPC_STUB IGuideDataEvent_ScheduleDeleted_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IGuideDataEvent_INTERFACE_DEFINED__ */


#ifndef __IGuideDataProperty_INTERFACE_DEFINED__
#define __IGuideDataProperty_INTERFACE_DEFINED__

/* interface IGuideDataProperty */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IGuideDataProperty;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("88EC5E58-BB73-41d6-99CE-66C524B8B591")
    IGuideDataProperty : public IUnknown
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [out] */ BSTR *pbstrName) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Language( 
            /* [out] */ long *idLang) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Value( 
            /* [out] */ VARIANT *pvar) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IGuideDataPropertyVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IGuideDataProperty * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IGuideDataProperty * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IGuideDataProperty * This);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IGuideDataProperty * This,
            /* [out] */ BSTR *pbstrName);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Language )( 
            IGuideDataProperty * This,
            /* [out] */ long *idLang);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            IGuideDataProperty * This,
            /* [out] */ VARIANT *pvar);
        
        END_INTERFACE
    } IGuideDataPropertyVtbl;

    interface IGuideDataProperty
    {
        CONST_VTBL struct IGuideDataPropertyVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IGuideDataProperty_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IGuideDataProperty_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IGuideDataProperty_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IGuideDataProperty_get_Name(This,pbstrName)	\
    (This)->lpVtbl -> get_Name(This,pbstrName)

#define IGuideDataProperty_get_Language(This,idLang)	\
    (This)->lpVtbl -> get_Language(This,idLang)

#define IGuideDataProperty_get_Value(This,pvar)	\
    (This)->lpVtbl -> get_Value(This,pvar)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propget] */ HRESULT STDMETHODCALLTYPE IGuideDataProperty_get_Name_Proxy( 
    IGuideDataProperty * This,
    /* [out] */ BSTR *pbstrName);


void __RPC_STUB IGuideDataProperty_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget] */ HRESULT STDMETHODCALLTYPE IGuideDataProperty_get_Language_Proxy( 
    IGuideDataProperty * This,
    /* [out] */ long *idLang);


void __RPC_STUB IGuideDataProperty_get_Language_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget] */ HRESULT STDMETHODCALLTYPE IGuideDataProperty_get_Value_Proxy( 
    IGuideDataProperty * This,
    /* [out] */ VARIANT *pvar);


void __RPC_STUB IGuideDataProperty_get_Value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IGuideDataProperty_INTERFACE_DEFINED__ */


#ifndef __IEnumGuideDataProperties_INTERFACE_DEFINED__
#define __IEnumGuideDataProperties_INTERFACE_DEFINED__

/* interface IEnumGuideDataProperties */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IEnumGuideDataProperties;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("AE44423B-4571-475c-AD2C-F40A771D80EF")
    IEnumGuideDataProperties : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Next( 
            /* [in] */ unsigned long celt,
            /* [out] */ IGuideDataProperty **ppprop,
            /* [out] */ unsigned long *pcelt) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Skip( 
            /* [in] */ unsigned long celt) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clone( 
            /* [out] */ IEnumGuideDataProperties **ppenum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumGuideDataPropertiesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IEnumGuideDataProperties * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IEnumGuideDataProperties * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IEnumGuideDataProperties * This);
        
        HRESULT ( STDMETHODCALLTYPE *Next )( 
            IEnumGuideDataProperties * This,
            /* [in] */ unsigned long celt,
            /* [out] */ IGuideDataProperty **ppprop,
            /* [out] */ unsigned long *pcelt);
        
        HRESULT ( STDMETHODCALLTYPE *Skip )( 
            IEnumGuideDataProperties * This,
            /* [in] */ unsigned long celt);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            IEnumGuideDataProperties * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clone )( 
            IEnumGuideDataProperties * This,
            /* [out] */ IEnumGuideDataProperties **ppenum);
        
        END_INTERFACE
    } IEnumGuideDataPropertiesVtbl;

    interface IEnumGuideDataProperties
    {
        CONST_VTBL struct IEnumGuideDataPropertiesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumGuideDataProperties_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IEnumGuideDataProperties_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IEnumGuideDataProperties_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IEnumGuideDataProperties_Next(This,celt,ppprop,pcelt)	\
    (This)->lpVtbl -> Next(This,celt,ppprop,pcelt)

#define IEnumGuideDataProperties_Skip(This,celt)	\
    (This)->lpVtbl -> Skip(This,celt)

#define IEnumGuideDataProperties_Reset(This)	\
    (This)->lpVtbl -> Reset(This)

#define IEnumGuideDataProperties_Clone(This,ppenum)	\
    (This)->lpVtbl -> Clone(This,ppenum)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IEnumGuideDataProperties_Next_Proxy( 
    IEnumGuideDataProperties * This,
    /* [in] */ unsigned long celt,
    /* [out] */ IGuideDataProperty **ppprop,
    /* [out] */ unsigned long *pcelt);


void __RPC_STUB IEnumGuideDataProperties_Next_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumGuideDataProperties_Skip_Proxy( 
    IEnumGuideDataProperties * This,
    /* [in] */ unsigned long celt);


void __RPC_STUB IEnumGuideDataProperties_Skip_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumGuideDataProperties_Reset_Proxy( 
    IEnumGuideDataProperties * This);


void __RPC_STUB IEnumGuideDataProperties_Reset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumGuideDataProperties_Clone_Proxy( 
    IEnumGuideDataProperties * This,
    /* [out] */ IEnumGuideDataProperties **ppenum);


void __RPC_STUB IEnumGuideDataProperties_Clone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IEnumGuideDataProperties_INTERFACE_DEFINED__ */


#ifndef __IEnumTuneRequests_INTERFACE_DEFINED__
#define __IEnumTuneRequests_INTERFACE_DEFINED__

/* interface IEnumTuneRequests */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IEnumTuneRequests;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1993299C-CED6-4788-87A3-420067DCE0C7")
    IEnumTuneRequests : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Next( 
            /* [in] */ unsigned long celt,
            /* [out] */ ITuneRequest **ppprop,
            /* [out] */ unsigned long *pcelt) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Skip( 
            /* [in] */ unsigned long celt) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clone( 
            /* [out] */ IEnumTuneRequests **ppenum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumTuneRequestsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IEnumTuneRequests * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IEnumTuneRequests * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IEnumTuneRequests * This);
        
        HRESULT ( STDMETHODCALLTYPE *Next )( 
            IEnumTuneRequests * This,
            /* [in] */ unsigned long celt,
            /* [out] */ ITuneRequest **ppprop,
            /* [out] */ unsigned long *pcelt);
        
        HRESULT ( STDMETHODCALLTYPE *Skip )( 
            IEnumTuneRequests * This,
            /* [in] */ unsigned long celt);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            IEnumTuneRequests * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clone )( 
            IEnumTuneRequests * This,
            /* [out] */ IEnumTuneRequests **ppenum);
        
        END_INTERFACE
    } IEnumTuneRequestsVtbl;

    interface IEnumTuneRequests
    {
        CONST_VTBL struct IEnumTuneRequestsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumTuneRequests_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IEnumTuneRequests_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IEnumTuneRequests_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IEnumTuneRequests_Next(This,celt,ppprop,pcelt)	\
    (This)->lpVtbl -> Next(This,celt,ppprop,pcelt)

#define IEnumTuneRequests_Skip(This,celt)	\
    (This)->lpVtbl -> Skip(This,celt)

#define IEnumTuneRequests_Reset(This)	\
    (This)->lpVtbl -> Reset(This)

#define IEnumTuneRequests_Clone(This,ppenum)	\
    (This)->lpVtbl -> Clone(This,ppenum)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IEnumTuneRequests_Next_Proxy( 
    IEnumTuneRequests * This,
    /* [in] */ unsigned long celt,
    /* [out] */ ITuneRequest **ppprop,
    /* [out] */ unsigned long *pcelt);


void __RPC_STUB IEnumTuneRequests_Next_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumTuneRequests_Skip_Proxy( 
    IEnumTuneRequests * This,
    /* [in] */ unsigned long celt);


void __RPC_STUB IEnumTuneRequests_Skip_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumTuneRequests_Reset_Proxy( 
    IEnumTuneRequests * This);


void __RPC_STUB IEnumTuneRequests_Reset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumTuneRequests_Clone_Proxy( 
    IEnumTuneRequests * This,
    /* [out] */ IEnumTuneRequests **ppenum);


void __RPC_STUB IEnumTuneRequests_Clone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IEnumTuneRequests_INTERFACE_DEFINED__ */


#ifndef __IGuideData_INTERFACE_DEFINED__
#define __IGuideData_INTERFACE_DEFINED__

/* interface IGuideData */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IGuideData;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("61571138-5B01-43cd-AEAF-60B784A0BF93")
    IGuideData : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetServices( 
            /* [retval][out] */ IEnumTuneRequests **ppEnumTuneRequests) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetServiceProperties( 
            /* [in] */ ITuneRequest *pTuneRequest,
            /* [retval][out] */ IEnumGuideDataProperties **ppEnumProperties) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetGuideProgramIDs( 
            /* [retval][out] */ IEnumVARIANT **pEnumPrograms) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetProgramProperties( 
            /* [in] */ VARIANT varProgramDescriptionID,
            /* [retval][out] */ IEnumGuideDataProperties **ppEnumProperties) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetScheduleEntryIDs( 
            /* [retval][out] */ IEnumVARIANT **pEnumScheduleEntries) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetScheduleEntryProperties( 
            /* [in] */ VARIANT varScheduleEntryDescriptionID,
            /* [retval][out] */ IEnumGuideDataProperties **ppEnumProperties) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IGuideDataVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IGuideData * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IGuideData * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IGuideData * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetServices )( 
            IGuideData * This,
            /* [retval][out] */ IEnumTuneRequests **ppEnumTuneRequests);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetServiceProperties )( 
            IGuideData * This,
            /* [in] */ ITuneRequest *pTuneRequest,
            /* [retval][out] */ IEnumGuideDataProperties **ppEnumProperties);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetGuideProgramIDs )( 
            IGuideData * This,
            /* [retval][out] */ IEnumVARIANT **pEnumPrograms);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetProgramProperties )( 
            IGuideData * This,
            /* [in] */ VARIANT varProgramDescriptionID,
            /* [retval][out] */ IEnumGuideDataProperties **ppEnumProperties);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetScheduleEntryIDs )( 
            IGuideData * This,
            /* [retval][out] */ IEnumVARIANT **pEnumScheduleEntries);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetScheduleEntryProperties )( 
            IGuideData * This,
            /* [in] */ VARIANT varScheduleEntryDescriptionID,
            /* [retval][out] */ IEnumGuideDataProperties **ppEnumProperties);
        
        END_INTERFACE
    } IGuideDataVtbl;

    interface IGuideData
    {
        CONST_VTBL struct IGuideDataVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IGuideData_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IGuideData_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IGuideData_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IGuideData_GetServices(This,ppEnumTuneRequests)	\
    (This)->lpVtbl -> GetServices(This,ppEnumTuneRequests)

#define IGuideData_GetServiceProperties(This,pTuneRequest,ppEnumProperties)	\
    (This)->lpVtbl -> GetServiceProperties(This,pTuneRequest,ppEnumProperties)

#define IGuideData_GetGuideProgramIDs(This,pEnumPrograms)	\
    (This)->lpVtbl -> GetGuideProgramIDs(This,pEnumPrograms)

#define IGuideData_GetProgramProperties(This,varProgramDescriptionID,ppEnumProperties)	\
    (This)->lpVtbl -> GetProgramProperties(This,varProgramDescriptionID,ppEnumProperties)

#define IGuideData_GetScheduleEntryIDs(This,pEnumScheduleEntries)	\
    (This)->lpVtbl -> GetScheduleEntryIDs(This,pEnumScheduleEntries)

#define IGuideData_GetScheduleEntryProperties(This,varScheduleEntryDescriptionID,ppEnumProperties)	\
    (This)->lpVtbl -> GetScheduleEntryProperties(This,varScheduleEntryDescriptionID,ppEnumProperties)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring] */ HRESULT STDMETHODCALLTYPE IGuideData_GetServices_Proxy( 
    IGuideData * This,
    /* [retval][out] */ IEnumTuneRequests **ppEnumTuneRequests);


void __RPC_STUB IGuideData_GetServices_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IGuideData_GetServiceProperties_Proxy( 
    IGuideData * This,
    /* [in] */ ITuneRequest *pTuneRequest,
    /* [retval][out] */ IEnumGuideDataProperties **ppEnumProperties);


void __RPC_STUB IGuideData_GetServiceProperties_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IGuideData_GetGuideProgramIDs_Proxy( 
    IGuideData * This,
    /* [retval][out] */ IEnumVARIANT **pEnumPrograms);


void __RPC_STUB IGuideData_GetGuideProgramIDs_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IGuideData_GetProgramProperties_Proxy( 
    IGuideData * This,
    /* [in] */ VARIANT varProgramDescriptionID,
    /* [retval][out] */ IEnumGuideDataProperties **ppEnumProperties);


void __RPC_STUB IGuideData_GetProgramProperties_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IGuideData_GetScheduleEntryIDs_Proxy( 
    IGuideData * This,
    /* [retval][out] */ IEnumVARIANT **pEnumScheduleEntries);


void __RPC_STUB IGuideData_GetScheduleEntryIDs_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IGuideData_GetScheduleEntryProperties_Proxy( 
    IGuideData * This,
    /* [in] */ VARIANT varScheduleEntryDescriptionID,
    /* [retval][out] */ IEnumGuideDataProperties **ppEnumProperties);


void __RPC_STUB IGuideData_GetScheduleEntryProperties_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IGuideData_INTERFACE_DEFINED__ */


#ifndef __IGuideDataLoader_INTERFACE_DEFINED__
#define __IGuideDataLoader_INTERFACE_DEFINED__

/* interface IGuideDataLoader */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IGuideDataLoader;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4764ff7c-fa95-4525-af4d-d32236db9e38")
    IGuideDataLoader : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Init( 
            /* [in] */ IGuideData *pGuideStore) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Terminate( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IGuideDataLoaderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IGuideDataLoader * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IGuideDataLoader * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IGuideDataLoader * This);
        
        HRESULT ( STDMETHODCALLTYPE *Init )( 
            IGuideDataLoader * This,
            /* [in] */ IGuideData *pGuideStore);
        
        HRESULT ( STDMETHODCALLTYPE *Terminate )( 
            IGuideDataLoader * This);
        
        END_INTERFACE
    } IGuideDataLoaderVtbl;

    interface IGuideDataLoader
    {
        CONST_VTBL struct IGuideDataLoaderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IGuideDataLoader_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IGuideDataLoader_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IGuideDataLoader_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IGuideDataLoader_Init(This,pGuideStore)	\
    (This)->lpVtbl -> Init(This,pGuideStore)

#define IGuideDataLoader_Terminate(This)	\
    (This)->lpVtbl -> Terminate(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IGuideDataLoader_Init_Proxy( 
    IGuideDataLoader * This,
    /* [in] */ IGuideData *pGuideStore);


void __RPC_STUB IGuideDataLoader_Init_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IGuideDataLoader_Terminate_Proxy( 
    IGuideDataLoader * This);


void __RPC_STUB IGuideDataLoader_Terminate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IGuideDataLoader_INTERFACE_DEFINED__ */



#ifndef __PSISLOADLib_LIBRARY_DEFINED__
#define __PSISLOADLib_LIBRARY_DEFINED__

/* library PSISLOADLib */
/* [helpstring][version][uuid] */ 


EXTERN_C const IID LIBID_PSISLOADLib;

EXTERN_C const CLSID CLSID_TIFLoad;

#ifdef __cplusplus

class DECLSPEC_UUID("14EB8748-1753-4393-95AE-4F7E7A87AAD6")
TIFLoad;
#endif
#endif /* __PSISLOADLib_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     unsigned long *, unsigned long            , BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal(  unsigned long *, unsigned char *, BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal(unsigned long *, unsigned char *, BSTR * ); 
void                      __RPC_USER  BSTR_UserFree(     unsigned long *, BSTR * ); 

unsigned long             __RPC_USER  VARIANT_UserSize(     unsigned long *, unsigned long            , VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserMarshal(  unsigned long *, unsigned char *, VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserUnmarshal(unsigned long *, unsigned char *, VARIANT * ); 
void                      __RPC_USER  VARIANT_UserFree(     unsigned long *, VARIANT * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\vc7addon\devtools\common\win32sdk\include\bdatypes.h ===
//------------------------------------------------------------------------------
// File: BDATypes.h
//
// Desc: Typedefs and enums needed by both the WDM drivers and the user mode
//       COM interfaces.
//
// Copyright (c) 1999 - 2000, Microsoft Corporation.  All rights reserved.
//------------------------------------------------------------------------------


#ifndef _BDATYPES_

#define _BDATYPES_      1

/* Utility Macros */

#define MIN_DIMENSION   1
#define NATURAL     4
#define CACHE_LINE  128
#define PAGE        4096
#define ALIGN( pointer, size) (((ULONG)(pointer) + (ULONG)(size) - 1) & ~((ULONG)(size) - 1))
#define BDA_STRING_CONST(x)   {sizeof(L##x)-2, sizeof(L##x), L##x}


#ifdef __midl
#define V1_ENUM [v1_enum]
#else
#define V1_ENUM
#endif

//===========================================================================
//
//  BDA Topology Structures
//
//===========================================================================

typedef struct _BDA_TEMPLATE_CONNECTION
{
    ULONG   FromNodeType;
    ULONG   FromNodePinType;
    ULONG   ToNodeType;
    ULONG   ToNodePinType;
}BDA_TEMPLATE_CONNECTION, *PBDA_TEMPLATE_CONNECTION;


typedef struct _BDA_TEMPLATE_PIN_JOINT
{
    ULONG   uliTemplateConnection;
    ULONG   ulcInstancesMax;
}BDA_TEMPLATE_PIN_JOINT, *PBDA_TEMPLATE_PIN_JOINT;



//===========================================================================
//
//  BDA Events
//
//===========================================================================

//  In-band Event IDs
//
typedef enum {
    BDA_EVENT_SIGNAL_LOSS = 0,
    BDA_EVENT_SIGNAL_LOCK,
    BDA_EVENT_DATA_START,
    BDA_EVENT_DATA_STOP,
    BDA_EVENT_CHANNEL_ACQUIRED,
    BDA_EVENT_CHANNEL_LOST,
    BDA_EVENT_CHANNEL_SOURCE_CHANGED,
    BDA_EVENT_CHANNEL_ACTIVATED,
    BDA_EVENT_CHANNEL_DEACTIVATED,
    BDA_EVENT_SUBCHANNEL_ACQUIRED,
    BDA_EVENT_SUBCHANNEL_LOST,
    BDA_EVENT_SUBCHANNEL_SOURCE_CHANGED,
    BDA_EVENT_SUBCHANNEL_ACTIVATED,
    BDA_EVENT_SUBCHANNEL_DEACTIVATED,
    BDA_EVENT_ACCESS_GRANTED,
    BDA_EVENT_ACCESS_DENIED,
    BDA_EVENT_OFFER_EXTENDED,
    BDA_EVENT_PURCHASE_COMPLETED,
    BDA_EVENT_SMART_CARD_INSERTED,
    BDA_EVENT_SMART_CARD_REMOVED
} BDA_EVENT_ID, *PBDA_EVENT_ID;



//===========================================================================
//
//  KSSTREAM_HEADER extensions for BDA
//
//===========================================================================

typedef struct tagKS_BDA_FRAME_INFO {
    ULONG                   ExtendedHeaderSize; // Size of this extended header
    DWORD                   dwFrameFlags;  //
    ULONG                   ulEvent; //
    ULONG                   ulChannelNumber; //
    ULONG                   ulSubchannelNumber; //
    ULONG                   ulReason; //
} KS_BDA_FRAME_INFO, *PKS_BDA_FRAME_INFO;


//------------------------------------------------------------
//
//  BDA Network Ethernet Filter Property Set
//
// {71985F43-1CA1-11d3-9CC8-00C04F7971E0}
//
typedef struct _BDA_ETHERNET_ADDRESS {
    BYTE    rgbAddress[6];
} BDA_ETHERNET_ADDRESS, *PBDA_ETHERNET_ADDRESS;

typedef struct _BDA_ETHERNET_ADDRESS_LIST {
    ULONG               ulcAddresses;
    BDA_ETHERNET_ADDRESS    rgAddressl[MIN_DIMENSION];
} BDA_ETHERNET_ADDRESS_LIST, * PBDA_ETHERNET_ADDRESS_LIST;

typedef enum {
    BDA_PROMISCUOUS_MULTICAST = 0,
    BDA_FILTERED_MULTICAST,
    BDA_NO_MULTICAST
} BDA_MULTICAST_MODE, *PBDA_MULTICAST_MODE;


//------------------------------------------------------------
//
//  BDA Network IPv4 Filter Property Set
//
// {71985F44-1CA1-11d3-9CC8-00C04F7971E0}
//
typedef struct _BDA_IPv4_ADDRESS {
    BYTE    rgbAddress[4];
} BDA_IPv4_ADDRESS, *PBDA_IPv4_ADDRESS;

typedef struct _BDA_IPv4_ADDRESS_LIST {
    ULONG               ulcAddresses;
    BDA_IPv4_ADDRESS    rgAddressl[MIN_DIMENSION];
} BDA_IPv4_ADDRESS_LIST, * PBDA_IPv4_ADDRESS_LIST;


//------------------------------------------------------------
//
//  BDA Network IPv4 Filter Property Set
//
// {E1785A74-2A23-4fb3-9245-A8F88017EF33}
//
typedef struct _BDA_IPv6_ADDRESS {
    BYTE    rgbAddress[6];
} BDA_IPv6_ADDRESS, *PBDA_IPv6_ADDRESS;

typedef struct _BDA_IPv6_ADDRESS_LIST {
    ULONG               ulcAddresses;
    BDA_IPv6_ADDRESS    rgAddressl[MIN_DIMENSION];
} BDA_IPv6_ADDRESS_LIST, * PBDA_IPv6_ADDRESS_LIST;


//------------------------------------------------------------
//
//
//  BDA Signal Property Set
//
//  {D2F1644B-B409-11d2-BC69-00A0C9EE9E16}
//
typedef enum {
    BDA_SIGNAL_UNAVAILABLE = 0,
    BDA_SIGNAL_INACTIVE,
    BDA_SIGNAL_ACTIVE
} BDA_SIGNAL_STATE, * PBDA_SIGNAL_STATE;


//------------------------------------------------------------
//
//
//  BDA Change Sync Method Set
//
// {FD0A5AF3-B41D-11d2-9C95-00C04F7971E0}
//
typedef enum
{
    BDA_CHANGES_COMPLETE = 0,
    BDA_CHANGES_PENDING

} BDA_CHANGE_STATE, * PBDA_CHANGE_STATE;


//------------------------------------------------------------
//
//
//  BDA Device Configuration Method Set
//
// {71985F45-1CA1-11d3-9CC8-00C04F7971E0}
//


//------------------------------------------------------------
//
//
//  BDA Topology Property Set
//
// {A14EE835-0A23-11d3-9CC7-00C04F7971E0}
//

typedef struct _BDANODE_DESCRIPTOR
{
    ULONG               ulBdaNodeType;  // The node type as it is used
                                        // in the BDA template topology

    GUID                guidFunction;   // GUID from BdaMedia.h describing
                                        // the node's function (e.g.
                                        // KSNODE_BDA_RF_TUNER)

    GUID                guidName;       // GUID that can be use to look up
                                        // a displayable name for the node.
} BDANODE_DESCRIPTOR, *PBDANODE_DESCRIPTOR;


//------------------------------------------------------------
//
//
//  BDA Void Transform Property Set
//
// {71985F46-1CA1-11d3-9CC8-00C04F7971E0}
//


//------------------------------------------------------------
//
//
//  BDA Null Transform Property Set
//
// {DDF15B0D-BD25-11d2-9CA0-00C04F7971E0}
//


//------------------------------------------------------------
//
//
//  BDA Frequency Filter Property Set
//
// {71985F47-1CA1-11d3-9CC8-00C04F7971E0}
//


//------------------------------------------------------------
//
//
//  BDA Autodemodulate Property Set
//
// {DDF15B12-BD25-11d2-9CA0-00C04F7971E0}
//


//------------------------------------------------------------
//
//
//  BDA PmtProcessor Property Set
//
// {516B99C5-971C-4aaf-B3F3-D9FDA8A15E16}
//

typedef struct _BDA_PMT
{
    ULONG               ulTableID;
    ULONG               ulcbSectionLength;
    ULONG               argbSectionData[MIN_DIMENSION];
} BDA_PMT, *PBDA_PMT;

//------------------------------------------------------------
//
//
//  BDA Descriptor Property Set
//
// {DE6A1C9E-87DF-48aa-95AA-289B7AA4F49F}
//

typedef struct _BDA_CAT_DESCRIPTOR
{
    ULONG               ulTag;
    ULONG               ulcbLength;
    ULONG               argbData[MIN_DIMENSION];
} BDA_CAT_DESCRIPTOR, *PBDA_CAT_DESCRIPTOR;

typedef struct _BDA_ES_DESCRIPTOR
{
    ULONG               ulProgramNum;
    ULONG               ulContentPID;
    ULONG               ulTag;
    ULONG               ulcbLength;
    ULONG               argbData[MIN_DIMENSION];
} BDA_ES_DESCRIPTOR, *PBDA_ES_DESCRIPTOR;

typedef struct _BDA_PROGRAM_DESCRIPTOR
{
    ULONG               ulProgramNum;
    ULONG               ulTag;
    ULONG               ulcbLength;
    ULONG               argbData[MIN_DIMENSION];
} BDA_PROGRAM_DESCRIPTOR, *PBDA_PROGRAM_DESCRIPTOR;


//------------------------------------------------------------
//
//
//  BDA EsMap Property Set
//
// {FA14A8B3-6068-48ef-96DD-53010B985A7D}
//

typedef enum
{
    ES_MAP_STATE_GOOD_FLOW = 0,
    ES_MAP_STATE_NO_CONTENT,
    ES_MAP_STATE_NO_ECM,
    ES_MAP_STATE_BAD_MAP
} BDA_ES_MAP_STATE, *PBDA_ES_MAP_STATE;

typedef struct _BDA_ES_MAP
{
    ULONG               ulContentPID;
    ULONG               ulProgramNum;
    ULONG               ulStreamType;
    BDA_ES_MAP_STATE    mapState;
} BDA_ES_MAP, *PBDA_ES_MAP;


//------------------------------------------------------------
//
//
//  BDA PID Filter Property Set
//
// {D0A67D65-08DF-4fec-8533-E5B550410B85}
//

//---------------------------------------------------------------------
// From IEnumPIDMap interface
//---------------------------------------------------------------------

typedef enum {
    MEDIA_TRANSPORT_PACKET,         //  complete TS packet e.g. pass-through mode
    MEDIA_ELEMENTARY_STREAM,        //  PES payloads; audio/video only
    MEDIA_MPEG2_PSI,                //  PAT, PMT, CAT, Private
    MEDIA_TRANSPORT_PAYLOAD         //  gathered TS packet payloads (PES packets, etc...)
} MEDIA_SAMPLE_CONTENT ;

typedef struct {
    ULONG                   ulPID ;
    MEDIA_SAMPLE_CONTENT    MediaSampleContent ;
} PID_MAP ;

typedef struct _BDA_PID_MAP
{
    MEDIA_SAMPLE_CONTENT    MediaSampleContent;
    ULONG                   ulcPIDs;
    ULONG                   aulPIDs[MIN_DIMENSION];
} BDA_PID_MAP, *PBDA_PID_MAP;

typedef struct _BDA_PID_UNMAP
{
    ULONG               ulcPIDs;
    ULONG               aulPIDs[MIN_DIMENSION];
} BDA_PID_UNMAP, *PBDA_PID_UNMAP;


//------------------------------------------------------------
//
//
//  BDA CA Property Set
//
// {B0693766-5278-4ec6-B9E1-3CE40560EF5A}
//
typedef struct _BDA_CA_MODULE_UI
{
    ULONG   ulFormat;
    ULONG   ulbcDesc;
    ULONG   ulDesc[MIN_DIMENSION];
} BDA_CA_MODULE_UI, *PBDA_CA_MODULE_UI;


//------------------------------------------------------------
//
//
//  BDA CA Event Set
//
// {488C4CCC-B768-4129-8EB1-B00A071F9068}
//



//=============================================================
//
//
//  BDA Tuning Model enumerations
//
//
//=============================================================

// system type for particular DVB Tuning Space instance
typedef enum DVBSystemType {
    DVB_Cable,
    DVB_Terrestrial,
    DVB_Satellite,
} DVBSystemType;

//------------------------------------------------------------
//
//  BDA Channel Tune Request

V1_ENUM enum {
    BDA_UNDEFINED_CHANNEL = -1,
};


//------------------------------------------------------------
//
//  BDA Component(substream)
//

typedef V1_ENUM enum ComponentCategory
{
    CategoryNotSet = -1,
    CategoryOther = 0,
    CategoryVideo,
    CategoryAudio,
    CategoryText,
    CategoryData,
} ComponentCategory;

// Component Status
typedef enum ComponentStatus
{
    StatusActive,
    StatusInactive,
    StatusUnavailable,
} ComponentStatus;


//------------------------------------------------------------
//
//  BDA MPEG2 Component Type
//
// from the MPEG2 specification
typedef V1_ENUM enum MPEG2StreamType {
    BDA_UNITIALIZED_MPEG2STREAMTYPE = -1,
    Reserved1 = 0x0,
    ISO_IEC_11172_2_VIDEO   = Reserved1 + 1,
    ISO_IEC_13818_2_VIDEO   = ISO_IEC_11172_2_VIDEO + 1,
    ISO_IEC_11172_3_AUDIO   = ISO_IEC_13818_2_VIDEO + 1,
    ISO_IEC_13818_3_AUDIO   = ISO_IEC_11172_3_AUDIO + 1,
    ISO_IEC_13818_1_PRIVATE_SECTION = ISO_IEC_13818_3_AUDIO + 1,
    ISO_IEC_13818_1_PES     = ISO_IEC_13818_1_PRIVATE_SECTION + 1,
    ISO_IEC_13522_MHEG      = ISO_IEC_13818_1_PES + 1,
    ANNEX_A_DSM_CC          = ISO_IEC_13522_MHEG + 1,
    ITU_T_REC_H_222_1       = ANNEX_A_DSM_CC + 1,
    ISO_IEC_13818_6_TYPE_A  = ITU_T_REC_H_222_1 + 1,
    ISO_IEC_13818_6_TYPE_B  = ISO_IEC_13818_6_TYPE_A + 1,
    ISO_IEC_13818_6_TYPE_C  = ISO_IEC_13818_6_TYPE_B + 1,
    ISO_IEC_13818_6_TYPE_D  = ISO_IEC_13818_6_TYPE_C + 1,
    ISO_IEC_13818_1_AUXILIARY = ISO_IEC_13818_6_TYPE_D + 1,
    ISO_IEC_13818_1_RESERVED = ISO_IEC_13818_1_AUXILIARY + 1,
    USER_PRIVATE            = ISO_IEC_13818_1_RESERVED + 1
} MPEG2StreamType;


//------------------------------------------------------------
//
//  BDA ATSC Component Type
//
//
// ATSC made AC3 Audio a descriptor instead of
// defining a user private stream type.
typedef enum ATSCComponentTypeFlags {
    // bit flags for various component type properties
    ATSCCT_AC3 = 0x00000001,
} ATSCComponentTypeFlags;


//------------------------------------------------------------
//
//  BDA Locators
//


typedef V1_ENUM enum BinaryConvolutionCodeRate {
    BDA_BCC_RATE_NOT_SET = -1,
    BDA_BCC_RATE_NOT_DEFINED = 0,
    BDA_BCC_RATE_1_2 = 1,   // 1/2
    BDA_BCC_RATE_2_3,   // 2/3
    BDA_BCC_RATE_3_4,   // 3/4
    BDA_BCC_RATE_3_5,
    BDA_BCC_RATE_4_5,
    BDA_BCC_RATE_5_6,   // 5/6
    BDA_BCC_RATE_5_11,
    BDA_BCC_RATE_7_8,   // 7/8
    BDA_BCC_RATE_MAX,
} BinaryConvolutionCodeRate;

typedef V1_ENUM enum FECMethod {
    BDA_FEC_METHOD_NOT_SET = -1,
    BDA_FEC_METHOD_NOT_DEFINED = 0,
    BDA_FEC_VITERBI = 1,          // FEC is a Viterbi Binary Convolution.
    BDA_FEC_RS_204_188,       // The FEC is Reed-Solomon 204/188 (outer FEC)
    BDA_FEC_MAX,
} FECMethod;

typedef V1_ENUM enum ModulationType {
    BDA_MOD_NOT_SET = -1,
    BDA_MOD_NOT_DEFINED = 0,
    BDA_MOD_16QAM = 1,
    BDA_MOD_32QAM,
    BDA_MOD_64QAM,
    BDA_MOD_80QAM,
    BDA_MOD_96QAM,
    BDA_MOD_112QAM,
    BDA_MOD_128QAM,
    BDA_MOD_160QAM,
    BDA_MOD_192QAM,
    BDA_MOD_224QAM,
    BDA_MOD_256QAM,
    BDA_MOD_320QAM,
    BDA_MOD_384QAM,
    BDA_MOD_448QAM,
    BDA_MOD_512QAM,
    BDA_MOD_640QAM,
    BDA_MOD_768QAM,
    BDA_MOD_896QAM,
    BDA_MOD_1024QAM,
    BDA_MOD_QPSK,
    BDA_MOD_BPSK,
    BDA_MOD_OQPSK,
    BDA_MOD_8VSB,
    BDA_MOD_16VSB,
    BDA_MOD_ANALOG_AMPLITUDE,  // std am
    BDA_MOD_ANALOG_FREQUENCY,  // std fm
    BDA_MOD_MAX,
} ModulationType;

typedef V1_ENUM enum SpectralInversion {
    BDA_SPECTRAL_INVERSION_NOT_SET = -1,
    BDA_SPECTRAL_INVERSION_NOT_DEFINED = 0,
    BDA_SPECTRAL_INVERSION_AUTOMATIC = 1,
    BDA_SPECTRAL_INVERSION_NORMAL,
    BDA_SPECTRAL_INVERSION_INVERTED,
    BDA_SPECTRAL_INVERSION_MAX
} SpectralInversion;

typedef V1_ENUM enum Polarisation {
    BDA_POLARISATION_NOT_SET = -1,
    BDA_POLARISATION_NOT_DEFINED = 0,
    BDA_POLARISATION_LINEAR_H = 1, // Linear horizontal polarisation
    BDA_POLARISATION_LINEAR_V, // Linear vertical polarisation
    BDA_POLARISATION_CIRCULAR_L, // Circular left polarisation
    BDA_POLARISATION_CIRCULAR_R, // Circular right polarisation
    BDA_POLARISATION_MAX,
} Polarisation;

typedef V1_ENUM enum GuardInterval {
    BDA_GUARD_NOT_SET = -1,
    BDA_GUARD_NOT_DEFINED = 0,
    BDA_GUARD_1_32 = 1, // Guard interval is 1/32
    BDA_GUARD_1_16, // Guard interval is 1/16
    BDA_GUARD_1_8, // Guard interval is 1/8
    BDA_GUARD_1_4, // Guard interval is 1/4
    BDA_GUARD_MAX,
} GuardInterval;

typedef V1_ENUM enum HierarchyAlpha {
    BDA_HALPHA_NOT_SET = -1,
    BDA_HALPHA_NOT_DEFINED = 0,
    BDA_HALPHA_1 = 1, // Hierarchy alpha is 1.
    BDA_HALPHA_2, // Hierarchy alpha is 2.
    BDA_HALPHA_4, // Hierarchy alpha is 4.
    BDA_HALPHA_MAX,
} HierarchyAlpha;

typedef V1_ENUM enum TransmissionMode {
    BDA_XMIT_MODE_NOT_SET = -1,
    BDA_XMIT_MODE_NOT_DEFINED = 0,
    BDA_XMIT_MODE_2K = 1, // Transmission uses 1705 carriers (use a 2K FFT)
    BDA_XMIT_MODE_8K, // Transmission uses 6817 carriers (use an 8K FFT)
    BDA_XMIT_MODE_MAX,
} TransmissionMode;

#endif // not defined _BDATYPES_

// end of file -- bdatypes.h
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\vc7addon\devtools\common\win32sdk\include\bdamedia.h ===
//------------------------------------------------------------------------------
// File: BDAMedia.h
//
// Desc: Broadcast Driver Architecture Multimedia Definitions.
//
// Copyright (c) 1996 - 2000, Microsoft Corporation.  All rights reserved.
//------------------------------------------------------------------------------


#if !defined(_KSMEDIA_)
#error KSMEDIA.H must be included before BDAMEDIA.H
#endif // !defined(_KSMEDIA_)

#if !defined(_BDATYPES_)
#error BDATYPES.H must be included before BDAMEDIA.H
#endif // !defined(_BDATYPES_)

#if !defined(_BDAMEDIA_)
#define _BDAMEDIA_

#if defined(__cplusplus)
extern "C" {
#endif // defined(__cplusplus)



//===========================================================================
//
//  KSProperty Set Structure Definitions for BDA
//
//===========================================================================

typedef struct _KSP_BDA_NODE_PIN {
    KSPROPERTY      Property;
    ULONG           ulNodeType;
    ULONG           ulInputPinId;
    ULONG           ulOutputPinId;
} KSP_BDA_NODE_PIN, *PKSP_BDA_NODE_PIN;


typedef struct {
    KSP_NODE        Property;
    ULONG           EsPid;
} KSP_NODE_ESPID, *PKSP_NODE_ESPID;



//===========================================================================
//
//  BDA Data Range definitions.  Includes specifier definitions.
//
//===========================================================================

//  Antenna Signal Formats
//

typedef struct tagKS_DATARANGE_BDA_ANTENNA {
   KSDATARANGE                  DataRange;

   //   Antenna specifier can go here if required
   //
} KS_DATARANGE_BDA_ANTENNA, *PKS_DATARANGE_BDA_ANTENNA;



//  Transport Formats
//

typedef struct tagBDA_TRANSPORT_INFO {
    ULONG           ulcbPhyiscalPacket; // Size, in bytes, of a physical packet
                                        // (e.g. Satellite link payload size.
    ULONG           ulcbPhyiscalFrame;  // Size, in bytes, of each physical frame
                                        // 0 indicates no HW requirement
    ULONG           ulcbPhyiscalFrameAlignment; // Capture buffer alignment in bytes
                                                // 0 and 1 indicate no alignment requirements
    REFERENCE_TIME  AvgTimePerFrame; // Normal ActiveMovie units (100 nS)

} BDA_TRANSPORT_INFO, *PBDA_TRANSPORT_INFO;

typedef struct tagKS_DATARANGE_BDA_TRANSPORT {
   KSDATARANGE                  DataRange;
   BDA_TRANSPORT_INFO           BdaTransportInfo;

   //   Transport specifier can go here if required
   //
} KS_DATARANGE_BDA_TRANSPORT, *PKS_DATARANGE_BDA_TRANSPORT;



//===========================================================================
//
//  BDA Stream Format GUIDs
//
//===========================================================================

#define STATIC_KSDATAFORMAT_TYPE_BDA_ANTENNA\
    0x71985f41, 0x1ca1, 0x11d3, 0x9c, 0xc8, 0x0, 0xc0, 0x4f, 0x79, 0x71, 0xe0
DEFINE_GUIDSTRUCT("71985F41-1CA1-11d3-9CC8-00C04F7971E0", KSDATAFORMAT_TYPE_BDA_ANTENNA);
#define KSDATAFORMAT_TYPE_BDA_ANTENNA DEFINE_GUIDNAMED(KSDATAFORMAT_TYPE_BDA_ANTENNA)


#define STATIC_KSDATAFORMAT_SUBTYPE_BDA_MPEG2_TRANSPORT\
    0xf4aeb342, 0x0329, 0x4fdd, 0xa8, 0xfd, 0x4a, 0xff, 0x49, 0x