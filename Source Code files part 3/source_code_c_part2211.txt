incipal header file for Intel(R) AES and PCLMULQDQ intrinsics.
 */

#pragma once
#ifndef __midl
#ifndef _INCLUDED_WMM
#define _INCLUDED_WMM

#if defined (_M_CEE_PURE)
        #error ERROR: EMM intrinsics not supported in the pure mode!
#else  /* defined (_M_CEE_PURE) */

#include <nmmintrin.h>


#if __cplusplus
extern "C" {
#endif  /* __cplusplus */

/*
 * Performs 1 round of AES decryption of the first m128i using
 * the second m128i as a round key.
 */
extern __m128i _mm_aesdec_si128(__m128i v, __m128i rkey);

/*
 * Performs the last round of AES decryption of the first m128i
 * using the second m128i as a round key.
 */
extern __m128i _mm_aesdeclast_si128(__m128i v, __m128i rkey);

/*
 * Performs 1 round of AES encryption of the first m128i using
 * the second m128i as a round key.
 */
extern __m128i _mm_aesenc_si128(__m128i v, __m128i rkey);

/*
 * Performs the last round of AES encryption of the first m128i
 * using the second m128i as a round key.
 */
extern __m128i _mm_aesenclast_si128(__m128i v, __m128i rkey);

/*
 * Performs the InverseMixColumn operation on the source m128i
 * and stores the result into m128i destination.
 */
extern __m128i _mm_aesimc_si128(__m128i v);

/*
 * Generates a m128i round key for the input m128i
 * AES cipher key and byte round constant.
 * The second parameter must be a compile time constant.
 */
extern __m128i _mm_aeskeygenassist_si128(__m128i ckey, const int rcon);

/*
 * Performs carry-less integer multiplication of 64-bit halves
 * of 128-bit input operands.
 * The third parameter inducates which 64-bit haves of the input parameters
 * v1 and v2 should be used. It must be a compile time constant.
 */
extern __m128i _mm_clmulepi64_si128(__m128i v1, __m128i v2,
                                            const int imm8);




#if defined __cplusplus
}; /* End "C" */
#endif  /* defined __cplusplus */

#endif  /* defined (_M_CEE_PURE) */

#endif  /* _INCLUDED_WMM */
#endif  /* __midl */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\winsig.c ===
/***
*winsig.c - C signal support
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       Defines signal(), raise() and supporting functions.
*
*******************************************************************************/


#include <cruntime.h>
#include <errno.h>
#include <float.h>
#include <malloc.h>
#include <mtdll.h>
#include <oscalls.h>
#include <signal.h>
#include <stddef.h>
#include <stdlib.h>
#include <string.h>
#include <dbgint.h>
#include <internal.h>

/*
 * look up the first entry in the exception-action table corresponding to
 * the given signal
 */
static struct _XCPT_ACTION * __cdecl siglookup(int, struct _XCPT_ACTION *);

/*
 * variables holding action codes (and code pointers) for SIGINT, SIGBRK,
 * SIGABRT and SIGTERM.
 *
 * note that the disposition (i.e., action to be taken upon receipt) of
 * these signals is defined on a per-process basis (not per-thread)!!
 */

static _PHNDLR ctrlc_action       = SIG_DFL;    /* SIGINT   */
static _PHNDLR ctrlbreak_action   = SIG_DFL;    /* SIGBREAK */
static _PHNDLR abort_action       = SIG_DFL;    /* SIGABRT  */
static _PHNDLR term_action        = SIG_DFL;    /* SIGTERM  */

/*
 * flag indicated whether or not a handler has been installed to capture
 * ^C and ^Break events.
 */
static int ConsoleCtrlHandler_Installed = 0;

#define _SIGHUP_IGNORE 1
#define _SIGQUIT_IGNORE 3
#define _SIGPIPE_IGNORE 13
#define _SIGIOINT_IGNORE 16
#define _SIGSTOP_IGNORE 17

void __cdecl _initp_misc_winsig(void* enull)
{
    ctrlc_action       = (_PHNDLR) enull;    /* SIGINT   */
    ctrlbreak_action   = (_PHNDLR) enull;    /* SIGBREAK */
    abort_action       = (_PHNDLR) enull;    /* SIGABRT  */
    term_action        = (_PHNDLR) enull;    /* SIGTERM  */
}

/***
*static BOOL WINAPI ctrlevent_capture(DWORD CtrlType) - capture ^C and ^Break events
*
*Purpose:
*       Capture ^C and ^Break events from the console and dispose of them
*       according the values in ctrlc_action and ctrlbreak_action, resp.
*       This is the routine that evokes the user-defined action for SIGINT
*       (^C) or SIGBREAK (^Break) installed by a call to signal().
*
*Entry:
*       DWORD CtrlType  - indicates type of event, two values:
*                               CTRL_C_EVENT
*                               CTRL_BREAK_EVENT
*
*Exit:
*       Returns TRUE to indicate the event (signal) has been handled.
*       Otherwise, returns FALSE.
*
*Exceptions:
*
*******************************************************************************/

static BOOL WINAPI ctrlevent_capture (
        DWORD CtrlType
        )
{
        _PHNDLR ctrl_action;
        _PHNDLR *pctrl_action;
        int sigcode;

        _mlock(_SIGNAL_LOCK);
        __try {

        /*
         * Identify the type of event and fetch the corresponding action
         * description.
         */

        if ( CtrlType == CTRL_C_EVENT ) {
                pctrl_action = &ctrlc_action;
                ctrl_action = (_PHNDLR) _decode_pointer(*pctrl_action);
                sigcode = SIGINT;
        }
        else {
                pctrl_action = &ctrlbreak_action;
                ctrl_action = (_PHNDLR) _decode_pointer(*pctrl_action);
                sigcode = SIGBREAK;
        }

        if ( !(ctrl_action == SIG_DFL) && !(ctrl_action == SIG_IGN) )
                /*
                 * Reset the action to be SIG_DFL
                 */
                *pctrl_action = (_PHNDLR) _encoded_null();

        }
        __finally {
                _munlock(_SIGNAL_LOCK);
        }

        if ( ctrl_action == SIG_DFL )
                /*
                 * return FALSE, indicating the event has NOT been handled
                 */
                return FALSE;

        if ( ctrl_action != SIG_IGN ) {
                (*ctrl_action)(sigcode);
        }

        /*
         * Return TRUE, indicating the event has been handled (which may
         * mean it's being ignored)
         */
        return TRUE;
}



/***
*_PHNDLR signal(signum, sigact) - Define a signal handler
*
*Purpose:
*       The signal routine allows the user to define what action should
*       be taken when various signals occur. The Win32/Dosx32 implementation
*       supports seven signals, divided up into three general groups
*
*       1. Signals corresponding to OS exceptions. These are:
*                       SIGFPE
*                       SIGILL
*                       SIGSEGV
*          Signal actions for these signals are installed by altering the
*          XcptAction and SigAction fields for the appropriate entry in the
*          exception-action table (XcptActTab[]).
*
*       2. Signals corresponding to ^C and ^Break. These are:
*                       SIGINT
*                       SIGBREAK
*          Signal actions for these signals are installed by altering the
*          _ctrlc_action and _ctrlbreak_action variables.
*
*       3. Signals which are implemented only in the runtime. That is, they
*          occur only as the result of a call to raise().
*                       SIGABRT
*                       SIGTERM
*
*
*Entry:
*       int signum      signal type. recognized signal types are:
*
*                       SIGABRT         (ANSI)
*                       SIGBREAK
*                       SIGFPE          (ANSI)
*                       SIGILL          (ANSI)
*                       SIGINT          (ANSI)
*                       SIGSEGV         (ANSI)
*                       SIGTERM         (ANSI)
*                       SIGABRT_COMPAT
*
*       _PHNDLR sigact  signal handling function or action code. the action
*                       codes are:
*
*                       SIG_DFL - take the default action, whatever that may
*                       be, upon receipt of this type type of signal.
*
*                       SIG_DIE - *** ILLEGAL ***
*                       special code used in the XcptAction field of an
*                       XcptActTab[] entry to indicate that the runtime is
*                       to terminate the process upon receipt of the exception.
*                       not accepted as a value for sigact.
*
*                       SIG_IGN - ignore this type of signal
*
*                       [function address] - transfer control to this address
*                       when a signal of this type occurs.
*
*Exit:
*       Good return:
*       Signal returns the previous value of the signal handling function
*       (e.g., SIG_DFL, SIG_IGN, etc., or [function address]). This value is
*       returned in DX:AX.
*
*       Error return:
*       Signal returns -1 and errno is set to EINVAL. The error return is
*       generally taken if the user submits bogus input values.
*
*Exceptions:
*       None.
*
*******************************************************************************/

_PHNDLR __cdecl signal(
        int signum,
        _PHNDLR sigact
        )
{
        struct _XCPT_ACTION *pxcptact;
        _PHNDLR oldsigact;
        int Error=0;
        _ptiddata ptd;
        BOOL SetConsoleCtrlError = FALSE;

        /*
         * Check for values of sigact supported on other platforms but not
         * on this one. Also, make sure sigact is not SIG_DIE
         */
        if ( (sigact == SIG_ACK) || (sigact == SIG_SGE) )
                goto sigreterror;

        /*
         * Take care of all signals which do not correspond to exceptions
         * in the host OS. Those are:
         *
         *                      SIGINT
         *                      SIGBREAK
         *                      SIGABRT
         *                      SIGTERM
         *
         */
        if ( (signum == SIGINT) || (signum == SIGBREAK) || (signum == SIGABRT)
            || (signum == SIGABRT_COMPAT) || (signum == SIGTERM) ) {

                _mlock( _SIGNAL_LOCK );
                __try {

                /*
                 * if SIGINT or SIGBREAK, make sure the handler is installed
                 * to capture ^C and ^Break events.
                 */
                if ( ((signum == SIGINT) || (signum == SIGBREAK)) &&
                    !ConsoleCtrlHandler_Installed )
                                {
                        if ( SetConsoleCtrlHandler(ctrlevent_capture, TRUE)
                            == TRUE )
                                                {
                                ConsoleCtrlHandler_Installed = TRUE;
                                                }
                        else
                                                {
                                _doserrno = GetLastError();
                                                                SetConsoleCtrlError=TRUE;
                        }
                                }

                switch (signum) {

                        case SIGINT:
                                oldsigact = (_PHNDLR) _decode_pointer(ctrlc_action);
                                if(sigact!=SIG_GET)
                                {
                                    ctrlc_action = (_PHNDLR) _encode_pointer(sigact);
                                }
                                break;

                        case SIGBREAK:
                                oldsigact = (_PHNDLR) _decode_pointer(ctrlbreak_action);
                                if(sigact!=SIG_GET)
                                {
                                    ctrlbreak_action = (_PHNDLR) _encode_pointer(sigact);
                                }
                                break;

                        case SIGABRT:
                        case SIGABRT_COMPAT:
                                oldsigact = (_PHNDLR) _decode_pointer(abort_action);
                                if(sigact!=SIG_GET)
                                {
                                    abort_action = (_PHNDLR) _encode_pointer(sigact);
                                }
                                break;

                        case SIGTERM:
                                oldsigact = (_PHNDLR) _decode_pointer(term_action);
                                if(sigact!=SIG_GET)
                                {
                                    term_action = (_PHNDLR) _encode_pointer(sigact);
                                }
                                break;
                }

                }
                __finally {
                        _munlock( _SIGNAL_LOCK );
                }

                if (SetConsoleCtrlError) {
                    goto sigreterror;
                }
                goto sigretok;
        }

        /*
         * If we reach here, signum is supposed to be one the signals which
         * correspond to exceptions in the host OS. Those are:
         *
         *                      SIGFPE
         *                      SIGILL
         *                      SIGSEGV
         */

        /*
         * Make sure signum is one of the remaining supported signals.
         */
        if ( (signum != SIGFPE) && (signum != SIGILL) && (signum != SIGSEGV) )
                goto sigreterror;


        /*
         * Fetch the tid data table entry for this thread
         */
        ptd = _getptd_noexit();
        if (!ptd)
            goto sigreterror;

        /*
         * Check that there a per-thread instance of the exception-action
         * table for this thread. if there isn't, create one.
         */
        if ( ptd->_pxcptacttab == _XcptActTab )
                /*
                 * allocate space for an exception-action table
                 */
                if ( (ptd->_pxcptacttab = _malloc_crt(_XcptActTabSize)) != NULL )
                        /*
                         * initialize the table by copying over the contents
                         * of _XcptActTab[]
                         */
                        (void) memcpy(ptd->_pxcptacttab, _XcptActTab,
                            _XcptActTabSize);
                else
                        /*
                         * cannot create exception-action table, return
                         * error to caller
                         */
                        goto sigreterror;


        /*
         * look up the proper entry in the exception-action table. note that
         * if several exceptions are mapped to the same signal, this returns
         * the pointer to first such entry in the exception action table. it
         * is assumed that the other entries immediately follow this one.
         */
        if ( (pxcptact = siglookup(signum, ptd->_pxcptacttab)) == NULL )
                goto sigreterror;

        /*
         * SIGSEGV, SIGILL and SIGFPE all have more than one exception mapped
         * to them. the code below depends on the exceptions corresponding to
         * the same signal being grouped together in the exception-action
         * table.
         */

        /*
         * store old signal action code for return value
         */
        oldsigact = pxcptact->XcptAction;

        if(sigact!=SIG_GET)
        {
            /*
            * loop through all entries corresponding to the
            * given signal and update the SigAction and XcptAction
            * fields as appropriate
            */

            while ( pxcptact->SigNum == signum ) {
                    /*
                    * take care of the SIG_IGN and SIG_DFL action
                    * codes
                    */
                    pxcptact->XcptAction = sigact;

                    /*
                    * make sure we don't run off the end of the table
                    */
                    if ( ++pxcptact >= ((struct _XCPT_ACTION *)(ptd->_pxcptacttab)
                                       + _XcptActTabCount) )
                        break;
            }
        }

sigretok:
        return(oldsigact);

sigreterror:
        switch(signum)
        {
        case _SIGHUP_IGNORE:
        case _SIGQUIT_IGNORE:
        case _SIGPIPE_IGNORE:
        case _SIGIOINT_IGNORE:
        case _SIGSTOP_IGNORE:
            return SIG_ERR;
        default:
            _VALIDATE_RETURN(("Invalid signal or error", 0), EINVAL, SIG_ERR);
            /* should never happen, but compiler can't tell */
            return SIG_ERR;
        }
}

/***
*int raise(signum) - Raise a signal
*
*Purpose:
*       This routine raises a signal (i.e., performs the action currently
*       defined for this signal). The action associated with the signal is
*       evoked directly without going through intermediate dispatching or
*       handling.
*
*Entry:
*       int signum - signal type (e.g., SIGINT)
*
*Exit:
*       returns 0 on good return, -1 on bad return.
*
*Exceptions:
*       May not return.  Raise has no control over the action
*       routines defined for the various signals.  Those routines may
*       abort, terminate, etc.  In particular, the default actions for
*       certain signals will terminate the program.
*
*******************************************************************************/


int __cdecl raise (
        int signum
        )
{
        _PHNDLR sigact;
        _PHNDLR *psigact;
        PEXCEPTION_POINTERS oldpxcptinfoptrs;
        int oldfpecode;
        int indx;

        int siglock = 0;
        _ptiddata ptd=NULL;

        switch (signum) {

                case SIGINT:
                        sigact = *(psigact = &ctrlc_action);
                        siglock++;
                        break;

                case SIGBREAK:
                        sigact = *(psigact = &ctrlbreak_action);
                        siglock++;
                        break;

                case SIGABRT:
                case SIGABRT_COMPAT:
                        sigact = *(psigact = &abort_action);
                        siglock++;
                        break;

                case SIGTERM:
                        sigact = *(psigact = &term_action);
                        siglock++;
                        break;

                case SIGFPE:
                case SIGILL:
                case SIGSEGV:
                        ptd = _getptd_noexit();
                        if (!ptd)
                            return (-1);
                        sigact = *(psigact = &(siglookup( signum,
                            ptd->_pxcptacttab )->XcptAction));
                        goto decode_done;
                        break;

                default:
                        /*
                         * unsupported signal, return an error
                         */
                        _VALIDATE_RETURN(("Invalid signal or error", 0), EINVAL, -1);
        }
        sigact = (_PHNDLR) _decode_pointer(sigact);

decode_done:

        /*
         * If the current action is SIG_IGN, just return
         */
        if ( sigact == SIG_IGN )
                return(0);

        /*
         * If the current action is SIG_DFL, take the default action
         */
        if ( sigact == SIG_DFL ) {
                /*
                 * The current default action for all of the supported
                 * signals is to terminate with an exit code of 3.
                 */
                _exit(3);
        }

        /*
         * if signum is one of the 'process-wide' signals (i.e., SIGINT,
         * SIGBREAK, SIGABRT or SIGTERM), assert _SIGNAL_LOCK.
         */
        if ( siglock )
                _mlock(_SIGNAL_LOCK);

        __try {


        /*
         * From here on, sigact is assumed to be a pointer to a user-supplied
         * handler.
         */

        /*
         * For signals which correspond to exceptions, set the pointer
         * to the EXCEPTION_POINTERS structure to NULL
         */
        if ( (signum == SIGFPE) || (signum == SIGSEGV) ||
            (signum == SIGILL) ) {
                oldpxcptinfoptrs = ptd->_tpxcptinfoptrs;
                ptd->_tpxcptinfoptrs = NULL;

                 /*
                  * If signum is SIGFPE, also set _fpecode to
                  * _FPE_EXPLICITGEN
                  */
                if ( signum == SIGFPE ) {
                        oldfpecode = ptd->_tfpecode;
                        ptd->_tfpecode = _FPE_EXPLICITGEN;
                }
        }

        /*
         * Reset the action to SIG_DFL and call the user specified handler
         * routine.
         */
        if ( signum == SIGFPE )
                /*
                 * for SIGFPE, must reset the action for all of the floating
                 * point exceptions
                 */
                for ( indx = _First_FPE_Indx ;
                      indx < _First_FPE_Indx + _Num_FPE ;
                      indx++ )
                {
                        ( (struct _XCPT_ACTION *)(ptd->_pxcptacttab) +
                          indx )->XcptAction = SIG_DFL;
                }
        else
                *psigact = (_PHNDLR) _encoded_null();

        }
        __finally {
                if ( siglock )
                        _munlock(_SIGNAL_LOCK);
        }

        if ( signum == SIGFPE )
                /*
                 * Special code to support old SIGFPE handlers which
                 * expect the value of _fpecode as the second argument.
                 */
                (*(void (__cdecl *)(int,int))sigact)(SIGFPE,
                    ptd->_tfpecode);
        else
                (*sigact)(signum);

        /*
         * For signals which correspond to exceptions, restore the pointer
         * to the EXCEPTION_POINTERS structure.
         */
        if ( (signum == SIGFPE) || (signum == SIGSEGV) ||
            (signum == SIGILL) ) {
                ptd->_tpxcptinfoptrs = oldpxcptinfoptrs;

                 /*
                  * If signum is SIGFPE, also restore _fpecode
                  */
                if ( signum == SIGFPE )
                        ptd->_tfpecode = oldfpecode;
        }

        return(0);
}


/***
*struct _XCPT_ACTION *siglookup(int signum) - look up exception-action table
*       entry for signal.
*
*Purpose:
*       Find the first entry int _XcptActTab[] whose SigNum field is signum.
*
*Entry:
*       int signum - C signal type (e.g., SIGINT)
*
*Exit:
*       If successful, pointer to the table entry. If no such entry, NULL is
*       returned.
*
*Exceptions:
*
*******************************************************************************/


static struct _XCPT_ACTION * __cdecl siglookup (
        int signum,
        struct _XCPT_ACTION *pxcptacttab
        )
{
        struct _XCPT_ACTION *pxcptact = pxcptacttab;

        /*
         * walk thru the _xcptactab table looking for the proper entry. note
         * that in the case where more than one exception corresponds to the
         * same signal, the first such instance in the table is the one
         * returned.
         */

        while ( (pxcptact->SigNum != signum) &&
                (++pxcptact < pxcptacttab + _XcptActTabCount) ) ;


        if ( (pxcptact < (pxcptacttab + _XcptActTabCount)) &&
             (pxcptact->SigNum == signum) )
                /*
                 * found a table entry corresponding to the signal
                 */
                return(pxcptact);
        else
                /*
                 * found no table entry corresponding to the signal
                 */
                return(NULL);
}


/***
*_PHNDLR __cdecl __get_sigabrt(void) - return the SIGABRT signal handling function
*
*Purpose:
*
*Entry:
*
*Exit:
*
*Exceptions:
*
*******************************************************************************/

_PHNDLR __cdecl __get_sigabrt(void)
{
    return (_PHNDLR) _decode_pointer(abort_action);
}



/***
*int *__fpecode(void) - return pointer to _fpecode field of the tidtable entry
*       for the current thread
*
*Purpose:
*
*Entry:
*
*Exit:
*
*Exceptions:
*
*******************************************************************************/

int * __cdecl __fpecode (
        void
        )
{
        return( &(_getptd()->_tfpecode) );
}


/***
*void **__pxcptinfoptrs(void) - return pointer to _pxcptinfoptrs field of the
*       tidtable entry for the current thread
*
*Purpose:
*
*Entry:
*
*Exit:
*
*Exceptions:
*
*******************************************************************************/

void ** __cdecl __pxcptinfoptrs (
        void
        )
{
        return( &(_getptd()->_tpxcptinfoptrs) );
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\woutputp.c ===
/***
*woutputp.c - Positional version of wprintf & the wprintf family
*
*   Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*   This has format validations & positional parameters as compared to wprintf
*
*******************************************************************************/



#ifndef _UNICODE
#define _UNICODE 1
#endif  /* _UNICODE */

#ifndef UNICODE
#define UNICODE 1
#endif  /* UNICODE */

#define POSITIONAL_PARAMETERS 1
#include "output.c"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\woutputs.c ===
/***
*woutputs.c - Secure version of wprintf & the wprintf family
*
*   Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*   This has format validations as compared to wprintf
*
*******************************************************************************/



#ifndef _UNICODE
#define _UNICODE 1
#endif  /* _UNICODE */

#ifndef UNICODE
#define UNICODE 1
#endif  /* UNICODE */

#define FORMAT_VALIDATIONS 1
#include "output.c"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\wperror.c ===
/***
*wperror.c - print system error message (wchar_t version)
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       defines _wperror() - print wide system error message
*       System error message are indexed by errno.
*
*******************************************************************************/


#include <cruntime.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <syserr.h>
#include <mtdll.h>
#include <io.h>
#include <dbgint.h>
#include <limits.h>
#include <internal.h>

/***
*void _wperror(wmessage) - print system error message
*
*Purpose:
*       prints user's error message, then follows it with ": ", then the system
*       error message, then a newline.  All output goes to stderr.  If user's
*       message is NULL or a null string, only the system error message is
*       printer.  If errno is weird, prints "Unknown error".
*
*Entry:
*       const wchar_t *wmessage - users message to prefix system error message
*
*Exit:
*       Prints message; no return value.
*
*Exceptions:
*
*******************************************************************************/

void __cdecl _wperror (
        const wchar_t *wmessage
        )
{
        int fh = 2;
        size_t size = 0;
        char *amessage;
        const char *sysmessage;

        /* convert WCS string into ASCII string */

        if ( wmessage && *wmessage )
        {
            _ERRCHECK_EINVAL_ERANGE(wcstombs_s( &size, NULL, 0, wmessage, INT_MAX));

            if ( size==0 || (amessage = (char *)_calloc_crt(size, sizeof(char))) == NULL )
                return;

            if ( _ERRCHECK_EINVAL_ERANGE(wcstombs_s(NULL, amessage, size, wmessage, _TRUNCATE)) != 0)
            {
                _free_crt(amessage);
                return;
            }
        }
        else
            amessage = NULL;

        _lock_fh( fh );         /* acquire file handle lock */
        __try {

        if ( amessage )
        {
                _write_nolock(fh,(char *)amessage,(unsigned)strlen(amessage));
                _write_nolock(fh,": ",2);
        }

        _free_crt(amessage);    /* note: freeing NULL is legal and benign */

        sysmessage = _get_sys_err_msg( errno );
        _write_nolock(fh, sysmessage,(unsigned)strlen(sysmessage));
        _write_nolock(fh,"\n",1);

        }
        __finally {
            _unlock_fh( fh );   /* release file handle lock */
        }
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\wpopen.c ===
/***
*wpopen.c - initiate a pipe and a child command (wchar_t version)
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       Defines _wpopen().
*
*******************************************************************************/


#define WPRFLAG 1

#ifndef _UNICODE
#define _UNICODE 1
#endif  /* _UNICODE */

#ifndef UNICODE
#define UNICODE 1
#endif  /* UNICODE */

#undef _MBCS /* UNICODE not _MBCS */

#include "popen.c"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\wprintf.c ===
/***
*wprintf.c - print formatted
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       defines wprintf() - print formatted data
*
*******************************************************************************/


#include <cruntime.h>
#include <stdio.h>
#include <dbgint.h>
#include <stdarg.h>
#include <file2.h>
#include <internal.h>
#include <mtdll.h>
#include <stddef.h>

/***
*int wprintf(format, ...) - print formatted data
*
*Purpose:
*       Prints formatted data on stdout using the format string to
*       format data and getting as many arguments as called for
*       Uses temporary buffering to improve efficiency.
*       _output does the real work here
*
*Entry:
*       wchar_t *format - format string to control data format/number of arguments
*       followed by list of arguments, number and type controlled by
*       format string
*
*Exit:
*       returns number of wide characters printed
*
*Exceptions:
*
*******************************************************************************/

int __cdecl wprintf (
        const wchar_t *format,
        ...
        )
/*
 * stdout 'W'char_t 'PRINT', 'F'ormatted
 */
{
        va_list arglist;
        int buffing;
        int retval;

        _VALIDATE_RETURN( (format != NULL), EINVAL, -1);

        va_start(arglist, format);

        _lock_str2(1, stdout);
        __try {

        buffing = _stbuf(stdout);

        retval = _woutput_l(stdout,format,NULL,arglist);

        _ftbuf(buffing, stdout);

        }
        __finally {
            _unlock_str2(1, stdout);
        }

        return(retval);
}

errno_t __cdecl _wprintf_l (
        const wchar_t *format,
        _locale_t plocinfo,
        ...
        )
{
    va_list arglist;

    va_start(arglist, plocinfo);

    return _vwprintf_l(format, plocinfo, arglist);
}

errno_t __cdecl _wprintf_s_l (
        const wchar_t *format,
        _locale_t plocinfo,
        ...
        )
{
    va_list arglist;

    va_start(arglist, plocinfo);

    return _vwprintf_s_l(format, plocinfo, arglist);
}

errno_t __cdecl wprintf_s (
        const wchar_t *format,
        ...
        )
{
    va_list arglist;

    va_start(arglist, format);

    return _vwprintf_s_l(format, NULL, arglist);
}

errno_t __cdecl _wprintf_p_l (
        const wchar_t *format,
        _locale_t plocinfo,
        ...
        )
{
    va_list arglist;

    va_start(arglist, plocinfo);

    return _vwprintf_p_l(format, plocinfo, arglist);
}

errno_t __cdecl _wprintf_p (
        const wchar_t *format,
        ...
        )
{
    va_list arglist;

    va_start(arglist, format);

    return _vwprintf_p_l(format, NULL, arglist);
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\wputenv.c ===
/***
*wputenv.c - put an environment variable into the environment (wchar_t version)
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       defines _wputenv() - adds a new variable to environment; does not
*       change global environment, only the process' environment.
*
*******************************************************************************/


#define WPRFLAG 1

#ifndef _UNICODE
#define _UNICODE 1
#endif  /* _UNICODE */

#ifndef UNICODE
#define UNICODE 1
#endif  /* UNICODE */

#undef _MBCS /* UNICODE not _MBCS */

#include "putenv.c"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\wrename.c ===
/***
*wrename.c - rename file (wchar_t version)
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       Defines wrename() - rename a file
*
*******************************************************************************/


#define WPRFLAG 1

#ifndef _UNICODE
#define _UNICODE 1
#endif  /* _UNICODE */

#ifndef UNICODE
#define UNICODE 1
#endif  /* UNICODE */

#undef _MBCS /* UNICODE not _MBCS */

#include "rename.c"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\winxfltr.c ===
/***
*winxfltr.c - startup exception filter
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       Defines _XcptFilter(), the function called by the exception filter
*       expression in the startup code.
*
*******************************************************************************/


#include <cruntime.h>
#include <float.h>
#include <mtdll.h>
#include <oscalls.h>
#include <signal.h>
#include <stddef.h>
#include <internal.h>


/*
 * special code denoting no signal.
 */
#define NOSIG   -1


const struct _XCPT_ACTION _XcptActTab[] = {

/*
 * Exceptions corresponding to the same signal (e.g., SIGFPE) must be grouped
 * together.
 *
 * If any XcptAction field is changed in this table, update the function
 * _initp_misc_winxfltr below. That field must be initialized with an
 * encoded function pointer at CRT initialization time.
 *
 *        XcptNum                                        SigNum    XcptAction
 *        -------------------------------------------------------------------
 */
        { (unsigned long)STATUS_ACCESS_VIOLATION,         SIGSEGV, SIG_DFL },

        { (unsigned long)STATUS_ILLEGAL_INSTRUCTION,      SIGILL,  SIG_DFL },

        { (unsigned long)STATUS_PRIVILEGED_INSTRUCTION,   SIGILL,  SIG_DFL },

/*      { (unsigned long)STATUS_NONCONTINUABLE_EXCEPTION, NOSIG,   SIG_DIE },
 */
/*      { (unsigned long)STATUS_INVALID_DISPOSITION,      NOSIG,   SIG_DIE },
 */
        { (unsigned long)STATUS_FLOAT_DENORMAL_OPERAND,   SIGFPE,  SIG_DFL },

        { (unsigned long)STATUS_FLOAT_DIVIDE_BY_ZERO,     SIGFPE,  SIG_DFL },

        { (unsigned long)STATUS_FLOAT_INEXACT_RESULT,     SIGFPE,  SIG_DFL },

        { (unsigned long)STATUS_FLOAT_INVALID_OPERATION,  SIGFPE,  SIG_DFL },

        { (unsigned long)STATUS_FLOAT_OVERFLOW,           SIGFPE,  SIG_DFL },

        { (unsigned long)STATUS_FLOAT_STACK_CHECK,        SIGFPE,  SIG_DFL },

        { (unsigned long)STATUS_FLOAT_UNDERFLOW,          SIGFPE,  SIG_DFL },

/*      { (unsigned long)STATUS_INTEGER_DIVIDE_BY_ZERO,   NOSIG,   SIG_DIE },
 */
/*      { (unsigned long)STATUS_STACK_OVERFLOW,           NOSIG,   SIG_DIE }
 */
};

/*
 * WARNING!!!! The definition below amounts to defining that:
 *
 *                  XcptActTab[ _First_FPE_Indx ]
 *
 * is the very FIRST entry in the table corresponding to a floating point
 * exception. Whenever the definition of the XcptActTab[] table is changed,
 * this #define must be review to ensure correctness.
 */
int _First_FPE_Indx = 3;

/*
 * There are _Num_FPE (currently, 7) entries in XcptActTab corresponding to
 * floating point exceptions.
 */
int _Num_FPE = 7;


/*
 * size of the exception-action table (in bytes)
 */
int _XcptActTabSize = sizeof _XcptActTab;


/*
 * number of entries in the exception-action table
 */
int _XcptActTabCount = (sizeof _XcptActTab)/sizeof(_XcptActTab[0]);

/*
 * Initialize the function pointers in the table to the encoded version of
 * SIG_DEF.
 */
void __cdecl _initp_misc_winxfltr(void* enull)
{
}



/*
 * the FPECODE and PXCPTINFOPTRS macros are intended to simplify some of
 * single vs multi-thread code in the filter function. basically, each macro
 * is conditionally defined to be a global variable or the corresponding
 * field in the per-thread data structure. NOTE THE ASSUMPTION THAT THE
 * _ptiddata VARIABLE IS ALWAYS NAMED ptd!!!!
 */

#define FPECODE         ptd->_tfpecode

#define PXCPTINFOPTRS   ptd->_tpxcptinfoptrs


/*
 * function to look up the exception action table (_XcptActTab[]) corresponding
 * to the given exception
 */


static struct _XCPT_ACTION * __cdecl xcptlookup(
        unsigned long,
        struct _XCPT_ACTION *
        );


/***
*int _CppXcptFilter(xcptnum, pxcptptrs) - Wrapper over _XcptFilter so that
*       _XcptFilter only gets called for C++ Exceptions.
*
*******************************************************************************/

int __cdecl __CppXcptFilter (
    unsigned long xcptnum,
    PEXCEPTION_POINTERS pxcptinfoptrs
    )
{
    if (xcptnum==('msc'|0xE0000000)) {
        return _XcptFilter(xcptnum,pxcptinfoptrs);
    } else {
        return EXCEPTION_CONTINUE_SEARCH;
    }
}

/***
*int _XcptFilter(xcptnum, pxcptptrs) - Identify exception and the action to
*       be taken with it
*
*Purpose:
*       _XcptFilter() is called by the exception filter expression of the
*       _try - _except statement, in the startup code, which guards the call
*       to the user's main(). _XcptFilter() consults the _XcptActTab[] table
*       to identify the exception and determine its disposition. The
*       is disposition of an exception corresponding to a C signal may be
*       modified by a call to signal(). There are three broad cases:
*
*       (1) Unrecognized exceptions and exceptions for which the XcptAction
*           value is SIG_DFL.
*
*           In both of these cases, EXCEPTION_CONTINUE_SEARCH is returned to
*           cause the OS exception dispatcher to pass the exception onto the
*           next exception handler in the chain (usually a system default
*           handler).
*
*       (2) Exceptions corresponding to C signals with an XcptAction value
*           NOT equal to SIG_DFL.
*
*           These are the C signals whose disposition has been affected by a
*           call to signal() or whose default semantics differ slightly from
*           from the corresponding OS exception. In all cases, the appropriate
*           disposition of the C signal is made by the function (e.g., calling
*           a user-specified signal handler). Then, EXCEPTION_CONTINUE_EXECU-
*           TION is returned to cause the OS exception dispatcher to dismiss
*           the exception and resume execution at the point where the
*           exception occurred.
*
*       (3) Exceptions for which the XcptAction value is SIG_DIE.
*
*           These are the exceptions corresponding to fatal C runtime errors.
*           _XCPT_HANDLE is returned to cause control to pass into the
*           _except-block of the _try - _except statement. There, the runtime
*           error is identified, an appropriate error message is printed out
*           and the program is terminated.
*
*Entry:
*
*Exit:
*
*Exceptions:
*       That's what it's all about!
*
*******************************************************************************/

int __cdecl _XcptFilter (
        unsigned long xcptnum,
        PEXCEPTION_POINTERS pxcptinfoptrs
        )
{
        struct _XCPT_ACTION * pxcptact;
        _PHNDLR phandler;
        void *oldpxcptinfoptrs;
        int oldfpecode;
        int indx;

        _ptiddata ptd = _getptd_noexit();
        if (!ptd) {
            // we can't deal with it - pass it on.
            return(EXCEPTION_CONTINUE_SEARCH);
        }

        pxcptact = xcptlookup(xcptnum, ptd->_pxcptacttab);

        if (pxcptact == NULL)
        {
            phandler = SIG_DFL;
        }
        else
        {
            phandler = pxcptact->XcptAction;
        }

        /*
         * first, take care of all unrecognized exceptions and exceptions with
         * XcptAction values of SIG_DFL.
         */
        if ( phandler == SIG_DFL )
                return(EXCEPTION_CONTINUE_SEARCH);



        /*
         * next, weed out all of the exceptions that need to be handled by
         * dying, perhaps with a runtime error message
         */
        if ( phandler == SIG_DIE ) {
                /*
                 * reset XcptAction (in case of recursion) and drop into the
                 * except-clause.
                 */
                pxcptact->XcptAction = SIG_DFL;
                return(EXCEPTION_EXECUTE_HANDLER);
        }

        /*
         * next, weed out all of the exceptions that are simply ignored
         */
        if ( phandler == SIG_IGN )
                /*
                 * resume execution
                 */
                return(EXCEPTION_CONTINUE_EXECUTION);

        /*
         * the remaining exceptions all correspond to C signals which have
         * signal handlers associated with them. for some, special setup
         * is required before the signal handler is called. in all cases,
         * if the signal handler returns, -1 is returned by this function
         * to resume execution at the point where the exception occurred.
         */

        /*
         * save the old value of _pxcptinfoptrs (in case this is a nested
         * exception/signal) and store the current one.
         */
        oldpxcptinfoptrs = PXCPTINFOPTRS;
        PXCPTINFOPTRS = pxcptinfoptrs;

        /*
         * call the user-supplied signal handler
         *
         * floating point exceptions must be handled specially since, from
         * the C point-of-view, there is only one signal. the exact identity
         * of the exception is passed in the global variable _fpecode.
         */
        if ( pxcptact->SigNum == SIGFPE ) {

                /*
                 * reset the XcptAction field to the default for all entries
                 * corresponding to SIGFPE.
                 */
                for ( indx = _First_FPE_Indx ;
                      indx < _First_FPE_Indx + _Num_FPE ;
                      indx++ )
                {
                        ( (struct _XCPT_ACTION *)(ptd->_pxcptacttab) +
                          indx )->XcptAction = SIG_DFL;
                }

                /*
                 * Save the current _fpecode in case it is a nested floating
                 * point exception (not clear that we need to support this,
                 * but it's easy).
                 */
                oldfpecode = FPECODE;

                /*
                 * there are no exceptions corresponding to
                 * following _FPE_xxx codes:
                 *
                 *      _FPE_UNEMULATED
                 *      _FPE_SQRTNEG
                 *
                 * futhermore, STATUS_FLOATING_STACK_CHECK is
                 * raised for both floating point stack under-
                 * flow and overflow. thus, the exception does
                 * not distinguish between _FPE_STACKOVERLOW
                 * and _FPE_STACKUNDERFLOW. arbitrarily, _fpecode
                 * is set to the former value.
                 *
                 * the following should be a switch statement but, alas, the
                 * compiler doesn't like switching on unsigned longs...
                 */
                if ( pxcptact->XcptNum == STATUS_FLOAT_DIVIDE_BY_ZERO )

                        FPECODE = _FPE_ZERODIVIDE;

                else if ( pxcptact->XcptNum == STATUS_FLOAT_INVALID_OPERATION )

                        FPECODE = _FPE_INVALID;

                else if ( pxcptact->XcptNum == STATUS_FLOAT_OVERFLOW )

                        FPECODE = _FPE_OVERFLOW;

                else if ( pxcptact->XcptNum == STATUS_FLOAT_UNDERFLOW )

                        FPECODE = _FPE_UNDERFLOW;

                else if ( pxcptact->XcptNum == STATUS_FLOAT_DENORMAL_OPERAND )

                        FPECODE = _FPE_DENORMAL;

                else if ( pxcptact->XcptNum == STATUS_FLOAT_INEXACT_RESULT )

                        FPECODE = _FPE_INEXACT;

                else if ( pxcptact->XcptNum == STATUS_FLOAT_STACK_CHECK )

                        FPECODE = _FPE_STACKOVERFLOW;

                /*
                 * call the SIGFPE handler. note the special code to support
                 * old MS-C programs whose SIGFPE handlers expect two args.
                 *
                 * NOTE: THE CAST AND CALL BELOW DEPEND ON __cdecl BEING
                 * CALLER CLEANUP!
                 */
                (*(void (__cdecl *)(int, int))phandler)(SIGFPE, FPECODE);

                /*
                 * restore the old value of _fpecode
                 */
                FPECODE = oldfpecode;
        }
        else {
                /*
                 * reset the XcptAction field to the default, then call the
                 * user-supplied handler
                 */
                pxcptact->XcptAction = SIG_DFL;
                (*phandler)(pxcptact->SigNum);
        }

        /*
         * restore the old value of _pxcptinfoptrs
         */
        PXCPTINFOPTRS = oldpxcptinfoptrs;

        return(EXCEPTION_CONTINUE_EXECUTION);

}


/***
*struct _XCPT_ACTION * xcptlookup(xcptnum, pxcptrec) - look up exception-action
*       table entry for xcptnum
*
*Purpose:
*       Find the in _XcptActTab[] whose Xcptnum field is xcptnum.
*
*Entry:
*       unsigned long xcptnum            - exception type
*
*       _PEXCEPTIONREPORTRECORD pxcptrec - pointer to exception report record
*       (used only to distinguish different types of XCPT_SIGNAL)
*
*Exit:
*       If successful, pointer to the table entry. If no such entry, NULL is
*       returned.
*
*Exceptions:
*
*******************************************************************************/


static struct _XCPT_ACTION * __cdecl xcptlookup (
        unsigned long xcptnum,
        struct _XCPT_ACTION * pxcptacttab
        )


{
        struct _XCPT_ACTION *pxcptact = pxcptacttab;

        /*
         * walk thru the _xcptactab table looking for the proper entry
         */

        while ( (pxcptact->XcptNum != xcptnum) &&
                (++pxcptact < pxcptacttab + _XcptActTabCount) ) ;


        /*
         * if no table entry was found corresponding to xcptnum, return NULL
         */
        if ( (pxcptact >= pxcptacttab + _XcptActTabCount) ||
             (pxcptact->XcptNum != xcptnum) )
                return(NULL);

        return(pxcptact);
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\wrt2err.c ===
/***
*wrt2err.c - write an LSTRING to stderr (Win32 version)
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       This module contains a routine __wrt2err that writes an LSTRING
*       (one byte length followed by the several bytes of the string)
*       to the standard error handle (2).  This is a helper routine used
*       for MATH error messages (and also FORTRAN error messages).
*
*******************************************************************************/


#include <cruntime.h>
#include <oscalls.h>
#include <internal.h>

/***
*__wrt2err(msg) - write an LSTRING to stderr
*
*Purpose:
*       Takes a pointer to an LSTRING which is to be written to standard error.
*       An LSTRING is a one-byte length followed by that many bytes for the
*       character string (as opposed to a null-terminated string).
*
*Entry:
*       char *msg = pointer to LSTRING to write to standard error.
*
*Exit:
*       Nothing returned.
*
*Exceptions:
*       None handled.
*
*******************************************************************************/

void __cdecl __wrt2err (
        char *msg
        )
{
        unsigned long length;           /* length of string to write */
        unsigned long numwritten;       /* number of bytes written */

        length = *msg++;                /* 1st byte is length */

        /* write the message to stderr */

        WriteFile((HANDLE)_osfhnd(2), msg, length, &numwritten, NULL);
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\wsearche.c ===
/***
*wsearche.c - find a file using paths from an environment variable (wchar_t version)
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       to search a set a directories specified by an environment variable
*       for a specified file name.  If found the full path name is returned.
*
*******************************************************************************/


#define WPRFLAG 1

#ifndef _UNICODE
#define _UNICODE 1
#endif  /* _UNICODE */

#ifndef UNICODE
#define UNICODE 1
#endif  /* UNICODE */

#undef _MBCS /* UNICODE not _MBCS */

#include "searchen.c"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\wsetargv.c ===
/***
*wsetargv.c - generic _wsetargv routine (wchar_t version)
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       Linking in this module replaces the normal wsetargv with the
*       wildcard wsetargv.
*
*******************************************************************************/

#include <cruntime.h>
#include <internal.h>

/***
*_wsetargv - sets wargv by calling __wsetargv
*
*Purpose:
*       Routine directly transfers to __wsetargv.
*
*Entry:
*       See __wsetargv.
*
*Exit:
*       See __wsetargv.
*
*Exceptions:
*       See __wsetargv.
*
*******************************************************************************/

int __CRTDECL  _wsetargv (
        void
        )
{
        return __wsetargv();
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\wsetenv.c ===
/***
*setenv.c -set an environment variable in the environment (wchar_t version)
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       defines __crtwsetenv() - adds a new variable to environment.
*       Internal use only.
*
*******************************************************************************/


#define WPRFLAG 1

#ifndef _UNICODE
#define _UNICODE 1
#endif  /* _UNICODE */

#ifndef UNICODE
#define UNICODE 1
#endif  /* UNICODE */

#undef _MBCS /* UNICODE not _MBCS */

#include "setenv.c"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\wsetloca.c ===
/***
*wsetlocal.c - Contains the setlocale function (wchar_t version)
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       Contains the _wsetlocale() function.
*
*******************************************************************************/


#include <wchar.h>
#include <stdlib.h>
#include <setlocal.h>
#include <locale.h>
#include <dbgint.h>
#include <mtdll.h>
#include <internal.h>
#include <malloc.h>

#define MAXSIZE ((MAX_LC_LEN+1) * (LC_MAX-LC_MIN+1) + CATNAMES_LEN)

wchar_t * __cdecl _wsetlocale (
        int _category,
        const wchar_t *_wlocale
        )
{
        size_t size = 0;
        char *inlocale = NULL;
        char *outlocale;
        pthreadlocinfo ptloci;
        int *refcount = NULL;
        wchar_t *outwlocale = NULL;
        _locale_tstruct locale;
        _ptiddata ptd;

        /* convert WCS string into ASCII string */

        if (_wlocale)
        {
            _ERRCHECK_EINVAL_ERANGE(wcstombs_s(&size, NULL, 0, _wlocale, INT_MAX));
            if (size==0 || (inlocale = (char *)_calloc_crt(size, sizeof(char))) == NULL)
                return NULL;
            if (_ERRCHECK_EINVAL_ERANGE(wcstombs_s(NULL, inlocale, size, _wlocale, _TRUNCATE)) != 0)
            {
                _free_crt (inlocale);
                return NULL;
            }
        }

        /* set the locale and get ASCII return string */

        outlocale = setlocale(_category, inlocale);
        _free_crt (inlocale);
        if (NULL == outlocale)
            return NULL;

        // We now have a locale string, but the global locale can be changed by
        // another thread. If we allow this thread's locale to be updated before we're done
        // with this string, it might be freed from under us.
        // Call versions of the MB-to-wide-char conversions that do not update the current thread's
        // locale.

        ptd = _getptd();
        locale.locinfo = ptd->ptlocinfo;
        locale.mbcinfo = ptd->ptmbcinfo;

        /* get space for WCS return value, first call only */

        size = 0;
        if (_ERRCHECK_EINVAL_ERANGE(_mbstowcs_s_l(&size, NULL, 0, outlocale, 0, &locale)) != 0)
            return NULL;

        /* ensure that (size * num) does not overflow */
        if(((_HEAP_MAXREQ-sizeof(int)) / sizeof(wchar_t)) < size)
        {
            return NULL;
        }
        refcount = (int *)_malloc_crt(size * sizeof(wchar_t) + sizeof(int));
        if (!refcount)
            return NULL;
        outwlocale = (wchar_t *)&refcount[1];

        /* convert return value to WCS */

        if ( _ERRCHECK_EINVAL_ERANGE(_mbstowcs_s_l(NULL, outwlocale, size, outlocale, _TRUNCATE, &locale)) != 0)
        {
            _free_crt(refcount);
            return NULL;
        }

        ptloci = locale.locinfo;
        _mlock(_SETLOCALE_LOCK);
        __try {
            _ASSERTE(((ptloci->lc_category[_category].wlocale != NULL) && (ptloci->lc_category[_category].wrefcount != NULL)) ||
                     ((ptloci->lc_category[_category].wlocale == NULL) && (ptloci->lc_category[_category].wrefcount == NULL)));
            if (ptloci->lc_category[_category].wrefcount != NULL &&
                InterlockedDecrement(ptloci->lc_category[_category].wrefcount) == 0) {
                _free_crt(ptloci->lc_category[_category].wrefcount);
            }

            if (!(ptd->_ownlocale & _PER_THREAD_LOCALE_BIT) &&
                        !(__globallocalestatus & _GLOBAL_LOCALE_BIT)) {
                if (ptloci->lc_category[_category].wrefcount != NULL &&
                    InterlockedDecrement(ptloci->lc_category[_category].wrefcount) == 0) {
                    _free_crt(ptloci->lc_category[_category].wrefcount);
                }
            }

            /*
             * Note that we are using a risky trick here.  We are adding this
             * wlocale to an existing threadlocinfo struct, and thus starting
             * the wlocale's wrefcount with the same value as the whole struct.
             * That means all code which modifies both threadlocinfo::refcount
             * and threadlocinfo::lc_category[]::wrefcount in structs that are
             * potentially shared across threads must make those modifications
             * under _SETLOCALE_LOCK.  Otherwise, there's a race condition
             * for some other thread modifying threadlocinfo::refcount after
             * we load it but before we store it to wrefcount.
             */
            *refcount = ptloci->refcount;
            ptloci->lc_category[_category].wrefcount = refcount;
            ptloci->lc_category[_category].wlocale = outwlocale;
        }
        __finally {
            _munlock(_SETLOCALE_LOCK);
        }

        return outwlocale;
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\wopen.c ===
/***
*wopen.c - file open for (wchar_t version)
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       defines _wopen() and _wsopen() - open or create a file
*
*******************************************************************************/


#define WPRFLAG 1

#ifndef _UNICODE
#define _UNICODE 1
#endif  /* _UNICODE */

#ifndef UNICODE
#define UNICODE 1
#endif  /* UNICODE */

#include "open.c"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\wspawnle.c ===
/***
*wspawnle.c - spawn a child process with given environment (wchar_t version)
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       defines _wspawnle() - spawn a child process with given environ
*
*******************************************************************************/


#define WPRFLAG 1

#ifndef _UNICODE
#define _UNICODE 1
#endif  /* _UNICODE */

#ifndef UNICODE
#define UNICODE 1
#endif  /* UNICODE */

#undef _MBCS /* UNICODE not _MBCS */

#include "spawnle.c"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\wmktemp.c ===
/***
*wmktemp.c - create a unique file name (wchar_t version)
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       defines _wmktemp() - create a unique file name
*
*******************************************************************************/


#define WPRFLAG 1

#ifndef _UNICODE
#define _UNICODE 1
#endif  /* _UNICODE */

#ifndef UNICODE
#define UNICODE 1
#endif  /* UNICODE */

#undef _MBCS

#include "mktemp.c"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\wrmdir.c ===
/***
*wrmdir.c - remove directory (wchar_t version)
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       defines _wrmdir() - remove a directory
*
*******************************************************************************/


#define WPRFLAG 1

#ifndef _UNICODE
#define _UNICODE 1
#endif  /* _UNICODE */

#ifndef UNICODE
#define UNICODE 1
#endif  /* UNICODE */

#undef _MBCS /* UNICODE not _MBCS */

#include "rmdir.c"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\woutput.c ===
/***
*woutput.c - wprintf style output to a FILE (wchar_t version)
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       This file defines the symbol UNICODE and then #includes the file
*       "output.c" in order to implement _woutput(), the helper for the
*       wide character versions of *wprintf() family of functions.
*
*******************************************************************************/


#ifndef _UNICODE
#define _UNICODE 1
#endif  /* _UNICODE */

#ifndef UNICODE
#define UNICODE 1
#endif  /* UNICODE */

#include "output.c"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\wsplitpa.c ===
/***
*wsplitpt.c - break down path name into components (wchar_t version)
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       To provide support for accessing the individual components of an
*       arbitrary path name
*
*******************************************************************************/


#define WPRFLAG 1

#ifndef _UNICODE
#define _UNICODE 1
#endif  /* _UNICODE */

#ifndef UNICODE
#define UNICODE 1
#endif  /* UNICODE */

#undef _MBCS /* UNICODE not _MBCS */

#include "splitpat.c"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\wsplitpath_s.c ===
/***
*wsplitpath_s.c - break down path name into components
*
*   Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*   To provide support for accessing the individual components of an
*   arbitrary path name
*
*******************************************************************************/

#include <stdlib.h>
#include <mbstring.h>
#include <internal_securecrt.h>

#define _FUNC_PROLOGUE
#define _FUNC_NAME _wsplitpath_s
#define _CHAR wchar_t
#define _TCSNCPY_S wcsncpy_s
#define _T(_Character) L##_Character
#define _MBS_SUPPORT 0

#include <tsplitpath_s.inl>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\wscanf.c ===
/***
*wscanf.c - read formatted data from stdin
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       defines wscanf() - reads formatted data from stdin
*
*******************************************************************************/


#include <cruntime.h>
#include <stdio.h>
#include <wchar.h>
#include <dbgint.h>
#include <stdarg.h>
#include <file2.h>
#include <internal.h>
#include <mtdll.h>

/***
*int vwscanf(format, ...)
*
*Purpose:
*       This is a helper function to be called from wscanf & wscanf_s
*
*Entry:
*       char *format - format string
*       va_list arglist - arglist of output pointers
*
*Exit:
*       returns number of fields read and assigned
*
*Exceptions:
*
*******************************************************************************/

int __cdecl vwscanf (
        WINPUTFN winputfn,
        const wchar_t *format,
        _locale_t plocinfo,
        va_list arglist
        )
/*
 * stdin 'W'char_t 'SCAN', 'F'ormatted
 */
{
        int retval;

        _VALIDATE_RETURN( (format != NULL), EINVAL, EOF);

        _lock_str2(0, stdin);
        __try {

        retval = (winputfn(stdin, format, plocinfo, arglist));

        }
        __finally {
            _unlock_str2(0, stdin);
        }

        return(retval);
}

/***
*int wscanf(format, ...) - read formatted data from stdin
*
*Purpose:
*       Reads formatted data from stdin into arguments.  _input does the real
*       work here.
*
*Entry:
*       char *format - format string
*       followed by list of pointers to storage for the data read.  The number
*       and type are controlled by the format string.
*
*Exit:
*       returns number of fields read and assigned
*
*Exceptions:
*
*******************************************************************************/
int __cdecl wscanf (
        const wchar_t *format,
        ...
        )
{
        va_list arglist;
        va_start(arglist, format);
        return vwscanf(_winput_l, format, NULL, arglist);
}

int __cdecl _wscanf_l (
        const wchar_t *format,
        _locale_t plocinfo,
        ...
        )
{
        va_list arglist;
        va_start(arglist, plocinfo);
        return vwscanf(_winput_l, format, plocinfo, arglist);
}

/***
*int wscanf_s(format, ...)
*
*   Same as wscanf above except that it calls _input_s to do the real work.
*   _input_s has a size check for array parameters.
*
*******************************************************************************/
int __cdecl wscanf_s (
        const wchar_t *format,
        ...
        )
{
        va_list arglist;
        va_start(arglist, format);
        return vwscanf(_winput_s_l, format, NULL, arglist);
}

int __cdecl _wscanf_s_l (
        const wchar_t *format,
        _locale_t plocinfo,
        ...
        )
{
        va_list arglist;
        va_start(arglist, plocinfo);
        return vwscanf(_winput_s_l, format, plocinfo, arglist);
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\wspwnvpe.c ===
/***
*wspwnvpe.c - spawn a child process with given environ (search PATH) (wchar_t version)
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       defines _wspawnvpe() - spawn a child process with given environ (search
*       PATH)
*
*******************************************************************************/


#define WPRFLAG 1

#ifndef _UNICODE
#define _UNICODE 1
#endif  /* _UNICODE */

#ifndef UNICODE
#define UNICODE 1
#endif  /* UNICODE */

#undef _MBCS /* UNICODE not _MBCS */

#include "spawnvpe.c"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\wspawnl.c ===
/***
*wspawnl.c - spawn a child process (wchar_t version)
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       defines _wspawnl() - spawn a child process
*
*******************************************************************************/


#define WPRFLAG 1

#ifndef _UNICODE
#define _UNICODE 1
#endif  /* _UNICODE */

#ifndef UNICODE
#define UNICODE 1
#endif  /* UNICODE */

#undef _MBCS /* UNICODE not _MBCS */

#include "spawnl.c"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\wspwnlpe.c ===
/***
*wspwnlpe.c - spawn a child process with environ and search along PATH (wchar_t version)
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       defines _wspawnlpe() - spawn a child process with environ/PATH search
*
*******************************************************************************/


#define WPRFLAG 1

#ifndef _UNICODE
#define _UNICODE 1
#endif  /* _UNICODE */

#ifndef UNICODE
#define UNICODE 1
#endif  /* UNICODE */

#undef _MBCS /* UNICODE not _MBCS */

#include "spawnlpe.c"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\wspawnlp.c ===
/***
*wspawnlp.c - spawn a file; search along PATH (wchar_t version)
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       defines _wspawnlp() - spawn a file with search along PATH
*
*******************************************************************************/


#define WPRFLAG 1

#ifndef _UNICODE
#define _UNICODE 1
#endif  /* _UNICODE */

#ifndef UNICODE
#define UNICODE 1
#endif  /* UNICODE */

#undef _MBCS /* UNICODE not _MBCS */

#include "spawnlp.c"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\write.c ===
/***
*write.c - write to a file handle
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       defines _write() - write to a file handle
*
*******************************************************************************/

#include <cruntime.h>
#include <oscalls.h>
#include <ctype.h>
#include <io.h>
#include <errno.h>
#include <msdos.h>
#include <mtdll.h>
#include <stdlib.h>
#include <string.h>
#include <internal.h>
#include <setlocal.h>
#include <locale.h>
#include <wchar.h>

#define BUF_SIZE    5*1024    /* size of LF translation buffer */
                              /* default buffer is 4K, plus extra for LFs */

/***
*int _write(fh, buf, cnt) - write bytes to a file handle
*
*Purpose:
*       Writes count bytes from the buffer to the handle specified.
*       If the file was opened in text mode, each LF is translated to
*       CR-LF.  This does not affect the return value.  In text
*       mode ^Z indicates end of file.
*
*       Multi-thread notes:
*       (1) _write() - Locks/unlocks file handle
*           _write_nolock() - Does NOT lock/unlock file handle
*
*Entry:
*       int fh - file handle to write to
*       char *buf - buffer to write from
*       unsigned int cnt - number of bytes to write
*
*Exit:
*       returns number of bytes actually written.
*       This may be less than cnt, for example, if out of disk space.
*       returns -1 (and set errno) if fails.
*
*Exceptions:
*
*******************************************************************************/


/* define normal version that locks/unlocks, validates fh */
int __cdecl _write (
        int fh,
        const void *buf,
        unsigned cnt
        )
{
        int r;                          /* return value */


        /* validate handle */
        _CHECK_FH_CLEAR_OSSERR_RETURN( fh, EBADF, -1 );
        _VALIDATE_CLEAR_OSSERR_RETURN((fh >= 0 && (unsigned)fh < (unsigned)_nhandle), EBADF, -1);
        _VALIDATE_CLEAR_OSSERR_RETURN((_osfile(fh) & FOPEN), EBADF, -1);

        _lock_fh(fh);                   /* lock file */

        __try {
                if ( _osfile(fh) & FOPEN )
                        r = _write_nolock(fh, buf, cnt);    /* write bytes */
                else {
                        errno = EBADF;
                        _doserrno = 0;  /* not o.s. error */
                        r = -1;
                        _ASSERTE(("Invalid file descriptor. File possibly closed by a different thread",0));
                }
        }
        __finally {
                _unlock_fh(fh);         /* unlock file */
        }

        return r;
}

/* now define version that doesn't lock/unlock, validate fh */
int __cdecl _write_nolock (
        int fh,
        const void *buf,
        unsigned cnt
        )
{

        int lfcount;            /* count of line feeds */
        int charcount;          /* count of chars written so far */
        int written;            /* count of chars written on this write */
        ULONG dosretval;        /* o.s. return value */
        char tmode ;            /* textmode - ANSI or UTF-16 */
        BOOL toConsole = 0;     /* true when writing to console */
        BOOL isCLocale = 0;     /* true when locale handle is C locale */


        lfcount = charcount = 0;        /* nothing written yet */

        if (cnt == 0)
                return 0;               /* nothing to do */

        _VALIDATE_CLEAR_OSSERR_RETURN( (buf != NULL), EINVAL, -1 );

        tmode = _textmode(fh);

        if(tmode == __IOINFO_TM_UTF16LE ||
                tmode == __IOINFO_TM_UTF8)
        {
            /* For a UTF-16 file, the count must always be an even number */
            _VALIDATE_CLEAR_OSSERR_RETURN(((cnt & 1) == 0), EINVAL, -1);
        }

        if (_osfile(fh) & FAPPEND) {
                /* appending - seek to end of file; ignore error, because maybe
                   file doesn't allow seeking */
                (void)_lseeki64_nolock(fh, 0, FILE_END);
        }

        /* check for text mode with LF's in the buffer */

        /*
         * Note that in case the handle belongs to Console, write file will
         * generate garbage output. For user to print these characters
         * correctly, we will need to print ANSI.
         *
         * Also note that in case of printing to Console, we still have to
         * convert the characters to console codepage.
         */

        if (_isatty(fh) && (_osfile(fh) & FTEXT))
        {
            DWORD dwMode;
            _ptiddata ptd = _getptd();
            isCLocale = (ptd->ptlocinfo->lc_handle[LC_CTYPE] == _CLOCALEHANDLE);
            toConsole = GetConsoleMode((HANDLE)_osfhnd(fh), &dwMode);
        }

        /* don't need double conversion if it's ANSI mode C locale */
        if (toConsole && !(isCLocale && (tmode == __IOINFO_TM_ANSI))) {
            UINT consoleCP = GetConsoleCP();
            char mboutbuf[MB_LEN_MAX];
            wchar_t tmpchar;
            int size = 0;
            int written = 0;
            char *pch;

            for (pch = (char *)buf; (unsigned)(pch - (char *)buf) < cnt; ) {
                BOOL bCR;

                if (tmode == __IOINFO_TM_ANSI) {
                    bCR = *pch == LF;
                    /*
                     * Here we need to do double convert. i.e. convert from
                     * multibyte to unicode and then from unicode to multibyte in
                     * Console codepage.
                     */

                    /*
                     * Here, we have take into account that _write() might be called
                     * byte by byte, so when we see a lead byte without a trail byte,
                     * we have to store it and return no error.
                     */
                    if ( _dbcsBufferUsed(fh) ) {
                        /*
                         * we got something buffered, join it with the lead byte
                         * and convert
                         */
                        _ASSERTE(isleadbyte(_dbcsBuffer(fh)));
                        mboutbuf[0]=_dbcsBuffer(fh);
                        mboutbuf[1] = *pch;
                        /* reseting the flag */
                        _dbcsBufferUsed(fh) = FALSE;

                        if (mbtowc(&tmpchar, mboutbuf, 2) == -1) {
                            break;
                        }
                    } else {
                        if (isleadbyte(*pch)) {
                            if ((cnt - (pch - (char*)buf)) > 1) {
                                // and we have more bytes to read, just convert
                                if (mbtowc(&tmpchar, pch, 2) == -1) {
                                    break;
                                }
                                /*
                                 * Increment pch to accomodate DBCS character.
                                 */
                                ++pch;
                            } else {
                                /* and we ran out of bytes to read, buffer the lead byte */
                                _dbcsBuffer(fh) = *pch;
                                _dbcsBufferUsed(fh) = TRUE;

                                /* lying that we actually wrote the last character,
                                 * so it doesn't error
                                 */
                                charcount++;
                                break;
                            }
                        } else {
                            // single char conversion
                            if (mbtowc(&tmpchar, pch, 1) == -1) {
                                break;
                            }
                        }
                    }
                    ++pch;
                } else if (tmode == __IOINFO_TM_UTF8 || tmode == __IOINFO_TM_UTF16LE) {
                    /*
                     * Note that bCR set above is not valid in case of UNICODE
                     * stream. We need to set it using unicode character.
                     */
                    tmpchar = *(wchar_t *)pch;
                    bCR = tmpchar == LF;
                    pch += 2;
                }

                if (tmode == __IOINFO_TM_ANSI)
                {
                    if( (size = WideCharToMultiByte(consoleCP,
                                                    0,
                                                    &tmpchar,
                                                    1,
                                                    mboutbuf,
                                                    sizeof(mboutbuf),
                                                    NULL,
                                                    NULL)) == 0) {
                        break;
                    } else {
                        if ( WriteFile( (HANDLE)_osfhnd(fh),
                                        mboutbuf,
                                        size,
                                        (LPDWORD)&written,
                                        NULL) ) {
                            /* When we are converting, some convertion can result in
                             * 2 mbcs char -> 1 wchar -> 1 mbcs
                             * (ie. printing out Japanese characters in English ConsoleCP,
                             * the Japanese char will be converted to a single question mark)
                             * Therefore, we want to use how many bytes we converted + lfcount
                             * instead of how many bytes we actually wrote
                             */
                            charcount = lfcount + (int)(pch - (char*) buf);
                            if (written < size)
                                break;
                        } else {
                            dosretval = GetLastError();
                            break;
                        }
                    }

                    if (bCR) {
                        size = 1;
                        mboutbuf[0] = CR;
                        if (WriteFile((HANDLE)_osfhnd(fh),
                                      mboutbuf,
                                      size,
                                      (LPDWORD)&written,
                                      NULL) ) {
                            if (written < size)
                                break;
                            lfcount ++;
                            charcount++;
                        } else {
                            dosretval = GetLastError();
                            break;
                        }
                    }
                }
                else if ( tmode == __IOINFO_TM_UTF8 || tmode == __IOINFO_TM_UTF16LE)
                {
                    if ( _putwch_nolock(tmpchar) == tmpchar )
                    {
                        charcount+=2;
                    }
                    else
                    {
                        dosretval = GetLastError();
                        break;
                    }
                    if (bCR) /* emit carriage return */
                    {
                        size = 1;
                        tmpchar = CR;
                        if ( _putwch_nolock(tmpchar) == tmpchar )
                        {
                            charcount++;
                            lfcount++;
                        }
                        else
                        {
                            dosretval = GetLastError();
                            break;
                        }
                    }
                }
            }
        } else if ( _osfile(fh) & FTEXT ) {
            /* text mode, translate LF's to CR/LF's on output */

            dosretval = 0;          /* no OS error yet */

            if(tmode == __IOINFO_TM_ANSI) {
                char ch;                    /* current character */
                char *p = NULL, *q = NULL;  /* pointers into buf and lfbuf resp. */
                char lfbuf[BUF_SIZE];
                p = (char *)buf;        /* start at beginning of buffer */
                while ( (unsigned)(p - (char *)buf) < cnt ) {
                    q = lfbuf;      /* start at beginning of lfbuf */

                    /* fill the lf buf, except maybe last char */
                    while ( q - lfbuf < sizeof(lfbuf) - 1 &&
                            (unsigned)(p - (char *)buf) < cnt ) {
                        ch = *p++;
                        if ( ch == LF ) {
                            ++lfcount;
                            *q++ = CR;
                        }
                        *q++ = ch;
                    }

                    /* write the lf buf and update total */
                    if ( WriteFile( (HANDLE)_osfhnd(fh),
                                lfbuf,
                                (int)(q - lfbuf),
                                (LPDWORD)&written,
                                NULL) )
                    {
                        charcount += written;
                        if (written < q - lfbuf)
                            break;
                    }
                    else {
                        dosretval = GetLastError();
                        break;
                    }
                }
            } else if ( tmode == __IOINFO_TM_UTF16LE ){
                char lfbuf[BUF_SIZE];
                wchar_t wch;            /* current wide char */
                wchar_t *pu = (wchar_t *)buf;
                wchar_t *qu = NULL;

                while ( (unsigned)((char *)pu - (char *)buf) < cnt ) {
                    qu = (wchar_t *)lfbuf; /* start at beginning of lfbuf */

                    /* fill the lf buf, except maybe last wchar_t */
                    while ( (((char *)qu - lfbuf) < (sizeof(lfbuf) - 2)) &&
                            ((unsigned)((char *)pu - (char *)buf) < cnt )) {
                        wch = *pu++;
                        if ( wch == LF ) {
                            lfcount+=2;
                            *qu++ = CR;
                        }
                        *qu++ = wch;
                    }

                    /* write the lf buf and update total */
                    if ( WriteFile( (HANDLE)_osfhnd(fh),
                                lfbuf,
                                (int)((char*)qu - lfbuf),
                                (LPDWORD)&written,
                                NULL) )
                    {
                        charcount += written;
                        if (written < ((char *)qu - lfbuf))
                            break;
                    }
                    else {
                        dosretval = GetLastError();
                        break;
                    }
                }
            } else {
                /*
                 * Let's divide the lfbuf in 1:2 wher 1 is for storing
                 * widecharacters and 2 if for converting it to UTF8.  This takes
                 * into account the worst case scenario where all the UTF8
                 * characters are 4 byte long.
                 */
                char utf8_buf[(BUF_SIZE*2)/3];
                wchar_t utf16_buf[BUF_SIZE/6];

                wchar_t wch;            /* current wide char */
                wchar_t *pu = (wchar_t *)buf;
                wchar_t *qu = NULL;

                pu = (wchar_t *)buf;
                while ((unsigned)((char *)pu - (char *)buf) < cnt) {
                    int bytes_converted = 0;
                    qu = utf16_buf; /* start at beginning of lfbuf */

                    while ( (((char *)qu - (char *)utf16_buf) <
                             (sizeof(utf16_buf) - 2)) &&
                            ((unsigned)((char *)pu - (char *)buf) < cnt )) {
                        wch = *pu++;
                        if ( wch == LF ) {
                            /* no need to count the linefeeds here: we calculate the written chars in another way */
                            *qu++ = CR;
                        }
                        *qu++ = wch;
                    }

                    bytes_converted = WideCharToMultiByte(
                            CP_UTF8,
                            0,
                            utf16_buf,
                            ((int)((char *)qu - (char *)utf16_buf))/2,
                            utf8_buf,
                            sizeof(utf8_buf),
                            NULL,
                            NULL);

                    if (bytes_converted == 0) {
                        dosretval = GetLastError();
                        break;
                    } else {
                        /*
                         * Here we need to make every attempt to write all the
                         * converted characters. The resaon behind this is,
                         * incase half the bytes of a UTF8 character is
                         * written, it may currupt whole of the stream or file.
                         *
                         * The loop below will make sure we exit only if all
                         * the bytes converted are written (which makes sure no
                         * partial MBCS is written) or there was some error in
                         * the stream.
                         */
                        int bytes_written = 0;
                        do {
                            if (WriteFile(
                                        (HANDLE)_osfhnd(fh),
                                        utf8_buf + bytes_written,
                                        bytes_converted - bytes_written,
                                        &written,
                                        NULL)) {
                                bytes_written += written;
                            } else {
                                dosretval = GetLastError();
                                break;
                            }
                        } while ( bytes_converted > bytes_written);

                        /*
                         * Only way the condition below could be true is if
                         * there was en error. In case of error we need to
                         * break this loop as well.
                         */
                        if (bytes_converted > bytes_written) {
                            break;
                        }
                        /* if this chunk has been committed successfully, update charcount */
                        charcount = (int)((char *)pu - (char *)buf);
                    }
                }
            }
        }
        else {
                /* binary mode, no translation */
                if ( WriteFile( (HANDLE)_osfhnd(fh),
                                (LPVOID)buf,
                                cnt,
                               (LPDWORD)&written,
                                NULL) )
                {
                        dosretval = 0;
                        charcount = written;
                }
                else
                        dosretval = GetLastError();
        }

        if (charcount == 0) {
                /* If nothing was written, first check if an o.s. error,
                   otherwise we return -1 and set errno to ENOSPC,
                   unless a device and first char was CTRL-Z */
                if (dosretval != 0) {
                        /* o.s. error happened, map error */
                        if (dosretval == ERROR_ACCESS_DENIED) {
                            /* wrong read/write mode should return EBADF, not
                               EACCES */
                                errno = EBADF;
                                _doserrno = dosretval;
                        }
                        else
                                _dosmaperr(dosretval);
                        return -1;
                }
                else if ((_osfile(fh) & FDEV) && *(char *)buf == CTRLZ)
                        return 0;
                else {
                        errno = ENOSPC;
                        _doserrno = 0;  /* no o.s. error */
                        return -1;
                }
        }
        else
                /* return adjusted bytes written */
                return charcount - lfcount;
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\wstat.c ===
/***
*wstat.c - get file status (wchar_t version)
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       defines _wstat() - get file status
*
*******************************************************************************/


#define WPRFLAG 1

#ifndef _UNICODE
#define _UNICODE 1
#endif  /* _UNICODE */

#ifndef UNICODE
#define UNICODE 1
#endif  /* UNICODE */

#undef _MBCS /* UNICODE not _MBCS */

#include "stat.c"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\wspawnv.c ===
/***
*wspawnv.c - spawn a child process (wchar_t version)
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       defines _wspawnv() - spawn a child process
*
*******************************************************************************/


#define WPRFLAG 1

#ifndef _UNICODE
#define _UNICODE 1
#endif  /* _UNICODE */

#ifndef UNICODE
#define UNICODE 1
#endif  /* UNICODE */

#undef _MBCS /* UNICODE not _MBCS */

#include "spawnv.c"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\wspawnvp.c ===
/***
*wspawnvp.c - spawn a child process; search along PATH (wchar_t version)
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       defines _wspawnvp() - spawn a child process; search along PATH
*
*******************************************************************************/


#define WPRFLAG 1

#ifndef _UNICODE
#define _UNICODE 1
#endif  /* _UNICODE */

#ifndef UNICODE
#define UNICODE 1
#endif  /* UNICODE */

#undef _MBCS /* UNICODE not _MBCS */

#include "spawnvp.c"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\wstdenvp.c ===
/***
*wstdenvp.c - standard _setenvp routine (wchar_t version)
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       This module is called by the C start-up routine to set up "_wenviron".
*       Its sets up an array of pointers to strings in the environment.
*       The global symbol "_wenviron" is set to point to this array.
*
*******************************************************************************/


#define WPRFLAG 1

#ifndef _UNICODE
#define _UNICODE 1
#endif  /* _UNICODE */

#ifndef UNICODE
#define UNICODE 1
#endif  /* UNICODE */

#undef _MBCS /* UNICODE not _MBCS */

#include "stdenvp.c"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\wstrtime.c ===
/***
*wstrtime.c - contains the function "_wstrtime()"
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       contains the function _wstrtime()
*
*******************************************************************************/


#ifndef _UNICODE
#define _UNICODE 1
#endif  /* _UNICODE */

#ifndef UNICODE
#define UNICODE 1
#endif  /* UNICODE */

#undef _MBCS /* UNICODE not _MBCS */

#include "strtime.c"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\wsystem.c ===
/***
*wsystem.c - pass a command line to the shell (wchar_t version)
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       defines _wsystem() - passes a command to the shell
*
*******************************************************************************/


#define WPRFLAG 1

#ifndef _UNICODE
#define _UNICODE 1
#endif  /* _UNICODE */

#ifndef UNICODE
#define UNICODE 1
#endif  /* UNICODE */

#undef _MBCS /* UNICODE not _MBCS */

#include "system.c"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\wspawnve.c ===
/***
*wspawnve.c - Low level routine eventually called by all _wspawnXX routines
*       also contains all code for _wexecve, called by _wexecXX routines
*       (wchar_t version)
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*
*       This is the low level routine which is eventually invoked by all the
*       _wspawnXX routines.
*
*       This is also the low-level routine which is eventually invoked by
*       all of the _wexecXX routines.
*
*******************************************************************************/


#define WPRFLAG 1

#ifndef _UNICODE
#define _UNICODE 1
#endif  /* _UNICODE */

#ifndef UNICODE
#define UNICODE 1
#endif  /* UNICODE */

#undef _MBCS /* UNICODE not _MBCS */

#include "spawnve.c"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\wtempnam.c ===
/***
*wtempnam.c - generate unique file name (wchar_t version)
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*
*******************************************************************************/


#ifndef _UNICODE
#define _UNICODE 1
#endif  /* _UNICODE */

#ifndef UNICODE
#define UNICODE 1
#endif  /* UNICODE */

#undef _MBCS /* UNICODE not _MBCS */

#include "tempnam.c"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\wtime.inl ===
/***
*wtime.inl - inline definitions for wctime()
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       This file contains the definition of wctime().
*
*       [Public]
*
****/

#if _MSC_VER > 1000
#pragma once
#endif  /* _MSC_VER > 1000 */

#if !defined (__CRTDECL)
#if defined (_M_CEE_PURE)
#define __CRTDECL
#else  /* defined (_M_CEE_PURE) */
#define __CRTDECL   __cdecl
#endif  /* defined (_M_CEE_PURE) */
#endif  /* !defined (__CRTDECL) */

#ifndef _INC_WTIME_INL
#define _INC_WTIME_INL
#ifndef RC_INVOKED

#pragma warning(push)
#pragma warning(disable:4996)

#ifdef _USE_32BIT_TIME_T
static __inline wchar_t * __CRTDECL _wctime(const time_t * _Time)
{
#pragma warning( push )
#pragma warning( disable : 4996 )
    return _wctime32(_Time);
#pragma warning( pop )
}

static __inline errno_t __CRTDECL _wctime_s(wchar_t *_Buffer, size_t _SizeInWords, const time_t * _Time)
{
    return _wctime32_s(_Buffer, _SizeInWords, _Time);
}
#else  /* _USE_32BIT_TIME_T */
static __inline wchar_t * __CRTDECL _wctime(const time_t * _Time)
{
#pragma warning( push )
#pragma warning( disable : 4996 )
    return _wctime64(_Time);
#pragma warning( pop )
}

static __inline errno_t __CRTDECL _wctime_s(wchar_t *_Buffer, size_t _SizeInWords, const time_t * _Time)
{
    return _wctime64_s(_Buffer, _SizeInWords, _Time);
}
#endif  /* _USE_32BIT_TIME_T */

#pragma warning(pop)

#endif  /* RC_INVOKED */
#endif  /* _INC_WTIME_INL */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\wtmpfile.c ===
/***
*wtmpfile.c - create unique file name or file (wchar_t version)
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       defines _wtmpnam().
*
*******************************************************************************/


#ifndef _UNICODE
#define _UNICODE 1
#endif  /* _UNICODE */

#ifndef UNICODE
#define UNICODE 1
#endif  /* UNICODE */

#undef _MBCS /* UNICODE not _MBCS */

#include "tmpfile.c"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\wtof.c ===
/***
*wtof.c - convert wchar_t string to floating point number
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       Converts a wide character string into a floating point number.
*
*******************************************************************************/

#ifndef _UNICODE
#define _UNICODE
#endif  /* _UNICODE */

#include <stdlib.h>
#include <math.h>
#include <cruntime.h>
#include <fltintrn.h>
#include <string.h>
#include <ctype.h>
#include <locale.h>
#include <internal.h>
#include <mtdll.h>
#include <setlocal.h>

/***
*double _wtof(ptr) - convert wide char string to floating point number
*
*Purpose:
*       _wtof recognizes an optional string of whitespace, then
*       an optional sign, then a string of digits optionally
*       containing a decimal point, then an optional e or E followed
*       by an optionally signed integer, and converts all this to
*       to a floating point number.  The first unrecognized
*       character ends the string.
*
*Entry:
*       ptr - pointer to wide char string to convert
*
*Exit:
*       returns floating point value of wide character representation
*
*Exceptions:
*       Input parameters are validated. Refer to the validation section of the function.
*
*******************************************************************************/
double __cdecl _wtof_l(
        REG1 const wchar_t *nptr,
        _locale_t plocinfo
        )
{
        struct _flt fltstruct;      /* temporary structure */
        _LocaleUpdate _loc_update(plocinfo);

        /* validation section */
        _VALIDATE_RETURN(nptr != NULL, EINVAL, 0.0);

        /* scan past leading space/tab characters */
        while ( _iswspace_l(*nptr, _loc_update.GetLocaleT()) )
                nptr++;

        /* let _fltin routine do the rest of the work */
        return( *(double *)&(_wfltin2( &fltstruct, nptr, (int)wcslen(nptr), 0, 0, _loc_update.GetLocaleT() )->dval) );
}

double __cdecl _wtof
(
    REG1 const wchar_t *nptr
)
{
    return _wtof_l(nptr, NULL);
}

unsigned int __wstrgtold12
(
    _LDBL12 *pld12,
    const wchar_t * *p_end_ptr,
    const wchar_t * str,
    int mult12,
    int scale,
    int decpt,
    int implicit_E
)
{
        _LocaleUpdate _loc_update(NULL);

        return __wstrgtold12_l(pld12, p_end_ptr, str, mult12, scale, decpt, implicit_E, _loc_update.GetLocaleT());
}

unsigned __WSTRINGTOLD
(
        _LDOUBLE *pld,
        const wchar_t  * *p_end_ptr,
        const wchar_t  *str,
        int mult12
)
{
        _LocaleUpdate _loc_update(NULL);

        return __WSTRINGTOLD_L(pld, p_end_ptr, str, mult12, _loc_update.GetLocaleT());
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\wtombenv.c ===
/***
*wtombenv.c - convert wide environment block to multibyte
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       defines __wtomb_environ(). Create a multibyte equivalent of
*       an existing wide character environment block.
*
*******************************************************************************/


#include <windows.h>
#include <cruntime.h>
#include <internal.h>
#include <stdlib.h>
#include <dbgint.h>

/***
*__wtomb_environ - copy wide environment block to multibyte environment block
*
*Purpose:
*       Create a multibyte equivalent of an existing wide character
*       environment block.
*
*Entry:
*       Assume _wenviron (global pointer) points to existing wide
*       environment block.
*
*Exit:
*       If success, every wide environment variable has been added to
*       the multibyte environment block and returns 0.
*       If failure, returns -1.
*
*Exceptions:
*       If space cannot be allocated, returns -1.
*
*******************************************************************************/

int __cdecl __wtomb_environ (
        void
        )
{
        char *envp=NULL;
        wchar_t **wenvp = _wenviron;

        /*
         * For every environment variable in the multibyte environment,
         * convert it and add it to the wide environment.
         */

        while (*wenvp)
        {
            int size;

            /* find out how much space is needed */
            if ((size = WideCharToMultiByte(CP_ACP, 0, *wenvp, -1, NULL, 0, NULL, NULL)) == 0)
                return -1;

            /* allocate space for variable */
            if ((envp = (char *) _calloc_crt(size, sizeof(char))) == NULL)
                return -1;

            /* convert it */
            if (WideCharToMultiByte(CP_ACP, 0, *wenvp, -1, envp, size, NULL, NULL) == 0)
            {
                _free_crt(envp);
                return -1;
            }

            /* set it - this is not primary call, so set primary == 0 */
            if(__crtsetenv(&envp, 0)<0)
            {
                if(envp)
                {
                    _free_crt(envp);
                    envp=NULL;
                }
            }

            wenvp++;
        }

        return 0;
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\wtox.c ===
/***
*wtox.c - _wtoi and _wtol conversion
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       Converts a wide character string into an int or long.
*
*******************************************************************************/


#ifndef _UNICODE
#define _UNICODE
#endif  /* _UNICODE */

#include <wchar.h>
#include "atox.c"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\wstdargv.c ===
/***
*wstdargv.c - standard & wildcard _setargv routine (wchar_t version)
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       processes program command line, with or without wildcard expansion
*
*******************************************************************************/


#define WPRFLAG 1

#ifndef _UNICODE
#define _UNICODE 1
#endif  /* _UNICODE */

#ifndef UNICODE
#define UNICODE 1
#endif  /* UNICODE */

#undef _MBCS /* UNICODE not _MBCS */

#include "stdargv.c"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\wunlink.c ===
/***
*wunlink.c - unlink a file (wchar_t version)
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       defines wunlink() - unlink a file
*
*******************************************************************************/


#define WPRFLAG 1

#ifndef _UNICODE
#define _UNICODE 1
#endif  /* _UNICODE */

#ifndef UNICODE
#define UNICODE 1
#endif  /* UNICODE */

#undef _MBCS /* UNICODE not _MBCS */

#include "unlink.c"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\wutime.c ===
/***
*wutime.c - set modification time for a file (wchar_t version)
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       Sets the access/modification times for a file.
*
*******************************************************************************/


#ifndef _UNICODE
#define _UNICODE 1
#endif  /* _UNICODE */

#ifndef UNICODE
#define UNICODE 1
#endif  /* UNICODE */

#undef _MBCS /* UNICODE not _MBCS */

#include "utime.c"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\wstati64.c ===
/***
*wstati64.c - get file status (wchar_t version)
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       defines _wstati64() - get file status
*
*******************************************************************************/

#define WPRFLAG     1

#ifndef _UNICODE
#define _UNICODE    1
#endif  /* _UNICODE */

#ifndef UNICODE
#define UNICODE     1
#endif  /* UNICODE */

#undef _MBCS /* UNICODE not _MBCS */

#define _USE_INT64  1

#include "stat.c"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\wwild.c ===
/***
*wwild.c - wildcard expander (wchar_t version)
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*        expands wildcards in argv
*
*        handles L'*' (none or more of any char) and L'?' (exactly one char)
*
*******************************************************************************/


#define WPRFLAG 1

#ifndef _UNICODE
#define _UNICODE 1
#endif  /* _UNICODE */

#ifndef UNICODE
#define UNICODE 1
#endif  /* UNICODE */

#undef _MBCS /* UNICODE not _MBCS */

#include "wild.c"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\wstati32.c ===
/***
*wstati32.c - get file status (wchar_t version)
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       defines _wstat64i32() - get file status
*
*******************************************************************************/


#define WPRFLAG 1

#ifndef _UNICODE
#define _UNICODE 1
#endif  /* _UNICODE */

#ifndef UNICODE
#define UNICODE 1
#endif  /* UNICODE */

#undef  _MBCS       /* UNICODE not _MBCS */

#define _USE_INT64 0

#include "stat64.c"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\wstat64.c ===
/***
*wstat64.c - get file status (wchar_t version)
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       defines _wstat64() - get file status
*
*******************************************************************************/


#define WPRFLAG 1

#ifndef _UNICODE
#define _UNICODE 1
#endif  /* _UNICODE */

#ifndef UNICODE
#define UNICODE 1
#endif  /* UNICODE */

#undef  _MBCS       /* UNICODE not _MBCS */

#include "stat64.c"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\wwincrt0.c ===
/***
*wwincrt0.c - C runtime Windows EXE start-up routine, wchar_t version
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       This is the actual startup routine for Windows apps using wide
*       characters.  It calls the user's main routine wWinMain() after
*       performing C Run-Time Library initialization.
*
*******************************************************************************/


#define WPRFLAG 1

#ifndef _UNICODE
#define _UNICODE 1
#endif  /* _UNICODE */

#ifndef UNICODE
#define UNICODE 1
#endif  /* UNICODE */

#undef _MBCS /* UNICODE not _MBCS */

#define _WINMAIN_
#include "crt0.c"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\wstrdate.c ===
/***
*wstrdate.c - contains the function "_wstrdate()" (wchar_t version)
*             and "_wstrdate_s" (wchar_t secure version)
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       contains the function _wstrdate() and _wstrdate_s
*
*******************************************************************************/


#ifndef _UNICODE
#define _UNICODE 1
#endif  /* _UNICODE */

#ifndef UNICODE
#define UNICODE 1
#endif  /* UNICODE */

#undef _MBCS /* UNICODE not _MBCS */

#include "strdate.c"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\w_cmp.c ===
/***
*w_cmp.c - W versions of CompareString.
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       Wrapper for CompareStringW.
*
*******************************************************************************/

#include <cruntime.h>
#include <internal.h>
#include <dbgint.h>
#include <stdlib.h>
#include <locale.h>
#include <awint.h>
#include <dbgint.h>
#include <malloc.h>
#include <mtdll.h>
#include <setlocal.h>

/***
*int __cdecl wcsncnt - count wide characters in a string, up to n.
*
*Purpose:
*       Internal local support function. Counts characters in string before NULL.
*       If NULL not found in n chars, then return n.
*
*Entry:
*       const wchar_t *string   - start of string
*       int n                   - byte count
*
*Exit:
*       returns number of wide characaters from start of string to
*       NULL (exclusive), up to n.
*
*Exceptions:
*
*******************************************************************************/

static int __cdecl wcsncnt (
        const wchar_t *string,
        int cnt
        )
{
        int n = cnt;
        wchar_t *cp = (wchar_t *)string;

        while (n-- && *cp)
            cp++;

        return cnt - n - 1;
}

/***
*int __cdecl __crtCompareStringW - Get type information about a wide string.
*
*Purpose:
*  Internal support function. Assumes info in wide string format.
*
*Entry:
*  LCID     Locale      - locale context for the comparison.
*  DWORD    dwCmpFlags  - see NT\Chicago docs
*  LPCWSTR  lpStringn   - wide string to be compared
*  int      cchCountn   - wide char (word) count (NOT including NULL)
*                       (-1 if NULL terminated)
*  int      code_page   - for MB/WC conversion. If 0, use __lc_codepage
*
*Exit:
*  Success: 1 - if lpString1 <  lpString2
*           2 - if lpString1 == lpString2
*           3 - if lpString1 >  lpString2
*  Failure: 0
*
*Exceptions:
*
*******************************************************************************/

static int __cdecl __crtCompareStringW_stat(
        _locale_t plocinfo,
        LCID     Locale,
        DWORD    dwCmpFlags,
        LPCWSTR  lpString1,
        int      cchCount1,
        LPCWSTR  lpString2,
        int      cchCount2,
        int      code_page
        )
{
    /*
     * CompareString will compare past NULL. Must find NULL if in string
     * before cchCountn wide characters.
     */

    if (cchCount1 > 0)
        cchCount1= wcsncnt(lpString1, cchCount1);
    if (cchCount2 > 0)
        cchCount2= wcsncnt(lpString2, cchCount2);

    if (!cchCount1 || !cchCount2)
        return (cchCount1 - cchCount2 == 0) ? 2 :
               (cchCount1 - cchCount2 < 0) ? 1 : 3;

    return CompareStringW( Locale,
                           dwCmpFlags,
                           lpString1,
                           cchCount1,
                           lpString2,
                           cchCount2 );
}

extern "C" int __cdecl __crtCompareStringW(
        _locale_t plocinfo,
        LCID     Locale,
        DWORD    dwCmpFlags,
        LPCWSTR  lpString1,
        int      cchCount1,
        LPCWSTR  lpString2,
        int      cchCount2,
        int      code_page
        )
{
    _LocaleUpdate _loc_update(plocinfo);

    return __crtCompareStringW_stat(
            _loc_update.GetLocaleT(),
            Locale,
            dwCmpFlags,
            lpString1,
            cchCount1,
            lpString2,
            cchCount2,
            code_page
            );
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\w_str.c ===
/***
*w_str.c - W version of GetStringType.
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       Wrapper for GetStringTypeW.
*
*******************************************************************************/

#include <cruntime.h>
#include <internal.h>
#include <stdlib.h>
#include <locale.h>
#include <awint.h>
#include <dbgint.h>
#include <malloc.h>
#include <mtdll.h>
#include <setlocal.h>
#include <sal.h>

/***
*int __cdecl __crtGetStringTypeW - Get type information about a wide string.
*
*Purpose:
*       Internal support function. Assumes info in wide string format. Tries
*       to use NLS API call GetStringTypeW if available and uses GetStringTypeA
*       if it must. If neither are available it fails and returns FALSE.
*
*Entry:
*       DWORD    dwInfoType  - see NT\Chicago docs
*       LPCWSTR  lpSrcStr    - wide string for which character types are
*                              requested
*       int      cchSrc      - wide char (word) count of lpSrcStr (including
*                              NULL if any)
*       LPWORD   lpCharType  - array to receive character type information
*                              (must be same size as lpSrcStr)
*       int      code_page   - for MB/WC conversion. If 0, use __lc_codepage
*       int      lcid        - for A call, specify LCID, If 0, use
*                              __lc_handle[LC_CTYPE].
*
*Exit:
*       Success: TRUE
*       Failure: FALSE
*
*Exceptions:
*
*******************************************************************************/

static BOOL __cdecl __crtGetStringTypeW_stat
(
    _In_opt_ _locale_t plocinfo,
    _In_ DWORD dwInfoType,
    _In_count_(_CchSrc) LPCWSTR lpSrcStr,
    _In_ int cchSrc,
    _Out_ LPWORD lpCharType,
    _In_ int code_page,
    _In_ int lcid
)
{
    if ( cchSrc < -1 )
        return FALSE;

    return GetStringTypeW(dwInfoType, lpSrcStr, cchSrc, lpCharType);
}

extern "C" BOOL __cdecl __crtGetStringTypeW(
        _locale_t plocinfo,
        DWORD    dwInfoType,
        LPCWSTR  lpSrcStr,
        int      cchSrc,
        LPWORD   lpCharType,
        int      code_page,
        int      lcid
        )
{
    _LocaleUpdate _loc_update(plocinfo);

    return __crtGetStringTypeW_stat(
            _loc_update.GetLocaleT(),
            dwInfoType,
            lpSrcStr,
            cchSrc,
            lpCharType,
            code_page,
            lcid
            );
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xcosh.c ===
/* _Cosh function */
#include "xmath.h"
_C_STD_BEGIN

_CRTIMP2_PURE double __CLRCALL_PURE_OR_CDECL _Cosh(double x, double y)
	{	/* compute y * cosh(x), |y| <= 1 */
	switch (_Dtest(&x))
		{	/* test for special codes */
	case _NANCODE:
	case _INFCODE:
		return (x);
	case 0:
		return (y);
	default:	/* finite */
		if (y == 0.0)
			return (y);
		if (x < 0.0)
			x = -x;
		if (x < _Xbig)
			{	/* worth adding in exp(-x) */
			_Exp(&x, 1.0, -1);
			return (y * (x + 0.25 / x));
			}
		switch (_Exp(&x, y, -1))
			{	/* report over/underflow */
		case 0:
			_Feraise(_FE_UNDERFLOW);
			break;
		case _INFCODE:
			_Feraise(_FE_OVERFLOW);
			}
		return (x);
		}
	}
_C_STD_END

/*
 * Copyright (c) 1992-2007 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
 V5.03:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xdateord.cpp ===
// xdateord -- look up date ordering for Microsoft
#include <cruntime.h>
#include <locale>
#include <tchar.h>
#include <mtdll.h>
#include <setlocal.h>

_C_STD_BEGIN
#ifndef MRTDLL
extern "C"
#endif
int __CLRCALL_PURE_OR_CDECL _Getdateorder()
	{	// return date order for current locale
	_TCHAR buf[2] = {0};
	GetLocaleInfo(___lc_handle_func()[LC_TIME], LOCALE_ILDATE,
		buf, sizeof (buf) / sizeof (buf[0]));
	return (buf[0] == _T('0') ? std::time_base::mdy
		: buf[0] == _T('1') ? std::time_base::dmy
		: buf[0] == _T('2') ? std::time_base::ymd
		: std::time_base::no_order);
	}
_C_STD_END

/*
 * Copyright (c) 1992-2007 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
 V5.03:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xdebug.cpp ===
// new and delete operators for debug CRT heap use by C++ Library

 #if defined(_DEBUG)
  #include <xdebug>
  #include <crtdbg.h>

void * __CRTDECL operator new(size_t sz, const std::_DebugHeapTag_t &tag,
	char *file, int line) _THROW_BAD_ALLOC
	{	// allocate storage with debugging information
	void *p = _malloc_dbg(sz, tag._Type, file, line);
	if (p == 0)
		{	// report out of memory
		static const std::bad_alloc nomem;
		_RAISE(nomem);
		}
	return (p);
	}

void * __CRTDECL operator new[](size_t sz, const std::_DebugHeapTag_t &tag,
	char *file, int line) _THROW_BAD_ALLOC
	{	// allocate array storage with debugging information
	return (operator new(sz, tag, file, line));
	}

void  __CRTDECL operator delete(void *p, const std::_DebugHeapTag_t &tag, char *, int)
	_THROW0()
	{	// free storage
	_free_dbg(p, tag._Type);
	}

void  __CRTDECL operator delete[](void *p, const std::_DebugHeapTag_t &tag,
	char *file, int line) _THROW0()
	{	// free array storage
	operator delete(p, tag, file, line);
	}

_STD_BEGIN
const _DebugHeapTag_t _DebugHeapTag = {_CRT_BLOCK};
_MRTIMP2 const _DebugHeapTag_t& __cdecl _DebugHeapTag_func()
{
    return _DebugHeapTag;
}
_STD_END

#pragma comment(linker, "/disallowlib:libc.lib")
#pragma comment(linker, "/disallowlib:libcmt.lib")

 #endif /* defined(_DEBUG) */

/*
 * Copyright (c) 1992-2007 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
 V5.03:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xdnorm.c ===
/* _Dnorm function -- IEEE 754 version */
#include "xmath.h"
_C_STD_BEGIN

_CRTIMP2_PURE short __CLRCALL_PURE_OR_CDECL _Dnorm(unsigned short *ps)
	{	/* normalize double fraction */
	short xchar;
	unsigned short sign = (unsigned short)(ps[_D0] & _DSIGN);

	xchar = 1;
	if ((ps[_D0] &= _DFRAC) != 0 || ps[_D1]
		|| ps[_D2] || ps[_D3])
		{	/* nonzero, scale */
		for (; ps[_D0] == 0; xchar -= 16)
			{	/* shift left by 16 */
			ps[_D0] = ps[_D1], ps[_D1] = ps[_D2];
			ps[_D2] = ps[_D3], ps[_D3] = 0;
			}
		for (; ps[_D0] < 1 << _DOFF; --xchar)
			{	/* shift left by 1 */
			ps[_D0] = (unsigned short)(ps[_D0] << 1 | ps[_D1] >> 15);
			ps[_D1] = (unsigned short)(ps[_D1] << 1 | ps[_D2] >> 15);
			ps[_D2] = (unsigned short)(ps[_D2] << 1 | ps[_D3] >> 15);
			ps[_D3] <<= 1;
			}
		for (; 1 << (_DOFF + 1) <= ps[_D0]; ++xchar)
			{	/* shift right by 1 */
			ps[_D3] = (unsigned short)(ps[_D3] >> 1 | ps[_D2] << 15);
			ps[_D2] = (unsigned short)(ps[_D2] >> 1 | ps[_D1] << 15);
			ps[_D1] = (unsigned short)(ps[_D1] >> 1 | ps[_D0] << 15);
			ps[_D0] >>= 1;
			}
		ps[_D0] &= _DFRAC;
		}
	ps[_D0] |= sign;
	return (xchar);
	}
_C_STD_END

/*
 * Copyright (c) 1992-2007 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
 V5.03:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xdscale.c ===
/* _Dscale function -- IEEE 754 version */
#include "xmath.h"
_C_STD_BEGIN

_CRTIMP2_PURE short __CLRCALL_PURE_OR_CDECL _Dscale(double *px, long lexp)
	{	/* scale *px by 2^xexp with checking */
	unsigned short *ps = (unsigned short *)(char *)px;
	short xchar = (short)((ps[_D0] & _DMASK) >> _DOFF);

	if (xchar == _DMAX)
		return ((short)((ps[_D0] & _DFRAC) != 0 || ps[_D1] != 0
			|| ps[_D2] != 0 || ps[_D3] != 0 ? _NANCODE : _INFCODE));
	else if (xchar == 0 && 0 < (xchar = _Dnorm(ps)))
		return (0);

	if (0 < lexp && _DMAX - xchar <= lexp)
		{	/* overflow, return +/-INF */
		*px = ps[_D0] & _DSIGN ? -_Inf._Double : _Inf._Double;
		return (_INFCODE);
		}
	else if (-xchar < lexp)
		{	/* finite result, repack */
		ps[_D0] = (unsigned short)(ps[_D0] & ~_DMASK
			| (lexp + xchar) << _DOFF);
		return (_FINITE);
		}
	else
		{	/* denormalized, scale */
		unsigned short sign = (unsigned short)(ps[_D0] & _DSIGN);

		ps[_D0] = (unsigned short)(1 << _DOFF | ps[_D0] & _DFRAC);
		lexp += xchar - 1;
		if (lexp < -(48 + 1 + _DOFF) || 0 <= lexp)
			{	/* certain underflow, return +/-0 */
			ps[_D0] = sign;
			ps[_D1] = 0;
			ps[_D2] = 0;
			ps[_D3] = 0;
			return (0);
			}
		else
			{	/* nonzero, align fraction */
			short xexp = (short)lexp;
			unsigned short psx = 0;

			for (; xexp <= -16; xexp += 16)
				{	/* scale by words */
				psx = ps[_D3] | (psx != 0 ? 1 : 0);
				ps[_D3] = ps[_D2];
				ps[_D2] = ps[_D1];
				ps[_D1] = ps[_D0];
				ps[_D0] = 0;
				}
			if ((xexp = (short)-xexp) != 0)
				{	/* scale by bits */
				psx = (ps[_D3] << (16 - xexp)) | (psx != 0 ? 1 : 0);
				ps[_D3] = (unsigned short)(ps[_D3] >> xexp
					| ps[_D2] << (16 - xexp));
				ps[_D2] = (unsigned short)(ps[_D2] >> xexp
					| ps[_D1] << (16 - xexp));
				ps[_D1] = (unsigned short)(ps[_D1] >> xexp
					| ps[_D0] << (16 - xexp));
				ps[_D0] >>= xexp;
				}

			ps[_D0] |= sign;
			if ((0x8000 < psx || 0x8000 == psx && (ps[_D3] & 0x0001) != 0)
				&& (++ps[_D3] & 0xffff) == 0
				&& (++ps[_D2] & 0xffff) == 0
				&& (++ps[_D1] & 0xffff) == 0)
				++ps[_D0];	/* round up */
			else if (ps[_D0] == sign && ps[_D1] == 0
				&& ps[_D2] == 0 && ps[_D3] == 0)
				return (0);
			return (_FINITE);
			}
		}
	}
_C_STD_END

/*
 * Copyright (c) 1992-2007 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
 V5.03:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xexp.c ===
/* _Exp function */
#include "xmath.h"
_C_STD_BEGIN

/* coefficients */
static const double p[] = {	/* courtesy Dr. Tim Prince */
	1.0,
	420.30235984910635,
	15132.70094680474802};
static const double q[] = {	/* courtesy Dr. Tim Prince */
	30.01511290683317,
	3362.72154416553028,
	30265.40189360949691};
static const double c1 = 22713.0 / 32768.0;
static const double c2 = 1.4286068203094172321214581765680755e-6;
static const double hugexp = HUGE_EXP;
static const double invln2 = 1.4426950408889634073599246810018921;

_CRTIMP2_PURE short __CLRCALL_PURE_OR_CDECL _Exp(double *px, double y, short eoff)
	{	/* compute y*e^(*px), (*px) finite, |y| not huge */
	if (*px < -hugexp || y == 0.0)
		{	/* certain underflow */
		*px = 0.0;
		return (0);
		}
	else if (hugexp < *px)
		{	/* certain overflow */
		*px = _Inf._Double;
		return (_INFCODE);
		}
	else
		{	/* xexp won't overflow */
		double g = *px * invln2;
		short xexp = (short)(g + (g < 0.0 ? - 0.5 : + 0.5));

		g = xexp;
		g = (*px - g * c1) - g * c2;
		if (-_Eps._Double < g && g < _Eps._Double)
			*px = y;
		else
			{	/* g*g worth computing */
			const double z = g * g;
			const double w = (q[0] * z + q[1]) * z + q[2];

			g *= (z + p[1]) * z + p[2];
			*px = (w + g) / (w - g) * 2.0 * y;
			--xexp;
			}
		return (_Dscale(px, (long)xexp + eoff));
		}
	}
_C_STD_END

/*
 * Copyright (c) 1992-2007 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
 V5.03:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xfcosh.c ===
/* _FCosh function */
#include "xmath.h"
_C_STD_BEGIN

_CRTIMP2_PURE float __CLRCALL_PURE_OR_CDECL _FCosh(float x, float y)
	{	/* compute y * cosh(x), |y| <= 1 */
	switch (_FDtest(&x))
		{	/* test for special codes */
	case _NANCODE:
	case _INFCODE:
		return (x);
	case 0:
		return (y);
	default:	/* finite */
		if (y == 0.0)
			return (y);
		if (x < 0.0)
			x = -x;
		if (x < _FXbig)
			{	/* worth adding in exp(-x) */
			_FExp(&x, 1.0F, -1);
			return (y * (x + 0.25F / x));
			}
		switch (_FExp(&x, y, -1))
			{	/* report over/underflow */
		case 0:
			_Feraise(_FE_UNDERFLOW);
			break;
		case _INFCODE:
			_Feraise(_FE_OVERFLOW);
			}
		return (x);
		}
	}
_C_STD_END

/*
 * Copyright (c) 1992-2007 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
 V5.03:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xfdnorm.c ===
/* _FDnorm function -- IEEE 754 version */
#include "xmath.h"
_C_STD_BEGIN

_CRTIMP2_PURE short __CLRCALL_PURE_OR_CDECL _FDnorm(unsigned short *ps)
	{	/* normalize float fraction */
	short xchar;
	unsigned short sign = (unsigned short)(ps[_F0] & _FSIGN);

	xchar = 1;
	if ((ps[_F0] &= _FFRAC) != 0 || ps[_F1])
		{	/* nonzero, scale */
		if (ps[_F0] == 0)
			ps[_F0] = ps[_F1], ps[_F1] = 0, xchar -= 16;
		for (; ps[_F0] < 1 << _FOFF; --xchar)
			{	/* shift left by 1 */
			ps[_F0] = (unsigned short)(ps[_F0] << 1 | ps[_F1] >> 15);
			ps[_F1] <<= 1;
			}
		for (; 1 << (_FOFF + 1) <= ps[_F0]; ++xchar)
			{	/* shift right by 1 */
			ps[_F1] = (unsigned short)(ps[_F1] >> 1 | ps[_F0] << 15);
			ps[_F0] >>= 1;
			}
		ps[_F0] &= _FFRAC;
		}
	ps[_F0] |= sign;
	return (xchar);
	}
_C_STD_END

/*
 * Copyright (c) 1992-2007 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
 V5.03:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xfdscale.c ===
/* _FDscale function -- IEEE 754 version */
#include "xmath.h"
_C_STD_BEGIN

_CRTIMP2_PURE short __CLRCALL_PURE_OR_CDECL _FDscale(float *px, long lexp)
	{	/* scale *px by 2^xexp with checking */
	unsigned short *ps = (unsigned short *)(char *)px;
	short xchar = (short)((ps[_F0] & _FMASK) >> _FOFF);

	if (xchar == _FMAX)
		return ((short)((ps[_F0] & _FFRAC) != 0 || ps[_F1] != 0
			? _NANCODE : _INFCODE));
	else if (xchar == 0 && 0 < (xchar = _FDnorm(ps)))
		return (0);

	if (0 < lexp && _FMAX - xchar <= lexp)
		{	/* overflow, return +/-INF */
		*px = ps[_F0] & _FSIGN ? -_FInf._Float : _FInf._Float;
		return (_INFCODE);
		}
	else if (-xchar < lexp)
		{	/* finite result, repack */
		ps[_F0] = (unsigned short)(ps[_F0] & ~_FMASK
			| (lexp + xchar) << _FOFF);
		return (_FINITE);
		}
	else
		{	/* denormalized, scale */
		unsigned short sign = (unsigned short)(ps[_F0] & _FSIGN);

		ps[_F0] = (unsigned short)(1 << _FOFF | ps[_F0] & _FFRAC);
		lexp += xchar - 1;
		if (lexp < -(16 + 1 + _FOFF) || 0 <= lexp)
			{	/* underflow, return +/-0 */
			ps[_F0] = sign;
			ps[_F1] = 0;
			return (0);
			}
		else
			{	/* nonzero, align fraction */
			short xexp = (short)lexp;
			unsigned short psx = 0;

			if (xexp <= -16)
				{	/* scale by words */
				psx = ps[_F1] | (psx != 0 ? 1 : 0);
				ps[_F1] = ps[_F0];
				ps[_F0] = 0;
				xexp += 16;
				}
			if ((xexp = (short)-xexp) != 0)
				{	/* scale by bits */
				psx = (ps[_F1] << (16 - xexp)) | (psx != 0 ? 1 : 0);
				ps[_F1] = (unsigned short)(ps[_F1] >> xexp
					| ps[_F0] << (16 - xexp));
				ps[_F0] >>= xexp;
				}

			ps[_F0] |= sign;
			if ((0x8000 < psx || 0x8000 == psx && (ps[_F1] & 0x0001) != 0)
				&& (++ps[_F1] & 0xffff) == 0)
				++ps[_F0];	/* round up */
			else if (ps[_F0] == sign && ps[_F1] == 0)
				return (0);
			return (_FINITE);
			}
		}
	}
_C_STD_END

/*
 * Copyright (c) 1992-2007 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
 V5.03:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\wwncmdln.c ===
/***
*wwncmdln.c - process command line for wWinMain
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       Prepare command line to be passed to wWinMain.
*
*******************************************************************************/


#define WPRFLAG     1

#ifndef _UNICODE
#define _UNICODE    1
#endif  /* _UNICODE */

#ifndef UNICODE
#define UNICODE     1
#endif  /* UNICODE */

#undef  _MBCS       /* UNICODE not _MBCS */

#include "wincmdln.c"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xfdtest.c ===
/* _FDtest function -- IEEE 754 version */
#include "xmath.h"
_C_STD_BEGIN

_CRTIMP2_PURE short __CLRCALL_PURE_OR_CDECL _FDtest(float *px)
	{	/* categorize *px */
	unsigned short *ps = (unsigned short *)(char *)px;

	if ((ps[_F0] & _FMASK) == _FMAX << _FOFF)
		return ((short)((ps[_F0] & _FFRAC) != 0 || ps[_F1] != 0
			? _NANCODE : _INFCODE));
	else if ((ps[_F0] & ~_FSIGN) != 0 || ps[_F1] != 0)
		return ((ps[_F0] & _FMASK) == 0 ? _DENORM : _FINITE);
	else
		return (0);
	}
_C_STD_END

/*
 * Copyright (c) 1992-2007 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
 V5.03:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\wutime64.c ===
/***
*wutime64.c - set modification time for a file (wchar_t version)
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       Sets the access/modification times for a file.
*
*******************************************************************************/


#ifndef _UNICODE
#define _UNICODE 1
#endif  /* _UNICODE */

#ifndef UNICODE
#define UNICODE 1
#endif  /* UNICODE */

#undef _MBCS /* UNICODE not _MBCS */

#include "utime64.c"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xferaise.c ===
/* _Feraise function */
#include <yvals.h>
#include <errno.h>
#include <ymath.h>
_C_STD_BEGIN

#ifdef _Feraise
#undef _Feraise
#endif
void __CLRCALL_PURE_OR_CDECL _Feraise(int except)
	{	/* report floating-point exception */
	if ((except & (_FE_DIVBYZERO | _FE_INVALID)) != 0)
		errno = EDOM;
	else if ((except & (_FE_UNDERFLOW | _FE_OVERFLOW)) != 0)
		errno = ERANGE;
	}
_C_STD_END

/*
 * Copyright (c) 1992-2007 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
 V5.03:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\w_env.c ===
/***
*w_env.c - W version of GetEnvironmentStrings.
*
*       Copyright (c) Microsoft Corporation.  All rights reserved.
*
*Purpose:
*       Wrapper for GetEnvironmentStringsW.
*
*******************************************************************************/

#include <cruntime.h>
#include <internal.h>
#include <stdlib.h>
#include <setlocal.h>
#include <awint.h>
#include <dbgint.h>

/***
*LPVOID __cdecl __crtGetEnvironmentStringsW - Get wide environment.
*
*Purpose:
*       Internal support function.
*
*Entry:
*       VOID
*
*Exit:
*       LPVOID - pointer to environment block
*
*Exceptions:
*
*******************************************************************************/

LPVOID __cdecl __crtGetEnvironmentStringsW(
        VOID
        )
{
    void *penv;
    wchar_t *pwch;
    wchar_t *wbuffer;
    int total_size;

    if ( NULL == (penv = GetEnvironmentStringsW()) )
        return NULL;

    /* find out how big a buffer is needed */

    pwch = penv;
    while ( *pwch != L'\0' ) {
        if ( *++pwch == L'\0' )
            pwch++;
    }

    total_size = (int)((char *)pwch - (char *)penv) +
                 (int)sizeof( wchar_t );

    /* allocate the buffer */

    if ( NULL == (wbuffer = _malloc_crt( total_size )) ) {
        FreeEnvironmentStringsW( penv );
        return NULL;
    }

    /* copy environment strings to buffer */

    memcpy( wbuffer, penv, total_size );

    FreeEnvironmentStringsW( penv );

    return (LPVOID)wbuffer;
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xdtest.c ===
/* _Dtest function -- IEEE 754 version */
#include "xmath.h"
_C_STD_BEGIN

_CRTIMP2_PURE short __CLRCALL_PURE_OR_CDECL _Dtest(double *px)
	{	/* categorize *px */
	unsigned short *ps = (unsigned short *)(char *)px;

	if ((ps[_D0] & _DMASK) == _DMAX << _DOFF)
		return ((short)((ps[_D0] & _DFRAC) != 0 || ps[_D1] != 0
			|| ps[_D2] != 0 || ps[_D3] != 0 ? _NANCODE : _INFCODE));
	else if ((ps[_D0] & ~_DSIGN) != 0 || ps[_D1] != 0
		|| ps[_D2] != 0 || ps[_D3] != 0)
		return ((ps[_D0] & _DMASK) == 0 ? _DENORM : _FINITE);
	else
		return (0);
	}
_C_STD_END

/*
 * Copyright (c) 1992-2007 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
 V5.03:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xgetwctype.c ===
/* _Getwctype -- return character classification flags for wide character */
#include <xlocinfo.h>
#include <wchar.h>
#include <awint.h>
#include <yvals.h>

_C_STD_BEGIN
_CRTIMP2_PURE short __CLRCALL_PURE_OR_CDECL _Getwctype(wchar_t _Ch,
	const _Ctypevec *_Ctype)
	{	/* return character classification flags for _Ch */
	short _Mask;
	return ((short)(__crtGetStringTypeW(NULL, CT_CTYPE1, &_Ch, 1,
		(LPWORD)&_Mask, _Ctype->_Page, _Ctype->_Hand) == 0
		? 0 : _Mask));
	}

_CRTIMP2_PURE const wchar_t * __CLRCALL_PURE_OR_CDECL _Getwctypes(
	const wchar_t *_First, const wchar_t *_Last,
		short *_Dest, const _Ctypevec *_Ctype)
	{	/* get mask sequence for elements in [_First, _Last) */
	__crtGetStringTypeW(NULL, CT_CTYPE1, _First, (int)(_Last - _First),
		(LPWORD)_Dest, _Ctype->_Page, _Ctype->_Hand);
	return (_Last);
	}

#ifdef MRTDLL
_CRTIMP2_PURE short __CLRCALL_PURE_OR_CDECL _Getwctype(unsigned short _Ch,
	const _Ctypevec *_Ctype)
    {
    return _Getwctype((wchar_t) _Ch, _Ctype);
    }

_CRTIMP2_PURE const unsigned short * __CLRCALL_PURE_OR_CDECL _Getwctypes(
	const unsigned short *_First, const unsigned short *_Last,
		short *_Dest, const _Ctypevec *_Ctype)
    {
    return (const unsigned short *)_Getwctypes((wchar_t *)_First, (wchar_t *) _Last,
                       _Dest, _Ctype);
    }
#endif

_C_STD_END

/*
 * Copyright (c) 1992-2007 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
 V5.03:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\w_loc.c ===
/***
*w_loc.c - W version of GetLocaleInfo.
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       Wrapper for GetLocaleInfoW.
*
*******************************************************************************/

#include <cruntime.h>
#include <internal.h>
#include <stdlib.h>
#include <awint.h>
#include <dbgint.h>
#include <malloc.h>
#include <locale.h>
#include <mtdll.h>
#include <setlocal.h>

/***
*int __cdecl __crtGetLocaleInfoW - Get locale info and return it as a wide
*       string
*
*Purpose:
*       Internal support function. Assumes info in wide string format. Tries
*       to use NLS API call GetLocaleInfoW if available (NT) and uses
*       GetLocaleInfoA if it must (Chicago). If neither are available it fails
*       and returns 0.
*
*Entry:
*       LCID     Locale      - locale context for the comparison.
*       LCTYPE   LCType      - see NT\Chicago docs
*       LPWSTR   lpLCData    - pointer to memory to return data
*       int      cchData     - wide char (word) count of buffer (including
*                              NULL) (if 0, lpLCData is not referenced, size
*                              needed is returned)
*       int      code_page   - for MB/WC conversion. If 0, use __lc_codepage
*
*Exit:
*       Success: the number of characters copied (including NULL).
*       Failure: 0
*
*Exceptions:
*
*******************************************************************************/

static int __cdecl __crtGetLocaleInfoW_stat(
        _locale_t plocinfo,
        LCID    Locale,
        LCTYPE  LCType,
        LPWSTR  lpLCData,
        int     cchData,
        int     code_page
        )
{
    return GetLocaleInfoW(Locale, LCType, lpLCData, cchData);
}

extern "C" int __cdecl __crtGetLocaleInfoW(
        _locale_t plocinfo,
        LCID    Locale,
        LCTYPE  LCType,
        LPWSTR  lpLCData,
        int     cchData,
        int     code_page
        )
{
    _LocaleUpdate _loc_update(plocinfo);

    return __crtGetLocaleInfoW_stat(
            _loc_update.GetLocaleT(),
            Locale,
            LCType,
            lpLCData,
            cchData,
            code_page
            );
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xinvalid.cpp ===
// xinvalid: throw exception from TR1 random number generators
#include <stdexcept>

 #if _HAS_TR1
//  #include <random>
_STD_BEGIN
	namespace tr1 {	// TR1 additions

_CRTIMP2_PURE __declspec(noreturn) void __CLRCALL_PURE_OR_CDECL
	_Xinvalid(_In_z_ const char *_Msg = "");

void __CLRCALL_PURE_OR_CDECL _Xinvalid(const char *msg)
	{	// throw invalid_argument exception
	_THROW_NCEE(invalid_argument, msg);
	}

	}	// namespace tr1
_STD_END
 #endif /* _HAS_TR1 */

/*
 * Copyright (c) 1992-2008 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
V5.05:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\w_map.c ===
/***
*w_map.c - W version of LCMapString.
*
*       Copyright (c) Microsoft Corporation.  All rights reserved.
*
*Purpose:
*       Wrapper for LCMapStringW.
*
*******************************************************************************/

#include <cruntime.h>
#include <internal.h>
#include <stdlib.h>
#include <locale.h>
#include <awint.h>
#include <dbgint.h>
#include <malloc.h>
#include <mtdll.h>
#include <setlocal.h>

/***
*int __cdecl wcsncnt - count wide characters in a string, up to n.
*
*Purpose:
*       Internal local support function. Counts characters in string before
*       null. If null not found in n chars, then return n.
*
*Entry:
*       const wchar_t *string   - start of string
*       int n                - byte count
*
*Exit:
*       returns number of wide characaters from start of string to
*       null (exclusive), up to n.
*
*Exceptions:
*
*******************************************************************************/

static int __cdecl wcsncnt (
        const wchar_t *string,
        int cnt
        )
{
        int n = cnt;
        wchar_t *cp = (wchar_t *)string;

        while (n-- && *cp)
            cp++;

        return cnt - n - 1;
}

/***
*int __cdecl __crtLCMapStringW - Get type information about a wide string.
*
*Purpose:
*       Internal support function. Assumes info in wide string format.
*
*Entry:
*       LCID     Locale      - locale context for the comparison.
*       DWORD    dwMapFlags  - see NT\Chicago docs
*       LPCWSTR  lpSrcStr    - pointer to string to be mapped
*       int      cchSrc      - wide char (word) count of input string
*                              (including NULL if any)
*                              (-1 if NULL terminated)
*       LPWSTR   lpDestStr   - pointer to memory to store mapping
*       int      cchDest     - wide char (word) count of buffer (including NULL)
*       int      code_page   - for MB/WC conversion. If 0, use __lc_codepage
*
*       NOTE:    if LCMAP_SORTKEY is specified, then cchDest refers to number
*                of BYTES, not number of wide chars. The return string will be
*                a series of bytes with a NULL byte terminator.
*
*Exit:
*       Success: if LCMAP_SORKEY:
*                   number of bytes written to lpDestStr (including NULL byte
*                   terminator)
*               else
*                   number of wide characters written to lpDestStr (including
*                   NULL)
*       Failure: 0
*
*Exceptions:
*
*******************************************************************************/

static int __cdecl __crtLCMapStringW_stat(
        _locale_t plocinfo,
        LCID     Locale,
        DWORD    dwMapFlags,
        LPCWSTR  lpSrcStr,
        int      cchSrc,
        LPWSTR   lpDestStr,
        int      cchDest,
        int      code_page
        )
{
    /*
     * LCMapString will map past NULL. Must find NULL if in string
     * before cchSrc wide characters.
     */
    if (cchSrc > 0)
        cchSrc = wcsncnt(lpSrcStr, cchSrc);

    return LCMapStringW( Locale, dwMapFlags, lpSrcStr, cchSrc,
                         lpDestStr, cchDest );
}

int __cdecl __crtLCMapStringW(
        _locale_t plocinfo,
        LCID     Locale,
        DWORD    dwMapFlags,
        LPCWSTR  lpSrcStr,
        int      cchSrc,
        LPWSTR   lpDestStr,
        int      cchDest,
        int      code_page
        )
{
    _LocaleUpdate _loc_update(plocinfo);

    return __crtLCMapStringW_stat(
            _loc_update.GetLocaleT(),
            Locale,
            dwMapFlags,
            lpSrcStr,
            cchSrc,
            lpDestStr,
            cchDest,
            code_page
            );
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xldscale.c ===
/* _LDscale function -- IEEE 754 version */
#include "xmath.h"

#pragma warning(disable:4439)	// C4439: function with a managed parameter must have a __clrcall calling convention

_C_STD_BEGIN

 #if _DLONG == 0
_CRTIMP2_PURE short __CLRCALL_PURE_OR_CDECL _LDscale(long double *px, long lexp)
	{	/* scale *px by 2^lexp with checking -- 64-bit */
	return (_Dscale((double *)px, lexp));
	}

 #elif _DLONG == 1
_CRTIMP2_PURE short __CLRCALL_PURE_OR_CDECL _LDscale(long double *px, long lexp)
	{	/* scale *px by 2^lexp with checking -- 80-bit */
	unsigned short *ps = (unsigned short *)(char *)px;
	short xchar = ps[_L0] & _LMASK;

	if (xchar == _LMAX)
		return ((ps[_L1] & 0x7fff) != 0 || ps[_L2] != 0
			|| ps[_L3] != 0 || ps[_L4] != 0 ? _NANCODE : _INFCODE);
	else if (ps[_L1] == 0 && ps[_L2] == 0
		&& ps[_L3] == 0 && ps[_L4] == 0)
		{	/* zero fraction, clear any exponent */
		ps[_L0] &= _LSIGN;
		return (0);
		}

	if (xchar == 0)
		xchar = 1;	/* correct denormalized exponent */
	xchar += _LDnorm(ps);
	if (0 < lexp && _LMAX - xchar <= lexp)
		{	/* overflow, return +/-INF */
		*px = ps[_L0] & _LSIGN ? -_LInf._Long_double
			: _LInf._Long_double;
		return (_INFCODE);
		}
	else if (-xchar < lexp)
		{	/* finite result, repack */
		ps[_L0] = ps[_L0] & _LSIGN | (lexp + xchar);
		return (_FINITE);
		}
	else
		{	/* denormalized, scale */
		ps[_L0] &= _LSIGN;
		lexp += xchar - 1;
		if (lexp <= -(64 + 1) || 0 <= lexp)
			{	/* underflow, return +/-0 */
			ps[_L1] = 0;
			ps[_L2] = 0;
			ps[_L3] = 0;
			ps[_L4] = 0;
			return (0);
			}
		else
			{	/* nonzero, align fraction */
			short xexp = (short)lexp;
			unsigned short psx = 0;

			for (; xexp <= -16; xexp += 16)
				{	/* scale by words */
				psx = ps[_L4] | (psx != 0 ? 1 : 0);
				ps[_L4] = ps[_L3];
				ps[_L3] = ps[_L2];
				ps[_L2] = ps[_L1];
				ps[_L1] = 0;
				}
			if ((xexp = (short)-xexp) != 0)
				{	/* scale by bits */
				psx = (ps[_L4] << (16 - xexp)) | (psx != 0 ? 1 : 0);
				ps[_L4] = ps[_L4] >> xexp
					| ps[_L3] << 16 - xexp;
				ps[_L3] = ps[_L3] >> xexp
					| ps[_L2] << 16 - xexp;
				ps[_L2] = ps[_L2] >> xexp
					| ps[_L1] << 16 - xexp;
				ps[_L1] >>= xexp;
				}

			if ((0x8000 < psx || 0x8000 == psx && (ps[_L4] & 0x0001) != 0)
				&& (++ps[_L4] & 0xffff) == 0
				&& (++ps[_L3] & 0xffff) == 0
				&& (++ps[_L2] & 0xffff) == 0
				&& (++ps[_L1] & 0xffff) == 0x8000)
				++ps[_L0];	/* round up */
			else if (ps[_L1] == 0 && ps[_L2] == 0
				&& ps[_L3] == 0 && ps[_L4] == 0)
				return (0);
			return (_FINITE);
			}
		}
	}

 #else	/* 1 < _DLONG */
_CRTIMP2_PURE short __CLRCALL_PURE_OR_CDECL _LDscale(long double *px, long lexp)
	{	/* scale *px by 2^lexp with checking -- 128-bit SPARC */
	unsigned short *ps = (unsigned short *)(char *)px;
	short xchar = ps[_L0] & _LMASK;

	if (xchar == _LMAX)
		return (ps[_L1] != 0 || ps[_L2] != 0 || ps[_L3] != 0
			|| ps[_L4] != 0 || ps[_L5] != 0 || ps[_L6] != 0
			|| ps[_L7] != 0 ? _NANCODE : _INFCODE);
	else if (xchar == 0 && 0 < (xchar = _LDnorm(ps)))
		return (0);

	if (0 < lexp && _LMAX - xchar <= lexp)
		{	/* overflow, return +/-INF */
		*px = ps[_L0] & _LSIGN ? -_LInf._Long_double
			: _LInf._Long_double;
		return (_INFCODE);
		}
	else if (-xchar <  lexp)
		{	/* finite result, repack */
		ps[_L0] = ps[_L0] & _LSIGN | (lexp + xchar);
		return (_FINITE);
		}
	else
		{	/* denormalized, scale */
		unsigned short sign = ps[_L0] & _LSIGN;

		ps[_L0] = 1;
		lexp += xchar - 1;
		if (lexp <= -113 || 0 <= lexp)
			{	/* underflow, return +/-0 */
			ps[_L7] = 0;
			ps[_L6] = 0;
			ps[_L5] = 0;
			ps[_L4] = 0;
			ps[_L3] = 0;
			ps[_L2] = 0;
			ps[_L1] = 0;
			ps[_L0] = sign;
			return (0);
			}
		else
			{	/* nonzero, align fraction */
			short xexp = (short)lexp;
			unsigned short psx = 0;

			for (; xexp <= -16; xexp += 16)
				{	/* scale by words */
				psx = ps[_L7] | (psx != 0 ? 1 : 0);
				ps[_L7] = ps[_L6];
				ps[_L6] = ps[_L5];
				ps[_L5] = ps[_L4];
				ps[_L4] = ps[_L3];
				ps[_L3] = ps[_L2];
				ps[_L2] = ps[_L1];
				ps[_L1] = ps[_L0];
				ps[_L0] = 0;
				}
			if ((xexp = (short)-xexp) != 0)
				{	/* scale by bits */
				psx = (ps[_L7] << (16 - xexp)) | (psx != 0 ? 1 : 0);
				ps[_L7] = ps[_L7] >> xexp
					| ps[_L6] << 16 - xexp;
				ps[_L6] = ps[_L6] >> xexp
					| ps[_L5] << 16 - xexp;
				ps[_L5] = ps[_L5] >> xexp
					| ps[_L4] << 16 - xexp;
				ps[_L4] = ps[_L4] >> xexp
					| ps[_L3] << 16 - xexp;
				ps[_L3] = ps[_L3] >> xexp
					| ps[_L2] << 16 - xexp;
				ps[_L2] = ps[_L2] >> xexp
					| ps[_L1] << 16 - xexp;
				ps[_L1] = ps[_L1] >> xexp
					| ps[_L0] << 16 - xexp;
				ps[_L0] = 0;
				}

			ps[_L0] = sign;
			if ((0x8000 < psx || 0x8000 == psx && (ps[_L7] & 0x0001) != 0)
				&& (++ps[_L7] & 0xffff) == 0
				&& (++ps[_L6] & 0xffff) == 0
				&& (++ps[_L5] & 0xffff) == 0
				&& (++ps[_L4] & 0xffff) == 0
				&& (++ps[_L3] & 0xffff) == 0
				&& (++ps[_L2] & 0xffff) == 0
				&& (++ps[_L1] & 0xffff) == 0)
				++ps[_L0];	/* round up */
			else if (ps[_L1] == 0 && ps[_L2] == 0
				&& ps[_L3] == 0 && ps[_L4] == 0
				&& ps[_L5] == 0 && ps[_L6] == 0
				&& ps[_L7] == 0)
				return (0);
			return (_FINITE);
			}
		}
	}
 #endif /* _DLONG */

_C_STD_END

/*
 * Copyright (c) 1992-2007 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
 V5.03:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xldtest.c ===
/* _LDtest function -- IEEE 754 version */
#include "xmath.h"
_C_STD_BEGIN

 #if _DLONG == 0
_CRTIMP2_PURE short __CLRCALL_PURE_OR_CDECL _LDtest(long double *px)
	{	/* categorize *px -- 64-bit */
	return (_Dtest((double *)px));
	}

 #elif _DLONG == 1
_CRTIMP2_PURE short __CLRCALL_PURE_OR_CDECL _LDtest(long double *px)
	{	/* categorize *px -- 80-bit */
	unsigned short *ps = (unsigned short *)(char *)px;
	short xchar = ps[_L0] & _LMASK;

	if (xchar == _LMAX)
		return ((ps[_L1] & 0x7fff) != 0 || ps[_L2] != 0
			|| ps[_L3] != 0 || ps[_L4] != 0 ? _NANCODE : _INFCODE);
	else if (0 < xchar || ps[_L1] != 0 || ps[_L2] || ps[_L3]
		|| ps[_L4])
		return (ps[_L1] < 0x8000 ? _DENORM : _FINITE);
	else
		return (0);
	}

 #else	/* 1 < _DLONG */
_CRTIMP2_PURE short __CLRCALL_PURE_OR_CDECL _LDtest(long double *px)
	{	/* categorize *px -- 128-bit SPARC */
	unsigned short *ps = (unsigned short *)(char *)px;
	short xchar = ps[_L0] & _LMASK;

	if (xchar == _LMAX)
		return (ps[_L1] != 0 || ps[_L2] != 0 || ps[_L3] != 0
			|| ps[_L4] != 0 || ps[_L5] != 0 || ps[_L6] != 0
			|| ps[_L7] != 0 ? _NANCODE : _INFCODE);
	else if (0 < xchar || ps[_L1] != 0 || ps[_L2] != 0 || ps[_L3] != 0
		|| ps[_L4] != 0 || ps[_L5] != 0 || ps[_L6] != 0 || ps[_L7] != 0)
		return (xchar == 0 ? _DENORM : _FINITE);
	else
		return (0);
	}
 #endif /* _DLONG */

_C_STD_END

/*
 * Copyright (c) 1992-2007 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
 V5.03:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xlexp.c ===
/* _LExp function */
#include "xmath.h"
_C_STD_BEGIN

	/* coefficients */

 #if _DLONG <= 1	/* assume IEEE 754 10 byte */
static const long double p[] = {	/* courtesy Dr. Tim Prince */
	42.038913947607355L,
	10096.353102778762831L,
	333228.767219512631062L};
static const long double q[] = {	/* courtesy Dr. Tim Prince */
	1.0L,
	841.167880526530790L,
	75730.834075476293976L,
	666457.534439025262146L};

 #else	/* assume IEEE 754 16 byte */
static const long double p[] = {	/* courtesy Dr. Tim Prince */
	2.9807566520819951922553427799e-12L,
	1.77137207816625148450390487465e-8L,
	1.5047926518149448268177793026372e-5L,
	3.611828913847589925056132680618007e-3L,
	2.3684088648142335389097476188945590e-1L};
static const long double q[] = {	/* courtesy Dr. Tim Prince */
	3.279723985560247033712687707263e-10L,
	6.1415060072086450089090888123384e-7L,
	2.708775201978218837374512615596512e-4L,
	3.5087109907378343612154047611394786e-2L};
 #endif

static const long double c1 = (22713.0L / 32768.0L);
static const long double c2 = 1.4286068203094172321214581765680755e-6L;
static const long double hugexp = LHUGE_EXP;
static const long double invln2 = 1.4426950408889634073599246810018921L;

_CRTIMP2_PURE short __CLRCALL_PURE_OR_CDECL _LExp(long double *px, long double y, short eoff)
	{	/* compute y*e^(*px), (*px) finite, |y| not huge */
	if (*px < -hugexp || y == 0.0L)
		{	/* certain underflow */
		*px = 0.0L;
		return (0);
		}
	else if (hugexp < *px)
		{	/* certain overflow */
		*px = _LInf._Long_double;
		return (_INFCODE);
		}
	else
		{	/* xexp won't overflow */
		long double g = *px * invln2;
		short xexp = (short)(g + (g < 0 ? - 0.5L : + 0.5L));

		g = xexp;
		g = (*px - g * c1) - g * c2;
		if (-_LEps._Long_double < g && g < _LEps._Long_double)
			*px = y;
		else
			{	/* g*g worth computing */

 #if _DLONG <= 1	/* assume IEEE 754 10 byte */
			const long double z = g * g;
			const long double w = ((z + q[1]) * z + q[2]) * z + q[3];

			g *= (p[0] * z + p[1]) * z + p[2];
			*px = (w + g) / (w - g) * 2.0L * y;
			--xexp;

 #else	/* assume IEEE 754 16 byte */
			const long double z = g * g;
			const long double w = ((q[0] * z + q[1]) * z + q[2]) * z + q[3];
			const long double v = (((p[0] * z + p[1]) * z + p[2])
				* z + p[3]) * z + p[4];
			const long double u = g * w - v;

			*px = g * (g + z * (w + w + u)) / (2.0L - (g + z * u)) + g + 1.0;
			*px *= y;
 #endif

			}
		return (_LDscale(px, (long)xexp + eoff));
		}
	}
_C_STD_END

/*
 * Copyright (c) 1992-2007 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
 V5.03:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xfsinh.c ===
/* _FSinh function */
#include "xmath.h"
_C_STD_BEGIN

/* coefficients */
#define NP	(sizeof (p) / sizeof (p[0]) - 1)
static const float p[] = {	/* courtesy Dr. Tim Prince */
	0.00020400F,
	0.00832983F,
	0.16666737F,
	0.99999998F};

_CRTIMP2_PURE float __CLRCALL_PURE_OR_CDECL _FSinh(float x, float y)
	{	/* compute y*sinh(x), |y| <= 1 */
	short neg;

	switch (_FDtest(&x))
		{	/* test for special codes */
	case _NANCODE:
		return (x);
	case _INFCODE:
		return (y != 0.0F ? x : FSIGN(x) ? -y : y);
	case 0:
		return (x * y);
	default:	/* finite */
		if (y == 0.0F)
			return (x < 0.0F ? -y : y);
		if (x < 0.0F)
			x = -x, neg = 1;
		else
			neg = 0;

		if (x < _FRteps._Float)
			x *= y;	/* x tiny */
		else if (x < 1.0F)
			{
			float w = x * x;

			x += ((p[0] * w + p[1]) * w + p[2]) * w * x;
			x *= y;
			}
		else if (x < _FXbig)
			{	/* worth adding in exp(-x) */
			_FExp(&x, 1.0F, -1);
			x = y * (x - 0.25F / x);
			}
		else
			switch (_FExp(&x, y, -1))
				{	/* report over/underflow */
			case 0:
				_Feraise(_FE_UNDERFLOW);
				break;
			case _INFCODE:
				_Feraise(_FE_OVERFLOW);
				}
		return (neg ? -x : x);
		}
	}
#undef NP
_C_STD_END

/*
 * Copyright (c) 1992-2007 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
 V5.03:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xfpostox.cpp ===
// xfpos -- _Postype_to_fpos_t and _Postype_to_mbstate_t conversions
#include <iosfwd>

/*
 * Copyright (c) 1992-2007 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
 V5.03:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xlcosh.c ===
/* _LCosh function */
#include "xmath.h"
_C_STD_BEGIN

_CRTIMP2_PURE long double __CLRCALL_PURE_OR_CDECL _LCosh(long double x, long double y)
	{	/* compute y * cosh(x), |y| <= 1 */
	switch (_LDtest(&x))
		{	/* test for special codes */
	case _NANCODE:
	case _INFCODE:
		return (x);
	case 0:
		return (y);
	default:	/* finite */
		if (y == 0.0L)
			return (y);
		if (x < 0.0)
			x = -x;
		if (x < _LXbig)
			{	/* worth adding in exp(-x) */
			_LExp(&x, 1.0L, -1);
			return (y * (x + 0.25L / x));
			}
		switch (_LExp(&x, y, -1))
			{	/* report over/underflow */
		case 0:
			_Feraise(_FE_UNDERFLOW);
			break;
		case _INFCODE:
			_Feraise(_FE_OVERFLOW);
			}
		return (x);
		}
	}
_C_STD_END

/*
 * Copyright (c) 1992-2007 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
 V5.03:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xldnorm.c ===
/* _LDnorm function -- IEEE 754 version */
#include "xmath.h"
_C_STD_BEGIN

 #if _DLONG == 0
	/* not needed -- 64-bit */

 #elif _DLONG == 1
_CRTIMP2_PURE short __CLRCALL_PURE_OR_CDECL _LDnorm(unsigned short *ps)
	{	/* normalize long double fraction -- 80-bit */
	short xchar;
	unsigned short sign = ps[_L0];

	xchar = 0;
	for (ps[_L0] = 0; ps[_L0] == 0 && ps[_L1] < 0x100;
		xchar -= 16)
		{	/* shift left by 16 */
		ps[_L0] = ps[_L1];
		ps[_L1] = ps[_L2], ps[_L2] = ps[_L3];
		ps[_L3] = ps[_L4], ps[_L4] = 0;
		}
	if (ps[_L0] == 0)
		for (; ps[_L1] < (1U << _LOFF); --xchar)
			{	/* shift left by 1 */
			ps[_L1] = ps[_L1] << 1 | ps[_L2] >> 15;
			ps[_L2] = ps[_L2] << 1 | ps[_L3] >> 15;
			ps[_L3] = ps[_L3] << 1 | ps[_L4] >> 15;
			ps[_L4] <<= 1;
			}
	for (; ps[_L0] != 0; ++xchar)
		{	/* shift right by 1 */
		ps[_L4] = ps[_L4] >> 1 | ps[_L3] << 15;
		ps[_L3] = ps[_L3] >> 1 | ps[_L2] << 15;
		ps[_L2] = ps[_L2] >> 1 | ps[_L1] << 15;
		ps[_L1] = ps[_L1] >> 1 | ps[_L0] << 15;
		ps[_L0] >>= 1;
		}
	ps[_L0] = sign;
	return (xchar);
	}

 #else	/* 1 < _DLONG */
_CRTIMP2_PURE short __CLRCALL_PURE_OR_CDECL _LDnorm(unsigned short *ps)
	{	/* normalize long double fraction -- 128-bit SPARC */
	short xchar;
	unsigned short sign = ps[_L0];

	xchar = 1;
	if (ps[_L1] != 0 || ps[_L2] != 0 || ps[_L3] != 0
		|| ps[_L4] != 0 || ps[_L5] != 0 || ps[_L6] != 0
		|| ps[_L7] != 0)
		{	/* nonzero, scale */
		for (ps[_L0] = 0; ps[_L0] == 0 && ps[_L1] < 0x100;
			xchar -= 16)
			{	/* shift left by 16 */
			ps[_L0] = ps[_L1];
			ps[_L1] = ps[_L2], ps[_L2] = ps[_L3];
			ps[_L3] = ps[_L4], ps[_L4] = ps[_L5];
			ps[_L5] = ps[_L6], ps[_L6] = ps[_L7];
			ps[_L7] = 0;
			}
		for (; ps[_L0] == 0; --xchar)
			{	/* shift left by 1 */
			ps[_L0] = ps[_L0] << 1 | ps[_L1] >> 15;
			ps[_L1] = ps[_L1] << 1 | ps[_L2] >> 15;
			ps[_L2] = ps[_L2] << 1 | ps[_L3] >> 15;
			ps[_L3] = ps[_L3] << 1 | ps[_L4] >> 15;
			ps[_L4] = ps[_L4] << 1 | ps[_L5] >> 15;
			ps[_L5] = ps[_L5] << 1 | ps[_L6] >> 15;
			ps[_L6] = ps[_L6] << 1 | ps[_L7] >> 15;
			ps[_L7] <<= 1;
			}
		for (; 1 < ps[_L0]; ++xchar)
			{	/* shift right by 1 */
			ps[_L7] = ps[_L7] >> 1 | ps[_L6] << 15;
			ps[_L6] = ps[_L6] >> 1 | ps[_L5] << 15;
			ps[_L5] = ps[_L5] >> 1 | ps[_L4] << 15;
			ps[_L4] = ps[_L4] >> 1 | ps[_L3] << 15;
			ps[_L3] = ps[_L3] >> 1 | ps[_L2] << 15;
			ps[_L2] = ps[_L2] >> 1 | ps[_L1] << 15;
			ps[_L1] = ps[_L1] >> 1 | ps[_L0] << 15;
			ps[_L0] >>= 1;
			}
		}
	ps[_L0] = sign;
	return (xchar);
	}
 #endif /* _DLONG */

_C_STD_END

/*
 * Copyright (c) 1992-2007 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
 V5.03:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xlock.cpp ===
// xlock.cpp -- global lock for locales, etc.
#include <stdlib.h>
#include <yvals.h>

 #if _MULTI_THREAD
  #include "xmtx.h"
_STD_BEGIN

  #define MAX_LOCK	4	/* must be power of two */

#pragma warning(disable: 4074)
#pragma init_seg(compiler)

static _Rmtx mtx[MAX_LOCK];
static long init = -1;

#if !defined(MRTDLL)

__thiscall _Init_locks::_Init_locks()
	{	// initialize locks
	if (InterlockedIncrement(&init) == 0)
		for (int count = 0; count < MAX_LOCK; ++count)
			_Mtxinit(&mtx[count]);
	}

__thiscall _Init_locks::~_Init_locks()
	{	// clean up locks
	if (InterlockedDecrement(&init) < 0)
		for (int count = 0; count < MAX_LOCK; ++count)
			_Mtxdst(&mtx[count]);
	}

#endif

_MRTIMP2_NPURE void __cdecl _Init_locks::_Init_locks_ctor(_Init_locks * _This)
	{	// initialize locks
	if (InterlockedIncrement(&init) == 0)
		for (int count = 0; count < MAX_LOCK; ++count)
			_Mtxinit(&mtx[count]);
	}

_MRTIMP2_NPURE void __cdecl _Init_locks::_Init_locks_dtor(_Init_locks * _This)
	{	// clean up locks
	if (InterlockedDecrement(&init) < 0)
		for (int count = 0; count < MAX_LOCK; ++count)
			_Mtxdst(&mtx[count]);
	}

static _Init_locks initlocks;
 
#if !defined(MRTDLL)

__thiscall _Lockit::_Lockit()
	: _Locktype(0)

	{	// lock default mutex
	_Mtxlock(&mtx[0]);
	}

__thiscall _Lockit::_Lockit(int kind)
	: _Locktype(kind)
	{	// lock the mutex
	if (_Locktype < MAX_LOCK)
		_Mtxlock(&mtx[_Locktype]);
	}

__thiscall _Lockit::~_Lockit()
	{	// unlock the mutex
	if (_Locktype < MAX_LOCK)
		_Mtxunlock(&mtx[_Locktype]);
	}

#endif

_MRTIMP2_NPURE void __cdecl _Lockit::_Lockit_ctor(_Lockit * _This)
	{	// lock default mutex
	_Mtxlock(&mtx[0]);
	}

_MRTIMP2_NPURE void __cdecl _Lockit::_Lockit_ctor(_Lockit * _This, int kind)
	{	// lock the mutex
     _This->_Locktype = kind & (MAX_LOCK - 1);
	_Mtxlock(&mtx[_This->_Locktype]);
	}

_MRTIMP2_NPURE void __cdecl _Lockit::_Lockit_dtor(_Lockit * _This)
	{	// unlock the mutex
	_Mtxunlock(&mtx[_This->_Locktype]);
	}

_RELIABILITY_CONTRACT
_MRTIMP2_NPURE void __cdecl _Lockit::_Lockit_ctor(int kind)
	{	// lock the mutex
	_Mtxlock(&mtx[kind & (MAX_LOCK - 1)]);
	}

_RELIABILITY_CONTRACT
_MRTIMP2_NPURE void __cdecl _Lockit::_Lockit_dtor(int kind)
	{	// unlock the mutex
	_Mtxunlock(&mtx[kind & (MAX_LOCK - 1)]);
	}

_STD_END
 #endif	// _MULTI_THREAD

/*
 * Copyright (c) 1992-2007 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
 V5.03:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xlpoly.c ===
/* _LPoly function */
#include "xmath.h"
_C_STD_BEGIN

_CRTIMP2_PURE long double __CLRCALL_PURE_OR_CDECL _LPoly(long double x,
	const long double *tab, int n)
	{	/* compute polynomial */
	long double y;

	for (y = *tab; 0 <= --n; )
		y = y * x + *++tab;
	return (y);
	}
_C_STD_END

/*
 * Copyright (c) 1992-2007 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
 V5.03:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xfexp.c ===
/* _FExp function */
#include "xmath.h"
_C_STD_BEGIN

static const float p[] = {	/* courtesy Dr. Tim Prince */
	1.0F,
	60.09114349F};
static const float q[] = {	/* courtesy Dr. Tim Prince */
	12.01517514F,
	120.18228722F};
static const float c1 = (22713.0F / 32768.0F);
static const float c2 = 1.4286068203094172321214581765680755e-6F;
static const float hugexp = FHUGE_EXP;
static const float invln2 = 1.4426950408889634073599246810018921F;

_CRTIMP2_PURE short __CLRCALL_PURE_OR_CDECL _FExp(float *px, float y, short eoff)
	{	/* compute y*e^(*px), (*px) finite, |y| not huge */
	if (*px < -hugexp || y == 0.0F)
		{	/* certain underflow */
		*px = 0.0F;
		return (0);
		}
	else if (hugexp < *px)
		{	/* certain overflow */
		*px = _FInf._Float;
		return (_INFCODE);
		}
	else
		{	/* xexp won't overflow */
		float g = *px * invln2;
		short xexp = (short)(g + (g < 0.0F ? - 0.5F : + 0.5F));

		g = xexp;
		g = (float)((*px - g * c1) - g * c2);
		if (-_FEps._Float < g && g < _FEps._Float)
			*px = y;
		else
			{	/* g*g worth computing */
			const float z = g * g;
			const float w = q[0] * z + q[1];

			g *= z + p[1];
			*px = (w + g) / (w - g) * 2.0F * y;
			--xexp;
			}
		return (_FDscale(px, (long)xexp + eoff));
		}
	}
_C_STD_END

/*
 * Copyright (c) 1992-2007 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
 V5.03:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xlvalues.c ===
/* values used by math functions -- IEEE 754 long version */
#if defined(_M_CEE_PURE)
#if defined(MRTDLL)
#undef MRTDLL
#endif
#if defined(MRTDLL)
#undef CRTDLL
#endif
#endif

#include "xmath.h"
_C_STD_BEGIN

 #if _DLONG == 0
		/* macros -- 64-bit */
  #define NBITS	(48 + _DOFF)

  #if _D0 == 0
   #define INIT(w0)		{w0, 0, 0, 0}
   #define INIT2(w0, w1)	{w0, 0, 0, w1}

  #else /* _DLONG == 0 */
   #define INIT(w0)		{0, 0, 0, w0}
   #define INIT2(w0, w1)	{w1, 0, 0, w0}
  #endif /* _DLONG == 0 */

		/* static data */
extern /* const */ _Dconst _LDenorm = {INIT2(0, 1)};
extern /* const */ _Dconst _LEps = {
	INIT((_DBIAS - NBITS - 1) << _DOFF)};
extern /* const */ _Dconst _LInf = {INIT(_DMAX << _DOFF)};
extern /* const */ _Dconst _LNan = {INIT((_DMAX << _DOFF)
	| (1 << (_DOFF - 1)))};
extern /* const */ _Dconst _LSnan = {INIT2(_DMAX << _DOFF, 1)};
extern /* const */ _Dconst _LRteps = {
	INIT((_DBIAS - NBITS / 2) << _DOFF)};

 #elif _DLONG == 1
		/* macros -- 80-bit */
  #define NBITS	64

  #if _D0 == 0
   #define INIT(w0, w1)		{w0, w1, 0, 0, 0}
   #define INIT3(w0, w1, wn)	{w0, w1, 0, 0, wn}

  #else /* _D0 == 0 */
   #define INIT(w0, w1)		{0, 0, 0, w1, w0}
   #define INIT3(w0, w1, wn)	{wn, 0, 0, w1, w0}
  #endif /* _D0 == 0 */

		/* static data */
extern /* const */ _Dconst _LDenorm = {INIT3(0, 0, 1)};
extern /* const */ _Dconst _LEps = {
	INIT(_LBIAS - NBITS - 1, 0x8000)};
extern /* const */ _Dconst _LInf = {INIT(_LMAX, 0x8000)};
extern /* const */ _Dconst _LNan = {INIT(_LMAX, 0xc000)};
extern /* const */ _Dconst _LSnan = {INIT3(_LMAX, 0x8000, 1)};
extern /* const */ _Dconst _LRteps = {
	INIT(_LBIAS - NBITS / 2, 0x8000)};

 #else /* 1 < _DLONG */
		/* macros -- 128-bit SPARC */
  #define NBITS	128

  #if _D0 == 0
   #define INIT(w0, w1)		{w0, w1, 0, 0, 0, 0, 0, 0}
   #define INIT3(w0, w1, wn)	{w0, w1, 0, 0, 0, 0, 0, wn}

  #else /* _D0 == 0 */
   #define INIT(w0, w1)		{0, 0, 0, 0, 0, 0, w1, w0}
   #define INIT3(w0, w1, wn)	{wn, 0, 0, 0, 0, 0, w1, w0}
  #endif /* _D0 == 0 */

		/* static data */
extern /* const */ _Dconst _LDenorm = {INIT3(0, 0, 1)};
extern /* const */ _Dconst _LEps = {
	INIT(_LBIAS - NBITS - 1, 0x8000)};
extern /* const */ _Dconst _LInf = {INIT(_LMAX, 0)};
extern /* const */ _Dconst _LNan = {INIT(_LMAX, 0x8000)};
extern /* const */ _Dconst _LSnan = {INIT3(_LMAX, 0, 1)};
extern /* const */ _Dconst _LRteps = {
	INIT(_LBIAS - NBITS / 2, 0x8000)};
 #endif /* _DLONG */

extern /* const */ long double _LXbig = (NBITS + 1) * 347L / 1000;
_CRTIMP2_PURE extern /* const */ long double _LZero = 0.0L;
_C_STD_END

/*
 * Copyright (c) 1992-2007 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
 V5.03:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xmath.h ===
/* xmath.h internal header for Microsoft C */
#ifndef _XMATH
#define _XMATH
#include <errno.h>
#include <math.h>
#include <stddef.h>
#ifndef _YMATH
 #include <ymath.h>
#endif

_C_STD_BEGIN

		/* FLOAT PROPERTIES */
#define _DBIAS	0x3fe
#define _DOFF	4
#define _FBIAS	0x7e
#define _FOFF	7
#define _FRND	1

 #define _D0	3	/* little-endian, small long doubles */
 #define _D1	2
 #define _D2	1
 #define _D3	0
 #define _DLONG	0
 #define _LBIAS	0x3fe
 #define _LOFF	4

		/* IEEE 754 double properties */
#define _DFRAC	((unsigned short)((1 << _DOFF) - 1))
#define _DMASK	((unsigned short)(0x7fff & ~_DFRAC))
#define _DMAX	((unsigned short)((1 << (15 - _DOFF)) - 1))
#define _DSIGN	((unsigned short)0x8000)
#define DSIGN(x)	(((unsigned short *)&(x))[_D0] & _DSIGN)
#define HUGE_EXP	(int)(_DMAX * 900L / 1000)
#define HUGE_RAD	2.73e9	/* ~ 2^33 / pi */
#define SAFE_EXP	((unsigned short)(_DMAX >> 1))

		/* IEEE 754 float properties */
#define _FFRAC	((unsigned short)((1 << _FOFF) - 1))
#define _FMASK	((unsigned short)(0x7fff & ~_FFRAC))
#define _FMAX	((unsigned short)((1 << (15 - _FOFF)) - 1))
#define _FSIGN	((unsigned short)0x8000)
#define FSIGN(x)	(((unsigned short *)&(x))[_F0] & _FSIGN)
#define FHUGE_EXP	(int)(_FMAX * 900L / 1000)
#define FHUGE_RAD	31.8	/* ~ 2^10 / pi */
#define FSAFE_EXP	((unsigned short)(_FMAX >> 1))

 #define _F0	1	/* little-endian order */
 #define _F1	0

		/* IEEE 754 long double properties */
#define _LFRAC	((unsigned short)(-1))
#define _LMASK	((unsigned short)0x7fff)
#define _LMAX	((unsigned short)0x7fff)
#define _LSIGN	((unsigned short)0x8000)
#define LSIGN(x)	(((unsigned short *)&(x))[_L0] & _LSIGN)
#define LHUGE_EXP	(int)(_LMAX * 900L / 1000)
#define LHUGE_RAD	2.73e9	/* ~ 2^33 / pi */
#define LSAFE_EXP	((unsigned short)(_LMAX >> 1))

 #define _L0	3	/* little-endian, small long doubles */
 #define _L1	2
 #define _L2	1
 #define _L3	0
 #define _L4	xxx

		/* return values for testing functions */
#define FINITE	_FINITE
#define INF		_INFCODE
#define NAN		_NANCODE

#ifndef MRTDLL
#ifndef _M_CEE_PURE
_C_LIB_DECL
#endif
#endif

		/* double declarations */
_CRTIMP2_PURE short __CLRCALL_PURE_OR_CDECL _Dnorm(unsigned short *);
_CRTIMP2_PURE short __CLRCALL_PURE_OR_CDECL _Dscale(double *, long);
_CRTIMP2_PURE double __CLRCALL_PURE_OR_CDECL _Poly(double, const double *, int);

extern _CRTIMP2_PURE /* const */ _Dconst _Eps, _Rteps;
extern _CRTIMP2_PURE /* const */ double _Xbig;

		/* float declarations */
_CRTIMP2_PURE short __CLRCALL_PURE_OR_CDECL _FDnorm(unsigned short *);
_CRTIMP2_PURE short __CLRCALL_PURE_OR_CDECL _FDscale(float *, long);

extern _CRTIMP2_PURE /* const */ _Dconst _FEps, _FRteps;
extern _CRTIMP2_PURE /* const */ float _FXbig;

		/* long double functions */
_CRTIMP2_PURE short __CLRCALL_PURE_OR_CDECL _LDnorm(unsigned short *);
_CRTIMP2_PURE short __CLRCALL_PURE_OR_CDECL _LDscale(long double *, long);
_CRTIMP2_PURE long double __CLRCALL_PURE_OR_CDECL _LPoly(long double, const long double *, int);

extern _CRTIMP2_PURE /* const */ _Dconst _LEps, _LRteps;
extern _CRTIMP2_PURE /* const */ long double _LXbig;
#ifndef MRTDLL
#ifndef _M_CEE_PURE
_END_C_LIB_DECL
#endif
#endif
_C_STD_END
#endif /* _XMATH */

/*
 * Copyright (c) 1992-2007 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
 V5.03:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xfvalues.c ===
/* values used by math functions -- IEEE 754 float version */
#if defined(_M_CEE_PURE)
#if defined(MRTDLL)
#undef MRTDLL
#endif
#if defined(MRTDLL)
#undef CRTDLL
#endif
#endif

#include "xmath.h"
_C_STD_BEGIN

		/* macros */
#define NBITS	(16 + _FOFF)

 #if _D0 == 0
  #define INIT(w0)		{w0, 0}
  #define INIT2(w0, w1)	{w0, w1}

 #else /* _D0 == 0 */
  #define INIT(w0)		{0, w0}
  #define INIT2(w0, w1)	{w1, w0}
 #endif /* _D0 == 0 */

		/* static data */
extern /* const */ _Dconst _FDenorm = {INIT2(0, 1)};
extern /* const */ _Dconst _FEps = {
	INIT((_FBIAS - NBITS - 1) << _FOFF)};
extern /* const */ _Dconst _FInf = {INIT(_FMAX << _FOFF)};
extern /* const */ _Dconst _FNan = {INIT((_FMAX << _FOFF)
	| (1 << (_FOFF - 1)))};
extern /* const */ _Dconst _FSnan = {INIT2(_FMAX << _FOFF, 1)};
extern /* const */ _Dconst _FRteps = {
	INIT((_FBIAS - NBITS / 2) << _FOFF)};

extern /* const */ float _FXbig = (NBITS + 1) * 347L / 1000;
extern /* const */ float _FZero = 0.0F;
_C_STD_END

/*
 * Copyright (c) 1992-2007 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
 V5.03:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xlgamma.cpp ===
// xlgamma: moderately accurate lgamma function for TR1 random
#include <cmath>

 #if _HAS_TR1
//  #include <random>
_STD_BEGIN
	namespace tr1 {	// TR1 additions

_CRTIMP2_PURE float __CLRCALL_PURE_OR_CDECL _XLgamma(float);
_CRTIMP2_PURE double __CLRCALL_PURE_OR_CDECL _XLgamma(double);
_CRTIMP2_PURE long double __CLRCALL_PURE_OR_CDECL _XLgamma(long double);

float __CLRCALL_PURE_OR_CDECL _XLgamma(float x)
	{	// moderately accurate log gamma
	static float coeff[6] =
		{ 76.18009172947146F,
		  -86.50532032941677F,
		  24.01409824083091F,
		  -1.23173972450155F,
		  0.1208650973866179E-2F,
		  -0.5395239384953E-5F};

	float val0 = x + 5.5F;
	val0 -= (x + 0.5F) * _STD log(val0);
	float val1 = 1.000000000190015F;
	float y = x + 1.0F;

	for (int i = 0; i < 6; ++i, y += 1.0)
		val1 += coeff[i] / y;
	return (-val0 + _STD log(2.5066282746310005F * val1 / x));
	}

double __CLRCALL_PURE_OR_CDECL _XLgamma(double x)
	{	// moderately accurate log gamma
	static double coeff[6] =
		{ 76.18009172947146,
		  -86.50532032941677,
		  24.01409824083091,
		  -1.23173972450155,
		  0.1208650973866179E-2,
		  -0.5395239384953E-5};

	double val0 = x + 5.5;
	val0 -= (x + 0.5) * _STD log(val0);
	double val1 = 1.000000000190015;
	double y = x + 1;

	for (int i = 0; i < 6; ++i, y += 1.0)
		val1 += coeff[i] / y;
	return (-val0 + _STD log(2.5066282746310005 * val1 / x));
	}

long double __CLRCALL_PURE_OR_CDECL _XLgamma(long double x)
	{	// moderately accurate log gamma
	static long double coeff[6] =
		{ 76.18009172947146,
		  -86.50532032941677,
		  24.01409824083091,
		  -1.23173972450155,
		  0.1208650973866179E-2,
		  -0.5395239384953E-5};

	long double val0 = x + 5.5;
	val0 -= (x + 0.5) * _STD log(val0);
	long double val1 = 1.000000000190015;
	long double y = x + 1;

	for (int i = 0; i < 6; ++i, y += 1.0)
		val1 += coeff[i] / y;
	return (-val0 + _STD log(2.5066282746310005 * val1 / x));
	}

	}	// namespace tr1
_STD_END
 #endif /* _HAS_TR1 */

/*
 * Copyright (c) 1992-2008 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
V5.05:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xmtx.c ===
/*	xmtx.c -- mutex support for VC++ */
#include "xmtx.h"


 #if !_MULTI_THREAD

 #else /* !_MULTI_THREAD */
/* Win32 critical sections are recursive, but
   Win32 does not have once-function */

void  __CLRCALL_PURE_OR_CDECL _Once(_Once_t *_Cntrl, void (*_Func)(void))
	{	/* execute _Func exactly one time */
	_Once_t old;
	if (*_Cntrl == 2)
		;
	else if ((old = InterlockedExchange(_Cntrl, 1)) == 0)
		{	/* execute _Func, mark as executed */
		_Func();
		*_Cntrl = 2;
		}
	else if (old == 2)
		*_Cntrl = 2;
	else
		while (*_Cntrl != 2)
			Sleep(1);
	}

void  __CLRCALL_PURE_OR_CDECL _Mtxinit(_Rmtx *_Mtx)
	{	/* initialize mutex */
	InitializeCriticalSection(_Mtx);
	}

void  __CLRCALL_PURE_OR_CDECL _Mtxdst(_Rmtx *_Mtx)
	{	/* delete mutex */
	DeleteCriticalSection(_Mtx);
	}

_RELIABILITY_CONTRACT
void  __CLRCALL_PURE_OR_CDECL _Mtxlock(_Rmtx *_Mtx)
	{	/* lock mutex */
#ifdef _M_CEE
	System::Threading::Thread::BeginThreadAffinity();
#endif
	EnterCriticalSection(_Mtx);
	}

_RELIABILITY_CONTRACT
void  __CLRCALL_PURE_OR_CDECL _Mtxunlock(_Rmtx *_Mtx)
	{	/* unlock mutex */
	LeaveCriticalSection(_Mtx);
#ifdef _M_CEE
	System::Threading::Thread::EndThreadAffinity();
#endif
	}
 #endif /* !_MULTI_THREAD */

/*
 * Copyright (c) 1992-2007 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
 V5.03:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xmtx.h ===
/* xmtx.h internal header */
#pragma once
#ifndef _XMTX
#define _XMTX
#include <stdlib.h>
#ifndef _YVALS
 #include <yvals.h>
#endif /* _YVALS */

#ifndef MRTDLL
#ifndef _M_CEE_PURE
_C_LIB_DECL
#endif
#endif

#ifdef MRTDLL
/* We want to declare Enter/LeaveCriticalSection as p/invoke */
#define EnterCriticalSection _undefined_EnterCriticalSection
#define LeaveCriticalSection _undefined_LeaveCriticalSection
#endif

#include <windows.h>

#ifdef MRTDLL
#undef EnterCriticalSection
#undef LeaveCriticalSection

_RELIABILITY_CONTRACT
[System::Security::SuppressUnmanagedCodeSecurity]
[System::Runtime::InteropServices::DllImport("kernel32.dll")]
void EnterCriticalSection(LPCRITICAL_SECTION lpCriticalSection);

_RELIABILITY_CONTRACT
[System::Security::SuppressUnmanagedCodeSecurity]
[System::Runtime::InteropServices::DllImport("kernel32.dll")]
void LeaveCriticalSection(LPCRITICAL_SECTION lpCriticalSection);

#endif

typedef CRITICAL_SECTION _Rmtx;

#ifdef _M_CEE_PURE
void __clrcall _Mtxinit(_Rmtx *);
void __clrcall _Mtxdst(_Rmtx *);
void __clrcall _Mtxlock(_Rmtx *);
void __clrcall _Mtxunlock(_Rmtx *);
#else
_MRTIMP2 void __cdecl _Mtxinit(_Rmtx *);
_MRTIMP2 void __cdecl _Mtxdst(_Rmtx *);
_MRTIMP2 void __cdecl _Mtxlock(_Rmtx *);
_MRTIMP2 void __cdecl _Mtxunlock(_Rmtx *);
#endif

 #if !_MULTI_THREAD
  #define _Mtxinit(mtx)
  #define _Mtxdst(mtx)
  #define _Mtxlock(mtx)
  #define _Mtxunlock(mtx)

typedef char _Once_t;

  #define _Once(cntrl, func)	if (*(cntrl) == 0) (func)(), *(cntrl) = 2
  #define _ONCE_T_INIT	0

 #elif _WIN32_C_LIB
typedef long _Once_t;

#ifdef _M_CEE_PURE
void __clrcall _Once(_Once_t *, void (__cdecl *)(void));
#else
_MRTIMP2 void __cdecl _Once(_Once_t *, void (__cdecl *)(void));
#endif
 #define _ONCE_T_INIT	0

 #endif /* _MULTI_THREAD */
#ifndef MRTDLL
#ifndef _M_CEE_PURE
_END_C_LIB_DECL
#endif
#endif
#endif /* _XMTX */

/*
 * Copyright (c) 1992-2006 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
 V5.02:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xmutex.cpp ===
//	xmutex.cpp -- implement mutex lock for iostreams
#include <xdebug>
#include <yvals.h>

 #if _MULTI_THREAD && _IOSTREAM_OP_LOCKS
  #include "xmtx.h"
_STD_BEGIN

#if !defined(MRTDLL)
__thiscall _Mutex::_Mutex()
	: _Mtx(_NEW_CRT _Rmtx)
	{	// initialize recursive mutex object
	_Mtxinit((_Rmtx*)_Mtx);
	}

__thiscall _Mutex::~_Mutex()
	{	// release resources allocated to mutex object
	_Mtxdst((_Rmtx*)_Mtx);
	_DELETE_CRT((_Rmtx*)_Mtx);
	}

void __thiscall _Mutex::_Lock()
	{	// lock mutex
	_Mtxlock((_Rmtx*)_Mtx);
	}

void __thiscall _Mutex::_Unlock()
	{	// unlock mutex
	_Mtxunlock((_Rmtx*)_Mtx);
	}
#endif // !defined(MRTDLL)

_MRTIMP2_NPURE_NCEEPURE void __CLRCALL_PURE_OR_CDECL _Mutex::_Mutex_ctor(_Mutex * _This)
	{	// initialize recursive mutex object
    _This->_Mtx = _NEW_CRT _Rmtx;
	_Mtxinit((_Rmtx*)_This->_Mtx);
	}

_MRTIMP2_NPURE_NCEEPURE void __CLRCALL_PURE_OR_CDECL _Mutex::_Mutex_dtor(_Mutex * _This)
	{	// release resources allocated to mutex object
	_Mtxdst((_Rmtx*)_This->_Mtx);
	_DELETE_CRT((_Rmtx*)_This->_Mtx);
	}

_MRTIMP2_NPURE_NCEEPURE void __CLRCALL_PURE_OR_CDECL _Mutex::_Mutex_Lock(_Mutex * _This)
	{	// lock mutex
	_Mtxlock((_Rmtx*)_This->_Mtx);
	}

_MRTIMP2_NPURE_NCEEPURE void __CLRCALL_PURE_OR_CDECL _Mutex::_Mutex_Unlock(_Mutex * _This)
	{	// unlock mutex
	_Mtxunlock((_Rmtx*)_This->_Mtx);
	}
_STD_END
 #endif	/* _MULTI_THREAD */

/*
 * Copyright (c) 1992-2007 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
 V5.03:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xncommod.c ===
/***
*xncommode.c - set global file commit mode flag to nocommit
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       Sets the global file commit mode flag to nocommit.  This is the default.
*
*       This is a special version for the DLL model.  This object goes into
*       MSVCRT.LIB (and therefore into the client EXE) and not into the
*       CRTL in a DLL (MSVCRTXX.DLL).  It is identical to ncommode.obj
*       except that the latter has a DLL export definition in the DLL model.
*
*******************************************************************************/

#define SPECIAL_CRTEXE  /* turn off _CRTIMP for decl. of _commode */
#if !defined (_DLL)
#define _DLL            /* also necessary to turn off _CRTIMP */
#endif  /* !defined (_DLL) */

#ifdef CRTDLL
#undef CRTDLL
#endif  /* CRTDLL */

#ifdef MRTDLL
#undef MRTDLL
#endif  /* MRTDLL */

#include <cruntime.h>
#include <internal.h>

/* set default file commit mode to nocommit */
int _commode = 0;
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xpoly.c ===
/* _Poly function */
#include "xmath.h"
_C_STD_BEGIN

_CRTIMP2_PURE double __CLRCALL_PURE_OR_CDECL _Poly(double x, const double *tab, int n)
	{	/* compute polynomial */
	double y;

	for (y = *tab; 0 <= --n; )
		y = y * x + *++tab;
	return (y);
	}
_C_STD_END

/*
 * Copyright (c) 1992-2007 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
 V5.03:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xlocale.cpp ===
// xlocale -- class locale exotic char member functions
#include <istream>
#include <locale>
#include <xdebug>
_STD_BEGIN

 #pragma warning(disable: 4786)

 #pragma warning(disable: 4074)
 #pragma init_seg(compiler)

typedef char_traits<char> _Traits;
typedef istreambuf_iterator<char, _Traits> _Initer;
typedef ostreambuf_iterator<char, _Traits> _Outiter;

	// facets associated with C categories
#define ADDFAC(Facet, cat, ptrimp, ptrloc) \
	if ((_CATMASK(Facet::_Getcat()) & cat) == 0) \
		; \
	else if (ptrloc == 0) \
		ptrimp->_Addfac(_NEW_CRT Facet(lobj), Facet::id); \
	else \
		ptrimp->_Addfac((locale::facet *)&_USE(*ptrloc, Facet), Facet::id);

// moved from locale to ease subsetting
typedef collate<char> _T5;
typedef messages<char> _T6;
typedef money_get<char, _Initer> _T7;
typedef money_put<char, _Outiter> _T9;
typedef moneypunct<char, false> _T11;
typedef moneypunct<char, true> _T12;
typedef time_get<char, _Initer> _T13;
typedef time_put<char, _Outiter> _T14;


void locale::_Locimp::_Makexloc(const _Locinfo& lobj,
	locale::category cat, _Locimp *ptrimp, const locale *ptrloc)
	{	// setup exotic char part of a new locale
	ADDFAC(_T5, cat, ptrimp, ptrloc);
	ADDFAC(_T6, cat, ptrimp, ptrloc);
	ADDFAC(_T7, cat, ptrimp, ptrloc);
	ADDFAC(_T9, cat, ptrimp, ptrloc);
	ADDFAC(_T11, cat, ptrimp, ptrloc);
	ADDFAC(_T12, cat, ptrimp, ptrloc);
	ADDFAC(_T13, cat, ptrimp, ptrloc);
	ADDFAC(_T14, cat, ptrimp, ptrloc);
	}
_STD_END

/*
 * Copyright (c) 1992-2007 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
 V5.03:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xoutrange.cpp ===
// xrange: throw out_of_range object for TR1 array template
#include <stdexcept>

 #if _IS_EMBEDDED
 #else /* _IS_EMBEDDED */
  #include <array>

_STD_BEGIN
	namespace tr1 {	// TR1 additions

void __CLRCALL_PURE_OR_CDECL _Xoutrange()
	{	// report an out_of_range error
	_THROW_NCEE(out_of_range, "invalid array<T> subscript");
	}

	}	// namespace tr1
_STD_END
 #endif /* _IS_EMBEDDED */

/*
 * Copyright (c) 1992-2008 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
V5.05:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xlocinfo.h ===
/* xlocinfo.h internal header for Microsoft C */
#pragma once
#ifndef _XLOCINFO
#define _XLOCINFO
#include <ctype.h>
#include <locale.h>
#include <wchar.h>
#ifndef _YVALS
 #include <yvals.h>
#endif

#ifdef  _MSC_VER
#pragma pack(push,_CRT_PACKING)
#endif  /* _MSC_VER */

_C_STD_BEGIN
#ifndef MRTDLL
#ifndef _M_CEE_PURE
_C_LIB_DECL
#endif
#endif

		/* SUPPLEMENTAL CTYPE MACROS & DECLARATIONS */
#define _XA		0x100		/* extra alphabetic */
#define _XS		0x000		/* extra space */
#define _BB		_CONTROL	/* BEL, BS, etc. */
#define _CN		_SPACE		/* CR, FF, HT, NL, VT */
#define _DI		_DIGIT		/* '0'-'9' */
#define _LO		_LOWER		/* 'a'-'z' */
#define _PU		_PUNCT		/* punctuation */
#define _SP		_BLANK		/* space */
#define _UP		_UPPER		/* 'A'-'Z' */
#define _XD		_HEX		/* '0'-'9', 'A'-'F', 'a'-'f' */

		/* SUPPLEMENTAL LOCALE MACROS AND DECLARATIONS */
#define _X_ALL			LC_ALL
#define _X_COLLATE		LC_COLLATE
#define _X_CTYPE		LC_CTYPE
#define _X_MONETARY		LC_MONETARY
#define _X_NUMERIC		LC_NUMERIC
#define _X_TIME 		LC_TIME
#define _X_MAX			LC_MAX
#define _X_MESSAGES		6
#define _NCAT			7

#define _CATMASK(n)	((1 << (n)) >> 1)
#define _M_COLLATE	_CATMASK(_X_COLLATE)
#define _M_CTYPE	_CATMASK(_X_CTYPE)
#define _M_MONETARY	_CATMASK(_X_MONETARY)
#define _M_NUMERIC	_CATMASK(_X_NUMERIC)
#define _M_TIME		_CATMASK(_X_TIME)
#define _M_MESSAGES	_CATMASK(_X_MESSAGES)
#define _M_ALL		(_CATMASK(_NCAT) - 1)

typedef struct _Collvec
	{	/* stuff needed by _Strcoll, etc. */
	unsigned long _Hand;	// LCID
	unsigned int _Page;		// UINT
	} _Collvec;

typedef struct _Ctypevec
	{	/* stuff needed by _Tolower, etc. */
	unsigned long _Hand;	// LCID
	unsigned int _Page;		// UINT
	const short *_Table;
	int _Delfl;
	} _Ctypevec;

typedef struct _Cvtvec
	{	/* stuff needed by _Mbrtowc, etc. */
	unsigned long _Hand;	// LCID
	unsigned int _Page;		// UINT
	} _Cvtvec;

		/* FUNCTION DECLARATIONS */
_CRTIMP2_PURE _Collvec __CLRCALL_PURE_OR_CDECL _Getcoll();
_CRTIMP2_PURE _Ctypevec __CLRCALL_PURE_OR_CDECL _Getctype();
_MRTIMP2 _Cvtvec __cdecl _Getcvt();

_CRTIMP2_PURE int __CLRCALL_PURE_OR_CDECL _Getdateorder();

_MRTIMP2 int __cdecl _Mbrtowc(_Out_opt_ wchar_t *, const char *, size_t,
	mbstate_t *, const _Cvtvec *);
_CRTIMP2_PURE float __CLRCALL_PURE_OR_CDECL _Stof(const char *, _Out_opt_ _Deref_post_opt_valid_ char **, long);
_CRTIMP2_PURE double __CLRCALL_PURE_OR_CDECL _Stod(const char *, _Out_opt_ _Deref_post_opt_valid_ char **, long);
_CRTIMP2_PURE long double __CLRCALL_PURE_OR_CDECL _Stold(const char *, _Out_opt_ _Deref_post_opt_valid_ char **, 
  long);
_CRTIMP2_PURE int __CLRCALL_PURE_OR_CDECL _Strcoll(const char *, const char *,
	const char *, const char *, const _Collvec *);
_CRTIMP2_PURE size_t __CLRCALL_PURE_OR_CDECL _Strxfrm(
  _Out_cap_x_(_End1-_String1) _Post_count_( return) char * _String1, 
  _In_z_ char * _End1, const char *, const char *, const _Collvec *);
_CRTIMP2_PURE int __CLRCALL_PURE_OR_CDECL _Tolower(int, const _Ctypevec *);
_CRTIMP2_PURE int __CLRCALL_PURE_OR_CDECL _Toupper(int, const _Ctypevec *);
_MRTIMP2 int __cdecl _Wcrtomb(_Out_ char *, wchar_t, mbstate_t *,
	const _Cvtvec *);
_CRTIMP2_PURE int __CLRCALL_PURE_OR_CDECL _Wcscoll(const wchar_t *, const wchar_t *,
	const wchar_t *, const wchar_t *, const _Collvec *);
_CRTIMP2_PURE size_t __CLRCALL_PURE_OR_CDECL _Wcsxfrm(
  _Out_cap_x_(_End1-_String1) _Post_count_( return) wchar_t *_String1, 
  _In_z_ wchar_t *_End1, const wchar_t *, const wchar_t *, const _Collvec *);

_CRTIMP2_PURE short __CLRCALL_PURE_OR_CDECL _Getwctype(wchar_t, const _Ctypevec *);
_CRTIMP2_PURE const wchar_t * __CLRCALL_PURE_OR_CDECL _Getwctypes(const wchar_t *, const wchar_t *,
	short*, const _Ctypevec*);
_CRTIMP2_PURE wchar_t __CLRCALL_PURE_OR_CDECL _Towlower(wchar_t, const _Ctypevec *);
_CRTIMP2_PURE wchar_t __CLRCALL_PURE_OR_CDECL _Towupper(wchar_t, const _Ctypevec *);
#ifndef MRTDLL
#ifndef _M_CEE_PURE
_END_C_LIB_DECL
#endif
#endif
_C_STD_END

_C_LIB_DECL
_CRTIMP void *__cdecl _Gettnames();
_CRTIMP char *__cdecl _Getdays();
_CRTIMP char *__cdecl _Getmonths();
_CRTIMP size_t __cdecl _Strftime(
  _Out_cap_(_Maxsize) char *, _In_ size_t _Maxsize, 
  _In_z_ __format_string const char *, _In_ const struct tm *, void *);
_END_C_LIB_DECL

_C_LIB_DECL
_locale_t __cdecl _GetLocaleForCP(unsigned int);
_END_C_LIB_DECL

#ifdef  _MSC_VER
#pragma pack(pop)
#endif  /* _MSC_VER */

#endif /* _XLOCINFO */

/*
 * Copyright (c) 1992-2006 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
 V5.02:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xsinh.c ===
/* _Sinh function */
#include "xmath.h"
_C_STD_BEGIN

/* coefficients */
#define NP	(sizeof (p) / sizeof (p[0]) - 1)
static const double p[] = {	/* courtesy Dr. Tim Prince */
	0.0000000001632881,
	0.0000000250483893,
	0.0000027557344615,
	0.0001984126975233,
	0.0083333333334816,
	0.1666666666666574,
	1.0000000000000001};

_CRTIMP2_PURE double __CLRCALL_PURE_OR_CDECL _Sinh(double x, double y)
	{	/* compute y*sinh(x), |y| <= 1 */
	short neg;

	switch (_Dtest(&x))
		{	/* test for special codes */
	case _NANCODE:
		return (x);
	case _INFCODE:
		return (y != 0.0 ? x : DSIGN(x) ? -y : y);
	case 0:
		return (x * y);
	default:	/* finite */
		if (y == 0.0)
			return (x < 0.0 ? -y : y);
		if (x < 0.0)
			x = -x, neg = 1;
		else
			neg = 0;

		if (x < _Rteps._Double)
			x *= y;	/* x tiny */
		else if (x < 1.0)
			{
			double w = x * x;

			x += x * w * _Poly(w, p, NP - 1);
			x *= y;
			}
		else if (x < _Xbig)
			{	/* worth adding in exp(-x) */
			_Exp(&x, 1.0, -1);
			x = y * (x - 0.25 / x);
			}
		else
			switch (_Exp(&x, y, -1))
				{	/* report over/underflow */
			case 0:
				_Feraise(_FE_UNDERFLOW);
				break;
			case _INFCODE:
				_Feraise(_FE_OVERFLOW);
				}
		return (neg ? -x : x);
		}
	}
_C_STD_END

/*
 * Copyright (c) 1992-2007 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
 V5.03:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xmbtowc.c ===
/***
*xmbtowc.c - Convert multibyte char to wide char.
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       Convert a multibyte character into the equivalent wide character.
*
*******************************************************************************/

#include <cruntime.h>
#include <stdlib.h>
#include <mtdll.h>
#include <errno.h>
#include <dbgint.h>
#include <ctype.h>
#include <limits.h>              /* for INT_MAX */
#include <stdio.h>               /* for EOF */
#include <xlocinfo.h>            /* for _Cvtvec, _Mbrtowc */
#include <internal.h>
#include <locale.h>
#include <setlocal.h>
#include <mbctype.h>             /* for _ismbblead_l */
#include <sect_attribs.h>
#include <rterr.h>

/***
*int _Mbrtowc() - Convert multibyte char to wide character.
*
*Purpose:
*       Convert a multi-byte character into the equivalent wide character,
*       according to the specified LC_CTYPE category, or the current locale.
*       [ANSI].
*
*       NOTE:  Currently, the C libraries support the "C" locale only.
*              Non-C locale support now available under _INTL switch.
*Entry:
*       wchar_t  *pwc = pointer to destination wide character
*       const char *s = pointer to multibyte character
*       size_t      n = maximum length of multibyte character to consider
*       mbstate_t *pst      = pointer to state
*       const _Cvtvec *     = pointer to locale info
*
*Exit:
*       If s = NULL, returns 0, indicating we only use state-independent
*       character encodings.
*       If s != NULL, returns:  0 (if *s = null char)
*                               -1 (if the next n or fewer bytes not valid mbc)
*                               number of bytes comprising converted mbc
*
*Exceptions:
*
*******************************************************************************/

int _MRTIMP2 __cdecl _Mbrtowc(
        wchar_t  *pwc,
        const char *s,
        size_t n,
        mbstate_t *pst,
        const _Cvtvec *ploc
        )
{
        if ( !s || n == 0 )
            /* indicate do not have state-dependent encodings,
               handle zero length string */
            return 0;

        if ( !*s )
        {
            /* handle NULL char */
            if (pwc)
                *pwc = 0;
            return 0;
        }

        {   /* perform locale-dependent parse */
            LCID handle;
            UINT codepage;
            _locale_t locale;
            BOOL islead;

            if (ploc == 0)
            {
                handle = ___lc_handle_func()[LC_CTYPE];
                codepage = ___lc_codepage_func();
            }
            else
            {
                handle = ploc->_Hand;
                codepage = ploc->_Page;
            }

            if ( handle == _CLOCALEHANDLE )
            {
                if (pwc)
                    *pwc = (wchar_t)(unsigned char)*s;
                return sizeof(char);
            }

            locale = _GetLocaleForCP(codepage);

            _ASSERTE (___mb_cur_max_l_func(locale) == 1 ||
                      ___mb_cur_max_l_func(locale) == 2);

            if (*pst != 0)
            {   /* complete two-byte multibyte character */
                ((char *)pst)[1] = *s;
                if (___mb_cur_max_l_func(locale) <= 1 ||
                    (MultiByteToWideChar(codepage,
                                         MB_PRECOMPOSED|MB_ERR_INVALID_CHARS,
                                         (char *)pst,
                                         2,
                                         pwc,
                                         (pwc) ? 1 : 0) == 0))
                {   /* translation failed */
                    *pst = 0;
                    errno = EILSEQ;
                    return -1;
                }
                *pst = 0;
                return ___mb_cur_max_l_func(locale);
            }

            islead = (locale == NULL) ? _cpp_isleadbyte((unsigned char)*s)
                                      : _ismbblead_l((unsigned char)*s, locale);
            if ( islead )
            {
                /* multi-byte char */
                if (n < (size_t)___mb_cur_max_l_func(locale))
                {   /* save partial multibyte character */
                    ((char *)pst)[0] = *s;
                    return (-2);
                }
                else if ( ___mb_cur_max_l_func(locale) <= 1 ||
                          (MultiByteToWideChar( codepage,
                                                MB_PRECOMPOSED |
                                                    MB_ERR_INVALID_CHARS,
                                                s,
                                                ___mb_cur_max_l_func(locale),
                                                pwc,
                                                (pwc) ? 1 : 0) == 0) )
                {
                    /* validate high byte of mbcs char */
                    if (!*(s+1))
                    {
                        *pst = 0;
                        errno = EILSEQ;
                        return -1;
                    }
/*                  else translation failed with no complaint? [pjp] */
                }
                return ___mb_cur_max_l_func(locale);
            }
            else {
                /* single byte char */

                if ( MultiByteToWideChar( codepage,
                                          MB_PRECOMPOSED|MB_ERR_INVALID_CHARS,
                                          s,
                                          1,
                                          pwc,
                                          (pwc) ? 1 : 0) == 0 )
                {
                    errno = EILSEQ;
                    return -1;
                }

                return sizeof(char);
            }
        }
}

#ifdef MRTDLL
int _MRTIMP2 __cdecl _Mbrtowc(
        unsigned short* pwc,
        const char *s,
        size_t n,
        mbstate_t *pst,
        const _Cvtvec *ploc
        )
    {
    return _Mbrtowc((wchar_t *)pwc, s, n, pst, ploc);
    }
#endif  /* MRTDLL */


#pragma managed(push, off)

/*
 * Define a codepage-to-locale mapping hashtable to be used by _Mbrtowc et al.
 * The hash length is chosen to distribute the ~90 valid codepages so that a
 * minimal number of buckets (~3) have more than 1 codepage less than 10,000.
 */

typedef struct _CPLocEntry {
    struct _CPLocEntry *next;
    UINT                codepage;
    _locale_t           locale;
} _CPLocEntry;

#define CPHASHLEN   62

static _CPLocEntry *volatile _CPLocHash[CPHASHLEN];

static int __cdecl _InitCPLocHash(void);

_CRTALLOC(".CRT$XID") static _PIFV pinit = _InitCPLocHash;

/***
 * _locale_t _CreateLocForCP() - Return the locale ".<codepage>"
 *
 * Purpose:
 *      Call _create_locale for the given codepage.  This is split out of
 *      _GetLocaleForCP for performance reasons, since it almost never gets
 *      run, but it triggers buffer overrun checking.
 * Entry:
 *      UINT codepage = codepage to convert to a _locale_t
 * Exit:
 *      Returns the corresponding _locale_t, or NULL if an error occurs.
 ******************************************************************************/

static __declspec(noinline)
_locale_t __cdecl _CreateLocForCP(
    UINT codepage
    )
{
    char locale_name[32];

    locale_name[0] = '.';
    _ui64toa_s(codepage, locale_name + 1, sizeof(locale_name) - 1, 10);
    return _create_locale(LC_ALL, locale_name);
}

/***
 * _locale_t _GetLocaleForCP() - retrieve the _locale_t for a codepage.
 *
 * Purpose:
 *      Return the _locale_t for a given codepage.  Use a hashtable of all
 *      previously-used codepages to avoid the expensive locale recreation.
 * Entry:
 *      UINT codepage = codepage to retrieve
 * Exit:
 *      Returns the _locale_t corresponding to the locale ".<codepage>", or
 *      NULL if the codepage isn't valid, or we hit any other error.
 ******************************************************************************/

_locale_t __cdecl _GetLocaleForCP(
    UINT codepage
    )
{
    _CPLocEntry *volatile *pBucket;
    _CPLocEntry *pHead;
    _CPLocEntry *pLink;
    _CPLocEntry *pNewEntry;

    /*
     * Get hash bucket with linked list to search for existing codepage entry.
     */
    pBucket = _CPLocHash + (codepage % CPHASHLEN);

    /*
     * Loop until we find the codepage, successfully add a new entry for the
     * codepage, or hit an error.  If a search for the codepage fails, we
     * allocate a new entry and try to push it on the head of the list.  But
     * if the list has been modified in the meantime, then we need to restart
     * the search.
     */
    pNewEntry = NULL;
    for (;;)
    {
        /*
         * Look for the codepage in the linked list, remembering the original
         * list head.
         */
        pHead = *pBucket;
        for (pLink = pHead; pLink != NULL; pLink = pLink->next)
        {
            if (pLink->codepage == codepage)
            {
                /*
                 * The search was successful.  If this was a rescan of the
                 * list, then free the redundant entry we failed to push onto
                 * the list on the previous loop.
                 */
                if (pNewEntry != NULL)
                {
                    _free_locale(pNewEntry->locale);
                    _free_crt(pNewEntry);
                }
                return pLink->locale;
            }
        }

        /*
         * The codepage wasn't found.  If this is the first time through the
         * loop, create the corresponding _locale_t and allocate the new list
         * entry.  If that fails, return NULL as the mapping has failed.
         */
        if (pNewEntry == NULL)
        {
            pNewEntry = (_CPLocEntry *)_malloc_crt(sizeof(_CPLocEntry));
            if (pNewEntry == NULL)
            {
                return NULL;
            }

                        pNewEntry->locale = _CreateLocForCP(codepage);
            if (pNewEntry->locale == NULL)
            {
                                _free_crt(pNewEntry);
                return NULL;
            }

            pNewEntry->codepage = codepage;
        }

        /*
         * Try to push the new entry on the head of the list.  If successful,
         * return the newly-created locale.  Otherwise, the list head has
         * changed since we started this loop, and we'll have to retry the
         * search.
         */
        pNewEntry->next = pHead;
        if (InterlockedCompareExchangePointer(
                (volatile PVOID *)pBucket,
                pNewEntry,
                pHead) == pHead)
        {
            return pNewEntry->locale;
        }
    }
}

/***
 * void _ReleaseCPLocHash() - free the codepage-to-locale hashtable
 *
 * Purpose:
 *      Release all resources held by the codepage-to-locale hashtable.
 *      Called on CRT shutdown.
 ******************************************************************************/

/*
 * Problems in the PSDK header definitions of InterlockedExchangePointer
 * force us to disable some warnings.
 */
#pragma warning(push)
#pragma warning(disable: 4311 4312)

static void __cdecl _ReleaseCPLocHash(
    void
    )
{
    int i;
    _CPLocEntry *pLink;
    _CPLocEntry *pNext;

    for (i = 0; i < CPHASHLEN; ++i)
    {
        /*
         * No other threads should be active.  But just in case, use a locked
         * exchange to clear the hash bucket and retrieve the old value at the
         * same time, preventing other threads from seeing the linked list
         * being freed.  This doesn't help if other threads are already
         * traversing that list.
         */
        pLink = (_CPLocEntry *)InterlockedExchangePointer(
                                    (volatile PVOID *)&_CPLocHash[i],
                                    NULL);
        while (pLink != NULL)
        {
            pNext = pLink->next;
            _free_locale(pLink->locale);
            _free_crt(pLink);
            pLink = pNext;
        }
    }
}

#pragma warning(pop)

/***
 * void _InitCPLocHash() - Register cleanup of codepage-to-locale hashtable
 *
 * Purpose:
 *      Set up to release the codepage-to-locale hashtable on CRT shutdown.
 ******************************************************************************/

static int __cdecl _InitCPLocHash(
    void
    )
{
    int ret = atexit(_ReleaseCPLocHash);
    return ret == 0 ? 0 : _RT_ONEXIT;
}

#pragma managed(pop)
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xmmintrin.h ===
/**
*** Copyright (C) 1985-1999 Intel Corporation.  All rights reserved.
***
*** The information and source code contained herein is the exclusive
*** property of Intel Corporation and may not be disclosed, examined
*** or reproduced in whole or in part without explicit written authorization
*** from the company.
***
**/

/*
 * xmmintrin.h
 *
 * Principal header file for Streaming SIMD Extensions intrinsics
 *
 * The intrinsics package can be used in 2 ways, based whether or not
 * _MM_FUNCTIONALITY is defined; if it is, the C/x87 implementation
 * will be used (the "faux intrinsics").
 *
 *
 * Note that the m128 datatype provided using _MM2_FUNCTIONALITY mode is
 *   implemented as struct, will not be 128b aligned, will be passed
 *   via the stack, etc.  MM_FUNCTIONALITY mode is not intended for
 *   performance, just semantics.
 *
 */

#pragma once
#ifndef __midl
#ifndef _INCLUDED_MM2
#define _INCLUDED_MM2

#include <crtdefs.h>

#if defined (_M_CEE_PURE)
        #error ERROR: XMM intrinsics not supported in the pure mode!
#else  /* defined (_M_CEE_PURE) */

/*
 * the m64 type is required for the integer Streaming SIMD Extensions intrinsics
 */
#ifndef _MMINTRIN_H_INCLUDED
#include <mmintrin.h>
#endif  /* _MMINTRIN_H_INCLUDED */

#ifdef _MM2_FUNCTIONALITY
/* support old notation */
#ifndef _MM_FUNCTIONALITY
#define _MM_FUNCTIONALITY
#endif  /* _MM_FUNCTIONALITY */
#endif  /* _MM2_FUNCTIONALITY */

#ifdef __ICL
#ifdef _MM_FUNCTIONALITY
#include "xmm_func.h"
#else  /* _MM_FUNCTIONALITY */
/* using real intrinsics */
typedef long long __m128;
#endif  /* _MM_FUNCTIONALITY */
#else  /* __ICL */

typedef union __declspec(intrin_type) _CRT_ALIGN(16) __m128 {
     float               m128_f32[4];
     unsigned __int64    m128_u64[2];
     __int8              m128_i8[16];
     __int16             m128_i16[8];
     __int32             m128_i32[4];
     __int64             m128_i64[2];
     unsigned __int8     m128_u8[16];
     unsigned __int16    m128_u16[8];
     unsigned __int32    m128_u32[4];
 } __m128;

#ifndef _INC_MALLOC
/* pick up _mm_malloc() and _mm_free() */
#include <malloc.h>
#endif  /* _INC_MALLOC */
#endif  /* __ICL */

/*******************************************************/
/* MACRO for shuffle parameter for _mm_shuffle_ps().   */
/* Argument fp3 is a digit[0123] that represents the fp*/
/* from argument "b" of mm_shuffle_ps that will be     */
/* placed in fp3 of result. fp2 is the same for fp2 in */
/* result. fp1 is a digit[0123] that represents the fp */
/* from argument "a" of mm_shuffle_ps that will be     */
/* places in fp1 of result. fp0 is the same for fp0 of */
/* result                                              */
/*******************************************************/
#define _MM_SHUFFLE(fp3,fp2,fp1,fp0) (((fp3) << 6) | ((fp2) << 4) | \
                                     ((fp1) << 2) | ((fp0)))


/*******************************************************/
/* MACRO for performing the transpose of a 4x4 matrix  */
/* of single precision floating point values.          */
/* Arguments row0, row1, row2, and row3 are __m128     */
/* values whose elements form the corresponding rows   */
/* of a 4x4 matrix.  The matrix transpose is returned  */
/* in arguments row0, row1, row2, and row3 where row0  */
/* now holds column 0 of the original matrix, row1 now */
/* holds column 1 of the original matrix, etc.         */
/*******************************************************/
#define _MM_TRANSPOSE4_PS(row0, row1, row2, row3) {                 \
            __m128 tmp3, tmp2, tmp1, tmp0;                          \
                                                                    \
            tmp0   = _mm_shuffle_ps((row0), (row1), 0x44);          \
            tmp2   = _mm_shuffle_ps((row0), (row1), 0xEE);          \
            tmp1   = _mm_shuffle_ps((row2), (row3), 0x44);          \
            tmp3   = _mm_shuffle_ps((row2), (row3), 0xEE);          \
                                                                    \
            (row0) = _mm_shuffle_ps(tmp0, tmp1, 0x88);              \
            (row1) = _mm_shuffle_ps(tmp0, tmp1, 0xDD);              \
            (row2) = _mm_shuffle_ps(tmp2, tmp3, 0x88);              \
            (row3) = _mm_shuffle_ps(tmp2, tmp3, 0xDD);              \
        }


/* constants for use with _mm_prefetch */
#define _MM_HINT_T0     1
#define _MM_HINT_T1     2
#define _MM_HINT_T2     3
#define _MM_HINT_NTA    0

/* (this declspec not supported with 0.A or 0.B) */
#define _MM_ALIGN16 _CRT_ALIGN(16)

/* MACRO functions for setting and reading the MXCSR */
#define _MM_EXCEPT_MASK       0x003f
#define _MM_EXCEPT_INVALID    0x0001
#define _MM_EXCEPT_DENORM     0x0002
#define _MM_EXCEPT_DIV_ZERO   0x0004
#define _MM_EXCEPT_OVERFLOW   0x0008
#define _MM_EXCEPT_UNDERFLOW  0x0010
#define _MM_EXCEPT_INEXACT    0x0020

#define _MM_MASK_MASK         0x1f80
#define _MM_MASK_INVALID      0x0080
#define _MM_MASK_DENORM       0x0100
#define _MM_MASK_DIV_ZERO     0x0200
#define _MM_MASK_OVERFLOW     0x0400
#define _MM_MASK_UNDERFLOW    0x0800
#define _MM_MASK_INEXACT      0x1000

#define _MM_ROUND_MASK        0x6000
#define _MM_ROUND_NEAREST     0x0000
#define _MM_ROUND_DOWN        0x2000
#define _MM_ROUND_UP          0x4000
#define _MM_ROUND_TOWARD_ZERO 0x6000

#define _MM_FLUSH_ZERO_MASK   0x8000
#define _MM_FLUSH_ZERO_ON     0x8000
#define _MM_FLUSH_ZERO_OFF    0x0000

#define _MM_SET_EXCEPTION_STATE(mask)                               \
            _mm_setcsr((_mm_getcsr() & ~_MM_EXCEPT_MASK) | (mask))
#define _MM_GET_EXCEPTION_STATE()                                   \
            (_mm_getcsr() & _MM_EXCEPT_MASK)

#define _MM_SET_EXCEPTION_MASK(mask)                                \
            _mm_setcsr((_mm_getcsr() & ~_MM_MASK_MASK) | (mask))
#define _MM_GET_EXCEPTION_MASK()                                    \
            (_mm_getcsr() & _MM_MASK_MASK)

#define _MM_SET_ROUNDING_MODE(mode)                                 \
            _mm_setcsr((_mm_getcsr() & ~_MM_ROUND_MASK) | (mode))
#define _MM_GET_ROUNDING_MODE()                                     \
            (_mm_getcsr() & _MM_ROUND_MASK)

#define _MM_SET_FLUSH_ZERO_MODE(mode)                               \
            _mm_setcsr((_mm_getcsr() & ~_MM_FLUSH_ZERO_MASK) | (mode))
#define _MM_GET_FLUSH_ZERO_MODE(mode)                               \
            (_mm_getcsr() & _MM_FLUSH_ZERO_MASK)

/*****************************************************/
/*     INTRINSICS FUNCTION PROTOTYPES START HERE     */
/*****************************************************/

#if defined __cplusplus
extern "C" { /* Begin "C" */
  /* Intrinsics use C name-mangling. */
#endif  /* defined __cplusplus */

/*
 * FP, arithmetic
 */

extern __m128 _mm_add_ss(__m128 _A, __m128 _B);
extern __m128 _mm_add_ps(__m128 _A, __m128 _B);
extern __m128 _mm_sub_ss(__m128 _A, __m128 _B);
extern __m128 _mm_sub_ps(__m128 _A, __m128 _B);
extern __m128 _mm_mul_ss(__m128 _A, __m128 _B);
extern __m128 _mm_mul_ps(__m128 _A, __m128 _B);
extern __m128 _mm_div_ss(__m128 _A, __m128 _B);
extern __m128 _mm_div_ps(__m128 _A, __m128 _B);
extern __m128 _mm_sqrt_ss(__m128 _A);
extern __m128 _mm_sqrt_ps(__m128 _A);
extern __m128 _mm_rcp_ss(__m128 _A);
extern __m128 _mm_rcp_ps(__m128 _A);
extern __m128 _mm_rsqrt_ss(__m128 _A);
extern __m128 _mm_rsqrt_ps(__m128 _A);
extern __m128 _mm_min_ss(__m128 _A, __m128 _B);
extern __m128 _mm_min_ps(__m128 _A, __m128 _B);
extern __m128 _mm_max_ss(__m128 _A, __m128 _B);
extern __m128 _mm_max_ps(__m128 _A, __m128 _B);

/*
 * FP, logical
 */

extern __m128 _mm_and_ps(__m128 _A, __m128 _B);
extern __m128 _mm_andnot_ps(__m128 _A, __m128 _B);
extern __m128 _mm_or_ps(__m128 _A, __m128 _B);
extern __m128 _mm_xor_ps(__m128 _A, __m128 _B);

/*
 * FP, comparison
 */

extern __m128 _mm_cmpeq_ss(__m128 _A, __m128 _B);
extern __m128 _mm_cmpeq_ps(__m128 _A, __m128 _B);
extern __m128 _mm_cmplt_ss(__m128 _A, __m128 _B);
extern __m128 _mm_cmplt_ps(__m128 _A, __m128 _B);
extern __m128 _mm_cmple_ss(__m128 _A, __m128 _B);
extern __m128 _mm_cmple_ps(__m128 _A, __m128 _B);
extern __m128 _mm_cmpgt_ss(__m128 _A, __m128 _B);
extern __m128 _mm_cmpgt_ps(__m128 _A, __m128 _B);
extern __m128 _mm_cmpge_ss(__m128 _A, __m128 _B);
extern __m128 _mm_cmpge_ps(__m128 _A, __m128 _B);
extern __m128 _mm_cmpneq_ss(__m128 _A, __m128 _B);
extern __m128 _mm_cmpneq_ps(__m128 _A, __m128 _B);
extern __m128 _mm_cmpnlt_ss(__m128 _A, __m128 _B);
extern __m128 _mm_cmpnlt_ps(__m128 _A, __m128 _B);
extern __m128 _mm_cmpnle_ss(__m128 _A, __m128 _B);
extern __m128 _mm_cmpnle_ps(__m128 _A, __m128 _B);
extern __m128 _mm_cmpngt_ss(__m128 _A, __m128 _B);
extern __m128 _mm_cmpngt_ps(__m128 _A, __m128 _B);
extern __m128 _mm_cmpnge_ss(__m128 _A, __m128 _B);
extern __m128 _mm_cmpnge_ps(__m128 _A, __m128 _B);
extern __m128 _mm_cmpord_ss(__m128 _A, __m128 _B);
extern __m128 _mm_cmpord_ps(__m128 _A, __m128 _B);
extern __m128 _mm_cmpunord_ss(__m128 _A, __m128 _B);
extern __m128 _mm_cmpunord_ps(__m128 _A, __m128 _B);
extern int _mm_comieq_ss(__m128 _A, __m128 _B);
extern int _mm_comilt_ss(__m128 _A, __m128 _B);
extern int _mm_comile_ss(__m128 _A, __m128 _B);
extern int _mm_comigt_ss(__m128 _A, __m128 _B);
extern int _mm_comige_ss(__m128 _A, __m128 _B);
extern int _mm_comineq_ss(__m128 _A, __m128 _B);
extern int _mm_ucomieq_ss(__m128 _A, __m128 _B);
extern int _mm_ucomilt_ss(__m128 _A, __m128 _B);
extern int _mm_ucomile_ss(__m128 _A, __m128 _B);
extern int _mm_ucomigt_ss(__m128 _A, __m128 _B);
extern int _mm_ucomige_ss(__m128 _A, __m128 _B);
extern int _mm_ucomineq_ss(__m128 _A, __m128 _B);

/*
 * FP, conversions
 */

extern int _mm_cvt_ss2si(__m128 _A);
extern __m64 _mm_cvt_ps2pi(__m128 _A);
extern int _mm_cvtt_ss2si(__m128 _A);
extern __m64 _mm_cvtt_ps2pi(__m128 _A);
extern __m128 _mm_cvt_si2ss(__m128, int);
extern __m128 _mm_cvt_pi2ps(__m128, __m64);
extern float _mm_cvtss_f32(__m128 _A);

/*
 * Support for 64-bit extension intrinsics
 */
#if defined (_M_AMD64)
extern __int64 _mm_cvtss_si64(__m128 _A);
extern __int64 _mm_cvttss_si64(__m128 _A);
extern __m128  _mm_cvtsi64_ss(__m128 _A, __int64 _B);
#endif  /* defined (_M_AMD64) */

/*
 * FP, misc
 */

extern __m128 _mm_shuffle_ps(__m128 _A, __m128 _B, unsigned int _Imm8);
extern __m128 _mm_unpackhi_ps(__m128 _A, __m128 _B);
extern __m128 _mm_unpacklo_ps(__m128 _A, __m128 _B);
extern __m128 _mm_loadh_pi(__m128, __m64 const*);
extern __m128 _mm_movehl_ps(__m128, __m128);
extern __m128 _mm_movelh_ps(__m128, __m128);
extern void _mm_storeh_pi(__m64 *, __m128);
extern __m128 _mm_loadl_pi(__m128, __m64 const*);
extern void _mm_storel_pi(__m64 *, __m128);
extern int _mm_movemask_ps(__m128 _A);


/*
 * Integer extensions
 */
extern int _m_pextrw(__m64, int);
extern __m64 _m_pinsrw(__m64, int, int);
extern __m64 _m_pmaxsw(__m64, __m64);
extern __m64 _m_pmaxub(__m64, __m64);
extern __m64 _m_pminsw(__m64, __m64);
extern __m64 _m_pminub(__m64, __m64);
extern int _m_pmovmskb(__m64);
extern __m64 _m_pmulhuw(__m64, __m64);
extern __m64 _m_pshufw(__m64, int);
extern void _m_maskmovq(__m64, __m64, char *);
extern __m64 _m_pavgb(__m64, __m64);
extern __m64 _m_pavgw(__m64, __m64);
extern __m64 _m_psadbw(__m64, __m64);

/*
 * memory & initialization
 */

extern __m128 _mm_set_ss(float _A);
extern __m128 _mm_set_ps1(float _A);
extern __m128 _mm_set_ps(float _A, float _B, float _C, float _D);
extern __m128 _mm_setr_ps(float _A, float _B, float _C, float _D);
extern __m128 _mm_setzero_ps(void);
extern __m128 _mm_load_ss(float const*_A);
extern __m128 _mm_load_ps1(float const*_A);
extern __m128 _mm_load_ps(float const*_A);
extern __m128 _mm_loadr_ps(float const*_A);
extern __m128 _mm_loadu_ps(float const*_A);
extern void _mm_store_ss(float *_V, __m128 _A);
extern void _mm_store_ps1(float *_V, __m128 _A);
extern void _mm_store_ps(float *_V, __m128 _A);
extern void _mm_storer_ps(float *_V, __m128 _A);
extern void _mm_storeu_ps(float *_V, __m128 _A);
extern void _mm_prefetch(char const*_A, int _Sel);
extern void _mm_stream_pi(__m64 *, __m64);
extern void _mm_stream_ps(float *, __m128);
extern __m128 _mm_move_ss(__m128 _A, __m128 _B);

extern void _mm_sfence(void);
extern unsigned int _mm_getcsr(void);
extern void _mm_setcsr(unsigned int);

#ifdef __ICL
extern void* __cdecl _mm_malloc(size_t _Siz, size_t _Al);
extern void __cdecl _mm_free(void *_P);
#endif  /* __ICL */

/* Alternate intrinsic names definition */
#define _mm_cvtss_si32    _mm_cvt_ss2si
#define _mm_cvtps_pi32    _mm_cvt_ps2pi
#define _mm_cvttss_si32   _mm_cvtt_ss2si
#define _mm_cvttps_pi32   _mm_cvtt_ps2pi
#define _mm_cvtsi32_ss    _mm_cvt_si2ss
#define _mm_cvtpi32_ps    _mm_cvt_pi2ps
#define _mm_extract_pi16  _m_pextrw
#define _mm_insert_pi16   _m_pinsrw
#define _mm_max_pi16      _m_pmaxsw
#define _mm_max_pu8       _m_pmaxub
#define _mm_min_pi16      _m_pminsw
#define _mm_min_pu8       _m_pminub
#define _mm_movemask_pi8  _m_pmovmskb
#define _mm_mulhi_pu16    _m_pmulhuw
#define _mm_shuffle_pi16  _m_pshufw
#define _mm_maskmove_si64 _m_maskmovq
#define _mm_avg_pu8       _m_pavgb
#define _mm_avg_pu16      _m_pavgw
#define _mm_sad_pu8       _m_psadbw
#define _mm_set1_ps       _mm_set_ps1
#define _mm_load1_ps      _mm_load_ps1
#define _mm_store1_ps     _mm_store_ps1

/******************************************************/
/* UTILITY INTRINSICS FUNCTION DEFINITIONS START HERE */
/******************************************************/

/*********************************************************/
/*  NAME : _mm_cvtpi16_ps                                */
/*  DESCRIPTION : Convert 4 16-bit signed integer values */
/*                to 4 single-precision float values     */
/*  IN : __m64 a                                         */
/*  OUT : none                                           */
/*  RETURN : __m128 : (float)a                           */
/*********************************************************/
__inline __m128 _mm_cvtpi16_ps(__m64 a)
{
  __m128 tmp;
  __m64  ext_val = _mm_cmpgt_pi16(_mm_setzero_si64(), a);

  tmp = _mm_cvtpi32_ps(_mm_setzero_ps(), _mm_unpackhi_pi16(a, ext_val));
  return(_mm_cvtpi32_ps(_mm_movelh_ps(tmp, tmp),
                        _mm_unpacklo_pi16(a, ext_val)));
}


/***********************************************************/
/*  NAME : _mm_cvtpu16_ps                                  */
/*  DESCRIPTION : Convert 4 16-bit unsigned integer values */
/*                to 4 single-precision float values       */
/*  IN : __m64 a                                           */
/*  OUT : none                                             */
/*  RETURN : __m128 : (float)a                             */
/***********************************************************/
__inline __m128 _mm_cvtpu16_ps(__m64 a)
{
  __m128 tmp;
  __m64  ext_val = _mm_setzero_si64();

  tmp = _mm_cvtpi32_ps(_mm_setzero_ps(), _mm_unpackhi_pi16(a, ext_val));
  return(_mm_cvtpi32_ps(_mm_movelh_ps(tmp, tmp),
                        _mm_unpacklo_pi16(a, ext_val)));
}


/******************************************************/
/*  NAME : _mm_cvtps_pi16                             */
/*  DESCRIPTION : Convert 4 single-precision float    */
/*                values to 4 16-bit integer values   */
/*  IN : __m128 a                                     */
/*  OUT : none                                        */
/*  RETURN : __m64 : (short)a                         */
/******************************************************/
__inline __m64 _mm_cvtps_pi16(__m128 a)
{
  return _mm_packs_pi32(_mm_cvtps_pi32(a),
                        _mm_cvtps_pi32(_mm_movehl_ps(a, a)));
}


/******************************************************/
/*  NAME : _mm_cvtpi8_ps                              */
/*  DESCRIPTION : Convert 4 8-bit integer values to 4 */
/*                single-precision float values       */
/*  IN : __m64 a                                      */
/*  OUT : none                                        */
/*  RETURN : __m128 : (float)a                        */
/******************************************************/
__inline __m128 _mm_cvtpi8_ps(__m64 a)
{
  __m64  ext_val = _mm_cmpgt_pi8(_mm_setzero_si64(), a);

  return _mm_cvtpi16_ps(_mm_unpacklo_pi8(a, ext_val));
}


/******************************************************/
/*  NAME : _mm_cvtpu8_ps                              */
/*  DESCRIPTION : Convert 4 8-bit unsigned integer    */
/*                values to 4 single-precision float  */
/*                values                              */
/*  IN : __m64 a                                      */
/*  OUT : none                                        */
/*  RETURN : __m128 : (float)a                        */
/******************************************************/
__inline __m128 _mm_cvtpu8_ps(__m64 a)
{
  return _mm_cvtpu16_ps(_mm_unpacklo_pi8(a, _mm_setzero_si64()));
}


/******************************************************/
/*  NAME : _mm_cvtps_pi8                              */
/*  DESCRIPTION : Convert 4 single-precision float    */
/*                values to 4 8-bit integer values    */
/*  IN : __m128 a                                     */
/*  OUT : none                                        */
/*  RETURN : __m64 : (char)a                          */
/******************************************************/
__inline __m64 _mm_cvtps_pi8(__m128 a)
{
  return _mm_packs_pi16(_mm_cvtps_pi16(a), _mm_setzero_si64());
}


/******************************************************/
/*  NAME : _mm_cvtpi32x2_ps                           */
/*  DESCRIPTION : Convert 4 32-bit integer values     */
/*                to 4 single-precision float values  */
/*  IN : __m64 a : operand 1                          */
/*       __m64 b : operand 2                          */
/*  OUT : none                                        */
/*  RETURN : __m128 : (float)a,(float)b               */
/******************************************************/
__inline __m128 _mm_cvtpi32x2_ps(__m64 a, __m64 b)
{
  return _mm_movelh_ps(_mm_cvt_pi2ps(_mm_setzero_ps(), a),
                       _mm_cvt_pi2ps(_mm_setzero_ps(), b));
}


#if defined __cplusplus
}; /* End "C" */
#endif  /* defined __cplusplus */

#endif  /* defined (_M_CEE_PURE) */

#endif  /* _INCLUDED_MM2 */
#endif  /* __midl */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xlsinh.c ===
/* _LSinh function */
#include "xmath.h"
_C_STD_BEGIN

	/* coefficients */
#define NP	(sizeof (p) / sizeof (p[0]) - 1)

 #if _DLONG <= 1	/* assume IEEE 754 10 byte */
static const long double p[] = {	/* courtesy Dr. Tim Prince */
	0.0000000000000028486835L,
	0.0000000000007646464279L,
	0.0000000001605905091647L,
	0.0000000250521083436962L,
	0.0000027557319224130455L,
	0.0001984126984126956009L,
	0.0083333333333333336073L,
	0.1666666666666666666564L,
	1.0000000000000000000001L};

 #else	/* assume IEEE 754 16 byte */
static const long double p[] = {	/* courtesy Dr. Tim Prince */
	0.00000000000000000000000006506911776L,
	0.00000000000000000000003867997525529L,
	0.00000000000000000001957294395545097L,
	0.00000000000000000822063524350084984L,
	0.00000000000000281145725434779709982L,
	0.00000000000076471637318198050919003L,
	0.00000000016059043836821614638343470L,
	0.00000002505210838544171877496283537L,
	0.00000275573192239858906525574505191L,
	0.00019841269841269841269841269726379L,
	0.00833333333333333333333333333338555L,
	0.16666666666666666666666666666666573L,
	1.0L};
 #endif

_CRTIMP2_PURE long double __CLRCALL_PURE_OR_CDECL _LSinh(long double x, long double y)
	{	/* compute y*sinh(x), |y| <= 1 */
	short neg;

	switch (_LDtest(&x))
		{	/* test for special codes */
	case _NANCODE:
		return (x);
	case _INFCODE:
		return (y != 0.0L ? x : LSIGN(x) ? -y : y);
	case 0:
		return (x * y);
	default:	/* finite */
		if (y == 0.0L)
			return (x < 0.0L ? -y : y);
		if (x < 0.0L)
			x = -x, neg = 1;
		else
			neg = 0;

		if (x < _LRteps._Long_double)
			x *= y;	/* x tiny */
		else if (x < 1.0L)
			{
			long double w = x * x;

			x += x * w * _LPoly(w, p, NP - 1);
			x *= y;
			}
		else if (x < _LXbig)
			{	/* worth adding in exp(-x) */
			_LExp(&x, 1.0L, -1);
			x = y * (x - 0.25L / x);
			}
		else
			switch (_LExp(&x, y, -1))
				{	/* report over/underflow */
			case 0:
				_Feraise(_FE_UNDERFLOW);
				break;
			case _INFCODE:
				_Feraise(_FE_OVERFLOW);
				}
		return (neg ? -x : x);
		}
	}
_C_STD_END

/*
 * Copyright (c) 1992-2007 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
 V5.03:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xstol.c ===
/* _Stolx function */
#include <yvals.h>
#include <ctype.h>
#include <errno.h>
#include <limits.h>
#include <stdlib.h>
#include "xmath.h"
_C_STD_BEGIN

#if defined(__cplusplus) && !defined(MRTDLL)
extern "C"
#endif
_CRTIMP2_PURE unsigned long __CLRCALL_PURE_OR_CDECL _Stoulx(const char *, char **, int, int *);

#if defined(__cplusplus) && !defined(MRTDLL)
extern "C"
#endif
_CRTIMP2_PURE long __CLRCALL_PURE_OR_CDECL _Stolx(const char * s, char ** endptr,
	int base, int *perr)
	{	/* convert string to long, with checking */
	const char *sc;
	char *se, sign;
	unsigned long x;

	if (endptr == 0)
		endptr = &se;
	for (sc = s; isspace((unsigned char)*sc); ++sc)
		;
	sign = *sc == '-' || *sc == '+' ? *sc++ : '+';
	x = _Stoulx(sc, endptr, base, perr);
	if (sc == *endptr)
		*endptr = (char *)s;
	if (s == *endptr && x != 0 || sign == '+' && LONG_MAX < x
		|| sign == '-' && 0 - (unsigned long)LONG_MIN < x)
		{	/* overflow */
		errno = ERANGE;
		if (perr != 0)
			*perr = 1;
		return (sign == '-' ? LONG_MIN : LONG_MAX);
		}
	else
		return ((long)(sign == '-' ? 0 - x : x));
	}
_C_STD_END

/*
 * Copyright (c) 1992-2007 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
 V5.03:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xstold.c ===
/* _Stold function */
#include <stdlib.h>
#include "xmath.h"
#include "xxcctype.h"
#include "xxlftype.h"
_C_STD_BEGIN

#if defined(__cplusplus) && !defined(MRTDLL)
extern "C"
{
#endif
_CRTIMP2_PURE double __CLRCALL_PURE_OR_CDECL _Stodx(const char *s, char **endptr, long pten, int *perr);

_CRTIMP2_PURE double __CLRCALL_PURE_OR_CDECL _Stod(const char *s, char **endptr, long pten);

_CRTIMP2_PURE long double __CLRCALL_PURE_OR_CDECL _Stoldx(const char *s, char **endptr, long pten, int *perr)
	{	/* convert string to long double */
	return ((long double)_Stodx(s, endptr, pten, perr));
	}

_CRTIMP2_PURE long double __CLRCALL_PURE_OR_CDECL _Stold(const char *s, char **endptr, long pten, int *perr)
	{	/* convert string to long double, discard error code */
	return ((long double)_Stod(s, endptr, pten));
	}

#if defined(__cplusplus) && !defined(MRTDLL)
}
#endif

_C_STD_END

/*
 * Copyright (c) 1992-2004 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
 V4.04:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xstoll.c ===
/* _Stoll function */
#include <ctype.h>
#include <errno.h>
#include <limits.h>
#include <stdlib.h>
#include "xmath.h"
_C_STD_BEGIN

#define MYMIN	(-_LLONG_MAX - _C2)	/* LLONG_MIN */
#define MYMAX	_LLONG_MAX	/* LLONG_MAX */

_CRTIMP2_PURE _ULonglong __CLRCALL_PURE_OR_CDECL _Stoullx(const char *, char **, int, int *);

_CRTIMP2_PURE _Longlong __CLRCALL_PURE_OR_CDECL _Stollx(const char * s, char ** endptr,
	int base, int *perr)
	{	/* convert string to long long, with checking */
	const char *sc;
	char *se, sign;
	_ULonglong x;

	if (endptr == 0)
		endptr = &se;
	for (sc = s; isspace((unsigned char)*sc); ++sc)
		;
	sign = (char)(*sc == '-' || *sc == '+' ? *sc++ : '+');
	x = _Stoullx(sc, endptr, base, perr);
	if (sc == *endptr)
		*endptr = (char *)s;
	if (s == *endptr && x != 0 || sign == '+' && MYMAX < x
		|| sign == '-' && 0 - (_ULonglong)MYMIN < x)
		{	/* overflow */
		errno = ERANGE;
		if (perr != 0)
			*perr = 1;
		return (sign == '-' ? MYMIN : MYMAX);
		}
	else
		return ((_Longlong)(sign == '-' ? 0 - x : x));
	}

_CRTIMP2_PURE _Longlong (__CLRCALL_PURE_OR_CDECL _Stoll)(const char * s, char ** endptr, int base)
	{	/* convert string, discard error code */
	return (_Stollx(s, endptr, base, 0));
	}
_C_STD_END

/*
 * Copyright (c) 1992-2007 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
 V5.03:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xrngabort.cpp ===
// xrngabort: abort on precondition failure in TR1 random number generators
#include <yvals.h>

 #if _HAS_TR1
  #include <stdlib.h>
  #include <stdio.h>
//  #include <random>
_STD_BEGIN
	namespace tr1 {	// TR1 additions

_CRTIMP2_PURE __declspec(noreturn) void __CLRCALL_PURE_OR_CDECL
	_Rng_abort(_In_z_ const char *_Msg);

void __CLRCALL_PURE_OR_CDECL
	_Rng_abort(const char *msg)
	{	/* abort on precondition failure */
	fputs(msg, stderr);
	fputc('\n', stderr);
	abort();
	}

	}	// namespace tr1
_STD_END
 #endif /* _HAS_TR1 */

/*
 * Copyright (c) 1992-2008 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
V5.05:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xstoul.c ===
/* _Stoul function */
#include <stdlib.h>
#include <ctype.h>
#include <errno.h>
#include <limits.h>
#include <stddef.h>
#include <string.h>
#include "xmath.h"
 #pragma warning(disable: 4701)

 #if (ULONG_MAX >> 16) >> 16 != 0xffffffff && ULONG_MAX != 0xffffffff
  #error LONGS TOO LARGE FOR _Stoul
 #endif /* longs too large */

_C_STD_BEGIN

		/* macros */
#define BASE_MAX	36	/* largest valid base */

		/* static data */
static const char digits[] = 	/* valid digits */
	"0123456789abcdefghijklmnopqrstuvwxyz";

 #if (ULONG_MAX >> 16) >> 16 == 0xffffffff
static const char ndigs[BASE_MAX + 1] = {	/* 64-bits! */
	0, 0, 65, 41, 33, 28, 25, 23, 22, 21,
	20, 19, 18, 18, 17, 17, 17, 16, 16, 16,
	15, 15, 15, 15, 14, 14, 14, 14, 14, 14,
	14, 13, 13, 13, 13, 13, 13,};

 #else /* (ULONG_MAX >> 16) >> 16 == 0xffffffff */
static const char ndigs[BASE_MAX+1] = {	/* 32-bits! */
	0, 0, 33, 21, 17, 14, 13, 12, 11, 11,
	10, 10, 9, 9, 9, 9, 9, 8, 8, 8,
	8, 8, 8, 8, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7,};
 #endif /* (ULONG_MAX >> 16) >> 16 == 0xffffffff */

#if defined(__cplusplus) && !defined(MRTDLL)
extern "C"
#endif
_CRTIMP2_PURE unsigned long __CLRCALL_PURE_OR_CDECL _Stoulx(const char *s, char **endptr,
	int base, int *perr)
	{	/* convert string to unsigned long, with checking */
	const char *sc, *sd;
	const char *s1, *s2;
	char dig, sign;
	ptrdiff_t n;
	unsigned long x, y;

	if (perr != 0)
		*perr = 0;
	for (sc = s; isspace((unsigned char)*sc); ++sc)
		;
	sign = *sc == '-' || *sc == '+' ? *sc++ : '+';
	if (base < 0 || base == 1 || BASE_MAX < base)
		{	/* silly base */
		if (endptr != 0)
			*endptr = (char *)s;
		return (0);
		}
	else if (0 < base)
		{	/* strip 0x or 0X */
		if (base == 16 && *sc == '0'
			&& (sc[1] == 'x' || sc[1] == 'X'))
			sc += 2;
		}
	else if (*sc != '0')
		base = 10;
	else if (sc[1] == 'x' || sc[1] == 'X')
		base = 16, sc += 2;
	else
		base = 8;
	for (s1 = sc; *sc == '0'; ++sc)
		;	/* skip leading zeros */
	x = 0;
	for (s2 = sc, y = 0; (sd = (char *)memchr(&digits[0],
		tolower(*sc), base)) != 0; ++sc)
		{	/* accumulate digits */
		y = x;
		dig = (char)(sd - digits);	/* for overflow checking */
		x = x * base + dig;
		}
	if (s1 == sc)
		{	/* check string validity */
		if (endptr != 0)
			*endptr = (char *)s;
		return (0);
		}
	n = sc - s2 - ndigs[base];
	if (n < 0)
		;
	else if (0 < n || x < x - dig || (x - dig) / base != y)
		{	/* overflow */
		errno = ERANGE;
		if (perr != 0)
			*perr = 1;
		x = ULONG_MAX, sign = '+';
		}
	if (sign == '-')	/* get final value */
		x = 0 - x;
	if (endptr != 0)
		*endptr = (char *)sc;
	return (x);
	}

_CRTIMP2_PURE unsigned long __CLRCALL_PURE_OR_CDECL _Stoul(const char *s, char **endptr, int base)
	{	/* convert string, discard error code */
	return (_Stoulx(s, endptr, base, 0));
	}
_C_STD_END

/*
 * Copyright (c) 1992-2006 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
 V5.02:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xstrcoll.c ===
/***
*xstrcoll.c - Collate locale strings
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       Compare two strings using the locale LC_COLLATE information.
*
*******************************************************************************/

#include <cruntime.h>
#include <string.h>
#include <xlocinfo.h>   /* for _Collvec, _Strcoll */
#include <windows.h>
#include <stdlib.h>
#include <malloc.h>
#include <locale.h>
#include <mtdll.h>
#include <setlocal.h>
#include <errno.h>
#include <awint.h>

/***
*int _Strcoll() - Collate locale strings
*
*Purpose:
*       Compare two strings using the locale LC_COLLATE information.
*       [ANSI].
*
*       Non-C locale support available under _INTL switch.
*       In the C locale, strcoll() simply resolves to strcmp().
*Entry:
*       const char *s1b = pointer to beginning of the first string
*       const char *s1e = pointer past end of the first string
*       const char *s2b = pointer to beginning of the second string
*       const char *s1e = pointer past end of the second string
*       const _Collvec *ploc = pointer to locale info
*
*Exit:
*       Less than 0    = first string less than second string
*       0              = strings are equal
*       Greater than 0 = first string greater than second string
*
*Exceptions:
*       _NLSCMPERROR    = error
*       errno = EINVAL
*
*******************************************************************************/

_CRTIMP2_PURE int __CLRCALL_PURE_OR_CDECL _Strcoll (
        const char *_string1,
        const char *_end1,
        const char *_string2,
        const char *_end2,
        const _Collvec *ploc
        )
{
        int ret=0;
        LCID handle;
        UINT codepage;
        int n1 = (int)(_end1 - _string1);
        int n2 = (int)(_end2 - _string2);

        if (ploc == 0)
        {
            handle = ___lc_handle_func()[LC_COLLATE];
            codepage = ___lc_collate_cp_func();
        }
        else
        {
            handle = ploc->_Hand;
            codepage = ploc->_Page;
        }

        if (handle == _CLOCALEHANDLE) {
            int ans;
            ans = memcmp(_string1, _string2, n1 < n2 ? n1 : n2);
            ret=(ans != 0 || n1 == n2 ? ans : n1 < n2 ? -1 : +1);
        }
        else
        {
            if ( 0 == (ret = __crtCompareStringA( NULL,
                                                  handle,
                                                  SORT_STRINGSORT,
                                                  _string1,
                                                  n1,
                                                  _string2,
                                                  n2,
                                                  codepage )) )
            {
                errno=EINVAL;
                ret=_NLSCMPERROR;
            }
            else
            {
                ret-=2;
            }
        }

        return ret;
}


/***
*_Collvec _Getcoll() - get collation info for current locale
*
*Purpose:
*
*Entry:
*
*Exit:
*
*Exceptions:
*
*******************************************************************************/

_CRTIMP2_PURE _Collvec __CLRCALL_PURE_OR_CDECL _Getcoll()
{
        _Collvec coll;

        coll._Hand = ___lc_handle_func()[LC_COLLATE];
        coll._Page = ___lc_collate_cp_func();

        return (coll);
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xrngdev.cpp ===
// xrngdev: random device for TR1 random number generators
#define _CRT_RAND_S
#include <stdexcept>

 #if _HAS_TR1
//  #include <random>
_STD_BEGIN
	namespace tr1 {	// TR1 additions

_CRTIMP2_PURE unsigned int __CLRCALL_PURE_OR_CDECL _Random_device();

unsigned int __CLRCALL_PURE_OR_CDECL _Random_device()
	{	// return a random value
	unsigned int ans;
	if (::rand_s(&ans) != 0)
		_THROW_NCEE(out_of_range, "invalid random_device value");
	return (ans);
	}

	}	// namespace tr1
_STD_END
 #endif /* _HAS_TR1 */

/*
 * Copyright (c) 1992-2008 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
V5.05:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xthdloc.c ===
/***
*xthdloc.c - sets the __globallocalestatus flag to disable per thread locale
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       Sets the __globallocalestatus flag to enable per thread locale.
*       Link with this obj to enable per thread locale.
*
*******************************************************************************/

#include <cruntime.h>
#include <mtdll.h>
#include <internal.h>
#include <locale.h>
#include <setlocal.h>

int __globallocalestatus = (~_GLOBAL_LOCALE_BIT) ;
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xtow.c ===
/***
*xtow.c - convert integers/longs to wide char string
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       The module has code to convert integers/longs to wide char strings.
*
*******************************************************************************/

#define _UNICODE
#include "xtoa.c"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xstod.c ===
/* _Stod function */
#include <stdlib.h>
#include "xmath.h"
#include "xxcctype.h"
#include "xxdftype.h"

_C_STD_BEGIN

#if defined(__cplusplus) && !defined(MRTDLL)
extern "C"
#endif

_CRTIMP2_PURE double __CLRCALL_PURE_OR_CDECL _Stodx(const char *s, char **endptr, long pten, int *perr)
	{	/* convert string to double */
	int err = errno;
	double x = 0.0;

	errno = 0;
	x = strtod(s, endptr);
	*perr = errno;
	errno = err;

	for (; 0 < pten; --pten)
		x *= 10.0;
	for (; pten < 0; ++pten)
		x /= 10.0;
	return (x);
	}

_CRTIMP2_PURE double __CLRCALL_PURE_OR_CDECL _Stod(const char *s, char **endptr, long pten)
	{	/* convert string, discard error code */
	int err = 0;
	return _Stodx(s, endptr, pten, &err);
	}

_C_STD_END

/*
 * Copyright (c) 1992-2007 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
 V5.03:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xstof.c ===
/* _Stof function */
#include <stdlib.h>
#include "xmath.h"
#include "xxcctype.h"
#include "xxfftype.h"
_C_STD_BEGIN

#if defined(__cplusplus) && !defined(MRTDLL)
extern "C"
{
#endif
_CRTIMP2_PURE double __CLRCALL_PURE_OR_CDECL _Stodx(const char *s, char **endptr, long pten, int *perr);

_CRTIMP2_PURE double __CLRCALL_PURE_OR_CDECL _Stod(const char *s, char **endptr, long pten);

_CRTIMP2_PURE float __CLRCALL_PURE_OR_CDECL _Stofx(const char *s, char **endptr, long pten, int *perr)
	{	/* convert string to float */
	return ((float)_Stodx(s, endptr, pten, perr));
	}

_CRTIMP2_PURE float __CLRCALL_PURE_OR_CDECL _Stof(const char *s, char **endptr, long pten, int *perr)
	{	/* convert string to float, discard error code */
	return ((float)_Stod(s, endptr, pten));
	}

#if defined(__cplusplus) && !defined(MRTDLL)
}
#endif

_C_STD_END

/*
 * Copyright (c) 1992-2004 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
 V4.04:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xtowlower.c ===
/* _Towlower -- convert wchar_t to lower case for Microsoft */
#include <xlocinfo.h>
#include <wchar.h>
#include <awint.h>
#include <mtdll.h>
#include <setlocal.h>

_C_STD_BEGIN
_CRTIMP2_PURE wchar_t __CLRCALL_PURE_OR_CDECL _Towlower(wchar_t _Ch, const _Ctypevec *_Ctype)
	{	/* convert element to lower case */
	wchar_t _Res = _Ch;

	if (_Ch == WEOF)
		;
	else if (_Ctype->_Hand == _CLOCALEHANDLE && _Ch < 256)
		{	/* handle ASCII character in C locale */
		if (L'A' <= _Ch && _Ch <= L'Z')
			_Res = (wchar_t)(_Ch - L'A' + L'a');
		}
	else if (__crtLCMapStringW(NULL, _Ctype->_Hand, LCMAP_LOWERCASE,
			&_Ch, 1, &_Res, 1, _Ctype->_Page) == 0)
		_Res = _Ch;
	return (_Res);
	}

#ifdef MRTDLL
_CRTIMP2_PURE unsigned short __CLRCALL_PURE_OR_CDECL _Towlower(unsigned short _Ch, const _Ctypevec *_Ctype)
    {
    return _Towlower((wchar_t) _Ch, _Ctype);
    }
#endif
_C_STD_END

/*
 * Copyright (c) 1992-2007 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
 V5.03:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xtowupper.c ===
/* _Towupper -- convert wchar_t to upper case for Microsoft */
#include <xlocinfo.h>
#include <wchar.h>
#include <awint.h>
#include <mtdll.h>
#include <setlocal.h>

_C_STD_BEGIN
_CRTIMP2_PURE wchar_t __CLRCALL_PURE_OR_CDECL _Towupper(wchar_t _Ch,
	const _Ctypevec *_Ctype)
	{	/* convert element to upper case */
	wchar_t _Res = _Ch;

	if (_Ch == WEOF)
		;
	else if (_Ctype->_Hand == _CLOCALEHANDLE && _Ch < 256)
		{	/* handle ASCII character in C locale */
		if (L'a' <= _Ch && _Ch <= L'z')
			_Res = (wchar_t)(_Ch - L'a' + L'A');
		}
	else if (__crtLCMapStringW(NULL, _Ctype->_Hand, LCMAP_UPPERCASE,
			&_Ch, 1, &_Res, 1, _Ctype->_Page) == 0)
		_Res = _Ch;
	return (_Res);
	}
#ifdef MRTDLL
_CRTIMP2_PURE unsigned short __CLRCALL_PURE_OR_CDECL _Towupper(unsigned short _Ch,
	const _Ctypevec *_Ctype)
    {
    return _Towupper((wchar_t) _Ch, _Ctype);
    }
#endif
_C_STD_END

/*
 * Copyright (c) 1992-2007 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
 V5.03:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xtxtmode.c ===
/***
*xtxtmode.c - set global text mode flag
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       Sets the global file mode to text.  This is the default.
*
*       This is a special version for the DLL model.  This object goes into
*       MSVCRT.LIB (and therefore into the client EXE) and not into the
*       CRTL in a DLL (MSVCRTXX.DLL).  It is identical to txtmode.obj
*       except that the latter has a DLL export definition in the DLL model.
*
*******************************************************************************/

#define SPECIAL_CRTEXE  /* turn off _CRTIMP for decl. of _fmode */

#include <cruntime.h>
#include <stdlib.h>

int _fmode = 0;                 /* set text mode */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xtoas.c ===
/***
*xtoas.c - Secure Version of xtoa.c
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       This module is split from xtoa to avoid xtoa.obj pulling in startup code
*
*******************************************************************************/

#define _SECURE_ITOA
#include "xtoa.c"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xtoa.c ===
/***
*xtoa.c - convert integers/longs to ASCII string
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       The module has code to convert integers/longs to ASCII strings.  See
*
*******************************************************************************/

#include <cruntime.h>
#include <stdlib.h>
#include <limits.h>
#include <tchar.h>
#include <internal.h>
#include <internal_securecrt.h>

#ifdef _UNICODE
#define xtox_s     xtow_s
#define _itox_s    _itow_s
#define _ltox_s    _ltow_s
#define _ultox_s   _ultow_s
#define x64tox_s   x64tow_s
#define _i64tox_s  _i64tow_s
#define _ui64tox_s _ui64tow_s
#define xtox       xtow
#define _itox      _itow
#define _ltox      _ltow
#define _ultox     _ultow
#define x64tox     x64tow
#define _i64tox    _i64tow
#define _ui64tox   _ui64tow
#else  /* _UNICODE */
#define xtox_s     xtoa_s
#define _itox_s    _itoa_s
#define _ltox_s    _ltoa_s
#define _ultox_s   _ultoa_s
#define x64tox_s   x64toa_s
#define _i64tox_s  _i64toa_s
#define _ui64tox_s _ui64toa_s
#define xtox       xtoa
#define _itox      _itoa
#define _ltox      _ltoa
#define _ultox     _ultoa
#define x64tox     x64toa
#define _i64tox    _i64toa
#define _ui64tox   _ui64toa
#endif  /* _UNICODE */

/***
*char *_itoa_s, *_ltoa_s, *_ultoa_s(val, buf, sizeInTChars, radix) - convert binary int to ASCII
*       string
*
*Purpose:
*       Converts an int to a character string.
*
*Entry:
*       val - number to be converted (int, long or unsigned long)
*       char *buf - ptr to buffer to place result
*       size_t sizeInTChars - size of the destination buffer
*       int radix - base to convert into
*
*Exit:
*       Fills in space pointed to by buf with string result.
*       Returns the errno_t: err != 0 means that something went wrong, and
*       an empty string (buf[0] = 0) is returned.
*
*Exceptions:
*           Input parameters and buffer length are validated.
*       Refer to the validation section of the function.
*
*******************************************************************************/

/* helper routine that does the main job. */
#ifdef _SECURE_ITOA
static errno_t __stdcall xtox_s
        (
        unsigned long val,
        TCHAR *buf,
        size_t sizeInTChars,
        unsigned radix,
        int is_neg
        )
#else  /* _SECURE_ITOA */
static void __stdcall xtox
        (
        unsigned long val,
        TCHAR *buf,
        unsigned radix,
        int is_neg
        )
#endif  /* _SECURE_ITOA */
{
        TCHAR *p;                /* pointer to traverse string */
        TCHAR *firstdig;         /* pointer to first digit */
        TCHAR temp;              /* temp char */
        unsigned digval;         /* value of digit */
#ifdef _SECURE_ITOA
        size_t length;           /* current length of the string */

        /* validation section */
        _VALIDATE_RETURN_ERRCODE(buf != NULL, EINVAL);
        _VALIDATE_RETURN_ERRCODE(sizeInTChars > 0, EINVAL);
        _RESET_STRING(buf, sizeInTChars);
        _VALIDATE_RETURN_ERRCODE(sizeInTChars > (size_t)(is_neg ? 2 : 1), ERANGE);
        _VALIDATE_RETURN_ERRCODE(2 <= radix && radix <= 36, EINVAL);
        length = 0;

#endif  /* _SECURE_ITOA */
        p = buf;

        if (is_neg) {
            /* negative, so output '-' and negate */
            *p++ = _T('-');
#ifdef _SECURE_ITOA
            length++;
#endif  /* _SECURE_ITOA */
            val = (unsigned long)(-(long)val);
        }

        firstdig = p;           /* save pointer to first digit */

        do {
            digval = (unsigned) (val % radix);
            val /= radix;       /* get next digit */

            /* convert to ascii and store */
            if (digval > 9)
                *p++ = (TCHAR) (digval - 10 + _T('a'));  /* a letter */
            else
                *p++ = (TCHAR) (digval + _T('0'));       /* a digit */
#ifndef _SECURE_ITOA
        } while (val > 0);
#else  /* _SECURE_ITOA */
            length++;
        } while (val > 0 && length < sizeInTChars);

        /* Check for buffer overrun */
        if (length >= sizeInTChars)
        {
            buf[0] = '\0';
            _VALIDATE_RETURN_ERRCODE(length < sizeInTChars, ERANGE);
        }
#endif  /* _SECURE_ITOA */
        /* We now have the digit of the number in the buffer, but in reverse
           order.  Thus we reverse them now. */

        *p-- = _T('\0');            /* terminate string; p points to last digit */

        do {
            temp = *p;
            *p = *firstdig;
            *firstdig = temp;   /* swap *p and *firstdig */
            --p;
            ++firstdig;         /* advance to next two digits */
        } while (firstdig < p); /* repeat until halfway */
#ifdef _SECURE_ITOA
        return 0;
#endif  /* _SECURE_ITOA */
}

/* Actual functions just call conversion helper with neg flag set correctly,
   and return pointer to buffer. */

#ifdef _SECURE_ITOA
errno_t __cdecl _itox_s (
        int val,
        TCHAR *buf,
        size_t sizeInTChars,
        int radix
        )
{
        errno_t e = 0;

        if (radix == 10 && val < 0)
            e = xtox_s((unsigned long)val, buf, sizeInTChars, radix, 1);
        else
            e = xtox_s((unsigned long)(unsigned int)val, buf, sizeInTChars, radix, 0);

        return e;
}

errno_t __cdecl _ltox_s (
        long val,
        TCHAR *buf,
        size_t sizeInTChars,
        int radix
        )
{
        return xtox_s((unsigned long)val, buf, sizeInTChars, radix, (radix == 10 && val < 0));
}

errno_t __cdecl _ultox_s (
        unsigned long val,
        TCHAR *buf,
        size_t sizeInTChars,
        int radix
        )
{
        return xtox_s(val, buf, sizeInTChars, radix, 0);
}

#else  /* _SECURE_ITOA */

/***
*char *_itoa, *_ltoa, *_ultoa(val, buf, radix) - convert binary int to ASCII
*       string
*
*Purpose:
*       Converts an int to a character string.
*
*Entry:
*       val - number to be converted (int, long or unsigned long)
*       int radix - base to convert into
*       char *buf - ptr to buffer to place result
*
*Exit:
*       fills in space pointed to by buf with string result
*       returns a pointer to this buffer
*
*Exceptions:
*           Input parameters are validated. The buffer is assumed to be big enough to
*       contain the string. Refer to the validation section of the function.
*
*******************************************************************************/

/* Actual functions just call conversion helper with neg flag set correctly,
   and return pointer to buffer. */

TCHAR * __cdecl _itox (
        int val,
        TCHAR *buf,
        int radix
        )
{
        if (radix == 10 && val < 0)
            xtox((unsigned long)val, buf, radix, 1);
        else
            xtox((unsigned long)(unsigned int)val, buf, radix, 0);
        return buf;
}

TCHAR * __cdecl _ltox (
        long val,
        TCHAR *buf,
        int radix
        )
{
        xtox((unsigned long)val, buf, radix, (radix == 10 && val < 0));
        return buf;
}

TCHAR * __cdecl _ultox (
        unsigned long val,
        TCHAR *buf,
        int radix
        )
{
        xtox(val, buf, radix, 0);
        return buf;
}

#endif  /* _SECURE_ITOA */

#ifndef _NO_INT64

/***
*char *_i64toa_s(val, buf, sizeInTChars, radix) - convert binary int to ASCII
*       string
*
*Purpose:
*       Converts an int64 to a character string.
*
*Entry:
*       val - number to be converted
*       char *buf - ptr to buffer to place result
*       size_t sizeInTChars - size of the destination buffer
*       int radix - base to convert into
*
*Exit:
*       Fills in space pointed to by buf with string result.
*       Returns the errno_t: err != 0 means that something went wrong, and
*       an empty string (buf[0] = 0) is returned.
*
*Exceptions:
*       Input parameters and buffer length are validated.
*       Refer to the validation section of the function.
*
*******************************************************************************/

#ifdef _SECURE_ITOA
static errno_t __fastcall x64tox_s
        (/* stdcall is faster and smaller... Might as well use it for the helper. */
        unsigned __int64 val,
        TCHAR *buf,
        size_t sizeInTChars,
        unsigned radix,
        int is_neg
        )
#else  /* _SECURE_ITOA */
static void __fastcall x64tox
        (/* stdcall is faster and smaller... Might as well use it for the helper. */
        unsigned __int64 val,
        TCHAR *buf,
        unsigned radix,
        int is_neg
        )
#endif  /* _SECURE_ITOA */
{
        TCHAR *p;                /* pointer to traverse string */
        TCHAR *firstdig;         /* pointer to first digit */
        TCHAR temp;              /* temp char */
        unsigned digval;         /* value of digit */
#ifdef _SECURE_ITOA
        size_t length;           /* current length of the string */

        /* validation section */
        _VALIDATE_RETURN_ERRCODE(buf != NULL, EINVAL);
        _VALIDATE_RETURN_ERRCODE(sizeInTChars > 0, EINVAL);
        _RESET_STRING(buf, sizeInTChars);
        _VALIDATE_RETURN_ERRCODE(sizeInTChars > (size_t)(is_neg ? 2 : 1), ERANGE);
        _VALIDATE_RETURN_ERRCODE(2 <= radix && radix <= 36, EINVAL);
        length = 0;
#endif  /* _SECURE_ITOA */
        p = buf;

        if ( is_neg )
        {
            *p++ = _T('-');         /* negative, so output '-' and negate */
#ifdef _SECURE_ITOA
            length++;
#endif  /* _SECURE_ITOA */
            val = (unsigned __int64)(-(__int64)val);
        }

        firstdig = p;           /* save pointer to first digit */

        do {
            digval = (unsigned) (val % radix);
            val /= radix;       /* get next digit */

            /* convert to ascii and store */
            if (digval > 9)
                *p++ = (TCHAR) (digval - 10 + _T('a'));  /* a letter */
            else
                *p++ = (TCHAR) (digval + _T('0'));       /* a digit */

#ifndef _SECURE_ITOA
        } while (val > 0);
#else  /* _SECURE_ITOA */
            length++;
        } while (val > 0 && length < sizeInTChars);

        /* Check for buffer overrun */
        if (length >= sizeInTChars)
        {
            buf[0] = '\0';
            _VALIDATE_RETURN_ERRCODE(length < sizeInTChars, ERANGE);
        }
#endif  /* _SECURE_ITOA */
        /* We now have the digit of the number in the buffer, but in reverse
           order.  Thus we reverse them now. */

        *p-- = _T('\0');            /* terminate string; p points to last digit */

        do {
            temp = *p;
            *p = *firstdig;
            *firstdig = temp;   /* swap *p and *firstdig */
            --p;
            ++firstdig;         /* advance to next two digits */
        } while (firstdig < p); /* repeat until halfway */

#ifdef _SECURE_ITOA
        return 0;
#endif  /* _SECURE_ITOA */
}

#ifdef _SECURE_ITOA

/* Actual functions just call conversion helper with neg flag set correctly,
   and return pointer to buffer. */

errno_t __cdecl _i64tox_s (
        __int64 val,
        TCHAR *buf,
        size_t sizeInTChars,
        int radix
        )
{
        return x64tox_s((unsigned __int64)val, buf, sizeInTChars, radix, (radix == 10 && val < 0));
}

errno_t __cdecl _ui64tox_s (
        unsigned __int64 val,
        TCHAR *buf,
        size_t sizeInTChars,
        int radix
        )
{
        return x64tox_s(val, buf, sizeInTChars, radix, 0);
}

#else  /* _SECURE_ITOA */

/***
*char *_i64toa(val, buf, radix) - convert binary int to ASCII
*       string
*
*Purpose:
*       Converts an int64 to a character string.
*
*Entry:
*       val - number to be converted
*       int radix - base to convert into
*       char *buf - ptr to buffer to place result
*
*Exit:
*       fills in space pointed to by buf with string result
*       returns a pointer to this buffer
*
*Exceptions:
*           Input parameters are validated. The buffer is assumed to be big enough to
*       contain the string. Refer to the validation section of the function.
*
*******************************************************************************/

/* Actual functions just call conversion helper with neg flag set correctly,
   and return pointer to buffer. */

TCHAR * __cdecl _i64tox (
        __int64 val,
        TCHAR *buf,
        int radix
        )
{
        x64tox((unsigned __int64)val, buf, radix, (radix == 10 && val < 0));
        return buf;
}

TCHAR * __cdecl _ui64tox (
        unsigned __int64 val,
        TCHAR *buf,
        int radix
        )
{
        x64tox(val, buf, radix, 0);
        return buf;
}

#endif  /* _SECURE_ITOA */

#endif  /* _NO_INT64 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xstoull.c ===
/* _Stoull function */
#include <stdlib.h>
#include <ctype.h>
#include <errno.h>
#include <limits.h>
#include <stddef.h>
#include <string.h>
#include "xmath.h"

#define MYMAX	_ULLONG_MAX	/* ULLONG_MAX */

 #if (MYMAX >> 16) >> 16 != 0xffffffff && MYMAX != 0xffffffff
  #error LONG LONGS TOO LARGE FOR _Stoull
 #endif /* long longs too large */

 #define BIG_TABLE	(MYMAX >> 16) >> 16 == 0xffffffff

_C_STD_BEGIN

		/* macros */
#define BASE_MAX	36	/* largest valid base */

		/* static data */
static const char digits[] = 	/* valid digits */
	"0123456789abcdefghijklmnopqrstuvwxyz";

 #if BIG_TABLE
static const char ndigs[BASE_MAX + 1] = {	/* 64-bits! */
	0, 0, 65, 41, 33, 28, 25, 23, 22, 21,
	20, 19, 18, 18, 17, 17, 17, 16, 16, 16,
	15, 15, 15, 15, 14, 14, 14, 14, 14, 14,
	14, 13, 13, 13, 13, 13, 13,};

 #else /* BIG_TABLE */
static const char ndigs[BASE_MAX+1] = {	/* 32-bits! */
	0, 0, 33, 21, 17, 14, 13, 12, 11, 11,
	10, 10, 9, 9, 9, 9, 9, 8, 8, 8,
	8, 8, 8, 8, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7,};
 #endif /* BIG_TABLE */

_CRTIMP2_PURE _ULonglong __CLRCALL_PURE_OR_CDECL _Stoullx(const char *s, char **endptr,
	int base, int *perr)
	{	/* convert string to unsigned long long, with checking */
	const char *sc, *sd;
	const char *s1, *s2;
	char dig, sign;
	ptrdiff_t n;
	_ULonglong x, y;

	if (perr != 0)
		*perr = 0;
	for (sc = s; isspace((unsigned char)*sc); ++sc)
		;
	sign = (char)(*sc == '-' || *sc == '+' ? *sc++ : '+');
	if (base < 0 || base == 1 || BASE_MAX < base)
		{	/* silly base */
		if (endptr != 0)
			*endptr = (char *)s;
		return (0);
		}
	else if (0 < base)
		{	/* strip 0x or 0X */
		if (base == 16 && *sc == '0'
			&& (sc[1] == 'x' || sc[1] == 'X'))
			sc += 2;
		}
	else if (*sc != '0')
		base = 10;
	else if (sc[1] == 'x' || sc[1] == 'X')
		base = 16, sc += 2;
	else
		base = 8;
	for (s1 = sc; *sc == '0'; ++sc)
		;	/* skip leading zeros */
	x = 0;
	for (s2 = sc, y = 0, dig = 0; (sd = (char *)memchr(&digits[0],
		tolower(*sc), base)) != 0; ++sc)
		{	/* accumulate digits */
		y = x;
		dig = (char)(sd - digits);	/* for overflow checking */
		x = x * base + dig;
		}
	if (s1 == sc)
		{	/* check string validity */
		if (endptr != 0)
			*endptr = (char *)s;
		return (0);
		}
	n = sc - s2 - ndigs[base];
	if (n < 0)
		;
	else if (0 < n || x < x - dig || (x - dig) / base != y)
		{	/* overflow */
		errno = ERANGE;
		if (perr != 0)
			*perr = 1;
		x = MYMAX, sign = '+';
		}
	if (sign == '-')	/* get final value */
		x = 0 - x;
	if (endptr != 0)
		*endptr = (char *)sc;
	return (x);
	}

_CRTIMP2_PURE _ULonglong __CLRCALL_PURE_OR_CDECL _Stoull(const char *s, char **endptr, int base)
	{	/* convert string, discard error code */
	return (_Stoullx(s, endptr, base, 0));
	}
_C_STD_END

/*
 * Copyright (c) 1992-2007 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
 V5.03:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xwcsxfrm.c ===
/***
*xwcsxfrm.c - Transform a wide-character string using locale information
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*
*Purpose:
*       Transform a wide-character string using the locale information as set by
*       LC_COLLATE.
*
*******************************************************************************/


#include <cruntime.h>
#include <windows.h>
#include <string.h>
#include <limits.h>
#include <locale.h>
#include <mtdll.h>
#include <setlocal.h>
#include <stdlib.h>
#include <mtdll.h>
#include <awint.h>
#include <dbgint.h>
#include <xlocinfo.h>   /* for _Collvec, _Wcsxfrm */

/***
*size_t _Wcsxfrm() - Transform a string using locale information
*
*Purpose:
*       Transform the wide string pointed to by _string2 and place the
*       resulting wide string into the array pointed to by _string1.
*       No more than _end1 - _string1 wide characters are placed into the
*       resulting string (including the null).
*
*       The transformation is such that if wcscmp() is applied to
*       the two transformed strings, the return value is equal to
*       the result of wcscoll() applied to the two original strings.
*       Thus, the conversion must take the locale LC_COLLATE info
*       into account.
*
*       In the C locale, wcsxfrm() simply resolves to wcsncpy()/wcslen().
*
*Entry:
*       wchar_t *_string1       = pointer to beginning of result string
*       wchar_t *_end1          = pointer past end of result string
*       const wchar_t *_string2 = pointer to beginning of source string
*       const wchar_t *_end2    = pointer past end of source string
*       const _Collvec *ploc = pointer to locale info
*
*Exit:
*       Length of the transformed string.
*       If the value returned is too big, the contents of the
*       _string1 array are indeterminate.
*
*Exceptions:
*       Non-standard: if OM/API error, return INT_MAX.
*
*******************************************************************************/

_CRTIMP2_PURE size_t __CLRCALL_PURE_OR_CDECL _Wcsxfrm (
        wchar_t *_string1,
        wchar_t *_end1,
        const wchar_t *_string2,
        const wchar_t *_end2,
        const _Collvec *ploc
        )
{
        size_t _n1 = _end1 - _string1;
        size_t _n2 = _end2 - _string2;
        size_t size = (size_t)-1;
        unsigned char *bbuffer=NULL;
        LCID handle;

        if (ploc == 0)
        {
            handle = ___lc_handle_func()[LC_COLLATE];
        }
        else
        {
            handle = ploc->_Hand;
        }

        if (handle == _CLOCALEHANDLE)
        {
            if (_n2 <= _n1)
            {
                memcpy(_string1, _string2, _n2 * sizeof (wchar_t));
            }
            size=_n2;
        }
        else
        {

            /*
            * When using LCMAP_SORTKEY, LCMapStringW handles BYTES not wide
            * chars. We use a byte buffer to hold bytes and then convert the
            * byte string to a wide char string and return this so it can be
            * compared using wcscmp(). User's buffer is _n1 wide chars, so
            * use an internal buffer of _n1 bytes.
            */

            if (NULL != (bbuffer = (unsigned char *)_malloc_crt(_n1)))
            {
                if (0 == (size = __crtLCMapStringW(NULL, handle,
                                                   LCMAP_SORTKEY,
                                                   _string2,
                                                   (int)_n2,
                                                   (wchar_t *)bbuffer,
                                                   (int)_n1,
                                                   ___lc_collate_cp_func())))
                {
                    /* buffer not big enough, get size required. */

                    if (0 == (size = __crtLCMapStringW(NULL, handle,
                                                       LCMAP_SORTKEY,
                                                       _string2,
                                                       (int)_n2,
                                                       NULL,
                                                       0,
                                                       ___lc_collate_cp_func())))
                    {
                        size = INT_MAX; /* default error */
                    }
                } else {
                    size_t i;
                    /* string successfully mapped, convert to wide char */

                    for (i = 0; i < size; i++)
                    {
                        _string1[i] = (wchar_t)bbuffer[i];
                    }
                }
            }
        }

        if(bbuffer)
        {
            _free_crt(bbuffer);
        }

        return (size_t)size;
}

#ifdef MRTDLL
_CRTIMP2_PURE size_t __CLRCALL_PURE_OR_CDECL _Wcsxfrm (
        unsigned short *_string1,
        unsigned short *_end1,
        const unsigned short *_string2,
        const unsigned short *_end2,
        const _Collvec *ploc
        )
    {
    return _Wcsxfrm(
        (wchar_t *)_string1,
        (wchar_t *)_end1,
        (const wchar_t *)_string2,
        (const wchar_t *)_end2,
        ploc);
    }
#endif  /* MRTDLL */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xstrxfrm.c ===
/***
*xstrxfrm.c - Transform a string using locale information
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       Transform a string using the locale information as set by
*       LC_COLLATE.
*
*******************************************************************************/

#include <cruntime.h>
#include <string.h>
#include <xlocinfo.h>   /* for _Collvec */
#include <windows.h>
#include <stdlib.h>
#include <limits.h>
#include <malloc.h>
#include <locale.h>
#include <mtdll.h>
#include <setlocal.h>
#include <awint.h>

/***
*size_t _Strxfrm() - Transform a string using locale information
*
*Purpose:
*       Transform the string pointer to by _string2 and place the
*       resulting string into the array pointer to by _string1.
*       No more than _end1 - _string1 characters are place into the
*       resulting string (including the null).
*
*       The transformation is such that if strcmp() is applied to
*       the two transformed strings, the return value is equal to
*       the result of strcoll() applied to the two original strings.
*       Thus, the conversion must take the locale LC_COLLATE info
*       into account.
*       [ANSI]
*
*       The value of the following expression is the size of the array
*       needed to hold the transformation of the source string:
*
*               1 + strxfrm(NULL,string,0)
*
*       NOTE:  Currently, the C libraries support the "C" locale only.
*       Thus, _Strxfrm() simply resolves to strncpy()/strlen().
*
*Entry:
*       char *_string1       = pointer to beginning of result string
*       char *_end1          = pointer past end of result string
*       const char *_string2 = pointer to beginning of source string
*       const char *_end2    = pointer past end of source string
*       const _Collvec *ploc = pointer to locale info
*
*Exit:
*       Length of the transformed string.
*       If the value returned is too big, the contents of the
*       _string1 array are indeterminate.
*
*Exceptions:
*       Non-standard: if OM/API error, return INT_MAX.
*
*******************************************************************************/

_CRTIMP2_PURE size_t __CLRCALL_PURE_OR_CDECL _Strxfrm (
        char *_string1,
        char *_end1,
        const char *_string2,
        const char *_end2,
        const _Collvec *ploc
        )
{
        size_t _n1 = _end1 - _string1;
        size_t _n2 = _end2 - _string2;
        int dstlen;
        size_t retval = (size_t)-1;   /* NON-ANSI: default if OM or API error */
        LCID handle;
        UINT codepage;

        if (ploc == 0)
        {
            handle = ___lc_handle_func()[LC_COLLATE];
            codepage = ___lc_collate_cp_func();
        }
        else
        {
            handle = ploc->_Hand;
            codepage = ploc->_Page;
        }

        if ((handle == _CLOCALEHANDLE) &&
            (codepage == _CLOCALECP))
        {
            if (_n2 <= _n1)
            {
                memcpy(_string1, _string2, _n2);
            }
            retval=_n2;
        }
        else
        {
            /* Inquire size of dst string in BYTES */
            if (0 != (dstlen = __crtLCMapStringA(NULL,
                                                 handle,
                                                 LCMAP_SORTKEY,
                                                 _string2,
                                                 (int)_n2,
                                                 NULL,
                                                 0,
                                                 codepage,
                                                 TRUE)))
            {
                retval = dstlen;

                /* if not enough room, return amount needed */
                if (dstlen <= (int)(_n1))
                {
                    /* Map src string to dst string */
                    __crtLCMapStringA(NULL,
                                      handle,
                                      LCMAP_SORTKEY,
                                      _string2,
                                      (int)_n2,
                                      _string1,
                                      (int)_n1,
                                      codepage,
                                      TRUE);
                }
            }
        }

        return (size_t)retval;
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xxcctype.h ===
/* xxcctype.h -- parameters for char character type */

#define CTYPE	char
#define CNAME(fun)	_##fun

/*
 * Copyright (c) 1992-2004 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
 V4.04:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xxlftype.h ===
/* xxlftype.h -- parameters for long double floating-point type */
#include <yvals.h>
#include <float.h>

#define FTYPE	long double
#define FCTYPE	_Lcomplex
#define FBITS	LDBL_MANT_DIG
#define FEPS	LDBL_EPSILON
#define FMAXEXP	LDBL_MAX_EXP
#define FFUN(fun)	fun##l
#define FMACRO(x)	L##x
#define FNAME(fun)	_L##fun
#define FCONST(obj)	_L##obj._Long_double
#define FLIT(lit)	lit##L
#define FISNEG(exp)	LSIGN(exp)
#define FCPTYPE	complex<long double>

/*
 * Copyright (c) 1992-2007 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
 V5.03:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xtows.c ===
/***
*xtows.c - Secure Version of xtow.c
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       This module is split from xtow to avoid xtow.obj pulling in startup code
*
*******************************************************************************/

#define _SECURE_ITOA
#define _UNICODE
#include "xtoa.c"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xwctomb.c ===
/***
*xwctomb.c - Convert wide character to multibyte character, with locale.
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       Convert a wide character into the equivalent multibyte character.
*
*******************************************************************************/


#include <cruntime.h>
#include <stdlib.h>
#include <mtdll.h>
#include <errno.h>
#include <limits.h>             /* for MB_LEN_MAX */
#include <string.h>             /* for memcpy */
#include <stdio.h>              /* for EOF */
#include <xlocinfo.h>           /* for _Cvtvec, _Wcrtomb */
#include <locale.h>
#include <setlocal.h>
#include <internal.h>

/***
*int _Wcrtomb() - Convert wide character to multibyte character.
*
*Purpose:
*       Convert a wide character into the equivalent multi-byte character,
*       according to the specified LC_CTYPE category, or the current locale.
*       [ANSI].
*
*       NOTE:  Currently, the C libraries support the "C" locale only.
*              Non-C locale support now available under _INTL switch.
*Entry:
*       char *s             = pointer to multibyte character
*       wchar_t wchar       = source wide character
*       mbstate_t *pst      = pointer to state (not used)
*       const _Cvtvec *ploc = pointer to locale info
*
*Exit:
*       Returns:
*      -1 (if error) or number of bytes comprising converted mbc
*
*Exceptions:
*
*******************************************************************************/

/* Retained for backward compatibility of DLL exports only */
_MRTIMP2 int __cdecl __Wcrtomb_lk
        (
        char *s,
        wchar_t wchar,
        mbstate_t *pst,
        const _Cvtvec *ploc
        )
{
        return _Wcrtomb(s, wchar, pst, ploc);
}

_MRTIMP2 int __cdecl _Wcrtomb
        (
        char *s,
        wchar_t wchar,
        mbstate_t *pst,
        const _Cvtvec *ploc
        )
{
        LCID handle;
        UINT codepage;

        if (ploc == 0)
        {
            handle = ___lc_handle_func()[LC_CTYPE];
            codepage = ___lc_codepage_func();
        }
        else
        {
            handle = ploc->_Hand;
            codepage = ploc->_Page;
        }

        if ( handle == _CLOCALEHANDLE )
        {
            if ( wchar > 255 )  /* validate high byte */
            {
                errno = EILSEQ;
                return -1;
            }

            *s = (char) wchar;
            return sizeof(char);
        } else {
            int size;
            BOOL defused = 0;
            _locale_t locale = _GetLocaleForCP(codepage);

            if ( ((size = WideCharToMultiByte(codepage,
                                              0,
                                              &wchar,
                                              1,
                                              s,
                                              ___mb_cur_max_l_func(locale),
                                              NULL,
                                              &defused)) == 0) ||
                 (defused) )
            {
                errno = EILSEQ;
                return -1;
            }

            return size;
        }
}

#ifdef MRTDLL
_MRTIMP2 int __cdecl _Wcrtomb
        (
        char *s,
        unsigned short wchar,
        mbstate_t *pst,
        const _Cvtvec *ploc
        )
    {
    return _Wcrtomb(s,(wchar_t) wchar, pst, ploc);
    }
#endif  /* MRTDLL */

/***
*_Cvtvec _Getcvt() - get conversion info for current locale
*
*Purpose:
*
*Entry:
*
*Exit:
*
*Exceptions:
*
*******************************************************************************/

_MRTIMP2 _Cvtvec __cdecl _Getcvt()
{
        _Cvtvec cvt;

        cvt._Hand = ___lc_handle_func()[LC_CTYPE];
        cvt._Page = ___lc_codepage_func();

        return (cvt);
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xxstod.h ===
/* xxstod.h -- obsolete */

#error "This file is no longer used and will be deleted in the next version"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xxfftype.h ===
/* xxfftype.h -- parameters for float floating-point type */
#include <yvals.h>
#include <float.h>

#define FTYPE	float
#define FCTYPE	_Fcomplex
#define FBITS	FLT_MANT_DIG
#define FEPS	FLT_EPSILON
#define FMAXEXP	FLT_MAX_EXP
#define FFUN(fun)	fun##f
#define FMACRO(x)	F##x
#define FNAME(fun)	_F##fun
#define FCONST(obj)	_F##obj._Float
#define FLIT(lit)	lit##F
#define FISNEG(exp)	FSIGN(exp)
#define FCPTYPE	complex<float>

/*
 * Copyright (c) 1992-2007 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
 V5.03:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xwcscoll.c ===
/***
*xwcscoll.c - Collate wide-character locale strings
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       Compare two wchar_t strings using the locale LC_COLLATE information.
*
*******************************************************************************/


#include <cruntime.h>
#include <windows.h>
#include <stdlib.h>
#include <string.h>
#include <locale.h>
#include <mtdll.h>
#include <setlocal.h>
#include <mtdll.h>
#include <errno.h>
#include <awint.h>
#include <xlocinfo.h>   /* for _Collvec, _Wcscoll */

/***
*static int _Wmemcmp(s1, s2, n) - compare wchar_t s1[n], s2[n]
*
*Purpose:
*
*Entry:
*
*Exit:
*
*Exceptions:
*
*******************************************************************************/

static int __CLRCALL_PURE_OR_CDECL _Wmemcmp(
        const wchar_t *s1,
        const wchar_t *s2,
        int n
        )
{
        for (; 0 < n; ++s1, ++s2, --n)
             if (*s1 != *s2)
               return (*s1 < *s2 ? -1 : +1);
        return (0);
}

/***
*int _Wcscoll() - Collate wide-character locale strings
*
*Purpose:
*       Compare two wchar_t strings using the locale LC_COLLATE information.
*       In the C locale, wcscmp() is used to make the comparison.
*
*Entry:
*       const wchar_t *_string1 = pointer to beginning of the first string
*       const wchar_t *_end1    = pointer past end of the first string
*       const wchar_t *_string2 = pointer to beginning of the second string
*       const wchar_t *_end2    = pointer past end of the second string
*       const _Collvec *ploc = pointer to locale info
*
*Exit:
*       -1 = first string less than second string
*        0 = strings are equal
*        1 = first string greater than second string
*       This range of return values may differ from other *cmp/*coll functions.
*
*Exceptions:
*       _NLSCMPERROR    = error
*       errno = EINVAL
*
*******************************************************************************/

_CRTIMP2_PURE int __CLRCALL_PURE_OR_CDECL _Wcscoll (
        const wchar_t *_string1,
        const wchar_t *_end1,
        const wchar_t *_string2,
        const wchar_t *_end2,
        const _Collvec *ploc
        )
{
        int n1 = (int)(_end1 - _string1);
        int n2 = (int)(_end2 - _string2);
        int ret=0;
        LCID handle;

        if (ploc == 0)
            handle = ___lc_handle_func()[LC_COLLATE];
        else
            handle = ploc->_Hand;

        if (handle == _CLOCALEHANDLE) {
            int ans;
            ans = _Wmemcmp(_string1, _string2, n1 < n2 ? n1 : n2);
            ret=(ans != 0 || n1 == n2 ? ans : n1 < n2 ? -1 : +1);
        }
        else
        {
            if (0 == (ret = __crtCompareStringW(NULL, handle,
                                                SORT_STRINGSORT,
                                                _string1,
                                                n1,
                                                _string2,
                                                n2,
                                                ___lc_collate_cp_func())))
            {
                errno = EINVAL;
                ret=_NLSCMPERROR;
            }
            else
            {
                ret-=2;
            }
        }

        return ret;
}

#ifdef MRTDLL
_CRTIMP2_PURE int __CLRCALL_PURE_OR_CDECL _Wcscoll (
        const unsigned short *_string1,
        const unsigned short *_end1,
        const unsigned short *_string2,
        const unsigned short *_end2,
        const _Collvec *ploc
        )
    {
    return _Wcscoll(
            (const wchar_t *)_string1,
            (const wchar_t *)_end1,
            (const wchar_t *)_string2,
            (const wchar_t *)_end2,
            ploc);
    }
#endif  /* MRTDLL */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\_filwbuf.c ===
/***
*_filwbuf.c - fill buffer and get wide character
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       defines _filwbuf() - fill buffer and read first character, allocate
*       buffer if there is none.  Used from getwc().
*
*******************************************************************************/



#ifndef _UNICODE
#define _UNICODE 1
#endif  /* _UNICODE */

#ifndef UNICODE
#define UNICODE 1
#endif  /* UNICODE */

#include "_filbuf.c"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xxdftype.h ===
/* xxdftype.h -- parameters for double floating-point type */
#include <yvals.h>
#include <float.h>

#define FTYPE	double
#define FCTYPE	_Dcomplex
#define FBITS	DBL_MANT_DIG
#define FEPS	DBL_EPSILON
#define FMAXEXP	DBL_MAX_EXP
#define FFUN(fun)	fun
#define FMACRO(x)	x
#define FNAME(fun)	_##fun
#define FCONST(obj)	_##obj._Double
#define FLIT(lit)	lit
#define FISNEG(exp)	DSIGN(exp)
#define FCPTYPE	complex<double>

/*
 * Copyright (c) 1992-2007 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
 V5.03:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\xvalues.c ===
/* values used by math functions -- IEEE 754 version */
#if defined(_M_CEE_PURE)
#if defined(MRTDLL)
#undef MRTDLL
#endif
#if defined(MRTDLL)
#undef CRTDLL
#endif
#endif

#include "xmath.h"
_C_STD_BEGIN

		/* macros */
#define NBITS	(48 + _DOFF)

 #if _D0 == 0
  #define INIT(w0)		{w0, 0, 0, 0}
  #define INIT2(w0, w1)	{w0, 0, 0, w1}

 #else /* _D0 == 0 */
  #define INIT(w0)		{0, 0, 0, w0}
  #define INIT2(w0, w1)	{w1, 0, 0, w0}
 #endif /* _D0 == 0 */

		/* static data */
extern /* const */ _Dconst _Denorm = {INIT2(0, 1)};
extern /* const */ _Dconst _Eps = {
	INIT((_DBIAS - NBITS - 1) << _DOFF)};
extern /* const */ _Dconst _Hugeval = {INIT(_DMAX << _DOFF)};
extern /* const */ _Dconst _Inf = {INIT(_DMAX << _DOFF)};
extern /* const */ _Dconst _Nan = {INIT((_DMAX << _DOFF)
	| (1 << (_DOFF - 1)))};
extern /* const */ _Dconst _Snan = {INIT2(_DMAX << _DOFF, 1)};
extern /* const */ _Dconst _Rteps = {
	INIT((_DBIAS - NBITS / 2) << _DOFF)};

extern /* const */ double _Xbig = (NBITS + 1) * 347L / 1000;
extern /* const */ double _Zero = 0.0;
_C_STD_END

/*
 * Copyright (c) 1992-2007 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
 V5.03:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\_flsbuf.c ===
/***
*_flsbuf.c - flush buffer and output character.
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       defines _flsbuf() - flush a file buffer and output a character.
*       defines _flswbuf() - flush a file buffer and output a wide character.
*       If no buffer, make one.
*
*******************************************************************************/

#include <cruntime.h>
#include <stdio.h>
#include <file2.h>
#include <io.h>
#include <dbgint.h>
#include <malloc.h>
#include <msdos.h>
#include <wchar.h>
#include <internal.h>
#include <mtdll.h>
#include <tchar.h>

#ifndef _UNICODE

/***
*int _flsbuf(ch, stream) - flush buffer and output character.
*
*Purpose:
*       flush a buffer if this stream has one. if not, try to get one. put the
*       next output char (ch) into the buffer (or output it immediately if this
*       stream can't have a buffer). called only from putc. intended for use
*       only within library.
*
*       [NOTE: Multi-thread - It is assumed that the caller has aquired
*       the stream lock.]
*
*Entry:
*       FILE *stream - stream to flish and write on
*       int ch - character to output.
*
*Exit:
*       returns -1 if FILE is actually a string, or if can't write ch to
*       unbuffered file, or if we flush a buffer but the number of chars
*       written doesn't agree with buffer size.  Otherwise returns ch.
*       all fields in FILE struct can be affected except _file.
*
*Exceptions:
*
*******************************************************************************/

int __cdecl _flsbuf (
        int ch,
        FILE *str
        )

#else  /* _UNICODE */

/***
*int _flswbuf(ch, stream) - flush buffer and output wide character.
*
*Purpose:
*       flush a buffer if this stream has one. if not, try to get one. put the
*       next output wide char (ch) into the buffer (or output it immediately if this
*       stream can't have a buffer). called only from putwc. intended for use
*       only within library.
*
*       [NOTE: Multi-thread - It is assumed that the caller has aquired
*       the stream lock.]
*
*Entry:
*       FILE *stream - stream to flish and write on
*       int ch - wide character to output.
*
*Exit:
*       returns -1 if FILE is actually a string, or if can't write ch to
*       unbuffered file, or if we flush a buffer but the number of wide chars
*       written doesn't agree with buffer size.  Otherwise returns ch.
*       all fields in FILE struct can be affected except _file.
*
*Exceptions:
*
*******************************************************************************/

int __cdecl _flswbuf (
        int ch,
        FILE *str
        )

#endif  /* _UNICODE */

{

        REG1 FILE *stream;
        REG2 int charcount;
        REG3 int written;
        int fh;

        _ASSERTE(str != NULL);

        /* Init file handle and pointers */
        stream = str;
        fh = _fileno(stream);

        if (!(stream->_flag & (_IOWRT|_IORW))) {
                errno = EBADF;
                stream->_flag |= _IOERR;
                return(_TEOF);
        } else if ((stream->_flag & _IOSTRG)) {
                errno = ERANGE;
                stream->_flag |= _IOERR;
                return(_TEOF);
        }

        /* Check that _IOREAD is not set or, if it is, then so is _IOEOF. Note
           that _IOREAD and IOEOF both being set implies switching from read to
           write at end-of-file, which is allowed by ANSI. Note that resetting
           the _cnt and _ptr fields amounts to doing an fflush() on the stream
           in this case. Note also that the _cnt field has to be reset to 0 for
           the error path as well (i.e., _IOREAD set but _IOEOF not set) as
           well as the non-error path. */

        if (stream->_flag & _IOREAD) {
                stream->_cnt = 0;
                if (stream->_flag & _IOEOF) {
                        stream->_ptr = stream->_base;
                        stream->_flag &= ~_IOREAD;
                }
                else {
                        stream->_flag |= _IOERR;
                        return(_TEOF);
                }
        }

        stream->_flag |= _IOWRT;
        stream->_flag &= ~_IOEOF;
        written = charcount = stream->_cnt = 0;

        /* Get a buffer for this stream, if necessary. */
        if (!anybuf(stream)) {

                /* Do NOT get a buffer if (1) stream is stdout/stderr, and
                   (2) stream is NOT a tty.
                   [If stdout/stderr is a tty, we do NOT set up single char
                   buffering. This is so that later temporary buffering will
                   not be thwarted by the _IONBF bit being set (see
                   _stbuf/_ftbuf usage).]
                */
                if (!( ((stream==stdout) || (stream==stderr))
                && (_isatty(fh)) ))

                        _getbuf(stream);

        } /* end !anybuf() */

        /* If big buffer is assigned to stream... */
        if (bigbuf(stream)) {

                _ASSERTE(("inconsistent IOB fields", stream->_ptr - stream->_base >= 0));

                charcount = (int)(stream->_ptr - stream->_base);
                stream->_ptr = stream->_base + sizeof(TCHAR);
                stream->_cnt = stream->_bufsiz - (int)sizeof(TCHAR);

                if (charcount > 0)
                        written = _write(fh, stream->_base, charcount);
                else
                        if (_osfile_safe(fh) & FAPPEND)
                                                {
                                                        if( _lseeki64(fh,0L,SEEK_END)==-1)
                                                        {
                                                                stream->_flag |= _IOERR;
                                                                return(_TEOF);
                                                        }
                                                }

#ifndef _UNICODE
                *stream->_base = (char)ch;
#else  /* _UNICODE */
                *(wchar_t *)(stream->_base) = (wchar_t)(ch & 0xffff);
#endif  /* _UNICODE */
        }

    /* Perform single character output (either _IONBF or no buffering) */
        else {
                charcount = sizeof(TCHAR);
#ifndef _UNICODE
                written = _write(fh, &ch, charcount);
#else  /* _UNICODE */
                {
                        char mbc[4];

                        *(wchar_t *)mbc = (wchar_t)(ch & 0xffff);
                        written = _write(fh, mbc, charcount);
                }
#endif  /* _UNICODE */
        }

        /* See if the _write() was successful. */
        if (written != charcount) {
                stream->_flag |= _IOERR;
                return(_TEOF);
        }

#ifndef _UNICODE
        return(ch & 0xff);
#else  /* _UNICODE */
        return(ch & 0xffff);
#endif  /* _UNICODE */

}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\_fptostr.c ===
/***
*_fptostr.c - workhorse routine for converting floating point to string
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       Workhorse routine for fcvt, ecvt.
*
*******************************************************************************/

#include <cruntime.h>
#include <string.h>
#include <stddef.h>
#include <fltintrn.h>
#include <internal.h>

/***
*errno_t _fptostr(buf, size, digits, pflt) - workhorse floating point conversion
*
*Purpose:
*       This is the workhorse routine for fcvt, ecvt. Here is where
*       all the digits are put into a buffer and the rounding is
*       performed and indicators of the decimal point position are set. Note,
*       this must not change the mantissa field of pflt since routines which
*       use this routine rely on this being unchanged.
*
*Entry:
*       char *buf - the buffer in which the digits are to be put
*       int digits - the number of digits which are to go into the buffer
*       STRFLT pflt - a pointer to a structure containing information on the
*               floating point value, including a string containing the
*               non-zero significant digits of the mantissa.
*
*Exit:
*       Changes the contents of the buffer and also may increment the decpt
*       field of the structure pointer to by the 'pflt' parameter if overflow
*       occurs during rounding (e.g. 9.999999... gets rounded to 10.000...).
*
*Exceptions:
*       Input parameters are validated. Refer to the validation section of the function.
*
*******************************************************************************/

errno_t __cdecl _fptostr (
        char *buf,
        size_t sizeInBytes,
        REG4 int digits,
        REG3 STRFLT pflt
        )
{
        REG1 char *pbuf = buf;
        REG2 char *mantissa = pflt->mantissa;

        /* validation section */
        _VALIDATE_RETURN_ERRCODE(buf != NULL, EINVAL);
        _VALIDATE_RETURN_ERRCODE(sizeInBytes > 0, EINVAL);
        buf[0] = '\0';
        /* the buffer will contains ndec decimal digits plus an optional
         * overflow digit for the rounding
         */
        _VALIDATE_RETURN_ERRCODE(sizeInBytes > (size_t)((digits > 0 ? digits : 0) + 1), ERANGE);
        _VALIDATE_RETURN_ERRCODE(pflt != NULL, EINVAL);

        /* initialize the first digit in the buffer to '0' (NOTE - NOT '\0')
         * and set the pointer to the second digit of the buffer.  The first
         * digit is used to handle overflow on rounding (e.g. 9.9999...
         * becomes 10.000...) which requires a carry into the first digit.
         */

        *pbuf++ = '0';

        /* Copy the digits of the value into the buffer (with 0 padding)
         * and insert the terminating null character.
         */

        while (digits > 0) {
                *pbuf++ = (*mantissa) ? *mantissa++ : (char)'0';
                digits--;
        }
        *pbuf = '\0';

        /* do any rounding which may be needed.  Note - if digits < 0 don't
         * do any rounding since in this case, the rounding occurs in  a digit
         * which will not be output beause of the precision requested
         */

        if (digits >= 0 && *mantissa >= '5') {
                pbuf--;
                while (*pbuf == '9')
                        *pbuf-- = '0';
                *pbuf += 1;
        }

        if (*buf == '1') {
                /* the rounding caused overflow into the leading digit (e.g.
                 * 9.999.. went to 10.000...), so increment the decpt position
                 * by 1
                 */
                pflt->decpt++;
        }
        else {
                /* move the entire string to the left one digit to remove the
                 * unused overflow digit.
                 */
                memmove(buf, buf+1, strlen(buf+1)+1);
        }

        return 0;
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\_freebuf.c ===
/***
*_freebuf.c - release a buffer from a stream
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       defines _freebuf() - release a buffer from a stream
*
*******************************************************************************/

#include <cruntime.h>
#include <stdio.h>
#include <file2.h>
#include <dbgint.h>
#include <internal.h>
#include <stdlib.h>

/***
*void _freebuf(stream) - release a buffer from a stream
*
*Purpose:
*       free a buffer if at all possible. free() the space if malloc'd by me.
*       forget about trying to free a user's buffer for him; it may be static
*       memory (not from malloc), so he has to take care of it. this function
*       is not intended for use outside the library.
*
*ifdef _MT
*       Multi-thread notes:
*       _freebuf() does NOT get the stream lock; it is assumed that the
*       caller has already done this.
*endif
*
*Entry:
*       FILE *stream - stream to free bufer on
*
*Exit:
*       Buffer may be freed.
*       No return value.
*
*Exceptions:
*
*******************************************************************************/

void __cdecl _freebuf (
        REG1 FILE *stream
        )
{
        _ASSERTE(stream != NULL);

        if (inuse(stream) && mbuf(stream))
        {
                _free_crt(stream->_base);

                stream->_flag &= ~(_IOMYBUF | _IOSETVBUF);
                stream->_base = stream->_ptr = NULL;
                stream->_cnt = 0;
        }
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\_getbuf.c ===
/***
*_getbuf.c - Get a stream buffer
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       Allocate a buffer and init stream data bases.
*
*******************************************************************************/

#include <cruntime.h>
#include <stdio.h>
#include <file2.h>
#include <malloc.h>
#include <internal.h>
#include <dbgint.h>

/***
*_getbuf() - Allocate a buffer and init stream data bases
*
*Purpose:
*       Allocates a buffer for a stream and inits the stream data bases.
*
*       [NOTE  1: This routine assumes the caller has already checked to make
*       sure the stream needs a buffer.
*
*       [NOTE 2: Multi-thread - Assumes caller has aquired stream lock, if
*       needed.]
*
*Entry:
*       FILE *stream = stream to allocate a buffer for
*
*Exit:
*       void
*
*Exceptions:
*
*******************************************************************************/

void __cdecl _getbuf (
        FILE *str
        )
{
        REG1 FILE *stream;

        _ASSERTE(str != NULL);

#if !defined (CRTDLL)
        /* force library pre-termination procedure */
        _cflush++;
#endif  /* !defined (CRTDLL) */

        /* Init pointers */
        stream = str;


        /* Try to get a big buffer */
        if (stream->_base = _malloc_crt(_INTERNAL_BUFSIZ))
        {
                /* Got a big buffer */
                stream->_flag |= _IOMYBUF;
                stream->_bufsiz = _INTERNAL_BUFSIZ;
        }

        else {


                /* Did NOT get a buffer - use single char buffering. */
                stream->_flag |= _IONBF;
                stream->_base = (char *)&(stream->_charbuf);
                stream->_bufsiz = 2;

        }

        stream->_ptr = stream->_base;
        stream->_cnt = 0;

        return;
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\_file.c ===
/***
*_file.c - Definition of _iob[], initializer and terminator.
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       Defines _iob[], the array of stdio control structures, the initializer
*       and terminator routines, and the multithread locking for stdio.
*
*******************************************************************************/

#include <sect_attribs.h>
#include <cruntime.h>
#include <windows.h>
#include <stdio.h>
#include <file2.h>
#include <internal.h>
#include <malloc.h>
#include <rterr.h>
#include <dbgint.h>
#include <mtdll.h>

/*
 * Buffer for stdin.
 */

char _bufin[_INTERNAL_BUFSIZ];

/*
 * FILE descriptors; preset for stdin/out/err (note that the __tmpnum field
 * is not initialized)
 */
FILE _iob[_IOB_ENTRIES] = {
        /* _ptr, _cnt, _base,  _flag, _file, _charbuf, _bufsiz */

        /* stdin (_iob[0]) */

        { _bufin, 0, _bufin, _IOREAD | _IOYOURBUF, 0, 0, _INTERNAL_BUFSIZ },

        /* stdout (_iob[1]) */

        { NULL, 0, NULL, _IOWRT, 1, 0, 0 },

        /* stderr (_iob[3]) */

        { NULL, 0, NULL, _IOWRT, 2, 0, 0 },

};


/* These functions are for enabling STATIC_CPPLIB functionality */
_CRTIMP FILE * __cdecl __iob_func(void)
{
    return _iob;
}


/*
 * Pointer to array of FILE * or _FILEX * structures.
 */
void ** __piob;

/*
 * Number of open streams (set to _NSTREAM by default)
 */
#ifdef CRTDLL
int _nstream = _NSTREAM_;
#else  /* CRTDLL */
int _nstream;
#endif  /* CRTDLL */


/*
 * Initializer and terminator for stdio
 */
int  __cdecl __initstdio(void);
void __cdecl __endstdio(void);

#ifdef _MSC_VER

_CRTALLOC(".CRT$XIC") static _PIFV pinit = __initstdio;

_CRTALLOC(".CRT$XPXA") static _PVFV pterm = __endstdio;

#endif  /* _MSC_VER */

#ifndef CRTDLL
/*
 * _cflush is a dummy variable used to pull in _endstdio() when any STDIO
 * routine is included in the user program.
 */
int _cflush = 0;
#endif  /* CRTDLL */


/***
* __initstdio - Initialize the stdio system
*
*Purpose:
*       Create and initialize the __piob array.
*
*Entry: <void>
*
*Exit:  Returns _RT_STDIOINIT if error encountered.
*
*Uses:
*
*Exceptions:
*
*******************************************************************************/

int __cdecl __initstdio(void)
{
        int i;

#ifndef CRTDLL
        /*
         * If the user has not supplied a definition of _nstream, set it
         * to _NSTREAM_. If the user has supplied a value that is too small
         * set _nstream to the minimum acceptable value (_IOB_ENTRIES).
         */
        if ( _nstream ==  0 )
            _nstream = _NSTREAM_;
        else if ( _nstream < _IOB_ENTRIES )
            _nstream = _IOB_ENTRIES;
#endif  /* CRTDLL */

        /*
         * Allocate the __piob array. Try for _nstream entries first. If this
         * fails then reset _nstream to _IOB_ENTRIES and try again. If it
         * still fails, bail out with an RTE.
         */
        if ( (__piob = (void **)_calloc_crt( _nstream, sizeof(void *) )) ==
             NULL ) {
            _nstream = _IOB_ENTRIES;
            if ( (__piob = (void **)_calloc_crt( _nstream, sizeof(void *) ))
                 == NULL )
                return _RT_STDIOINIT;
        }

        /*
         * Initialize the first _IOB_ENTRIES to point to the corresponding
         * entries in _iob[].
         */
        for ( i = 0 ; i < _IOB_ENTRIES ; i++ )
            __piob[i] = (void *)&_iob[i];

        for ( i = 0 ; i < 3 ; i++ ) {
            if ( (_osfhnd(i) == (intptr_t)INVALID_HANDLE_VALUE) ||
                 (_osfhnd(i) == _NO_CONSOLE_FILENO) ||
                 (_osfhnd(i) == 0) )
            {
            /*
             * For stdin, stdout & stderr, we use _NO_CONSOLE_FILENO (a value
             * different from _INVALID_HANDLE_VALUE to distinguish between
             * a failure in opening a file & a program run without a console.
             */
                _iob[i]._file = _NO_CONSOLE_FILENO;
            }
        }

        return 0;
}


/***
* __endstdio - Terminate the stdio system
*
*Purpose:
*       Terminate the stdio system
*
*       (1) Flush all streams.  (Do this even if we're going to
*       call fcloseall since that routine won't do anything to the
*       std streams.)
*
*       (2) If returning to caller, close all streams.  This is
*       not necessary if the exe is terminating because the OS will
*       close the files for us (much more efficiently, too).
*
*Entry: <void>
*
*Exit:  <void>
*
*Uses:
*
*Exceptions:
*
*******************************************************************************/

void __cdecl __endstdio(void)
{
        /* flush all streams */
        _flushall();

        /* if in callable exit, close all streams */
        if (_exitflag)
                _fcloseall();
        _free_crt(__piob);
}



/***
* _lock_file - Lock a FILE
*
*Purpose:
*       Assert the lock for a stdio-level file
*
*Entry:
*       pf = __piob[] entry (pointer to a FILE or _FILEX)
*
*Exit:
*
*Exceptions:
*
*******************************************************************************/

void __cdecl _lock_file (
        FILE *pf
        )
{
        /*
         * The way the FILE (pointed to by pf) is locked depends on whether
         * it is part of _iob[] or not
         */
        if ( (pf >= _iob) && (pf <= (&_iob[_IOB_ENTRIES-1])) )
        {
            /*
             * FILE lies in _iob[] so the lock lies in _locktable[].
             */
            _lock( _STREAM_LOCKS + (int)(pf - _iob) );
            /* We set _IOLOCKED to indicate we locked the stream */
            pf->_flag |= _IOLOCKED;
        }
        else
            /*
             * Not part of _iob[]. Therefore, *pf is a _FILEX and the
             * lock field of the struct is an initialized critical
             * section.
             */
            EnterCriticalSection( &(((_FILEX *)pf)->lock) );
}


/***
* _lock_file2(i, s) - Lock the FILE
*
*Purpose:
*       Assert the lock for a stdio-level file given by s == __piob[i].
*
*Entry:
*       s == __piob[i]
*
*Exit:
*
*Exceptions:
*
*******************************************************************************/

void __cdecl _lock_file2 (
        int i,
        void *s
        )
{
        /*
         * The way the FILE is locked depends on whether it is part of _iob[]
         * _iob[] or not
         */
        if ( i < _IOB_ENTRIES )
        {
            /*
             * FILE lies in _iob[] so the lock lies in _locktable[].
             */
            _lock( _STREAM_LOCKS + i );
            /* We set _IOLOCKED to indicate we locked the stream */
            ((FILE*)s)->_flag |= _IOLOCKED;
        }
        else
            /*
             * Not part of _iob[]. Therefore, *s is a _FILEX and the
             * lock field of the struct is an initialized critical
             * section.
             */
            EnterCriticalSection( &(((_FILEX *)s)->lock) );
}


/***
* _unlock_file - Unlock a FILE
*
*Purpose:
*       Release the lock for a stdio-level file
*
*Entry:
*       pf = __piob[] entry (pointer to a FILE or _FILEX)
*
*Exit:
*
*Exceptions:
*
*******************************************************************************/

void __cdecl _unlock_file (
        FILE *pf
        )
{
        /*
         * The way the FILE (pointed to by pf) is unlocked depends on whether
         * it is part of _iob[] or not
         */
        if ( (pf >= _iob) && (pf <= (&_iob[_IOB_ENTRIES-1])) )
        {
            /*
             * FILE lies in _iob[] so the lock lies in _locktable[].
             * We reset _IOLOCKED to indicate we unlock the stream.
             */
             pf->_flag &= ~_IOLOCKED;
            _unlock( _STREAM_LOCKS + (int)(pf - _iob) );
        }
        else
            /*
             * Not part of _iob[]. Therefore, *pf is a _FILEX and the
             * lock field of the struct is an initialized critical
             * section.
             */
            LeaveCriticalSection( &(((_FILEX *)pf)->lock) );
}


/***
* _unlock_file2(i, s) - Lock the FILE
*
*Purpose:
*       Release the lock for a stdio-level file given by s == __piob[i].
*
*Entry:
*       s == __piob[i]
*
*Exit:
*
*Exceptions:
*
*******************************************************************************/

void __cdecl _unlock_file2 (
        int i,
        void *s
        )
{
        /*
         * The way the FILE is locked depends on whether it is part of _iob[]
         * _iob[] or not
         */
        if ( i < _IOB_ENTRIES )
        {
            /*
             * FILE lies in _iob[] so the lock lies in _locktable[].
             * We reset _IOLOCKED to indicate we unlock the stream.
             */
             ((FILE*)s)->_flag &= ~_IOLOCKED;
            _unlock( _STREAM_LOCKS + i );
        }
        else
            /*
             * Not part of _iob[]. Therefore, *s is a _FILEX and the
             * lock field of the struct is an initialized critical
             * section.
             */
            LeaveCriticalSection( &(((_FILEX *)s)->lock) );
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\yvals.h ===
/* yvals.h values header for Microsoft C/C++ */
#pragma once
#ifndef _YVALS
#define _YVALS

#include <crtdefs.h>

#ifdef  _MSC_VER
#pragma pack(push,_CRT_PACKING)
#endif  /* _MSC_VER */

#define _CPPLIB_VER	505

 #if !defined(_HAS_TR1)
  #define _HAS_TR1	1	/* enable TR1 extensions */
 #endif /* !defined(_HAS_TR1) */

/* Note on use of "deprecate":
 * Various places in this header and other headers use __declspec(deprecate) or macros that have the term DEPRECATE in them.
 * We use deprecate here ONLY to signal the compiler to emit a warning about these items. The use of deprecate
 * should NOT be taken to imply that any standard committee has deprecated these functions from the relevant standards.
 * In fact, these functions are NOT deprecated from the standard.
 *
 * Full details can be found in our documentation by searching for "Checked Iterators".
*/

#if defined(MRTDLL)
/*
process-global is the default for code built with /clr or /clr:oldSyntax.
appdomain-global is the default for code built with /clr:pure.
Code in MSVCM is built with /clr, but is used by user code built with /clr:pure
so it must conform to the expectations of /clr:pure clients.
Use __PURE_APPDOMAIN_GLOBAL when a global needs to be appdomain-global for pure
clients and process-global for mixed clients.
*/
#define __PURE_APPDOMAIN_GLOBAL   __declspec(appdomain)
#else
#define __PURE_APPDOMAIN_GLOBAL
#endif

#ifndef __CRTDECL
#if defined(_M_CEE_PURE) || defined(MRTDLL)
#define __CRTDECL   __clrcall
#else
#define __CRTDECL   __cdecl
#endif
#endif

#ifndef __CLR_OR_THIS_CALL
#if defined(MRTDLL) || defined(_M_CEE_PURE)
#define __CLR_OR_THIS_CALL  __clrcall
#else
#define __CLR_OR_THIS_CALL
#endif
#endif

#ifndef __CLRCALL_OR_CDECL
#if defined(MRTDLL) || defined(_M_CEE_PURE)
#define __CLRCALL_OR_CDECL __clrcall
#else
#define __CLRCALL_OR_CDECL __cdecl
#endif
#endif

#ifndef __CLRCALL_PURE_OR_CDECL
#if defined(_M_CEE_PURE)
#define __CLRCALL_PURE_OR_CDECL __clrcall
#else
#define __CLRCALL_PURE_OR_CDECL __cdecl
#endif
#endif

		/* NAMING PROPERTIES */
#define _WIN32_C_LIB	1

		/* THREAD AND LOCALE CONTROL */
#define _MULTI_THREAD	1	/* nontrivial locks if multithreaded */
#define _IOSTREAM_OP_LOCKS	1	/* lock iostream operations */
#define _GLOBAL_LOCALE	0	/* 0 for per-thread locales, 1 for shared */

		/* THREAD-LOCAL STORAGE */
#define _COMPILER_TLS	1	/* 1 if compiler supports TLS directly */
 #if _MULTI_THREAD
  #define _TLS_QUAL	__declspec(thread)	/* TLS qualifier, if any */

 #else /* _MULTI_THREAD */
  #define _TLS_QUAL
 #endif /* _MULTI_THREAD */

 #ifndef _HAS_EXCEPTIONS
  #define  _HAS_EXCEPTIONS  1	/* predefine as 0 to disable exceptions */
 #endif /* _HAS_EXCEPTIONS */

 #ifndef _HAS_NAMESPACE
  #define  _HAS_NAMESPACE  1	/* predefine as 0 to disable exceptions */
 #endif /* _HAS_NAMESPACE */

#ifndef _HAS_IMMUTABLE_SETS
 #define _HAS_IMMUTABLE_SETS 0
#endif /* _HAS_IMMUTABLE_SETS */

#ifndef _HAS_STRICT_CONFORMANCE
 #define _HAS_STRICT_CONFORMANCE 0
#endif /* _HAS_STRICT_CONFORMANCE */

#ifndef _HAS_TRADITIONAL_STL
 #define _HAS_TRADITIONAL_STL 0
#endif /* _HAS_TRADITIONAL_STL */

#ifdef _MSC_VER
#define _GLOBAL_USING	1
#endif

#if !defined (_HAS_ITERATOR_DEBUGGING)
	#if defined (_DEBUG)
		#define _HAS_ITERATOR_DEBUGGING	1	/* for range checks, etc. */
	#else
		#define _HAS_ITERATOR_DEBUGGING	0
	#endif	/* defined (_DEBUG) */
#else
	#if !defined (_DEBUG) && _HAS_ITERATOR_DEBUGGING != 0
		#include <crtwrn.h>
		#pragma _CRT_WARNING( _NO_ITERATOR_DEBUGGING )
		#undef _HAS_ITERATOR_DEBUGGING
		#define _HAS_ITERATOR_DEBUGGING 0
	#endif
#endif /* !defined (_HAS_ITERATOR_DEBUGGING) */

/* _SECURE_CRT definitions */

#define __STR2WSTR(str)    L##str
#define _STR2WSTR(str)     __STR2WSTR(str)

#define __FILEW__          _STR2WSTR(__FILE__)
#define __FUNCTIONW__      _STR2WSTR(__FUNCTION__)

/* _SECURE_SCL switches: default values */

#if !defined (_SECURE_SCL)
#define _SECURE_SCL 1
#endif

/* See note on use of deprecate at the top of this file */
#if !defined(_SCL_SECURE_NO_WARNINGS) && defined(_SCL_SECURE_NO_DEPRECATE)
#define _SCL_SECURE_NO_WARNINGS
#endif

#if !defined (_SECURE_SCL_DEPRECATE)
#if defined(_SCL_SECURE_NO_WARNINGS)
#define _SECURE_SCL_DEPRECATE 0
#else
#define _SECURE_SCL_DEPRECATE 1
#endif
#endif

#if !defined (_SECURE_SCL_THROWS)
#define _SECURE_SCL_THROWS 0
#endif

/* _SECURE_SCL switches: helper macros */
/* See note on use of deprecate at the top of this file */

#if _SECURE_SCL_DEPRECATE
#define _SCL_CHECKED_ALGORITHM_WARN \
	_CRT_DEPRECATE_TEXT( \
		"Function call with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. " \
		"To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'")
#else
#define _SCL_CHECKED_ALGORITHM_WARN
#endif

#if _SECURE_SCL && _SECURE_SCL_DEPRECATE
#define _SCL_INSECURE_DEPRECATE \
	_CRT_DEPRECATE_TEXT( \
		"Function call with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. " \
		"To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'")
#else
#define _SCL_INSECURE_DEPRECATE
#endif

/*
 * Assert in debug builds.
 * set errno and return
 *
 */
 #ifdef _DEBUG 

#ifndef _SCL_SECURE_INVALID_PARAMETER
#define _SCL_SECURE_INVALID_PARAMETER(expr) ::_invalid_parameter(__STR2WSTR(#expr), __FUNCTIONW__, __FILEW__, __LINE__, 0)
#endif

 #else

#ifndef _SCL_SECURE_INVALID_PARAMETER
#define _SCL_SECURE_INVALID_PARAMETER(expr) ::_invalid_parameter_noinfo()
#endif

 #endif

 #if _SECURE_SCL_THROWS

 #define _SCL_SECURE_INVALID_ARGUMENT_NO_ASSERT		_Xinvarg()
 #define _SCL_SECURE_OUT_OF_RANGE_NO_ASSERT			_Xran()

 #else /* _SECURE_SCL_THROWS */

 #define _SCL_SECURE_INVALID_ARGUMENT_NO_ASSERT		_SCL_SECURE_INVALID_PARAMETER("invalid argument")
 #define _SCL_SECURE_OUT_OF_RANGE_NO_ASSERT			_SCL_SECURE_INVALID_PARAMETER("out of range")

 #endif /* _SECURE_SCL_THROWS */

 #define _SCL_SECURE_ALWAYS_VALIDATE(cond)				\
	{													\
		if (!(cond))									\
		{												\
			_ASSERTE((#cond, 0));						\
			_SCL_SECURE_INVALID_ARGUMENT_NO_ASSERT;		\
		}												\
		__analysis_assume(cond);						\
	}

 #define _SCL_SECURE_ALWAYS_VALIDATE_RANGE(cond)		\
	{													\
		if (!(cond))									\
		{												\
			_ASSERTE((#cond, 0));						\
			_SCL_SECURE_OUT_OF_RANGE_NO_ASSERT;			\
		}												\
		__analysis_assume(cond);						\
	}

// validation a la Secure CRT
 #define _SCL_SECURE_CRT_VALIDATE(cond, retvalue)		\
	{													\
		if (!(cond))									\
		{												\
			_ASSERTE((#cond, 0));						\
			_SCL_SECURE_INVALID_PARAMETER(cond);		\
			return (retvalue);							\
		}												\
	}

 #if _SECURE_SCL

 #define _SCL_SECURE_VALIDATE(cond)						\
	{													\
		if (!(cond))									\
		{												\
			_ASSERTE((#cond, 0));						\
			_SCL_SECURE_INVALID_ARGUMENT_NO_ASSERT;		\
		}												\
		__analysis_assume(cond);						\
	}

 #define _SCL_SECURE_VALIDATE_RANGE(cond)				\
	{													\
		if (!(cond))									\
		{												\
			_ASSERTE((#cond, 0));						\
			_SCL_SECURE_OUT_OF_RANGE_NO_ASSERT;			\
		}												\
		__analysis_assume(cond);						\
	}

 #define _SCL_SECURE_INVALID_ARGUMENT					\
	{													\
		_ASSERTE(("Standard C++ Libraries Invalid Argument", 0)); \
		_SCL_SECURE_INVALID_ARGUMENT_NO_ASSERT;			\
	}
 #define _SCL_SECURE_OUT_OF_RANGE						\
	{													\
		_ASSERTE(("Standard C++ Libraries Out of Range", 0)); \
		_SCL_SECURE_OUT_OF_RANGE_NO_ASSERT;				\
	}

 #define _SCL_SECURE_MOVE(func, dst, size, src, count)	func((dst), (size), (src), (count))
 #define _SCL_SECURE_COPY(func, dst, size, src, count)	func((dst), (size), (src), (count))

 #else /* _SECURE_SCL */
 
/* when users disable _SECURE_SCL to get performance, we don't want analysis warnings from SCL headers */
#if _HAS_ITERATOR_DEBUGGING
 #define _SCL_SECURE_VALIDATE(cond)			__analysis_assume(cond)
 #define _SCL_SECURE_VALIDATE_RANGE(cond)	__analysis_assume(cond)
#else
 #define _SCL_SECURE_VALIDATE(cond)
 #define _SCL_SECURE_VALIDATE_RANGE(cond)
#endif

 #define _SCL_SECURE_INVALID_ARGUMENT 
 #define _SCL_SECURE_OUT_OF_RANGE 

 #define _SCL_SECURE_MOVE(func, dst, size, src, count)	func((dst), (src), (count))
 #define _SCL_SECURE_COPY(func, dst, size, src, count)	func((dst), (src), (count))

 #endif /* _SECURE_SCL */

/* _SECURE_VALIDATION is the name of the bool template argument used to define iterators
   with secure validation selectively turned on or off (for an example, see the std::list
   iterators). Notice that all the _SCL_SECURE_TRAITS_* validation macros are almost identical
   to the _SCL_SECURE_* macros defined above. The only difference is the:
        
        if (_SECURE_VALIDATION) { }

   statement, which will statically evaluate to true or false. With optimizations on, the
   compiler will optimize the check away.
 */
 #define _SECURE_VALIDATION _Secure_validation

 #if _SECURE_SCL

 #define _SECURE_VALIDATION_DEFAULT true

 #define _SCL_SECURE_TRAITS_VALIDATE(cond)		\
	{											\
		__pragma(warning(push));				\
		__pragma(warning(disable: 4127));		\
		if (_SECURE_VALIDATION)					\
		{										\
			_SCL_SECURE_VALIDATE(cond)			\
		}										\
		__pragma(warning(pop));					\
	}

 #define _SCL_SECURE_TRAITS_VALIDATE_RANGE(cond) \
	{											\
		__pragma(warning(push));				\
		__pragma(warning(disable: 4127));		\
		if (_SECURE_VALIDATION)					\
		{										\
			_SCL_SECURE_VALIDATE_RANGE(cond)	\
		}										\
		__pragma(warning(pop));					\
	}

 #define _SCL_SECURE_TRAITS_INVALID_ARGUMENT	\
	{											\
		__pragma(warning(push));				\
		__pragma(warning(disable: 4127));		\
		if (_SECURE_VALIDATION)					\
		{										\
			_SCL_SECURE_INVALID_ARGUMENT		\
		}										\
		__pragma(warning(pop));					\
	}

 #define _SCL_SECURE_TRAITS_OUT_OF_RANGE		\
	{											\
		__pragma(warning(push));				\
		__pragma(warning(disable: 4127));		\
		if (_SECURE_VALIDATION)					\
		{										\
			_SCL_SECURE_OUT_OF_RANGE			\
		}										\
		__pragma(warning(pop));					\
	}

 #else

 #define _SECURE_VALIDATION_DEFAULT false

 #define _SCL_SECURE_TRAITS_VALIDATE(cond)
 #define _SCL_SECURE_TRAITS_VALIDATE_RANGE(cond)

 #define _SCL_SECURE_TRAITS_INVALID_ARGUMENT
 #define _SCL_SECURE_TRAITS_OUT_OF_RANGE

 #endif

#if __STDC_WANT_SECURE_LIB__
#define _CRT_SECURE_MEMCPY(dest, destsize, source, count) ::memcpy_s((dest), (destsize), (source), (count))
#define _CRT_SECURE_MEMMOVE(dest, destsize, source, count) ::memmove_s((dest), (destsize), (source), (count))
#define _CRT_SECURE_WMEMCPY(dest, destsize, source, count) ::wmemcpy_s((dest), (destsize), (source), (count))
#define _CRT_SECURE_WMEMMOVE(dest, destsize, source, count) ::wmemmove_s((dest), (destsize), (source), (count))
#else
#define _CRT_SECURE_MEMCPY(dest, destsize, source, count) ::memcpy((dest), (source), (count))
#define _CRT_SECURE_MEMMOVE(dest, destsize, source, count) ::memmove((dest), (source), (count))
#define _CRT_SECURE_WMEMCPY(dest, destsize, source, count) ::wmemcpy((dest), (source), (count))
#define _CRT_SECURE_WMEMMOVE(dest, destsize, source, count) ::wmemmove((dest), (source), (count))
#endif

#include <use_ansi.h>

#ifndef _VC6SP2
 #define _VC6SP2	0 /* define as 1 to fix linker errors with V6.0 SP2 */
#endif /* _VC6SP2 */

#if defined(_M_CEE) && defined(_STATIC_CPPLIB)
#include <crtwrn.h>
#pragma _CRT_WARNING( _CLR_AND_STATIC_CPPLIB )
#endif

/* Define _CRTIMP2 */
 #ifndef _CRTIMP2
  #ifdef  CRTDLL2
   #define _CRTIMP2	__declspec(dllexport)
  #else   /* ndef CRTDLL2 */

   #if defined(_DLL) && !defined(_STATIC_CPPLIB)
    #define _CRTIMP2	__declspec(dllimport)

   #else   /* ndef _DLL && !STATIC_CPPLIB */
    #define _CRTIMP2
   #endif  /* _DLL && !STATIC_CPPLIB */

  #endif  /* CRTDLL2 */
 #endif  /* _CRTIMP2 */

/* Define _CRTIMP2_NCEEPURE */
 #ifndef _CRTIMP2_NCEEPURE
  #if defined(_M_CEE_PURE)
   #define _CRTIMP2_NCEEPURE
  #else
   #define _CRTIMP2_NCEEPURE _CRTIMP2
  #endif
 #endif

#ifndef _MRTIMP
  #ifdef MRTDLL
    #if !defined(_M_CEE_PURE)
      #define _MRTIMP __declspec(dllexport)
    #else
      #define _MRTIMP   
    #endif
  #else   /* ndef MRTDLL */
    #define _MRTIMP __declspec(dllimport)
  #endif  /* MRTDLL */
#endif  /* _MRTIMP */

/* Define _MRTIMP2 */
 #ifndef _MRTIMP2
  #if   defined(CRTDLL2)
   #define _MRTIMP2	__declspec(dllexport)
  #elif defined(MRTDLL)
    #define _MRTIMP2 _MRTIMP
  #else   /* ndef CRTDLL2 */

   #if defined(_DLL) && !defined(_STATIC_CPPLIB)
    #define _MRTIMP2	__declspec(dllimport)

   #else   /* ndef _DLL && !STATIC_CPPLIB */
    #define _MRTIMP2
   #endif  /* _DLL && !STATIC_CPPLIB */

  #endif  /* CRTDLL2 */
 #endif  /* _MRTIMP2 */

/* Define _MRTIMP2_NPURE */
 #ifndef _MRTIMP2_NPURE
  #if   defined(MRTDLL)
    #if !defined(_M_CEE_PURE)
      #define _MRTIMP2_NPURE __declspec(dllexport)
    #else
      #define _MRTIMP2_NPURE
    #endif
  #else   /* ndef MRTDLL */

   #if defined(_DLL) && defined(_M_CEE_PURE)
    #define _MRTIMP2_NPURE	__declspec(dllimport)

   #else
    #define _MRTIMP2_NPURE
   #endif

  #endif  /* MRTDLL */
 #endif  /* _MRTIMP2_NPURE */

/* Define _MRTIMP2_NCEE */
 #ifndef _MRTIMP2_NCEE
  #if defined(_M_CEE)
   #define _MRTIMP2_NCEE
  #else
   #define _MRTIMP2_NCEE _MRTIMP2
  #endif
 #endif

/* Define _MRTIMP2_NCEEPURE */
 #ifndef _MRTIMP2_NCEEPURE
  #if defined(_M_CEE_PURE)
   #define _MRTIMP2_NCEEPURE
  #else
   #define _MRTIMP2_NCEEPURE _MRTIMP2
  #endif
 #endif

/* Define _MRTIMP2_NPURE_NCEEPURE */
 #ifndef _MRTIMP2_NPURE_NCEEPURE
  #if defined(_M_CEE_PURE)
   #define _MRTIMP2_NPURE_NCEEPURE
  #else
   #define _MRTIMP2_NPURE_NCEEPURE _MRTIMP2_NPURE
  #endif
 #endif

 #if defined(_DLL) && !defined(_STATIC_CPPLIB) && !defined(_M_CEE_PURE)
  #define _DLL_CPPLIB
 #endif

 #ifndef _CRTIMP2_PURE
  #if   defined(MRTDLL)
   #define _CRTIMP2_PURE
  #else
   #ifdef  _M_CEE_PURE
     #define _CRTIMP2_PURE
   #else
     #define _CRTIMP2_PURE _CRTIMP2
   #endif
  #endif
 #endif

#if !defined(_CRTDATA2)
  #if !defined(MRTDLL)
    #define _CRTDATA2 _CRTIMP2
  #else
    #define _CRTDATA2    
  #endif
#endif

  #ifndef _INTERNAL_IFSTRIP_
/* Define _CRTBLD_NATIVE_WCHAR_T */

   #if defined(_CRTBLD) && defined(__cplusplus)
    #ifndef _NATIVE_WCHAR_T_DEFINED
     #error Native wchar_t must be defined

    #else /* _NATIVE_WCHAR_T_DEFINED */
     #define _CRTBLD_NATIVE_WCHAR_T
    #endif /* _NATIVE_WCHAR_T_DEFINED */

   #endif /* defined(_CRTBLD) && defined(__cplusplus) */
  #endif /* _INTERNAL_IFSTRIP_ */

  #define _DEPRECATED	_CRT_DEPRECATE_TEXT("This is an obsolete part of the Standard C++ Library Implementation. Do not use it.")


  #ifndef _INTERNAL_IFSTRIP_
/* These functions are for enabling STATIC_CPPLIB functionality */
   #define _cpp_stdin  (&(__iob_func())[0])
   #define _cpp_stdout (&(__iob_func())[1])
   #define _cpp_stderr (&(__iob_func())[2])
   #define _cpp_isleadbyte(c) (__pctype_func()[(unsigned char)(c)] & _LEADBYTE)
  #endif

		/* NAMESPACE */

 #if defined(__cplusplus)
  #define _STD_BEGIN	namespace std {
  #define _STD_END		}
  #define _STD	::std::

/*
We use the stdext (standard extension) namespace to contain extensions that are not part of the current standard
*/
  #define _STDEXT_BEGIN	    namespace stdext {
  #define _STDEXT_END		}
  #define _STDEXT	        ::stdext::

  #ifdef _STD_USING
   #define _C_STD_BEGIN	namespace std {	/* only if *.c compiled as C++ */
   #define _C_STD_END	}
   #define _CSTD	::std::

  #else /* _STD_USING */
/* #define _GLOBAL_USING	*.h in global namespace, c* imports to std */

   #define _C_STD_BEGIN
   #define _C_STD_END
   #define _CSTD	::
  #endif /* _STD_USING */

  #define _C_LIB_DECL		extern "C" {	/* C has extern "C" linkage */
  #define _END_C_LIB_DECL	}
  #define _EXTERN_C			extern "C" {
  #define _END_EXTERN_C		}

 #else /* __cplusplus */
  #define _STD_BEGIN
  #define _STD_END
  #define _STD

  #define _C_STD_BEGIN
  #define _C_STD_END
  #define _CSTD

  #define _C_LIB_DECL
  #define _END_C_LIB_DECL
  #define _EXTERN_C
  #define _END_EXTERN_C
 #endif /* __cplusplus */

 #define _Restrict	restrict

 #ifdef __cplusplus
_STD_BEGIN
typedef bool _Bool;
_STD_END
 #endif /* __cplusplus */

		/* VC++ COMPILER PARAMETERS */
#define _LONGLONG	__int64
#define _ULONGLONG	unsigned __int64
#define _LLONG_MAX	0x7fffffffffffffff
#define _ULLONG_MAX	0xffffffffffffffff

		/* INTEGER PROPERTIES */
#define _C2			1	/* 0 if not 2's complement */

#define _MAX_EXP_DIG	8	/* for parsing numerics */
#define _MAX_INT_DIG	32
#define _MAX_SIG_DIG	36

typedef _LONGLONG _Longlong;
typedef _ULONGLONG _ULonglong;

		/* STDIO PROPERTIES */
#define _Filet _iobuf

 #ifndef _FPOS_T_DEFINED
  #define _FPOSOFF(fp)	((long)(fp))
 #endif /* _FPOS_T_DEFINED */

#define _IOBASE	_base
#define _IOPTR	_ptr
#define _IOCNT	_cnt

		/* MULTITHREAD PROPERTIES */
		/* LOCK MACROS */
#define _LOCK_LOCALE	0
#define _LOCK_MALLOC	1
#define _LOCK_STREAM	2
#define _LOCK_DEBUG		3
#define _MAX_LOCK		4	/* one more than highest lock number */

 #ifdef __cplusplus
_STD_BEGIN
		// CLASS _Lockit

// warning 4412 is benign here
#pragma warning(push)
#pragma warning(disable:4412)
class _CRTIMP2_PURE _Lockit
	{	// lock while object in existence -- MUST NEST
public:
  #if _MULTI_THREAD

    #if defined(_M_CEE_PURE) || defined(MRTDLL)
	explicit __CLR_OR_THIS_CALL _Lockit()	// set default lock
        : _Locktype(0)
    {
        _Lockit_ctor(this);
    }
	explicit __CLR_OR_THIS_CALL _Lockit(int _Kind)	// set the lock
    {
        _Lockit_ctor(this, _Kind);
    }
	__CLR_OR_THIS_CALL ~_Lockit()	// clear the lock
    {
        _Lockit_dtor(this);
    }
    #else
    explicit __thiscall _Lockit();	// set default lock
	explicit __thiscall _Lockit(int);	// set the lock
	__thiscall ~_Lockit();	// clear the lock
    #endif

    static _MRTIMP2_NPURE void __cdecl _Lockit_ctor(int);
    static _MRTIMP2_NPURE void __cdecl _Lockit_dtor(int);

private:
    static _MRTIMP2_NPURE void __cdecl _Lockit_ctor(_Lockit *);
    static _MRTIMP2_NPURE void __cdecl _Lockit_ctor(_Lockit *, int);
    static _MRTIMP2_NPURE void __cdecl _Lockit_dtor(_Lockit *);

	__CLR_OR_THIS_CALL _Lockit(const _Lockit&);				// not defined
	_Lockit& __CLR_OR_THIS_CALL operator=(const _Lockit&);	// not defined

	int _Locktype;

  #else /* _MULTI_THREAD */

	explicit _Lockit()
		{	// do nothing
		}

	explicit _Lockit(int)
		{	// do nothing
		}

	~_Lockit()
		{	// do nothing
		}
  #endif /* _MULTI_THREAD */

	};

#ifdef _M_CEE

class _CRTIMP2_PURE _EmptyLockit
	{	// empty lock class used for bin compat
public:
  #if _MULTI_THREAD

private:
	int _Locktype;

  #else /* _MULTI_THREAD */

  #endif /* _MULTI_THREAD */
	};

#if defined(__cplusplus_cli)
 #define _M_CEE_FINALLY finally
#else
 #define _M_CEE_FINALLY __finally
#endif

#define _BEGIN_LOCK(_Kind) \
	{ \
		typedef int _TmpTestType; \
		__if_exists(_TmpTestType::ToString) \
		{ \
		bool _MustReleaseLock = false; \
		int _LockKind = _Kind; \
		System::Runtime::CompilerServices::RuntimeHelpers::PrepareConstrainedRegions(); \
		try \
		} \
		{ \
			__if_exists(_TmpTestType::ToString) \
			{ \
			System::Runtime::CompilerServices::RuntimeHelpers::PrepareConstrainedRegions(); \
			try { } _M_CEE_FINALLY \
			{ \
				_STD _Lockit::_Lockit_ctor(_LockKind); \
				_MustReleaseLock = true; \
			} \
			} \
			__if_not_exists(_TmpTestType::ToString) \
			{ \
			_STD _Lockit _Lock(_Kind); \
			}

#define _END_LOCK() \
		} \
		__if_exists(_TmpTestType::ToString) \
		{ \
		_M_CEE_FINALLY \
		{ \
			if (_MustReleaseLock) \
			{ \
				_STD _Lockit::_Lockit_dtor(_LockKind); \
			} \
		} \
		} \
	}

#define _BEGIN_LOCINFO(_VarName) \
	_BEGIN_LOCK(_LOCK_LOCALE) \
	_Locinfo _VarName;

#define _END_LOCINFO() \
	_END_LOCK() \

#define _RELIABILITY_CONTRACT \
	[System::Runtime::ConstrainedExecution::ReliabilityContract( \
		System::Runtime::ConstrainedExecution::Consistency::WillNotCorruptState, \
		System::Runtime::ConstrainedExecution::Cer::Success)]

#else

#define _BEGIN_LOCK(_Kind) \
	{ \
		_STD _Lockit _Lock(_Kind);

#define _END_LOCK() \
	}

#define _BEGIN_LOCINFO(_VarName) \
	{ \
		_Locinfo _VarName;

#define _END_LOCINFO() \
	}

#define _RELIABILITY_CONTRACT

#endif

class _CRTIMP2_PURE _Mutex
	{	// lock under program control
public:

  #if _MULTI_THREAD
    
    #if defined(_M_CEE_PURE) || defined(MRTDLL)
	__CLR_OR_THIS_CALL _Mutex()
    {
        _Mutex_ctor(this);
    }
	__CLR_OR_THIS_CALL ~_Mutex()
    {
        _Mutex_dtor(this);
    }
	void __CLR_OR_THIS_CALL _Lock()
    {
        _Mutex_Lock(this);
    }
	void __CLR_OR_THIS_CALL _Unlock()
    {
        _Mutex_Unlock(this);
    }
    #else
    __thiscall _Mutex();
	__thiscall ~_Mutex();
	void __thiscall _Lock();
	void __thiscall _Unlock();
    #endif

private:
    static _MRTIMP2_NPURE_NCEEPURE void __CLRCALL_PURE_OR_CDECL _Mutex_ctor(_Mutex *);
    static _MRTIMP2_NPURE_NCEEPURE void __CLRCALL_PURE_OR_CDECL _Mutex_dtor(_Mutex *);
    static _MRTIMP2_NPURE_NCEEPURE void __CLRCALL_PURE_OR_CDECL _Mutex_Lock(_Mutex *);
    static _MRTIMP2_NPURE_NCEEPURE void __CLRCALL_PURE_OR_CDECL _Mutex_Unlock(_Mutex *);

	__CLR_OR_THIS_CALL _Mutex(const _Mutex&);				// not defined
	_Mutex& __CLR_OR_THIS_CALL operator=(const _Mutex&);	// not defined
	void *_Mtx;

  #else /* _MULTI_THREAD */
    void _Lock()
		{	// do nothing
		}

	void _Unlock()
		{	// do nothing
		}
  #endif /* _MULTI_THREAD */

	};

class _CRTIMP2_PURE _Init_locks
	{	// initialize mutexes
public:

 #if _MULTI_THREAD
    
    #if defined(_M_CEE_PURE) || defined(MRTDLL)
	__CLR_OR_THIS_CALL _Init_locks()
    {
        _Init_locks_ctor(this);
    }
	__CLR_OR_THIS_CALL ~_Init_locks()
    {
        _Init_locks_dtor(this);
    }
    #else
    __thiscall _Init_locks();
	__thiscall ~_Init_locks();
    #endif

private:
    static _MRTIMP2_NPURE void __cdecl _Init_locks_ctor(_Init_locks *);
    static _MRTIMP2_NPURE void __cdecl _Init_locks_dtor(_Init_locks *);

 #else /* _MULTI_THREAD */
	_Init_locks()
		{	// do nothing
		}

	~_Init_locks()
		{	// do nothing
		}
 #endif /* _MULTI_THREAD */

	};
#pragma warning(pop)
_STD_END
 #endif /* __cplusplus */

#ifndef _RELIABILITY_CONTRACT
#define _RELIABILITY_CONTRACT
#endif

		/* MISCELLANEOUS MACROS AND TYPES */
_C_STD_BEGIN
_MRTIMP2 void __cdecl _Atexit(void (__cdecl *)(void));

typedef int _Mbstatet;

#define _ATEXIT_T	void
#define _Mbstinit(x)	mbstate_t x = {0}
_C_STD_END

#ifdef _MSC_VER
  #define _EXTERN_TEMPLATE	template
  #define _THROW_BAD_ALLOC	_THROW1(...)
 #pragma pack(pop)
#endif  /* _MSC_VER */

#endif /* _YVALS */


/*
 * Copyright (c) 1992-2008 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
 V5.05:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\_filbuf.c ===
/***
*_filbuf.c - fill buffer and get character
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       defines _filbuf() - fill buffer and read first character, allocate
*       buffer if there is none.  Used from getc().
*       defines _filwbuf() - fill buffer and read first wide character, allocate
*       buffer if there is none.  Used from getwc().
*
*Note:
*       this file is included in safecrt.lib build directly, plese refer
*       to safecrt_filwbuf.c
*
*******************************************************************************/

#include <cruntime.h>
#include <stdio.h>
#include <file2.h>
#include <io.h>
#include <dbgint.h>
#include <malloc.h>
#include <internal.h>
#include <msdos.h>
#include <wchar.h>
#include <mtdll.h>
#include <tchar.h>

#ifndef _UNICODE

/***
*int _filbuf(stream) - fill buffer and get first character
*
*Purpose:
*       get a buffer if the file doesn't have one, read into it, return first
*       char. try to get a buffer, if a user buffer is not assigned. called
*       only from getc; intended for use only within library. assume no input
*       stream is to remain unbuffered when memory is available unless it is
*       marked _IONBF. at worst, give it a single char buffer. the need for a
*       buffer, no matter how small, becomes evident when we consider the
*       ungetc's necessary in scanf
*
*       [NOTE: Multi-thread - _filbuf() assumes that the caller has aquired
*       the stream lock, if needed.]
*
*Entry:
*       FILE *stream - stream to read from
*
*Exit:
*       returns first character from buffer (next character to be read)
*       returns EOF if the FILE is actually a string, or not open for reading,
*       or if open for writing or if no more chars to read.
*       all fields in FILE structure may be changed except _file.
*
*Exceptions:
*
*******************************************************************************/

int __cdecl _filbuf (
        FILE *str
        )

#else  /* _UNICODE */

/***
*int _filwbuf(stream) - fill buffer and get first wide character
*
*Purpose:
*       get a buffer if the file doesn't have one, read into it, return first
*       char. try to get a buffer, if a user buffer is not assigned. called
*       only from getc; intended for use only within library. assume no input
*       stream is to remain unbuffered when memory is available unless it is
*       marked _IONBF. at worst, give it a single char buffer. the need for a
*       buffer, no matter how small, becomes evident when we consider the
*       ungetc's necessary in scanf
*
*       [NOTE: Multi-thread - _filwbuf() assumes that the caller has aquired
*       the stream lock, if needed.]
*
*Entry:
*       FILE *stream - stream to read from
*
*Exit:
*       returns first wide character from buffer (next character to be read)
*       returns WEOF if the FILE is actually a string, or not open for reading,
*       or if open for writing or if no more chars to read.
*       all fields in FILE structure may be changed except _file.
*
*Exceptions:
*
*******************************************************************************/

int __cdecl _filwbuf (
        FILE *str
        )

#endif  /* _UNICODE */

{

        REG1 FILE *stream=NULL;

                /* In safecrt, we assume we always have a buffer */
        _VALIDATE_RETURN(str != NULL, EINVAL, _TEOF);

        /* Init pointer to _iob2 entry. */
        stream = str;

        if (!inuse(stream) || stream->_flag & _IOSTRG)
                return(_TEOF);

        if (stream->_flag & _IOWRT) {
                stream->_flag |= _IOERR;
                return(_TEOF);
        }

        stream->_flag |= _IOREAD;

        /* Get a buffer, if necessary. */

        if (!anybuf(stream))
        {
#ifndef _SAFECRT_IMPL
            _getbuf(stream);
#else  /* _SAFECRT_IMPL */
            /* In safecrt, we assume we always have a buffer */
            _VALIDATE_RETURN(FALSE, EINVAL, _TEOF);
#endif  /* _SAFECRT_IMPL */
        }
        else
        {
            stream->_ptr = stream->_base;
        }

        stream->_cnt = _read(_fileno(stream), stream->_base, stream->_bufsiz);

#ifndef _UNICODE
        if ((stream->_cnt == 0) || (stream->_cnt == -1)) {
#else  /* _UNICODE */
        if ((stream->_cnt == 0) || (stream->_cnt == 1) || stream->_cnt == -1) {
#endif  /* _UNICODE */
                stream->_flag |= stream->_cnt ? _IOERR : _IOEOF;
                stream->_cnt = 0;
                return(_TEOF);
        }

        if (  !(stream->_flag & (_IOWRT|_IORW)) &&
              ((_osfile_safe(_fileno(stream)) & (FTEXT|FEOFLAG)) ==
                (FTEXT|FEOFLAG)) )
                stream->_flag |= _IOCTRLZ;
        /* Check for small _bufsiz (_SMALL_BUFSIZ). If it is small and
           if it is our buffer, then this must be the first _filbuf after
           an fseek on a read-access-only stream. Restore _bufsiz to its
           larger value (_INTERNAL_BUFSIZ) so that the next _filbuf call,
           if one is made, will fill the whole buffer. */
        if ( (stream->_bufsiz == _SMALL_BUFSIZ) && (stream->_flag &
              _IOMYBUF) && !(stream->_flag & _IOSETVBUF) )
        {
                stream->_bufsiz = _INTERNAL_BUFSIZ;
        }
#ifndef _UNICODE
        stream->_cnt--;
        return(0xff & *stream->_ptr++);
#else  /* _UNICODE */
        stream->_cnt -= sizeof(wchar_t);
        return (0xffff & *((wchar_t *)(stream->_ptr))++);
#endif  /* _UNICODE */

}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\_ctype.c ===
/***
*_ctype.c - function versions of ctype macros
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       This files provides function versions of the character
*       classification and conversion macros in ctype.h.
*
*******************************************************************************/

/***
*ctype - Function versions of ctype macros
*
*Purpose:
*       Function versions of the macros in ctype.h.  In order to define
*       these, we use a trick -- we use parentheses so we can use the
*       name in the function declaration without macro expansion, then
*       we use the macro in the definition part.
*
*       Functions defined:
*           isalpha     isupper     islower
*           isdigit     isxdigit    isspace
*           ispunct     isalnum     isprint
*           isgraph     isctrl      __isascii
*           __toascii   __iscsym    __iscsymf
*
*Entry:
*       int c = character to be tested
*Exit:
*       returns non-zero = character is of the requested type
*                  0 = character is NOT of the requested type
*
*Exceptions:
*       None.
*
*******************************************************************************/

#include <cruntime.h>
#include <ctype.h>
#include <locale.h>
#include <mtdll.h>
#include <setlocal.h>

#ifdef _DEBUG
#define __fast_ch_check(a,b)       _chvalidator(a,b)
#else  /* _DEBUG */
#define __fast_ch_check(a,b)       (__initiallocinfo.pctype[(a)] & (b))
#endif  /* _DEBUG */

extern "C"
{
extern __inline int (__cdecl _isalpha_l) (
        int c,
        _locale_t plocinfo
        )
{
    _LocaleUpdate _loc_update(plocinfo);

    return _isalpha_l(c, _loc_update.GetLocaleT());
}

extern __inline int (__cdecl isalpha) (
        int c
        )
{
    if (__locale_changed == 0)
    {
        return __fast_ch_check(c, _ALPHA);
    }
    else
    {
        return (_isalpha_l)(c, NULL);
    }
}

extern __inline int (__cdecl _isupper_l) (
        int c,
        _locale_t plocinfo
        )
{
    _LocaleUpdate _loc_update(plocinfo);

    return _isupper_l(c, _loc_update.GetLocaleT());
}

extern __inline int (__cdecl isupper) (
        int c
        )
{
    if (__locale_changed == 0)
    {
        return __fast_ch_check(c, _UPPER);
    }
    else
    {
        return (_isupper_l)(c, NULL);
    }
}

extern __inline int (__cdecl _islower_l) (
        int c,
        _locale_t plocinfo
        )
{
    _LocaleUpdate _loc_update(plocinfo);

    return _islower_l(c, _loc_update.GetLocaleT());
}

extern __inline int (__cdecl islower) (
        int c
        )
{
    if (__locale_changed == 0)
    {
        return __fast_ch_check(c, _LOWER);
    }
    else
    {
        return (_islower_l)(c, NULL);
    }
}

extern __inline int (__cdecl _isdigit_l) (
        int c,
        _locale_t plocinfo
        )
{
    _LocaleUpdate _loc_update(plocinfo);

    return _isdigit_l(c, _loc_update.GetLocaleT());
}

extern __inline int (__cdecl isdigit) (
        int c
        )
{
    if (__locale_changed == 0)
    {
        return __fast_ch_check(c, _DIGIT);
    }
    else
    {
        return (_isdigit_l)(c, NULL);
    }
}

extern __inline int (__cdecl _isxdigit_l) (
        int c,
        _locale_t plocinfo
        )
{
    _LocaleUpdate _loc_update(plocinfo);

    return _isxdigit_l(c, _loc_update.GetLocaleT());
}

extern __inline int (__cdecl isxdigit) (
        int c
        )
{
    if (__locale_changed == 0)
    {
        return __fast_ch_check(c, _HEX);
    }
    else
    {
        return (_isxdigit_l)(c, NULL);
    }
}

extern __inline int (__cdecl _isspace_l) (
        int c,
        _locale_t plocinfo
        )
{
    _LocaleUpdate _loc_update(plocinfo);

    return _isspace_l(c, _loc_update.GetLocaleT());
}

extern __inline int (__cdecl isspace) (
        int c
        )
{
    if (__locale_changed == 0)
    {
        return __fast_ch_check(c, _SPACE);
    }
    else
    {
        return (_isspace_l)(c, NULL);
    }
}

extern __inline int (__cdecl _ispunct_l) (
        int c,
        _locale_t plocinfo
        )
{
    _LocaleUpdate _loc_update(plocinfo);

    return _ispunct_l(c, _loc_update.GetLocaleT());
}

extern __inline int (__cdecl ispunct) (
        int c
        )
{
    if (__locale_changed == 0)
    {
        return __fast_ch_check(c, _PUNCT);
    }
    else
    {
        return (_ispunct_l)(c, NULL);
    }
}

extern __inline int (__cdecl _isalnum_l) (
        int c,
        _locale_t plocinfo
        )
{
    _LocaleUpdate _loc_update(plocinfo);

    return _isalnum_l(c, _loc_update.GetLocaleT());
}

extern __inline int (__cdecl isalnum) (
        int c
        )
{
    if (__locale_changed == 0)
    {
        return __fast_ch_check(c, _ALPHA|_DIGIT);
    }
    else
    {
        return (_isalnum_l)(c, NULL);
    }
}

extern __inline int (__cdecl _isprint_l) (
        int c,
        _locale_t plocinfo
        )
{
    _LocaleUpdate _loc_update(plocinfo);

    return _isprint_l(c, _loc_update.GetLocaleT());
}

extern __inline int (__cdecl isprint) (
        int c
        )
{
    if (__locale_changed == 0)
    {
        return __fast_ch_check(c, _BLANK|_PUNCT|_ALPHA|_DIGIT);
    }
    else
    {
        return (_isprint_l)(c, NULL);
    }
}

extern __inline int (__cdecl _isgraph_l) (
        int c,
        _locale_t plocinfo
        )
{
    _LocaleUpdate _loc_update(plocinfo);

    return _isgraph_l(c, _loc_update.GetLocaleT());
}

extern __inline int (__cdecl isgraph) (
        int c
        )
{
    if (__locale_changed == 0)
    {
        return __fast_ch_check(c, _PUNCT|_ALPHA|_DIGIT);
    }
    else
    {
        return (_isgraph_l)(c, NULL);
    }
}

extern __inline int (__cdecl _iscntrl_l) (
        int c,
        _locale_t plocinfo
        )
{
    _LocaleUpdate _loc_update(plocinfo);

    return _iscntrl_l(c, _loc_update.GetLocaleT());
}

extern __inline int (__cdecl iscntrl) (
        int c
        )
{
    if (__locale_changed == 0)
    {
        return __fast_ch_check(c, _CONTROL);
    }
    else
    {
        return (_iscntrl_l)(c, NULL);
    }
}

extern __inline int (__cdecl __isascii) (
        int c
        )
{
    return __isascii(c);
}

extern __inline int (__cdecl __toascii) (
        int c
        )
{
    return __toascii(c);
}

extern __inline int (__cdecl _iscsymf_l) (
        int c,
        _locale_t plocinfo
        )
{
        return (_isalpha_l)(c, plocinfo) || (c) == '_';
}
extern __inline int (__cdecl __iscsymf) (
        int c
        )
{
    return __iscsymf(c);
}

extern __inline int (__cdecl _iscsym_l) (
        int c,
        _locale_t plocinfo
        )
{
    return (_isalnum_l)(c, plocinfo) || (c) == '_';
}

extern __inline int (__cdecl __iscsym) (
        int c
        )
{
    return __iscsym((unsigned char)(c));
}
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\_flswbuf.c ===
/***
*_flswbuf.c - flush buffer and output wide character.
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       defines _flswbuf() - flush a file buffer and output a wide character.
*       If no buffer, make one.
*
*******************************************************************************/



#ifndef _UNICODE
#define _UNICODE 1
#endif  /* _UNICODE */

#ifndef UNICODE
#define UNICODE 1
#endif  /* UNICODE */

#include "_flsbuf.c"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\_setargv.c ===
/***
*_setargv.c - Wildcard argv[] expansion
*
*       Copyright (c) Microsoft Corporation.  All rights reserved.
*
*Purpose:
*       _setargv performs wildcard argv[] expansion
*
*       NOTE:  This stub module scheme is compatible with NT build
*       procedure.
*
*******************************************************************************/

#define WILDCARD 1
#include "stdargv.c"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\_newmode.c ===
/***
*_newmode.c - set new() handler mode to not handle malloc failures
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       Sets the global flag which controls whether the new() handler
*       is called on malloc failures.  The default behavior in Visual
*       C++ v2.0 and later is not to, that malloc failures return NULL
*       without calling the new handler.  This object is linked in unless
*       the special object NEWMODE.OBJ is manually linked.
*
*       This source file is the complement of LINKOPTS/NEWMODE.C.
*
*******************************************************************************/


#ifdef CRTDLL
#undef CRTDLL
#endif  /* CRTDLL */

#ifdef MRTDLL
#undef MRTDLL
#endif  /* MRTDLL */

#include <internal.h>

/* enable new handler calls upon malloc failures */

int _newmode = 0;       /* Malloc New Handler MODE */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\_sftbuf.c ===
/***
*_sftbuf.c - temporary buffering initialization and flushing
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       temporary buffering initialization and flushing. if stdout/err is
*       unbuffered, buffer it temporarily so that string is sent to kernel as
*       a batch of chars, not char-at-a-time. if appropriate, make buffering
*       permanent.
*
*       [NOTE 1: These routines assume that the temporary buffering is only
*       used for output.  In particular, note that _stbuf() sets _IOWRT.]
*
*       [NOTE 2: It is valid for this module to assign a value directly to
*       _flag instead of simply twiddling bits since we are initializing the
*       buffer data base.]
*
*******************************************************************************/

#include <cruntime.h>
#include <stdio.h>
#include <file2.h>
#include <io.h>
#include <internal.h>
#include <malloc.h>
#include <mtdll.h>
#include <dbgint.h>

/* Buffer pointers for stdout and stderr */
void *_stdbuf[2] = { NULL, NULL};

/***
*int _stbuf(stream) - set temp buffer on stdout, stdprn, stderr
*
*Purpose:
*       if stdout/stderr is still unbuffered, buffer it.
*       this function works intimately with _ftbuf, and accompanies it in
*       bracketing normally unbuffered output. these functions intended for
*       library use only.
*
*       Multi-thread: It is assumed that the caller has already aquired the
*       stream lock.
*
*Entry:
*       FILE *stream - stream to temp buffer
*
*Exit:
*       returns 1 if buffer initialized, 0 if not
*       sets fields in stdout or stderr to indicate buffering
*
*Exceptions:
*
*******************************************************************************/

int __cdecl _stbuf (
        FILE *str
        )
{
        REG1 FILE *stream;
        int index;

        _ASSERTE(str != NULL);

        /* Init near stream pointer */
        stream = str;

        /* do nothing if not a tty device */
        if (!_isatty(_fileno(stream)))
                return(0);

        /* Make sure stream is stdout/stderr and init _stdbuf index */
        if (stream == stdout)
                index = 0;
        else if (stream == stderr)
                index = 1;
        else
                return(0);

#ifndef CRTDLL
        /* force library pre-termination procedure */
        _cflush++;
#endif  /* CRTDLL */

        /* Make sure the stream is not already buffered. */
        if (anybuf(stream))
                return(0);

        /* Allocate a buffer for this stream if we haven't done so yet. */
        if ( (_stdbuf[index] == NULL) &&
             ((_stdbuf[index]=_malloc_crt(_INTERNAL_BUFSIZ)) == NULL) ) {
                /* Cannot allocate buffer. Use _charbuf this time */
                stream->_ptr = stream->_base = (void *)&(stream->_charbuf);
                stream->_cnt = stream->_bufsiz = 2;
        }
        else {
                /* Set up the buffer */
                stream->_ptr = stream->_base = _stdbuf[index];
                stream->_cnt = stream->_bufsiz = _INTERNAL_BUFSIZ;
        }

        stream->_flag |= (_IOWRT | _IOYOURBUF | _IOFLRTN);

        return(1);
}


/***
*void _ftbuf(flag, stream) - take temp buffering off a stream
*
*Purpose:
*       If stdout/stderr is being buffered and it is a device, _flush and
*       dismantle the buffer. if it's not a device, leave the buffering on.
*       This function works intimately with _stbuf, and accompanies it in
*       bracketing normally unbuffered output. these functions intended for
*       library use only
*
*       Multi-thread: It is assumed that the caller has already aquired the
*       stream lock.
*
*Entry:
*       int flag     - a flag to tell whether to dismantle temp buffering on a
*                      stream
*       FILE *stream - the stream
*
*Exit:
*       no return value
*       sets fields in stdout/stderr
*
*Exceptions:
*
*******************************************************************************/

void __cdecl _ftbuf (
        int flag,
        FILE *str
        )
{
        REG1 FILE *stream;

        _ASSERTE(flag == 0 || flag == 1);

        /* Init near stream pointers */
        stream = str;

        if (flag) {

                if (stream->_flag & _IOFLRTN) {

                        /* Flush the stream and tear down temp buffering. */
                        _flush(stream);
                        stream->_flag &= ~(_IOYOURBUF | _IOFLRTN);
                        stream->_bufsiz = 0;
                        stream->_base = stream->_ptr = NULL;
                }

                /* Note: If we expand the functionality of the _IOFLRTN bit to
                include other streams, we may want to clear that bit here under
                an 'else' clause (i.e., clear bit in the case that we leave the
                buffer permanently assigned.  Given our current use of the bit,
                the extra code is not needed. */

        } /* end flag = 1 */


}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\ymath.h ===
/* ymath.h internal header */
#pragma once
#ifndef _YMATH
#define _YMATH
#include <yvals.h>
_C_STD_BEGIN
#ifndef MRTDLL
#ifndef _M_CEE_PURE
_C_LIB_DECL
#endif
#endif

#ifdef  _MSC_VER
#pragma pack(push,_CRT_PACKING)
#endif  /* _MSC_VER */

		/* MACROS FOR _Dtest RETURN (0 => ZERO) */
#define _DENORM		(-2)	/* C9X only */
#define _FINITE		(-1)
#define _INFCODE	1
#define _NANCODE	2

		/* MACROS FOR _Feraise ARGUMENT */
#define _FE_DIVBYZERO	0x04
#define _FE_INEXACT		0x20
#define _FE_INVALID		0x01
#define _FE_OVERFLOW	0x08
#define _FE_UNDERFLOW	0x10

		/* TYPE DEFINITIONS */
typedef union
	{	/* pun float types as integer array */
	unsigned short _Word[8];
	float _Float;
	double _Double;
	long double _Long_double;
	} _Dconst;

		/* ERROR REPORTING */
void __CLRCALL_PURE_OR_CDECL _Feraise(int);

		/* double DECLARATIONS */
_CRTIMP2_PURE double __CLRCALL_PURE_OR_CDECL _Cosh(double, double);
_CRTIMP2_PURE short __CLRCALL_PURE_OR_CDECL _Dtest(double *);
_CRTIMP2_PURE short __CLRCALL_PURE_OR_CDECL _Exp(double *, double, short);
_CRTIMP2_PURE double __CLRCALL_PURE_OR_CDECL _Sinh(double, double);
extern _CRTIMP2_PURE /* const */ _Dconst _Denorm, _Hugeval, _Inf,
	_Nan, _Snan;

		/* float DECLARATIONS */
_CRTIMP2_PURE float __CLRCALL_PURE_OR_CDECL _FCosh(float, float);
_CRTIMP2_PURE short __CLRCALL_PURE_OR_CDECL _FDtest(float *);
_CRTIMP2_PURE short __CLRCALL_PURE_OR_CDECL _FExp(float *, float, short);
_CRTIMP2_PURE float __CLRCALL_PURE_OR_CDECL _FSinh(float, float);
extern _CRTIMP2_PURE /* const */ _Dconst _FDenorm, _FInf, _FNan, _FSnan;

		/* long double DECLARATIONS */
_CRTIMP2_PURE long double __CLRCALL_PURE_OR_CDECL _LCosh(long double, long double);
_CRTIMP2_PURE short __CLRCALL_PURE_OR_CDECL _LDtest(long double *);
_CRTIMP2_PURE short __CLRCALL_PURE_OR_CDECL _LExp(long double *, long double, short);
_CRTIMP2_PURE long double __CLRCALL_PURE_OR_CDECL _LSinh(long double, long double);
extern _CRTIMP2_PURE /* const */ _Dconst _LDenorm, _LInf, _LNan, _LSnan;
#ifndef MRTDLL
#ifndef _M_CEE_PURE
_END_C_LIB_DECL
#endif
#endif
_C_STD_END

#ifdef  _MSC_VER
#pragma pack(pop)
#endif  /* _MSC_VER */

#endif /* _YMATH */

/*
 * Copyright (c) 1992-2006 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
 V5.02:0009 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\_tolower.c ===
/***
*_tolower.c - convert character to lower case
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       Defines _Tolower().
*
*******************************************************************************/

#include <cruntime.h>
#include <ctype.h>
#include <stddef.h>
#include <xlocinfo.h>
#include <locale.h>
#include <mtdll.h>
#include <setlocal.h>
#include <awint.h>
#include <stdlib.h>
#include <dbgint.h>
#include <yvals.h>

/* remove macro definitions of _tolower() and tolower()
 */
#undef  _tolower
#undef  tolower

/***
*int _Tolower(c) - convert character to lower case
*
*Purpose:
*       _Tolower() is a version of tolower with a locale argument.
*
*Entry:
*       c - int value of character to be converted
*       const _Ctypevec * = pointer to locale info
*
*Exit:
*       returns int value of lower case representation of c
*
*Exceptions:
*
*******************************************************************************/

_CRTIMP2_PURE int __CLRCALL_PURE_OR_CDECL _Tolower (
        int c,
        const _Ctypevec *ploc
        )
{
        int size;
        unsigned char inbuffer[3];
        unsigned char outbuffer[3];

        LCID handle;
        UINT codepage;

        if (ploc == 0)
        {
            handle = ___lc_handle_func()[LC_CTYPE];
            codepage = ___lc_codepage_func();
        }
        else
        {
            handle = ploc->_Hand;
            codepage = ploc->_Page;
        }

        if (handle == _CLOCALEHANDLE)
        {
            if ( (c >= 'A') && (c <= 'Z') )
                c = c + ('a' - 'A');
            return c;
        }

        /* if checking case of c does not require API call, do it */
        if ((unsigned)c < 256)
        {
            if (ploc == 0)
            {
                if (!isupper(c))
                {
                    return c;
                }
            }
            else
            {
                if (!(ploc->_Table[c] & _UPPER))
                {
                    return c;
                }
            }
        }

        /* convert int c to multibyte string */
        if (ploc == 0 ? _cpp_isleadbyte((c >> 8) & 0xff)
                      : (ploc->_Table[(c >> 8) & 0xff] & _LEADBYTE) != 0)
        {
            inbuffer[0] = (c >> 8 & 0xff);
            inbuffer[1] = (unsigned char)c;
            inbuffer[2] = 0;
            size = 2;
        } else {
            inbuffer[0] = (unsigned char)c;
            inbuffer[1] = 0;
            size = 1;
        }

        /* convert wide char to lowercase */
        if (0 == (size = __crtLCMapStringA(NULL, handle, LCMAP_LOWERCASE,
            (const char *)inbuffer, size, (char *)outbuffer, 3, codepage, TRUE)))
        {
            return c;
        }

        /* construct integer return value */
        if (size == 1)
            return ((int)outbuffer[0]);
        else
            return ((int)outbuffer[1] | ((int)outbuffer[0] << 8));

}


/***
*_Ctypevec _Getctype() - get ctype info for current locale
*
*Purpose:
*
*Entry:
*
*Exit:
*
*Exceptions:
*
*******************************************************************************/

_CRTIMP2_PURE _Ctypevec __CLRCALL_PURE_OR_CDECL _Getctype()
{
        /* get ctype info for current locale */
        _Ctypevec ctype;

        ctype._Hand = ___lc_handle_func()[LC_COLLATE];
        ctype._Page = ___lc_codepage_func();
        ctype._Table = (const short *)_calloc_crt(256, sizeof (*__pctype_func()));
        if (ctype._Table != 0)
        {
            memcpy((void *)ctype._Table, __pctype_func(), 256 * sizeof (*__pctype_func()));
            ctype._Delfl = 1;
        }
        else
        {
            ctype._Table = (const short *)__pctype_func();
            ctype._Delfl = 0;
        }

        return (ctype);
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\_mbslen_s.c ===
/***
*_mbslen_s.c - Return number of multibyte characters in a multibyte string
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       Return number of multibyte characters in a multibyte string
*       excluding the terminal null.  Locale-dependent.
*
*******************************************************************************/

#include <cruntime.h>
#include <stdlib.h>
#include <ctype.h>
#include <locale.h>
#include <dbgint.h>
#include <internal.h>
#include <mtdll.h>
#include <setlocal.h>

/***
*_mbstrnlen - Return number of multibyte characters in a multibyte string
*
*Purpose:
*       Return number of multibyte characters in a multibyte string
*       excluding the terminal null.  Locale-dependent.
*
*Entry:
*       char *s = string
*       size_t maxsize
*
*Exit:
*       Returns the number of multibyte characters in the string, or
*       (size_t)-1 if the string contains an invalid multibyte character and errno
*       is set to EILSEQ.
*       Only the first sizeInBytes bytes of the string are inspected: if the null
*       terminator is not found, sizeInBytes is returned.
*       If the string is null terminated in sizeInBytes bytes, the return value
*       will always be less than sizeInBytes.
*       If something goes wrong, (size_t)-1 is returned and errno is set to EINVAL.
*
*Exceptions:
*       Input parameters are validated. Refer to the validation section of the function.
*
*******************************************************************************/

size_t __cdecl _mbstrnlen_l(
        const char *s,
        size_t sizeInBytes,
        _locale_t plocinfo
        )
{
    size_t n, size;


    /* validation section */
    _VALIDATE_RETURN(s != NULL, EINVAL, (size_t)-1);
    _VALIDATE_RETURN(sizeInBytes <= INT_MAX, EINVAL, (size_t)-1);


    _LocaleUpdate _loc_update(plocinfo);

    _ASSERTE (_loc_update.GetLocaleT()->locinfo->mb_cur_max == 1 || _loc_update.GetLocaleT()->locinfo->mb_cur_max == 2);

    if ( _loc_update.GetLocaleT()->locinfo->mb_cur_max == 1 )
        /* handle single byte character sets */
        return (int)strnlen(s, sizeInBytes);


    /* verify all valid MB chars */
    if ( MultiByteToWideChar( _loc_update.GetLocaleT()->locinfo->lc_codepage,
                              MB_PRECOMPOSED | MB_ERR_INVALID_CHARS,
                              s,
                              (int)sizeInBytes,
                              NULL,
                              0 ) == 0 )
    {
        /* bad MB char */
        errno = EILSEQ;
        return (size_t)-1;
    }

    /* count MB chars */
    /* Note that sizeInBytes here is the number of bytes, not mb characters! */
    for (n = 0, size = 0; size < sizeInBytes && *s; n++, s++, size++)
    {
        if ( _isleadbyte_l((unsigned char)*s, _loc_update.GetLocaleT()) )
        {
                        size++;
                        if (size >= sizeInBytes)
                        {
                                break;
                        }
            if (*++s == '\0')
                        {
                break;
                        }
        }
    }


        return (size >= sizeInBytes ? sizeInBytes : n);
}

size_t __cdecl _mbstrnlen(
        const char *s,
        size_t maxsize
        )
{
    return _mbstrnlen_l(s, maxsize, NULL);
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\_mbslen.c ===
/***
*_mbslen.c - Return number of multibyte characters in a multibyte string
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       Return number of multibyte characters in a multibyte string
*       excluding the terminal null.  Locale-dependent.
*
*******************************************************************************/

#include <cruntime.h>
#include <stdlib.h>
#include <locale.h>
#include <dbgint.h>
#include <ctype.h>
#include <mbctype.h>
#include <internal.h>
#include <mtdll.h>
#include <setlocal.h>

/***
*_mbstrlen - Return number of multibyte characters in a multibyte string
*
*Purpose:
*       Return number of multibyte characters in a multibyte string
*       excluding the terminal null.  Locale-dependent.
*
*Entry:
*       char *s = string
*
*Exit:
*       Returns the number of multibyte characters in the string, or
*       Returns (size_t)-1 if the string contains an invalid multibyte character.
*       Also, errno is set to EILSEQ.
*
*Exceptions:
*       Input parameters are validated. Refer to the validation section of the function.
*
*******************************************************************************/

size_t __cdecl _mbstrlen_l(
        const char *s,
        _locale_t plocinfo
        )
{
    size_t n;
    _LocaleUpdate _loc_update(plocinfo);

    _ASSERTE (_loc_update.GetLocaleT()->locinfo->mb_cur_max == 1 || _loc_update.GetLocaleT()->locinfo->mb_cur_max == 2);

    if ( _loc_update.GetLocaleT()->locinfo->mb_cur_max == 1 )
        /* handle single byte character sets */
        return strlen(s);


    /* verify all valid MB chars */
    if ( MultiByteToWideChar( _loc_update.GetLocaleT()->locinfo->lc_codepage,
                              MB_PRECOMPOSED | MB_ERR_INVALID_CHARS,
                              s,
                              -1,
                              NULL,
                              0 ) == 0 )
    {
        /* bad MB char */
        errno = EILSEQ;
        return (size_t)-1;
    }

    /* count MB chars */
    for (n = 0; *s; n++, s++) {
        if ( _isleadbyte_l((unsigned char)*s, _loc_update.GetLocaleT()) )
        {
            if (*++s == '\0')
                break;
        }
    }


    return(n);
}

size_t __cdecl _mbstrlen(
        const char *s
        )
{
    if (__locale_changed == 0)
    {
        return strlen(s);
    }
    else
    {
        return _mbstrlen_l(s, NULL);
    }
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\_wcserr.c ===
/***
*_wcserr.c - routine for indexing into system error list
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       Returns system error message index by errno; conforms to the
*       XENIX standard, much compatibility with 1983 uniforum draft standard.
*       (wide char version of _strerror())
*
*******************************************************************************/


#ifndef _UNICODE
#define _UNICODE 1
#endif  /* _UNICODE */

#ifndef UNICODE
#define UNICODE 1
#endif  /* UNICODE */

#undef _MBCS /* UNICODE not _MBCS */

#include "_strerr.c"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\_strerr.c ===
/***
*_strerr.c - routine for indexing into system error list
*
*   Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*   Returns system error message index by errno; conforms to the
*   XENIX standard, much compatibility with 1983 uniforum draft standard.
*
*******************************************************************************/

#include <cruntime.h>
#include <stdlib.h>
#include <errmsg.h>
#include <syserr.h>
#include <string.h>
#include <tchar.h>
#include <malloc.h>
#include <mtdll.h>
#include <dbgint.h>
#include <internal.h>

/* Max length of message = user_string(94)+system_string+2 */
/* [NOTE: The mthread error message buffer is shared by both strerror
   and _strerror so must be the max length of both. */
#define _ERRMSGLEN_ (94+_SYS_MSGMAX+2)

#ifdef _UNICODE
#define _terrmsg    _werrmsg
#else  /* _UNICODE */
#define _terrmsg    _errmsg
#endif  /* _UNICODE */


/***
*char *_strerror(message) - get system error message
*
*Purpose:
*   builds an error message consisting of the users error message
*   (the message parameter), followed by ": ", followed by the system
*   error message (index through errno), followed by a newline.  If
*   message is NULL or a null string, returns a pointer to just
*   the system error message.
*
*Entry:
*   char *message - user's message to prefix system error message
*
*Exit:
*   returns pointer to static memory containing error message.
*   returns NULL if malloc() fails in multi-thread versions.
*
*Exceptions:
*
*******************************************************************************/

#ifdef _UNICODE
wchar_t * __cdecl __wcserror(
#else  /* _UNICODE */
char * __cdecl _strerror (
#endif  /* _UNICODE */
    REG1 const _TCHAR *message
    )
{
    const char *sysErrorMsg = NULL;

    _TCHAR *bldmsg;
    _ptiddata ptd = _getptd_noexit();
    if (!ptd)
        return NULL;




    /* Use per thread buffer area (malloc space, if necessary) */
    /* [NOTE: This buffer is shared between _strerror and streror.] */

    if ( (ptd->_terrmsg == NULL) && ((ptd->_terrmsg =
            _calloc_crt(_ERRMSGLEN_, sizeof(_TCHAR))) == NULL) )
            return(NULL);
    bldmsg = ptd->_terrmsg;


    /* Build the error message */

    bldmsg[0] = '\0';

    if (message && *message) {
        // should leave space for ": \n\0"
        _ERRCHECK(_tcsncat_s( bldmsg, _ERRMSGLEN_, message, _ERRMSGLEN_-4 ));
        _ERRCHECK(_tcscat_s( bldmsg, _ERRMSGLEN_, _T(": ")));
    }

    //  We should have extra space for "\n\0"
    sysErrorMsg = _get_sys_err_msg(errno);

#ifdef _UNICODE
    _ERRCHECK(mbstowcs_s(NULL, bldmsg + wcslen(bldmsg), _ERRMSGLEN_ - wcslen(bldmsg), sysErrorMsg, _ERRMSGLEN_ - wcslen(bldmsg) - 2));
#else  /* _UNICODE */
    _ERRCHECK(strncat_s(bldmsg, _ERRMSGLEN_, sysErrorMsg, _ERRMSGLEN_ - strlen(bldmsg) - 2));
#endif  /* _UNICODE */

    _ERRCHECK(_tcscat_s( bldmsg, _ERRMSGLEN_, _T("\n")));
    return bldmsg;
}

/***
*errno_t _strerror_s(buffer, sizeInTChars, message) - get system error message
*
*Purpose:
*   builds an error message consisting of the users error message
*   (the message parameter), followed by ": ", followed by the system
*   error message (index through errno), followed by a newline.  If
*   message is NULL or a null string, returns a pointer to just
*   the system error message.
*
*Entry:
*   TCHAR * buffer - Destination buffer.
*   size_t sizeInTChars - Size of the destination buffer.
*   TCHAR * message - user's message to prefix system error message
*
*Exit:
*   The error code.
*
*Exceptions:
*   Input parameters are validated. Refer to the validation section of the function.
*
*******************************************************************************/

#define _MIN_MSG_LENGTH 5

#ifdef _UNICODE
errno_t __cdecl __wcserror_s(
#else  /* _UNICODE */
errno_t __cdecl _strerror_s(
#endif  /* _UNICODE */
    TCHAR* buffer,
    size_t sizeInTChars,
    REG1 const _TCHAR *message
    )
{
    errno_t e = 0;

    /* validation section */
    _VALIDATE_RETURN_ERRCODE(buffer != NULL, EINVAL);
    _VALIDATE_RETURN_ERRCODE(sizeInTChars > 0, EINVAL);
    buffer[0] = '\0';

    if (message &&
        *message &&
        _tcslen(message) < (sizeInTChars - 2 - _MIN_MSG_LENGTH))
    {
        _ERRCHECK(_tcscpy_s(buffer, sizeInTChars, message));
        _ERRCHECK(_tcscat_s(buffer, sizeInTChars, _T(": ")));
    }

    /* append the error message at the end of the buffer */
    return _tcserror_s(buffer + _tcslen(buffer), sizeInTChars - _tcslen(buffer), errno);
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\_toupper.c ===
/***
*_toupper.c - convert character to uppercase
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       Defines _Toupper()
*
*******************************************************************************/

#include <cruntime.h>
#include <ctype.h>
#include <stddef.h>
#include <xlocinfo.h>
#include <locale.h>
#include <mtdll.h>
#include <setlocal.h>
#include <awint.h>
#include <yvals.h>

/* remove macro definitions of _toupper() and toupper()
 */
#undef  _toupper
#undef  toupper

/***
*int _Toupper(c) - convert character to uppercase
*
*Purpose:
*       _Toupper() is a version of toupper with a locale argument.
*
*Entry:
*       c - int value of character to be converted
*       const _Ctypevec * = pointer to locale info
*
*Exit:
*       returns int value of uppercase representation of c
*
*Exceptions:
*
*******************************************************************************/

_CRTIMP2_PURE int __CLRCALL_PURE_OR_CDECL _Toupper (
        int c,
        const _Ctypevec *ploc
        )
{
        int size;
        unsigned char inbuffer[3];
        unsigned char outbuffer[3];

        LCID handle;
        UINT codepage;

        if (ploc == 0)
        {
            handle = ___lc_handle_func()[LC_CTYPE];
            codepage = ___lc_codepage_func();
        }
        else
        {
            handle = ploc->_Hand;
            codepage = ploc->_Page;
        }

        if (handle == _CLOCALEHANDLE)
        {
            if ( (c >= 'a') && (c <= 'z') )
                c = c - ('a' - 'A');
            return c;
        }

        /* if checking case of c does not require API call, do it */
        if ((unsigned)c < 256)
        {
            if (ploc == 0)
            {
                if (!islower(c))
                {
                    return c;
                }
            }
            else
            {
                if (!(ploc->_Table[c] & _LOWER))
                {
                    return c;
                }
            }
        }

        /* convert int c to multibyte string */
        if (ploc == 0 ? _cpp_isleadbyte((c >> 8) & 0xff)
                      : (ploc->_Table[(c >> 8) & 0xff] & _LEADBYTE) != 0)
        {
            inbuffer[0] = (c >> 8 & 0xff);
            inbuffer[1] = (unsigned char)c;
            inbuffer[2] = 0;
            size = 2;
        } else {
            inbuffer[0] = (unsigned char)c;
            inbuffer[1] = 0;
            size = 1;
        }

        /* convert wide char to uppercase */
        if (0 == (size = __crtLCMapStringA(NULL, handle, LCMAP_UPPERCASE,
            (const char *)inbuffer, size, (char *)outbuffer, 3, codepage, TRUE)))
        {
            return c;
        }

        /* construct integer return value */
        if (size == 1)
            return ((int)outbuffer[0]);
        else
            return ((int)outbuffer[1] | ((int)outbuffer[0] << 8));

}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\_wopen.c ===
/***
*_wopen.c - open a stream, with string mode (wchar_t version)
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       defines _wopenfile() - opens a stream, with string arguments for mode
*
*******************************************************************************/


#ifndef _UNICODE
#define _UNICODE 1
#endif  /* _UNICODE */

#ifndef UNICODE
#define UNICODE 1
#endif  /* UNICODE */

#include "_open.c"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\AMD64\amdsecgs.asm ===
;***
;amdsecgs.asm      - amd64 -GS cookie check compiler helper
;
;       Copyright (c) Microsoft Corporation. All rights reserved.
;
;Purpose:
;       AMD64 security cookie checking routine
;
;*******************************************************************************

        TITLE   "AMD64 GS Security Check Compiler Helper"

include ksamd64.inc

        extern __security_cookie:QWORD
        extern __report_gsfailure:PROC

;*++
;
; VOID
; __security_check_cookie (
;    ULONG64 Value
;    )
;
; Routine Description:
;
;   This function checks the specified cookie value against the global
;   cookie value. If the values match, then control is returned to the
;   caller. Otherwise, the failure is reported and there is no return
;   to the caller.
;
;   N.B. No registers except for RCX are modified if the return is to the
;   caller.
;
; Arguments:
;
;   Value (rcx) - Supplies the value of cookie.
;
; Return Value:
;
;    None.
;
;--*

        LEAF_ENTRY __security_check_cookie, _TEXT

        cmp rcx, __security_cookie      ; check cookie value in frame
        jne ReportFailure               ; if ne, cookie check failure
        rol rcx, 16                     ; make sure high word is zero
        test cx, -1
        jne RestoreRcx
        db 0f3h                         ; (encode REP for REP RET)
        ret                             ; no overrun, use REP RET to avoid AMD
                                        ; branch prediction flaw after Jcc

;
; The cookie check failed.
;

RestoreRcx:
        ror rcx, 16

ReportFailure:

        jmp __report_gsfailure          ; overrun found

        LEAF_END __security_check_cookie, _TEXT

        end
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\AMD64\dllsupp.c ===
/***
*dllsupp.c - Definitions of public constants
*
*       Copyright (c) 1992-2001, Microsoft Corporation. All rights reserved.
*
*Purpose:
*       Provides definitions for public constants (absolutes) that are
*       'normally' defined in objects in the C library, but must be defined
*       here for clients of crtdll.dll & msvcrt*.dll.  These constants are:
*
*                           _fltused
*
*******************************************************************************/

#ifdef __cplusplus
extern "C" {
#endif  /* __cplusplus */
int _fltused = 0x9875;
#ifdef __cplusplus
}
#endif  /* __cplusplus */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\_open.c ===
/***
*_open.c - open a stream, with string mode
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       defines _openfile() - opens a stream, with string arguments for mode
*
*******************************************************************************/

#include <cruntime.h>
#include <stdio.h>
#include <stdlib.h>
#include <fcntl.h>
#include <file2.h>
#include <share.h>
#include <io.h>
#include <dbgint.h>
#include <internal.h>
#include <tchar.h>
#include <sys\stat.h>

#define CMASK   0644    /* rw-r--r-- */
#define P_CMASK 0666    /* different for Posix */

/***
*FILE *_openfile(filename, mode, shflag, stream) - open a file with string
*       mode and file sharing flag.
*
*Purpose:
*       parse the string, looking for exactly one of {rwa}, at most one '+',
*       at most one of {tb}, at most one of {cn}, at most one of {SR}, at most
*       one 'T', and at most one 'D'. pass the result on as an int containing
*       flags of what was found. open a file with proper mode if permissions
*       allow. buffer not allocated until first i/o call is issued. intended
*       for use inside library only
*
*Entry:
*       char *filename - file to open
*       char *mode - mode to use (see above)
*       int shflag - file sharing flag
*       FILE *stream - stream to use for file
*
*Exit:
*       set stream's fields, and causes system file management by system calls
*       returns stream or NULL if fails
*
*Exceptions:
*
*******************************************************************************/

FILE * __cdecl __topenfile (
        const _TSCHAR *filename,
        REG3 const _TSCHAR *mode,
        int shflag,
        FILE *str
        )
{
        REG2 int modeflag;
        int streamflag = _commode;
        int commodeset = 0;
        int scanset    = 0;
        int whileflag;
        int filedes;
        REG1 FILE *stream;
        BOOL encodingFlag = FALSE;

        _ASSERTE(filename != NULL);
        _ASSERTE(mode != NULL);
        _ASSERTE(str != NULL);

        /* Parse the user's specification string as set flags in
               (1) modeflag - system call flags word
               (2) streamflag - stream handle flags word. */

        /* Skip leading spaces */
        while (*mode == _T(' '))
        {
            ++mode;
        }

        /* First mode character must be 'r', 'w', or 'a'. */

        switch (*mode) {
        case _T('r'):
                modeflag = _O_RDONLY;
                streamflag |= _IOREAD;
                break;
        case _T('w'):
                modeflag = _O_WRONLY | _O_CREAT | _O_TRUNC;
                streamflag |= _IOWRT;
                break;
        case _T('a'):
                modeflag = _O_WRONLY | _O_CREAT | _O_APPEND;
                streamflag |= _IOWRT;
                break;
        default:
                _VALIDATE_RETURN(("Invalid file open mode",0), EINVAL, NULL);
        }

        /* There can be up to three more optional mode characters:
           (1) A single '+' character,
           (2) One of 't' and 'b' and
           (3) One of 'c' and 'n'.
        */

        whileflag=1;

        while(*++mode && whileflag)
                switch(*mode) {

                case _T(' '):
                    /* skip spaces */
                    break;

                case _T('+'):
                        if (modeflag & _O_RDWR)
                                whileflag=0;
                        else {
                                modeflag |= _O_RDWR;
                                modeflag &= ~(_O_RDONLY | _O_WRONLY);
                                streamflag |= _IORW;
                                streamflag &= ~(_IOREAD | _IOWRT);
                        }
                        break;

                case _T('b'):
                        if (modeflag & (_O_TEXT | _O_BINARY))
                                whileflag=0;
                        else
                                modeflag |= _O_BINARY;
                        break;

                case _T('t'):
                        if (modeflag & (_O_TEXT | _O_BINARY))
                                whileflag=0;
                        else
                                modeflag |= _O_TEXT;
                        break;

                case _T('c'):
                        if (commodeset)
                                whileflag=0;
                        else {
                                commodeset = 1;
                                streamflag |= _IOCOMMIT;
                        }
                        break;

                case _T('n'):
                        if (commodeset)
                                whileflag=0;
                        else {
                                commodeset = 1;
                                streamflag &= ~_IOCOMMIT;
                        }
                        break;

                case _T('S'):
                        if (scanset)
                                whileflag=0;
                        else {
                                scanset = 1;
                                modeflag |= _O_SEQUENTIAL;
                        }
                        break;

                case _T('R'):
                        if (scanset)
                                whileflag=0;
                        else {
                                scanset = 1;
                                modeflag |= _O_RANDOM;
                        }
                        break;

                case _T('T'):
                        if (modeflag & _O_SHORT_LIVED)
                                whileflag=0;
                        else
                                modeflag |= _O_SHORT_LIVED;
                        break;

                case _T('D'):
                        if (modeflag & _O_TEMPORARY)
                                whileflag=0;
                        else
                                modeflag |= _O_TEMPORARY;
                        break;
                case _T('N'):
                        modeflag |= _O_NOINHERIT;
                        break;

                case _T(','):
                        encodingFlag = TRUE;
                        whileflag = 0;
                        break;


                default:
                        _VALIDATE_RETURN(("Invalid file open mode",0), EINVAL, NULL);
                }
        if (encodingFlag)
        {
            static const _TSCHAR ccsField[] = _T("ccs");
            static const _TSCHAR utf8encoding[] = _T("UTF-8");
            static const _TSCHAR utf16encoding[] = _T("UTF-16LE");
            static const _TSCHAR unicodeencoding[] = _T("UNICODE");

            /* Skip spaces */
            while (*mode == _T(' '))
            {
                ++mode;
            }

            /*
             * The length that we want to compare is numbers of elements in
             * csField -1 since this number also contains NULL terminator
             */
            if (_tcsncmp(ccsField, mode, (_countof(ccsField))-1) != 0)
                _VALIDATE_RETURN(("Invalid file open mode",0), EINVAL, NULL);

            mode += _countof(ccsField)-1;

            /* Skip spaces */
            while (*mode == _T(' '))
            {
                ++mode;
            }

            /* Look for '=' */
            if (*mode != _T('='))
            {
                _VALIDATE_RETURN(("Invalid file open mode",0), EINVAL, NULL);
            }
            ++mode;

            /* Skip spaces */
            while (*mode == _T(' '))
            {
                ++mode;
            }

            if (_tcsnicmp(mode, utf8encoding, _countof(utf8encoding) - 1) == 0){
                mode += _countof(utf8encoding)-1;
                modeflag |= _O_U8TEXT;
            }
            else if (_tcsnicmp(mode, utf16encoding, _countof(utf16encoding) - 1) == 0) {
                mode += _countof(utf16encoding)-1;
                modeflag |= _O_U16TEXT;
            }
            else if (_tcsnicmp(mode, unicodeencoding, _countof(unicodeencoding) - 1) == 0) {
                mode += _countof(unicodeencoding)-1;
                modeflag |= _O_WTEXT;
            }
            else
                _VALIDATE_RETURN(("Invalid file open mode",0), EINVAL, NULL);

        }

        /* Skip trailing spaces */
        while (*mode == _T(' '))
        {
            ++mode;
        }

        _VALIDATE_RETURN( (*mode == _T('\0')), EINVAL, NULL);

        /* Try to open the file.  Note that if neither 't' nor 'b' is
           specified, _sopen will use the default. */

        if (_tsopen_s(&filedes, filename, modeflag, shflag, _S_IREAD | _S_IWRITE) != 0)
                return(NULL);

        /* Set up the stream data base. */
#ifndef CRTDLL
        _cflush++;  /* force library pre-termination procedure */
#endif  /* CRTDLL */
        /* Init pointers */
        stream = str;

        stream->_flag = streamflag;
        stream->_cnt = 0;
        stream->_tmpfname = stream->_base = stream->_ptr = NULL;

        stream->_file = filedes;

        return(stream);
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\_wstargv.c ===
/***
*_wstargv.c - Wildcard argv[] expansion (wchar_t version)
*
*       Copyright (c) Microsoft Corporation.  All rights reserved.
*
*Purpose:
*       _wsetargv performs wildcard argv[] expansion
*
*       NOTE:  This stub module scheme is compatible with NT build
*       procedure.
*
*******************************************************************************/


#define WPRFLAG 1

#ifndef _UNICODE
#define _UNICODE 1
#endif  /* _UNICODE */

#ifndef UNICODE
#define UNICODE 1
#endif  /* UNICODE */

#undef _MBCS /* UNICODE not _MBCS */

#define WILDCARD 1

#include "stdargv.c"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\intel\alloca16.asm ===
page    ,132
        title   alloca16 - aligned C stack checking routine
;***
;chkstk.asm - aligned C stack checking routine
;
;       Copyright (c) Microsoft Corporation. All rights reserved.
;
;Purpose:
;       Provides 16 and 8 bit aligned alloca routines.
;
;*******************************************************************************

.xlist
        include cruntime.inc
.list

extern  _chkstk:near

; size of a page of memory

        CODESEG

page
;***
; _alloca_probe_16, _alloca_probe_8 - align allocation to 16/8 byte boundary
;
;Purpose:
;       Adjust allocation size so the ESP returned from chkstk will be aligned
;       to 16/8 bit boundary. Call chkstk to do the real allocation.
;
;Entry:
;       EAX = size of local frame
;
;Exit:
;       Adjusted EAX.
;
;Uses:
;       EAX
;
;*******************************************************************************

public  _alloca_probe_8

_alloca_probe_16 proc                   ; 16 byte aligned alloca

        push    ecx
        lea     ecx, [esp] + 8          ; TOS before entering this function
        sub     ecx, eax                ; New TOS
        and     ecx, (16 - 1)           ; Distance from 16 bit align (align down)
        add     eax, ecx                ; Increase allocation size
        sbb     ecx, ecx                ; ecx = 0xFFFFFFFF if size wrapped around
        or      eax, ecx                ; cap allocation size on wraparound
        pop     ecx                     ; Restore ecx
        jmp     _chkstk

alloca_8:                               ; 8 byte aligned alloca
_alloca_probe_8 = alloca_8

        push    ecx
        lea     ecx, [esp] + 8          ; TOS before entering this function
        sub     ecx, eax                ; New TOS
        and     ecx, (8 - 1)            ; Distance from 8 bit align (align down)
        add     eax, ecx                ; Increase allocation Size
        sbb     ecx, ecx                ; ecx = 0xFFFFFFFF if size wrapped around
        or      eax, ecx                ; cap allocation size on wraparound
        pop     ecx                     ; Restore ecx
        jmp     _chkstk

_alloca_probe_16 endp

        end
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\_wctype.c ===
/***
*_wctype.c - function versions of wctype macros
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       This file provides function versions of the wide character
*       classification and conversion macros in ctype.h.
*
*******************************************************************************/


/***
*wctype - Function versions of wctype macros
*
*Purpose:
*       Function versions of the wide char macros in ctype.h,
*       including isleadbyte and iswascii.  In order to define
*       these, we use a trick -- we undefine the macro so we can use the
*       name in the function declaration, then re-include the file so
*       we can use the macro in the definition part.
*
*       Functions defined:
*           iswalpha    iswupper     iswlower
*           iswdigit    iswxdigit    iswspace
*           iswpunct    iswalnum     iswprint
*           iswgraph    iswctrl      iswascii
*                                    isleadbyte
*
*Entry:
*       wchar_t c = character to be tested
*Exit:
*       returns non-zero = character is of the requested type
*                  0 = character is NOT of the requested type
*
*Exceptions:
*       None.
*
*******************************************************************************/

#include <ctype.h>
#include <cruntime.h>
#include <stdlib.h>
#include <locale.h>
#include <mbctype.h>
#include <mtdll.h>
#include <setlocal.h>

extern "C"
{
extern __inline int (__cdecl _isleadbyte_l) (
        int c,
        _locale_t plocinfo
        )
{
    _LocaleUpdate _loc_update(plocinfo);
    return (_loc_update.GetLocaleT()->locinfo->pctype[(unsigned char)(c)] & _LEADBYTE);
}

extern __inline int (__cdecl isleadbyte) (
        int c
        )
{
        return _isleadbyte_l(c, NULL);
}

extern __inline int (__cdecl _iswalpha_l) (
    wint_t c,
        _locale_t plocinfo
        )
{
        return _iswalpha_l(c, plocinfo);
}

extern __inline int (__cdecl iswalpha) (
        wint_t c
        )
{
        return iswalpha(c);
}

extern __inline int (__cdecl _iswupper_l) (
    wint_t c,
        _locale_t plocinfo
        )
{
        return _iswupper_l(c, plocinfo);
}

extern __inline int (__cdecl iswupper) (
        wint_t c
        )
{
        return iswupper(c);
}

extern __inline int (__cdecl _iswlower_l) (
    wint_t c,
        _locale_t plocinfo
        )
{
        return _iswlower_l(c, plocinfo);
}

extern __inline int (__cdecl iswlower) (
        wint_t c
        )
{
        return iswlower(c);
}

extern __inline int (__cdecl _iswdigit_l) (
    wint_t c,
        _locale_t plocinfo
        )
{
        return _iswdigit_l(c, plocinfo);
}

extern __inline int (__cdecl iswdigit) (
        wint_t c
        )
{
        return iswdigit(c);
}

extern __inline int (__cdecl _iswxdigit_l) (
    wint_t c,
        _locale_t plocinfo
        )
{
        return _iswxdigit_l(c, plocinfo);
}

extern __inline int (__cdecl iswxdigit) (
        wint_t c
        )
{
        return iswxdigit(c);
}

extern __inline int (__cdecl _iswspace_l) (
    wint_t c,
        _locale_t plocinfo
        )
{
        return _iswspace_l(c, plocinfo);
}

extern __inline int (__cdecl iswspace) (
        wint_t c
        )
{
        return iswspace(c);
}

extern __inline int (__cdecl _iswpunct_l) (
    wint_t c,
        _locale_t plocinfo
        )
{
        return _iswpunct_l(c, plocinfo);
}

extern __inline int (__cdecl iswpunct) (
        wint_t c
        )
{
        return iswpunct(c);
}

extern __inline int (__cdecl _iswalnum_l) (
    wint_t c,
        _locale_t plocinfo
        )
{
        return _iswalnum_l(c, plocinfo);
}

extern __inline int (__cdecl iswalnum) (
        wint_t c
        )
{
        return iswalnum(c);
}

extern __inline int (__cdecl _iswprint_l) (
    wint_t c,
        _locale_t plocinfo
        )
{
        return _iswprint_l(c, plocinfo);
}

extern __inline int (__cdecl iswprint) (
        wint_t c
        )
{
        return iswprint(c);
}

extern __inline int (__cdecl _iswgraph_l) (
    wint_t c,
        _locale_t plocinfo
        )
{
        return _iswgraph_l(c, plocinfo);
}

extern __inline int (__cdecl iswgraph) (
        wint_t c
        )
{
        return iswgraph(c);
}

extern __inline int (__cdecl _iswcntrl_l) (
    wint_t c,
        _locale_t plocinfo
        )
{
        return _iswcntrl_l(c, plocinfo);
}

extern __inline int (__cdecl iswcntrl) (
        wint_t c
        )
{
        return iswcntrl(c);
}

extern __inline int (__cdecl iswascii) (
        wint_t c
        )
{
        return iswascii(c);
}

extern __inline int (__cdecl _iswcsym_l) (
    wint_t c,
        _locale_t plocinfo
        )
{
        return _iswcsym_l(c, plocinfo);
}

extern __inline int (__cdecl __iswcsym) (
        wint_t c
        )
{
        return __iswcsym(c);
}

extern __inline int (__cdecl _iswcsymf_l) (
    wint_t c,
        _locale_t plocinfo
        )
{
        return _iswcsymf_l(c, plocinfo);
}

extern __inline int (__cdecl __iswcsymf) (
        wint_t c
        )
{
        return __iswcsymf(c);
}

}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\intel\enable.asm ===
page    ,132
        title   enable - enable/disable interrupts
;***
;enable.asm - contains _enable() and _disable() routines
;
;       Copyright (c) Microsoft Corporation. All rights reserved.
;
;Purpose:
;
;*******************************************************************************


        .xlist
        include cruntime.inc
        .list

page
;***
;void _enable(void)  - enables interrupts
;void _disable(void) - disables interrupts
;
;Purpose:
;       The _enable() functions executes a "sti" instruction. The _disable()
;       function executes a "cli" instruction.
;
;Entry:
;
;Exit:
;
;Uses:
;
;Exceptions:
;
;*******************************************************************************


        CODESEG

        public  _enable, _disable

_enable proc

        sti
        ret

_enable endp

        align   4

_disable proc

        cli
        ret

_disable endp


        end
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\intel\inp.asm ===
page    ,132
        title   inp - input from ports
;***
;inp.asm - _inp, _inpw and _inpd routines
;
;       Copyright (c) Microsoft Corporation. All rights reserved.
;
;Purpose:
;       Defines the read-from-a-port functions: _inp(), _inpw() and inpd().
;
;*******************************************************************************

        .xlist
        include cruntime.inc
        .list


page
;***
;int            _inp(port)  - read byte from port
;unsigned short _inpw(port) - read word from port
;unsigned long  _inpd(port) - read dword from port
;
;Purpose:
;       Read single byte/word/dword from the specified port.
;
;Entry:
;       unsigned short port - port to read from
;
;Exit:
;       returns value read.
;
;Uses:
;       EAX, EDX
;
;Exceptions:
;
;*******************************************************************************

        CODESEG

        public _inp, _inpw, _inpd

_inp    proc

        xor     eax,eax
        mov     dx,word ptr [esp + 4]
        in      al,dx
        ret

_inp    endp


_inpw   proc

        mov     dx,word ptr [esp + 4]
        in      ax,dx
        ret

_inpw   endp

_inpd   proc

        mov     dx,word ptr [esp + 4]
        in      eax,dx
        ret

_inpd   endp

        end
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\intel\llmul.asm ===
title   llmul - long multiply routine
;***
;llmul.asm - long multiply routine
;
;       Copyright (c) Microsoft Corporation. All rights reserved.
;
;Purpose:
;       Defines long multiply routine
;       Both signed and unsigned routines are the same, since multiply's
;       work out the same in 2's complement
;       creates the following routine:
;           __allmul
;
;*******************************************************************************


.xlist
include cruntime.inc
include mm.inc
.list

;***
;llmul - long multiply routine
;
;Purpose:
;       Does a long multiply (same for signed/unsigned)
;       Parameters are not changed.
;
;Entry:
;       Parameters are passed on the stack:
;               1st pushed: multiplier (QWORD)
;               2nd pushed: multiplicand (QWORD)
;
;Exit:
;       EDX:EAX - product of multiplier and multiplicand
;       NOTE: parameters are removed from the stack
;
;Uses:
;       ECX
;
;Exceptions:
;
;*******************************************************************************

        CODESEG

_allmul PROC NEAR

A       EQU     [esp + 4]       ; stack address of a
B       EQU     [esp + 12]      ; stack address of b

;
;       AHI, BHI : upper 32 bits of A and B
;       ALO, BLO : lower 32 bits of A and B
;
;             ALO * BLO
;       ALO * BHI
; +     BLO * AHI
; ---------------------
;

        mov     eax,HIWORD(A)
        mov     ecx,HIWORD(B)
        or      ecx,eax         ;test for both hiwords zero.
        mov     ecx,LOWORD(B)
        jnz     short hard      ;both are zero, just mult ALO and BLO

        mov     eax,LOWORD(A)
        mul     ecx

        ret     16              ; callee restores the stack

hard:
        push    ebx

; must redefine A and B since esp has been altered

A2      EQU     [esp + 8]       ; stack address of a
B2      EQU     [esp + 16]      ; stack address of b

        mul     ecx             ;eax has AHI, ecx has BLO, so AHI * BLO
        mov     ebx,eax         ;save result

        mov     eax,LOWORD(A2)
        mul     dword ptr HIWORD(B2) ;ALO * BHI
        add     ebx,eax         ;ebx = ((ALO * BHI) + (AHI * BLO))

        mov     eax,LOWORD(A2)  ;ecx = BLO
        mul     ecx             ;so edx:eax = ALO*BLO
        add     edx,ebx         ;now edx has all the LO*HI stuff

        pop     ebx

        ret     16              ; callee restores the stack

_allmul ENDP

        end
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\intel\lldiv.asm ===
title   lldiv - signed long divide routine
;***
;lldiv.asm - signed long divide routine
;
;       Copyright (c) Microsoft Corporation. All rights reserved.
;
;Purpose:
;       defines the signed long divide routine
;           __alldiv
;
;*******************************************************************************


.xlist
include cruntime.inc
include mm.inc
.list

;***
;lldiv - signed long divide
;
;Purpose:
;       Does a signed long divide of the arguments.  Arguments are
;       not changed.
;
;Entry:
;       Arguments are passed on the stack:
;               1st pushed: divisor (QWORD)
;               2nd pushed: dividend (QWORD)
;
;Exit:
;       EDX:EAX contains the quotient (dividend/divisor)
;       NOTE: this routine removes the parameters from the stack.
;
;Uses:
;       ECX
;
;Exceptions:
;
;*******************************************************************************

        CODESEG

_alldiv PROC NEAR

        push    edi
        push    esi
        push    ebx

; Set up the local stack and save the index registers.  When this is done
; the stack frame will look as follows (assuming that the expression a/b will
; generate a call to lldiv(a, b)):
;
;               -----------------
;               |               |
;               |---------------|
;               |               |
;               |--divisor (b)--|
;               |               |
;               |---------------|
;               |               |
;               |--dividend (a)-|
;               |               |
;               |---------------|
;               | return addr** |
;               |---------------|
;               |      EDI      |
;               |---------------|
;               |      ESI      |
;               |---------------|
;       ESP---->|      EBX      |
;               -----------------
;

DVND    equ     [esp + 16]      ; stack address of dividend (a)
DVSR    equ     [esp + 24]      ; stack address of divisor (b)


; Determine sign of the result (edi = 0 if result is positive, non-zero
; otherwise) and make operands positive.

        xor     edi,edi         ; result sign assumed positive

        mov     eax,HIWORD(DVND) ; hi word of a
        or      eax,eax         ; test to see if signed
        jge     short L1        ; skip rest if a is already positive
        inc     edi             ; complement result sign flag
        mov     edx,LOWORD(DVND) ; lo word of a
        neg     eax             ; make a positive
        neg     edx
        sbb     eax,0
        mov     HIWORD(DVND),eax ; save positive value
        mov     LOWORD(DVND),edx
L1:
        mov     eax,HIWORD(DVSR) ; hi word of b
        or      eax,eax         ; test to see if signed
        jge     short L2        ; skip rest if b is already positive
        inc     edi             ; complement the result sign flag
        mov     edx,LOWORD(DVSR) ; lo word of a
        neg     eax             ; make b positive
        neg     edx
        sbb     eax,0
        mov     HIWORD(DVSR),eax ; save positive value
        mov     LOWORD(DVSR),edx
L2:

;
; Now do the divide.  First look to see if the divisor is less than 4194304K.
; If so, then we can use a simple algorithm with word divides, otherwise
; things get a little more complex.
;
; NOTE - eax currently contains the high order word of DVSR
;

        or      eax,eax         ; check to see if divisor < 4194304K
        jnz     short L3        ; nope, gotta do this the hard way
        mov     ecx,LOWORD(DVSR) ; load divisor
        mov     eax,HIWORD(DVND) ; load high word of dividend
        xor     edx,edx
        div     ecx             ; eax <- high order bits of quotient
        mov     ebx,eax         ; save high bits of quotient
        mov     eax,LOWORD(DVND) ; edx:eax <- remainder:lo word of dividend
        div     ecx             ; eax <- low order bits of quotient
        mov     edx,ebx         ; edx:eax <- quotient
        jmp     short L4        ; set sign, restore stack and return

;
; Here we do it the hard way.  Remember, eax contains the high word of DVSR
;

L3:
        mov     ebx,eax         ; ebx:ecx <- divisor
        mov     ecx,LOWORD(DVSR)
        mov     edx,HIWORD(DVND) ; edx:eax <- dividend
        mov     eax,LOWORD(DVND)
L5:
        shr     ebx,1           ; shift divisor right one bit
        rcr     ecx,1
        shr     edx,1           ; shift dividend right one bit
        rcr     eax,1
        or      ebx,ebx
        jnz     short L5        ; loop until divisor < 4194304K
        div     ecx             ; now divide, ignore remainder
        mov     esi,eax         ; save quotient

;
; We may be off by one, so to check, we will multiply the quotient
; by the divisor and check the result against the orignal dividend
; Note that we must also check for overflow, which can occur if the
; dividend is close to 2**64 and the quotient is off by 1.
;

        mul     dword ptr HIWORD(DVSR) ; QUOT * HIWORD(DVSR)
        mov     ecx,eax
        mov     eax,LOWORD(DVSR)
        mul     esi             ; QUOT * LOWORD(DVSR)
        add     edx,ecx         ; EDX:EAX = QUOT * DVSR
        jc      short L6        ; carry means Quotient is off by 1

;
; do long compare here between original dividend and the result of the
; multiply in edx:eax.  If original is larger or equal, we are ok, otherwise
; subtract one (1) from the quotient.
;

        cmp     edx,HIWORD(DVND) ; compare hi words of result and original
        ja      short L6        ; if result > original, do subtract
        jb      short L7        ; if result < original, we are ok
        cmp     eax,LOWORD(DVND) ; hi words are equal, compare lo words
        jbe     short L7        ; if less or equal we are ok, else subtract
L6:
        dec     esi             ; subtract 1 from quotient
L7:
        xor     edx,edx         ; edx:eax <- quotient
        mov     eax,esi

;
; Just the cleanup left to do.  edx:eax contains the quotient.  Set the sign
; according to the save value, cleanup the stack, and return.
;

L4:
        dec     edi             ; check to see if result is negative
        jnz     short L8        ; if EDI == 0, result should be negative
        neg     edx             ; otherwise, negate the result
        neg     eax
        sbb     edx,0

;
; Restore the saved registers and return.
;

L8:
        pop     ebx
        pop     esi
        pop     edi

        ret     16

_alldiv ENDP

end
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\intel\llrem.asm ===
title   llrem - signed long remainder routine
;***
;llrem.asm - signed long remainder routine
;
;       Copyright (c) Microsoft Corporation. All rights reserved.
;
;Purpose:
;       defines the signed long remainder routine
;           __allrem
;
;*******************************************************************************


.xlist
include cruntime.inc
include mm.inc
.list

;***
;llrem - signed long remainder
;
;Purpose:
;       Does a signed long remainder of the arguments.  Arguments are
;       not changed.
;
;Entry:
;       Arguments are passed on the stack:
;               1st pushed: divisor (QWORD)
;               2nd pushed: dividend (QWORD)
;
;Exit:
;       EDX:EAX contains the remainder (dividend%divisor)
;       NOTE: this routine removes the parameters from the stack.
;
;Uses:
;       ECX
;
;Exceptions:
;
;*******************************************************************************

        CODESEG

_allrem PROC NEAR

        push    ebx
        push    edi

; Set up the local stack and save the index registers.  When this is done
; the stack frame will look as follows (assuming that the expression a%b will
; generate a call to lrem(a, b)):
;
;               -----------------
;               |               |
;               |---------------|
;               |               |
;               |--divisor (b)--|
;               |               |
;               |---------------|
;               |               |
;               |--dividend (a)-|
;               |               |
;               |---------------|
;               | return addr** |
;               |---------------|
;               |       EBX     |
;               |---------------|
;       ESP---->|       EDI     |
;               -----------------
;

DVND    equ     [esp + 12]      ; stack address of dividend (a)
DVSR    equ     [esp + 20]      ; stack address of divisor (b)


; Determine sign of the result (edi = 0 if result is positive, non-zero
; otherwise) and make operands positive.

        xor     edi,edi         ; result sign assumed positive

        mov     eax,HIWORD(DVND) ; hi word of a
        or      eax,eax         ; test to see if signed
        jge     short L1        ; skip rest if a is already positive
        inc     edi             ; complement result sign flag bit
        mov     edx,LOWORD(DVND) ; lo word of a
        neg     eax             ; make a positive
        neg     edx
        sbb     eax,0
        mov     HIWORD(DVND),eax ; save positive value
        mov     LOWORD(DVND),edx
L1:
        mov     eax,HIWORD(DVSR) ; hi word of b
        or      eax,eax         ; test to see if signed
        jge     short L2        ; skip rest if b is already positive
        mov     edx,LOWORD(DVSR) ; lo word of b
        neg     eax             ; make b positive
        neg     edx
        sbb     eax,0
        mov     HIWORD(DVSR),eax ; save positive value
        mov     LOWORD(DVSR),edx
L2:

;
; Now do the divide.  First look to see if the divisor is less than 4194304K.
; If so, then we can use a simple algorithm with word divides, otherwise
; things get a little more complex.
;
; NOTE - eax currently contains the high order word of DVSR
;

        or      eax,eax         ; check to see if divisor < 4194304K
        jnz     short L3        ; nope, gotta do this the hard way
        mov     ecx,LOWORD(DVSR) ; load divisor
        mov     eax,HIWORD(DVND) ; load high word of dividend
        xor     edx,edx
        div     ecx             ; edx <- remainder
        mov     eax,LOWORD(DVND) ; edx:eax <- remainder:lo word of dividend
        div     ecx             ; edx <- final remainder
        mov     eax,edx         ; edx:eax <- remainder
        xor     edx,edx
        dec     edi             ; check result sign flag
        jns     short L4        ; negate result, restore stack and return
        jmp     short L8        ; result sign ok, restore stack and return

;
; Here we do it the hard way.  Remember, eax contains the high word of DVSR
;

L3:
        mov     ebx,eax         ; ebx:ecx <- divisor
        mov     ecx,LOWORD(DVSR)
        mov     edx,HIWORD(DVND) ; edx:eax <- dividend
        mov     eax,LOWORD(DVND)
L5:
        shr     ebx,1           ; shift divisor right one bit
        rcr     ecx,1
        shr     edx,1           ; shift dividend right one bit
        rcr     eax,1
        or      ebx,ebx
        jnz     short L5        ; loop until divisor < 4194304K
        div     ecx             ; now divide, ignore remainder

;
; We may be off by one, so to check, we will multiply the quotient
; by the divisor and check the result against the orignal dividend
; Note that we must also check for overflow, which can occur if the
; dividend is close to 2**64 and the quotient is off by 1.
;

        mov     ecx,eax         ; save a copy of quotient in ECX
        mul     dword ptr HIWORD(DVSR)
        xchg    ecx,eax         ; save product, get quotient in EAX
        mul     dword ptr LOWORD(DVSR)
        add     edx,ecx         ; EDX:EAX = QUOT * DVSR
        jc      short L6        ; carry means Quotient is off by 1

;
; do long compare here between original dividend and the result of the
; multiply in edx:eax.  If original is larger or equal, we are ok, otherwise
; subtract the original divisor from the result.
;

        cmp     edx,HIWORD(DVND) ; compare hi words of result and original
        ja      short L6        ; if result > original, do subtract
        jb      short L7        ; if result < original, we are ok
        cmp     eax,LOWORD(DVND) ; hi words are equal, compare lo words
        jbe     short L7        ; if less or equal we are ok, else subtract
L6:
        sub     eax,LOWORD(DVSR) ; subtract divisor from result
        sbb     edx,HIWORD(DVSR)
L7:

;
; Calculate remainder by subtracting the result from the original dividend.
; Since the result is already in a register, we will do the subtract in the
; opposite direction and negate the result if necessary.
;

        sub     eax,LOWORD(DVND) ; subtract dividend from result
        sbb     edx,HIWORD(DVND)

;
; Now check the result sign flag to see if the result is supposed to be positive
; or negative.  It is currently negated (because we subtracted in the 'wrong'
; direction), so if the sign flag is set we are done, otherwise we must negate
; the result to make it positive again.
;

        dec     edi             ; check result sign flag
        jns     short L8        ; result is ok, restore stack and return
L4:
        neg     edx             ; otherwise, negate the result
        neg     eax
        sbb     edx,0

;
; Just the cleanup left to do.  edx:eax contains the quotient.
; Restore the saved registers and return.
;

L8:
        pop     edi
        pop     ebx

        ret     16

_allrem ENDP

        end
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\intel\loadcfg.c ===
/***
*chkesp.c
*
*       Copyright (c) Microsoft Corporation.  All rights reserved.
*
*Purpose:
*       Defines the default load config struct linked into images.
*
*******************************************************************************/

#if !defined (_M_IX86)
#error  No need to compile this module for any platform besides x86
#endif  /* !defined (_M_IX86) */

#include <windows.h>

extern UINT_PTR     __security_cookie;  /* /GS security cookie */

/*
 * The following two names are automatically created by the linker for any
 * image that has the safe exception table present.
 */

extern PVOID __safe_se_handler_table[]; /* base of safe handler entry table */
extern BYTE  __safe_se_handler_count;   /* absolute symbol whose address is
                                           the count of table entries */

typedef struct {
    DWORD       Size;
    DWORD       TimeDateStamp;
    WORD        MajorVersion;
    WORD        MinorVersion;
    DWORD       GlobalFlagsClear;
    DWORD       GlobalFlagsSet;
    DWORD       CriticalSectionDefaultTimeout;
    DWORD       DeCommitFreeBlockThreshold;
    DWORD       DeCommitTotalFreeThreshold;
    DWORD       LockPrefixTable;            // VA
    DWORD       MaximumAllocationSize;
    DWORD       VirtualMemoryThreshold;
    DWORD       ProcessHeapFlags;
    DWORD       ProcessAffinityMask;
    WORD        CSDVersion;
    WORD        Reserved1;
    DWORD       EditList;                   // VA
    PUINT_PTR   SecurityCookie;
    PVOID       *SEHandlerTable;
    DWORD       SEHandlerCount;
} IMAGE_LOAD_CONFIG_DIRECTORY32_2;

const
IMAGE_LOAD_CONFIG_DIRECTORY32_2   _load_config_used = {
    sizeof(IMAGE_LOAD_CONFIG_DIRECTORY32_2),
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    &__security_cookie,
    __safe_se_handler_table,
    (DWORD)(DWORD_PTR) &__safe_se_handler_count
};
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\intel\llshl.asm ===
title   llshl - long shift left
;***
;llshl.asm - long shift left
;
;       Copyright (c) Microsoft Corporation. All rights reserved.
;
;Purpose:
;       define long shift left routine (signed and unsigned are same)
;           __allshl
;
;*******************************************************************************


.xlist
include cruntime.inc
include mm.inc
.list

;***
;llshl - long shift left
;
;Purpose:
;       Does a Long Shift Left (signed and unsigned are identical)
;       Shifts a long left any number of bits.
;
;Entry:
;       EDX:EAX - long value to be shifted
;       CL    - number of bits to shift by
;
;Exit:
;       EDX:EAX - shifted value
;
;Uses:
;       CL is destroyed.
;
;Exceptions:
;
;*******************************************************************************

        CODESEG

_allshl PROC NEAR

;
; Handle shifts of 64 or more bits (all get 0)
;
        cmp     cl, 64
        jae     short RETZERO

;
; Handle shifts of between 0 and 31 bits
;
        cmp     cl, 32
        jae     short MORE32
        shld    edx,eax,cl
        shl     eax,cl
        ret

;
; Handle shifts of between 32 and 63 bits
;
MORE32:
        mov     edx,eax
        xor     eax,eax
        and     cl,31
        shl     edx,cl
        ret

;
; return 0 in edx:eax
;
RETZERO:
        xor     eax,eax
        xor     edx,edx
        ret

_allshl ENDP

        end
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\intel\llshr.asm ===
title   llshr - long shift right
;***
;llshr.asm - long shift right
;
;       Copyright (c) Microsoft Corporation. All rights reserved.
;
;Purpose:
;       define signed long shift right routine
;           __allshr
;
;*******************************************************************************


.xlist
include cruntime.inc
include mm.inc
.list

;***
;llshr - long shift right
;
;Purpose:
;       Does a signed Long Shift Right
;       Shifts a long right any number of bits.
;
;Entry:
;       EDX:EAX - long value to be shifted
;       CL    - number of bits to shift by
;
;Exit:
;       EDX:EAX - shifted value
;
;Uses:
;       CL is destroyed.
;
;Exceptions:
;
;*******************************************************************************

        CODESEG

_allshr PROC NEAR

;
; Handle shifts of 64 bits or more (if shifting 64 bits or more, the result
; depends only on the high order bit of edx).
;
        cmp     cl,64
        jae     short RETSIGN

;
; Handle shifts of between 0 and 31 bits
;
        cmp     cl, 32
        jae     short MORE32
        shrd    eax,edx,cl
        sar     edx,cl
        ret

;
; Handle shifts of between 32 and 63 bits
;
MORE32:
        mov     eax,edx
        sar     edx,31
        and     cl,31
        sar     eax,cl
        ret

;
; Return double precision 0 or -1, depending on the sign of edx
;
RETSIGN:
        sar     edx,31
        mov     eax,edx
        ret

_allshr ENDP

        end
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\intel\memccpy.asm ===
page    ,132
        title   memccpy - copy bytes until character found
;***
;memccpy.asm - copy bytes until a character is found
;
;       Copyright (c) Microsoft Corporation. All rights reserved.
;
;Purpose:
;       defines _memccpy() - copies bytes until a specifed character
;       is found, or a maximum number of characters have been copied.
;
;*******************************************************************************

        .xlist
        include cruntime.inc
        .list

page
;***
;char *_memccpy(dest, src, _c, count) - copy bytes until character found
;
;Purpose:
;       Copies bytes from src to dest until count bytes have been
;       copied, or up to and including the character _c, whichever
;       comes first.
;
;       Algorithm:
;       char *
;       _memccpy (dest, src, _c, count)
;             char *dest, *src, _c;
;             unsigned int count;
;             {
;             while (count && (*dest++ = *src++) != _c)
;                     count--;
;
;             return(count ? dest : NULL);
;             }
;
;Entry:
;       char *dest - pointer to memory to receive copy
;       char *src - source of bytes
;       char _c - character to stop copy at
;       int count - max number of bytes to copy
;
;Exit:
;       returns pointer to byte immediately after _c in dest;
;       returns NULL if _c was never found
;
;Uses:
;
;Exceptions:
;
;*******************************************************************************

        CODESEG

        public  _memccpy
_memccpy proc \
        dest:ptr byte, \
        src:ptr byte, \
        _c:byte, \
        count:DWORD

        OPTION PROLOGUE:NONE, EPILOGUE:NONE

        .FPO    ( 0, 4, 0, 0, 0, 0 )

        mov     ecx,[esp + 10h] ; ecx = max byte count
        push    ebx             ; save ebx

        test    ecx,ecx         ; if it's nothing to move
        jz      ret_zero_len    ; restore ebx, and return NULL

        mov     bh,[esp + 10h]  ; bh = byte to look for
        push    esi             ; save esi

        test    ecx,1           ; test if counter is odd or even

        mov     eax,[esp + 0ch] ; eax = dest   , don't affect flags
        mov     esi,[esp + 10h] ; esi = source , don't affect flags

;       nop
        jz      lupe2           ; if counter is even, do double loop
                                ; else do one iteration, and drop into double loop
        mov     bl,[esi]        ; get first byte into bl
        add     esi,1           ; kick src (esi points to src)

        mov     [eax],bl        ; store it in dest
        add     eax,1           ; kick dest

        cmp     bl,bh           ; see if we just moved the byte
        je      short toend

        sub     ecx,1           ; decrement counter
        jz      retnull         ; drop into double loop if nonzero

lupe2:
        mov     bl,[esi]        ; get first byte into bl
        add     esi,2           ; kick esi (src)

        cmp     bl,bh           ; check if we just moved the byte (from bl)
        je      toend_mov_inc   ; store bl & exit

        mov     [eax],bl        ; store first byte from bl
        mov     bl,[esi - 1]    ; get second byte  into bl

        mov     [eax + 1],bl    ; store second byte from bl
        add     eax,2           ; kick eax (dest)

        cmp     bl,bh           ; see if we just moved the byte
        je      short toend     ; end of string

        sub     ecx,2           ; modify counter, and if nonzero continue
        jnz     lupe2           ; else drop out & return NULL

retnull:
        pop     esi
ret_zero_len:
        xor     eax,eax         ; null pointer
        pop     ebx

        ret                     ; _cdecl return

toend_mov_inc:
        mov     [eax],bl        ; store first byte from bl
        add     eax,1           ; eax points right after the value

toend:  pop     esi
        pop     ebx

        ret                     ; _cdecl return

_memccpy endp

        end
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\intel\memmove.asm ===
;***
;memmove.asm -
;
;       Copyright (c) Microsoft Corporation.  All rights reserved.
;
;Purpose:
;       memmove() copies a source memory buffer to a destination buffer.
;       Overlapping buffers are treated specially, to avoid propogation.
;
;       NOTE:  This stub module scheme is compatible with NT build
;       procedure.
;
;*******************************************************************************

MEM_MOVE EQU 1
INCLUDE Intel\MEMCPY.ASM
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\intel\memset.asm ===
page    ,132
        title   memset - set sections of memory all to one byte
;***
;memset.asm - set a section of memory to all one byte
;
;       Copyright (c) Microsoft Corporation. All rights reserved.
;
;Purpose:
;       contains the memset() routine
;
;*******************************************************************************

        .xlist
        include cruntime.inc
        .list

page
;***
;char *memset(dst, value, count) - sets "count" bytes at "dst" to "value"
;
;Purpose:
;       Sets the first "count" bytes of the memory starting
;       at "dst" to the character value "value".
;
;       Algorithm:
;       char *
;       memset (dst, value, count)
;               char *dst;
;               char value;
;               unsigned int count;
;               {
;               char *start = dst;
;
;               while (count--)
;                       *dst++ = value;
;               return(start);
;               }
;
;Entry:
;       char *dst - pointer to memory to fill with value
;       char value - value to put in dst bytes
;       int count - number of bytes of dst to fill
;
;Exit:
;       returns dst, with filled bytes
;
;Uses:
;
;Exceptions:
;
;*******************************************************************************

        CODESEG

    extrn   _VEC_memzero:near
    extrn   __sse2_available:dword

        public  memset
memset proc \
        dst:ptr byte, \
        value:byte, \
        count:dword

        OPTION PROLOGUE:NONE, EPILOGUE:NONE

        .FPO    ( 0, 3, 0, 0, 0, 0 )

        mov     edx,[esp + 0ch] ; edx = "count"
        mov     ecx,[esp + 4]   ; ecx points to "dst"

        test    edx,edx         ; 0?
        jz      short toend     ; if so, nothing to do

        xor     eax,eax
        mov     al,[esp + 8]    ; the byte "value" to be stored

; Special case large block zeroing using SSE2 support
    test    al,al ; memset using zero initializer?
    jne     dword_align
    cmp     edx,0100h ; block size exceeds size threshold?
    jb      dword_align
    cmp     DWORD PTR __sse2_available,0 ; SSE2 supported?
    je      dword_align

    jmp     _VEC_memzero ; use fast zero SSE2 implementation
    ; no return

; Align address on dword boundary
dword_align:

        push    edi             ; preserve edi
        mov     edi,ecx         ; edi = dest pointer

        cmp     edx,4           ; if it's less then 4 bytes
        jb      tail            ; tail needs edi and edx to be initialized

        neg     ecx
        and     ecx,3           ; ecx = # bytes before dword boundary
        jz      short dwords    ; jump if address already aligned

        sub     edx,ecx         ; edx = adjusted count (for later)
adjust_loop:
        mov     [edi],al
        add     edi,1
        sub     ecx,1
        jnz     adjust_loop

dwords:
; set all 4 bytes of eax to [value]
        mov     ecx,eax         ; ecx=0/0/0/value
        shl     eax,8           ; eax=0/0/value/0

        add     eax,ecx         ; eax=0/0val/val

        mov     ecx,eax         ; ecx=0/0/val/val

        shl     eax,10h         ; eax=val/val/0/0

        add     eax,ecx         ; eax = all 4 bytes = [value]

; Set dword-sized blocks
        mov     ecx,edx         ; move original count to ecx
        and     edx,3           ; prepare in edx byte count (for tail loop)
        shr     ecx,2           ; adjust ecx to be dword count
        jz      tail            ; jump if it was less then 4 bytes

        rep     stosd
main_loop_tail:
        test    edx,edx         ; if there is no tail bytes,
        jz      finish          ; we finish, and it's time to leave
; Set remaining bytes

tail:
        mov     [edi],al        ; set remaining bytes
        add     edi,1

        sub     edx,1           ; if there is some more bytes
        jnz     tail            ; continue to fill them

; Done
finish:
        mov     eax,[esp + 8]   ; return dest pointer
        pop     edi             ; restore edi

        ret

toend:
        mov     eax,[esp + 4]   ; return dest pointer

        ret

memset  endp

        end
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\intel\memchr.asm ===
page    ,132
        title   memchr - search memory for a given character
;***
;memchr.asm - search block of memory for a given character
;
;       Copyright (c) Microsoft Corporation. All rights reserved.
;
;Purpose:
;       defines memchr() - search memory until a character is
;       found or a limit is reached.
;
;*******************************************************************************

        .xlist
        include cruntime.inc
        .list

page
;***
;char *memchr(buf, chr, cnt) - search memory for given character.
;
;Purpose:
;       Searched at buf for the given character, stopping when chr is
;       first found or cnt bytes have been searched through.
;
;       Algorithm:
;       char *
;       memchr (buf, chr, cnt)
;               char *buf;
;               int chr;
;               unsigned cnt;
;       {
;               while (cnt && *buf++ != c)
;                       cnt--;
;               return(cnt ? --buf : NULL);
;       }
;
;Entry:
;       char *buf - memory buffer to be searched
;       char chr - character to search for
;       unsigned cnt - max number of bytes to search
;
;Exit:
;       returns pointer to first occurence of chr in buf
;       returns NULL if chr not found in the first cnt bytes
;
;Uses:
;
;Exceptions:
;
;*******************************************************************************

        CODESEG

        public  memchr
memchr  proc \
        buf:ptr byte, \
        chr:byte, \
        cnt:dword

        OPTION PROLOGUE:NONE, EPILOGUE:NONE

        .FPO    ( 0, 1, 0, 0, 0, 0 )

        mov     eax,[esp+0ch]   ; eax = count
        push    ebx             ; Preserve ebx

        test    eax,eax         ; check if count=0
        jz      short retnull   ; if count=0, leave

        mov     edx,[esp+8]     ; edx = buffer
        xor     ebx,ebx

        mov     bl,[esp+0ch]    ; bl = search char

        test    edx,3           ; test if string is aligned on 32 bits
        jz      short main_loop_start

str_misaligned:                 ; simple byte loop until string is aligned
        mov     cl,byte ptr [edx]
        add     edx,1
        xor     cl,bl
        je      short found
        sub     eax,1           ; counter--
        jz      short retnull
        test    edx,3           ; already aligned ?
        jne     short str_misaligned

main_loop_start:
        sub     eax,4
        jb      short tail_less_then_4

; set all 4 bytes of ebx to [value]
        push    edi             ; Preserve edi
        mov     edi,ebx         ; edi=0/0/0/char
        shl     ebx,8           ; ebx=0/0/char/0
        add     ebx,edi         ; ebx=0/0/char/char
        mov     edi,ebx         ; edi=0/0/char/char
        shl     ebx,10h         ; ebx=char/char/0/0
        add     ebx,edi         ; ebx = all 4 bytes = [search char]
        jmp     short main_loop_entry   ; ecx >=0

return_from_main:
        pop     edi

tail_less_then_4:
        add     eax,4
        jz      retnull

tail_loop:                      ; 0 < eax < 4
        mov     cl,byte ptr [edx]
        add     edx,1
        xor     cl,bl
        je      short found
        sub     eax,1
        jnz     short tail_loop
retnull:
        pop     ebx
        ret                     ; _cdecl return

main_loop:
        sub     eax,4
        jb      short return_from_main
main_loop_entry:
        mov     ecx,dword ptr [edx]     ; read 4 bytes

        xor     ecx,ebx         ; ebx is byte\byte\byte\byte
        mov     edi,7efefeffh

        add     edi,ecx
        xor     ecx,-1

        xor     ecx,edi
        add     edx,4

        and     ecx,81010100h
        je      short main_loop

; found zero byte in the loop?
char_is_found:
        mov     ecx,[edx - 4]
        xor     cl,bl           ; is it byte 0
        je      short byte_0
        xor     ch,bl           ; is it byte 1
        je      short byte_1
        shr     ecx,10h         ; is it byte 2
        xor     cl,bl
        je      short byte_2
        xor     ch,bl           ; is it byte 3
        je      short byte_3
        jmp     short main_loop ; taken if bits 24-30 are clear and bit
                                ; 31 is set

byte_3:
        pop     edi             ; restore edi
found:
        lea     eax,[edx - 1]
        pop     ebx             ; restore ebx
        ret                     ; _cdecl return

byte_2:
        lea     eax,[edx - 2]
        pop     edi
        pop     ebx
        ret                     ; _cdecl return

byte_1:
        lea     eax,[edx - 3]
        pop     edi
        pop     ebx
        ret                     ; _cdecl return

byte_0:
        lea     eax,[edx - 4]
        pop     edi             ; restore edi
        pop     ebx             ; restore ebx
        ret                     ; _cdecl return

memchr  endp
        end
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\intel\fp8.c ===
/***
* fp8.c - Set default FP precision to 53 bits (8-byte double)
*
*       Copyright (c) Microsoft Corporation.  All rights reserved.
*
*Purpose:
*
*******************************************************************************/
#ifdef MRTDLL
#undef MRTDLL
#endif  /* MRTDLL */

#include <stddef.h>
#include <float.h>
#include <internal.h>

#ifdef __cplusplus
extern "C"
#endif  /* __cplusplus */
void  __CLRCALL_OR_CDECL _setdefaultprecision(void);

/*
 * Routine to set default FP precision to 53 bits.
 */

#ifdef __cplusplus
extern "C"
#endif  /* __cplusplus */
void __CLRCALL_OR_CDECL _setdefaultprecision()
{
        _ERRCHECK(_controlfp_s(NULL, _PC_53, _MCW_PC));
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\intel\lldvrm.asm ===
title   lldvrm - signed long divide and remainder routine
;***
;lldvrm.asm - signed long divide and remainder routine
;
;       Copyright (c) Microsoft Corporation. All rights reserved.
;
;Purpose:
;       defines the signed long divide and remainder routine
;           __alldvrm
;
;*******************************************************************************


.xlist
include cruntime.inc
include mm.inc
.list

;***
;lldvrm - signed long divide and remainder
;
;Purpose:
;       Does a signed long divide and remainder of the arguments.  Arguments are
;       not changed.
;
;Entry:
;       Arguments are passed on the stack:
;               1st pushed: divisor (QWORD)
;               2nd pushed: dividend (QWORD)
;
;Exit:
;       EDX:EAX contains the quotient (dividend/divisor)
;       EBX:ECX contains the remainder (divided % divisor)
;       NOTE: this routine removes the parameters from the stack.
;
;Uses:
;       ECX
;
;Exceptions:
;
;*******************************************************************************

        CODESEG

_alldvrm PROC NEAR

        push    edi
        push    esi
        push    ebp

; Set up the local stack and save the index registers.  When this is done
; the stack frame will look as follows (assuming that the expression a/b will
; generate a call to alldvrm(a, b)):
;
;               -----------------
;               |               |
;               |---------------|
;               |               |
;               |--divisor (b)--|
;               |               |
;               |---------------|
;               |               |
;               |--dividend (a)-|
;               |               |
;               |---------------|
;               | return addr** |
;               |---------------|
;               |      EDI      |
;               |---------------|
;               |      ESI      |
;               |---------------|
;       ESP---->|      EBP      |
;               -----------------
;

DVND    equ     [esp + 16]      ; stack address of dividend (a)
DVSR    equ     [esp + 24]      ; stack address of divisor (b)


; Determine sign of the quotient (edi = 0 if result is positive, non-zero
; otherwise) and make operands positive.
; Sign of the remainder is kept in ebp.

        xor     edi,edi         ; result sign assumed positive
        xor     ebp,ebp         ; result sign assumed positive

        mov     eax,HIWORD(DVND) ; hi word of a
        or      eax,eax         ; test to see if signed
        jge     short L1        ; skip rest if a is already positive
        inc     edi             ; complement result sign flag
        inc     ebp             ; complement result sign flag
        mov     edx,LOWORD(DVND) ; lo word of a
        neg     eax             ; make a positive
        neg     edx
        sbb     eax,0
        mov     HIWORD(DVND),eax ; save positive value
        mov     LOWORD(DVND),edx
L1:
        mov     eax,HIWORD(DVSR) ; hi word of b
        or      eax,eax         ; test to see if signed
        jge     short L2        ; skip rest if b is already positive
        inc     edi             ; complement the result sign flag
        mov     edx,LOWORD(DVSR) ; lo word of a
        neg     eax             ; make b positive
        neg     edx
        sbb     eax,0
        mov     HIWORD(DVSR),eax ; save positive value
        mov     LOWORD(DVSR),edx
L2:

;
; Now do the divide.  First look to see if the divisor is less than 4194304K.
; If so, then we can use a simple algorithm with word divides, otherwise
; things get a little more complex.
;
; NOTE - eax currently contains the high order word of DVSR
;

        or      eax,eax         ; check to see if divisor < 4194304K
        jnz     short L3        ; nope, gotta do this the hard way
        mov     ecx,LOWORD(DVSR) ; load divisor
        mov     eax,HIWORD(DVND) ; load high word of dividend
        xor     edx,edx
        div     ecx             ; eax <- high order bits of quotient
        mov     ebx,eax         ; save high bits of quotient
        mov     eax,LOWORD(DVND) ; edx:eax <- remainder:lo word of dividend
        div     ecx             ; eax <- low order bits of quotient
        mov     esi,eax         ; ebx:esi <- quotient
;
; Now we need to do a multiply so that we can compute the remainder.
;
        mov     eax,ebx         ; set up high word of quotient
        mul     dword ptr LOWORD(DVSR) ; HIWORD(QUOT) * DVSR
        mov     ecx,eax         ; save the result in ecx
        mov     eax,esi         ; set up low word of quotient
        mul     dword ptr LOWORD(DVSR) ; LOWORD(QUOT) * DVSR
        add     edx,ecx         ; EDX:EAX = QUOT * DVSR
        jmp     short L4        ; complete remainder calculation

;
; Here we do it the hard way.  Remember, eax contains the high word of DVSR
;

L3:
        mov     ebx,eax         ; ebx:ecx <- divisor
        mov     ecx,LOWORD(DVSR)
        mov     edx,HIWORD(DVND) ; edx:eax <- dividend
        mov     eax,LOWORD(DVND)
L5:
        shr     ebx,1           ; shift divisor right one bit
        rcr     ecx,1
        shr     edx,1           ; shift dividend right one bit
        rcr     eax,1
        or      ebx,ebx
        jnz     short L5        ; loop until divisor < 4194304K
        div     ecx             ; now divide, ignore remainder
        mov     esi,eax         ; save quotient

;
; We may be off by one, so to check, we will multiply the quotient
; by the divisor and check the result against the orignal dividend
; Note that we must also check for overflow, which can occur if the
; dividend is close to 2**64 and the quotient is off by 1.
;

        mul     dword ptr HIWORD(DVSR) ; QUOT * HIWORD(DVSR)
        mov     ecx,eax
        mov     eax,LOWORD(DVSR)
        mul     esi             ; QUOT * LOWORD(DVSR)
        add     edx,ecx         ; EDX:EAX = QUOT * DVSR
        jc      short L6        ; carry means Quotient is off by 1

;
; do long compare here between original dividend and the result of the
; multiply in edx:eax.  If original is larger or equal, we are ok, otherwise
; subtract one (1) from the quotient.
;

        cmp     edx,HIWORD(DVND) ; compare hi words of result and original
        ja      short L6        ; if result > original, do subtract
        jb      short L7        ; if result < original, we are ok
        cmp     eax,LOWORD(DVND) ; hi words are equal, compare lo words
        jbe     short L7        ; if less or equal we are ok, else subtract
L6:
        dec     esi             ; subtract 1 from quotient
        sub     eax,LOWORD(DVSR) ; subtract divisor from result
        sbb     edx,HIWORD(DVSR)
L7:
        xor     ebx,ebx         ; ebx:esi <- quotient

L4:
;
; Calculate remainder by subtracting the result from the original dividend.
; Since the result is already in a register, we will do the subtract in the
; opposite direction and negate the result if necessary.
;

        sub     eax,LOWORD(DVND) ; subtract dividend from result
        sbb     edx,HIWORD(DVND)

;
; Now check the result sign flag to see if the result is supposed to be positive
; or negative.  It is currently negated (because we subtracted in the 'wrong'
; direction), so if the sign flag is set we are done, otherwise we must negate
; the result to make it positive again.
;

        dec     ebp             ; check result sign flag
        jns     short L9        ; result is ok, set up the quotient
        neg     edx             ; otherwise, negate the result
        neg     eax
        sbb     edx,0

;
; Now we need to get the quotient into edx:eax and the remainder into ebx:ecx.
;
L9:
        mov     ecx,edx
        mov     edx,ebx
        mov     ebx,ecx
        mov     ecx,eax
        mov     eax,esi

;
; Just the cleanup left to do.  edx:eax contains the quotient.  Set the sign
; according to the save value, cleanup the stack, and return.
;

        dec     edi             ; check to see if result is negative
        jnz     short L8        ; if EDI == 0, result should be negative
        neg     edx             ; otherwise, negate the result
        neg     eax
        sbb     edx,0

;
; Restore the saved registers and return.
;

L8:
        pop     ebp
        pop     esi
        pop     edi

        ret     16

_alldvrm ENDP

end
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\intel\chkstk.asm ===
page    ,132
        title   chkstk - C stack checking routine
;***
;chkstk.asm - C stack checking routine
;
;       Copyright (c) Microsoft Corporation. All rights reserved.
;
;Purpose:
;       Provides support for automatic stack checking in C procedures
;       when stack checking is enabled.
;
;*******************************************************************************

.xlist
        include cruntime.inc
.list

; size of a page of memory

_PAGESIZE_      equ     1000h


        CODESEG

page
;***
;_chkstk - check stack upon procedure entry
;
;Purpose:
;       Provide stack checking on procedure entry. Method is to simply probe
;       each page of memory required for the stack in descending order. This
;       causes the necessary pages of memory to be allocated via the guard
;       page scheme, if possible. In the event of failure, the OS raises the
;       _XCPT_UNABLE_TO_GROW_STACK exception.
;
;       NOTE:  Currently, the (EAX < _PAGESIZE_) code path falls through
;       to the "lastpage" label of the (EAX >= _PAGESIZE_) code path.  This
;       is small; a minor speed optimization would be to special case
;       this up top.  This would avoid the painful save/restore of
;       ecx and would shorten the code path by 4-6 instructions.
;
;Entry:
;       EAX = size of local frame
;
;Exit:
;       ESP = new stackframe, if successful
;
;Uses:
;       EAX
;
;Exceptions:
;       _XCPT_GUARD_PAGE_VIOLATION - May be raised on a page probe. NEVER TRAP
;                                    THIS!!!! It is used by the OS to grow the
;                                    stack on demand.
;       _XCPT_UNABLE_TO_GROW_STACK - The stack cannot be grown. More precisely,
;                                    the attempt by the OS memory manager to
;                                    allocate another guard page in response
;                                    to a _XCPT_GUARD_PAGE_VIOLATION has
;                                    failed.
;
;*******************************************************************************

public  _alloca_probe

_chkstk proc

_alloca_probe    =  _chkstk

        push    ecx

; Calculate new TOS.

        lea     ecx, [esp] + 8 - 4      ; TOS before entering function + size for ret value
        sub     ecx, eax                ; new TOS

; Handle allocation size that results in wraparound.
; Wraparound will result in StackOverflow exception.

        sbb     eax, eax                ; 0 if CF==0, ~0 if CF==1
        not     eax                     ; ~0 if TOS did not wrapped around, 0 otherwise
        and     ecx, eax                ; set to 0 if wraparound

        mov     eax, esp                ; current TOS
        and     eax, not ( _PAGESIZE_ - 1) ; Round down to current page boundary

cs10:
        cmp     ecx, eax                ; Is new TOS
        jb      short cs20              ; in probed page?
        mov     eax, ecx                ; yes.
        pop     ecx
        xchg    esp, eax                ; update esp
        mov     eax, dword ptr [eax]    ; get return address
        mov     dword ptr [esp], eax    ; and put it at new TOS
        ret

; Find next lower page and probe
cs20:
        sub     eax, _PAGESIZE_         ; decrease by PAGESIZE
        test    dword ptr [eax],eax     ; probe page.
        jmp     short cs10

_chkstk endp

        end
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\intel\outp.asm ===
page    ,132
        title   outp - output from ports
;***
;outp.asm - _outp, _outpw and _outpd routines
;
;       Copyright (c) Microsoft Corporation. All rights reserved.
;
;Purpose:
;       Defines the write-to-a-port functions: _outp(), _outpw() and outpd().
;
;*******************************************************************************

        .xlist
        include cruntime.inc
        .list


page
;***
;int            _outp(port, databyte)   - write byte from port
;unsigned short _outpw(port, dataword)  - write word from port
;unsigned long  _outpd(port, datadword) - write dword from port
;
;Purpose:
;       Write single byte/word/dword to the specified port.
;
;Entry:
;       unsigned short port - port to write to
;
;Exit:
;       returns value written.
;
;Uses:
;       EAX, EDX
;
;Exceptions:
;
;*******************************************************************************

        CODESEG

        public _outp, _outpw, _outpd

_outp   proc

        xor     eax,eax
        mov     dx,word ptr [esp + 4]
        mov     al,byte ptr [esp + 8]
        out     dx,al
        ret

_outp   endp


_outpw  proc

        mov     dx,word ptr [esp + 4]
        mov     ax,word ptr [esp + 8]
        out     dx,ax
        ret

_outpw  endp


_outpd  proc

        mov     dx,word ptr [esp + 4]
        mov     eax,[esp + 8]
        out     dx,eax
        ret

_outpd  endp

        end
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\intel\secchk.c ===
/***
*secchk.c - checks buffer overrun security cookie for x86
*
*       Copyright (c) Microsoft Corporation.  All rights reserved.
*
*Purpose:
*       Defines compiler helper __security_check_cookie, used by the /GS
*       compile switch to detect local buffer variable overrun bugs/attacks.
*
*       When compiling /GS, the compiler injects code to detect when a local
*       array variable has been overwritten, potentially overwriting the
*       return address (on machines like x86 where the return address is on
*       the stack).  A local variable is allocated directly before the return
*       address and initialized on entering the function.  When exiting the
*       function, the compiler inserts code to verify that the local variable
*       has not been modified.  If it has, then an error reporting routine
*       is called.
*
*******************************************************************************/

#include <windows.h>
#include <process.h>

/*
 * The global security cookie.  This name is known to the compiler.
 */
extern UINT_PTR __security_cookie;

/***
*__security_check_cookie(cookie) - check for buffer overrun
*
*Purpose:
*       Compiler helper.  Check if a local copy of the security cookie still
*       matches the global value.  If not, then report the fatal error.
*
*       The actual reporting is done by __report_gsfailure
*       since the cookie check routine must be minimal code that preserves
*       any registers used in returning the callee's result.
*
*Entry:
*       UINT_PTR cookie - local security cookie to check
*
*Exit:
*       Returns immediately if the local cookie matches the global version.
*       Otherwise, calls the failure reporting handler and exits.
*
*Exceptions:
*
*******************************************************************************/

void __declspec(naked) __fastcall __security_check_cookie(UINT_PTR cookie)
{
    /* x86 version written in asm to preserve all regs */
    __asm {
        cmp ecx, __security_cookie
        jne failure
        rep ret /* REP to avoid AMD branch prediction penalty */
failure:
        jmp __report_gsfailure
    }
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\intel\strchr.asm ===
page    ,132
        title   strchr - search string for given character
;***
;strchr.asm - search a string for a given character
;
;       Copyright (c) Microsoft Corporation. All rights reserved.
;
;Purpose:
;       defines strchr() - search a string for a character
;
;*******************************************************************************

        .xlist
        include cruntime.inc
        .list

page
;***
;char *strchr(string, chr) - search a string for a character
;
;Purpose:
;       Searches a string for a given character, which may be the
;       null character '\0'.
;
;       Algorithm:
;       char *
;       strchr (string, chr)
;       char *string, chr;
;       {
;         while (*string && *string != chr)
;             string++;
;         if (*string == chr)
;             return(string);
;         return((char *)0);
;       }
;
;Entry:
;       char *string - string to search in
;       char chr     - character to search for
;
;Exit:
;       returns pointer to the first occurence of c in string
;       returns NULL if chr does not occur in string
;
;Uses:
;
;Exceptions:
;
;*******************************************************************************

        CODESEG

found_bx:
        lea     eax,[edx - 1]
        pop     ebx                 ; restore ebx
        ret                         ; _cdecl return

        align   16
        public  strchr, __from_strstr_to_strchr
strchr  proc \
        string:ptr byte, \
        chr:byte

        OPTION PROLOGUE:NONE, EPILOGUE:NONE

        .FPO    ( 0, 2, 0, 0, 0, 0 )

        xor     eax,eax
        mov     al,[esp + 8]        ; al = chr (search char)

__from_strstr_to_strchr label proc

        push    ebx                 ; PRESERVE EBX
        mov     ebx,eax             ; ebx = 0/0/0/chr
        shl     eax,8               ; eax = 0/0/chr/0
        mov     edx,[esp + 8]       ; edx = buffer
        test    edx,3               ; test if string is aligned on 32 bits
        jz      short main_loop_start

str_misaligned:                     ; simple byte loop until string is aligned
        mov     cl,[edx]
        add     edx,1
        cmp     cl,bl
        je      short found_bx
        test    cl,cl
        jz      short retnull_bx
        test    edx,3               ; now aligned ?
        jne     short str_misaligned

main_loop_start:                    ; set all 4 bytes of ebx to [chr]
        or      ebx,eax             ; ebx = 0/0/chr/chr
        push    edi                 ; PRESERVE EDI
        mov     eax,ebx             ; eax = 0/0/chr/chr
        shl     ebx,10h             ; ebx = chr/chr/0/0
        push    esi                 ; PRESERVE ESI
        or      ebx,eax             ; ebx = all 4 bytes = [chr]

; in the main loop (below), we are looking for chr or for EOS (end of string)

main_loop:
        mov     ecx,[edx]           ; read  dword (4 bytes)
        mov     edi,7efefeffh       ; work with edi & ecx for looking for chr

        mov     eax,ecx             ; eax = dword
        mov     esi,edi             ; work with esi & eax for looking for EOS

        xor     ecx,ebx             ; eax = dword xor chr/chr/chr/chr
        add     esi,eax

        add     edi,ecx
        xor     ecx,-1

        xor     eax,-1
        xor     ecx,edi

        xor     eax,esi
        add     edx,4

        and     ecx,81010100h       ; test for chr
        jnz     short chr_is_found  ; chr probably has been found

        ; chr was not found, check for EOS

        and     eax,81010100h       ; is any flag set ??
        jz      short main_loop     ; EOS was not found, go get another dword

        and     eax,01010100h       ; is it in high byte?
        jnz     short retnull       ; no, definitely found EOS, return failure

        and     esi,80000000h       ; check was high byte 0 or 80h
        jnz     short main_loop     ; it just was 80h in high byte, go get
                                    ; another dword
retnull:
        pop     esi
        pop     edi
retnull_bx:
        pop     ebx
        xor     eax,eax
        ret                         ; _cdecl return

chr_is_found:
        mov     eax,[edx - 4]       ; let's look one more time on this dword
        cmp     al,bl               ; is chr in byte 0?
        je      short byte_0
        test    al,al               ; test if low byte is 0
        je      retnull
        cmp     ah,bl               ; is it byte 1
        je      short byte_1
        test    ah,ah               ; found EOS ?
        je      retnull
        shr     eax,10h             ; is it byte 2
        cmp     al,bl
        je      short byte_2
        test    al,al               ; if in al some bits were set, bl!=bh
        je      retnull
        cmp     ah,bl
        je      short byte_3
        test    ah,ah
        jz      retnull
        jmp     short main_loop     ; neither chr nor EOS found, go get
                                    ; another dword
byte_3:
        pop     esi
        pop     edi
        lea     eax,[edx - 1]
        pop     ebx                 ; restore ebx
        ret                         ; _cdecl return

byte_2:
        lea     eax,[edx - 2]
        pop     esi
        pop     edi
        pop     ebx
        ret                         ; _cdecl return

byte_1:
        lea     eax,[edx - 3]
        pop     esi
        pop     edi
        pop     ebx
        ret                         ; _cdecl return

byte_0:
        lea     eax,[edx - 4]
        pop     esi                 ; restore esi
        pop     edi                 ; restore edi
        pop     ebx                 ; restore ebx
        ret                         ; _cdecl return

strchr  endp
        end
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\intel\strcmp.asm ===
page    ,132
        title   strcmp.asm - compare two strings
;***
;strcmp.asm - routine to compare two strings (for equal, less, or greater)
;
;       Copyright (c) Microsoft Corporation. All rights reserved.
;
;Purpose:
;       STRCMP compares two strings and returns an integer
;       to indicate whether the first is less than the second, the two are
;       equal, or whether the first is greater than the second, respectively.
;       Comparison is done byte by byte on an UNSIGNED basis, which is to
;       say that Null (0) is less than any other character (1-255).
;
;*******************************************************************************

        .xlist
        include cruntime.inc
        .list

page
;***
;strcmp - compare two strings, returning less than, equal to, or greater than
;
;Purpose:
;       Compares two string, determining their lexical order.  Unsigned
;       comparison is used.
;
;       Algorithm:
;          int strcmp ( src , dst )
;                  unsigned char *src;
;                  unsigned char *dst;
;          {
;                  int ret = 0 ;
;
;                  while( ! (ret = *src - *dst) && *dst)
;                          ++src, ++dst;
;
;                  if ( ret < 0 )
;                          ret = -1 ;
;                  else if ( ret > 0 )
;                          ret = 1 ;
;
;                  return( ret );
;          }
;
;Entry:
;       const char * src - string for left-hand side of comparison
;       const char * dst - string for right-hand side of comparison
;
;Exit:
;       AX < 0, 0, or >0, indicating whether the first string is
;       Less than, Equal to, or Greater than the second string.
;
;Uses:
;       CX, DX
;
;Exceptions:
;
;*******************************************************************************

        CODESEG

        public  strcmp
strcmp  proc \
        str1:ptr byte, \
        str2:ptr byte

        OPTION PROLOGUE:NONE, EPILOGUE:NONE

        .FPO    ( 0, 2, 0, 0, 0, 0 )

        mov     edx,[esp + 4]   ; edx = src
        mov     ecx,[esp + 8]   ; ecx = dst

        test    edx,3
        jnz     short dopartial

        align   4
dodwords:
        mov     eax,[edx]

        cmp     al,[ecx]
        jne     short donene
        or      al,al
        jz      short doneeq
        cmp     ah,[ecx + 1]
        jne     short donene
        or      ah,ah
        jz      short doneeq

        shr     eax,16

        cmp     al,[ecx + 2]
        jne     short donene
        or      al,al
        jz      short doneeq
        cmp     ah,[ecx + 3]
        jne     short donene
        add     ecx,4
        add     edx,4
        or      ah,ah
        jnz     short dodwords

        align   4
doneeq:
        xor     eax,eax
        ret

        align   4
donene:
        ; The instructions below should place -1 in eax if src < dst,
        ; and 1 in eax if src > dst.

        sbb     eax,eax
        sal     eax,1
        add     eax,1
        ret

        align   4
dopartial:
        test    edx,1
        jz      short doword

        mov     al,[edx]
        add     edx,1
        cmp     al,[ecx]
        jne     short donene
        add     ecx,1
        or      al,al
        jz      short doneeq

        test    edx,2
        jz      short dodwords


        align   4
doword:
        mov     ax,[edx]
        add     edx,2
        cmp     al,[ecx]
        jne     short donene
        or      al,al
        jz      short doneeq
        cmp     ah,[ecx + 1]
        jne     short donene
        or      ah,ah
        jz      short doneeq
        add     ecx,2
        jmp     short dodwords

strcmp  endp

        end
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\intel\strcspn.asm ===
;***
;strcspn.asm -
;
;       Copyright (c) Microsoft Corporation.  All rights reserved.
;
;Purpose:
;       defines strcspn()- finds the length of the initial substring of
;       a string consisting entirely of characters not in a control string.
;
;       NOTE:  This stub module scheme is compatible with NT build
;       procedure.
;
;*******************************************************************************

SSTRCSPN EQU 1
INCLUDE Intel\STRSPN.ASM
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\intel\memcpy.asm ===
page    ,132
        title   memcpy - Copy source memory bytes to destination
;***
;memcpy.asm - contains memcpy and memmove routines
;
;       Copyright (c) Microsoft Corporation. All rights reserved.
;
;Purpose:
;       memcpy() copies a source memory buffer to a destination buffer.
;       Overlapping buffers are not treated specially, so propogation may occur.
;       memmove() copies a source memory buffer to a destination buffer.
;       Overlapping buffers are treated specially, to avoid propogation.
;
;*******************************************************************************

        .xlist
        include cruntime.inc
        .list

M_EXIT  macro
        ret                     ; _cdecl return
        endm    ; M_EXIT

        CODESEG
    extrn   _VEC_memcpy:near
    extrn   __sse2_available:dword

page
;***
;memcpy - Copy source buffer to destination buffer
;
;Purpose:
;       memcpy() copies a source memory buffer to a destination memory buffer.
;       This routine does NOT recognize overlapping buffers, and thus can lead
;       to propogation.
;       For cases where propogation must be avoided, memmove() must be used.
;
;       Algorithm:
;
;           Same as memmove. See Below
;
;
;memmove - Copy source buffer to destination buffer
;
;Purpose:
;       memmove() copies a source memory buffer to a destination memory buffer.
;       This routine recognize overlapping buffers to avoid propogation.
;       For cases where propogation is not a problem, memcpy() can be used.
;
;   Algorithm:
;
;       void * memmove(void * dst, void * src, size_t count)
;       {
;               void * ret = dst;
;
;               if (dst <= src || dst >= (src + count)) {
;                       /*
;                        * Non-Overlapping Buffers
;                        * copy from lower addresses to higher addresses
;                        */
;                       while (count--)
;                               *dst++ = *src++;
;                       }
;               else {
;                       /*
;                        * Overlapping Buffers
;                        * copy from higher addresses to lower addresses
;                        */
;                       dst += count - 1;
;                       src += count - 1;
;
;                       while (count--)
;                               *dst-- = *src--;
;                       }
;
;               return(ret);
;       }
;
;
;Entry:
;       void *dst = pointer to destination buffer
;       const void *src = pointer to source buffer
;       size_t count = number of bytes to copy
;
;Exit:
;       Returns a pointer to the destination buffer in AX/DX:AX
;
;Uses:
;       CX, DX
;
;Exceptions:
;*******************************************************************************

ifdef MEM_MOVE
        _MEM_     equ <memmove>
else  ; MEM_MOVE
        _MEM_     equ <memcpy>
endif  ; MEM_MOVE

%       public  _MEM_
_MEM_   proc \
        dst:ptr byte, \
        src:ptr byte, \
        count:IWORD

              ; destination pointer
              ; source pointer
              ; number of bytes to copy

;       push    ebp             ;U - save old frame pointer
;       mov     ebp, esp        ;V - set new frame pointer

        push    edi             ;U - save edi
        push    esi             ;V - save esi

        mov     esi,[src]       ;U - esi = source
        mov     ecx,[count]     ;V - ecx = number of bytes to move

        mov     edi,[dst]       ;U - edi = dest

;
; Check for overlapping buffers:
;       If (dst <= src) Or (dst >= src + Count) Then
;               Do normal (Upwards) Copy
;       Else
;               Do Downwards Copy to avoid propagation
;

        mov     eax,ecx         ;V - eax = byte count...

        mov     edx,ecx         ;U - edx = byte count...
        add     eax,esi         ;V - eax = point past source end

        cmp     edi,esi         ;U - dst <= src ?
        jbe     short CopyUp    ;V - yes, copy toward higher addresses

        cmp     edi,eax         ;U - dst < (src + count) ?
        jb      CopyDown        ;V - yes, copy toward lower addresses

;
; Copy toward higher addresses.
;
CopyUp:
;
; First, see if we can use a "fast" copy SSE2 routine
        ; block size greater than min threshold?
        cmp     ecx,0100h
        jb      Dword_align
        ; SSE2 supported?
        cmp     DWORD PTR __sse2_available,0
        je      Dword_align
        ; alignments equal?
        push    edi
        push    esi
        and     edi,15
        and     esi,15
        cmp     edi,esi
        pop     esi
        pop     edi
        jne     Dword_align

        ; do fast SSE2 copy, params already on stack
        pop     esi
        pop     edi
        pop     ebp
        jmp     _VEC_memcpy
        ; no return
;
; The algorithm for forward moves is to align the destination to a dword
; boundary and so we can move dwords with an aligned destination.  This
; occurs in 3 steps.
;
;   - move x = ((4 - Dest & 3) & 3) bytes
;   - move y = ((L-x) >> 2) dwords
;   - move (L - x - y*4) bytes
;

Dword_align:
        test    edi,11b         ;U - destination dword aligned?
        jnz     short CopyLeadUp ;V - if we are not dword aligned already, align

        shr     ecx,2           ;U - shift down to dword count
        and     edx,11b         ;V - trailing byte count

        cmp     ecx,8           ;U - test if small enough for unwind copy
        jb      short CopyUnwindUp ;V - if so, then jump

        rep     movsd           ;N - move all of our dwords

        jmp     dword ptr TrailUpVec[edx*4] ;N - process trailing bytes

;
; Code to do optimal memory copies for non-dword-aligned destinations.
;

; The following length check is done for two reasons:
;
;    1. to ensure that the actual move length is greater than any possiale
;       alignment move, and
;
;    2. to skip the multiple move logic for small moves where it would
;       be faster to move the bytes with one instruction.
;

        align   @WordSize
CopyLeadUp:

        mov     eax,edi         ;U - get destination offset
        mov     edx,11b         ;V - prepare for mask

        sub     ecx,4           ;U - check for really short string - sub for adjust
        jb      short ByteCopyUp ;V - branch to just copy bytes

        and     eax,11b         ;U - get offset within first dword
        add     ecx,eax         ;V - update size after leading bytes copied

        jmp     dword ptr LeadUpVec[eax*4-4] ;N - process leading bytes

        align   @WordSize
ByteCopyUp:
        jmp     dword ptr TrailUpVec[ecx*4+16] ;N - process just bytes

        align   @WordSize
CopyUnwindUp:
        jmp     dword ptr UnwindUpVec[ecx*4] ;N - unwind dword copy

        align   @WordSize
LeadUpVec       dd      LeadUp1, LeadUp2, LeadUp3

        align   @WordSize
LeadUp1:
        and     edx,ecx         ;U - trailing byte count
        mov     al,[esi]        ;V - get first byte from source

        mov     [edi],al        ;U - write second byte to destination
        mov     al,[esi+1]      ;V - get second byte from source

        mov     [edi+1],al      ;U - write second byte to destination
        mov     al,[esi+2]      ;V - get third byte from source

        shr     ecx,2           ;U - shift down to dword count
        mov     [edi+2],al      ;V - write third byte to destination

        add     esi,3           ;U - advance source pointer
        add     edi,3           ;V - advance destination pointer

        cmp     ecx,8           ;U - test if small enough for unwind copy
        jb      short CopyUnwindUp ;V - if so, then jump

        rep     movsd           ;N - move all of our dwords

        jmp     dword ptr TrailUpVec[edx*4] ;N - process trailing bytes

        align   @WordSize
LeadUp2:
        and     edx,ecx         ;U - trailing byte count
        mov     al,[esi]        ;V - get first byte from source

        mov     [edi],al        ;U - write second byte to destination
        mov     al,[esi+1]      ;V - get second byte from source

        shr     ecx,2           ;U - shift down to dword count
        mov     [edi+1],al      ;V - write second byte to destination

        add     esi,2           ;U - advance source pointer
        add     edi,2           ;V - advance destination pointer

        cmp     ecx,8           ;U - test if small enough for unwind copy
        jb      short CopyUnwindUp ;V - if so, then jump

        rep     movsd           ;N - move all of our dwords

        jmp     dword ptr TrailUpVec[edx*4] ;N - process trailing bytes

        align   @WordSize
LeadUp3:
        and     edx,ecx         ;U - trailing byte count
        mov     al,[esi]        ;V - get first byte from source

        mov     [edi],al        ;U - write second byte to destination
        add     esi,1           ;V - advance source pointer

        shr     ecx,2           ;U - shift down to dword count
        add     edi,1           ;V - advance destination pointer

        cmp     ecx,8           ;U - test if small enough for unwind copy
        jb      short CopyUnwindUp ;V - if so, then jump

        rep     movsd           ;N - move all of our dwords

        jmp     dword ptr TrailUpVec[edx*4] ;N - process trailing bytes

        align   @WordSize
UnwindUpVec     dd      UnwindUp0, UnwindUp1, UnwindUp2, UnwindUp3
                dd      UnwindUp4, UnwindUp5, UnwindUp6, UnwindUp7

UnwindUp7:
        mov     eax,[esi+ecx*4-28] ;U - get dword from source
                                   ;V - spare
        mov     [edi+ecx*4-28],eax ;U - put dword into destination
UnwindUp6:
        mov     eax,[esi+ecx*4-24] ;U(entry)/V(not) - get dword from source
                                   ;V(entry) - spare
        mov     [edi+ecx*4-24],eax ;U - put dword into destination
UnwindUp5:
        mov     eax,[esi+ecx*4-20] ;U(entry)/V(not) - get dword from source
                                   ;V(entry) - spare
        mov     [edi+ecx*4-20],eax ;U - put dword into destination
UnwindUp4:
        mov     eax,[esi+ecx*4-16] ;U(entry)/V(not) - get dword from source
                                   ;V(entry) - spare
        mov     [edi+ecx*4-16],eax ;U - put dword into destination
UnwindUp3:
        mov     eax,[esi+ecx*4-12] ;U(entry)/V(not) - get dword from source
                                   ;V(entry) - spare
        mov     [edi+ecx*4-12],eax ;U - put dword into destination
UnwindUp2:
        mov     eax,[esi+ecx*4-8] ;U(entry)/V(not) - get dword from source
                                  ;V(entry) - spare
        mov     [edi+ecx*4-8],eax ;U - put dword into destination
UnwindUp1:
        mov     eax,[esi+ecx*4-4] ;U(entry)/V(not) - get dword from source
                                  ;V(entry) - spare
        mov     [edi+ecx*4-4],eax ;U - put dword into destination

        lea     eax,[ecx*4]     ;V - compute update for pointer

        add     esi,eax         ;U - update source pointer
        add     edi,eax         ;V - update destination pointer
UnwindUp0:
        jmp     dword ptr TrailUpVec[edx*4] ;N - process trailing bytes

;-----------------------------------------------------------------------------

        align   @WordSize
TrailUpVec      dd      TrailUp0, TrailUp1, TrailUp2, TrailUp3

        align   @WordSize
TrailUp0:
        mov     eax,[dst]       ;U - return pointer to destination
        pop     esi             ;V - restore esi
        pop     edi             ;U - restore edi
                                ;V - spare
        M_EXIT

        align   @WordSize
TrailUp1:
        mov     al,[esi]        ;U - get byte from source
                                ;V - spare
        mov     [edi],al        ;U - put byte in destination
        mov     eax,[dst]       ;V - return pointer to destination
        pop     esi             ;U - restore esi
        pop     edi             ;V - restore edi
        M_EXIT

        align   @WordSize
TrailUp2:
        mov     al,[esi]        ;U - get first byte from source
                                ;V - spare
        mov     [edi],al        ;U - put first byte into destination
        mov     al,[esi+1]      ;V - get second byte from source
        mov     [edi+1],al      ;U - put second byte into destination
        mov     eax,[dst]       ;V - return pointer to destination
        pop     esi             ;U - restore esi
        pop     edi             ;V - restore edi
        M_EXIT

        align   @WordSize
TrailUp3:
        mov     al,[esi]        ;U - get first byte from source
                                ;V - spare
        mov     [edi],al        ;U - put first byte into destination
        mov     al,[esi+1]      ;V - get second byte from source
        mov     [edi+1],al      ;U - put second byte into destination
        mov     al,[esi+2]      ;V - get third byte from source
        mov     [edi+2],al      ;U - put third byte into destination
        mov     eax,[dst]       ;V - return pointer to destination
        pop     esi             ;U - restore esi
        pop     edi             ;V - restore edi
        M_EXIT

;-----------------------------------------------------------------------------
;-----------------------------------------------------------------------------
;-----------------------------------------------------------------------------

;
; Copy down to avoid propogation in overlapping buffers.
;
        align   @WordSize
CopyDown:
        lea     esi,[esi+ecx-4] ;U - point to 4 bytes before src buffer end
        lea     edi,[edi+ecx-4] ;V - point to 4 bytes before dest buffer end
;
; See if the destination start is dword aligned
;

        test    edi,11b         ;U - test if dword aligned
        jnz     short CopyLeadDown ;V - if not, jump

        shr     ecx,2           ;U - shift down to dword count
        and     edx,11b         ;V - trailing byte count

        cmp     ecx,8           ;U - test if small enough for unwind copy
        jb      short CopyUnwindDown ;V - if so, then jump

        std                     ;N - set direction flag
        rep     movsd           ;N - move all of our dwords
        cld                     ;N - clear direction flag back

        jmp     dword ptr TrailDownVec[edx*4] ;N - process trailing bytes

        align   @WordSize
CopyUnwindDown:
        neg     ecx             ;U - negate dword count for table merging
                                ;V - spare

        jmp     dword ptr UnwindDownVec[ecx*4+28] ;N - unwind copy

        align   @WordSize
CopyLeadDown:

        mov     eax,edi         ;U - get destination offset
        mov     edx,11b         ;V - prepare for mask

        cmp     ecx,4           ;U - check for really short string
        jb      short ByteCopyDown ;V - branch to just copy bytes

        and     eax,11b         ;U - get offset within first dword
        sub     ecx,eax         ;U - to update size after lead copied

        jmp     dword ptr LeadDownVec[eax*4-4] ;N - process leading bytes

        align   @WordSize
ByteCopyDown:
        jmp     dword ptr TrailDownVec[ecx*4] ;N - process just bytes

        align   @WordSize
LeadDownVec     dd      LeadDown1, LeadDown2, LeadDown3

        align   @WordSize
LeadDown1:
        mov     al,[esi+3]      ;U - load first byte
        and     edx,ecx         ;V - trailing byte count

        mov     [edi+3],al      ;U - write out first byte
        sub     esi,1           ;V - point to last src dword

        shr     ecx,2           ;U - shift down to dword count
        sub     edi,1           ;V - point to last dest dword

        cmp     ecx,8           ;U - test if small enough for unwind copy
        jb      short CopyUnwindDown ;V - if so, then jump

        std                     ;N - set direction flag
        rep     movsd           ;N - move all of our dwords
        cld                     ;N - clear direction flag

        jmp     dword ptr TrailDownVec[edx*4] ;N - process trailing bytes

        align   @WordSize
LeadDown2:
        mov     al,[esi+3]      ;U - load first byte
        and     edx,ecx         ;V - trailing byte count

        mov     [edi+3],al      ;U - write out first byte
        mov     al,[esi+2]      ;V - get second byte from source

        shr     ecx,2           ;U - shift down to dword count
        mov     [edi+2],al      ;V - write second byte to destination

        sub     esi,2           ;U - point to last src dword
        sub     edi,2           ;V - point to last dest dword

        cmp     ecx,8           ;U - test if small enough for unwind copy
        jb      short CopyUnwindDown ;V - if so, then jump

        std                     ;N - set direction flag
        rep     movsd           ;N - move all of our dwords
        cld                     ;N - clear direction flag

        jmp     dword ptr TrailDownVec[edx*4] ;N - process trailing bytes

        align   @WordSize
LeadDown3:
        mov     al,[esi+3]      ;U - load first byte
        and     edx,ecx         ;V - trailing byte count

        mov     [edi+3],al      ;U - write out first byte
        mov     al,[esi+2]      ;V - get second byte from source

        mov     [edi+2],al      ;U - write second byte to destination
        mov     al,[esi+1]      ;V - get third byte from source

        shr     ecx,2           ;U - shift down to dword count
        mov     [edi+1],al      ;V - write third byte to destination

        sub     esi,3           ;U - point to last src dword
        sub     edi,3           ;V - point to last dest dword

        cmp     ecx,8           ;U - test if small enough for unwind copy
        jb      CopyUnwindDown  ;V - if so, then jump

        std                     ;N - set direction flag
        rep     movsd           ;N - move all of our dwords
        cld                     ;N - clear direction flag

        jmp     dword ptr TrailDownVec[edx*4] ;N - process trailing bytes

;------------------------------------------------------------------

        align   @WordSize
UnwindDownVec   dd      UnwindDown7, UnwindDown6, UnwindDown5, UnwindDown4
                dd      UnwindDown3, UnwindDown2, UnwindDown1, UnwindDown0

UnwindDown7:
        mov     eax,[esi+ecx*4+28] ;U - get dword from source
                                   ;V - spare
        mov     [edi+ecx*4+28],eax ;U - put dword into destination
UnwindDown6:
        mov     eax,[esi+ecx*4+24] ;U(entry)/V(not) - get dword from source
                                   ;V(entry) - spare
        mov     [edi+ecx*4+24],eax ;U - put dword into destination
UnwindDown5:
        mov     eax,[esi+ecx*4+20] ;U(entry)/V(not) - get dword from source
                                   ;V(entry) - spare
        mov     [edi+ecx*4+20],eax ;U - put dword into destination
UnwindDown4:
        mov     eax,[esi+ecx*4+16] ;U(entry)/V(not) - get dword from source
                                   ;V(entry) - spare
        mov     [edi+ecx*4+16],eax ;U - put dword into destination
UnwindDown3:
        mov     eax,[esi+ecx*4+12] ;U(entry)/V(not) - get dword from source
                                   ;V(entry) - spare
        mov     [edi+ecx*4+12],eax ;U - put dword into destination
UnwindDown2:
        mov     eax,[esi+ecx*4+8] ;U(entry)/V(not) - get dword from source
                                   ;V(entry) - spare
        mov     [edi+ecx*4+8],eax ;U - put dword into destination
UnwindDown1:
        mov     eax,[esi+ecx*4+4] ;U(entry)/V(not) - get dword from source
                                  ;V(entry) - spare
        mov     [edi+ecx*4+4],eax ;U - put dword into destination

        lea     eax,[ecx*4]     ;V - compute update for pointer

        add     esi,eax         ;U - update source pointer
        add     edi,eax         ;V - update destination pointer
UnwindDown0:
        jmp     dword ptr TrailDownVec[edx*4] ;N - process trailing bytes

;-----------------------------------------------------------------------------

        align   @WordSize
TrailDownVec    dd      TrailDown0, TrailDown1, TrailDown2, TrailDown3

        align   @WordSize
TrailDown0:
        mov     eax,[dst]       ;U - return pointer to destination
                                ;V - spare
        pop     esi             ;U - restore esi
        pop     edi             ;V - restore edi
        M_EXIT

        align   @WordSize
TrailDown1:
        mov     al,[esi+3]      ;U - get byte from source
                                ;V - spare
        mov     [edi+3],al      ;U - put byte in destination
        mov     eax,[dst]       ;V - return pointer to destination
        pop     esi             ;U - restore esi
        pop     edi             ;V - restore edi
        M_EXIT

        align   @WordSize
TrailDown2:
        mov     al,[esi+3]      ;U - get first byte from source
                                ;V - spare
        mov     [edi+3],al      ;U - put first byte into destination
        mov     al,[esi+2]      ;V - get second byte from source
        mov     [edi+2],al      ;U - put second byte into destination
        mov     eax,[dst]       ;V - return pointer to destination
        pop     esi             ;U - restore esi
        pop     edi             ;V - restore edi
        M_EXIT

        align   @WordSize
TrailDown3:
        mov     al,[esi+3]      ;U - get first byte from source
                                ;V - spare
        mov     [edi+3],al      ;U - put first byte into destination
        mov     al,[esi+2]      ;V - get second byte from source
        mov     [edi+2],al      ;U - put second byte into destination
        mov     al,[esi+1]      ;V - get third byte from source
        mov     [edi+1],al      ;U - put third byte into destination
        mov     eax,[dst]       ;V - return pointer to destination
        pop     esi             ;U - restore esi
        pop     edi             ;V - restore edi
        M_EXIT

_MEM_   endp
        end
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\intel\dllsupp.asm ===
page    ,132
        title   dllsupp - defines some public constants
;***
;dllsupp.asm - Definitions of public constants
;
;       Copyright (c) Microsoft Corporation. All rights reserved.
;
;Purpose:
;       Provides definitions for public constants (absolutes) that are
;       'normally' defined in objects in the C library, but must be defined
;       here for clients of crtdll.dll & msvcrt*.dll.  These constants are:
;
;                           _except_list
;                           _fltused
;                           _ldused
;
;*******************************************************************************

.xlist
include cruntime.inc
.list

; offset, with respect to FS, of pointer to currently active exception handler.
; referenced by compiler generated code for SEH and by _setjmp().

        public  _except_list
_except_list    equ     0

        public  _fltused
_fltused        equ     9876h

        public  _ldused
_ldused         equ     9876h

        end
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\intel\strncat.asm ===
page    ,132
        title   strncat - append n chars of string1 to string2
;***
;strncat.asm - append n chars of string to new string
;
;       Copyright (c) Microsoft Corporation. All rights reserved.
;
;Purpose:
;       defines strncat() - appends n characters of string onto
;       end of other string
;
;*******************************************************************************

        .xlist
        include cruntime.inc
        .list

page
;***
;char *strncat(front, back, count) - append count chars of back onto front
;
;Purpose:
;       Appends at most count characters of the string back onto the
;       end of front, and ALWAYS terminates with a null character.
;       If count is greater than the length of back, the length of back
;       is used instead.  (Unlike strncpy, this routine does not pad out
;       to count characters).
;
;       Algorithm:
;       char *
;       strncat (front, back, count)
;           char *front, *back;
;           unsigned count;
;       {
;           char *start = front;
;
;           while (*front++)
;               ;
;           front--;
;           while (count--)
;               if (!(*front++ = *back++))
;                   return(start);
;           *front = '\0';
;           return(start);
;       }
;
;Entry:
;       char *   front - string to append onto
;       char *   back  - string to append
;       unsigned count - count of max characters to append
;
;Exit:
;       returns a pointer to string appended onto (front).
;
;Uses:  ECX, EDX
;
;Exceptions:
;
;*******************************************************************************

    CODESEG

    public  strncat
strncat proc
;   front:ptr byte,
;   back:ptr byte,
;   count:IWORD

        .FPO    ( 0, 3, 0, 0, 0, 0 )

        mov     ecx,[esp + 0ch]     ; ecx = count
        push    edi                 ; preserve edi
        test    ecx,ecx
        jz      finish              ; leave if count is zero

        mov     edi,[esp + 8]       ; edi -> front string
        push    esi                 ; preserve esi
        test    edi,3               ; is string aligned on dword (4 bytes)
        push    ebx                 ; preserve ebx
        je      short find_end_of_front_string_loop

        ; simple byte loop until string is aligned

front_misaligned:
        mov     al,byte ptr [edi]
        add     edi,1
        test    al,al
        je      short start_byte_3
        test    edi,3
        jne     short front_misaligned

find_end_of_front_string_loop:
        mov     eax,dword ptr [edi] ; read dword (4 bytes)
        mov     edx,7efefeffh
        add     edx,eax
        xor     eax,-1
        xor     eax,edx
        add     edi,4
        test    eax,81010100h
        je      short find_end_of_front_string_loop

; found zero byte in the loop
        mov     eax,[edi - 4]
        test    al,al               ; is it byte 0
        je      short start_byte_0
        test    ah,ah               ; is it byte 1
        je      short start_byte_1
        test    eax,00ff0000h       ; is it byte 2
        je      short start_byte_2
        test    eax,0ff000000h      ; is it byte 3
        jne     short find_end_of_front_string_loop
                                    ; taken if bits 24-30 are clear and bit
                                    ; 31 is set
start_byte_3:
        sub     edi,1
        jmp     short copy_start
start_byte_2:
        sub     edi,2
        jmp     short copy_start
start_byte_1:
        sub     edi,3
        jmp     short copy_start
start_byte_0:
        sub     edi,4

; edi now points to the end of front string.

copy_start:
        mov     esi,[esp + 14h]     ; esi -> back string
        test    esi,3               ; is back string is dword aligned?
        jnz     back_misaligned

        mov     ebx,ecx             ; store count for tail loop

        shr     ecx,2
        jnz     short main_loop_entrance
        jmp     short tail_loop_start   ; 0 < counter < 4

; simple byte loop until back string is aligned

back_misaligned:
        mov     dl,byte ptr [esi]
        add     esi,1
        test    dl,dl
        je      short byte_0
        mov     [edi],dl
        add     edi,1
        sub     ecx,1
        jz      empty_counter
        test    esi,3
        jne     short back_misaligned
        mov     ebx,ecx             ; store count for tail loop
        shr     ecx,2               ; convert ecx to dword count
        jnz     short main_loop_entrance

tail_loop_start:
        mov     ecx,ebx
        and     ecx,3               ; ecx = count of leftover bytes after the
                                    ; dwords have been concatenated
        jz      empty_counter

tail_loop:
        mov     dl,byte ptr [esi]
        add     esi,1
        mov     [edi],dl
        add     edi,1
        test    dl,dl
        je      short finish1       ; '\0' was already copied
        sub     ecx,1
        jnz     tail_loop

empty_counter:
        mov     [edi],cl            ; cl=0;
finish1:
        pop     ebx
        pop     esi
finish:
        mov     eax,[esp + 8]       ; return in eax pointer to front string
        pop     edi
        ret                         ; _cdecl return


byte_0:
        mov     [edi],dl
        mov     eax,[esp + 10h]     ; return in eax pointer to front string
        pop     ebx
        pop     esi
        pop     edi
        ret                         ; _cdecl return


main_loop:                          ; edx contains first dword of back string
        mov     [edi],edx           ; store one more dword
        add     edi,4               ; kick pointer to front string

        sub     ecx,1
        jz      tail_loop_start
main_loop_entrance:
        mov     edx,7efefeffh
        mov     eax,dword ptr [esi] ; read 4 bytes

        add     edx,eax
        xor     eax,-1

        xor     eax,edx
        mov     edx,[esi]           ; it's in cache now

        add     esi,4               ; kick pointer to back string
        test    eax,81010100h

        je      short main_loop

; may be found zero byte in the loop
        test    dl,dl               ; is it byte 0
        je      short byte_0
        test    dh,dh               ; is it byte 1
        je      short byte_1
        test    edx,00ff0000h       ; is it byte 2
        je      short byte_2
        test    edx,0ff000000h      ; is it byte 3
        jne short main_loop         ; taken if bits 24-30 are clear and bit
                                    ; 31 is set
byte_3:
        mov     [edi],edx
        mov     eax,[esp + 10h]     ; return in eax pointer to front string
        pop     ebx
        pop     esi
        pop     edi
        ret                         ; _cdecl return

byte_2:
        mov     [edi],dx
        xor     edx,edx
        mov     eax,[esp + 10h]     ; return in eax pointer to front string
        mov     [edi + 2],dl
        pop     ebx
        pop     esi
        pop     edi
        ret                         ; _cdecl return

byte_1:
        mov     [edi],dx
        mov     eax,[esp + 10h]     ; return in eax pointer to front string
        pop     ebx
        pop     esi
        pop     edi
        ret                         ; _cdecl return

strncat endp

        end
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\intel\strnset.asm ===
page    ,132
        title   strnset - set first n characters to one char.
;***
;strnset.asm - set first n characters to single character
;
;       Copyright (c) Microsoft Corporation. All rights reserved.
;
;Purpose:
;       defines _strnset() - sets at most the first n characters of a string
;       to a given character.
;
;*******************************************************************************

        .xlist
        include cruntime.inc
        .list

page
;***
;char *_strnset(string, val, count) - set at most count characters to val
;
;Purpose:
;       Sets the first count characters of string the character value.
;       If the length of string is less than count, the length of
;       string is used in place of n.
;
;       Algorithm:
;       char *
;       _strnset (string, val, count)
;             char *string,val;
;             unsigned int count;
;             {
;             char *start = string;
;
;             while (count-- && *string)
;                     *string++ = val;
;             return(start);
;             }
;
;Entry:
;       char *string - string to set characters in
;       char val - character to fill with
;       unsigned count - count of characters to fill
;
;Exit:
;       returns string, now filled with count copies of val.
;
;Uses:
;
;Exceptions:
;
;*******************************************************************************

        CODESEG

        public  _strnset
_strnset proc \
        uses edi ebx, \
        string:ptr byte, \
        val:byte, \
        count:IWORD


        mov     edi,[string]    ; di = string
        mov     edx,edi         ; dx=string addr; save return value
        mov     ebx,[count]     ; cx = max chars to set
        xor     eax,eax         ; null byte
        mov     ecx,ebx
        jecxz   short done      ; zero length specified

repne   scasb                   ; find null byte & count bytes in cx
        jne     short nonull    ; null not found
        add     ecx,1           ; don't want the null

nonull:
        sub     ebx,ecx         ; bx=strlen (not null)
        mov     ecx,ebx         ; cx=strlen (not null)

        mov     edi,edx         ; restore string pointer
        mov     al,val          ; byte value
rep     stosb                   ; fill 'er up

done:
        mov     eax,edx         ; return value: string addr

        ret                     ; _cdecl return

_strnset endp
        end
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\intel\strncmp.c ===
/***
*strncmp.c - compare first n characters of two strings
*
*   Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*   defines strncmp() - compare first n characters of two strings
*   for lexical order.
*
*******************************************************************************/

#include <cruntime.h>
#include <string.h>

/***
*int strncmp(first, last, count) - compare first count chars of strings
*
*Purpose:
*   Compares two strings for lexical order.  The comparison stops
*   after: (1) a difference between the strings is found, (2) the end
*   of the strings is reached, or (3) count characters have been
*   compared.
*
*Entry:
*   char *first, *last - strings to compare
*   unsigned count - maximum number of characters to compare
*
*Exit:
*   returns <0 if first < last
*   returns  0 if first == last
*   returns >0 if first > last
*
*Exceptions:
*
*******************************************************************************/

int __cdecl strncmp (
    const char * first,
    const char * last,
    size_t count
)
{
    size_t n = 0;

    if (!count)
        return(0);

    if( count >= 4 )
    {
        /* unroll by four */
        for (; n < count-4; n += 4)
        {
            first += 4;
            last += 4;

            if (*(first - 4) == 0 || *(first - 4) != *(last - 4))
            {
                return (*(unsigned char *)(first - 4) - *(unsigned char *)(last - 4));
            }

            if (*(first - 3) == 0 || *(first - 3) != *(last - 3))
            {
                return (*(unsigned char *)(first - 3) - *(unsigned char *)(last - 3));
            }

            if (*(first - 2) == 0 || *(first - 2) != *(last - 2))
            {
                return (*(unsigned char *)(first - 2) - *(unsigned char *)(last - 2));
            }

            if (*(first - 1) == 0 || *(first - 1) != *(last - 1))
            {
                return (*(unsigned char *)(first - 1) - *(unsigned char *)(last - 1));
            }
        }
    }

    /* residual loop */
    for (; n < count; ++n)
    {
        if (*first == 0 || *first != *last)
        {
            return (*(unsigned char *)first - *(unsigned char *)last);
        }
        ++first;
        ++last;
    }

    return 0;
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\intel\strncpy.asm ===
page    ,132
        title   strncpy - copy at most n characters of string
;***
;strncpy.asm - copy at most n characters of string
;
;       Copyright (c) Microsoft Corporation. All rights reserved.
;
;Purpose:
;       defines strncpy() - copy at most n characters of string
;
;*******************************************************************************

        .xlist
        include cruntime.inc
        .list

page
;***
;char *strncpy(dest, source, count) - copy at most n characters
;
;Purpose:
;       Copies count characters from the source string to the
;       destination.  If count is less than the length of source,
;       NO NULL CHARACTER is put onto the end of the copied string.
;       If count is greater than the length of sources, dest is padded
;       with null characters to length count.
;
;       Algorithm:
;       char *
;       strncpy (dest, source, count)
;       char *dest, *source;
;       unsigned count;
;       {
;         char *start = dest;
;
;         while (count && (*dest++ = *source++))
;             count--;
;         if (count)
;             while (--count)
;                 *dest++ = '\0';
;         return(start);
;       }
;
;Entry:
;       char *dest     - pointer to spot to copy source, enough space
;                        is assumed.
;       char *source   - source string for copy
;       unsigned count - characters to copy
;
;Exit:
;       returns dest, with the character copied there.
;
;Uses:
;
;Exceptions:
;
;*******************************************************************************

        CODESEG

        public  strncpy
strncpy proc \
        dest:ptr byte, \
        source:ptr byte, \
        count:dword

        OPTION PROLOGUE:NONE, EPILOGUE:NONE

        .FPO    ( 0, 3, 0, 0, 0, 0 )

        mov     ecx,[esp + 0ch]     ; ecx = count
        push    edi                 ; preserve edi
        test    ecx,ecx
        jz      finish              ; leave if count is zero

        push    esi                 ; preserve edi
        push    ebx                 ; preserve ebx
        mov     ebx,ecx             ; store count for tail loop
        mov     esi,[esp + 14h]     ; esi -> source string
        test    esi,3               ; test if source string is aligned on 32 bits
        mov     edi,[esp + 10h]     ; edi -> dest string
        jnz     short src_misaligned    ; (almost always source is aligned)

        shr     ecx,2               ; convert ecx to dword count
        jnz     main_loop_entrance
        jmp     short copy_tail_loop    ; 0 < count < 4

; simple byte loop until string is aligned

src_misaligned:
        mov     al,byte ptr [esi]   ; copy a byte from source to dest
        add     esi,1
        mov     [edi],al
        add     edi,1
        sub     ecx,1
        jz      fill_tail_end1      ; if count == 0, leave
        test    al,al               ; was last copied byte zero?
        jz      short align_dest    ; if so, go align dest and pad it out
                                    ; with zeros
        test    esi,3               ; esi already aligned ?
        jne     short src_misaligned
        mov     ebx,ecx             ; store count for tail loop
        shr     ecx,2
        jnz     short main_loop_entrance

tail_loop_start:
        and     ebx,3               ; ebx = count_before_main_loop%4
        jz      short fill_tail_end1    ; if ebx == 0 then leave without
                                        ; appending a null byte

; while ( EOS (end-of-string) not found and count > 0 ) copy bytes

copy_tail_loop:
        mov     al,byte ptr [esi]   ; load byte from source
        add     esi,1
        mov     [edi],al            ; store byte to dest
        add     edi,1
        test    al,al               ; EOS found?
        je      short fill_tail_zero_bytes  ; '\0' was already copied
        sub     ebx,1
        jnz     copy_tail_loop
fill_tail_end1:
        mov     eax,[esp + 10h]     ; prepare return value
        pop     ebx
        pop     esi
        pop     edi
        ret

; EOS found. Pad with null characters to length count

align_dest:
        test    edi,3               ; dest string aligned?
        jz      dest_align_loop_end
dest_align_loop:
        mov     [edi],al
        add     edi,1
        sub     ecx,1               ; count == 0?
        jz      fill_tail_end       ; if so, finished
        test    edi,3               ; is edi aligned ?
        jnz     dest_align_loop
dest_align_loop_end:
        mov     ebx,ecx             ; ebx > 0
        shr     ecx,2               ; convert ecx to count of dwords
        jnz     fill_dwords_with_EOS
        ; pad tail bytes
finish_loop:                        ; 0 < ebx < 4
        mov     [edi],al
        add     edi,1
fill_tail_zero_bytes:
        sub     ebx,1
        jnz     finish_loop
        pop     ebx
        pop     esi
finish:
        mov     eax,[esp + 8]       ; return in eax pointer to dest string
        pop     edi
        ret

; copy (source) string to (dest). Also look for end of (source) string

main_loop:                          ; edx contains first dword of source string
        mov     [edi],edx           ; store one more dword
        add     edi,4               ; kick dest pointer
        sub     ecx,1
        jz      tail_loop_start

main_loop_entrance:
        mov     edx,7efefeffh
        mov     eax,dword ptr [esi] ; read 4 bytes (dword)
        add     edx,eax
        xor     eax,-1
        xor     eax,edx
        mov     edx,[esi]           ; it's in cache now
        add     esi,4               ; kick dest pointer
        test    eax,81010100h
        je      short main_loop

        ; may have found zero byte in the dword

        test    dl,dl               ; is it byte 0
        je      short byte_0
        test    dh,dh               ; is it byte 1
        je      short byte_1
        test    edx,00ff0000h       ; is it byte 2
        je      short byte_2
        test    edx,0ff000000h      ; is it byte 3
        jne     short main_loop     ; taken if bits 24-30 are clear and bit
                                    ; 31 is set

; a null character was found, so dest needs to be padded out with null chars
; to count length.

        mov     [edi],edx
        jmp     short fill_with_EOS_dwords

byte_2:
        and     edx,0ffffh          ; fill high 2 bytes with 0
        mov     [edi],edx
        jmp     short fill_with_EOS_dwords

byte_1:
        and     edx,0ffh            ; fill high 3 bytes with 0
        mov     [edi],edx
        jmp     short fill_with_EOS_dwords

byte_0:
        xor     edx,edx             ; fill whole dword with 0
        mov     [edi],edx

; End of string was found. Pad out dest string with dwords of 0

fill_with_EOS_dwords:               ; ecx > 0   (ecx is dword counter)
        add     edi,4
        xor     eax,eax             ; it is instead of ???????????????????
        sub     ecx,1
        jz      fill_tail           ; we filled all dwords

fill_dwords_with_EOS:
        xor     eax,eax
fill_with_EOS_loop:
        mov     [edi],eax
        add     edi,4
        sub     ecx,1
        jnz     short fill_with_EOS_loop
fill_tail:                          ; let's pad tail bytes with zero
        and     ebx,3               ; ebx = ebx % 4
        jnz     finish_loop         ; taken, when there are some tail bytes
fill_tail_end:
        mov     eax,[esp + 10h]
        pop     ebx
        pop     esi
        pop     edi
        ret

strncpy endp
        end
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\intel\strrchr.asm ===
page    ,132
        title   strrchr - find last occurence of character in string
;***
;strrchr.asm - find last occurrence of character in string
;
;       Copyright (c) Microsoft Corporation. All rights reserved.
;
;Purpose:
;       defines strrchr() - find the last occurrence of a given character
;       in a string.
;
;*******************************************************************************

        .xlist
        include cruntime.inc
        .list

page
;***
;char *strrchr(string, ch) - find last occurrence of ch in string
;
;Purpose:
;       Finds the last occurrence of ch in string.  The terminating
;       null character is used as part of the search.
;
;       Algorithm:
;       char *
;       strrchr (string, ch)
;             char *string, ch;
;             {
;             char *start = string;
;
;             while (*string++)
;                     ;
;             while (--string != start && *string != ch)
;                     ;
;             if (*string == ch)
;                     return(string);
;             return(NULL);
;             }
;
;Entry:
;       char *string - string to search in
;       char ch - character to search for
;
;Exit:
;       returns a pointer to the last occurrence of ch in the given
;       string
;       returns NULL if ch does not occurr in the string
;
;Uses:
;
;Exceptions:
;
;*******************************************************************************

        CODESEG

        public  strrchr
strrchr proc \
        uses edi, \
        string:ptr byte, \
        chr:byte

        mov     edi,[string]    ; di = string
        xor     eax,eax         ; al=null byte
        or      ecx,-1          ; cx = -1
repne   scasb                   ; find the null & count bytes
        add     ecx,1           ; cx=-byte count (with null)
        neg     ecx             ; cx=+byte count (with null)
        sub     edi,1           ; di points to terminal null
        mov     al,chr          ; al=search byte
        std                     ; count 'down' on string this time
repne   scasb                   ; find that byte
        add     edi,1           ; di points to byte which stopped scan

        cmp     [edi],al        ; see if we have a hit
        je      short returndi  ; yes, point to byte

        xor     eax,eax         ; no, return NULL
        jmp     short toend     ; do return sequence

returndi:
        mov     eax,edi         ; ax=pointer to byte

toend:
        cld

        ret                     ; _cdecl return

strrchr endp
        end
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\intel\strrev.asm ===
page    ,132
        title   strrev - reverse a string in place
;***
;strrev.asm - reverse a string in place
;
;       Copyright (c) Microsoft Corporation. All rights reserved.
;
;Purpose:
;       defines _strrev() - reverse a string in place (not including
;       '\0' character)
;
;*******************************************************************************

        .xlist
        include cruntime.inc
        .list

page
;***
;char *_strrev(string) - reverse a string in place
;
;Purpose:
;       Reverses the order of characters in the string.  The terminating
;       null character remains in place.
;
;       Algorithm:
;       char *
;       _strrev (string)
;             char *string;
;             {
;             char *start = string;
;             char *left = string;
;             char ch;
;
;             while (*string++)
;                     ;
;             string -= 2;
;             while (left < string)
;                     {
;                     ch = *left;
;                     *left++ = *string;
;                     *string-- = ch;
;                     }
;             return(start);
;             }
;
;       NOTE: There is a check for an empty string in the following code.
;       Normally, this would fall out of the "cmp si,di" instruction in the
;       loop portion of the routine.  However, if the offset of the empty
;       string is 0 (as it could be in large model), then the cmp does not
;       catch the empty string and the routine essentially hangs (i.e., loops
;       moving bytes one at a time FFFFh times).  An explicit empty string
;       check corrects this.
;
;Entry:
;       char *string - string to reverse
;
;Exit:
;       returns string - now with reversed characters
;
;Uses:
;
;Exceptions:
;
;*******************************************************************************

        CODESEG

        public  _strrev
_strrev proc \
        uses edi esi, \
        string:ptr byte

        mov     edi,[string]    ; di = string
        mov     edx,edi         ; dx=pointer to string; save return value

        mov     esi,edi         ; si=pointer to string
        xor     eax,eax         ; search value (null)
        or      ecx,-1          ; cx = -1
repne   scasb                   ; find null
        cmp     ecx,-2          ; is string empty? (if offset value is 0, the
        je      short done      ; cmp below will not catch it and we'll hang).

        sub     edi,2           ; string is not empty, move di pointer back
                                ; di points to last non-null byte

lupe:
        cmp     esi,edi         ; see if pointers have crossed yet
        jae     short done      ; exit when pointers meet (or cross)

        mov     ah,[esi]        ; get front byte...
        mov     al,[edi]        ;   and end byte
        mov     [esi],al        ; put end byte in front...
        mov     [edi],ah        ;   and front byte at end
        add     esi,1           ; front moves up...
        sub     edi,1           ;   and end moves down
        jmp     short lupe      ; keep switching bytes

done:
        mov     eax,edx         ; return value: string addr

        ret                     ; _cdecl return

_strrev endp
        end
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\intel\strspn.asm ===
page    ,132
        title   strspn - search for init substring of chars from control str
;***
;strspn.asm - find length of initial substring of chars from a control string
;
;       Copyright (c) Microsoft Corporation. All rights reserved.
;
;Purpose:
;       defines strspn() - finds the length of the initial substring of
;       a string consisting entirely of characters from a control string.
;
;       defines strcspn()- finds the length of the initial substring of
;       a string consisting entirely of characters not in a control string.
;
;       defines strpbrk()- finds the index of the first character in a string
;       that is not in a control string
;
;*******************************************************************************

        .xlist
        include cruntime.inc
        .list

page
;***
;int strspn(string, control) - find init substring of control chars
;
;Purpose:
;       Finds the index of the first character in string that does belong
;       to the set of characters specified by control.  This is
;       equivalent to the length of the initial substring of string that
;       consists entirely of characters from control.  The '\0' character
;       that terminates control is not considered in the matching process.
;
;       Algorithm:
;       int
;       strspn (string, control)
;               unsigned char *string, *control;
;       {
;               unsigned char map[32];
;               int count;
;
;               for (count = 0; count < 32; count++)
;                       map[count] = 0;
;               while (*control)
;               {
;                       map[*control >> 3] |= (1 << (*control & 7));
;                       control++;
;               }
;               if (*string)
;               {
;                       while (map[*string >> 3] & (1 << (*string & 7)))
;                       {
;                               count++;
;                               string++;
;                       }
;                       return(count);
;               }
;               return(0);
;       }
;
;Entry:
;       char *string - string to search
;       char *control - string containing characters not to search for
;
;Exit:
;       returns index of first char in string not in control
;
;Uses:
;
;Exceptions:
;
;*******************************************************************************

;***
;int strcspn(string, control) - search for init substring w/o control chars
;
;Purpose:
;       returns the index of the first character in string that belongs
;       to the set of characters specified by control.  This is equivalent
;       to the length of the length of the initial substring of string
;       composed entirely of characters not in control.  Null chars not
;       considered.
;
;       Algorithm:
;       int
;       strcspn (string, control)
;               unsigned char *string, *control;
;       {
;               unsigned char map[32];
;               int count;
;
;               for (count = 0; count < 32; count++)
;                       map[count] = 0;
;               while (*control)
;               {
;                       map[*control >> 3] |= (1 << (*control & 7));
;                       control++;
;               }
;               map[0] |= 1;
;               while (!(map[*string >> 3] & (1 << (*string & 7))))
;               {
;                       count++;
;                       string++;
;               }
;               return(count);
;       }
;
;Entry:
;       char *string - string to search
;       char *control - set of characters not allowed in init substring
;
;Exit:
;       returns the index of the first char in string
;       that is in the set of characters specified by control.
;
;Uses:
;
;Exceptions:
;
;*******************************************************************************

;***
;char *strpbrk(string, control) - scans string for a character from control
;
;Purpose:
;       Finds the first occurence in string of any character from
;       the control string.
;
;       Algorithm:
;       char *
;       strpbrk (string, control)
;               unsigned char *string, *control;
;       {
;               unsigned char map[32];
;               int count;
;
;               for (count = 0; count < 32; count++)
;                       map[count] = 0;
;               while (*control)
;               {
;                       map[*control >> 3] |= (1 << (*control & 7));
;                       control++;
;               }
;               while (*string)
;               {
;                       if (map[*string >> 3] & (1 << (*string & 7)))
;                               return(string);
;                       string++;
;               }
;               return(NULL);
;       }
;
;Entry:
;       char *string - string to search in
;       char *control - string containing characters to search for
;
;Exit:
;       returns a pointer to the first character from control found
;       in string.
;       returns NULL if string and control have no characters in common.
;
;Uses:
;
;Exceptions:
;
;*******************************************************************************


ifdef SSTRCSPN

    _STRSPN_ equ <strcspn>

elseifdef SSTRPBRK

    _STRSPN_ equ <strpbrk>

else  ; SSTRCSPN

; Default is to build strspn()

    SSTRSPN equ 1
    _STRSPN_ equ <strspn>

endif  ; SSTRCSPN

% public  _STRSPN_

    CODESEG

_STRSPN_ proc \
        uses esi, \
        string:ptr byte, \
        control:ptr byte

; create and zero out char bit map

        xor     eax,eax
        push    eax             ; 32
        push    eax
        push    eax
        push    eax             ; 128
        push    eax
        push    eax
        push    eax
        push    eax             ; 256

map     equ     [esp]

; Set control char bits in map

        mov     edx,control     ; si = control string

        align   @WordSize
lab listnext                    ; init char bit map
        mov     al,[edx]
        or      al,al
        jz      short listdone
        add     edx,1
        bts     map,eax
        jmp     short listnext

lab listdone

; Loop through comparing source string with control bits

        mov     esi,string      ; si = string

_ifnd   SSTRPBRK <or     ecx,-1> ; set ecx to -1

        align   @WordSize
lab dstnext

_ifnd   SSTRPBRK <add    ecx,1>

        mov     al,[esi]
        or      al,al
        jz      short dstdone
        add     esi,1
        bt      map, eax

ifdef SSTRSPN
        jc      short dstnext   ; strspn: found char, continue
elseifdef SSTRCSPN
        jnc     short dstnext   ; strcspn: did not find char, continue
elseifdef SSTRPBRK
        jnc     short dstnext   ; strpbrk: did not find char, continue
        lea     eax,[esi - 1]   ; found char, return address of it
endif  ; SSTRSPN

; Return code

lab dstdone

_ifnd   SSTRPBRK <mov   eax,ecx> ; strspn/strcspn: return index

        add     esp,32

        ret                     ; _cdecl return

_STRSPN_ endp
         end
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\intel\ulldiv.asm ===
title   ulldiv - unsigned long divide routine
;***
;ulldiv.asm - unsigned long divide routine
;
;       Copyright (c) Microsoft Corporation. All rights reserved.
;
;Purpose:
;       defines the unsigned long divide routine
;           __aulldiv
;
;*******************************************************************************


.xlist
include cruntime.inc
include mm.inc
.list

;***
;ulldiv - unsigned long divide
;
;Purpose:
;       Does a unsigned long divide of the arguments.  Arguments are
;       not changed.
;
;Entry:
;       Arguments are passed on the stack:
;               1st pushed: divisor (QWORD)
;               2nd pushed: dividend (QWORD)
;
;Exit:
;       EDX:EAX contains the quotient (dividend/divisor)
;       NOTE: this routine removes the parameters from the stack.
;
;Uses:
;       ECX
;
;Exceptions:
;
;*******************************************************************************

        CODESEG

_aulldiv        PROC NEAR

        push    ebx
        push    esi

; Set up the local stack and save the index registers.  When this is done
; the stack frame will look as follows (assuming that the expression a/b will
; generate a call to uldiv(a, b)):
;
;               -----------------
;               |               |
;               |---------------|
;               |               |
;               |--divisor (b)--|
;               |               |
;               |---------------|
;               |               |
;               |--dividend (a)-|
;               |               |
;               |---------------|
;               | return addr** |
;               |---------------|
;               |      EBX      |
;               |---------------|
;       ESP---->|      ESI      |
;               -----------------
;

DVND    equ     [esp + 12]      ; stack address of dividend (a)
DVSR    equ     [esp + 20]      ; stack address of divisor (b)

;
; Now do the divide.  First look to see if the divisor is less than 4194304K.
; If so, then we can use a simple algorithm with word divides, otherwise
; things get a little more complex.
;

        mov     eax,HIWORD(DVSR) ; check to see if divisor < 4194304K
        or      eax,eax
        jnz     short L1        ; nope, gotta do this the hard way
        mov     ecx,LOWORD(DVSR) ; load divisor
        mov     eax,HIWORD(DVND) ; load high word of dividend
        xor     edx,edx
        div     ecx             ; get high order bits of quotient
        mov     ebx,eax         ; save high bits of quotient
        mov     eax,LOWORD(DVND) ; edx:eax <- remainder:lo word of dividend
        div     ecx             ; get low order bits of quotient
        mov     edx,ebx         ; edx:eax <- quotient hi:quotient lo
        jmp     short L2        ; restore stack and return

;
; Here we do it the hard way.  Remember, eax contains DVSRHI
;

L1:
        mov     ecx,eax         ; ecx:ebx <- divisor
        mov     ebx,LOWORD(DVSR)
        mov     edx,HIWORD(DVND) ; edx:eax <- dividend
        mov     eax,LOWORD(DVND)
L3:
        shr     ecx,1           ; shift divisor right one bit; hi bit <- 0
        rcr     ebx,1
        shr     edx,1           ; shift dividend right one bit; hi bit <- 0
        rcr     eax,1
        or      ecx,ecx
        jnz     short L3        ; loop until divisor < 4194304K
        div     ebx             ; now divide, ignore remainder
        mov     esi,eax         ; save quotient

;
; We may be off by one, so to check, we will multiply the quotient
; by the divisor and check the result against the orignal dividend
; Note that we must also check for overflow, which can occur if the
; dividend is close to 2**64 and the quotient is off by 1.
;

        mul     dword ptr HIWORD(DVSR) ; QUOT * HIWORD(DVSR)
        mov     ecx,eax
        mov     eax,LOWORD(DVSR)
        mul     esi             ; QUOT * LOWORD(DVSR)
        add     edx,ecx         ; EDX:EAX = QUOT * DVSR
        jc      short L4        ; carry means Quotient is off by 1

;
; do long compare here between original dividend and the result of the
; multiply in edx:eax.  If original is larger or equal, we are ok, otherwise
; subtract one (1) from the quotient.
;

        cmp     edx,HIWORD(DVND) ; compare hi words of result and original
        ja      short L4        ; if result > original, do subtract
        jb      short L5        ; if result < original, we are ok
        cmp     eax,LOWORD(DVND) ; hi words are equal, compare lo words
        jbe     short L5        ; if less or equal we are ok, else subtract
L4:
        dec     esi             ; subtract 1 from quotient
L5:
        xor     edx,edx         ; edx:eax <- quotient
        mov     eax,esi

;
; Just the cleanup left to do.  edx:eax contains the quotient.
; Restore the saved registers and return.
;

L2:

        pop     esi
        pop     ebx

        ret     16

_aulldiv        ENDP

        end
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\intel\ullshr.asm ===
title   ullshr - long shift right
;***
;ullshr.asm - long shift right
;
;       Copyright (c) Microsoft Corporation. All rights reserved.
;
;Purpose:
;       define unsigned long shift right routine
;           __aullshr
;
;*******************************************************************************


.xlist
include cruntime.inc
include mm.inc
.list

;***
;ullshr - long shift right
;
;Purpose:
;       Does a unsigned Long Shift Right
;       Shifts a long right any number of bits.
;
;Entry:
;       EDX:EAX - long value to be shifted
;       CL    - number of bits to shift by
;
;Exit:
;       EDX:EAX - shifted value
;
;Uses:
;       CL is destroyed.
;
;Exceptions:
;
;*******************************************************************************

        CODESEG

_aullshr        PROC NEAR

;
; Handle shifts of 64 bits or more (if shifting 64 bits or more, the result
; depends only on the high order bit of edx).
;
        cmp     cl,64
        jae     short RETZERO

;
; Handle shifts of between 0 and 31 bits
;
        cmp     cl, 32
        jae     short MORE32
        shrd    eax,edx,cl
        shr     edx,cl
        ret

;
; Handle shifts of between 32 and 63 bits
;
MORE32:
        mov     eax,edx
        xor     edx,edx
        and     cl,31
        shr     eax,cl
        ret

;
; return 0 in edx:eax
;
RETZERO:
        xor     eax,eax
        xor     edx,edx
        ret

_aullshr        ENDP

        end
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\intel\_memicmp.asm ===
page        ,132
        title        memicmp - compare blocks of memory, ignore case
;***
;memicmp.asm - compare memory, ignore case
;
;       Copyright (c) Microsoft Corporation. All rights reserved.
;
;Purpose:
;       defines __ascii_memicmp() - compare two blocks of memory for lexical
;       order. Case is ignored in the comparison.
;
;*******************************************************************************

        .xlist
        include cruntime.inc
        .list

page
;***
;int __ascii_memicmp(first, last, count) - compare two blocks of memory, ignore case
;
;Purpose:
;       Compares count bytes of the two blocks of memory stored at first
;       and last.  The characters are converted to lowercase before
;       comparing (not permanently), so case is ignored in the search.
;
;       Algorithm:
;       int
;       _memicmp (first, last, count)
;               char *first, *last;
;               unsigned count;
;               {
;               if (!count)
;                       return(0);
;               while (--count && tolower(*first) == tolower(*last))
;                       {
;                       first++;
;                       last++;
;                       }
;               return(tolower(*first) - tolower(*last));
;               }
;
;Entry:
;       char *first, *last - memory buffers to compare
;       unsigned count - maximum length to compare
;
;Exit:
;       returns <0 if first < last
;       returns 0 if first == last
;       returns >0 if first > last
;
;Uses:
;
;Exceptions:
;
;*******************************************************************************

        CODESEG

        public  __ascii_memicmp
__ascii_memicmp proc \
        uses edi esi ebx, \
        first:ptr byte, \
        last:ptr byte, \
        count:IWORD

        mov     ecx,[count]     ; cx = count
        or      ecx,ecx
        jz      short toend     ; if count=0, nothing to do

        mov     esi,[first]     ; si = first
        mov     edi,[last]      ; di = last

        ; C locale

        mov     bh,'A'
        mov     bl,'Z'
        mov     dh,'a'-'A'      ; add to cap to make lower

        align   4

lupe:
        mov     ah,[esi]        ; ah = *first
        add     esi,1           ; first++
        mov     al,[edi]        ; al = *last
        add     edi,1           ; last++

        cmp     ah,al           ; test for equality BEFORE converting case
        je      short dolupe

        cmp     ah,bh           ; ah < 'A' ??
        jb      short skip1

        cmp     ah,bl           ; ah > 'Z' ??
        ja      short skip1

        add     ah,dh           ; make lower case

skip1:
        cmp     al,bh           ; al < 'A' ??
        jb      short skip2

        cmp     al,bl           ; al > 'Z' ??
        ja      short skip2

        add     al,dh           ; make lower case

skip2:
        cmp     ah,al           ; *first == *last ??
        jne     short differ    ; nope, found mismatched chars

dolupe:
        sub     ecx,1
        jnz     short lupe

        jmp     short toend     ; cx = 0, return 0

differ:
        mov     ecx,-1          ; assume last is bigger
                                ; *** can't use "or ecx,-1" due to flags ***
        jb      short toend     ; last is, in fact, bigger (return -1)
        neg     ecx             ; first is bigger (return 1)

toend:
        mov     eax,ecx         ; move return value to ax

        ret                     ; _cdecl return

__ascii_memicmp endp
        end
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\intel\strpbrk.asm ===
;***
;strpbrk.asm -
;
;       Copyright (c) Microsoft Corporation.  All rights reserved.
;
;Purpose:
;       defines strpbrk()- finds the index of the first character in a string
;       that is not in a control string
;
;       NOTE:  This stub module scheme is compatible with NT build
;       procedure.
;
;*******************************************************************************

SSTRPBRK EQU 1
INCLUDE Intel\STRSPN.ASM
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\intel\strlen.asm ===
page    ,132
        title   strlen - return the length of a null-terminated string
;***
;strlen.asm - contains strlen() routine
;
;       Copyright (c) Microsoft Corporation. All rights reserved.
;
;Purpose:
;       strlen returns the length of a null-terminated string,
;       not including the null byte itself.
;
;*******************************************************************************

        .xlist
        include cruntime.inc
        .list

page
;***
;strlen - return the length of a null-terminated string
;
;Purpose:
;       Finds the length in bytes of the given string, not including
;       the final null character.
;
;       Algorithm:
;       int strlen (const char * str)
;       {
;           int length = 0;
;
;           while( *str++ )
;                   ++length;
;
;           return( length );
;       }
;
;Entry:
;       const char * str - string whose length is to be computed
;
;Exit:
;       EAX = length of the string "str", exclusive of the final null byte
;
;Uses:
;       EAX, ECX, EDX
;
;Exceptions:
;
;*******************************************************************************

        CODESEG

        public  strlen

strlen  proc \
        buf:ptr byte

        OPTION PROLOGUE:NONE, EPILOGUE:NONE

        .FPO    ( 0, 1, 0, 0, 0, 0 )

string  equ     [esp + 4]

        mov     ecx,string              ; ecx -> string
        test    ecx,3                   ; test if string is aligned on 32 bits
        je      short main_loop

str_misaligned:
        ; simple byte loop until string is aligned
        mov     al,byte ptr [ecx]
        add     ecx,1
        test    al,al
        je      short byte_3
        test    ecx,3
        jne     short str_misaligned

        add     eax,dword ptr 0         ; 5 byte nop to align label below

        align   16                      ; should be redundant

main_loop:
        mov     eax,dword ptr [ecx]     ; read 4 bytes
        mov     edx,7efefeffh
        add     edx,eax
        xor     eax,-1
        xor     eax,edx
        add     ecx,4
        test    eax,81010100h
        je      short main_loop
        ; found zero byte in the loop
        mov     eax,[ecx - 4]
        test    al,al                   ; is it byte 0
        je      short byte_0
        test    ah,ah                   ; is it byte 1
        je      short byte_1
        test    eax,00ff0000h           ; is it byte 2
        je      short byte_2
        test    eax,0ff000000h          ; is it byte 3
        je      short byte_3
        jmp     short main_loop         ; taken if bits 24-30 are clear and bit
                                        ; 31 is set

byte_3:
        lea     eax,[ecx - 1]
        mov     ecx,string
        sub     eax,ecx
        ret
byte_2:
        lea     eax,[ecx - 2]
        mov     ecx,string
        sub     eax,ecx
        ret
byte_1:
        lea     eax,[ecx - 3]
        mov     ecx,string
        sub     eax,ecx
        ret
byte_0:
        lea     eax,[ecx - 4]
        mov     ecx,string
        sub     eax,ecx
        ret

strlen  endp

        end
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\intel\strset.asm ===
page    ,132
        title   strset - set all characters of string to character
;***
;strset.asm - sets all charcaters of string to given character
;
;       Copyright (c) Microsoft Corporation. All rights reserved.
;
;Purpose:
;       defines _strset() - sets all of the characters in a string (except
;       the '\0') equal to a given character.
;
;*******************************************************************************

        .xlist
        include cruntime.inc
        .list

page
;***
;char *_strset(string, val) - sets all of string to val
;
;Purpose:
;       Sets all of characters in string (except the terminating '/0'
;       character) equal to val.
;
;       Algorithm:
;       char *
;       _strset (string, val)
;             char *string;
;             char val;
;             {
;             char *start = string;
;
;             while (*string)
;                     *string++ = val;
;             return(start);
;             }
;
;Entry:
;       char *string - string to modify
;       char val - value to fill string with
;
;Exit:
;       returns string -- now filled with val's
;
;Uses:
;
;Exceptions:
;
;*******************************************************************************

        CODESEG

        public  _strset
_strset proc \
        uses edi, \
        string:ptr byte, \
        val:byte


        mov     edi,[string]    ; di = string
        mov     edx,edi         ; dx=string addr; save return value

        xor     eax,eax         ; ax = 0
        or      ecx,-1          ; cx = -1
repne   scasb                   ; scan string & count bytes
        add     ecx,2           ; cx=-strlen
        neg     ecx             ; cx=strlen
        mov     al,[val]        ; al = byte value to store
        mov     edi,edx         ; di=string addr
rep     stosb

        mov     eax,edx         ; return value: string addr

        ret                     ; _cdecl return

_strset endp
        end
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\intel\strcat.asm ===
page    ,132
        title   strcat - concatenate (append) one string to another
;***
;strcat.asm - contains strcat() and strcpy() routines
;
;       Copyright (c) Microsoft Corporation. All rights reserved.
;
;Purpose:
;       STRCAT concatenates (appends) a copy of the source string to the
;       end of the destination string, returning the destination string.
;
;*******************************************************************************

        .xlist
        include cruntime.inc
        .list


page
;***
;char *strcat(dst, src) - concatenate (append) one string to another
;
;Purpose:
;       Concatenates src onto the end of dest.  Assumes enough
;       space in dest.
;
;       Algorithm:
;       char * strcat (char * dst, char * src)
;       {
;           char * cp = dst;
;
;           while( *cp )
;                   ++cp;           /* Find end of dst */
;           while( *cp++ = *src++ )
;                   ;               /* Copy src to end of dst */
;           return( dst );
;       }
;
;Entry:
;       char *dst - string to which "src" is to be appended
;       const char *src - string to be appended to the end of "dst"
;
;Exit:
;       The address of "dst" in EAX
;
;Uses:
;       EAX, ECX
;
;Exceptions:
;
;*******************************************************************************

page
;***
;char *strcpy(dst, src) - copy one string over another
;
;Purpose:
;       Copies the string src into the spot specified by
;       dest; assumes enough room.
;
;       Algorithm:
;       char * strcpy (char * dst, char * src)
;       {
;           char * cp = dst;
;
;           while( *cp++ = *src++ )
;                   ;               /* Copy src over dst */
;           return( dst );
;       }
;
;Entry:
;       char * dst - string over which "src" is to be copied
;       const char * src - string to be copied over "dst"
;
;Exit:
;       The address of "dst" in EAX
;
;Uses:
;       EAX, ECX
;
;Exceptions:
;*******************************************************************************


        CODESEG

%       public  strcat, strcpy      ; make both functions available
strcpy  proc \
        dst:ptr byte, \
        src:ptr byte

        OPTION PROLOGUE:NONE, EPILOGUE:NONE

        push    edi                 ; preserve edi
        mov     edi,[esp+8]         ; edi points to dest string
        jmp     short copy_start

strcpy  endp

        align   16

strcat  proc \
        dst:ptr byte, \
        src:ptr byte

        OPTION PROLOGUE:NONE, EPILOGUE:NONE

        .FPO    ( 0, 2, 0, 0, 0, 0 )

        mov     ecx,[esp+4]         ; ecx -> dest string
        push    edi                 ; preserve edi
        test    ecx,3               ; test if string is aligned on 32 bits
        je      short find_end_of_dest_string_loop

dest_misaligned:                    ; simple byte loop until string is aligned
        mov     al,byte ptr [ecx]
        add     ecx,1
        test    al,al
        je      short start_byte_3
        test    ecx,3
        jne     short dest_misaligned

        align   4

find_end_of_dest_string_loop:
        mov     eax,dword ptr [ecx] ; read 4 bytes
        mov     edx,7efefeffh
        add     edx,eax
        xor     eax,-1
        xor     eax,edx
        add     ecx,4
        test    eax,81010100h
        je      short find_end_of_dest_string_loop
        ; found zero byte in the loop
        mov     eax,[ecx - 4]
        test    al,al               ; is it byte 0
        je      short start_byte_0
        test    ah,ah               ; is it byte 1
        je      short start_byte_1
        test    eax,00ff0000h       ; is it byte 2
        je      short start_byte_2
        test    eax,0ff000000h      ; is it byte 3
        je      short start_byte_3
        jmp     short find_end_of_dest_string_loop
                                    ; taken if bits 24-30 are clear and bit
                                    ; 31 is set
start_byte_3:
        lea     edi,[ecx - 1]
        jmp     short copy_start
start_byte_2:
        lea     edi,[ecx - 2]
        jmp     short copy_start
start_byte_1:
        lea     edi,[ecx - 3]
        jmp     short copy_start
start_byte_0:
        lea     edi,[ecx - 4]
;       jmp     short copy_start

;       edi points to the end of dest string.
copy_start::
        mov     ecx,[esp+0ch]       ; ecx -> sorc string
        test    ecx,3               ; test if string is aligned on 32 bits
        je      short main_loop_entrance

src_misaligned:                     ; simple byte loop until string is aligned
        mov     dl,byte ptr [ecx]
        add     ecx,1
        test    dl,dl
        je      short byte_0
        mov     [edi],dl
        add     edi,1
        test    ecx,3
        jne     short src_misaligned
        jmp     short main_loop_entrance

main_loop:                          ; edx contains first dword of sorc string
        mov     [edi],edx           ; store one more dword
        add     edi,4               ; kick dest pointer
main_loop_entrance:
        mov     edx,7efefeffh
        mov     eax,dword ptr [ecx] ; read 4 bytes

        add     edx,eax
        xor     eax,-1

        xor     eax,edx
        mov     edx,[ecx]           ; it's in cache now

        add     ecx,4               ; kick dest pointer
        test    eax,81010100h

        je      short main_loop
        ; found zero byte in the loop
; main_loop_end:
        test    dl,dl               ; is it byte 0
        je      short byte_0
        test    dh,dh               ; is it byte 1
        je      short byte_1
        test    edx,00ff0000h       ; is it byte 2
        je      short byte_2
        test    edx,0ff000000h      ; is it byte 3
        je      short byte_3
        jmp     short main_loop     ; taken if bits 24-30 are clear and bit
                                    ; 31 is set
byte_3:
        mov     [edi],edx
        mov     eax,[esp+8]         ; return in eax pointer to dest string
        pop     edi
        ret
byte_2:
        mov     [edi],dx
        mov     eax,[esp+8]         ; return in eax pointer to dest string
        mov     byte ptr [edi+2],0
        pop     edi
        ret
byte_1:
        mov     [edi],dx
        mov     eax,[esp+8]         ; return in eax pointer to dest string
        pop     edi
        ret
byte_0:
        mov     [edi],dl
        mov     eax,[esp+8]         ; return in eax pointer to dest string
        pop     edi
        ret

strcat  endp

        end
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\intel\ulldvrm.asm ===
title   ulldvrm - unsigned long divide and remainder routine
;***
;ulldvrm.asm - unsigned long divide and remainder routine
;
;       Copyright (c) Microsoft Corporation. All rights reserved.
;
;Purpose:
;       defines the unsigned long divide and remainder routine
;           __aulldvrm
;
;*******************************************************************************


.xlist
include cruntime.inc
include mm.inc
.list

;***
;ulldvrm - unsigned long divide and remainder
;
;Purpose:
;       Does a unsigned long divide and remainder of the arguments.  Arguments
;       are not changed.
;
;Entry:
;       Arguments are passed on the stack:
;               1st pushed: divisor (QWORD)
;               2nd pushed: dividend (QWORD)
;
;Exit:
;       EDX:EAX contains the quotient (dividend/divisor)
;       EBX:ECX contains the remainder (divided % divisor)
;       NOTE: this routine removes the parameters from the stack.
;
;Uses:
;       ECX
;
;Exceptions:
;
;*******************************************************************************

        CODESEG

_aulldvrm PROC NEAR

        push    esi

; Set up the local stack and save the index registers.  When this is done
; the stack frame will look as follows (assuming that the expression a/b will
; generate a call to aulldvrm(a, b)):
;
;               -----------------
;               |               |
;               |---------------|
;               |               |
;               |--divisor (b)--|
;               |               |
;               |---------------|
;               |               |
;               |--dividend (a)-|
;               |               |
;               |---------------|
;               | return addr** |
;               |---------------|
;       ESP---->|      ESI      |
;               -----------------
;

DVND    equ     [esp + 8]       ; stack address of dividend (a)
DVSR    equ     [esp + 16]      ; stack address of divisor (b)

;
; Now do the divide.  First look to see if the divisor is less than 4194304K.
; If so, then we can use a simple algorithm with word divides, otherwise
; things get a little more complex.
;

        mov     eax,HIWORD(DVSR) ; check to see if divisor < 4194304K
        or      eax,eax
        jnz     short L1        ; nope, gotta do this the hard way
        mov     ecx,LOWORD(DVSR) ; load divisor
        mov     eax,HIWORD(DVND) ; load high word of dividend
        xor     edx,edx
        div     ecx             ; get high order bits of quotient
        mov     ebx,eax         ; save high bits of quotient
        mov     eax,LOWORD(DVND) ; edx:eax <- remainder:lo word of dividend
        div     ecx             ; get low order bits of quotient
        mov     esi,eax         ; ebx:esi <- quotient

;
; Now we need to do a multiply so that we can compute the remainder.
;
        mov     eax,ebx         ; set up high word of quotient
        mul     dword ptr LOWORD(DVSR) ; HIWORD(QUOT) * DVSR
        mov     ecx,eax         ; save the result in ecx
        mov     eax,esi         ; set up low word of quotient
        mul     dword ptr LOWORD(DVSR) ; LOWORD(QUOT) * DVSR
        add     edx,ecx         ; EDX:EAX = QUOT * DVSR
        jmp     short L2        ; complete remainder calculation

;
; Here we do it the hard way.  Remember, eax contains DVSRHI
;

L1:
        mov     ecx,eax         ; ecx:ebx <- divisor
        mov     ebx,LOWORD(DVSR)
        mov     edx,HIWORD(DVND) ; edx:eax <- dividend
        mov     eax,LOWORD(DVND)
L3:
        shr     ecx,1           ; shift divisor right one bit; hi bit <- 0
        rcr     ebx,1
        shr     edx,1           ; shift dividend right one bit; hi bit <- 0
        rcr     eax,1
        or      ecx,ecx
        jnz     short L3        ; loop until divisor < 4194304K
        div     ebx             ; now divide, ignore remainder
        mov     esi,eax         ; save quotient

;
; We may be off by one, so to check, we will multiply the quotient
; by the divisor and check the result against the orignal dividend
; Note that we must also check for overflow, which can occur if the
; dividend is close to 2**64 and the quotient is off by 1.
;

        mul     dword ptr HIWORD(DVSR) ; QUOT * HIWORD(DVSR)
        mov     ecx,eax
        mov     eax,LOWORD(DVSR)
        mul     esi             ; QUOT * LOWORD(DVSR)
        add     edx,ecx         ; EDX:EAX = QUOT * DVSR
        jc      short L4        ; carry means Quotient is off by 1

;
; do long compare here between original dividend and the result of the
; multiply in edx:eax.  If original is larger or equal, we are ok, otherwise
; subtract one (1) from the quotient.
;

        cmp     edx,HIWORD(DVND) ; compare hi words of result and original
        ja      short L4        ; if result > original, do subtract
        jb      short L5        ; if result < original, we are ok
        cmp     eax,LOWORD(DVND) ; hi words are equal, compare lo words
        jbe     short L5        ; if less or equal we are ok, else subtract
L4:
        dec     esi             ; subtract 1 from quotient
        sub     eax,LOWORD(DVSR) ; subtract divisor from result
        sbb     edx,HIWORD(DVSR)
L5:
        xor     ebx,ebx         ; ebx:esi <- quotient

L2:
;
; Calculate remainder by subtracting the result from the original dividend.
; Since the result is already in a register, we will do the subtract in the
; opposite direction and negate the result.
;

        sub     eax,LOWORD(DVND) ; subtract dividend from result
        sbb     edx,HIWORD(DVND)
        neg     edx             ; otherwise, negate the result
        neg     eax
        sbb     edx,0

;
; Now we need to get the quotient into edx:eax and the remainder into ebx:ecx.
;
        mov     ecx,edx
        mov     edx,ebx
        mov     ebx,ecx
        mov     ecx,eax
        mov     eax,esi
;
; Just the cleanup left to do.  edx:eax contains the quotient.
; Restore the saved registers and return.
;

        pop     esi

        ret     16

_aulldvrm ENDP

        end
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\intel\ullrem.asm ===
title   ullrem - unsigned long remainder routine
;***
;ullrem.asm - unsigned long remainder routine
;
;       Copyright (c) Microsoft Corporation. All rights reserved.
;
;Purpose:
;       defines the unsigned long remainder routine
;           __aullrem
;
;*******************************************************************************


.xlist
include cruntime.inc
include mm.inc
.list

;***
;ullrem - unsigned long remainder
;
;Purpose:
;       Does a unsigned long remainder of the arguments.  Arguments are
;       not changed.
;
;Entry:
;       Arguments are passed on the stack:
;               1st pushed: divisor (QWORD)
;               2nd pushed: dividend (QWORD)
;
;Exit:
;       EDX:EAX contains the remainder (dividend%divisor)
;       NOTE: this routine removes the parameters from the stack.
;
;Uses:
;       ECX
;
;Exceptions:
;
;*******************************************************************************

        CODESEG

_aullrem        PROC NEAR

        push    ebx

; Set up the local stack and save the index registers.  When this is done
; the stack frame will look as follows (assuming that the expression a%b will
; generate a call to ullrem(a, b)):
;
;               -----------------
;               |               |
;               |---------------|
;               |               |
;               |--divisor (b)--|
;               |               |
;               |---------------|
;               |               |
;               |--dividend (a)-|
;               |               |
;               |---------------|
;               | return addr** |
;               |---------------|
;       ESP---->|      EBX      |
;               -----------------
;

DVND    equ     [esp + 8]       ; stack address of dividend (a)
DVSR    equ     [esp + 16]      ; stack address of divisor (b)

; Now do the divide.  First look to see if the divisor is less than 4194304K.
; If so, then we can use a simple algorithm with word divides, otherwise
; things get a little more complex.
;

        mov     eax,HIWORD(DVSR) ; check to see if divisor < 4194304K
        or      eax,eax
        jnz     short L1        ; nope, gotta do this the hard way
        mov     ecx,LOWORD(DVSR) ; load divisor
        mov     eax,HIWORD(DVND) ; load high word of dividend
        xor     edx,edx
        div     ecx             ; edx <- remainder, eax <- quotient
        mov     eax,LOWORD(DVND) ; edx:eax <- remainder:lo word of dividend
        div     ecx             ; edx <- final remainder
        mov     eax,edx         ; edx:eax <- remainder
        xor     edx,edx
        jmp     short L2        ; restore stack and return

;
; Here we do it the hard way.  Remember, eax contains DVSRHI
;

L1:
        mov     ecx,eax         ; ecx:ebx <- divisor
        mov     ebx,LOWORD(DVSR)
        mov     edx,HIWORD(DVND) ; edx:eax <- dividend
        mov     eax,LOWORD(DVND)
L3:
        shr     ecx,1           ; shift divisor right one bit; hi bit <- 0
        rcr     ebx,1
        shr     edx,1           ; shift dividend right one bit; hi bit <- 0
        rcr     eax,1
        or      ecx,ecx
        jnz     short L3        ; loop until divisor < 4194304K
        div     ebx             ; now divide, ignore remainder

;
; We may be off by one, so to check, we will multiply the quotient
; by the divisor and check the result against the orignal dividend
; Note that we must also check for overflow, which can occur if the
; dividend is close to 2**64 and the quotient is off by 1.
;

        mov     ecx,eax         ; save a copy of quotient in ECX
        mul     dword ptr HIWORD(DVSR)
        xchg    ecx,eax         ; put partial product in ECX, get quotient in EAX
        mul     dword ptr LOWORD(DVSR)
        add     edx,ecx         ; EDX:EAX = QUOT * DVSR
        jc      short L4        ; carry means Quotient is off by 1

;
; do long compare here between original dividend and the result of the
; multiply in edx:eax.  If original is larger or equal, we're ok, otherwise
; subtract the original divisor from the result.
;

        cmp     edx,HIWORD(DVND) ; compare hi words of result and original
        ja      short L4        ; if result > original, do subtract
        jb      short L5        ; if result < original, we're ok
        cmp     eax,LOWORD(DVND) ; hi words are equal, compare lo words
        jbe     short L5        ; if less or equal we're ok, else subtract
L4:
        sub     eax,LOWORD(DVSR) ; subtract divisor from result
        sbb     edx,HIWORD(DVSR)
L5:

;
; Calculate remainder by subtracting the result from the original dividend.
; Since the result is already in a register, we will perform the subtract in
; the opposite direction and negate the result to make it positive.
;

        sub     eax,LOWORD(DVND) ; subtract original dividend from result
        sbb     edx,HIWORD(DVND)
        neg     edx             ; and negate it
        neg     eax
        sbb     edx,0

;
; Just the cleanup left to do.  dx:ax contains the remainder.
; Restore the saved registers and return.
;

L2:

        pop     ebx

        ret     16

_aullrem        ENDP

        end
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\msclr\auto_gcroot.h ===
/***
*auto_gcroot.h
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:   automatic resource management, like std::auto_ptr which can be used
*           to embed a virtual handle into a native type
*
*       [Public]
*
****/

#pragma once

#if !defined (_INC_MSCLR_AUTO_GCROOT)

#ifndef __cplusplus_cli
#error ERROR: msclr libraries are not compatible with /clr:oldSyntax
#endif  /* __cplusplus_cli */

#include <vcclr.h>
#include <msclr\safebool.h>
#include <algorithm>

namespace msclr
{

// Forward Declaration
template<typename _element_type>
class auto_gcroot;

namespace _detail
{

// _auto_gcroot_ref is a proxy reference for auto_gcroot copying.
// auto_gcroot's copy constructor takes a non-const reference
// because it must assume ownership from the source. But this
// makes it impossible for auto_gcroot to be returned by value,
// because temporary objects cannot be bound to non-const
// references. Instead, a conversion to _auto_gcroot_ref is provided,
// and an auto_gcroot can be initialized from an _auto_gcroot_ref.

    template<typename _element_type>
    struct _auto_gcroot_ref
    {
        // construct from compatible auto_gcroot
        _auto_gcroot_ref( auto_gcroot<_element_type> & ref )
            : m_ref( ref )
        {
        }

        // reference to constructor argument
        auto_gcroot<_element_type> & m_ref;

    };

} // namespace detail

// wrap a resource to enforce strict ownership and ensure proper cleanup
template<typename _element_type>
class auto_gcroot
{
private:
    // disallow explicit comparisons to _safe_bool
    bool operator==( _detail_class::_safe_bool ) const;
    bool operator!=( _detail_class::_safe_bool ) const;

public:

    // Constructors

    // construct from object pointer
    auto_gcroot( _element_type _ptr = nullptr )
        : m_ptr( _ptr )
    {
    }

    // construct by assuming pointer from _right auto_gcroot
    auto_gcroot( auto_gcroot<_element_type> & _right )
            : m_ptr( _right.release() )
    {
    }

    // construct by assuming pointer from _right _detail::_auto_gcroot_ref
    auto_gcroot( _detail::_auto_gcroot_ref<_element_type> _right )
        : m_ptr( _right.m_ref.release() )
    {
    }

    template<typename _other_type>
    auto_gcroot( auto_gcroot<_other_type> & _right )
        : m_ptr( _right.release() )
    {
    }

    auto_gcroot<_element_type> & attach(_element_type _right)
    {
        reset(_right);
        return *this;
    }

    // assign compatible _right
    auto_gcroot<_element_type> & attach(
        auto_gcroot<_element_type> & _right )
    {
        reset( _right.release() );
        return *this;
    }

    // assign compatible _right.ref
    auto_gcroot<_element_type> & attach(
        _detail::_auto_gcroot_ref<_element_type> & _right )
    {
        reset( _right.m_ref.release() );
        return *this;
    }

    template<typename _other_type>
    auto_gcroot<_element_type> & attach(
    auto_gcroot<_other_type> & _right )
    {
        reset( _right.release() );
        return *this;
    }

    auto_gcroot<_element_type> & operator=(_element_type _right)
    {
        return attach(_right);
    }

    // assign compatible _right
    auto_gcroot<_element_type> & operator=(
        auto_gcroot<_element_type> & _right )
    {
        return attach(_right);
    }

    // assign compatible _right.ref
    auto_gcroot<_element_type> & operator=(
        _detail::_auto_gcroot_ref<_element_type> & _right )
    {
        return attach(_right);
    }

    template<typename _other_type>
    auto_gcroot<_element_type> & operator=(
    auto_gcroot<_other_type> & _right )
    {
        return attach(_right);
    }

    _element_type get() const
    {
        return m_ptr;
    }

    // return pointer to class object (assume pointer)
    _element_type operator->() const
    {
        return m_ptr;
    }

    // for use when auto_gcroot appears in a conditional
    operator _detail_class::_safe_bool() const
    {
        return valid() ? _detail_class::_safe_true : _detail_class::_safe_false;
    }

    // for use when auto_gcroot appears in a conditional
    bool operator!() const
    {
        return ! valid();
    }

    // convert to compatible _detail::_auto_gcroot_ref
    operator _detail::_auto_gcroot_ref<_element_type>()
    {
        return _detail::_auto_gcroot_ref<_element_type>( *this );
    }

    template<typename _other_type>
    operator auto_gcroot<_other_type>()
    {
        return auto_gcroot<_other_type>( *this );
    }

    template<typename _other_type>
    operator _detail::_auto_gcroot_ref<_other_type>()
    {
        return _detail::_auto_gcroot_ref<_other_type>( *this );
    }

    void swap( auto_gcroot<_element_type> & _right )
    {
        m_ptr.swap( _right.m_ptr );
    }

    void reset( _element_type _new_ptr = nullptr )
    {
        if( _element_type(m_ptr) != _new_ptr )
        {
            if( valid() )
            {
                delete _element_type(m_ptr);
            }
            m_ptr = _new_ptr;
        }
    }

    _element_type release()
    {
        _element_type _tmp_ptr = m_ptr;
        m_ptr = nullptr;
        return _tmp_ptr;
    }

    // destroy the object
    ~auto_gcroot()
    {
        if( valid() )
        {
            delete _element_type(m_ptr);
        }
    }

private:

    bool valid() const
    {
        // see if the managed resource is in the invalid state.
        return _element_type(m_ptr) != nullptr;
    }

    // the wrapped object
    gcroot<_element_type> m_ptr;
};

// swap the contents of two auto_gcroot objects
template<typename _element_type>
void swap( auto_gcroot<_element_type> & _left,
           auto_gcroot<_element_type> & _right )
{
    _left.swap( _right );
}

} // namespace msclr

#define _INC_MSCLR_AUTO_GCROOT

#endif  /* !defined (_INC_MSCLR_AUTO_GCROOT) */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\msclr\auto_handle.h ===
/***
*auto_handle.h
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:   automatic resource management, like std::auto_ptr for ref classes
*
*       [Public]
*
****/

#pragma once

#if !defined (_INC_MSCLR_AUTO_HANDLE)

#ifndef __cplusplus_cli
#error ERROR: msclr libraries are not compatible with /clr:oldSyntax
#endif  /* __cplusplus_cli */

#include <msclr\safebool.h>

namespace msclr
{

    // wrap a resource to enforce strict ownership and ensure proper cleanup
    template<typename _element_type>
    ref class auto_handle
    {
    private:
        // disallow explicit comparisons to _safe_bool
        bool operator==( _detail_class::_safe_bool );
        bool operator!=( _detail_class::_safe_bool );

    public:

        // Constructors

        auto_handle()
            : m_handle( nullptr )
        {
        }

        // construct from object pointer
        auto_handle( _element_type ^ _ptr )
            : m_handle( _ptr )
        {
        }

        // construct by assuming pointer from _right auto_handle
        auto_handle(auto_handle<_element_type> % _right )
                : m_handle( _right.release() )
        {
        }

        template<typename _other_type>
        auto_handle( auto_handle<_other_type> % _right )
                : m_handle( _right.release() )
        {
        }

        // assign compatible _right
        auto_handle<_element_type> % operator=(
            auto_handle<_element_type> % _right )
        {
            reset( _right.release() );
            return *this;
        }


        template<typename _other_type>
        auto_handle<_element_type> % operator=(
            auto_handle<_other_type> % _right )
        {
            reset( _right.release() );
            return *this;
        }

        _element_type ^ get()
        {
            return m_handle;
        }

        // return pointer to class object (assume pointer)
        _element_type ^ operator->()
        {
            return m_handle;
        }

        // for use when auto_handle appears in a conditional
        operator _detail_class::_safe_bool()
        {
            return valid() ? _detail_class::_safe_true : _detail_class::_safe_false;
        }

        // for use when auto_handle appears in a conditional
        bool operator!()
        {
            return ! valid();
        }


        template<typename _other_type>
        operator auto_handle<_other_type>()
        {
            return auto_handle<_other_type>( *this );
        }

        void swap( auto_handle<_element_type> % _right )
        {
                        auto_handle<_element_type> tmp = _right;
                        _right = *this;
                        *this = tmp;
        }

        void reset( _element_type ^ _new_ptr )
        {
            if( m_handle != _new_ptr )
            {
                if( valid() )
                {
                    delete m_handle;
                }
                m_handle = _new_ptr;
            }
        }

        void reset( )
        {
            reset(nullptr);
        }

        _element_type ^ release()
        {
            _element_type ^_tmp_ptr = m_handle;
            m_handle = nullptr;
            return _tmp_ptr;
        }

        // destroy the object
        ~auto_handle()
        {
            if( valid() )
            {
                delete m_handle;
            }
        }

        private:

        bool valid()
        {
            // see if the managed resource is in the invalid state.
            return m_handle != nullptr;

        }

        // the wrapped object
        _element_type ^ m_handle;
    };

    // swap the contents of two auto_handle objects
    template<typename _element_type>
    void swap( auto_handle<_element_type> % _left,
               auto_handle<_element_type> % _right )
    {
        _left.swap( _right );
    }

} // namespace msclr

#define _INC_MSCLR_AUTO_HANDLE

#endif  /* !defined (_INC_MSCLR_AUTO_HANDLE) */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\msclr\gcroot.h ===
/***
*gcroot.h
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:  Template class that wraps GCHandle from mscorlib.dll.
*
*       Use this class to declare gc "pointers" that live in the C++ heap.
*
*       Example:
*               struct StringList {
*                       msclr::gcroot<String^> str;
*                       StringList *next;
*                       StringList(); // should have ctors and dtors
*                       ~StringList();
*               };
*
*       By convention, we maintain a 1-to-1 relationship between C++ objects
*       and the handle slots they "point" to.  Thus, two distinct C++ objects
*       always refer to two distinct handles, even if they "point" to the same
*       object.  Therefore, when the C++ object is destroyed, its handle can
*       be freed without error.
*
*       Note that we cannot currently embed a GCHandle directly in an unmanaged C++
*       class.  We therefore store a void*, and use the conversion methods of
*       GCHandle to reconstitute a GCHandle from the void* on demand.
*
*   [Public]
*
****/

#pragma once

#if !defined (_INC_MSCLR_GCROOT)
#define _INC_MSCLR_GCROOT
#ifndef RC_INVOKED

#include <stddef.h>


#ifdef __cplusplus_cli
 #define __GCHANDLE_TO_VOIDPTR(x) ((GCHandle::operator System::IntPtr(x)).ToPointer())
 #define __VOIDPTR_TO_GCHANDLE(x) (GCHandle::operator GCHandle(System::IntPtr(x)))
 #define __NULLPTR nullptr
#else  /* __cplusplus_cli */
 #define __GCHANDLE_TO_VOIDPTR(x) ((GCHandle::op_Explicit(x)).ToPointer())
 #define __VOIDPTR_TO_GCHANDLE(x) (GCHandle::op_Explicit(x))
 #define __NULLPTR 0
#endif  /* __cplusplus_cli */

#ifndef __DEFINE_GCROOT_IN_GLOBAL_NAMESPACE
namespace msclr
{
#endif  /* __DEFINE_GCROOT_IN_GLOBAL_NAMESPACE */

template <class T> struct gcroot {

        typedef System::Runtime::InteropServices::GCHandle GCHandle;

        // always allocate a new handle during construction (see above)
        //
        [System::Diagnostics::DebuggerStepThroughAttribute]
        gcroot() {
                _handle = __GCHANDLE_TO_VOIDPTR(GCHandle::Alloc(__NULLPTR));
        }

        // this can't be T& here because & does not yet work on managed types
        // (T should be a pointer anyway).
        //
        gcroot(T t) {
                _handle = __GCHANDLE_TO_VOIDPTR(GCHandle::Alloc(t));
        }

        gcroot(const gcroot& r) {
                // don't copy a handle, copy what it points to (see above)
                _handle = __GCHANDLE_TO_VOIDPTR(
                                                GCHandle::Alloc(
                                                        __VOIDPTR_TO_GCHANDLE(r._handle).Target ));
        }

        // Since C++ objects and handles are allocated 1-to-1, we can
        // free the handle when the object is destroyed
        //
        [System::Diagnostics::DebuggerStepThroughAttribute]
        ~gcroot() {
                GCHandle g = __VOIDPTR_TO_GCHANDLE(_handle);
                g.Free();
                _handle = 0; // should fail if reconstituted
        }

        [System::Diagnostics::DebuggerStepThroughAttribute]
        gcroot& operator=(T t) {
                // no need to check for valid handle; was allocated in ctor
                __VOIDPTR_TO_GCHANDLE(_handle).Target = t;
                return *this;
        }

        gcroot& operator=(const gcroot &r) {
                // no need to check for valid handle; was allocated in ctor
                T t = (T)r;
                __VOIDPTR_TO_GCHANDLE(_handle).Target = t;
                return *this;
        }

        void swap( gcroot<T> & _right )
        {
                using std::swap;
                swap( _handle, _right._handle );
        }

        operator T () const {
                // gcroot is typesafe, so use static_cast
                return static_cast<T>( __VOIDPTR_TO_GCHANDLE(_handle).Target );
        }

        // don't return T& here because & to gc pointer not yet implemented
        // (T should be a pointer anyway).
        T operator->() const {
                // gcroot is typesafe, so use static_cast
                return static_cast<T>(__VOIDPTR_TO_GCHANDLE(_handle).Target);
        }

private:
        // Don't let anyone copy the handle value directly, or make a copy
        // by taking the address of this object and pointing to it from
        // somewhere else.  The root will be freed when the dtor of this
        // object gets called, and anyone pointing to it still will
        // cause serious harm to the Garbage Collector.
        //
        void* _handle;
        T* operator& ();
};

template<typename T>
void swap( gcroot<T> & _left,
        gcroot<T> & _right )
{
        _left.swap( _right );
}

#ifndef __DEFINE_GCROOT_IN_GLOBAL_NAMESPACE
} // namespace msclr
#endif  /* __DEFINE_GCROOT_IN_GLOBAL_NAMESPACE */

#undef __GCHANDLE_TO_VOIDPTR
#undef __VOIDPTR_TO_GCHANDLE
#undef __NULLPTR

#endif  /* RC_INVOKED */
#endif  /* !defined (_INC_MSCLR_GCROOT) */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\msclr\safebool.h ===
/***
*safebool.h - types and constants for implementing the "smart bool" idiom.
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:   Prefer _safe_bool to an implicit conversion to bool. When a
*           type is implicitly convertible to bool, it is also implicitly
*           convertible to any integral type, and this is often not
*           desired.  Instead, provide a conversion to _safe_bool, which
*           is really a pointer to a member function on a dummy struct.
*           This pointer can be evaluated in Boolean context, but it will
*           never be converted to an integral type.
*
*       [Public]
*
****/

#pragma once

#if !defined (_INC_MSCLR_SAFEBOOL)

#ifndef __cplusplus_cli
#error ERROR: msclr libraries are not compatible with /clr:oldSyntax
#endif  /* __cplusplus_cli */

namespace msclr
{

value class _detail_class
{
public:
    value class dummy_struct
    {
    public:
        static initonly System::String^ dummy_string = "";
    };
    typedef System::String^ _safe_bool;
    static _safe_bool const _safe_true  = dummy_struct::dummy_string;
    static _safe_bool const _safe_false = nullptr;
};

}


#define _INC_MSCLR_SAFEBOOL

#endif  /* !defined (_INC_MSCLR_SAFEBOOL) */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\intel\strstr.asm ===
page    ,132
        title   strstr - search for one string inside another
;***
;strstr.asm - search for one string inside another
;
;       Copyright (c) Microsoft Corporation. All rights reserved.
;
;Purpose:
;       defines strstr() - search for one string inside another
;
;*******************************************************************************

        .xlist
        include cruntime.inc
        .list

page
;***
;char *strstr(str1, str2) - search for str2 in str1
;
;Purpose:
;       finds the first occurrence of str2 in str1
;
;Entry:
;       char *str1 - string to search in
;       char *str2 - string to search for
;
;Exit:
;       returns a pointer to the first occurrence of string2 in
;       string1, or NULL if string2 does not occur in string1
;
;Uses:
;
;Exceptions:
;
;*******************************************************************************


__from_strstr_to_strchr proto

        CODESEG

        public  strstr

strstr  proc \
        str1:ptr byte, \
        str2:ptr byte

        OPTION PROLOGUE:NONE, EPILOGUE:NONE

        mov     ecx,[esp + 8]       ; str2 (the string to be searched for)

        push    edi                 ; Preserve edi, ebx and esi
        push    ebx
        push    esi

        mov     dl,[ecx]            ; dl contains first char from str2

        mov     edi,[esp + 10h]     ; str1 (the string to be searched)

        test    dl,dl               ; is str2 empty?
        jz      empty_str2

        mov     dh,[ecx + 1]        ; second char from str2
        test    dh,dh               ; is str2 a one-character string?
        jz      strchr_call         ; if so, go use strchr code

; length of str2 is now known to be > 1 (used later)
; dl contains first char from str2
; dh contains second char from str2
; edi holds str1

findnext:
        mov     esi,edi             ; esi = edi = pointers to somewhere in str1
        mov     ecx,[esp + 14h]     ; str2

;use edi instead of esi to eliminate AGI
        mov     al,[edi]            ; al is next char from str1

        add     esi,1               ; increment pointer into str1

        cmp     al,dl
        je      first_char_found

        test    al,al               ; end of str1?
        jz      not_found           ; yes, and no match has been found

loop_start:
        mov     al,[esi]            ; put next char from str1 into al
        add     esi,1               ; increment pointer in str1
in_loop:
        cmp     al,dl
        je      first_char_found

        test    al,al               ; end of str1?
        jnz     loop_start          ; no, go get another char from str1

not_found:
        pop     esi
        pop     ebx
        pop     edi
        xor     eax,eax
        ret

; recall that dh contains the second char from str2

first_char_found:
        mov     al,[esi]            ; put next char from str1 into al
        add     esi,1

        cmp     al,dh               ; compare second chars
        jnz     in_loop             ; no match, continue search

two_first_chars_equal:
        lea     edi,[esi - 1]       ; store position of last read char in str1

compare_loop:
        mov     ah,[ecx + 2]        ; put next char from str2 into ah
        test    ah,ah               ; end of str2?
        jz      match               ; if so, then a match has been found

        mov     al,[esi]            ; get next char from str1
        add     esi,2               ; bump pointer into str1 by 2

        cmp     al,ah               ; are chars from str1 and str2 equal?
        jne     findnext            ; no

; do one more iteration

        mov     al,[ecx + 3]        ; put the next char from str2 into al
        test    al,al               ; end of str2
        jz      match               ; if so, then a match has been found

        mov     ah,[esi - 1]        ; get next char from str1
        add     ecx,2               ; bump pointer in str1 by 2
        cmp     al,ah               ; are chars from str1 and str2 equal?
        je      compare_loop

; no match. test some more chars (to improve execution time for bad strings).

        jmp     findnext

; str2 string contains only one character so it's like the strchr functioin

strchr_call:
        xor     eax,eax
        pop     esi
        pop     ebx
        pop     edi
        mov     al,dl
        jmp     __from_strstr_to_strchr

;
;
; Match!  Return (ebx - 1)
;
match:
        lea     eax,[edi - 1]
        pop     esi
        pop     ebx
        pop     edi
        ret

empty_str2:           ; empty target string, return src (ANSI mandated)
        mov     eax,edi
        pop     esi
        pop     ebx
        pop     edi
        ret

strstr  endp
        end
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\msclr\all.h ===
/***
*all.h
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:   Header file to include all MSL functionality
*
*       [Public]
*
****/

#pragma once

#if !defined (_INC_MSCLR_ALL)

#ifndef __cplusplus_cli
#error ERROR: msclr libraries are not compatible with /clr:oldSyntax
#endif  /* __cplusplus_cli */

#include <msclr\appdomain.h>
#include <msclr\auto_gcroot.h>
#include <msclr\auto_handle.h>
#include <msclr\event.h>
#include <msclr\lock.h>
#include <msclr\gcroot.h>
#include <msclr\com\ptr.h>

#define _INC_MSCLR_ALL

#endif  /* !defined (_INC_MSCLR_ALL) */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\sys\locking.h ===
/***
*sys/locking.h - flags for locking() function
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       This file defines the flags for the locking() function.
*       [System V]
*
*       [Public]
*
****/

#if _MSC_VER > 1000
#pragma once
#endif  /* _MSC_VER > 1000 */

#ifndef _INC_LOCKING
#define _INC_LOCKING

#if !defined (_WIN32)
#error ERROR: Only Win32 target supported!
#endif  /* !defined (_WIN32) */

#ifndef _CRTBLD
/* This version of the header files is NOT for user programs.
 * It is intended for use when building the C runtimes ONLY.
 * The version intended for public use will not have this message.
 */
#error ERROR: Use of C runtime library internal header file.
#endif  /* _CRTBLD */

#define _LK_UNLCK       0       /* unlock the file region */
#define _LK_LOCK        1       /* lock the file region */
#define _LK_NBLCK       2       /* non-blocking lock */
#define _LK_RLCK        3       /* lock for writing */
#define _LK_NBRLCK      4       /* non-blocking lock for writing */

#if !__STDC__
/* Non-ANSI names for compatibility */
#define LK_UNLCK        _LK_UNLCK
#define LK_LOCK         _LK_LOCK
#define LK_NBLCK        _LK_NBLCK
#define LK_RLCK         _LK_RLCK
#define LK_NBRLCK       _LK_NBRLCK
#endif  /* !__STDC__ */

#endif  /* _INC_LOCKING */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\sys\stat.h ===
/***
*sys/stat.h - defines structure used by stat() and fstat()
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       This file defines the structure used by the _stat() and _fstat()
*       routines.
*       [System V]
*
*       [Public]
*
****/

#if _MSC_VER > 1000
#pragma once
#endif  /* _MSC_VER > 1000 */

#ifndef _INC_STAT
#define _INC_STAT

#if !defined (_WIN32)
#error ERROR: Only Win32 target supported!
#endif  /* !defined (_WIN32) */

#include <crtdefs.h>

#ifndef _CRTBLD
/* This version of the header files is NOT for user programs.
 * It is intended for use when building the C runtimes ONLY.
 * The version intended for public use will not have this message.
 */
#error ERROR: Use of C runtime library internal header file.
#endif  /* _CRTBLD */

#ifdef _MSC_VER
#pragma pack(push,_CRT_PACKING)
#endif  /* _MSC_VER */

#ifdef __cplusplus
extern "C" {
#endif  /* __cplusplus */

#ifndef _INTERNAL_IFSTRIP_
#include <cruntime.h>
#endif  /* _INTERNAL_IFSTRIP_ */


/* Define _CRTIMP */

#ifndef _CRTIMP
#ifdef CRTDLL
#define _CRTIMP __declspec(dllexport)
#else  /* CRTDLL */
#ifdef _DLL
#define _CRTIMP __declspec(dllimport)
#else  /* _DLL */
#define _CRTIMP
#endif  /* _DLL */
#endif  /* CRTDLL */
#endif  /* _CRTIMP */


/* Define __cdecl for non-Microsoft compilers */

#if (!defined (_MSC_VER) && !defined (__cdecl))
#define __cdecl
#endif  /* (!defined (_MSC_VER) && !defined (__cdecl)) */


#include <sys/types.h>

#if !defined (_W64)
#if !defined(__midl) && (defined(_X86_) || defined(_M_IX86)) && _MSC_VER >= 1300
#define _W64 __w64
#else  /* !defined(__midl) && (defined(_X86_) || defined(_M_IX86)) && _MSC_VER >= 1300 */
#define _W64
#endif  /* !defined(__midl) && (defined(_X86_) || defined(_M_IX86)) && _MSC_VER >= 1300 */
#endif  /* !defined (_W64) */

#ifdef _USE_32BIT_TIME_T
#ifdef _WIN64
#include <crtwrn.h>
#pragma _CRT_WARNING( _NO_32BIT_TIME_T )
#undef  _USE_32BIT_TIME_T
#endif  /* _WIN64 */
#endif  /* _USE_32BIT_TIME_T */

#ifndef _TIME32_T_DEFINED
typedef _W64 long __time32_t;   /* 32-bit time value */
#define _TIME32_T_DEFINED
#endif  /* _TIME32_T_DEFINED */

#ifndef _TIME64_T_DEFINED
typedef __int64 __time64_t;     /* 64-bit time value */
#define _TIME64_T_DEFINED
#endif  /* _TIME64_T_DEFINED */

#ifndef _TIME_T_DEFINED
#ifdef _USE_32BIT_TIME_T
typedef __time32_t time_t;      /* time value */
#else  /* _USE_32BIT_TIME_T */
typedef __time64_t time_t;      /* time value */
#endif  /* _USE_32BIT_TIME_T */
#define _TIME_T_DEFINED         /* avoid multiple def's of time_t */
#endif  /* _TIME_T_DEFINED */

#ifndef _WCHAR_T_DEFINED
typedef unsigned short wchar_t;
#define _WCHAR_T_DEFINED
#endif  /* _WCHAR_T_DEFINED */


/* define structure for returning status information */

#ifndef _STAT_DEFINED

struct _stat32 {
        _dev_t     st_dev;
        _ino_t     st_ino;
        unsigned short st_mode;
        short      st_nlink;
        short      st_uid;
        short      st_gid;
        _dev_t     st_rdev;
        _off_t     st_size;
        __time32_t st_atime;
        __time32_t st_mtime;
        __time32_t st_ctime;
        };

#if !__STDC__
/* Non-ANSI names for compatibility */
struct stat {
        _dev_t     st_dev;
        _ino_t     st_ino;
        unsigned short st_mode;
        short      st_nlink;
        short      st_uid;
        short      st_gid;
        _dev_t     st_rdev;
        _off_t     st_size;
        time_t st_atime;
        time_t st_mtime;
        time_t st_ctime;
        };

#endif  /* !__STDC__ */

struct _stat32i64 {
        _dev_t     st_dev;
        _ino_t     st_ino;
        unsigned short st_mode;
        short      st_nlink;
        short      st_uid;
        short      st_gid;
        _dev_t     st_rdev;
        __int64    st_size;
        __time32_t st_atime;
        __time32_t st_mtime;
        __time32_t st_ctime;
        };

struct _stat64i32 {
        _dev_t     st_dev;
        _ino_t     st_ino;
        unsigned short st_mode;
        short      st_nlink;
        short      st_uid;
        short      st_gid;
        _dev_t     st_rdev;
        _off_t     st_size;
        __time64_t st_atime;
        __time64_t st_mtime;
        __time64_t st_ctime;
        };

struct _stat64 {
        _dev_t     st_dev;
        _ino_t     st_ino;
        unsigned short st_mode;
        short      st_nlink;
        short      st_uid;
        short      st_gid;
        _dev_t     st_rdev;
        __int64    st_size;
        __time64_t st_atime;
        __time64_t st_mtime;
        __time64_t st_ctime;
        };

/*
 * We have to have same name for structure and the fuction so as to do the
 * macro magic.we need the structure name and function name the same.
 */
#define __stat64    _stat64

#ifdef _USE_32BIT_TIME_T
#define _fstat      _fstat32
#define _fstati64   _fstat32i64
#define _stat       _stat32
#define _stati64    _stat32i64
#define _wstat      _wstat32
#define _wstati64   _wstat32i64

#else  /* _USE_32BIT_TIME_T */
#define _fstat      _fstat64i32
#define _fstati64   _fstat64
#define _stat       _stat64i32
#define _stati64    _stat64
#define _wstat      _wstat64i32
#define _wstati64   _wstat64

#endif  /* _USE_32BIT_TIME_T */

#define _STAT_DEFINED
#endif  /* _STAT_DEFINED */


#define _S_IFMT         0xF000          /* file type mask */
#define _S_IFDIR        0x4000          /* directory */
#define _S_IFCHR        0x2000          /* character special */
#define _S_IFIFO        0x1000          /* pipe */
#define _S_IFREG        0x8000          /* regular */
#define _S_IREAD        0x0100          /* read permission, owner */
#define _S_IWRITE       0x0080          /* write permission, owner */
#define _S_IEXEC        0x0040          /* execute/search permission, owner */


/* Function prototypes */

_CRTIMP int __cdecl _fstat32(_In_ int _FileDes, _Out_ struct _stat32 * _Stat);
_CRTIMP int __cdecl _stat32(_In_z_ const char * _Name, _Out_ struct _stat32 * _Stat);

_CRTIMP int __cdecl _fstat32i64(_In_ int _FileDes, _Out_ struct _stat32i64 * _Stat);
_CRTIMP int __cdecl _fstat64i32(_In_ int _FileDes, _Out_ struct _stat64i32 * _Stat);
_CRTIMP int __cdecl _fstat64(_In_ int _FileDes, _Out_ struct _stat64 * _Stat);
_CRTIMP int __cdecl _stat32i64(_In_z_ const char * _Name, _Out_ struct _stat32i64 * _Stat);
_CRTIMP int __cdecl _stat64i32(_In_z_ const char * _Name, _Out_ struct _stat64i32 * _Stat);
_CRTIMP int __cdecl _stat64(_In_z_ const char * _Name, _Out_ struct _stat64 * _Stat);

#ifndef _WSTAT_DEFINED

/* also declared in wchar.h */

_CRTIMP int __cdecl _wstat32(_In_z_ const wchar_t * _Name, _Out_ struct _stat32 * _Stat);

_CRTIMP int __cdecl _wstat32i64(_In_z_ const wchar_t * _Name, _Out_ struct _stat32i64 * _Stat);
_CRTIMP int __cdecl _wstat64i32(_In_z_ const wchar_t * _Name, _Out_ struct _stat64i32 * _Stat);
_CRTIMP int __cdecl _wstat64(_In_z_ const wchar_t * _Name, _Out_ struct _stat64 * _Stat);

#define _WSTAT_DEFINED
#endif  /* _WSTAT_DEFINED */

#if !__STDC__

/* Non-ANSI names for compatibility */

#define S_IFMT   _S_IFMT
#define S_IFDIR  _S_IFDIR
#define S_IFCHR  _S_IFCHR
#define S_IFREG  _S_IFREG
#define S_IREAD  _S_IREAD
#define S_IWRITE _S_IWRITE
#define S_IEXEC  _S_IEXEC

#endif  /* !__STDC__ */

/*
 * This file is included for __inlined non stdc functions. i.e. stat and fstat
 */
#if !defined (RC_INVOKED) && !defined (__midl)
#include <sys/stat.inl>
#endif  /* !defined (RC_INVOKED) && !defined (__midl) */

#ifdef __cplusplus
}
#endif  /* __cplusplus */

#ifdef _MSC_VER
#pragma pack(pop)
#endif  /* _MSC_VER */

#endif  /* _INC_STAT */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\intel\_strnicm.asm ===
page    ,132
        title   strnicmp - compare n chars of strings, ignore case
;***
;strnicmp.asm - compare n chars of strings, ignoring case
;
;       Copyright (c) Microsoft Corporation. All rights reserved.
;
;Purpose:
;       defines __ascii_strnicmp() - Compares at most n characters of two
;       strings, without regard to case.
;
;*******************************************************************************

        .xlist
        include cruntime.inc
        .list

page
;***
;int __ascii_strnicmp(first, last, count) - compares count char of strings,
;       ignore case
;
;Purpose:
;       Compare the two strings for lexical order.  Stops the comparison
;       when the following occurs: (1) strings differ, (2) the end of the
;       strings is reached, or (3) count characters have been compared.
;       For the purposes of the comparison, upper case characters are
;       converted to lower case.
;
;       Algorithm:
;       int
;       _strncmpi (first, last, count)
;             char *first, *last;
;             unsigned int count;
;             {
;             int f,l;
;             int result = 0;
;
;             if (count) {
;                     do      {
;                             f = tolower(*first);
;                             l = tolower(*last);
;                             first++;
;                             last++;
;                             } while (--count && f && l && f == l);
;                     result = f - l;
;                     }
;             return(result);
;             }
;
;Entry:
;       char *first, *last - strings to compare
;       unsigned count - maximum number of characters to compare
;
;Exit:
;       returns <0 if first < last
;       returns 0 if first == last
;       returns >0 if first > last
;
;Uses:
;
;Exceptions:
;
;*******************************************************************************

        CODESEG

        public  __ascii_strnicmp
__ascii_strnicmp proc \
        uses edi esi ebx, \
        first:ptr byte, \
        last:ptr byte, \
        count:IWORD

        mov     ecx,[count]     ; cx = byte count
        or      ecx,ecx
        jz      toend           ; if count = 0, we are done

        mov     esi,[first]     ; si = first string
        mov     edi,[last]      ; di = last string

        mov     bh,'A'
        mov     bl,'Z'
        mov     dh,'a'-'A'      ; add to cap to make lower

        align   4

lupe:
        mov     ah,[esi]        ; *first

        or      ah,ah           ; see if *first is null

        mov     al,[edi]        ; *last

        jz      short eject     ;   jump if *first is null

        or      al,al           ; see if *last is null
        jz      short eject     ;   jump if so

        add     esi,1           ; first++
        add     edi,1           ; last++

        cmp     ah,bh           ; 'A'
        jb      short skip1

        cmp     ah,bl           ; 'Z'
        ja      short skip1

        add     ah,dh           ; make lower case

skip1:
        cmp     al,bh           ; 'A'
        jb      short skip2

        cmp     al,bl           ; 'Z'
        ja      short skip2

        add     al,dh           ; make lower case

skip2:
        cmp     ah,al           ; *first == *last ??
        jne     short differ

        sub     ecx,1
        jnz     short lupe

eject:
        xor     ecx,ecx
        cmp     ah,al           ; compare the (possibly) differing bytes
        je      short toend     ; both zero; return 0

differ:
        mov     ecx,-1          ; assume last is bigger (* can't use 'or' *)
        jb      short toend     ; last is, in fact, bigger (return -1)
        neg     ecx             ; first is bigger (return 1)

toend:
        mov     eax,ecx

        ret                     ; _cdecl return

__ascii_strnicmp endp
         end
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\sys\stat.inl ===
/***
*stat.inl - inline definitions for low-level file handling and I/O functions
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       This file contains the function definitions for the low-level
*       file handling and I/O functions.
*
*       [Public]
*
****/

#if _MSC_VER > 1000
#pragma once
#endif  /* _MSC_VER > 1000 */

#if !defined (__CRTDECL)
#if defined (_M_CEE_PURE)
#define __CRTDECL
#else  /* defined (_M_CEE_PURE) */
#define __CRTDECL   __cdecl
#endif  /* defined (_M_CEE_PURE) */
#endif  /* !defined (__CRTDECL) */

#ifndef _INC_STAT_INL
#define _INC_STAT_INL

/* _STATIC_ASSERT is for enforcing boolean/integral conditions at compile time.
   Since it is purely a compile-time mechanism that generates no code, the check
   is left in even if _DEBUG is not defined. */

#ifndef _STATIC_ASSERT
#define _STATIC_ASSERT(expr) typedef char __static_assert_t[ (expr) ]
#endif  /* _STATIC_ASSERT */

#if !__STDC__

/* Non-ANSI names for compatibility */

#ifdef _USE_32BIT_TIME_T
static __inline int __CRTDECL fstat(int _Desc, struct stat * _Stat)
{
    _STATIC_ASSERT( sizeof(struct stat) == sizeof(struct _stat32) );
    return _fstat32(_Desc,(struct _stat32 *)_Stat);
}
static __inline int __CRTDECL stat(const char * _Filename, struct stat * _Stat)
{
    _STATIC_ASSERT( sizeof(struct stat) == sizeof(struct _stat32) );
    return _stat32(_Filename,(struct _stat32 *)_Stat);
}
#else  /* _USE_32BIT_TIME_T */
static __inline int __CRTDECL fstat(int _Desc, struct stat * _Stat)
{
    _STATIC_ASSERT( sizeof(struct stat) == sizeof(struct _stat64i32) );
    return _fstat64i32(_Desc,(struct _stat64i32 *)_Stat);
}
static __inline int __CRTDECL stat(const char * _Filename, struct stat * _Stat)
{
    _STATIC_ASSERT( sizeof(struct stat) == sizeof(struct _stat64i32) );
    return _stat64i32(_Filename,(struct _stat64i32 *)_Stat);
}
#endif  /* _USE_32BIT_TIME_T */
#endif  /* !__STDC__ */

#endif  /* _INC_STAT_INL */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\sys\timeb.inl ===
/***
*timeb.inl - inline definitions for low-level file handling and I/O functions
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       This file contains the definition of the _ftime() function.
*
*       [Public]
*
****/

#if _MSC_VER > 1000
#pragma once
#endif  /* _MSC_VER > 1000 */

#if !defined (__CRTDECL)
#if defined (_M_CEE_PURE)
#define __CRTDECL
#else  /* defined (_M_CEE_PURE) */
#define __CRTDECL   __cdecl
#endif  /* defined (_M_CEE_PURE) */
#endif  /* !defined (__CRTDECL) */

#ifndef _INC_TIMEB_INL
#define _INC_TIMEB_INL

/* _STATIC_ASSERT is for enforcing boolean/integral conditions at compile time.
   Since it is purely a compile-time mechanism that generates no code, the check
   is left in even if _DEBUG is not defined. */

#ifndef _STATIC_ASSERT
#define _STATIC_ASSERT(expr) typedef char __static_assert_t[ (expr) ]
#endif  /* _STATIC_ASSERT */

#if !__STDC__

/* Non-ANSI name for compatibility */

#pragma warning(push)
#pragma warning(disable:4996)

#ifdef _USE_32BIT_TIME_T
static __inline void __CRTDECL ftime(struct timeb * _Tmb)
{
    _STATIC_ASSERT( sizeof(struct timeb) == sizeof(struct __timeb32) );
    _ftime32((struct __timeb32 *)_Tmb);
}
#else  /* _USE_32BIT_TIME_T */
static __inline void __CRTDECL ftime(struct timeb * _Tmb)
{
    _STATIC_ASSERT( sizeof(struct timeb) == sizeof(struct __timeb64) );
    _ftime64((struct __timeb64 *)_Tmb);
}
#endif  /* _USE_32BIT_TIME_T */

#pragma warning(pop)

#endif  /* !__STDC__ */

#endif  /* _INC_TIMEB_INL */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\sys\types.h ===
/***
*sys/types.h - types returned by system level calls for file and time info
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       This file defines types used in defining values returned by system
*       level calls for file status and time information.
*       [System V]
*
*       [Public]
*
****/

#if _MSC_VER > 1000
#pragma once
#endif  /* _MSC_VER > 1000 */

#ifndef _INC_TYPES
#define _INC_TYPES

#if !defined (_WIN32)
#error ERROR: Only Win32 target supported!
#endif  /* !defined (_WIN32) */

#ifndef _CRTBLD
/* This version of the header files is NOT for user programs.
 * It is intended for use when building the C runtimes ONLY.
 * The version intended for public use will not have this message.
 */
#error ERROR: Use of C runtime library internal header file.
#endif  /* _CRTBLD */

#if !defined (_W64)
#if !defined(__midl) && (defined(_X86_) || defined(_M_IX86)) && _MSC_VER >= 1300
#define _W64 __w64
#else  /* !defined(__midl) && (defined(_X86_) || defined(_M_IX86)) && _MSC_VER >= 1300 */
#define _W64
#endif  /* !defined(__midl) && (defined(_X86_) || defined(_M_IX86)) && _MSC_VER >= 1300 */
#endif  /* !defined (_W64) */

#ifdef _USE_32BIT_TIME_T
#ifdef _WIN64
#include <crtwrn.h>
#pragma _CRT_WARNING( _NO_32BIT_TIME_T )
#undef  _USE_32BIT_TIME_T
#endif  /* _WIN64 */
#endif  /* _USE_32BIT_TIME_T */

#ifndef _TIME32_T_DEFINED
typedef _W64 long __time32_t;   /* 32-bit time value */
#define _TIME32_T_DEFINED
#endif  /* _TIME32_T_DEFINED */

#ifndef _TIME64_T_DEFINED
typedef __int64 __time64_t;     /* 64-bit time value */
#define _TIME64_T_DEFINED
#endif  /* _TIME64_T_DEFINED */

#ifndef _TIME_T_DEFINED
#ifdef _USE_32BIT_TIME_T
typedef __time32_t time_t;      /* time value */
#else  /* _USE_32BIT_TIME_T */
typedef __time64_t time_t;      /* time value */
#endif  /* _USE_32BIT_TIME_T */
#define _TIME_T_DEFINED         /* avoid multiple def's of time_t */
#endif  /* _TIME_T_DEFINED */


#ifndef _INO_T_DEFINED

typedef unsigned short _ino_t;          /* i-node number (not used on DOS) */

#if !__STDC__
/* Non-ANSI name for compatibility */
typedef unsigned short ino_t;
#endif  /* !__STDC__ */

#define _INO_T_DEFINED
#endif  /* _INO_T_DEFINED */


#ifndef _DEV_T_DEFINED

typedef unsigned int _dev_t;            /* device code */

#if !__STDC__
/* Non-ANSI name for compatibility */
typedef unsigned int dev_t;
#endif  /* !__STDC__ */

#define _DEV_T_DEFINED
#endif  /* _DEV_T_DEFINED */


#ifndef _OFF_T_DEFINED

typedef long _off_t;                    /* file offset value */

#if !__STDC__
/* Non-ANSI name for compatibility */
typedef long off_t;
#endif  /* !__STDC__ */

#define _OFF_T_DEFINED
#endif  /* _OFF_T_DEFINED */

#endif  /* _INC_TYPES */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\sys\utime.inl ===
/***
*utime.inl - inline definitions for time handling functions
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       This file contains the definition of the _utime() function.
*
*       [Public]
*
****/

#if _MSC_VER > 1000
#pragma once
#endif  /* _MSC_VER > 1000 */

#if !defined (__CRTDECL)
#if defined (_M_CEE_PURE)
#define __CRTDECL
#else  /* defined (_M_CEE_PURE) */
#define __CRTDECL   __cdecl
#endif  /* defined (_M_CEE_PURE) */
#endif  /* !defined (__CRTDECL) */

#ifndef _INC_UTIME_INL
#define _INC_UTIME_INL

/* _STATIC_ASSERT is for enforcing boolean/integral conditions at compile time.
   Since it is purely a compile-time mechanism that generates no code, the check
   is left in even if _DEBUG is not defined. */

#ifndef _STATIC_ASSERT
#define _STATIC_ASSERT(expr) typedef char __static_assert_t[ (expr) ]
#endif  /* _STATIC_ASSERT */

#ifdef _USE_32BIT_TIME_T
static __inline int __CRTDECL _utime(const char * _Filename, struct _utimbuf * _Utimbuf)
{
    _STATIC_ASSERT( sizeof(struct _utimbuf) == sizeof(struct __utimbuf32) );
    return _utime32(_Filename,(struct __utimbuf32 *)_Utimbuf);
}
static __inline int __CRTDECL _futime(int _Desc, struct _utimbuf * _Utimbuf)
{
    _STATIC_ASSERT( sizeof(struct _utimbuf) == sizeof(struct __utimbuf32) );
    return _futime32(_Desc,(struct __utimbuf32 *)_Utimbuf);
}
static __inline int __CRTDECL _wutime(const wchar_t * _Filename, struct _utimbuf * _Utimbuf)
{
    _STATIC_ASSERT( sizeof(struct _utimbuf) == sizeof(struct __utimbuf32) );
    return _wutime32(_Filename,(struct __utimbuf32 *)_Utimbuf);
}
#else  /* _USE_32BIT_TIME_T */
static __inline int __CRTDECL _utime(const char * _Filename, struct _utimbuf * _Utimbuf)
{
    _STATIC_ASSERT( sizeof(struct _utimbuf) == sizeof(struct __utimbuf64) );
    return _utime64(_Filename,(struct __utimbuf64 *)_Utimbuf);
}
static __inline int __CRTDECL _futime(int _Desc, struct _utimbuf * _Utimbuf)
{
    _STATIC_ASSERT( sizeof(struct _utimbuf) == sizeof(struct __utimbuf64) );
    return _futime64(_Desc,(struct __utimbuf64 *)_Utimbuf);
}
static __inline int __CRTDECL _wutime(const wchar_t * _Filename, struct _utimbuf * _Utimbuf)
{
    _STATIC_ASSERT( sizeof(struct _utimbuf) == sizeof(struct __utimbuf64) );
    return _wutime64(_Filename,(struct __utimbuf64 *)_Utimbuf);
}
#endif  /* _USE_32BIT_TIME_T */


#if !__STDC__

/* Non-ANSI name for compatibility */

#ifdef _USE_32BIT_TIME_T
static __inline int __CRTDECL utime(const char * _Filename, struct utimbuf * _Utimbuf)
{
    _STATIC_ASSERT( sizeof(struct utimbuf) == sizeof(struct __utimbuf32) );
    return _utime32(_Filename,(struct __utimbuf32 *)_Utimbuf);
}
#else  /* _USE_32BIT_TIME_T */
static __inline int __CRTDECL utime(const char * _Filename, struct utimbuf * _Utimbuf)
{
    _STATIC_ASSERT( sizeof(struct utimbuf) == sizeof(struct __utimbuf64) );
    return _utime64(_Filename,(struct __utimbuf64 *)_Utimbuf);
}
#endif  /* _USE_32BIT_TIME_T */

#endif  /* !__STDC__ */

#endif  /* _INC_UTIME_INL */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\sys\wstat.inl ===
/***
*wstat.inl - inline definitions for low-level file handling and I/O functions
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       This file contains the function definitions for the low-level
*       file handling and I/O functions.
*
*       [Public]
*
****/

#if _MSC_VER > 1000
#pragma once
#endif  /* _MSC_VER > 1000 */

#if !defined (__CRTDECL)
#if defined (_M_CEE_PURE)
#define __CRTDECL
#else  /* defined (_M_CEE_PURE) */
#define __CRTDECL   __cdecl
#endif  /* defined (_M_CEE_PURE) */
#endif  /* !defined (__CRTDECL) */

#ifndef _INC_WSTAT_INL
#define _INC_WSTAT_INL

/* _STATIC_ASSERT is for enforcing boolean/integral conditions at compile time.
   Since it is purely a compile-time mechanism that generates no code, the check
   is left in even if _DEBUG is not defined. */

#ifndef _STATIC_ASSERT
#define _STATIC_ASSERT(expr) typedef char __static_assert_t[ (expr) ]
#endif  /* _STATIC_ASSERT */

#ifdef _USE_32BIT_TIME_T
static __inline int __CRTDECL _wstat(const wchar_t * _Filename, struct _stat * _Stat)
{
    _STATIC_ASSERT( sizeof(struct _stat) == sizeof(struct _stat32) );
    return _wstat32(_Filename,(struct _stat32 *)_Stat);
}
#else  /* _USE_32BIT_TIME_T */
static __inline int __CRTDECL _wstat(const wchar_t * _Filename, struct _stat * _Stat)
{
    _STATIC_ASSERT( sizeof(struct _stat) == sizeof(struct _stat64i32) );
    return _wstat64i32(_Filename,(struct _stat64i32 *)_Stat);
}
#endif  /* _USE_32BIT_TIME_T */

#ifdef _USE_32BIT_TIME_T
static __inline int __CRTDECL _wstati64(const wchar_t * _Filename, struct _stati64 * _Stat)
{
    _STATIC_ASSERT( sizeof(struct _stati64) == sizeof(struct _stat32i64) );
    return _wstat32i64(_Filename,(struct _stat32i64*)_Stat);
}
#else  /* _USE_32BIT_TIME_T */
static __inline int __CRTDECL _wstati64(const wchar_t * _Filename, struct _stati64 * _Stat)
{
    _STATIC_ASSERT( sizeof(struct _stati64) == sizeof(struct _stat64) );
    return _wstat64(_Filename,(struct _stat64*)_Stat);
}
#endif  /* _USE_32BIT_TIME_T */

#endif  /* _INC_WSTAT_INL */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\msclr\event.h ===
/***
*event.h
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:   delegate_proxy_factory class
*
*       [Public]
*
****/

#pragma once

#ifndef __cplusplus_cli
#error ERROR: msclr libraries are not compatible with /clr:oldSyntax
#endif  /* __cplusplus_cli */

#include <gcroot.h>

namespace msclr {
    namespace delegate_map {
        namespace internal {

        template <typename CLASS> class delegate_proxy_factory
        {
            typedef typename CLASS::delegate_proxy_type proxy_type;
            gcroot<proxy_type^> m_gc_managed_native_delegate_proxy;

            public:
            delegate_proxy_factory() {}

            virtual ~delegate_proxy_factory()
            {
                if((proxy_type^)m_gc_managed_native_delegate_proxy != nullptr)
                {
                    m_gc_managed_native_delegate_proxy->detach();
                }
            }

            proxy_type^ get_proxy(CLASS* pNativeTarget)
            {
                if((proxy_type^)m_gc_managed_native_delegate_proxy == nullptr)
                {
                    m_gc_managed_native_delegate_proxy = gcnew proxy_type(pNativeTarget);
                }
                return (proxy_type^)m_gc_managed_native_delegate_proxy;
            }
        };

        }
    }
}


#define BEGIN_DELEGATE_MAP(CLASS)\
        ref class delegate_proxy_type;\
        msclr::delegate_map::internal::delegate_proxy_factory<CLASS> m_delegate_map_proxy;\
        \
        ref class delegate_proxy_type\
        {\
                CLASS* m_p_native_target;\
        public:\
                delegate_proxy_type(CLASS* pNativeTarget) : m_p_native_target(pNativeTarget) {}\
                void detach() { m_p_native_target = NULL; }

#define EVENT_DELEGATE_ENTRY(MEMBER,ARG0,ARG1)\
        void MEMBER(ARG0 arg0,ARG1 arg1)\
        {\
                if(m_p_native_target == NULL)\
                throw gcnew System::ArgumentNullException("Delegate call failed: Native sink was not attached or has already detached from the managed proxy (m_p_native_target == NULL). Hint: see if native sink was destructed or not constructed properly");\
                \
                m_p_native_target->MEMBER(arg0,arg1);\
        }

#define END_DELEGATE_MAP()\
        };

#define MAKE_DELEGATE(DELEGATE,MEMBER)\
        gcnew DELEGATE(m_delegate_map_proxy.get_proxy(this),&delegate_proxy_type::MEMBER)
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\sys\timeb.h ===
/***
*sys/timeb.h - definition/declarations for _ftime()
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       This file define the _ftime() function and the types it uses.
*       [System V]
*
*       [Public]
*
****/

#if _MSC_VER > 1000
#pragma once
#endif  /* _MSC_VER > 1000 */

#ifndef _INC_TIMEB
#define _INC_TIMEB

#include <crtdefs.h>

#if !defined (_WIN32)
#error ERROR: Only Win32 target supported!
#endif  /* !defined (_WIN32) */

#ifndef _CRTBLD
/* This version of the header files is NOT for user programs.
 * It is intended for use when building the C runtimes ONLY.
 * The version intended for public use will not have this message.
 */
#error ERROR: Use of C runtime library internal header file.
#endif  /* _CRTBLD */

#ifdef _MSC_VER
#pragma pack(push,_CRT_PACKING)
#endif  /* _MSC_VER */

#ifdef __cplusplus
extern "C" {
#endif  /* __cplusplus */

#ifndef _INTERNAL_IFSTRIP_
#include <cruntime.h>
#endif  /* _INTERNAL_IFSTRIP_ */


/* Define _CRTIMP */

#ifndef _CRTIMP
#ifdef CRTDLL
#define _CRTIMP __declspec(dllexport)
#else  /* CRTDLL */
#ifdef _DLL
#define _CRTIMP __declspec(dllimport)
#else  /* _DLL */
#define _CRTIMP
#endif  /* _DLL */
#endif  /* CRTDLL */
#endif  /* _CRTIMP */


/* Define __cdecl for non-Microsoft compilers */

#if (!defined (_MSC_VER) && !defined (__cdecl))
#define __cdecl
#endif  /* (!defined (_MSC_VER) && !defined (__cdecl)) */


#if !defined (_W64)
#if !defined(__midl) && (defined(_X86_) || defined(_M_IX86)) && _MSC_VER >= 1300
#define _W64 __w64
#else  /* !defined(__midl) && (defined(_X86_) || defined(_M_IX86)) && _MSC_VER >= 1300 */
#define _W64
#endif  /* !defined(__midl) && (defined(_X86_) || defined(_M_IX86)) && _MSC_VER >= 1300 */
#endif  /* !defined (_W64) */

#ifdef _USE_32BIT_TIME_T
#ifdef _WIN64
#include <crtwrn.h>
#pragma _CRT_WARNING( _NO_32BIT_TIME_T )
#undef  _USE_32BIT_TIME_T
#endif  /* _WIN64 */
#endif  /* _USE_32BIT_TIME_T */

#ifndef _TIME32_T_DEFINED
typedef _W64 long __time32_t;   /* 32-bit time value */
#define _TIME32_T_DEFINED
#endif  /* _TIME32_T_DEFINED */

#ifndef _TIME64_T_DEFINED
typedef __int64 __time64_t;     /* 64-bit time value */
#define _TIME64_T_DEFINED
#endif  /* _TIME64_T_DEFINED */

#ifndef _TIME_T_DEFINED
#ifdef _USE_32BIT_TIME_T
typedef __time32_t time_t;      /* time value */
#else  /* _USE_32BIT_TIME_T */
typedef __time64_t time_t;      /* time value */
#endif  /* _USE_32BIT_TIME_T */
#define _TIME_T_DEFINED         /* avoid multiple def's of time_t */
#endif  /* _TIME_T_DEFINED */

/* Structure returned by _ftime system call */

#ifndef _TIMEB_DEFINED
struct __timeb32 {
        __time32_t time;
        unsigned short millitm;
        short timezone;
        short dstflag;
        };

#if !__STDC__

/* Non-ANSI name for compatibility */
struct timeb {
        time_t time;
        unsigned short millitm;
        short timezone;
        short dstflag;
        };


#endif  /* !__STDC__ */

struct __timeb64 {
        __time64_t time;
        unsigned short millitm;
        short timezone;
        short dstflag;
        };

#ifdef _USE_32BIT_TIME_T

#define _timeb      __timeb32
#define _ftime      _ftime32
#define _ftime_s    _ftime32_s

#else  /* _USE_32BIT_TIME_T */

#define _timeb      __timeb64
#define _ftime      _ftime64
#define _ftime_s    _ftime64_s

#endif  /* _USE_32BIT_TIME_T */
#define _TIMEB_DEFINED
#endif  /* _TIMEB_DEFINED */

#include <crtdefs.h>

/* Function prototypes */

_CRT_INSECURE_DEPRECATE(_ftime32_s) _CRTIMP void __cdecl _ftime32(_Out_ struct __timeb32 * _Time);
_CRTIMP errno_t __cdecl _ftime32_s(_Out_ struct __timeb32 * _Time);
_CRT_INSECURE_DEPRECATE(_ftime64_s) _CRTIMP void __cdecl _ftime64(_Out_ struct __timeb64 * _Time);
_CRTIMP errno_t __cdecl _ftime64_s(_Out_ struct __timeb64 * _Time);

#if !defined (RC_INVOKED) && !defined (__midl)
#include <sys/timeb.inl>
#endif  /* !defined (RC_INVOKED) && !defined (__midl) */

#ifdef __cplusplus
}
#endif  /* __cplusplus */

#ifdef _MSC_VER
#pragma pack(pop)
#endif  /* _MSC_VER */

#endif  /* _INC_TIMEB */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\msclr\lock.h ===
/***
*lock.h
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:   lock class for automatically acquiring/releasing
*           the monitor lock on managed types.
*
*       [Public]
*
****/

#pragma once

#if !defined (_INC_MSCLR_LOCK)

#ifndef __cplusplus_cli
#error ERROR: msclr libraries are not compatible with /clr:oldSyntax
#endif  /* __cplusplus_cli */

#using <mscorlib.dll>
#include <msclr\safebool.h>
#if !defined (_M_CEE_SAFE)
#include <vcclr.h>
#endif  /* !defined (_M_CEE_SAFE) */

namespace msclr
{

    // The lock_when enumeration is used to defer the lock object
    // from taking the lock.
    enum lock_when { lock_later };

    ref class lock
    {
    private:
        System::Object ^ m_object;
        bool             m_locked;

        template<class T,class U> value struct is_not { typedef int __dont_use_this_type__; };
        template<class T> value struct is_not<T,T> { };

    public:
        // By default, take the lock immediately with an infinite timeout.
        // Accept an optional timespan (in milliseconds) and throw on failure or timeout.
        template<class T> lock( T ^ _object)
            : m_object( _object ),
              m_locked( false )
        {
            // ensure that T is not a ReaderWriterLock.
            is_not<T, System::Threading::ReaderWriterLock>::__dont_use_this_type__ _Diagnostic;
            (_Diagnostic);

            acquire(System::Threading::Timeout::Infinite);
        }

        template<class T> lock( T ^ _object, int _timeout )
            : m_object( _object ),
              m_locked( false )
        {
            // ensure that T is not a ReaderWriterLock.
            is_not<T, System::Threading::ReaderWriterLock>::__dont_use_this_type__ _Diagnostic;
            (_Diagnostic);

            acquire( _timeout );
        }

        // By default, take the lock immediately within the specified timespan
        // and throw on failure or timeout.
        template<class T> lock( T ^ _object, System::TimeSpan _timeout )
            : m_object( _object ),
              m_locked( false )
        {
            // ensure that T is not a ReaderWriterLock.
            is_not<T, System::Threading::ReaderWriterLock>::__dont_use_this_type__ _Diagnostic;
            (_Diagnostic);

            acquire( _timeout );
        }

        // If you use the "lock_later" enumeration, it causes lock
        // to defer taking the lock.
        template<class T> lock( T ^ _object, lock_when )
            : m_object( _object ),
              m_locked( false )
        {
            // ensure that T is not a ReaderWriterLock.
            is_not<T, System::Threading::ReaderWriterLock>::__dont_use_this_type__ _Diagnostic;
            (_Diagnostic);
        }

#if !defined (_M_CEE_SAFE)
        template<class T> lock( gcroot<T ^> _object)
            : m_object( _object ),
              m_locked( false )
        {
            // ensure that T is not a ReaderWriterLock.
            is_not<T, System::Threading::ReaderWriterLock>::__dont_use_this_type__ _Diagnostic;
            (_Diagnostic);

            acquire(System::Threading::Timeout::Infinite);
        }


        template<class T> lock( gcroot<T ^> _object, int _timeout )
            : m_object( _object ),
              m_locked( false )
        {
            // ensure that T is not a ReaderWriterLock.
            is_not<T, System::Threading::ReaderWriterLock>::__dont_use_this_type__ _Diagnostic;
            (_Diagnostic);

            acquire( _timeout );
        }

        // By default, take the lock immediately within the specified timespan
        // and throw on failure or timeout.
        template<class T> lock( gcroot<T ^> _object, System::TimeSpan _timeout )
            : m_object( _object ),
              m_locked( false )
        {
            // ensure that T is not a ReaderWriterLock.
            is_not<T, System::Threading::ReaderWriterLock>::__dont_use_this_type__ _Diagnostic;
            (_Diagnostic);

            acquire( _timeout );
        }

        // If you use the "lock_later" enumeration, it causes lock
        // to defer taking the lock.
        template<class T> lock( gcroot<T ^> _object, lock_when )
            : m_object( _object ),
              m_locked( false )
        {
            // ensure that T is not a ReaderWriterLock.
            is_not<T, System::Threading::ReaderWriterLock>::__dont_use_this_type__ _Diagnostic;
            (_Diagnostic);
        }
#endif  /* !defined (_M_CEE_SAFE) */

        // release the lock if it is not currently held
        ~lock()
        {
            release();
        }

        // Check to see if this lock object is currently holding the lock
        bool is_locked()
        {
            return m_locked;
        }

        // Check to see if this lock object is currently holding the lock
        operator _detail_class::_safe_bool()
        {
            return is_locked() ? _detail_class::_safe_true : _detail_class::_safe_false;
        }

        // disallow explicit comparisons to _safe_bool
        template<class T> bool operator==( T t )
        {
            // ensure that T is not a _safe_bool.
            is_not<T, _detail_class::_safe_bool>::__dont_use_this_type__ _Diagnostic;
            (_Diagnostic);

            return m_object == t;
        }

        template<class T> bool operator!=( T t )
        {
            // ensure that T is not a _safe_bool.
            is_not<T, _detail_class::_safe_bool>::__dont_use_this_type__ _Diagnostic;
            (_Diagnostic);

            return m_object != t;
        }

        // Take the lock within the specified timespan, or with an infinite
        // timespan if none is specified. Throw an ApplicationException on timeout.
        void acquire( int _timeout )
        {
            if( ! m_locked )
            {
                if( ! System::Threading::Monitor::TryEnter( m_object, _timeout ) )
                {
                    throw gcnew System::ApplicationException( "lock timeout" );
                }
                m_locked = true;
            }
        }

        void acquire()
        {
            if( ! m_locked )
            {
                if( ! System::Threading::Monitor::TryEnter( m_object,
                          System::Threading::Timeout::Infinite ) )
                {
                    throw gcnew System::ApplicationException( "lock timeout" );
                }
                m_locked = true;
            }
        }

        // Take the lock within the specified timespan.
        // Throw an ApplicationException on timeout.
        void acquire( System::TimeSpan _timeout )
        {
            if( ! m_locked )
            {
                if( ! System::Threading::Monitor::TryEnter( m_object, _timeout ) )
                {
                    throw gcnew System::ApplicationException( "lock timeout" );
                }
                m_locked = true;
            }
        }

        // Try to take the lock within the specified timespan. In the case
        // of timeout, return false.
        bool try_acquire( int _timeout ) // throw()
        {
            if( ! m_locked )
            {
                if( ! System::Threading::Monitor::TryEnter( m_object, _timeout ) )
                {
                    return false;
                }
                m_locked = true;
            }
            return true;
        }

        // Try to take the lock within the specified timespan. In the case
        // of timeout, return false.
        bool try_acquire( System::TimeSpan _timeout ) // throw()
        {
            if( ! m_locked )
            {
                if( ! System::Threading::Monitor::TryEnter( m_object, _timeout ) )
                {
                    return false;
                }
                m_locked = true;
            }
            return true;
        }

        // Release the lock if it is currently held
        void release()
        {
            if( m_locked )
            {
                m_locked = false;
                System::Threading::Monitor::Exit( m_object );
            }
        }
    };
}

#define _INC_MSCLR_LOCK

#endif  /* !defined (_INC_MSCLR_LOCK) */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\msclr\appdomain.h ===
/***
*appdomain.h
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:   Utitily for cross App Domain Calls
*
*       [Public]
*
****/

#pragma once

#if !defined (_INC_MSCLR_APPDOMAIN)

#ifndef __cplusplus_cli
#error ERROR: msclr libraries require /clr and are not compatible with /clr:oldSyntax
#endif  /* __cplusplus_cli */

#ifdef _M_CEE_PURE
#error ERROR: msclr appdomain helpers can only be used in mixed mode. Use a cross-domain delegate in pure mode
#endif  /* _M_CEE_PURE */
#include <mscoree.h>
#include <crtdbg.h>

#if defined (_M_IX86)
#define _MSCLR_STDCALL_DISTINCT 1
#elif defined (_M_IA64)
#define _MSCLR_STDCALL_DISTINCT 0
#elif defined (_M_AMD64)
#define _MSCLR_STDCALL_DISTINCT 0
#else  /* defined (_M_AMD64) */
#error Need to add setting for different CPU
#endif  /* defined (_M_AMD64) */

namespace msclr
{

namespace _detail
{

/* helper functions */

inline
void validate(HRESULT hr)
{
    _ASSERT(SUCCEEDED(hr));
    if (FAILED(hr))
    {
        System::Runtime::InteropServices::Marshal::ThrowExceptionForHR(hr);
    }
}

inline
ICLRRuntimeHost *get_clr_runtime_host(void)
{
    ICLRRuntimeHost *pClrHost = NULL;

    HRESULT hr = CorBindToRuntimeEx(
        NULL,                       // version of the runtime to request
        NULL,                       // flavor of the runtime to request
        0,                          // runtime startup flags
        CLSID_CLRRuntimeHost,       // clsid of ICLRRuntimeHost
        IID_ICLRRuntimeHost,        // IID of ICLRRuntimeHost
        (PVOID*)&pClrHost);         // a pointer to our punk that we get back

    if (FAILED(hr))
    {
        if (pClrHost != NULL)
        {
            pClrHost->Release();
        }
        validate(hr);
    }
    return pClrHost;
}

/* callback struct */

/* __stdcall version */

#if _MSCLR_STDCALL_DISTINCT

template <typename RetType>
struct callback_stdcall_struct0
{
    RetType (__stdcall *func)();
    RetType retValue;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_stdcall_struct0 *pcs = (callback_stdcall_struct0*)cookie;
        pcs->retValue = pcs->func();
        hr = S_OK;
        return hr;
    }
};

template <typename RetType, typename ArgType1>
struct callback_stdcall_struct1
{
    RetType (__stdcall *func)(ArgType1);
    RetType retValue;
    ArgType1 arg1;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_stdcall_struct1 *pcs = (callback_stdcall_struct1*)cookie;
        pcs->retValue = pcs->func(pcs->arg1);
        hr = S_OK;
        return hr;
    }
};

template <typename RetType, typename ArgType1, typename ArgType2>
struct callback_stdcall_struct2
{
    RetType (__stdcall *func)(ArgType1, ArgType2);
    RetType retValue;
    ArgType1 arg1;
    ArgType2 arg2;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_stdcall_struct2 *pcs = (callback_stdcall_struct2*)cookie;
        pcs->retValue = pcs->func(pcs->arg1, pcs->arg2);
        hr = S_OK;
        return hr;
    }
};

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3>
struct callback_stdcall_struct3
{
    RetType (__stdcall *func)(ArgType1, ArgType2, ArgType3);
    RetType retValue;
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_stdcall_struct3 *pcs = (callback_stdcall_struct3*)cookie;
        pcs->retValue = pcs->func(pcs->arg1, pcs->arg2, pcs->arg3);
        hr = S_OK;
        return hr;
    }
};

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4>
struct callback_stdcall_struct4
{
    RetType (__stdcall *func)(ArgType1, ArgType2, ArgType3, ArgType4);
    RetType retValue;
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;
    ArgType4 arg4;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_stdcall_struct4 *pcs = (callback_stdcall_struct4*)cookie;
        pcs->retValue = pcs->func(pcs->arg1, pcs->arg2, pcs->arg3, pcs->arg4);
        hr = S_OK;
        return hr;
    }
};

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5>
struct callback_stdcall_struct5
{
    RetType (__stdcall *func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5);
    RetType retValue;
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;
    ArgType4 arg4;
    ArgType5 arg5;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_stdcall_struct5 *pcs = (callback_stdcall_struct5*)cookie;
        pcs->retValue = pcs->func(pcs->arg1, pcs->arg2, pcs->arg3, pcs->arg4, pcs->arg5);
        hr = S_OK;
        return hr;
    }
};

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6>
struct callback_stdcall_struct6
{
    RetType (__stdcall *func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6);
    RetType retValue;
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;
    ArgType4 arg4;
    ArgType5 arg5;
    ArgType6 arg6;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_stdcall_struct6 *pcs = (callback_stdcall_struct6*)cookie;
        pcs->retValue = pcs->func(pcs->arg1, pcs->arg2, pcs->arg3, pcs->arg4, pcs->arg5, pcs->arg6);
        hr = S_OK;
        return hr;
    }
};

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7>
struct callback_stdcall_struct7
{
    RetType (__stdcall *func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7);
    RetType retValue;
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;
    ArgType4 arg4;
    ArgType5 arg5;
    ArgType6 arg6;
    ArgType7 arg7;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_stdcall_struct7 *pcs = (callback_stdcall_struct7*)cookie;
        pcs->retValue = pcs->func(pcs->arg1, pcs->arg2, pcs->arg3, pcs->arg4, pcs->arg5, pcs->arg6, pcs->arg7);
        hr = S_OK;
        return hr;
    }
};

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8>
struct callback_stdcall_struct8
{
    RetType (__stdcall *func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8);
    RetType retValue;
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;
    ArgType4 arg4;
    ArgType5 arg5;
    ArgType6 arg6;
    ArgType7 arg7;
    ArgType8 arg8;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_stdcall_struct8 *pcs = (callback_stdcall_struct8*)cookie;
        pcs->retValue = pcs->func(pcs->arg1, pcs->arg2, pcs->arg3, pcs->arg4, pcs->arg5, pcs->arg6, pcs->arg7, pcs->arg8);
        hr = S_OK;
        return hr;
    }
};

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9>
struct callback_stdcall_struct9
{
    RetType (__stdcall *func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9);
    RetType retValue;
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;
    ArgType4 arg4;
    ArgType5 arg5;
    ArgType6 arg6;
    ArgType7 arg7;
    ArgType8 arg8;
    ArgType9 arg9;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_stdcall_struct9 *pcs = (callback_stdcall_struct9*)cookie;
        pcs->retValue = pcs->func(pcs->arg1, pcs->arg2, pcs->arg3, pcs->arg4, pcs->arg5, pcs->arg6, pcs->arg7, pcs->arg8, pcs->arg9);
        hr = S_OK;
        return hr;
    }
};

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9, typename ArgType10>
struct callback_stdcall_struct10
{
    RetType (__stdcall *func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10);
    RetType retValue;
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;
    ArgType4 arg4;
    ArgType5 arg5;
    ArgType6 arg6;
    ArgType7 arg7;
    ArgType8 arg8;
    ArgType9 arg9;
    ArgType10 arg10;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_stdcall_struct10 *pcs = (callback_stdcall_struct10*)cookie;
        pcs->retValue = pcs->func(pcs->arg1, pcs->arg2, pcs->arg3, pcs->arg4, pcs->arg5, pcs->arg6, pcs->arg7, pcs->arg8, pcs->arg9, pcs->arg10);
        hr = S_OK;
        return hr;
    }
};

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9, typename ArgType10, typename ArgType11>
struct callback_stdcall_struct11
{
    RetType (__stdcall *func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11);
    RetType retValue;
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;
    ArgType4 arg4;
    ArgType5 arg5;
    ArgType6 arg6;
    ArgType7 arg7;
    ArgType8 arg8;
    ArgType9 arg9;
    ArgType10 arg10;
    ArgType11 arg11;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_stdcall_struct11 *pcs = (callback_stdcall_struct11*)cookie;
        pcs->retValue = pcs->func(pcs->arg1, pcs->arg2, pcs->arg3, pcs->arg4, pcs->arg5, pcs->arg6, pcs->arg7, pcs->arg8, pcs->arg9, pcs->arg10, pcs->arg11);
        hr = S_OK;
        return hr;
    }
};

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9, typename ArgType10, typename ArgType11, typename ArgType12>
struct callback_stdcall_struct12
{
    RetType (__stdcall *func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11, ArgType12);
    RetType retValue;
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;
    ArgType4 arg4;
    ArgType5 arg5;
    ArgType6 arg6;
    ArgType7 arg7;
    ArgType8 arg8;
    ArgType9 arg9;
    ArgType10 arg10;
    ArgType11 arg11;
    ArgType12 arg12;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_stdcall_struct12 *pcs = (callback_stdcall_struct12*)cookie;
        pcs->retValue = pcs->func(pcs->arg1, pcs->arg2, pcs->arg3, pcs->arg4, pcs->arg5, pcs->arg6, pcs->arg7, pcs->arg8, pcs->arg9, pcs->arg10, pcs->arg11, pcs->arg12);
        hr = S_OK;
        return hr;
    }
};

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9, typename ArgType10, typename ArgType11, typename ArgType12, typename ArgType13>
struct callback_stdcall_struct13
{
    RetType (__stdcall *func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11, ArgType12, ArgType13);
    RetType retValue;
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;
    ArgType4 arg4;
    ArgType5 arg5;
    ArgType6 arg6;
    ArgType7 arg7;
    ArgType8 arg8;
    ArgType9 arg9;
    ArgType10 arg10;
    ArgType11 arg11;
    ArgType12 arg12;
    ArgType13 arg13;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_stdcall_struct13 *pcs = (callback_stdcall_struct13*)cookie;
        pcs->retValue = pcs->func(pcs->arg1, pcs->arg2, pcs->arg3, pcs->arg4, pcs->arg5, pcs->arg6, pcs->arg7, pcs->arg8, pcs->arg9, pcs->arg10, pcs->arg11, pcs->arg12, pcs->arg13);
        hr = S_OK;
        return hr;
    }
};

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9, typename ArgType10, typename ArgType11, typename ArgType12, typename ArgType13, typename ArgType14>
struct callback_stdcall_struct14
{
    RetType (__stdcall *func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11, ArgType12, ArgType13, ArgType14);
    RetType retValue;
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;
    ArgType4 arg4;
    ArgType5 arg5;
    ArgType6 arg6;
    ArgType7 arg7;
    ArgType8 arg8;
    ArgType9 arg9;
    ArgType10 arg10;
    ArgType11 arg11;
    ArgType12 arg12;
    ArgType13 arg13;
    ArgType14 arg14;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_stdcall_struct14 *pcs = (callback_stdcall_struct14*)cookie;
        pcs->retValue = pcs->func(pcs->arg1, pcs->arg2, pcs->arg3, pcs->arg4, pcs->arg5, pcs->arg6, pcs->arg7, pcs->arg8, pcs->arg9, pcs->arg10, pcs->arg11, pcs->arg12, pcs->arg13, pcs->arg14);
        hr = S_OK;
        return hr;
    }
};

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9, typename ArgType10, typename ArgType11, typename ArgType12, typename ArgType13, typename ArgType14, typename ArgType15>
struct callback_stdcall_struct15
{
    RetType (__stdcall *func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11, ArgType12, ArgType13, ArgType14, ArgType15);
    RetType retValue;
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;
    ArgType4 arg4;
    ArgType5 arg5;
    ArgType6 arg6;
    ArgType7 arg7;
    ArgType8 arg8;
    ArgType9 arg9;
    ArgType10 arg10;
    ArgType11 arg11;
    ArgType12 arg12;
    ArgType13 arg13;
    ArgType14 arg14;
    ArgType15 arg15;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_stdcall_struct15 *pcs = (callback_stdcall_struct15*)cookie;
        pcs->retValue = pcs->func(pcs->arg1, pcs->arg2, pcs->arg3, pcs->arg4, pcs->arg5, pcs->arg6, pcs->arg7, pcs->arg8, pcs->arg9, pcs->arg10, pcs->arg11, pcs->arg12, pcs->arg13, pcs->arg14, pcs->arg15);
        hr = S_OK;
        return hr;
    }
};

struct callback_stdcall_void_struct0
{
    void (__stdcall *func)();

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_stdcall_void_struct0 *pcs = (callback_stdcall_void_struct0*)cookie;
        pcs->func();
        hr = S_OK;
        return hr;
    }
};

template <typename ArgType1>
struct callback_stdcall_void_struct1
{
    void (__stdcall * func)(ArgType1);
    ArgType1 arg1;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_stdcall_void_struct1 *pcs = (callback_stdcall_void_struct1*)cookie;
        pcs->func(pcs->arg1);
        hr = S_OK;
        return hr;
    }
};

template <typename ArgType1, typename ArgType2>
struct callback_stdcall_void_struct2
{
    void (__stdcall * func)(ArgType1, ArgType2);
    ArgType1 arg1;
    ArgType2 arg2;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_stdcall_void_struct2 *pcs = (callback_stdcall_void_struct2*)cookie;
        pcs->func(pcs->arg1, pcs->arg2);
        hr = S_OK;
        return hr;
    }
};

template <typename ArgType1, typename ArgType2, typename ArgType3>
struct callback_stdcall_void_struct3
{
    void (__stdcall * func)(ArgType1, ArgType2, ArgType3);
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_stdcall_void_struct3 *pcs = (callback_stdcall_void_struct3*)cookie;
        pcs->func(pcs->arg1, pcs->arg2, pcs->arg3);
        hr = S_OK;
        return hr;
    }
};

template <typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4>
struct callback_stdcall_void_struct4
{
    void (__stdcall * func)(ArgType1, ArgType2, ArgType3, ArgType4);
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;
    ArgType4 arg4;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_stdcall_void_struct4 *pcs = (callback_stdcall_void_struct4*)cookie;
        pcs->func(pcs->arg1, pcs->arg2, pcs->arg3, pcs->arg4);
        hr = S_OK;
        return hr;
    }
};

template <typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5>
struct callback_stdcall_void_struct5
{
    void (__stdcall * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5);
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;
    ArgType4 arg4;
    ArgType5 arg5;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_stdcall_void_struct5 *pcs = (callback_stdcall_void_struct5*)cookie;
        pcs->func(pcs->arg1, pcs->arg2, pcs->arg3, pcs->arg4, pcs->arg5);
        hr = S_OK;
        return hr;
    }
};

template <typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6>
struct callback_stdcall_void_struct6
{
    void (__stdcall * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6);
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;
    ArgType4 arg4;
    ArgType5 arg5;
    ArgType6 arg6;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_stdcall_void_struct6 *pcs = (callback_stdcall_void_struct6*)cookie;
        pcs->func(pcs->arg1, pcs->arg2, pcs->arg3, pcs->arg4, pcs->arg5, pcs->arg6);
        hr = S_OK;
        return hr;
    }
};

template <typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7>
struct callback_stdcall_void_struct7
{
    void (__stdcall * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7);
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;
    ArgType4 arg4;
    ArgType5 arg5;
    ArgType6 arg6;
    ArgType7 arg7;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_stdcall_void_struct7 *pcs = (callback_stdcall_void_struct7*)cookie;
        pcs->func(pcs->arg1, pcs->arg2, pcs->arg3, pcs->arg4, pcs->arg5, pcs->arg6, pcs->arg7);
        hr = S_OK;
        return hr;
    }
};

template <typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8>
struct callback_stdcall_void_struct8
{
    void (__stdcall * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8);
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;
    ArgType4 arg4;
    ArgType5 arg5;
    ArgType6 arg6;
    ArgType7 arg7;
    ArgType8 arg8;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_stdcall_void_struct8 *pcs = (callback_stdcall_void_struct8*)cookie;
        pcs->func(pcs->arg1, pcs->arg2, pcs->arg3, pcs->arg4, pcs->arg5, pcs->arg6, pcs->arg7, pcs->arg8);
        hr = S_OK;
        return hr;
    }
};

template <typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9>
struct callback_stdcall_void_struct9
{
    void (__stdcall * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9);
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;
    ArgType4 arg4;
    ArgType5 arg5;
    ArgType6 arg6;
    ArgType7 arg7;
    ArgType8 arg8;
    ArgType9 arg9;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_stdcall_void_struct9 *pcs = (callback_stdcall_void_struct9*)cookie;
        pcs->func(pcs->arg1, pcs->arg2, pcs->arg3, pcs->arg4, pcs->arg5, pcs->arg6, pcs->arg7, pcs->arg8, pcs->arg9);
        hr = S_OK;
        return hr;
    }
};

template <typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9, typename ArgType10>
struct callback_stdcall_void_struct10
{
    void (__stdcall * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10);
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;
    ArgType4 arg4;
    ArgType5 arg5;
    ArgType6 arg6;
    ArgType7 arg7;
    ArgType8 arg8;
    ArgType9 arg9;
    ArgType10 arg10;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_stdcall_void_struct10 *pcs = (callback_stdcall_void_struct10*)cookie;
        pcs->func(pcs->arg1, pcs->arg2, pcs->arg3, pcs->arg4, pcs->arg5, pcs->arg6, pcs->arg7, pcs->arg8, pcs->arg9, pcs->arg10);
        hr = S_OK;
        return hr;
    }
};

template <typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9, typename ArgType10, typename ArgType11>
struct callback_stdcall_void_struct11
{
    void (__stdcall * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11);
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;
    ArgType4 arg4;
    ArgType5 arg5;
    ArgType6 arg6;
    ArgType7 arg7;
    ArgType8 arg8;
    ArgType9 arg9;
    ArgType10 arg10;
    ArgType11 arg11;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_stdcall_void_struct11 *pcs = (callback_stdcall_void_struct11*)cookie;
        pcs->func(pcs->arg1, pcs->arg2, pcs->arg3, pcs->arg4, pcs->arg5, pcs->arg6, pcs->arg7, pcs->arg8, pcs->arg9, pcs->arg10, pcs->arg11);
        hr = S_OK;
        return hr;
    }
};

template <typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9, typename ArgType10, typename ArgType11, typename ArgType12>
struct callback_stdcall_void_struct12
{
    void (__stdcall * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11, ArgType12);
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;
    ArgType4 arg4;
    ArgType5 arg5;
    ArgType6 arg6;
    ArgType7 arg7;
    ArgType8 arg8;
    ArgType9 arg9;
    ArgType10 arg10;
    ArgType11 arg11;
    ArgType12 arg12;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_stdcall_void_struct12 *pcs = (callback_stdcall_void_struct12*)cookie;
        pcs->func(pcs->arg1, pcs->arg2, pcs->arg3, pcs->arg4, pcs->arg5, pcs->arg6, pcs->arg7, pcs->arg8, pcs->arg9, pcs->arg10, pcs->arg11, pcs->arg12);
        hr = S_OK;
        return hr;
    }
};

template <typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9, typename ArgType10, typename ArgType11, typename ArgType12, typename ArgType13>
struct callback_stdcall_void_struct13
{
    void (__stdcall * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11, ArgType12, ArgType13);
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;
    ArgType4 arg4;
    ArgType5 arg5;
    ArgType6 arg6;
    ArgType7 arg7;
    ArgType8 arg8;
    ArgType9 arg9;
    ArgType10 arg10;
    ArgType11 arg11;
    ArgType12 arg12;
    ArgType13 arg13;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_stdcall_void_struct13 *pcs = (callback_stdcall_void_struct13*)cookie;
        pcs->func(pcs->arg1, pcs->arg2, pcs->arg3, pcs->arg4, pcs->arg5, pcs->arg6, pcs->arg7, pcs->arg8, pcs->arg9, pcs->arg10, pcs->arg11, pcs->arg12, pcs->arg13);
        hr = S_OK;
        return hr;
    }
};

template <typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9, typename ArgType10, typename ArgType11, typename ArgType12, typename ArgType13, typename ArgType14>
struct callback_stdcall_void_struct14
{
    void (__stdcall * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11, ArgType12, ArgType13, ArgType14);
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;
    ArgType4 arg4;
    ArgType5 arg5;
    ArgType6 arg6;
    ArgType7 arg7;
    ArgType8 arg8;
    ArgType9 arg9;
    ArgType10 arg10;
    ArgType11 arg11;
    ArgType12 arg12;
    ArgType13 arg13;
    ArgType14 arg14;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_stdcall_void_struct14 *pcs = (callback_stdcall_void_struct14*)cookie;
        pcs->func(pcs->arg1, pcs->arg2, pcs->arg3, pcs->arg4, pcs->arg5, pcs->arg6, pcs->arg7, pcs->arg8, pcs->arg9, pcs->arg10, pcs->arg11, pcs->arg12, pcs->arg13, pcs->arg14);
        hr = S_OK;
        return hr;
    }
};

template <typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9, typename ArgType10, typename ArgType11, typename ArgType12, typename ArgType13, typename ArgType14, typename ArgType15>
struct callback_stdcall_void_struct15
{
    void (__stdcall * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11, ArgType12, ArgType13, ArgType14, ArgType15);
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;
    ArgType4 arg4;
    ArgType5 arg5;
    ArgType6 arg6;
    ArgType7 arg7;
    ArgType8 arg8;
    ArgType9 arg9;
    ArgType10 arg10;
    ArgType11 arg11;
    ArgType12 arg12;
    ArgType13 arg13;
    ArgType14 arg14;
    ArgType15 arg15;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_stdcall_void_struct15 *pcs = (callback_stdcall_void_struct15*)cookie;
        pcs->func(pcs->arg1, pcs->arg2, pcs->arg3, pcs->arg4, pcs->arg5, pcs->arg6, pcs->arg7, pcs->arg8, pcs->arg9, pcs->arg10, pcs->arg11, pcs->arg12, pcs->arg13, pcs->arg14, pcs->arg15);
        hr = S_OK;
        return hr;
    }
};

#endif  /* _MSCLR_STDCALL_DISTINCT */

/* __cdecl version */

template <typename RetType>
struct callback_cdecl_struct0
{
    RetType (__cdecl *func)();
    RetType retValue;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_cdecl_struct0 *pcs = (callback_cdecl_struct0*)cookie;
        pcs->retValue = pcs->func();
        hr = S_OK;
        return hr;
    }
};

template <typename RetType, typename ArgType1>
struct callback_cdecl_struct1
{
    RetType (__cdecl *func)(ArgType1);
    RetType retValue;
    ArgType1 arg1;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_cdecl_struct1 *pcs = (callback_cdecl_struct1*)cookie;
        pcs->retValue = pcs->func(pcs->arg1);
        hr = S_OK;
        return hr;
    }
};

template <typename RetType, typename ArgType1, typename ArgType2>
struct callback_cdecl_struct2
{
    RetType (__cdecl *func)(ArgType1, ArgType2);
    RetType retValue;
    ArgType1 arg1;
    ArgType2 arg2;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_cdecl_struct2 *pcs = (callback_cdecl_struct2*)cookie;
        pcs->retValue = pcs->func(pcs->arg1, pcs->arg2);
        hr = S_OK;
        return hr;
    }
};

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3>
struct callback_cdecl_struct3
{
    RetType (__cdecl *func)(ArgType1, ArgType2, ArgType3);
    RetType retValue;
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_cdecl_struct3 *pcs = (callback_cdecl_struct3*)cookie;
        pcs->retValue = pcs->func(pcs->arg1, pcs->arg2, pcs->arg3);
        hr = S_OK;
        return hr;
    }
};

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4>
struct callback_cdecl_struct4
{
    RetType (__cdecl *func)(ArgType1, ArgType2, ArgType3, ArgType4);
    RetType retValue;
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;
    ArgType4 arg4;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_cdecl_struct4 *pcs = (callback_cdecl_struct4*)cookie;
        pcs->retValue = pcs->func(pcs->arg1, pcs->arg2, pcs->arg3, pcs->arg4);
        hr = S_OK;
        return hr;
    }
};

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5>
struct callback_cdecl_struct5
{
    RetType (__cdecl *func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5);
    RetType retValue;
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;
    ArgType4 arg4;
    ArgType5 arg5;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_cdecl_struct5 *pcs = (callback_cdecl_struct5*)cookie;
        pcs->retValue = pcs->func(pcs->arg1, pcs->arg2, pcs->arg3, pcs->arg4, pcs->arg5);
        hr = S_OK;
        return hr;
    }
};

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6>
struct callback_cdecl_struct6
{
    RetType (__cdecl *func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6);
    RetType retValue;
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;
    ArgType4 arg4;
    ArgType5 arg5;
    ArgType6 arg6;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_cdecl_struct6 *pcs = (callback_cdecl_struct6*)cookie;
        pcs->retValue = pcs->func(pcs->arg1, pcs->arg2, pcs->arg3, pcs->arg4, pcs->arg5, pcs->arg6);
        hr = S_OK;
        return hr;
    }
};

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7>
struct callback_cdecl_struct7
{
    RetType (__cdecl *func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7);
    RetType retValue;
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;
    ArgType4 arg4;
    ArgType5 arg5;
    ArgType6 arg6;
    ArgType7 arg7;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_cdecl_struct7 *pcs = (callback_cdecl_struct7*)cookie;
        pcs->retValue = pcs->func(pcs->arg1, pcs->arg2, pcs->arg3, pcs->arg4, pcs->arg5, pcs->arg6, pcs->arg7);
        hr = S_OK;
        return hr;
    }
};

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8>
struct callback_cdecl_struct8
{
    RetType (__cdecl *func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8);
    RetType retValue;
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;
    ArgType4 arg4;
    ArgType5 arg5;
    ArgType6 arg6;
    ArgType7 arg7;
    ArgType8 arg8;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_cdecl_struct8 *pcs = (callback_cdecl_struct8*)cookie;
        pcs->retValue = pcs->func(pcs->arg1, pcs->arg2, pcs->arg3, pcs->arg4, pcs->arg5, pcs->arg6, pcs->arg7, pcs->arg8);
        hr = S_OK;
        return hr;
    }
};

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9>
struct callback_cdecl_struct9
{
    RetType (__cdecl *func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9);
    RetType retValue;
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;
    ArgType4 arg4;
    ArgType5 arg5;
    ArgType6 arg6;
    ArgType7 arg7;
    ArgType8 arg8;
    ArgType9 arg9;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_cdecl_struct9 *pcs = (callback_cdecl_struct9*)cookie;
        pcs->retValue = pcs->func(pcs->arg1, pcs->arg2, pcs->arg3, pcs->arg4, pcs->arg5, pcs->arg6, pcs->arg7, pcs->arg8, pcs->arg9);
        hr = S_OK;
        return hr;
    }
};

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9, typename ArgType10>
struct callback_cdecl_struct10
{
    RetType (__cdecl *func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10);
    RetType retValue;
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;
    ArgType4 arg4;
    ArgType5 arg5;
    ArgType6 arg6;
    ArgType7 arg7;
    ArgType8 arg8;
    ArgType9 arg9;
    ArgType10 arg10;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_cdecl_struct10 *pcs = (callback_cdecl_struct10*)cookie;
        pcs->retValue = pcs->func(pcs->arg1, pcs->arg2, pcs->arg3, pcs->arg4, pcs->arg5, pcs->arg6, pcs->arg7, pcs->arg8, pcs->arg9, pcs->arg10);
        hr = S_OK;
        return hr;
    }
};

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9, typename ArgType10, typename ArgType11>
struct callback_cdecl_struct11
{
    RetType (__cdecl *func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11);
    RetType retValue;
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;
    ArgType4 arg4;
    ArgType5 arg5;
    ArgType6 arg6;
    ArgType7 arg7;
    ArgType8 arg8;
    ArgType9 arg9;
    ArgType10 arg10;
    ArgType11 arg11;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_cdecl_struct11 *pcs = (callback_cdecl_struct11*)cookie;
        pcs->retValue = pcs->func(pcs->arg1, pcs->arg2, pcs->arg3, pcs->arg4, pcs->arg5, pcs->arg6, pcs->arg7, pcs->arg8, pcs->arg9, pcs->arg10, pcs->arg11);
        hr = S_OK;
        return hr;
    }
};

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9, typename ArgType10, typename ArgType11, typename ArgType12>
struct callback_cdecl_struct12
{
    RetType (__cdecl *func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11, ArgType12);
    RetType retValue;
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;
    ArgType4 arg4;
    ArgType5 arg5;
    ArgType6 arg6;
    ArgType7 arg7;
    ArgType8 arg8;
    ArgType9 arg9;
    ArgType10 arg10;
    ArgType11 arg11;
    ArgType12 arg12;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_cdecl_struct12 *pcs = (callback_cdecl_struct12*)cookie;
        pcs->retValue = pcs->func(pcs->arg1, pcs->arg2, pcs->arg3, pcs->arg4, pcs->arg5, pcs->arg6, pcs->arg7, pcs->arg8, pcs->arg9, pcs->arg10, pcs->arg11, pcs->arg12);
        hr = S_OK;
        return hr;
    }
};

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9, typename ArgType10, typename ArgType11, typename ArgType12, typename ArgType13>
struct callback_cdecl_struct13
{
    RetType (__cdecl *func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11, ArgType12, ArgType13);
    RetType retValue;
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;
    ArgType4 arg4;
    ArgType5 arg5;
    ArgType6 arg6;
    ArgType7 arg7;
    ArgType8 arg8;
    ArgType9 arg9;
    ArgType10 arg10;
    ArgType11 arg11;
    ArgType12 arg12;
    ArgType13 arg13;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_cdecl_struct13 *pcs = (callback_cdecl_struct13*)cookie;
        pcs->retValue = pcs->func(pcs->arg1, pcs->arg2, pcs->arg3, pcs->arg4, pcs->arg5, pcs->arg6, pcs->arg7, pcs->arg8, pcs->arg9, pcs->arg10, pcs->arg11, pcs->arg12, pcs->arg13);
        hr = S_OK;
        return hr;
    }
};

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9, typename ArgType10, typename ArgType11, typename ArgType12, typename ArgType13, typename ArgType14>
struct callback_cdecl_struct14
{
    RetType (__cdecl *func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11, ArgType12, ArgType13, ArgType14);
    RetType retValue;
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;
    ArgType4 arg4;
    ArgType5 arg5;
    ArgType6 arg6;
    ArgType7 arg7;
    ArgType8 arg8;
    ArgType9 arg9;
    ArgType10 arg10;
    ArgType11 arg11;
    ArgType12 arg12;
    ArgType13 arg13;
    ArgType14 arg14;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_cdecl_struct14 *pcs = (callback_cdecl_struct14*)cookie;
        pcs->retValue = pcs->func(pcs->arg1, pcs->arg2, pcs->arg3, pcs->arg4, pcs->arg5, pcs->arg6, pcs->arg7, pcs->arg8, pcs->arg9, pcs->arg10, pcs->arg11, pcs->arg12, pcs->arg13, pcs->arg14);
        hr = S_OK;
        return hr;
    }
};

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9, typename ArgType10, typename ArgType11, typename ArgType12, typename ArgType13, typename ArgType14, typename ArgType15>
struct callback_cdecl_struct15
{
    RetType (__cdecl *func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11, ArgType12, ArgType13, ArgType14, ArgType15);
    RetType retValue;
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;
    ArgType4 arg4;
    ArgType5 arg5;
    ArgType6 arg6;
    ArgType7 arg7;
    ArgType8 arg8;
    ArgType9 arg9;
    ArgType10 arg10;
    ArgType11 arg11;
    ArgType12 arg12;
    ArgType13 arg13;
    ArgType14 arg14;
    ArgType15 arg15;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_cdecl_struct15 *pcs = (callback_cdecl_struct15*)cookie;
        pcs->retValue = pcs->func(pcs->arg1, pcs->arg2, pcs->arg3, pcs->arg4, pcs->arg5, pcs->arg6, pcs->arg7, pcs->arg8, pcs->arg9, pcs->arg10, pcs->arg11, pcs->arg12, pcs->arg13, pcs->arg14, pcs->arg15);
        hr = S_OK;
        return hr;
    }
};

struct callback_cdecl_void_struct0
{
    void (__cdecl *func)();

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_cdecl_void_struct0 *pcs = (callback_cdecl_void_struct0*)cookie;
        pcs->func();
        hr = S_OK;
        return hr;
    }
};

template <typename ArgType1>
struct callback_cdecl_void_struct1
{
    void (__cdecl * func)(ArgType1);
    ArgType1 arg1;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_cdecl_void_struct1 *pcs = (callback_cdecl_void_struct1*)cookie;
        pcs->func(pcs->arg1);
        hr = S_OK;
        return hr;
    }
};

template <typename ArgType1, typename ArgType2>
struct callback_cdecl_void_struct2
{
    void (__cdecl * func)(ArgType1, ArgType2);
    ArgType1 arg1;
    ArgType2 arg2;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_cdecl_void_struct2 *pcs = (callback_cdecl_void_struct2*)cookie;
        pcs->func(pcs->arg1, pcs->arg2);
        hr = S_OK;
        return hr;
    }
};

template <typename ArgType1, typename ArgType2, typename ArgType3>
struct callback_cdecl_void_struct3
{
    void (__cdecl * func)(ArgType1, ArgType2, ArgType3);
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_cdecl_void_struct3 *pcs = (callback_cdecl_void_struct3*)cookie;
        pcs->func(pcs->arg1, pcs->arg2, pcs->arg3);
        hr = S_OK;
        return hr;
    }
};

template <typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4>
struct callback_cdecl_void_struct4
{
    void (__cdecl * func)(ArgType1, ArgType2, ArgType3, ArgType4);
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;
    ArgType4 arg4;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_cdecl_void_struct4 *pcs = (callback_cdecl_void_struct4*)cookie;
        pcs->func(pcs->arg1, pcs->arg2, pcs->arg3, pcs->arg4);
        hr = S_OK;
        return hr;
    }
};

template <typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5>
struct callback_cdecl_void_struct5
{
    void (__cdecl * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5);
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;
    ArgType4 arg4;
    ArgType5 arg5;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_cdecl_void_struct5 *pcs = (callback_cdecl_void_struct5*)cookie;
        pcs->func(pcs->arg1, pcs->arg2, pcs->arg3, pcs->arg4, pcs->arg5);
        hr = S_OK;
        return hr;
    }
};

template <typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6>
struct callback_cdecl_void_struct6
{
    void (__cdecl * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6);
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;
    ArgType4 arg4;
    ArgType5 arg5;
    ArgType6 arg6;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_cdecl_void_struct6 *pcs = (callback_cdecl_void_struct6*)cookie;
        pcs->func(pcs->arg1, pcs->arg2, pcs->arg3, pcs->arg4, pcs->arg5, pcs->arg6);
        hr = S_OK;
        return hr;
    }
};

template <typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7>
struct callback_cdecl_void_struct7
{
    void (__cdecl * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7);
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;
    ArgType4 arg4;
    ArgType5 arg5;
    ArgType6 arg6;
    ArgType7 arg7;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_cdecl_void_struct7 *pcs = (callback_cdecl_void_struct7*)cookie;
        pcs->func(pcs->arg1, pcs->arg2, pcs->arg3, pcs->arg4, pcs->arg5, pcs->arg6, pcs->arg7);
        hr = S_OK;
        return hr;
    }
};

template <typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8>
struct callback_cdecl_void_struct8
{
    void (__cdecl * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8);
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;
    ArgType4 arg4;
    ArgType5 arg5;
    ArgType6 arg6;
    ArgType7 arg7;
    ArgType8 arg8;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_cdecl_void_struct8 *pcs = (callback_cdecl_void_struct8*)cookie;
        pcs->func(pcs->arg1, pcs->arg2, pcs->arg3, pcs->arg4, pcs->arg5, pcs->arg6, pcs->arg7, pcs->arg8);
        hr = S_OK;
        return hr;
    }
};

template <typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9>
struct callback_cdecl_void_struct9
{
    void (__cdecl * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9);
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;
    ArgType4 arg4;
    ArgType5 arg5;
    ArgType6 arg6;
    ArgType7 arg7;
    ArgType8 arg8;
    ArgType9 arg9;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_cdecl_void_struct9 *pcs = (callback_cdecl_void_struct9*)cookie;
        pcs->func(pcs->arg1, pcs->arg2, pcs->arg3, pcs->arg4, pcs->arg5, pcs->arg6, pcs->arg7, pcs->arg8, pcs->arg9);
        hr = S_OK;
        return hr;
    }
};

template <typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9, typename ArgType10>
struct callback_cdecl_void_struct10
{
    void (__cdecl * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10);
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;
    ArgType4 arg4;
    ArgType5 arg5;
    ArgType6 arg6;
    ArgType7 arg7;
    ArgType8 arg8;
    ArgType9 arg9;
    ArgType10 arg10;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_cdecl_void_struct10 *pcs = (callback_cdecl_void_struct10*)cookie;
        pcs->func(pcs->arg1, pcs->arg2, pcs->arg3, pcs->arg4, pcs->arg5, pcs->arg6, pcs->arg7, pcs->arg8, pcs->arg9, pcs->arg10);
        hr = S_OK;
        return hr;
    }
};

template <typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9, typename ArgType10, typename ArgType11>
struct callback_cdecl_void_struct11
{
    void (__cdecl * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11);
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;
    ArgType4 arg4;
    ArgType5 arg5;
    ArgType6 arg6;
    ArgType7 arg7;
    ArgType8 arg8;
    ArgType9 arg9;
    ArgType10 arg10;
    ArgType11 arg11;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_cdecl_void_struct11 *pcs = (callback_cdecl_void_struct11*)cookie;
        pcs->func(pcs->arg1, pcs->arg2, pcs->arg3, pcs->arg4, pcs->arg5, pcs->arg6, pcs->arg7, pcs->arg8, pcs->arg9, pcs->arg10, pcs->arg11);
        hr = S_OK;
        return hr;
    }
};

template <typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9, typename ArgType10, typename ArgType11, typename ArgType12>
struct callback_cdecl_void_struct12
{
    void (__cdecl * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11, ArgType12);
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;
    ArgType4 arg4;
    ArgType5 arg5;
    ArgType6 arg6;
    ArgType7 arg7;
    ArgType8 arg8;
    ArgType9 arg9;
    ArgType10 arg10;
    ArgType11 arg11;
    ArgType12 arg12;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_cdecl_void_struct12 *pcs = (callback_cdecl_void_struct12*)cookie;
        pcs->func(pcs->arg1, pcs->arg2, pcs->arg3, pcs->arg4, pcs->arg5, pcs->arg6, pcs->arg7, pcs->arg8, pcs->arg9, pcs->arg10, pcs->arg11, pcs->arg12);
        hr = S_OK;
        return hr;
    }
};

template <typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9, typename ArgType10, typename ArgType11, typename ArgType12, typename ArgType13>
struct callback_cdecl_void_struct13
{
    void (__cdecl * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11, ArgType12, ArgType13);
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;
    ArgType4 arg4;
    ArgType5 arg5;
    ArgType6 arg6;
    ArgType7 arg7;
    ArgType8 arg8;
    ArgType9 arg9;
    ArgType10 arg10;
    ArgType11 arg11;
    ArgType12 arg12;
    ArgType13 arg13;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_cdecl_void_struct13 *pcs = (callback_cdecl_void_struct13*)cookie;
        pcs->func(pcs->arg1, pcs->arg2, pcs->arg3, pcs->arg4, pcs->arg5, pcs->arg6, pcs->arg7, pcs->arg8, pcs->arg9, pcs->arg10, pcs->arg11, pcs->arg12, pcs->arg13);
        hr = S_OK;
        return hr;
    }
};

template <typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9, typename ArgType10, typename ArgType11, typename ArgType12, typename ArgType13, typename ArgType14>
struct callback_cdecl_void_struct14
{
    void (__cdecl * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11, ArgType12, ArgType13, ArgType14);
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;
    ArgType4 arg4;
    ArgType5 arg5;
    ArgType6 arg6;
    ArgType7 arg7;
    ArgType8 arg8;
    ArgType9 arg9;
    ArgType10 arg10;
    ArgType11 arg11;
    ArgType12 arg12;
    ArgType13 arg13;
    ArgType14 arg14;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_cdecl_void_struct14 *pcs = (callback_cdecl_void_struct14*)cookie;
        pcs->func(pcs->arg1, pcs->arg2, pcs->arg3, pcs->arg4, pcs->arg5, pcs->arg6, pcs->arg7, pcs->arg8, pcs->arg9, pcs->arg10, pcs->arg11, pcs->arg12, pcs->arg13, pcs->arg14);
        hr = S_OK;
        return hr;
    }
};

template <typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9, typename ArgType10, typename ArgType11, typename ArgType12, typename ArgType13, typename ArgType14, typename ArgType15>
struct callback_cdecl_void_struct15
{
    void (__cdecl * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11, ArgType12, ArgType13, ArgType14, ArgType15);
    ArgType1 arg1;
    ArgType2 arg2;
    ArgType3 arg3;
    ArgType4 arg4;
    ArgType5 arg5;
    ArgType6 arg6;
    ArgType7 arg7;
    ArgType8 arg8;
    ArgType9 arg9;
    ArgType10 arg10;
    ArgType11 arg11;
    ArgType12 arg12;
    ArgType13 arg13;
    ArgType14 arg14;
    ArgType15 arg15;

    static HRESULT __stdcall callback(void *cookie)
    {
        HRESULT hr = E_FAIL;
        if (cookie == NULL)
        {
            return hr;
        }
        callback_cdecl_void_struct15 *pcs = (callback_cdecl_void_struct15*)cookie;
        pcs->func(pcs->arg1, pcs->arg2, pcs->arg3, pcs->arg4, pcs->arg5, pcs->arg6, pcs->arg7, pcs->arg8, pcs->arg9, pcs->arg10, pcs->arg11, pcs->arg12, pcs->arg13, pcs->arg14, pcs->arg15);
        hr = S_OK;
                return hr;
        }
};

} // namespace _detail

/* __stdcall version */
#if _MSCLR_STDCALL_DISTINCT

template <typename RetType>
RetType inline call_in_appdomain(DWORD dwAppDomainId, RetType (__stdcall * func)())
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_stdcall_struct0<RetType> cs;

    // fill up the callback_stdcall_struct
    cs.func = func;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);

    return cs.retValue;
}

template <typename RetType, typename ArgType1>
RetType inline call_in_appdomain(DWORD dwAppDomainId, RetType (__stdcall * func)(ArgType1), ArgType1 arg1)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_stdcall_struct1<RetType, ArgType1> cs;

    // fill up the callback_stdcall_struct
    cs.func = func;
    cs.arg1 = arg1;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);

    return cs.retValue;
}

template <typename RetType, typename ArgType1, typename ArgType2>
RetType inline call_in_appdomain(DWORD dwAppDomainId, RetType (__stdcall * func)(ArgType1, ArgType2), ArgType1 arg1, ArgType2 arg2)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_stdcall_struct2<RetType, ArgType1, ArgType2> cs;

    // fill up the callback_stdcall_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);

    return cs.retValue;
}

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3>
RetType inline call_in_appdomain(DWORD dwAppDomainId, RetType (__stdcall * func)(ArgType1, ArgType2, ArgType3), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_stdcall_struct3<RetType, ArgType1, ArgType2, ArgType3> cs;

    // fill up the callback_stdcall_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);

    return cs.retValue;
}

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4>
RetType inline call_in_appdomain(DWORD dwAppDomainId, RetType (__stdcall * func)(ArgType1, ArgType2, ArgType3, ArgType4), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3, ArgType4 arg4)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_stdcall_struct4<RetType, ArgType1, ArgType2, ArgType3, ArgType4> cs;

    // fill up the callback_stdcall_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;
    cs.arg4 = arg4;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);

    return cs.retValue;
}

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5>
RetType inline call_in_appdomain(DWORD dwAppDomainId, RetType (__stdcall * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3, ArgType4 arg4, ArgType5 arg5)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_stdcall_struct5<RetType, ArgType1, ArgType2, ArgType3, ArgType4, ArgType5> cs;

    // fill up the callback_stdcall_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;
    cs.arg4 = arg4;
    cs.arg5 = arg5;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);

    return cs.retValue;
}

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6>
RetType inline call_in_appdomain(DWORD dwAppDomainId, RetType (__stdcall * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3, ArgType4 arg4, ArgType5 arg5, ArgType6 arg6)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_stdcall_struct6<RetType, ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6> cs;

    // fill up the callback_stdcall_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;
    cs.arg4 = arg4;
    cs.arg5 = arg5;
    cs.arg6 = arg6;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);

    return cs.retValue;
}

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7>
RetType inline call_in_appdomain(DWORD dwAppDomainId, RetType (__stdcall * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3, ArgType4 arg4, ArgType5 arg5, ArgType6 arg6, ArgType7 arg7)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_stdcall_struct7<RetType, ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7> cs;

    // fill up the callback_stdcall_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;
    cs.arg4 = arg4;
    cs.arg5 = arg5;
    cs.arg6 = arg6;
    cs.arg7 = arg7;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);

    return cs.retValue;
}

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8>
RetType inline call_in_appdomain(DWORD dwAppDomainId, RetType (__stdcall * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3, ArgType4 arg4, ArgType5 arg5, ArgType6 arg6, ArgType7 arg7, ArgType8 arg8)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_stdcall_struct8<RetType, ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8> cs;

    // fill up the callback_stdcall_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;
    cs.arg4 = arg4;
    cs.arg5 = arg5;
    cs.arg6 = arg6;
    cs.arg7 = arg7;
    cs.arg8 = arg8;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);

    return cs.retValue;
}

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9>
RetType inline call_in_appdomain(DWORD dwAppDomainId, RetType (__stdcall * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3, ArgType4 arg4, ArgType5 arg5, ArgType6 arg6, ArgType7 arg7, ArgType8 arg8, ArgType9 arg9)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_stdcall_struct9<RetType, ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9> cs;

    // fill up the callback_stdcall_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;
    cs.arg4 = arg4;
    cs.arg5 = arg5;
    cs.arg6 = arg6;
    cs.arg7 = arg7;
    cs.arg8 = arg8;
    cs.arg9 = arg9;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);

    return cs.retValue;
}

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9, typename ArgType10>
RetType inline call_in_appdomain(DWORD dwAppDomainId, RetType (__stdcall * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3, ArgType4 arg4, ArgType5 arg5, ArgType6 arg6, ArgType7 arg7, ArgType8 arg8, ArgType9 arg9, ArgType10 arg10)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_stdcall_struct10<RetType, ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10> cs;

    // fill up the callback_stdcall_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;
    cs.arg4 = arg4;
    cs.arg5 = arg5;
    cs.arg6 = arg6;
    cs.arg7 = arg7;
    cs.arg8 = arg8;
    cs.arg9 = arg9;
    cs.arg10 = arg10;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);

    return cs.retValue;
}

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9, typename ArgType10, typename ArgType11>
RetType inline call_in_appdomain(DWORD dwAppDomainId, RetType (__stdcall * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3, ArgType4 arg4, ArgType5 arg5, ArgType6 arg6, ArgType7 arg7, ArgType8 arg8, ArgType9 arg9, ArgType10 arg10, ArgType11 arg11)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_stdcall_struct11<RetType, ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11> cs;

    // fill up the callback_stdcall_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;
    cs.arg4 = arg4;
    cs.arg5 = arg5;
    cs.arg6 = arg6;
    cs.arg7 = arg7;
    cs.arg8 = arg8;
    cs.arg9 = arg9;
    cs.arg10 = arg10;
    cs.arg11 = arg11;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);

    return cs.retValue;
}

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9, typename ArgType10, typename ArgType11, typename ArgType12>
RetType inline call_in_appdomain(DWORD dwAppDomainId, RetType (__stdcall * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11, ArgType12), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3, ArgType4 arg4, ArgType5 arg5, ArgType6 arg6, ArgType7 arg7, ArgType8 arg8, ArgType9 arg9, ArgType10 arg10, ArgType11 arg11, ArgType12 arg12)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_stdcall_struct12<RetType, ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11, ArgType12> cs;

    // fill up the callback_stdcall_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;
    cs.arg4 = arg4;
    cs.arg5 = arg5;
    cs.arg6 = arg6;
    cs.arg7 = arg7;
    cs.arg8 = arg8;
    cs.arg9 = arg9;
    cs.arg10 = arg10;
    cs.arg11 = arg11;
    cs.arg12 = arg12;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);

    return cs.retValue;
}

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9, typename ArgType10, typename ArgType11, typename ArgType12, typename ArgType13>
RetType inline call_in_appdomain(DWORD dwAppDomainId, RetType (__stdcall * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11, ArgType12, ArgType13), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3, ArgType4 arg4, ArgType5 arg5, ArgType6 arg6, ArgType7 arg7, ArgType8 arg8, ArgType9 arg9, ArgType10 arg10, ArgType11 arg11, ArgType12 arg12, ArgType13 arg13)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_stdcall_struct13<RetType, ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11, ArgType12, ArgType13> cs;

    // fill up the callback_stdcall_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;
    cs.arg4 = arg4;
    cs.arg5 = arg5;
    cs.arg6 = arg6;
    cs.arg7 = arg7;
    cs.arg8 = arg8;
    cs.arg9 = arg9;
    cs.arg10 = arg10;
    cs.arg11 = arg11;
    cs.arg12 = arg12;
    cs.arg13 = arg13;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);

    return cs.retValue;
}

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9, typename ArgType10, typename ArgType11, typename ArgType12, typename ArgType13, typename ArgType14>
RetType inline call_in_appdomain(DWORD dwAppDomainId, RetType (__stdcall * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11, ArgType12, ArgType13, ArgType14), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3, ArgType4 arg4, ArgType5 arg5, ArgType6 arg6, ArgType7 arg7, ArgType8 arg8, ArgType9 arg9, ArgType10 arg10, ArgType11 arg11, ArgType12 arg12, ArgType13 arg13, ArgType14 arg14)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_stdcall_struct14<RetType, ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11, ArgType12, ArgType13, ArgType14> cs;

    // fill up the callback_stdcall_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;
    cs.arg4 = arg4;
    cs.arg5 = arg5;
    cs.arg6 = arg6;
    cs.arg7 = arg7;
    cs.arg8 = arg8;
    cs.arg9 = arg9;
    cs.arg10 = arg10;
    cs.arg11 = arg11;
    cs.arg12 = arg12;
    cs.arg13 = arg13;
    cs.arg14 = arg14;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);

    return cs.retValue;
}

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9, typename ArgType10, typename ArgType11, typename ArgType12, typename ArgType13, typename ArgType14, typename ArgType15>
RetType inline call_in_appdomain(DWORD dwAppDomainId, RetType (__stdcall * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11, ArgType12, ArgType13, ArgType14, ArgType15), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3, ArgType4 arg4, ArgType5 arg5, ArgType6 arg6, ArgType7 arg7, ArgType8 arg8, ArgType9 arg9, ArgType10 arg10, ArgType11 arg11, ArgType12 arg12, ArgType13 arg13, ArgType14 arg14, ArgType15 arg15)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_stdcall_struct15<RetType, ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11, ArgType12, ArgType13, ArgType14, ArgType15> cs;

    // fill up the callback_stdcall_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;
    cs.arg4 = arg4;
    cs.arg5 = arg5;
    cs.arg6 = arg6;
    cs.arg7 = arg7;
    cs.arg8 = arg8;
    cs.arg9 = arg9;
    cs.arg10 = arg10;
    cs.arg11 = arg11;
    cs.arg12 = arg12;
    cs.arg13 = arg13;
    cs.arg14 = arg14;
    cs.arg15 = arg15;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);

    return cs.retValue;
}

void inline call_in_appdomain(DWORD dwAppDomainId, void (__stdcall * func)())
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_stdcall_void_struct0 cs;

    // fill up the callback_stdcall_struct
    cs.func = func;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);
}

template <typename ArgType1>
void inline call_in_appdomain(DWORD dwAppDomainId, void (__stdcall * func)(ArgType1), ArgType1 arg1)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_stdcall_void_struct1<ArgType1> cs;

    // fill up the callback_stdcall_struct
    cs.func = func;
    cs.arg1 = arg1;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);
}

template <typename ArgType1, typename ArgType2>
void inline call_in_appdomain(DWORD dwAppDomainId, void (__stdcall * func)(ArgType1, ArgType2), ArgType1 arg1, ArgType2 arg2)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_stdcall_void_struct2<ArgType1, ArgType2> cs;

    // fill up the callback_stdcall_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);
}

template <typename ArgType1, typename ArgType2, typename ArgType3>
void inline call_in_appdomain(DWORD dwAppDomainId, void (__stdcall * func)(ArgType1, ArgType2, ArgType3), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_stdcall_void_struct3<ArgType1, ArgType2, ArgType3> cs;

    // fill up the callback_stdcall_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);
}

template <typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4>
void inline call_in_appdomain(DWORD dwAppDomainId, void (__stdcall * func)(ArgType1, ArgType2, ArgType3, ArgType4), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3, ArgType4 arg4)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_stdcall_void_struct4<ArgType1, ArgType2, ArgType3, ArgType4> cs;

    // fill up the callback_stdcall_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;
    cs.arg4 = arg4;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);
}

template <typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5>
void inline call_in_appdomain(DWORD dwAppDomainId, void (__stdcall * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3, ArgType4 arg4, ArgType5 arg5)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_stdcall_void_struct5<ArgType1, ArgType2, ArgType3, ArgType4, ArgType5> cs;

    // fill up the callback_stdcall_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;
    cs.arg4 = arg4;
    cs.arg5 = arg5;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);
}

template <typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6>
void inline call_in_appdomain(DWORD dwAppDomainId, void (__stdcall * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3, ArgType4 arg4, ArgType5 arg5, ArgType6 arg6)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_stdcall_void_struct6<ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6> cs;

    // fill up the callback_stdcall_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;
    cs.arg4 = arg4;
    cs.arg5 = arg5;
    cs.arg6 = arg6;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);
}

template <typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7>
void inline call_in_appdomain(DWORD dwAppDomainId, void (__stdcall * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3, ArgType4 arg4, ArgType5 arg5, ArgType6 arg6, ArgType7 arg7)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_stdcall_void_struct7<ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7> cs;

    // fill up the callback_stdcall_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;
    cs.arg4 = arg4;
    cs.arg5 = arg5;
    cs.arg6 = arg6;
    cs.arg7 = arg7;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);
}

template <typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8>
void inline call_in_appdomain(DWORD dwAppDomainId, void (__stdcall * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3, ArgType4 arg4, ArgType5 arg5, ArgType6 arg6, ArgType7 arg7, ArgType8 arg8)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_stdcall_void_struct8<ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8> cs;

    // fill up the callback_stdcall_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;
    cs.arg4 = arg4;
    cs.arg5 = arg5;
    cs.arg6 = arg6;
    cs.arg7 = arg7;
    cs.arg8 = arg8;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);
}

template <typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9>
void inline call_in_appdomain(DWORD dwAppDomainId, void (__stdcall * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3, ArgType4 arg4, ArgType5 arg5, ArgType6 arg6, ArgType7 arg7, ArgType8 arg8, ArgType9 arg9)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_stdcall_void_struct9<ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9> cs;

    // fill up the callback_stdcall_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;
    cs.arg4 = arg4;
    cs.arg5 = arg5;
    cs.arg6 = arg6;
    cs.arg7 = arg7;
    cs.arg8 = arg8;
    cs.arg9 = arg9;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);
}

template <typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9, typename ArgType10>
void inline call_in_appdomain(DWORD dwAppDomainId, void (__stdcall * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3, ArgType4 arg4, ArgType5 arg5, ArgType6 arg6, ArgType7 arg7, ArgType8 arg8, ArgType9 arg9, ArgType10 arg10)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_stdcall_void_struct10<ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10> cs;

    // fill up the callback_stdcall_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;
    cs.arg4 = arg4;
    cs.arg5 = arg5;
    cs.arg6 = arg6;
    cs.arg7 = arg7;
    cs.arg8 = arg8;
    cs.arg9 = arg9;
    cs.arg10 = arg10;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);
}

template <typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9, typename ArgType10, typename ArgType11>
void inline call_in_appdomain(DWORD dwAppDomainId, void (__stdcall * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3, ArgType4 arg4, ArgType5 arg5, ArgType6 arg6, ArgType7 arg7, ArgType8 arg8, ArgType9 arg9, ArgType10 arg10, ArgType11 arg11)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_stdcall_void_struct11<ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11> cs;

    // fill up the callback_stdcall_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;
    cs.arg4 = arg4;
    cs.arg5 = arg5;
    cs.arg6 = arg6;
    cs.arg7 = arg7;
    cs.arg8 = arg8;
    cs.arg9 = arg9;
    cs.arg10 = arg10;
    cs.arg11 = arg11;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);
}

template <typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9, typename ArgType10, typename ArgType11, typename ArgType12>
void inline call_in_appdomain(DWORD dwAppDomainId, void (__stdcall * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11, ArgType12), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3, ArgType4 arg4, ArgType5 arg5, ArgType6 arg6, ArgType7 arg7, ArgType8 arg8, ArgType9 arg9, ArgType10 arg10, ArgType11 arg11, ArgType12 arg12)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_stdcall_void_struct12<ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11, ArgType12> cs;

    // fill up the callback_stdcall_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;
    cs.arg4 = arg4;
    cs.arg5 = arg5;
    cs.arg6 = arg6;
    cs.arg7 = arg7;
    cs.arg8 = arg8;
    cs.arg9 = arg9;
    cs.arg10 = arg10;
    cs.arg11 = arg11;
    cs.arg12 = arg12;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);
}

template <typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9, typename ArgType10, typename ArgType11, typename ArgType12, typename ArgType13>
void inline call_in_appdomain(DWORD dwAppDomainId, void (__stdcall * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11, ArgType12, ArgType13), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3, ArgType4 arg4, ArgType5 arg5, ArgType6 arg6, ArgType7 arg7, ArgType8 arg8, ArgType9 arg9, ArgType10 arg10, ArgType11 arg11, ArgType12 arg12, ArgType13 arg13)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_stdcall_void_struct13<ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11, ArgType12, ArgType13> cs;

    // fill up the callback_stdcall_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;
    cs.arg4 = arg4;
    cs.arg5 = arg5;
    cs.arg6 = arg6;
    cs.arg7 = arg7;
    cs.arg8 = arg8;
    cs.arg9 = arg9;
    cs.arg10 = arg10;
    cs.arg11 = arg11;
    cs.arg12 = arg12;
    cs.arg13 = arg13;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);
}

template <typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9, typename ArgType10, typename ArgType11, typename ArgType12, typename ArgType13, typename ArgType14>
void inline call_in_appdomain(DWORD dwAppDomainId, void (__stdcall * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11, ArgType12, ArgType13, ArgType14), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3, ArgType4 arg4, ArgType5 arg5, ArgType6 arg6, ArgType7 arg7, ArgType8 arg8, ArgType9 arg9, ArgType10 arg10, ArgType11 arg11, ArgType12 arg12, ArgType13 arg13, ArgType14 arg14)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_stdcall_void_struct14<ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11, ArgType12, ArgType13, ArgType14> cs;

    // fill up the callback_stdcall_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;
    cs.arg4 = arg4;
    cs.arg5 = arg5;
    cs.arg6 = arg6;
    cs.arg7 = arg7;
    cs.arg8 = arg8;
    cs.arg9 = arg9;
    cs.arg10 = arg10;
    cs.arg11 = arg11;
    cs.arg12 = arg12;
    cs.arg13 = arg13;
    cs.arg14 = arg14;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);
}

template <typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9, typename ArgType10, typename ArgType11, typename ArgType12, typename ArgType13, typename ArgType14, typename ArgType15>
void inline call_in_appdomain(DWORD dwAppDomainId, void (__stdcall * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11, ArgType12, ArgType13, ArgType14, ArgType15), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3, ArgType4 arg4, ArgType5 arg5, ArgType6 arg6, ArgType7 arg7, ArgType8 arg8, ArgType9 arg9, ArgType10 arg10, ArgType11 arg11, ArgType12 arg12, ArgType13 arg13, ArgType14 arg14, ArgType15 arg15)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_stdcall_void_struct15<ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11, ArgType12, ArgType13, ArgType14, ArgType15> cs;

    // fill up the callback_stdcall_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;
    cs.arg4 = arg4;
    cs.arg5 = arg5;
    cs.arg6 = arg6;
    cs.arg7 = arg7;
    cs.arg8 = arg8;
    cs.arg9 = arg9;
    cs.arg10 = arg10;
    cs.arg11 = arg11;
    cs.arg12 = arg12;
    cs.arg13 = arg13;
    cs.arg14 = arg14;
    cs.arg15 = arg15;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);
}

#endif  /* _MSCLR_STDCALL_DISTINCT */

/* __cdecl version */

template <typename RetType>
RetType inline call_in_appdomain(DWORD dwAppDomainId, RetType (__cdecl * func)())
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_cdecl_struct0<RetType> cs;

    // fill up the callback_cdecl_struct
    cs.func = func;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);

    return cs.retValue;
}

template <typename RetType, typename ArgType1>
RetType inline call_in_appdomain(DWORD dwAppDomainId, RetType (__cdecl * func)(ArgType1), ArgType1 arg1)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_cdecl_struct1<RetType, ArgType1> cs;

    // fill up the callback_cdecl_struct
    cs.func = func;
    cs.arg1 = arg1;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);

    return cs.retValue;
}

template <typename RetType, typename ArgType1, typename ArgType2>
RetType inline call_in_appdomain(DWORD dwAppDomainId, RetType (__cdecl * func)(ArgType1, ArgType2), ArgType1 arg1, ArgType2 arg2)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_cdecl_struct2<RetType, ArgType1, ArgType2> cs;

    // fill up the callback_cdecl_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);

    return cs.retValue;
}

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3>
RetType inline call_in_appdomain(DWORD dwAppDomainId, RetType (__cdecl * func)(ArgType1, ArgType2, ArgType3), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_cdecl_struct3<RetType, ArgType1, ArgType2, ArgType3> cs;

    // fill up the callback_cdecl_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);

    return cs.retValue;
}

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4>
RetType inline call_in_appdomain(DWORD dwAppDomainId, RetType (__cdecl * func)(ArgType1, ArgType2, ArgType3, ArgType4), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3, ArgType4 arg4)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_cdecl_struct4<RetType, ArgType1, ArgType2, ArgType3, ArgType4> cs;

    // fill up the callback_cdecl_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;
    cs.arg4 = arg4;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);

    return cs.retValue;
}

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5>
RetType inline call_in_appdomain(DWORD dwAppDomainId, RetType (__cdecl * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3, ArgType4 arg4, ArgType5 arg5)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_cdecl_struct5<RetType, ArgType1, ArgType2, ArgType3, ArgType4, ArgType5> cs;

    // fill up the callback_cdecl_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;
    cs.arg4 = arg4;
    cs.arg5 = arg5;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);

    return cs.retValue;
}

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6>
RetType inline call_in_appdomain(DWORD dwAppDomainId, RetType (__cdecl * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3, ArgType4 arg4, ArgType5 arg5, ArgType6 arg6)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_cdecl_struct6<RetType, ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6> cs;

    // fill up the callback_cdecl_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;
    cs.arg4 = arg4;
    cs.arg5 = arg5;
    cs.arg6 = arg6;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);

    return cs.retValue;
}

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7>
RetType inline call_in_appdomain(DWORD dwAppDomainId, RetType (__cdecl * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3, ArgType4 arg4, ArgType5 arg5, ArgType6 arg6, ArgType7 arg7)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_cdecl_struct7<RetType, ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7> cs;

    // fill up the callback_cdecl_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;
    cs.arg4 = arg4;
    cs.arg5 = arg5;
    cs.arg6 = arg6;
    cs.arg7 = arg7;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);

    return cs.retValue;
}

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8>
RetType inline call_in_appdomain(DWORD dwAppDomainId, RetType (__cdecl * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3, ArgType4 arg4, ArgType5 arg5, ArgType6 arg6, ArgType7 arg7, ArgType8 arg8)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_cdecl_struct8<RetType, ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8> cs;

    // fill up the callback_cdecl_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;
    cs.arg4 = arg4;
    cs.arg5 = arg5;
    cs.arg6 = arg6;
    cs.arg7 = arg7;
    cs.arg8 = arg8;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);

    return cs.retValue;
}

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9>
RetType inline call_in_appdomain(DWORD dwAppDomainId, RetType (__cdecl * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3, ArgType4 arg4, ArgType5 arg5, ArgType6 arg6, ArgType7 arg7, ArgType8 arg8, ArgType9 arg9)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_cdecl_struct9<RetType, ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9> cs;

    // fill up the callback_cdecl_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;
    cs.arg4 = arg4;
    cs.arg5 = arg5;
    cs.arg6 = arg6;
    cs.arg7 = arg7;
    cs.arg8 = arg8;
    cs.arg9 = arg9;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);

    return cs.retValue;
}

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9, typename ArgType10>
RetType inline call_in_appdomain(DWORD dwAppDomainId, RetType (__cdecl * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3, ArgType4 arg4, ArgType5 arg5, ArgType6 arg6, ArgType7 arg7, ArgType8 arg8, ArgType9 arg9, ArgType10 arg10)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_cdecl_struct10<RetType, ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10> cs;

    // fill up the callback_cdecl_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;
    cs.arg4 = arg4;
    cs.arg5 = arg5;
    cs.arg6 = arg6;
    cs.arg7 = arg7;
    cs.arg8 = arg8;
    cs.arg9 = arg9;
    cs.arg10 = arg10;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);

    return cs.retValue;
}

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9, typename ArgType10, typename ArgType11>
RetType inline call_in_appdomain(DWORD dwAppDomainId, RetType (__cdecl * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3, ArgType4 arg4, ArgType5 arg5, ArgType6 arg6, ArgType7 arg7, ArgType8 arg8, ArgType9 arg9, ArgType10 arg10, ArgType11 arg11)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_cdecl_struct11<RetType, ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11> cs;

    // fill up the callback_cdecl_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;
    cs.arg4 = arg4;
    cs.arg5 = arg5;
    cs.arg6 = arg6;
    cs.arg7 = arg7;
    cs.arg8 = arg8;
    cs.arg9 = arg9;
    cs.arg10 = arg10;
    cs.arg11 = arg11;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);

    return cs.retValue;
}

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9, typename ArgType10, typename ArgType11, typename ArgType12>
RetType inline call_in_appdomain(DWORD dwAppDomainId, RetType (__cdecl * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11, ArgType12), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3, ArgType4 arg4, ArgType5 arg5, ArgType6 arg6, ArgType7 arg7, ArgType8 arg8, ArgType9 arg9, ArgType10 arg10, ArgType11 arg11, ArgType12 arg12)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_cdecl_struct12<RetType, ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11, ArgType12> cs;

    // fill up the callback_cdecl_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;
    cs.arg4 = arg4;
    cs.arg5 = arg5;
    cs.arg6 = arg6;
    cs.arg7 = arg7;
    cs.arg8 = arg8;
    cs.arg9 = arg9;
    cs.arg10 = arg10;
    cs.arg11 = arg11;
    cs.arg12 = arg12;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);

    return cs.retValue;
}

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9, typename ArgType10, typename ArgType11, typename ArgType12, typename ArgType13>
RetType inline call_in_appdomain(DWORD dwAppDomainId, RetType (__cdecl * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11, ArgType12, ArgType13), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3, ArgType4 arg4, ArgType5 arg5, ArgType6 arg6, ArgType7 arg7, ArgType8 arg8, ArgType9 arg9, ArgType10 arg10, ArgType11 arg11, ArgType12 arg12, ArgType13 arg13)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_cdecl_struct13<RetType, ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11, ArgType12, ArgType13> cs;

    // fill up the callback_cdecl_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;
    cs.arg4 = arg4;
    cs.arg5 = arg5;
    cs.arg6 = arg6;
    cs.arg7 = arg7;
    cs.arg8 = arg8;
    cs.arg9 = arg9;
    cs.arg10 = arg10;
    cs.arg11 = arg11;
    cs.arg12 = arg12;
    cs.arg13 = arg13;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);

    return cs.retValue;
}

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9, typename ArgType10, typename ArgType11, typename ArgType12, typename ArgType13, typename ArgType14>
RetType inline call_in_appdomain(DWORD dwAppDomainId, RetType (__cdecl * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11, ArgType12, ArgType13, ArgType14), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3, ArgType4 arg4, ArgType5 arg5, ArgType6 arg6, ArgType7 arg7, ArgType8 arg8, ArgType9 arg9, ArgType10 arg10, ArgType11 arg11, ArgType12 arg12, ArgType13 arg13, ArgType14 arg14)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_cdecl_struct14<RetType, ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11, ArgType12, ArgType13, ArgType14> cs;

    // fill up the callback_cdecl_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;
    cs.arg4 = arg4;
    cs.arg5 = arg5;
    cs.arg6 = arg6;
    cs.arg7 = arg7;
    cs.arg8 = arg8;
    cs.arg9 = arg9;
    cs.arg10 = arg10;
    cs.arg11 = arg11;
    cs.arg12 = arg12;
    cs.arg13 = arg13;
    cs.arg14 = arg14;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);

    return cs.retValue;
}

template <typename RetType, typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9, typename ArgType10, typename ArgType11, typename ArgType12, typename ArgType13, typename ArgType14, typename ArgType15>
RetType inline call_in_appdomain(DWORD dwAppDomainId, RetType (__cdecl * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11, ArgType12, ArgType13, ArgType14, ArgType15), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3, ArgType4 arg4, ArgType5 arg5, ArgType6 arg6, ArgType7 arg7, ArgType8 arg8, ArgType9 arg9, ArgType10 arg10, ArgType11 arg11, ArgType12 arg12, ArgType13 arg13, ArgType14 arg14, ArgType15 arg15)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_cdecl_struct15<RetType, ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11, ArgType12, ArgType13, ArgType14, ArgType15> cs;

    // fill up the callback_cdecl_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;
    cs.arg4 = arg4;
    cs.arg5 = arg5;
    cs.arg6 = arg6;
    cs.arg7 = arg7;
    cs.arg8 = arg8;
    cs.arg9 = arg9;
    cs.arg10 = arg10;
    cs.arg11 = arg11;
    cs.arg12 = arg12;
    cs.arg13 = arg13;
    cs.arg14 = arg14;
    cs.arg15 = arg15;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);

    return cs.retValue;
}

void inline call_in_appdomain(DWORD dwAppDomainId, void (__cdecl * func)())
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_cdecl_void_struct0 cs;

    // fill up the callback_cdecl_struct
    cs.func = func;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);
}

template <typename ArgType1>
void inline call_in_appdomain(DWORD dwAppDomainId, void (__cdecl * func)(ArgType1), ArgType1 arg1)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_cdecl_void_struct1<ArgType1> cs;

    // fill up the callback_cdecl_struct
    cs.func = func;
    cs.arg1 = arg1;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);
}

template <typename ArgType1, typename ArgType2>
void inline call_in_appdomain(DWORD dwAppDomainId, void (__cdecl * func)(ArgType1, ArgType2), ArgType1 arg1, ArgType2 arg2)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_cdecl_void_struct2<ArgType1, ArgType2> cs;

    // fill up the callback_cdecl_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);
}

template <typename ArgType1, typename ArgType2, typename ArgType3>
void inline call_in_appdomain(DWORD dwAppDomainId, void (__cdecl * func)(ArgType1, ArgType2, ArgType3), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_cdecl_void_struct3<ArgType1, ArgType2, ArgType3> cs;

    // fill up the callback_cdecl_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);
}

template <typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4>
void inline call_in_appdomain(DWORD dwAppDomainId, void (__cdecl * func)(ArgType1, ArgType2, ArgType3, ArgType4), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3, ArgType4 arg4)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_cdecl_void_struct4<ArgType1, ArgType2, ArgType3, ArgType4> cs;

    // fill up the callback_cdecl_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;
    cs.arg4 = arg4;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);
}

template <typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5>
void inline call_in_appdomain(DWORD dwAppDomainId, void (__cdecl * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3, ArgType4 arg4, ArgType5 arg5)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_cdecl_void_struct5<ArgType1, ArgType2, ArgType3, ArgType4, ArgType5> cs;

    // fill up the callback_cdecl_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;
    cs.arg4 = arg4;
    cs.arg5 = arg5;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);
}

template <typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6>
void inline call_in_appdomain(DWORD dwAppDomainId, void (__cdecl * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3, ArgType4 arg4, ArgType5 arg5, ArgType6 arg6)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_cdecl_void_struct6<ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6> cs;

    // fill up the callback_cdecl_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;
    cs.arg4 = arg4;
    cs.arg5 = arg5;
    cs.arg6 = arg6;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);
}

template <typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7>
void inline call_in_appdomain(DWORD dwAppDomainId, void (__cdecl * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3, ArgType4 arg4, ArgType5 arg5, ArgType6 arg6, ArgType7 arg7)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_cdecl_void_struct7<ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7> cs;

    // fill up the callback_cdecl_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;
    cs.arg4 = arg4;
    cs.arg5 = arg5;
    cs.arg6 = arg6;
    cs.arg7 = arg7;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);
}

template <typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8>
void inline call_in_appdomain(DWORD dwAppDomainId, void (__cdecl * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3, ArgType4 arg4, ArgType5 arg5, ArgType6 arg6, ArgType7 arg7, ArgType8 arg8)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_cdecl_void_struct8<ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8> cs;

    // fill up the callback_cdecl_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;
    cs.arg4 = arg4;
    cs.arg5 = arg5;
    cs.arg6 = arg6;
    cs.arg7 = arg7;
    cs.arg8 = arg8;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);
}

template <typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9>
void inline call_in_appdomain(DWORD dwAppDomainId, void (__cdecl * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3, ArgType4 arg4, ArgType5 arg5, ArgType6 arg6, ArgType7 arg7, ArgType8 arg8, ArgType9 arg9)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_cdecl_void_struct9<ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9> cs;

    // fill up the callback_cdecl_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;
    cs.arg4 = arg4;
    cs.arg5 = arg5;
    cs.arg6 = arg6;
    cs.arg7 = arg7;
    cs.arg8 = arg8;
    cs.arg9 = arg9;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);
}

template <typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9, typename ArgType10>
void inline call_in_appdomain(DWORD dwAppDomainId, void (__cdecl * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3, ArgType4 arg4, ArgType5 arg5, ArgType6 arg6, ArgType7 arg7, ArgType8 arg8, ArgType9 arg9, ArgType10 arg10)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_cdecl_void_struct10<ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10> cs;

    // fill up the callback_cdecl_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;
    cs.arg4 = arg4;
    cs.arg5 = arg5;
    cs.arg6 = arg6;
    cs.arg7 = arg7;
    cs.arg8 = arg8;
    cs.arg9 = arg9;
    cs.arg10 = arg10;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);
}

template <typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9, typename ArgType10, typename ArgType11>
void inline call_in_appdomain(DWORD dwAppDomainId, void (__cdecl * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3, ArgType4 arg4, ArgType5 arg5, ArgType6 arg6, ArgType7 arg7, ArgType8 arg8, ArgType9 arg9, ArgType10 arg10, ArgType11 arg11)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_cdecl_void_struct11<ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11> cs;

    // fill up the callback_cdecl_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;
    cs.arg4 = arg4;
    cs.arg5 = arg5;
    cs.arg6 = arg6;
    cs.arg7 = arg7;
    cs.arg8 = arg8;
    cs.arg9 = arg9;
    cs.arg10 = arg10;
    cs.arg11 = arg11;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);
}

template <typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9, typename ArgType10, typename ArgType11, typename ArgType12>
void inline call_in_appdomain(DWORD dwAppDomainId, void (__cdecl * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11, ArgType12), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3, ArgType4 arg4, ArgType5 arg5, ArgType6 arg6, ArgType7 arg7, ArgType8 arg8, ArgType9 arg9, ArgType10 arg10, ArgType11 arg11, ArgType12 arg12)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_cdecl_void_struct12<ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11, ArgType12> cs;

    // fill up the callback_cdecl_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;
    cs.arg4 = arg4;
    cs.arg5 = arg5;
    cs.arg6 = arg6;
    cs.arg7 = arg7;
    cs.arg8 = arg8;
    cs.arg9 = arg9;
    cs.arg10 = arg10;
    cs.arg11 = arg11;
    cs.arg12 = arg12;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);
}

template <typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9, typename ArgType10, typename ArgType11, typename ArgType12, typename ArgType13>
void inline call_in_appdomain(DWORD dwAppDomainId, void (__cdecl * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11, ArgType12, ArgType13), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3, ArgType4 arg4, ArgType5 arg5, ArgType6 arg6, ArgType7 arg7, ArgType8 arg8, ArgType9 arg9, ArgType10 arg10, ArgType11 arg11, ArgType12 arg12, ArgType13 arg13)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_cdecl_void_struct13<ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11, ArgType12, ArgType13> cs;

    // fill up the callback_cdecl_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;
    cs.arg4 = arg4;
    cs.arg5 = arg5;
    cs.arg6 = arg6;
    cs.arg7 = arg7;
    cs.arg8 = arg8;
    cs.arg9 = arg9;
    cs.arg10 = arg10;
    cs.arg11 = arg11;
    cs.arg12 = arg12;
    cs.arg13 = arg13;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);
}

template <typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9, typename ArgType10, typename ArgType11, typename ArgType12, typename ArgType13, typename ArgType14>
void inline call_in_appdomain(DWORD dwAppDomainId, void (__cdecl * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11, ArgType12, ArgType13, ArgType14), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3, ArgType4 arg4, ArgType5 arg5, ArgType6 arg6, ArgType7 arg7, ArgType8 arg8, ArgType9 arg9, ArgType10 arg10, ArgType11 arg11, ArgType12 arg12, ArgType13 arg13, ArgType14 arg14)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_cdecl_void_struct14<ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11, ArgType12, ArgType13, ArgType14> cs;

    // fill up the callback_cdecl_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;
    cs.arg4 = arg4;
    cs.arg5 = arg5;
    cs.arg6 = arg6;
    cs.arg7 = arg7;
    cs.arg8 = arg8;
    cs.arg9 = arg9;
    cs.arg10 = arg10;
    cs.arg11 = arg11;
    cs.arg12 = arg12;
    cs.arg13 = arg13;
    cs.arg14 = arg14;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);
}

template <typename ArgType1, typename ArgType2, typename ArgType3, typename ArgType4, typename ArgType5, typename ArgType6, typename ArgType7, typename ArgType8, typename ArgType9, typename ArgType10, typename ArgType11, typename ArgType12, typename ArgType13, typename ArgType14, typename ArgType15>
void inline call_in_appdomain(DWORD dwAppDomainId, void (__cdecl * func)(ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11, ArgType12, ArgType13, ArgType14, ArgType15), ArgType1 arg1, ArgType2 arg2, ArgType3 arg3, ArgType4 arg4, ArgType5 arg5, ArgType6 arg6, ArgType7 arg7, ArgType8 arg8, ArgType9 arg9, ArgType10 arg10, ArgType11 arg11, ArgType12 arg12, ArgType13 arg13, ArgType14 arg14, ArgType15 arg15)
{
    ICLRRuntimeHost *pClrHost = _detail::get_clr_runtime_host();
    _detail::callback_cdecl_void_struct15<ArgType1, ArgType2, ArgType3, ArgType4, ArgType5, ArgType6, ArgType7, ArgType8, ArgType9, ArgType10, ArgType11, ArgType12, ArgType13, ArgType14, ArgType15> cs;

    // fill up the callback_cdecl_struct
    cs.func = func;
    cs.arg1 = arg1;
    cs.arg2 = arg2;
    cs.arg3 = arg3;
    cs.arg4 = arg4;
    cs.arg5 = arg5;
    cs.arg6 = arg6;
    cs.arg7 = arg7;
    cs.arg8 = arg8;
    cs.arg9 = arg9;
    cs.arg10 = arg10;
    cs.arg11 = arg11;
    cs.arg12 = arg12;
    cs.arg13 = arg13;
    cs.arg14 = arg14;
    cs.arg15 = arg15;

    // call the function
    HRESULT hr = pClrHost->ExecuteInAppDomain(dwAppDomainId, &cs.callback, &cs);
    pClrHost->Release();
    _detail::validate(hr);
}

} // namespace msclr

#define _INC_MSCLR_APPDOMAIN

#endif  /* !defined (_INC_MSCLR_APPDOMAIN) */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\sys\utime.h ===
/***
*sys/utime.h - definitions/declarations for utime()
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:
*       This file defines the structure used by the utime routine to set
*       new file access and modification times.  NOTE - MS-DOS
*       does not recognize access time, so this field will
*       always be ignored and the modification time field will be
*       used to set the new time.
*
*       [Public]
*
****/

#if _MSC_VER > 1000
#pragma once
#endif  /* _MSC_VER > 1000 */

#include <crtdefs.h>

#ifndef _INC_UTIME
#define _INC_UTIME

#if !defined (_WIN32)
#error ERROR: Only Win32 target supported!
#endif  /* !defined (_WIN32) */

#include <crtdefs.h>

#ifndef _CRTBLD
/* This version of the header files is NOT for user programs.
 * It is intended for use when building the C runtimes ONLY.
 * The version intended for public use will not have this message.
 */
#error ERROR: Use of C runtime library internal header file.
#endif  /* _CRTBLD */

#ifdef _MSC_VER
#pragma pack(push,_CRT_PACKING)
#endif  /* _MSC_VER */

#ifdef __cplusplus
extern "C" {
#endif  /* __cplusplus */

#ifndef _INTERNAL_IFSTRIP_
#include <cruntime.h>
#endif  /* _INTERNAL_IFSTRIP_ */


/* Define _CRTIMP */

#ifndef _CRTIMP
#ifdef CRTDLL
#define _CRTIMP __declspec(dllexport)
#else  /* CRTDLL */
#ifdef _DLL
#define _CRTIMP __declspec(dllimport)
#else  /* _DLL */
#define _CRTIMP
#endif  /* _DLL */
#endif  /* CRTDLL */
#endif  /* _CRTIMP */


/* Define __cdecl for non-Microsoft compilers */

#if (!defined (_MSC_VER) && !defined (__cdecl))
#define __cdecl
#endif  /* (!defined (_MSC_VER) && !defined (__cdecl)) */

#ifndef _WCHAR_T_DEFINED
typedef unsigned short wchar_t;
#define _WCHAR_T_DEFINED
#endif  /* _WCHAR_T_DEFINED */

#if !defined (_W64)
#if !defined(__midl) && (defined(_X86_) || defined(_M_IX86)) && _MSC_VER >= 1300
#define _W64 __w64
#else  /* !defined(__midl) && (defined(_X86_) || defined(_M_IX86)) && _MSC_VER >= 1300 */
#define _W64
#endif  /* !defined(__midl) && (defined(_X86_) || defined(_M_IX86)) && _MSC_VER >= 1300 */
#endif  /* !defined (_W64) */

#ifdef _USE_32BIT_TIME_T
#ifdef _WIN64
#include <crtwrn.h>
#pragma _CRT_WARNING( _NO_32BIT_TIME_T )
#undef  _USE_32BIT_TIME_T
#endif  /* _WIN64 */
#endif  /* _USE_32BIT_TIME_T */

#ifndef _TIME32_T_DEFINED
typedef _W64 long __time32_t;   /* 32-bit time value */
#define _TIME32_T_DEFINED
#endif  /* _TIME32_T_DEFINED */

#ifndef _TIME64_T_DEFINED
typedef __int64 __time64_t;     /* 64-bit time value */
#define _TIME64_T_DEFINED
#endif  /* _TIME64_T_DEFINED */

#ifndef _TIME_T_DEFINED
#ifdef _USE_32BIT_TIME_T
typedef __time32_t time_t;      /* time value */
#else  /* _USE_32BIT_TIME_T */
typedef __time64_t time_t;      /* time value */
#endif  /* _USE_32BIT_TIME_T */
#define _TIME_T_DEFINED         /* avoid multiple def's of time_t */
#endif  /* _TIME_T_DEFINED */

/* define struct used by _utime() function */

#ifndef _UTIMBUF_DEFINED

struct _utimbuf {
        time_t actime;          /* access time */
        time_t modtime;         /* modification time */
        };

struct __utimbuf32 {
        __time32_t actime;      /* access time */
        __time32_t modtime;     /* modification time */
        };

struct __utimbuf64 {
        __time64_t actime;      /* access time */
        __time64_t modtime;     /* modification time */
        };

#if !__STDC__
/* Non-ANSI name for compatibility */
struct utimbuf {
        time_t actime;          /* access time */
        time_t modtime;         /* modification time */
        };

struct utimbuf32 {
        __time32_t actime;      /* access time */
        __time32_t modtime;     /* modification time */
        };

#endif  /* !__STDC__ */

#define _UTIMBUF_DEFINED
#endif  /* _UTIMBUF_DEFINED */


/* Function Prototypes */

_CRTIMP int __cdecl _utime32(_In_z_ const char * _Filename, _In_opt_ struct __utimbuf32 * _Time);

_CRTIMP int __cdecl _futime32(_In_ int _FileDes, _In_opt_ struct __utimbuf32 * _Time);

/* Wide Function Prototypes */
_CRTIMP int __cdecl _wutime32(_In_z_ const wchar_t * _Filename, _In_opt_ struct __utimbuf32 * _Time);

_CRTIMP int __cdecl _utime64(_In_z_ const char * _Filename, _In_opt_ struct __utimbuf64 * _Time);
_CRTIMP int __cdecl _futime64(_In_ int _FileDes, _In_opt_ struct __utimbuf64 * _Time);
_CRTIMP int __cdecl _wutime64(_In_z_ const wchar_t * _Filename, _In_opt_ struct __utimbuf64 * _Time);

#if !defined (RC_INVOKED) && !defined (__midl)
#include <sys/utime.inl>
#endif  /* !defined (RC_INVOKED) && !defined (__midl) */

#ifdef __cplusplus
}
#endif  /* __cplusplus */

#ifdef _MSC_VER
#pragma pack(pop)
#endif  /* _MSC_VER */

#endif  /* _INC_UTIME */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\internal\Base\inc\warning_x.h ===
#ifndef _WARNING_X_H_
#define _WARNING_X_H_

//
// Place warning pragma's in this file that should not be over-ridden
// by defining COMPILER_WARNINGS= and are for internal use only.
//

// Disable PoGO pgu warnings for PGO_KMODE internal usage only.
#pragma warning(disable:4951)   // C4951: 'function' has been edited since profile data was collected, function profile data not used
#pragma warning(disable:4952)   // C4952: 'function' : no profile data found in program database '.pgd'
#pragma warning(disable:4953)   // C4953: Inlinee 'function' has been edited since profile data was collected, profile data not used

//
// [pfx_parse] - workaround for PREfix parse break
//
#ifndef _PREFIX_
#pragma warning(disable:4963)   // C4963: 'function' : no profile data found; different compiler options were used in instrumented build
#endif // !_PREFIX_

#if _MSC_FULL_VER == 140050727

// LKG11 temporary workaround

#pragma warning(disable:4313)   // C4313: 'swprintf_s' : format string conflicts with argument type
#pragma warning(disable:4748)   // C4748: /GS can not protect parameters and local variables from local buffer overrun because optimizations are disabled in function

#endif

#endif // _WARNING_X_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\crt\src\msclr\com\ptr.h ===
/***
*ptr.h
*
*       Copyright (c) Microsoft Corporation. All rights reserved.
*
*Purpose:   COM Wrapper for the Managed World
*
*       [Public]
*
****/

#pragma once

#if !defined (_INC_MSCLR_COM_PTR)

#ifndef __cplusplus_cli
#error ERROR: msclr libraries are not compatible with /clr:oldSyntax
#endif  /* __cplusplus_cli */

#include <vcclr.h>

#include <msclr\safebool.h>

namespace msclr
{

namespace _detail
{
    // COM::ptr::operator->() returns a smart_com_ptr instead of
    // a regular interface pointer so that a Release is done automatically
    // when the temporary is destroyed

    template<class _interface_type>
    ref class smart_com_ptr
    {
        public:
        smart_com_ptr(_interface_type * p)
        {
            ptr= p;
        }

        smart_com_ptr(smart_com_ptr % ip)
        {
            ptr = ip.ptr;
            ptr->AddRef();
        }

        _interface_type * operator ->()
        {
            return ptr;
        }

        ~smart_com_ptr()
        {
            ptr->Release();
        }

        private:
        _interface_type * ptr;
    };
} //namespace _detail


namespace com
{
    template<class _interface_type>
    ref class ptr
    {
        public:

        ptr():obj_rcw(nullptr)
        {
        }

        // Construct from interface pointer
        ptr(_interface_type * p)
        {
            obj_rcw = nullptr;
            assign(p);
        }

        // Attach to an interface pointer
        void Attach(_interface_type * _right)
        {
            if (valid())
            {
                throw gcnew System::InvalidOperationException("COM::ptr.Attach");
            }

            assign(_right);
        }

        // Assign an interface pointer
        ptr<_interface_type> % operator=(_interface_type * _right)
        {
            Attach(_right);
            return *this;
        }

        // All CreateInstance methods create an instance of a COM Object
        // by calling CoCreateInstance
        void CreateInstance(System::String ^ prog_id, LPUNKNOWN pouter, DWORD cls_context)
        {
            wchar_t * pwszprog_id = NULL;

            if(prog_id != nullptr)
            {
                pin_ptr<const __wchar_t> _pinned_ptr = PtrToStringChars( prog_id );
                pwszprog_id = _wcsdup(_pinned_ptr);
            }

            try
            {
                CreateInstance(pwszprog_id, pouter, cls_context);
            }
            finally
            {
                free(pwszprog_id);
            }
        }

        void CreateInstance(System::String ^ prog_id, LPUNKNOWN pouter)
        {
            CreateInstance(prog_id, pouter, CLSCTX_ALL);
        }

        void CreateInstance(System::String ^ prog_id)
        {
            CreateInstance(prog_id, NULL, CLSCTX_ALL);
        }

        void CreateInstance(const wchar_t* progid, LPUNKNOWN pouter, DWORD cls_context)
        {
            CLSID clsid;
            System::Runtime::InteropServices::Marshal::ThrowExceptionForHR(
                CLSIDFromProgID(progid, &clsid));
            CreateInstance(clsid, pouter, cls_context);
        }

        void CreateInstance(const wchar_t * progid, LPUNKNOWN pouter)
        {
            CreateInstance(progid, pouter, CLSCTX_ALL);
        }

        void CreateInstance(const wchar_t * progid)
        {
            CreateInstance(progid, NULL, CLSCTX_ALL);
        }

        void CreateInstance(REFCLSID rclsid,LPUNKNOWN pouter,DWORD cls_context)
        {
            if (valid())
            {
                throw gcnew System::InvalidOperationException("COM::ptr.CreateInstance");
            }

            _interface_type * interface_ptr = NULL;

            System::Runtime::InteropServices::Marshal::ThrowExceptionForHR(CoCreateInstance(
                        rclsid, pouter, cls_context, __uuidof(_interface_type),
                        (void**)&interface_ptr));

            if (interface_ptr)
            {
                assign(interface_ptr);
                interface_ptr->Release();
            }
        }

        void CreateInstance(REFCLSID rclsid,LPUNKNOWN pouter)
        {
            CreateInstance(rclsid, pouter, CLSCTX_ALL);
        }

        void CreateInstance(REFCLSID rclsid)
        {
            CreateInstance(rclsid, NULL, CLSCTX_ALL);
        }

        // Give up ownership of the interface pointer & return the
        // interface pointer
        _interface_type * Detach()
        {
            if(valid())
            {
                _interface_type * interface_ptr = GetInterface();
                destroy();
                return interface_ptr;
            }

            return NULL;
        }

        // Give up ownership of the interface pointer
        void Release()
        {
            if(valid())
            {
                destroy();
            }
        }

        // Operator ->() - to be used to call methods on the owned COM Object
        // We return a smart_com_ptr instead of an interface pointer so that
        // the reference is released automatically
        _detail::smart_com_ptr<_interface_type> operator->()
        {
            _detail::smart_com_ptr<_interface_type> interface_ptr(GetInterface());
            return interface_ptr;
        }

        // Return an interface pointer
        _interface_type * GetInterface()
        {
            if(!valid())
            {
                return NULL;
            }

            System::IntPtr iface_intptr = System::Runtime::InteropServices::Marshal::GetIUnknownForObject(obj_rcw);

            IUnknown * iunk = static_cast<IUnknown *>(static_cast<void*>(iface_intptr));

            _interface_type * interface_ptr;
            System::Runtime::InteropServices::Marshal::ThrowExceptionForHR(iunk->QueryInterface(__uuidof(_interface_type), (void **)&interface_ptr));

            iunk->Release();

            interface_ptr->AddRef();
            System::Runtime::InteropServices::Marshal::Release(iface_intptr);

            return interface_ptr;
        }

        // QueryInteface & fillup up the passed it COM::ptr with the result
        template<class _other_type>
        void QueryInterface(ptr<_other_type> % other)
        {
            QueryInterface<_other_type>(__uuidof(_other_type), other);
        }

        // for use when com::ptr appears in a conditional
        operator _detail_class::_safe_bool()
        {
            return valid() ? _detail_class::_safe_true : _detail_class::_safe_false;
        }

        // for use when com::ptr appears in a conditional
        bool operator!()
        {
            return ! valid();
        }

        ~ptr()
        {
            if(valid())
            {
                destroy();
            }
        }

        private:

        void destroy()
        {
            System::Runtime::InteropServices::Marshal::ReleaseComObject(obj_rcw);
            obj_rcw = nullptr;
        }

        bool valid()
        {
            return (obj_rcw != nullptr);
        }


        void assign(_interface_type *p)
        {
            if(p)
            {
                obj_rcw = System::Runtime::InteropServices::Marshal::GetUniqueObjectForIUnknown(System::IntPtr(p));
            }
        }

        template<class _other_type>
        void QueryInterface(REFIID riid, ptr<_other_type> % other)
        {
            _detail::smart_com_ptr<_interface_type> interface_ptr(GetInterface());
            _other_type * other_ptr;

            System::Runtime::InteropServices::Marshal::ThrowExceptionForHR(interface_ptr->QueryInterface(riid,(void **)&other_ptr));
            other.Attach(other_ptr);

            other_ptr->Release();
        }

        Object ^obj_rcw;
    };
} // namespace com

} // namespace msclr

#define _INC_MSCLR_COM_PTR
#endif  /* !defined (_INC_MSCLR_COM_PTR) */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\internal\Base\lib\i386\ndp10.versions.h ===
/*
 * Copyright (c) Microsoft Corporation
 */

/* This file was generated by genid.bat. */

#define CLR10_VERSION_A       "1.0.3300.0"
#define CLR10_VERSION_W      L"1.0.3300.0"
#define CLR10_VERSION_T  TEXT("1.0.3300.0")
#define CLR10_VERSION_S      S"1.0.3300.0"
#define VS70_VERSION_A       "7.0.3300.0"
#define VS70_VERSION_W      L"7.0.3300.0"
#define VS70_VERSION_T  TEXT("7.0.3300.0")
#define VS70_VERSION_S      S"7.0.3300.0"
#define CLR10_PUBLIC_KEY_TOKEN_A       "b77a5c561934e089"
#define CLR10_PUBLIC_KEY_TOKEN_W      L"b77a5c561934e089"
#define CLR10_PUBLIC_KEY_TOKEN_T  TEXT("b77a5c561934e089")
#define CLR10_PUBLIC_KEY_TOKEN_S      S"b77a5c561934e089"
#define CLR10_PUBLIC_KEY_STRING_A       "00000000000000000400000000000000"
#define CLR10_PUBLIC_KEY_STRING_W      L"00000000000000000400000000000000"
#define CLR10_PUBLIC_KEY_STRING_T  TEXT("00000000000000000400000000000000")
#define CLR10_PUBLIC_KEY_STRING_S      S"00000000000000000400000000000000"
#define CLR10_KEY_FILE_A       "%SDXROOT%\\public\\internal\\strongnamekeys\\fake\\MyKeyFile.snk"
#define CLR10_KEY_FILE_W      L"%SDXROOT%\\public\\internal\\strongnamekeys\\fake\\MyKeyFile.snk"
#define CLR10_KEY_FILE_T  TEXT("%SDXROOT%\\public\\internal\\strongnamekeys\\fake\\MyKeyFile.snk")
#define CLR10_KEY_FILE_S      S"%SDXROOT%\\public\\internal\\strongnamekeys\\fake\\MyKeyFile.snk"
#define CLR10_2_PUBLIC_KEY_TOKEN_A       "b03f5f7f11d50a3a"
#define CLR10_2_PUBLIC_KEY_TOKEN_W      L"b03f5f7f11d50a3a"
#define CLR10_2_PUBLIC_KEY_TOKEN_T  TEXT("b03f5f7f11d50a3a")
#define CLR10_2_PUBLIC_KEY_TOKEN_S      S"b03f5f7f11d50a3a"
#define CLR10_2_PUBLIC_KEY_STRING_A       "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define CLR10_2_PUBLIC_KEY_STRING_W      L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define CLR10_2_PUBLIC_KEY_STRING_T  TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define CLR10_2_PUBLIC_KEY_STRING_S      S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define CLR10_2_KEY_FILE_A       "%SDXROOT%\\public\\internal\\strongnamekeys\\fake\\MyKeyFile.snk"
#define CLR10_2_KEY_FILE_W      L"%SDXROOT%\\public\\internal\\strongnamekeys\\fake\\MyKeyFile.snk"
#define CLR10_2_KEY_FILE_T  TEXT("%SDXROOT%\\public\\internal\\strongnamekeys\\fake\\MyKeyFile.snk")
#define CLR10_2_KEY_FILE_S      S"%SDXROOT%\\public\\internal\\strongnamekeys\\fake\\MyKeyFile.snk"
#define ACCESSIBILITY_ASSEMBLY_IDENTITY_DEF                                      Accessibility,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define ACCESSIBILITY_ASSEMBLY_IDENTITY_DEF_A                                   "Accessibility,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ACCESSIBILITY_ASSEMBLY_IDENTITY_DEF_W                                  L"Accessibility,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ACCESSIBILITY_ASSEMBLY_IDENTITY_DEF_S                                  S"Accessibility,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ACCESSIBILITY_ASSEMBLY_IDENTITY_DEF_T                              TEXT("Accessibility,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define ACCESSIBILITY_ASSEMBLY_IDENTITY_REF                                      Accessibility,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define ACCESSIBILITY_ASSEMBLY_IDENTITY_REF_A                                   "Accessibility,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ACCESSIBILITY_ASSEMBLY_IDENTITY_REF_W                                  L"Accessibility,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ACCESSIBILITY_ASSEMBLY_IDENTITY_REF_S                                  S"Accessibility,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ACCESSIBILITY_ASSEMBLY_IDENTITY_REF_T                              TEXT("Accessibility,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define ACCESSIBILITY_ASSEMBLY_IDENTITY_FRIEND_REF                               Accessibility,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define ACCESSIBILITY_ASSEMBLY_IDENTITY_FRIEND_REF_A                            "Accessibility,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ACCESSIBILITY_ASSEMBLY_IDENTITY_FRIEND_REF_W                           L"Accessibility,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ACCESSIBILITY_ASSEMBLY_IDENTITY_FRIEND_REF_S                           S"Accessibility,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ACCESSIBILITY_ASSEMBLY_IDENTITY_FRIEND_REF_T                       TEXT("Accessibility,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define ACCESSIBILITY_ASSEMBLY_IDENTITY_EXACT_REF                                Accessibility,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define ACCESSIBILITY_ASSEMBLY_IDENTITY_EXACT_REF_A                             "Accessibility,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ACCESSIBILITY_ASSEMBLY_IDENTITY_EXACT_REF_W                            L"Accessibility,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ACCESSIBILITY_ASSEMBLY_IDENTITY_EXACT_REF_S                            S"Accessibility,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ACCESSIBILITY_ASSEMBLY_IDENTITY_EXACT_REF_T                        TEXT("Accessibility,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define ACCESSIBILITY_ASSEMBLY_NAME                                              Accessibility
#define ACCESSIBILITY_ASSEMBLY_NAME_A                                           "Accessibility"
#define ACCESSIBILITY_ASSEMBLY_NAME_W                                          L"Accessibility"
#define ACCESSIBILITY_ASSEMBLY_NAME_S                                          S"Accessibility"
#define ACCESSIBILITY_ASSEMBLY_NAME_T                                      TEXT("Accessibility")
#define ACCESSIBILITY_ASSEMBLY_VERSION                                           1.0.3300.0
#define ACCESSIBILITY_ASSEMBLY_VERSION_A                                        "1.0.3300.0"
#define ACCESSIBILITY_ASSEMBLY_VERSION_W                                       L"1.0.3300.0"
#define ACCESSIBILITY_ASSEMBLY_VERSION_S                                       S"1.0.3300.0"
#define ACCESSIBILITY_ASSEMBLY_VERSION_T                                   TEXT("1.0.3300.0")
#define ACCESSIBILITY_ASSEMBLY_VERSION_IL                                         1:0:3300:0
#define ACCESSIBILITY_ASSEMBLY_PUBLIC_KEY                                        002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define ACCESSIBILITY_ASSEMBLY_PUBLIC_KEY_A                                     "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define ACCESSIBILITY_ASSEMBLY_PUBLIC_KEY_W                                    L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define ACCESSIBILITY_ASSEMBLY_PUBLIC_KEY_S                                    S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define ACCESSIBILITY_ASSEMBLY_PUBLIC_KEY_T                                TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define ACCESSIBILITY_ASSEMBLY_PUBLIC_KEY_IL                                     (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define ACCESSIBILITY_ASSEMBLY_PUBLIC_KEY_TOKEN                                  b03f5f7f11d50a3a
#define ACCESSIBILITY_ASSEMBLY_PUBLIC_KEY_TOKEN_A                               "b03f5f7f11d50a3a"
#define ACCESSIBILITY_ASSEMBLY_PUBLIC_KEY_TOKEN_W                              L"b03f5f7f11d50a3a"
#define ACCESSIBILITY_ASSEMBLY_PUBLIC_KEY_TOKEN_S                              S"b03f5f7f11d50a3a"
#define ACCESSIBILITY_ASSEMBLY_PUBLIC_KEY_TOKEN_T                          TEXT("b03f5f7f11d50a3a")
#define ACCESSIBILITY_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                               (b0 3f 5f 7f 11 d5 0a 3a )
#define ACCESSIBILITY_ASSEMBLY_CULTURE                                           neutral
#define ACCESSIBILITY_ASSEMBLY_CULTURE_A                                        "neutral"
#define ACCESSIBILITY_ASSEMBLY_CULTURE_W                                       L"neutral"
#define ACCESSIBILITY_ASSEMBLY_CULTURE_S                                       S"neutral"
#define ACCESSIBILITY_ASSEMBLY_CULTURE_T                                   TEXT("neutral")
#define CSCOMPMGD_ASSEMBLY_IDENTITY_DEF                                          cscompmgd,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define CSCOMPMGD_ASSEMBLY_IDENTITY_DEF_A                                       "cscompmgd,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CSCOMPMGD_ASSEMBLY_IDENTITY_DEF_W                                      L"cscompmgd,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CSCOMPMGD_ASSEMBLY_IDENTITY_DEF_S                                      S"cscompmgd,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CSCOMPMGD_ASSEMBLY_IDENTITY_DEF_T                                  TEXT("cscompmgd,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define CSCOMPMGD_ASSEMBLY_IDENTITY_REF                                          cscompmgd,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define CSCOMPMGD_ASSEMBLY_IDENTITY_REF_A                                       "cscompmgd,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CSCOMPMGD_ASSEMBLY_IDENTITY_REF_W                                      L"cscompmgd,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CSCOMPMGD_ASSEMBLY_IDENTITY_REF_S                                      S"cscompmgd,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CSCOMPMGD_ASSEMBLY_IDENTITY_REF_T                                  TEXT("cscompmgd,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define CSCOMPMGD_ASSEMBLY_IDENTITY_FRIEND_REF                                   cscompmgd,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define CSCOMPMGD_ASSEMBLY_IDENTITY_FRIEND_REF_A                                "cscompmgd,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CSCOMPMGD_ASSEMBLY_IDENTITY_FRIEND_REF_W                               L"cscompmgd,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CSCOMPMGD_ASSEMBLY_IDENTITY_FRIEND_REF_S                               S"cscompmgd,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CSCOMPMGD_ASSEMBLY_IDENTITY_FRIEND_REF_T                           TEXT("cscompmgd,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define CSCOMPMGD_ASSEMBLY_IDENTITY_EXACT_REF                                    cscompmgd,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define CSCOMPMGD_ASSEMBLY_IDENTITY_EXACT_REF_A                                 "cscompmgd,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CSCOMPMGD_ASSEMBLY_IDENTITY_EXACT_REF_W                                L"cscompmgd,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CSCOMPMGD_ASSEMBLY_IDENTITY_EXACT_REF_S                                S"cscompmgd,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CSCOMPMGD_ASSEMBLY_IDENTITY_EXACT_REF_T                            TEXT("cscompmgd,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define CSCOMPMGD_ASSEMBLY_NAME                                                  cscompmgd
#define CSCOMPMGD_ASSEMBLY_NAME_A                                               "cscompmgd"
#define CSCOMPMGD_ASSEMBLY_NAME_W                                              L"cscompmgd"
#define CSCOMPMGD_ASSEMBLY_NAME_S                                              S"cscompmgd"
#define CSCOMPMGD_ASSEMBLY_NAME_T                                          TEXT("cscompmgd")
#define CSCOMPMGD_ASSEMBLY_VERSION                                               7.0.3300.0
#define CSCOMPMGD_ASSEMBLY_VERSION_A                                            "7.0.3300.0"
#define CSCOMPMGD_ASSEMBLY_VERSION_W                                           L"7.0.3300.0"
#define CSCOMPMGD_ASSEMBLY_VERSION_S                                           S"7.0.3300.0"
#define CSCOMPMGD_ASSEMBLY_VERSION_T                                       TEXT("7.0.3300.0")
#define CSCOMPMGD_ASSEMBLY_VERSION_IL                                             7:0:3300:0
#define CSCOMPMGD_ASSEMBLY_PUBLIC_KEY                                            002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define CSCOMPMGD_ASSEMBLY_PUBLIC_KEY_A                                         "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define CSCOMPMGD_ASSEMBLY_PUBLIC_KEY_W                                        L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define CSCOMPMGD_ASSEMBLY_PUBLIC_KEY_S                                        S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define CSCOMPMGD_ASSEMBLY_PUBLIC_KEY_T                                    TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define CSCOMPMGD_ASSEMBLY_PUBLIC_KEY_IL                                         (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define CSCOMPMGD_ASSEMBLY_PUBLIC_KEY_TOKEN                                      b03f5f7f11d50a3a
#define CSCOMPMGD_ASSEMBLY_PUBLIC_KEY_TOKEN_A                                   "b03f5f7f11d50a3a"
#define CSCOMPMGD_ASSEMBLY_PUBLIC_KEY_TOKEN_W                                  L"b03f5f7f11d50a3a"
#define CSCOMPMGD_ASSEMBLY_PUBLIC_KEY_TOKEN_S                                  S"b03f5f7f11d50a3a"
#define CSCOMPMGD_ASSEMBLY_PUBLIC_KEY_TOKEN_T                              TEXT("b03f5f7f11d50a3a")
#define CSCOMPMGD_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                                   (b0 3f 5f 7f 11 d5 0a 3a )
#define CSCOMPMGD_ASSEMBLY_CULTURE                                               neutral
#define CSCOMPMGD_ASSEMBLY_CULTURE_A                                            "neutral"
#define CSCOMPMGD_ASSEMBLY_CULTURE_W                                           L"neutral"
#define CSCOMPMGD_ASSEMBLY_CULTURE_S                                           S"neutral"
#define CSCOMPMGD_ASSEMBLY_CULTURE_T                                       TEXT("neutral")
#define CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_DEF                                   CustomMarshalers,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_DEF_A                                "CustomMarshalers,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_DEF_W                               L"CustomMarshalers,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_DEF_S                               S"CustomMarshalers,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_DEF_T                           TEXT("CustomMarshalers,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_REF                                   CustomMarshalers,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_REF_A                                "CustomMarshalers,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_REF_W                               L"CustomMarshalers,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_REF_S                               S"CustomMarshalers,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_REF_T                           TEXT("CustomMarshalers,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_FRIEND_REF                            CustomMarshalers,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_FRIEND_REF_A                         "CustomMarshalers,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_FRIEND_REF_W                        L"CustomMarshalers,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_FRIEND_REF_S                        S"CustomMarshalers,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_FRIEND_REF_T                    TEXT("CustomMarshalers,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_EXACT_REF                             CustomMarshalers,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_EXACT_REF_A                          "CustomMarshalers,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_EXACT_REF_W                         L"CustomMarshalers,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_EXACT_REF_S                         S"CustomMarshalers,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_EXACT_REF_T                     TEXT("CustomMarshalers,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define CUSTOMMARSHALERS_ASSEMBLY_NAME                                           CustomMarshalers
#define CUSTOMMARSHALERS_ASSEMBLY_NAME_A                                        "CustomMarshalers"
#define CUSTOMMARSHALERS_ASSEMBLY_NAME_W                                       L"CustomMarshalers"
#define CUSTOMMARSHALERS_ASSEMBLY_NAME_S                                       S"CustomMarshalers"
#define CUSTOMMARSHALERS_ASSEMBLY_NAME_T                                   TEXT("CustomMarshalers")
#define CUSTOMMARSHALERS_ASSEMBLY_VERSION                                        1.0.3300.0
#define CUSTOMMARSHALERS_ASSEMBLY_VERSION_A                                     "1.0.3300.0"
#define CUSTOMMARSHALERS_ASSEMBLY_VERSION_W                                    L"1.0.3300.0"
#define CUSTOMMARSHALERS_ASSEMBLY_VERSION_S                                    S"1.0.3300.0"
#define CUSTOMMARSHALERS_ASSEMBLY_VERSION_T                                TEXT("1.0.3300.0")
#define CUSTOMMARSHALERS_ASSEMBLY_VERSION_IL                                      1:0:3300:0
#define CUSTOMMARSHALERS_ASSEMBLY_PUBLIC_KEY                                     002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define CUSTOMMARSHALERS_ASSEMBLY_PUBLIC_KEY_A                                  "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define CUSTOMMARSHALERS_ASSEMBLY_PUBLIC_KEY_W                                 L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define CUSTOMMARSHALERS_ASSEMBLY_PUBLIC_KEY_S                                 S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define CUSTOMMARSHALERS_ASSEMBLY_PUBLIC_KEY_T                             TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define CUSTOMMARSHALERS_ASSEMBLY_PUBLIC_KEY_IL                                  (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define CUSTOMMARSHALERS_ASSEMBLY_PUBLIC_KEY_TOKEN                               b03f5f7f11d50a3a
#define CUSTOMMARSHALERS_ASSEMBLY_PUBLIC_KEY_TOKEN_A                            "b03f5f7f11d50a3a"
#define CUSTOMMARSHALERS_ASSEMBLY_PUBLIC_KEY_TOKEN_W                           L"b03f5f7f11d50a3a"
#define CUSTOMMARSHALERS_ASSEMBLY_PUBLIC_KEY_TOKEN_S                           S"b03f5f7f11d50a3a"
#define CUSTOMMARSHALERS_ASSEMBLY_PUBLIC_KEY_TOKEN_T                       TEXT("b03f5f7f11d50a3a")
#define CUSTOMMARSHALERS_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                            (b0 3f 5f 7f 11 d5 0a 3a )
#define CUSTOMMARSHALERS_ASSEMBLY_CULTURE                                        neutral
#define CUSTOMMARSHALERS_ASSEMBLY_CULTURE_A                                     "neutral"
#define CUSTOMMARSHALERS_ASSEMBLY_CULTURE_W                                    L"neutral"
#define CUSTOMMARSHALERS_ASSEMBLY_CULTURE_S                                    S"neutral"
#define CUSTOMMARSHALERS_ASSEMBLY_CULTURE_T                                TEXT("neutral")
#define ENVDTE_ASSEMBLY_IDENTITY_DEF                                             EnvDTE,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define ENVDTE_ASSEMBLY_IDENTITY_DEF_A                                          "EnvDTE,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ENVDTE_ASSEMBLY_IDENTITY_DEF_W                                         L"EnvDTE,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ENVDTE_ASSEMBLY_IDENTITY_DEF_S                                         S"EnvDTE,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ENVDTE_ASSEMBLY_IDENTITY_DEF_T                                     TEXT("EnvDTE,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define ENVDTE_ASSEMBLY_IDENTITY_REF                                             EnvDTE,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define ENVDTE_ASSEMBLY_IDENTITY_REF_A                                          "EnvDTE,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ENVDTE_ASSEMBLY_IDENTITY_REF_W                                         L"EnvDTE,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ENVDTE_ASSEMBLY_IDENTITY_REF_S                                         S"EnvDTE,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ENVDTE_ASSEMBLY_IDENTITY_REF_T                                     TEXT("EnvDTE,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define ENVDTE_ASSEMBLY_IDENTITY_FRIEND_REF                                      EnvDTE,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define ENVDTE_ASSEMBLY_IDENTITY_FRIEND_REF_A                                   "EnvDTE,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ENVDTE_ASSEMBLY_IDENTITY_FRIEND_REF_W                                  L"EnvDTE,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ENVDTE_ASSEMBLY_IDENTITY_FRIEND_REF_S                                  S"EnvDTE,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ENVDTE_ASSEMBLY_IDENTITY_FRIEND_REF_T                              TEXT("EnvDTE,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define ENVDTE_ASSEMBLY_IDENTITY_EXACT_REF                                       EnvDTE,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define ENVDTE_ASSEMBLY_IDENTITY_EXACT_REF_A                                    "EnvDTE,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ENVDTE_ASSEMBLY_IDENTITY_EXACT_REF_W                                   L"EnvDTE,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ENVDTE_ASSEMBLY_IDENTITY_EXACT_REF_S                                   S"EnvDTE,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ENVDTE_ASSEMBLY_IDENTITY_EXACT_REF_T                               TEXT("EnvDTE,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define ENVDTE_ASSEMBLY_NAME                                                     EnvDTE
#define ENVDTE_ASSEMBLY_NAME_A                                                  "EnvDTE"
#define ENVDTE_ASSEMBLY_NAME_W                                                 L"EnvDTE"
#define ENVDTE_ASSEMBLY_NAME_S                                                 S"EnvDTE"
#define ENVDTE_ASSEMBLY_NAME_T                                             TEXT("EnvDTE")
#define ENVDTE_ASSEMBLY_VERSION                                                  7.0.3300.0
#define ENVDTE_ASSEMBLY_VERSION_A                                               "7.0.3300.0"
#define ENVDTE_ASSEMBLY_VERSION_W                                              L"7.0.3300.0"
#define ENVDTE_ASSEMBLY_VERSION_S                                              S"7.0.3300.0"
#define ENVDTE_ASSEMBLY_VERSION_T                                          TEXT("7.0.3300.0")
#define ENVDTE_ASSEMBLY_VERSION_IL                                                7:0:3300:0
#define ENVDTE_ASSEMBLY_PUBLIC_KEY                                               002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define ENVDTE_ASSEMBLY_PUBLIC_KEY_A                                            "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define ENVDTE_ASSEMBLY_PUBLIC_KEY_W                                           L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define ENVDTE_ASSEMBLY_PUBLIC_KEY_S                                           S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define ENVDTE_ASSEMBLY_PUBLIC_KEY_T                                       TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define ENVDTE_ASSEMBLY_PUBLIC_KEY_IL                                            (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define ENVDTE_ASSEMBLY_PUBLIC_KEY_TOKEN                                         b03f5f7f11d50a3a
#define ENVDTE_ASSEMBLY_PUBLIC_KEY_TOKEN_A                                      "b03f5f7f11d50a3a"
#define ENVDTE_ASSEMBLY_PUBLIC_KEY_TOKEN_W                                     L"b03f5f7f11d50a3a"
#define ENVDTE_ASSEMBLY_PUBLIC_KEY_TOKEN_S                                     S"b03f5f7f11d50a3a"
#define ENVDTE_ASSEMBLY_PUBLIC_KEY_TOKEN_T                                 TEXT("b03f5f7f11d50a3a")
#define ENVDTE_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                                      (b0 3f 5f 7f 11 d5 0a 3a )
#define ENVDTE_ASSEMBLY_CULTURE                                                  neutral
#define ENVDTE_ASSEMBLY_CULTURE_A                                               "neutral"
#define ENVDTE_ASSEMBLY_CULTURE_W                                              L"neutral"
#define ENVDTE_ASSEMBLY_CULTURE_S                                              S"neutral"
#define ENVDTE_ASSEMBLY_CULTURE_T                                          TEXT("neutral")
#define IEEXECREMOTE_ASSEMBLY_IDENTITY_DEF                                       IEExecRemote,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define IEEXECREMOTE_ASSEMBLY_IDENTITY_DEF_A                                    "IEExecRemote,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IEEXECREMOTE_ASSEMBLY_IDENTITY_DEF_W                                   L"IEExecRemote,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IEEXECREMOTE_ASSEMBLY_IDENTITY_DEF_S                                   S"IEExecRemote,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IEEXECREMOTE_ASSEMBLY_IDENTITY_DEF_T                               TEXT("IEExecRemote,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define IEEXECREMOTE_ASSEMBLY_IDENTITY_REF                                       IEExecRemote,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define IEEXECREMOTE_ASSEMBLY_IDENTITY_REF_A                                    "IEExecRemote,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IEEXECREMOTE_ASSEMBLY_IDENTITY_REF_W                                   L"IEExecRemote,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IEEXECREMOTE_ASSEMBLY_IDENTITY_REF_S                                   S"IEExecRemote,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IEEXECREMOTE_ASSEMBLY_IDENTITY_REF_T                               TEXT("IEExecRemote,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define IEEXECREMOTE_ASSEMBLY_IDENTITY_FRIEND_REF                                IEExecRemote,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define IEEXECREMOTE_ASSEMBLY_IDENTITY_FRIEND_REF_A                             "IEExecRemote,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IEEXECREMOTE_ASSEMBLY_IDENTITY_FRIEND_REF_W                            L"IEExecRemote,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IEEXECREMOTE_ASSEMBLY_IDENTITY_FRIEND_REF_S                            S"IEExecRemote,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IEEXECREMOTE_ASSEMBLY_IDENTITY_FRIEND_REF_T                        TEXT("IEExecRemote,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define IEEXECREMOTE_ASSEMBLY_IDENTITY_EXACT_REF                                 IEExecRemote,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define IEEXECREMOTE_ASSEMBLY_IDENTITY_EXACT_REF_A                              "IEExecRemote,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IEEXECREMOTE_ASSEMBLY_IDENTITY_EXACT_REF_W                             L"IEExecRemote,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IEEXECREMOTE_ASSEMBLY_IDENTITY_EXACT_REF_S                             S"IEExecRemote,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IEEXECREMOTE_ASSEMBLY_IDENTITY_EXACT_REF_T                         TEXT("IEExecRemote,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define IEEXECREMOTE_ASSEMBLY_NAME                                               IEExecRemote
#define IEEXECREMOTE_ASSEMBLY_NAME_A                                            "IEExecRemote"
#define IEEXECREMOTE_ASSEMBLY_NAME_W                                           L"IEExecRemote"
#define IEEXECREMOTE_ASSEMBLY_NAME_S                                           S"IEExecRemote"
#define IEEXECREMOTE_ASSEMBLY_NAME_T                                       TEXT("IEExecRemote")
#define IEEXECREMOTE_ASSEMBLY_VERSION                                            1.0.3300.0
#define IEEXECREMOTE_ASSEMBLY_VERSION_A                                         "1.0.3300.0"
#define IEEXECREMOTE_ASSEMBLY_VERSION_W                                        L"1.0.3300.0"
#define IEEXECREMOTE_ASSEMBLY_VERSION_S                                        S"1.0.3300.0"
#define IEEXECREMOTE_ASSEMBLY_VERSION_T                                    TEXT("1.0.3300.0")
#define IEEXECREMOTE_ASSEMBLY_VERSION_IL                                          1:0:3300:0
#define IEEXECREMOTE_ASSEMBLY_PUBLIC_KEY                                         002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define IEEXECREMOTE_ASSEMBLY_PUBLIC_KEY_A                                      "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define IEEXECREMOTE_ASSEMBLY_PUBLIC_KEY_W                                     L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define IEEXECREMOTE_ASSEMBLY_PUBLIC_KEY_S                                     S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define IEEXECREMOTE_ASSEMBLY_PUBLIC_KEY_T                                 TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define IEEXECREMOTE_ASSEMBLY_PUBLIC_KEY_IL                                      (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define IEEXECREMOTE_ASSEMBLY_PUBLIC_KEY_TOKEN                                   b03f5f7f11d50a3a
#define IEEXECREMOTE_ASSEMBLY_PUBLIC_KEY_TOKEN_A                                "b03f5f7f11d50a3a"
#define IEEXECREMOTE_ASSEMBLY_PUBLIC_KEY_TOKEN_W                               L"b03f5f7f11d50a3a"
#define IEEXECREMOTE_ASSEMBLY_PUBLIC_KEY_TOKEN_S                               S"b03f5f7f11d50a3a"
#define IEEXECREMOTE_ASSEMBLY_PUBLIC_KEY_TOKEN_T                           TEXT("b03f5f7f11d50a3a")
#define IEEXECREMOTE_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                                (b0 3f 5f 7f 11 d5 0a 3a )
#define IEEXECREMOTE_ASSEMBLY_CULTURE                                            neutral
#define IEEXECREMOTE_ASSEMBLY_CULTURE_A                                         "neutral"
#define IEEXECREMOTE_ASSEMBLY_CULTURE_W                                        L"neutral"
#define IEEXECREMOTE_ASSEMBLY_CULTURE_S                                        S"neutral"
#define IEEXECREMOTE_ASSEMBLY_CULTURE_T                                    TEXT("neutral")
#define IEHOST_ASSEMBLY_IDENTITY_DEF                                             IEHost,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define IEHOST_ASSEMBLY_IDENTITY_DEF_A                                          "IEHost,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IEHOST_ASSEMBLY_IDENTITY_DEF_W                                         L"IEHost,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IEHOST_ASSEMBLY_IDENTITY_DEF_S                                         S"IEHost,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IEHOST_ASSEMBLY_IDENTITY_DEF_T                                     TEXT("IEHost,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define IEHOST_ASSEMBLY_IDENTITY_REF                                             IEHost,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define IEHOST_ASSEMBLY_IDENTITY_REF_A                                          "IEHost,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IEHOST_ASSEMBLY_IDENTITY_REF_W                                         L"IEHost,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IEHOST_ASSEMBLY_IDENTITY_REF_S                                         S"IEHost,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IEHOST_ASSEMBLY_IDENTITY_REF_T                                     TEXT("IEHost,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define IEHOST_ASSEMBLY_IDENTITY_FRIEND_REF                                      IEHost,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define IEHOST_ASSEMBLY_IDENTITY_FRIEND_REF_A                                   "IEHost,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IEHOST_ASSEMBLY_IDENTITY_FRIEND_REF_W                                  L"IEHost,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IEHOST_ASSEMBLY_IDENTITY_FRIEND_REF_S                                  S"IEHost,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IEHOST_ASSEMBLY_IDENTITY_FRIEND_REF_T                              TEXT("IEHost,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define IEHOST_ASSEMBLY_IDENTITY_EXACT_REF                                       IEHost,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define IEHOST_ASSEMBLY_IDENTITY_EXACT_REF_A                                    "IEHost,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IEHOST_ASSEMBLY_IDENTITY_EXACT_REF_W                                   L"IEHost,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IEHOST_ASSEMBLY_IDENTITY_EXACT_REF_S                                   S"IEHost,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IEHOST_ASSEMBLY_IDENTITY_EXACT_REF_T                               TEXT("IEHost,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define IEHOST_ASSEMBLY_NAME                                                     IEHost
#define IEHOST_ASSEMBLY_NAME_A                                                  "IEHost"
#define IEHOST_ASSEMBLY_NAME_W                                                 L"IEHost"
#define IEHOST_ASSEMBLY_NAME_S                                                 S"IEHost"
#define IEHOST_ASSEMBLY_NAME_T                                             TEXT("IEHost")
#define IEHOST_ASSEMBLY_VERSION                                                  1.0.3300.0
#define IEHOST_ASSEMBLY_VERSION_A                                               "1.0.3300.0"
#define IEHOST_ASSEMBLY_VERSION_W                                              L"1.0.3300.0"
#define IEHOST_ASSEMBLY_VERSION_S                                              S"1.0.3300.0"
#define IEHOST_ASSEMBLY_VERSION_T                                          TEXT("1.0.3300.0")
#define IEHOST_ASSEMBLY_VERSION_IL                                                1:0:3300:0
#define IEHOST_ASSEMBLY_PUBLIC_KEY                                               002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define IEHOST_ASSEMBLY_PUBLIC_KEY_A                                            "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define IEHOST_ASSEMBLY_PUBLIC_KEY_W                                           L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define IEHOST_ASSEMBLY_PUBLIC_KEY_S                                           S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define IEHOST_ASSEMBLY_PUBLIC_KEY_T                                       TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define IEHOST_ASSEMBLY_PUBLIC_KEY_IL                                            (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define IEHOST_ASSEMBLY_PUBLIC_KEY_TOKEN                                         b03f5f7f11d50a3a
#define IEHOST_ASSEMBLY_PUBLIC_KEY_TOKEN_A                                      "b03f5f7f11d50a3a"
#define IEHOST_ASSEMBLY_PUBLIC_KEY_TOKEN_W                                     L"b03f5f7f11d50a3a"
#define IEHOST_ASSEMBLY_PUBLIC_KEY_TOKEN_S                                     S"b03f5f7f11d50a3a"
#define IEHOST_ASSEMBLY_PUBLIC_KEY_TOKEN_T                                 TEXT("b03f5f7f11d50a3a")
#define IEHOST_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                                      (b0 3f 5f 7f 11 d5 0a 3a )
#define IEHOST_ASSEMBLY_CULTURE                                                  neutral
#define IEHOST_ASSEMBLY_CULTURE_A                                               "neutral"
#define IEHOST_ASSEMBLY_CULTURE_W                                              L"neutral"
#define IEHOST_ASSEMBLY_CULTURE_S                                              S"neutral"
#define IEHOST_ASSEMBLY_CULTURE_T                                          TEXT("neutral")
#define IIEHOST_ASSEMBLY_IDENTITY_DEF                                            IIEHost,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define IIEHOST_ASSEMBLY_IDENTITY_DEF_A                                         "IIEHost,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IIEHOST_ASSEMBLY_IDENTITY_DEF_W                                        L"IIEHost,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IIEHOST_ASSEMBLY_IDENTITY_DEF_S                                        S"IIEHost,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IIEHOST_ASSEMBLY_IDENTITY_DEF_T                                    TEXT("IIEHost,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define IIEHOST_ASSEMBLY_IDENTITY_REF                                            IIEHost,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define IIEHOST_ASSEMBLY_IDENTITY_REF_A                                         "IIEHost,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IIEHOST_ASSEMBLY_IDENTITY_REF_W                                        L"IIEHost,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IIEHOST_ASSEMBLY_IDENTITY_REF_S                                        S"IIEHost,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IIEHOST_ASSEMBLY_IDENTITY_REF_T                                    TEXT("IIEHost,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define IIEHOST_ASSEMBLY_IDENTITY_FRIEND_REF                                     IIEHost,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define IIEHOST_ASSEMBLY_IDENTITY_FRIEND_REF_A                                  "IIEHost,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IIEHOST_ASSEMBLY_IDENTITY_FRIEND_REF_W                                 L"IIEHost,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IIEHOST_ASSEMBLY_IDENTITY_FRIEND_REF_S                                 S"IIEHost,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IIEHOST_ASSEMBLY_IDENTITY_FRIEND_REF_T                             TEXT("IIEHost,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define IIEHOST_ASSEMBLY_IDENTITY_EXACT_REF                                      IIEHost,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define IIEHOST_ASSEMBLY_IDENTITY_EXACT_REF_A                                   "IIEHost,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IIEHOST_ASSEMBLY_IDENTITY_EXACT_REF_W                                  L"IIEHost,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IIEHOST_ASSEMBLY_IDENTITY_EXACT_REF_S                                  S"IIEHost,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IIEHOST_ASSEMBLY_IDENTITY_EXACT_REF_T                              TEXT("IIEHost,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define IIEHOST_ASSEMBLY_NAME                                                    IIEHost
#define IIEHOST_ASSEMBLY_NAME_A                                                 "IIEHost"
#define IIEHOST_ASSEMBLY_NAME_W                                                L"IIEHost"
#define IIEHOST_ASSEMBLY_NAME_S                                                S"IIEHost"
#define IIEHOST_ASSEMBLY_NAME_T                                            TEXT("IIEHost")
#define IIEHOST_ASSEMBLY_VERSION                                                 1.0.3300.0
#define IIEHOST_ASSEMBLY_VERSION_A                                              "1.0.3300.0"
#define IIEHOST_ASSEMBLY_VERSION_W                                             L"1.0.3300.0"
#define IIEHOST_ASSEMBLY_VERSION_S                                             S"1.0.3300.0"
#define IIEHOST_ASSEMBLY_VERSION_T                                         TEXT("1.0.3300.0")
#define IIEHOST_ASSEMBLY_VERSION_IL                                               1:0:3300:0
#define IIEHOST_ASSEMBLY_PUBLIC_KEY                                              002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define IIEHOST_ASSEMBLY_PUBLIC_KEY_A                                           "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define IIEHOST_ASSEMBLY_PUBLIC_KEY_W                                          L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define IIEHOST_ASSEMBLY_PUBLIC_KEY_S                                          S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define IIEHOST_ASSEMBLY_PUBLIC_KEY_T                                      TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define IIEHOST_ASSEMBLY_PUBLIC_KEY_IL                                           (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define IIEHOST_ASSEMBLY_PUBLIC_KEY_TOKEN                                        b03f5f7f11d50a3a
#define IIEHOST_ASSEMBLY_PUBLIC_KEY_TOKEN_A                                     "b03f5f7f11d50a3a"
#define IIEHOST_ASSEMBLY_PUBLIC_KEY_TOKEN_W                                    L"b03f5f7f11d50a3a"
#define IIEHOST_ASSEMBLY_PUBLIC_KEY_TOKEN_S                                    S"b03f5f7f11d50a3a"
#define IIEHOST_ASSEMBLY_PUBLIC_KEY_TOKEN_T                                TEXT("b03f5f7f11d50a3a")
#define IIEHOST_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                                     (b0 3f 5f 7f 11 d5 0a 3a )
#define IIEHOST_ASSEMBLY_CULTURE                                                 neutral
#define IIEHOST_ASSEMBLY_CULTURE_A                                              "neutral"
#define IIEHOST_ASSEMBLY_CULTURE_W                                             L"neutral"
#define IIEHOST_ASSEMBLY_CULTURE_S                                             S"neutral"
#define IIEHOST_ASSEMBLY_CULTURE_T                                         TEXT("neutral")
#define ISYMWRAPPER_ASSEMBLY_IDENTITY_DEF                                        ISymWrapper,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define ISYMWRAPPER_ASSEMBLY_IDENTITY_DEF_A                                     "ISymWrapper,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ISYMWRAPPER_ASSEMBLY_IDENTITY_DEF_W                                    L"ISymWrapper,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ISYMWRAPPER_ASSEMBLY_IDENTITY_DEF_S                                    S"ISymWrapper,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ISYMWRAPPER_ASSEMBLY_IDENTITY_DEF_T                                TEXT("ISymWrapper,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define ISYMWRAPPER_ASSEMBLY_IDENTITY_REF                                        ISymWrapper,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define ISYMWRAPPER_ASSEMBLY_IDENTITY_REF_A                                     "ISymWrapper,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ISYMWRAPPER_ASSEMBLY_IDENTITY_REF_W                                    L"ISymWrapper,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ISYMWRAPPER_ASSEMBLY_IDENTITY_REF_S                                    S"ISymWrapper,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ISYMWRAPPER_ASSEMBLY_IDENTITY_REF_T                                TEXT("ISymWrapper,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define ISYMWRAPPER_ASSEMBLY_IDENTITY_FRIEND_REF                                 ISymWrapper,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define ISYMWRAPPER_ASSEMBLY_IDENTITY_FRIEND_REF_A                              "ISymWrapper,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ISYMWRAPPER_ASSEMBLY_IDENTITY_FRIEND_REF_W                             L"ISymWrapper,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ISYMWRAPPER_ASSEMBLY_IDENTITY_FRIEND_REF_S                             S"ISymWrapper,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ISYMWRAPPER_ASSEMBLY_IDENTITY_FRIEND_REF_T                         TEXT("ISymWrapper,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define ISYMWRAPPER_ASSEMBLY_IDENTITY_EXACT_REF                                  ISymWrapper,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define ISYMWRAPPER_ASSEMBLY_IDENTITY_EXACT_REF_A                               "ISymWrapper,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ISYMWRAPPER_ASSEMBLY_IDENTITY_EXACT_REF_W                              L"ISymWrapper,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ISYMWRAPPER_ASSEMBLY_IDENTITY_EXACT_REF_S                              S"ISymWrapper,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ISYMWRAPPER_ASSEMBLY_IDENTITY_EXACT_REF_T                          TEXT("ISymWrapper,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define ISYMWRAPPER_ASSEMBLY_NAME                                                ISymWrapper
#define ISYMWRAPPER_ASSEMBLY_NAME_A                                             "ISymWrapper"
#define ISYMWRAPPER_ASSEMBLY_NAME_W                                            L"ISymWrapper"
#define ISYMWRAPPER_ASSEMBLY_NAME_S                                            S"ISymWrapper"
#define ISYMWRAPPER_ASSEMBLY_NAME_T                                        TEXT("ISymWrapper")
#define ISYMWRAPPER_ASSEMBLY_VERSION                                             1.0.3300.0
#define ISYMWRAPPER_ASSEMBLY_VERSION_A                                          "1.0.3300.0"
#define ISYMWRAPPER_ASSEMBLY_VERSION_W                                         L"1.0.3300.0"
#define ISYMWRAPPER_ASSEMBLY_VERSION_S                                         S"1.0.3300.0"
#define ISYMWRAPPER_ASSEMBLY_VERSION_T                                     TEXT("1.0.3300.0")
#define ISYMWRAPPER_ASSEMBLY_VERSION_IL                                           1:0:3300:0
#define ISYMWRAPPER_ASSEMBLY_PUBLIC_KEY                                          002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define ISYMWRAPPER_ASSEMBLY_PUBLIC_KEY_A                                       "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define ISYMWRAPPER_ASSEMBLY_PUBLIC_KEY_W                                      L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define ISYMWRAPPER_ASSEMBLY_PUBLIC_KEY_S                                      S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define ISYMWRAPPER_ASSEMBLY_PUBLIC_KEY_T                                  TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define ISYMWRAPPER_ASSEMBLY_PUBLIC_KEY_IL                                       (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define ISYMWRAPPER_ASSEMBLY_PUBLIC_KEY_TOKEN                                    b03f5f7f11d50a3a
#define ISYMWRAPPER_ASSEMBLY_PUBLIC_KEY_TOKEN_A                                 "b03f5f7f11d50a3a"
#define ISYMWRAPPER_ASSEMBLY_PUBLIC_KEY_TOKEN_W                                L"b03f5f7f11d50a3a"
#define ISYMWRAPPER_ASSEMBLY_PUBLIC_KEY_TOKEN_S                                S"b03f5f7f11d50a3a"
#define ISYMWRAPPER_ASSEMBLY_PUBLIC_KEY_TOKEN_T                            TEXT("b03f5f7f11d50a3a")
#define ISYMWRAPPER_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                                 (b0 3f 5f 7f 11 d5 0a 3a )
#define ISYMWRAPPER_ASSEMBLY_CULTURE                                             neutral
#define ISYMWRAPPER_ASSEMBLY_CULTURE_A                                          "neutral"
#define ISYMWRAPPER_ASSEMBLY_CULTURE_W                                         L"neutral"
#define ISYMWRAPPER_ASSEMBLY_CULTURE_S                                         S"neutral"
#define ISYMWRAPPER_ASSEMBLY_CULTURE_T                                     TEXT("neutral")
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_DEF                                  Microsoft.JScript,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_DEF_A                               "Microsoft.JScript,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_DEF_W                              L"Microsoft.JScript,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_DEF_S                              S"Microsoft.JScript,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_DEF_T                          TEXT("Microsoft.JScript,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_REF                                  Microsoft.JScript,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_REF_A                               "Microsoft.JScript,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_REF_W                              L"Microsoft.JScript,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_REF_S                              S"Microsoft.JScript,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_REF_T                          TEXT("Microsoft.JScript,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_FRIEND_REF                           Microsoft.JScript,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_FRIEND_REF_A                        "Microsoft.JScript,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_FRIEND_REF_W                       L"Microsoft.JScript,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_FRIEND_REF_S                       S"Microsoft.JScript,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_FRIEND_REF_T                   TEXT("Microsoft.JScript,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_EXACT_REF                            Microsoft.JScript,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_EXACT_REF_A                         "Microsoft.JScript,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_EXACT_REF_W                        L"Microsoft.JScript,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_EXACT_REF_S                        S"Microsoft.JScript,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_EXACT_REF_T                    TEXT("Microsoft.JScript,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_JSCRIPT_ASSEMBLY_NAME                                          Microsoft.JScript
#define MICROSOFT_JSCRIPT_ASSEMBLY_NAME_A                                       "Microsoft.JScript"
#define MICROSOFT_JSCRIPT_ASSEMBLY_NAME_W                                      L"Microsoft.JScript"
#define MICROSOFT_JSCRIPT_ASSEMBLY_NAME_S                                      S"Microsoft.JScript"
#define MICROSOFT_JSCRIPT_ASSEMBLY_NAME_T                                  TEXT("Microsoft.JScript")
#define MICROSOFT_JSCRIPT_ASSEMBLY_VERSION                                       7.0.3300.0
#define MICROSOFT_JSCRIPT_ASSEMBLY_VERSION_A                                    "7.0.3300.0"
#define MICROSOFT_JSCRIPT_ASSEMBLY_VERSION_W                                   L"7.0.3300.0"
#define MICROSOFT_JSCRIPT_ASSEMBLY_VERSION_S                                   S"7.0.3300.0"
#define MICROSOFT_JSCRIPT_ASSEMBLY_VERSION_T                               TEXT("7.0.3300.0")
#define MICROSOFT_JSCRIPT_ASSEMBLY_VERSION_IL                                     7:0:3300:0
#define MICROSOFT_JSCRIPT_ASSEMBLY_PUBLIC_KEY                                    002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define MICROSOFT_JSCRIPT_ASSEMBLY_PUBLIC_KEY_A                                 "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_JSCRIPT_ASSEMBLY_PUBLIC_KEY_W                                L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_JSCRIPT_ASSEMBLY_PUBLIC_KEY_S                                S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_JSCRIPT_ASSEMBLY_PUBLIC_KEY_T                            TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define MICROSOFT_JSCRIPT_ASSEMBLY_PUBLIC_KEY_IL                                 (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define MICROSOFT_JSCRIPT_ASSEMBLY_PUBLIC_KEY_TOKEN                              b03f5f7f11d50a3a
#define MICROSOFT_JSCRIPT_ASSEMBLY_PUBLIC_KEY_TOKEN_A                           "b03f5f7f11d50a3a"
#define MICROSOFT_JSCRIPT_ASSEMBLY_PUBLIC_KEY_TOKEN_W                          L"b03f5f7f11d50a3a"
#define MICROSOFT_JSCRIPT_ASSEMBLY_PUBLIC_KEY_TOKEN_S                          S"b03f5f7f11d50a3a"
#define MICROSOFT_JSCRIPT_ASSEMBLY_PUBLIC_KEY_TOKEN_T                      TEXT("b03f5f7f11d50a3a")
#define MICROSOFT_JSCRIPT_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                           (b0 3f 5f 7f 11 d5 0a 3a )
#define MICROSOFT_JSCRIPT_ASSEMBLY_CULTURE                                       neutral
#define MICROSOFT_JSCRIPT_ASSEMBLY_CULTURE_A                                    "neutral"
#define MICROSOFT_JSCRIPT_ASSEMBLY_CULTURE_W                                   L"neutral"
#define MICROSOFT_JSCRIPT_ASSEMBLY_CULTURE_S                                   S"neutral"
#define MICROSOFT_JSCRIPT_ASSEMBLY_CULTURE_T                               TEXT("neutral")
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_DEF           Microsoft.VisualBasic.Compatibility.Data,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_DEF_A        "Microsoft.VisualBasic.Compatibility.Data,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_DEF_W       L"Microsoft.VisualBasic.Compatibility.Data,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_DEF_S       S"Microsoft.VisualBasic.Compatibility.Data,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_DEF_T   TEXT("Microsoft.VisualBasic.Compatibility.Data,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_REF           Microsoft.VisualBasic.Compatibility.Data,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_REF_A        "Microsoft.VisualBasic.Compatibility.Data,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_REF_W       L"Microsoft.VisualBasic.Compatibility.Data,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_REF_S       S"Microsoft.VisualBasic.Compatibility.Data,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_REF_T   TEXT("Microsoft.VisualBasic.Compatibility.Data,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_FRIEND_REF          Microsoft.VisualBasic.Compatibility.Data,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_FRIEND_REF_A       "Microsoft.VisualBasic.Compatibility.Data,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_FRIEND_REF_W      L"Microsoft.VisualBasic.Compatibility.Data,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_FRIEND_REF_S      S"Microsoft.VisualBasic.Compatibility.Data,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_FRIEND_REF_T  TEXT("Microsoft.VisualBasic.Compatibility.Data,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_EXACT_REF          Microsoft.VisualBasic.Compatibility.Data,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_EXACT_REF_A       "Microsoft.VisualBasic.Compatibility.Data,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_EXACT_REF_W      L"Microsoft.VisualBasic.Compatibility.Data,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_EXACT_REF_S      S"Microsoft.VisualBasic.Compatibility.Data,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_EXACT_REF_T  TEXT("Microsoft.VisualBasic.Compatibility.Data,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_NAME                   Microsoft.VisualBasic.Compatibility.Data
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_NAME_A                "Microsoft.VisualBasic.Compatibility.Data"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_NAME_W               L"Microsoft.VisualBasic.Compatibility.Data"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_NAME_S               S"Microsoft.VisualBasic.Compatibility.Data"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_NAME_T           TEXT("Microsoft.VisualBasic.Compatibility.Data")
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_VERSION                7.0.3300.0
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_VERSION_A             "7.0.3300.0"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_VERSION_W            L"7.0.3300.0"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_VERSION_S            S"7.0.3300.0"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_VERSION_T        TEXT("7.0.3300.0")
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_VERSION_IL              7:0:3300:0
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_PUBLIC_KEY             002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_PUBLIC_KEY_A          "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_PUBLIC_KEY_W         L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_PUBLIC_KEY_S         S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_PUBLIC_KEY_T     TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_PUBLIC_KEY_IL          (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_PUBLIC_KEY_TOKEN          b03f5f7f11d50a3a
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_PUBLIC_KEY_TOKEN_A       "b03f5f7f11d50a3a"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_PUBLIC_KEY_TOKEN_W      L"b03f5f7f11d50a3a"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_PUBLIC_KEY_TOKEN_S      S"b03f5f7f11d50a3a"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_PUBLIC_KEY_TOKEN_T  TEXT("b03f5f7f11d50a3a")
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_PUBLIC_KEY_TOKEN_IL       (b0 3f 5f 7f 11 d5 0a 3a )
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_CULTURE                neutral
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_CULTURE_A             "neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_CULTURE_W            L"neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_CULTURE_S            S"neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_CULTURE_T        TEXT("neutral")
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_DEF                Microsoft.VisualBasic.Compatibility,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_DEF_A             "Microsoft.VisualBasic.Compatibility,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_DEF_W            L"Microsoft.VisualBasic.Compatibility,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_DEF_S            S"Microsoft.VisualBasic.Compatibility,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_DEF_T        TEXT("Microsoft.VisualBasic.Compatibility,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_REF                Microsoft.VisualBasic.Compatibility,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_REF_A             "Microsoft.VisualBasic.Compatibility,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_REF_W            L"Microsoft.VisualBasic.Compatibility,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_REF_S            S"Microsoft.VisualBasic.Compatibility,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_REF_T        TEXT("Microsoft.VisualBasic.Compatibility,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_FRIEND_REF          Microsoft.VisualBasic.Compatibility,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_FRIEND_REF_A       "Microsoft.VisualBasic.Compatibility,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_FRIEND_REF_W      L"Microsoft.VisualBasic.Compatibility,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_FRIEND_REF_S      S"Microsoft.VisualBasic.Compatibility,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_FRIEND_REF_T  TEXT("Microsoft.VisualBasic.Compatibility,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_EXACT_REF          Microsoft.VisualBasic.Compatibility,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_EXACT_REF_A       "Microsoft.VisualBasic.Compatibility,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_EXACT_REF_W      L"Microsoft.VisualBasic.Compatibility,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_EXACT_REF_S      S"Microsoft.VisualBasic.Compatibility,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_EXACT_REF_T  TEXT("Microsoft.VisualBasic.Compatibility,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_NAME                        Microsoft.VisualBasic.Compatibility
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_NAME_A                     "Microsoft.VisualBasic.Compatibility"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_NAME_W                    L"Microsoft.VisualBasic.Compatibility"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_NAME_S                    S"Microsoft.VisualBasic.Compatibility"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_NAME_T                TEXT("Microsoft.VisualBasic.Compatibility")
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_VERSION                     7.0.3300.0
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_VERSION_A                  "7.0.3300.0"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_VERSION_W                 L"7.0.3300.0"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_VERSION_S                 S"7.0.3300.0"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_VERSION_T             TEXT("7.0.3300.0")
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_VERSION_IL                   7:0:3300:0
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_PUBLIC_KEY                  002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_PUBLIC_KEY_A               "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_PUBLIC_KEY_W              L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_PUBLIC_KEY_S              S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_PUBLIC_KEY_T          TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_PUBLIC_KEY_IL               (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_PUBLIC_KEY_TOKEN            b03f5f7f11d50a3a
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_PUBLIC_KEY_TOKEN_A         "b03f5f7f11d50a3a"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_PUBLIC_KEY_TOKEN_W        L"b03f5f7f11d50a3a"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_PUBLIC_KEY_TOKEN_S        S"b03f5f7f11d50a3a"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_PUBLIC_KEY_TOKEN_T    TEXT("b03f5f7f11d50a3a")
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_PUBLIC_KEY_TOKEN_IL         (b0 3f 5f 7f 11 d5 0a 3a )
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_CULTURE                     neutral
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_CULTURE_A                  "neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_CULTURE_W                 L"neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_CULTURE_S                 S"neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_CULTURE_T             TEXT("neutral")
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_DEF                              Microsoft.VisualBasic,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_DEF_A                           "Microsoft.VisualBasic,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_DEF_W                          L"Microsoft.VisualBasic,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_DEF_S                          S"Microsoft.VisualBasic,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_DEF_T                      TEXT("Microsoft.VisualBasic,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_REF                              Microsoft.VisualBasic,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_REF_A                           "Microsoft.VisualBasic,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_REF_W                          L"Microsoft.VisualBasic,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_REF_S                          S"Microsoft.VisualBasic,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_REF_T                      TEXT("Microsoft.VisualBasic,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_FRIEND_REF                       Microsoft.VisualBasic,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_FRIEND_REF_A                    "Microsoft.VisualBasic,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_FRIEND_REF_W                   L"Microsoft.VisualBasic,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_FRIEND_REF_S                   S"Microsoft.VisualBasic,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_FRIEND_REF_T               TEXT("Microsoft.VisualBasic,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_EXACT_REF                        Microsoft.VisualBasic,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_EXACT_REF_A                     "Microsoft.VisualBasic,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_EXACT_REF_W                    L"Microsoft.VisualBasic,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_EXACT_REF_S                    S"Microsoft.VisualBasic,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_EXACT_REF_T                TEXT("Microsoft.VisualBasic,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALBASIC_ASSEMBLY_NAME                                      Microsoft.VisualBasic
#define MICROSOFT_VISUALBASIC_ASSEMBLY_NAME_A                                   "Microsoft.VisualBasic"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_NAME_W                                  L"Microsoft.VisualBasic"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_NAME_S                                  S"Microsoft.VisualBasic"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_NAME_T                              TEXT("Microsoft.VisualBasic")
#define MICROSOFT_VISUALBASIC_ASSEMBLY_VERSION                                   7.0.3300.0
#define MICROSOFT_VISUALBASIC_ASSEMBLY_VERSION_A                                "7.0.3300.0"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_VERSION_W                               L"7.0.3300.0"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_VERSION_S                               S"7.0.3300.0"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_VERSION_T                           TEXT("7.0.3300.0")
#define MICROSOFT_VISUALBASIC_ASSEMBLY_VERSION_IL                                 7:0:3300:0
#define MICROSOFT_VISUALBASIC_ASSEMBLY_PUBLIC_KEY                                002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define MICROSOFT_VISUALBASIC_ASSEMBLY_PUBLIC_KEY_A                             "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_PUBLIC_KEY_W                            L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_PUBLIC_KEY_S                            S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_PUBLIC_KEY_T                        TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define MICROSOFT_VISUALBASIC_ASSEMBLY_PUBLIC_KEY_IL                             (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define MICROSOFT_VISUALBASIC_ASSEMBLY_PUBLIC_KEY_TOKEN                          b03f5f7f11d50a3a
#define MICROSOFT_VISUALBASIC_ASSEMBLY_PUBLIC_KEY_TOKEN_A                       "b03f5f7f11d50a3a"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_PUBLIC_KEY_TOKEN_W                      L"b03f5f7f11d50a3a"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_PUBLIC_KEY_TOKEN_S                      S"b03f5f7f11d50a3a"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_PUBLIC_KEY_TOKEN_T                  TEXT("b03f5f7f11d50a3a")
#define MICROSOFT_VISUALBASIC_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                       (b0 3f 5f 7f 11 d5 0a 3a )
#define MICROSOFT_VISUALBASIC_ASSEMBLY_CULTURE                                   neutral
#define MICROSOFT_VISUALBASIC_ASSEMBLY_CULTURE_A                                "neutral"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_CULTURE_W                               L"neutral"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_CULTURE_S                               S"neutral"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_CULTURE_T                           TEXT("neutral")
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_DEF                          Microsoft.VisualBasic.Vsa,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_DEF_A                       "Microsoft.VisualBasic.Vsa,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_DEF_W                      L"Microsoft.VisualBasic.Vsa,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_DEF_S                      S"Microsoft.VisualBasic.Vsa,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_DEF_T                  TEXT("Microsoft.VisualBasic.Vsa,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_REF                          Microsoft.VisualBasic.Vsa,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_REF_A                       "Microsoft.VisualBasic.Vsa,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_REF_W                      L"Microsoft.VisualBasic.Vsa,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_REF_S                      S"Microsoft.VisualBasic.Vsa,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_REF_T                  TEXT("Microsoft.VisualBasic.Vsa,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_FRIEND_REF                   Microsoft.VisualBasic.Vsa,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_FRIEND_REF_A                "Microsoft.VisualBasic.Vsa,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_FRIEND_REF_W               L"Microsoft.VisualBasic.Vsa,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_FRIEND_REF_S               S"Microsoft.VisualBasic.Vsa,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_FRIEND_REF_T           TEXT("Microsoft.VisualBasic.Vsa,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_EXACT_REF                    Microsoft.VisualBasic.Vsa,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_EXACT_REF_A                 "Microsoft.VisualBasic.Vsa,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_EXACT_REF_W                L"Microsoft.VisualBasic.Vsa,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_EXACT_REF_S                S"Microsoft.VisualBasic.Vsa,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_EXACT_REF_T            TEXT("Microsoft.VisualBasic.Vsa,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_NAME                                  Microsoft.VisualBasic.Vsa
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_NAME_A                               "Microsoft.VisualBasic.Vsa"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_NAME_W                              L"Microsoft.VisualBasic.Vsa"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_NAME_S                              S"Microsoft.VisualBasic.Vsa"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_NAME_T                          TEXT("Microsoft.VisualBasic.Vsa")
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_VERSION                               7.0.3300.0
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_VERSION_A                            "7.0.3300.0"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_VERSION_W                           L"7.0.3300.0"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_VERSION_S                           S"7.0.3300.0"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_VERSION_T                       TEXT("7.0.3300.0")
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_VERSION_IL                             7:0:3300:0
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_PUBLIC_KEY                            002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_PUBLIC_KEY_A                         "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_PUBLIC_KEY_W                        L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_PUBLIC_KEY_S                        S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_PUBLIC_KEY_T                    TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_PUBLIC_KEY_IL                         (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_PUBLIC_KEY_TOKEN                      b03f5f7f11d50a3a
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_PUBLIC_KEY_TOKEN_A                   "b03f5f7f11d50a3a"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_PUBLIC_KEY_TOKEN_W                  L"b03f5f7f11d50a3a"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_PUBLIC_KEY_TOKEN_S                  S"b03f5f7f11d50a3a"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_PUBLIC_KEY_TOKEN_T              TEXT("b03f5f7f11d50a3a")
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                   (b0 3f 5f 7f 11 d5 0a 3a )
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_CULTURE                               neutral
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_CULTURE_A                            "neutral"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_CULTURE_W                           L"neutral"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_CULTURE_S                           S"neutral"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_CULTURE_T                       TEXT("neutral")
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_DEF                                      Microsoft.Vsa,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_DEF_A                                   "Microsoft.Vsa,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_DEF_W                                  L"Microsoft.Vsa,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_DEF_S                                  S"Microsoft.Vsa,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_DEF_T                              TEXT("Microsoft.Vsa,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_REF                                      Microsoft.Vsa,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_REF_A                                   "Microsoft.Vsa,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_REF_W                                  L"Microsoft.Vsa,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_REF_S                                  S"Microsoft.Vsa,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_REF_T                              TEXT("Microsoft.Vsa,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_FRIEND_REF                               Microsoft.Vsa,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_FRIEND_REF_A                            "Microsoft.Vsa,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_FRIEND_REF_W                           L"Microsoft.Vsa,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_FRIEND_REF_S                           S"Microsoft.Vsa,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_FRIEND_REF_T                       TEXT("Microsoft.Vsa,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_EXACT_REF                                Microsoft.Vsa,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_EXACT_REF_A                             "Microsoft.Vsa,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_EXACT_REF_W                            L"Microsoft.Vsa,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_EXACT_REF_S                            S"Microsoft.Vsa,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_EXACT_REF_T                        TEXT("Microsoft.Vsa,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VSA_ASSEMBLY_NAME                                              Microsoft.Vsa
#define MICROSOFT_VSA_ASSEMBLY_NAME_A                                           "Microsoft.Vsa"
#define MICROSOFT_VSA_ASSEMBLY_NAME_W                                          L"Microsoft.Vsa"
#define MICROSOFT_VSA_ASSEMBLY_NAME_S                                          S"Microsoft.Vsa"
#define MICROSOFT_VSA_ASSEMBLY_NAME_T                                      TEXT("Microsoft.Vsa")
#define MICROSOFT_VSA_ASSEMBLY_VERSION                                           7.0.3300.0
#define MICROSOFT_VSA_ASSEMBLY_VERSION_A                                        "7.0.3300.0"
#define MICROSOFT_VSA_ASSEMBLY_VERSION_W                                       L"7.0.3300.0"
#define MICROSOFT_VSA_ASSEMBLY_VERSION_S                                       S"7.0.3300.0"
#define MICROSOFT_VSA_ASSEMBLY_VERSION_T                                   TEXT("7.0.3300.0")
#define MICROSOFT_VSA_ASSEMBLY_VERSION_IL                                         7:0:3300:0
#define MICROSOFT_VSA_ASSEMBLY_PUBLIC_KEY                                        002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define MICROSOFT_VSA_ASSEMBLY_PUBLIC_KEY_A                                     "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VSA_ASSEMBLY_PUBLIC_KEY_W                                    L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VSA_ASSEMBLY_PUBLIC_KEY_S                                    S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VSA_ASSEMBLY_PUBLIC_KEY_T                                TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define MICROSOFT_VSA_ASSEMBLY_PUBLIC_KEY_IL                                     (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define MICROSOFT_VSA_ASSEMBLY_PUBLIC_KEY_TOKEN                                  b03f5f7f11d50a3a
#define MICROSOFT_VSA_ASSEMBLY_PUBLIC_KEY_TOKEN_A                               "b03f5f7f11d50a3a"
#define MICROSOFT_VSA_ASSEMBLY_PUBLIC_KEY_TOKEN_W                              L"b03f5f7f11d50a3a"
#define MICROSOFT_VSA_ASSEMBLY_PUBLIC_KEY_TOKEN_S                              S"b03f5f7f11d50a3a"
#define MICROSOFT_VSA_ASSEMBLY_PUBLIC_KEY_TOKEN_T                          TEXT("b03f5f7f11d50a3a")
#define MICROSOFT_VSA_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                               (b0 3f 5f 7f 11 d5 0a 3a )
#define MICROSOFT_VSA_ASSEMBLY_CULTURE                                           neutral
#define MICROSOFT_VSA_ASSEMBLY_CULTURE_A                                        "neutral"
#define MICROSOFT_VSA_ASSEMBLY_CULTURE_W                                       L"neutral"
#define MICROSOFT_VSA_ASSEMBLY_CULTURE_S                                       S"neutral"
#define MICROSOFT_VSA_ASSEMBLY_CULTURE_T                                   TEXT("neutral")
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_DEF                  Microsoft.Vsa.Vb.CodeDOMProcessor,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_DEF_A               "Microsoft.Vsa.Vb.CodeDOMProcessor,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_DEF_W              L"Microsoft.Vsa.Vb.CodeDOMProcessor,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_DEF_S              S"Microsoft.Vsa.Vb.CodeDOMProcessor,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_DEF_T          TEXT("Microsoft.Vsa.Vb.CodeDOMProcessor,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_REF                  Microsoft.Vsa.Vb.CodeDOMProcessor,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_REF_A               "Microsoft.Vsa.Vb.CodeDOMProcessor,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_REF_W              L"Microsoft.Vsa.Vb.CodeDOMProcessor,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_REF_S              S"Microsoft.Vsa.Vb.CodeDOMProcessor,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_REF_T          TEXT("Microsoft.Vsa.Vb.CodeDOMProcessor,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_FRIEND_REF           Microsoft.Vsa.Vb.CodeDOMProcessor,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_FRIEND_REF_A        "Microsoft.Vsa.Vb.CodeDOMProcessor,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_FRIEND_REF_W       L"Microsoft.Vsa.Vb.CodeDOMProcessor,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_FRIEND_REF_S       S"Microsoft.Vsa.Vb.CodeDOMProcessor,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_FRIEND_REF_T   TEXT("Microsoft.Vsa.Vb.CodeDOMProcessor,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_EXACT_REF            Microsoft.Vsa.Vb.CodeDOMProcessor,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_EXACT_REF_A         "Microsoft.Vsa.Vb.CodeDOMProcessor,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_EXACT_REF_W        L"Microsoft.Vsa.Vb.CodeDOMProcessor,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_EXACT_REF_S        S"Microsoft.Vsa.Vb.CodeDOMProcessor,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_EXACT_REF_T    TEXT("Microsoft.Vsa.Vb.CodeDOMProcessor,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_NAME                          Microsoft.Vsa.Vb.CodeDOMProcessor
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_NAME_A                       "Microsoft.Vsa.Vb.CodeDOMProcessor"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_NAME_W                      L"Microsoft.Vsa.Vb.CodeDOMProcessor"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_NAME_S                      S"Microsoft.Vsa.Vb.CodeDOMProcessor"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_NAME_T                  TEXT("Microsoft.Vsa.Vb.CodeDOMProcessor")
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_VERSION                       7.0.3300.0
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_VERSION_A                    "7.0.3300.0"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_VERSION_W                   L"7.0.3300.0"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_VERSION_S                   S"7.0.3300.0"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_VERSION_T               TEXT("7.0.3300.0")
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_VERSION_IL                     7:0:3300:0
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_PUBLIC_KEY                    002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_PUBLIC_KEY_A                 "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_PUBLIC_KEY_W                L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_PUBLIC_KEY_S                S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_PUBLIC_KEY_T            TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_PUBLIC_KEY_IL                 (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_PUBLIC_KEY_TOKEN              b03f5f7f11d50a3a
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_PUBLIC_KEY_TOKEN_A           "b03f5f7f11d50a3a"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_PUBLIC_KEY_TOKEN_W          L"b03f5f7f11d50a3a"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_PUBLIC_KEY_TOKEN_S          S"b03f5f7f11d50a3a"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_PUBLIC_KEY_TOKEN_T      TEXT("b03f5f7f11d50a3a")
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_PUBLIC_KEY_TOKEN_IL           (b0 3f 5f 7f 11 d5 0a 3a )
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_CULTURE                       neutral
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_CULTURE_A                    "neutral"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_CULTURE_W                   L"neutral"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_CULTURE_S                   S"neutral"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_CULTURE_T               TEXT("neutral")
#define MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_DEF                                    Microsoft_VsaVb,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_DEF_A                                 "Microsoft_VsaVb,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_DEF_W                                L"Microsoft_VsaVb,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_DEF_S                                S"Microsoft_VsaVb,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_DEF_T                            TEXT("Microsoft_VsaVb,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_REF                                    Microsoft_VsaVb,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_REF_A                                 "Microsoft_VsaVb,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_REF_W                                L"Microsoft_VsaVb,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_REF_S                                S"Microsoft_VsaVb,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_REF_T                            TEXT("Microsoft_VsaVb,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_FRIEND_REF                             Microsoft_VsaVb,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_FRIEND_REF_A                          "Microsoft_VsaVb,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_FRIEND_REF_W                         L"Microsoft_VsaVb,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_FRIEND_REF_S                         S"Microsoft_VsaVb,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_FRIEND_REF_T                     TEXT("Microsoft_VsaVb,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_EXACT_REF                              Microsoft_VsaVb,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_EXACT_REF_A                           "Microsoft_VsaVb,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_EXACT_REF_W                          L"Microsoft_VsaVb,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_EXACT_REF_S                          S"Microsoft_VsaVb,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_EXACT_REF_T                      TEXT("Microsoft_VsaVb,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VSAVB_ASSEMBLY_NAME                                            Microsoft_VsaVb
#define MICROSOFT_VSAVB_ASSEMBLY_NAME_A                                         "Microsoft_VsaVb"
#define MICROSOFT_VSAVB_ASSEMBLY_NAME_W                                        L"Microsoft_VsaVb"
#define MICROSOFT_VSAVB_ASSEMBLY_NAME_S                                        S"Microsoft_VsaVb"
#define MICROSOFT_VSAVB_ASSEMBLY_NAME_T                                    TEXT("Microsoft_VsaVb")
#define MICROSOFT_VSAVB_ASSEMBLY_VERSION                                         7.0.3300.0
#define MICROSOFT_VSAVB_ASSEMBLY_VERSION_A                                      "7.0.3300.0"
#define MICROSOFT_VSAVB_ASSEMBLY_VERSION_W                                     L"7.0.3300.0"
#define MICROSOFT_VSAVB_ASSEMBLY_VERSION_S                                     S"7.0.3300.0"
#define MICROSOFT_VSAVB_ASSEMBLY_VERSION_T                                 TEXT("7.0.3300.0")
#define MICROSOFT_VSAVB_ASSEMBLY_VERSION_IL                                       7:0:3300:0
#define MICROSOFT_VSAVB_ASSEMBLY_PUBLIC_KEY                                      002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define MICROSOFT_VSAVB_ASSEMBLY_PUBLIC_KEY_A                                   "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VSAVB_ASSEMBLY_PUBLIC_KEY_W                                  L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VSAVB_ASSEMBLY_PUBLIC_KEY_S                                  S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VSAVB_ASSEMBLY_PUBLIC_KEY_T                              TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define MICROSOFT_VSAVB_ASSEMBLY_PUBLIC_KEY_IL                                   (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define MICROSOFT_VSAVB_ASSEMBLY_PUBLIC_KEY_TOKEN                                b03f5f7f11d50a3a
#define MICROSOFT_VSAVB_ASSEMBLY_PUBLIC_KEY_TOKEN_A                             "b03f5f7f11d50a3a"
#define MICROSOFT_VSAVB_ASSEMBLY_PUBLIC_KEY_TOKEN_W                            L"b03f5f7f11d50a3a"
#define MICROSOFT_VSAVB_ASSEMBLY_PUBLIC_KEY_TOKEN_S                            S"b03f5f7f11d50a3a"
#define MICROSOFT_VSAVB_ASSEMBLY_PUBLIC_KEY_TOKEN_T                        TEXT("b03f5f7f11d50a3a")
#define MICROSOFT_VSAVB_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                             (b0 3f 5f 7f 11 d5 0a 3a )
#define MICROSOFT_VSAVB_ASSEMBLY_CULTURE                                         neutral
#define MICROSOFT_VSAVB_ASSEMBLY_CULTURE_A                                      "neutral"
#define MICROSOFT_VSAVB_ASSEMBLY_CULTURE_W                                     L"neutral"
#define MICROSOFT_VSAVB_ASSEMBLY_CULTURE_S                                     S"neutral"
#define MICROSOFT_VSAVB_ASSEMBLY_CULTURE_T                                 TEXT("neutral")
#define MSCORCFG_ASSEMBLY_IDENTITY_DEF                                           mscorcfg,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MSCORCFG_ASSEMBLY_IDENTITY_DEF_A                                        "mscorcfg,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSCORCFG_ASSEMBLY_IDENTITY_DEF_W                                       L"mscorcfg,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSCORCFG_ASSEMBLY_IDENTITY_DEF_S                                       S"mscorcfg,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSCORCFG_ASSEMBLY_IDENTITY_DEF_T                                   TEXT("mscorcfg,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MSCORCFG_ASSEMBLY_IDENTITY_REF                                           mscorcfg,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MSCORCFG_ASSEMBLY_IDENTITY_REF_A                                        "mscorcfg,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSCORCFG_ASSEMBLY_IDENTITY_REF_W                                       L"mscorcfg,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSCORCFG_ASSEMBLY_IDENTITY_REF_S                                       S"mscorcfg,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSCORCFG_ASSEMBLY_IDENTITY_REF_T                                   TEXT("mscorcfg,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MSCORCFG_ASSEMBLY_IDENTITY_FRIEND_REF                                    mscorcfg,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MSCORCFG_ASSEMBLY_IDENTITY_FRIEND_REF_A                                 "mscorcfg,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSCORCFG_ASSEMBLY_IDENTITY_FRIEND_REF_W                                L"mscorcfg,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSCORCFG_ASSEMBLY_IDENTITY_FRIEND_REF_S                                S"mscorcfg,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSCORCFG_ASSEMBLY_IDENTITY_FRIEND_REF_T                            TEXT("mscorcfg,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MSCORCFG_ASSEMBLY_IDENTITY_EXACT_REF                                     mscorcfg,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MSCORCFG_ASSEMBLY_IDENTITY_EXACT_REF_A                                  "mscorcfg,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSCORCFG_ASSEMBLY_IDENTITY_EXACT_REF_W                                 L"mscorcfg,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSCORCFG_ASSEMBLY_IDENTITY_EXACT_REF_S                                 S"mscorcfg,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSCORCFG_ASSEMBLY_IDENTITY_EXACT_REF_T                             TEXT("mscorcfg,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MSCORCFG_ASSEMBLY_NAME                                                   mscorcfg
#define MSCORCFG_ASSEMBLY_NAME_A                                                "mscorcfg"
#define MSCORCFG_ASSEMBLY_NAME_W                                               L"mscorcfg"
#define MSCORCFG_ASSEMBLY_NAME_S                                               S"mscorcfg"
#define MSCORCFG_ASSEMBLY_NAME_T                                           TEXT("mscorcfg")
#define MSCORCFG_ASSEMBLY_VERSION                                                1.0.3300.0
#define MSCORCFG_ASSEMBLY_VERSION_A                                             "1.0.3300.0"
#define MSCORCFG_ASSEMBLY_VERSION_W                                            L"1.0.3300.0"
#define MSCORCFG_ASSEMBLY_VERSION_S                                            S"1.0.3300.0"
#define MSCORCFG_ASSEMBLY_VERSION_T                                        TEXT("1.0.3300.0")
#define MSCORCFG_ASSEMBLY_VERSION_IL                                              1:0:3300:0
#define MSCORCFG_ASSEMBLY_PUBLIC_KEY                                             002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define MSCORCFG_ASSEMBLY_PUBLIC_KEY_A                                          "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MSCORCFG_ASSEMBLY_PUBLIC_KEY_W                                         L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MSCORCFG_ASSEMBLY_PUBLIC_KEY_S                                         S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MSCORCFG_ASSEMBLY_PUBLIC_KEY_T                                     TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define MSCORCFG_ASSEMBLY_PUBLIC_KEY_IL                                          (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define MSCORCFG_ASSEMBLY_PUBLIC_KEY_TOKEN                                       b03f5f7f11d50a3a
#define MSCORCFG_ASSEMBLY_PUBLIC_KEY_TOKEN_A                                    "b03f5f7f11d50a3a"
#define MSCORCFG_ASSEMBLY_PUBLIC_KEY_TOKEN_W                                   L"b03f5f7f11d50a3a"
#define MSCORCFG_ASSEMBLY_PUBLIC_KEY_TOKEN_S                                   S"b03f5f7f11d50a3a"
#define MSCORCFG_ASSEMBLY_PUBLIC_KEY_TOKEN_T                               TEXT("b03f5f7f11d50a3a")
#define MSCORCFG_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                                    (b0 3f 5f 7f 11 d5 0a 3a )
#define MSCORCFG_ASSEMBLY_CULTURE                                                neutral
#define MSCORCFG_ASSEMBLY_CULTURE_A                                             "neutral"
#define MSCORCFG_ASSEMBLY_CULTURE_W                                            L"neutral"
#define MSCORCFG_ASSEMBLY_CULTURE_S                                            S"neutral"
#define MSCORCFG_ASSEMBLY_CULTURE_T                                        TEXT("neutral")
#define MSCORLIB_ASSEMBLY_IDENTITY_DEF                                           mscorlib,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define MSCORLIB_ASSEMBLY_IDENTITY_DEF_A                                        "mscorlib,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MSCORLIB_ASSEMBLY_IDENTITY_DEF_W                                       L"mscorlib,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MSCORLIB_ASSEMBLY_IDENTITY_DEF_S                                       S"mscorlib,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MSCORLIB_ASSEMBLY_IDENTITY_DEF_T                                   TEXT("mscorlib,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define MSCORLIB_ASSEMBLY_IDENTITY_REF                                           mscorlib,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define MSCORLIB_ASSEMBLY_IDENTITY_REF_A                                        "mscorlib,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MSCORLIB_ASSEMBLY_IDENTITY_REF_W                                       L"mscorlib,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MSCORLIB_ASSEMBLY_IDENTITY_REF_S                                       S"mscorlib,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MSCORLIB_ASSEMBLY_IDENTITY_REF_T                                   TEXT("mscorlib,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define MSCORLIB_ASSEMBLY_IDENTITY_FRIEND_REF                                    mscorlib,publicKeyToken=b77a5c561934e089,culture=neutral
#define MSCORLIB_ASSEMBLY_IDENTITY_FRIEND_REF_A                                 "mscorlib,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MSCORLIB_ASSEMBLY_IDENTITY_FRIEND_REF_W                                L"mscorlib,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MSCORLIB_ASSEMBLY_IDENTITY_FRIEND_REF_S                                S"mscorlib,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MSCORLIB_ASSEMBLY_IDENTITY_FRIEND_REF_T                            TEXT("mscorlib,publicKeyToken=b77a5c561934e089,culture=neutral")
#define MSCORLIB_ASSEMBLY_IDENTITY_EXACT_REF                                     mscorlib,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define MSCORLIB_ASSEMBLY_IDENTITY_EXACT_REF_A                                  "mscorlib,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MSCORLIB_ASSEMBLY_IDENTITY_EXACT_REF_W                                 L"mscorlib,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MSCORLIB_ASSEMBLY_IDENTITY_EXACT_REF_S                                 S"mscorlib,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MSCORLIB_ASSEMBLY_IDENTITY_EXACT_REF_T                             TEXT("mscorlib,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define MSCORLIB_ASSEMBLY_NAME                                                   mscorlib
#define MSCORLIB_ASSEMBLY_NAME_A                                                "mscorlib"
#define MSCORLIB_ASSEMBLY_NAME_W                                               L"mscorlib"
#define MSCORLIB_ASSEMBLY_NAME_S                                               S"mscorlib"
#define MSCORLIB_ASSEMBLY_NAME_T                                           TEXT("mscorlib")
#define MSCORLIB_ASSEMBLY_VERSION                                                1.0.3300.0
#define MSCORLIB_ASSEMBLY_VERSION_A                                             "1.0.3300.0"
#define MSCORLIB_ASSEMBLY_VERSION_W                                            L"1.0.3300.0"
#define MSCORLIB_ASSEMBLY_VERSION_S                                            S"1.0.3300.0"
#define MSCORLIB_ASSEMBLY_VERSION_T                                        TEXT("1.0.3300.0")
#define MSCORLIB_ASSEMBLY_VERSION_IL                                              1:0:3300:0
#define MSCORLIB_ASSEMBLY_PUBLIC_KEY                                             00000000000000000400000000000000
#define MSCORLIB_ASSEMBLY_PUBLIC_KEY_A                                          "00000000000000000400000000000000"
#define MSCORLIB_ASSEMBLY_PUBLIC_KEY_W                                         L"00000000000000000400000000000000"
#define MSCORLIB_ASSEMBLY_PUBLIC_KEY_S                                         S"00000000000000000400000000000000"
#define MSCORLIB_ASSEMBLY_PUBLIC_KEY_T                                     TEXT("00000000000000000400000000000000")
#define MSCORLIB_ASSEMBLY_PUBLIC_KEY_IL                                          (00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00 )
#define MSCORLIB_ASSEMBLY_PUBLIC_KEY_TOKEN                                       b77a5c561934e089
#define MSCORLIB_ASSEMBLY_PUBLIC_KEY_TOKEN_A                                    "b77a5c561934e089"
#define MSCORLIB_ASSEMBLY_PUBLIC_KEY_TOKEN_W                                   L"b77a5c561934e089"
#define MSCORLIB_ASSEMBLY_PUBLIC_KEY_TOKEN_S                                   S"b77a5c561934e089"
#define MSCORLIB_ASSEMBLY_PUBLIC_KEY_TOKEN_T                               TEXT("b77a5c561934e089")
#define MSCORLIB_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                                    (b7 7a 5c 56 19 34 e0 89 )
#define MSCORLIB_ASSEMBLY_CULTURE                                                neutral
#define MSCORLIB_ASSEMBLY_CULTURE_A                                             "neutral"
#define MSCORLIB_ASSEMBLY_CULTURE_W                                            L"neutral"
#define MSCORLIB_ASSEMBLY_CULTURE_S                                            S"neutral"
#define MSCORLIB_ASSEMBLY_CULTURE_T                                        TEXT("neutral")
#define OFFICE_ASSEMBLY_IDENTITY_DEF                                             Office,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define OFFICE_ASSEMBLY_IDENTITY_DEF_A                                          "Office,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define OFFICE_ASSEMBLY_IDENTITY_DEF_W                                         L"Office,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define OFFICE_ASSEMBLY_IDENTITY_DEF_S                                         S"Office,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define OFFICE_ASSEMBLY_IDENTITY_DEF_T                                     TEXT("Office,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define OFFICE_ASSEMBLY_IDENTITY_REF                                             Office,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define OFFICE_ASSEMBLY_IDENTITY_REF_A                                          "Office,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define OFFICE_ASSEMBLY_IDENTITY_REF_W                                         L"Office,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define OFFICE_ASSEMBLY_IDENTITY_REF_S                                         S"Office,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define OFFICE_ASSEMBLY_IDENTITY_REF_T                                     TEXT("Office,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define OFFICE_ASSEMBLY_IDENTITY_FRIEND_REF                                      Office,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define OFFICE_ASSEMBLY_IDENTITY_FRIEND_REF_A                                   "Office,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define OFFICE_ASSEMBLY_IDENTITY_FRIEND_REF_W                                  L"Office,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define OFFICE_ASSEMBLY_IDENTITY_FRIEND_REF_S                                  S"Office,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define OFFICE_ASSEMBLY_IDENTITY_FRIEND_REF_T                              TEXT("Office,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define OFFICE_ASSEMBLY_IDENTITY_EXACT_REF                                       Office,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define OFFICE_ASSEMBLY_IDENTITY_EXACT_REF_A                                    "Office,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define OFFICE_ASSEMBLY_IDENTITY_EXACT_REF_W                                   L"Office,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define OFFICE_ASSEMBLY_IDENTITY_EXACT_REF_S                                   S"Office,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define OFFICE_ASSEMBLY_IDENTITY_EXACT_REF_T                               TEXT("Office,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define OFFICE_ASSEMBLY_NAME                                                     Office
#define OFFICE_ASSEMBLY_NAME_A                                                  "Office"
#define OFFICE_ASSEMBLY_NAME_W                                                 L"Office"
#define OFFICE_ASSEMBLY_NAME_S                                                 S"Office"
#define OFFICE_ASSEMBLY_NAME_T                                             TEXT("Office")
#define OFFICE_ASSEMBLY_VERSION                                                  7.0.3300.0
#define OFFICE_ASSEMBLY_VERSION_A                                               "7.0.3300.0"
#define OFFICE_ASSEMBLY_VERSION_W                                              L"7.0.3300.0"
#define OFFICE_ASSEMBLY_VERSION_S                                              S"7.0.3300.0"
#define OFFICE_ASSEMBLY_VERSION_T                                          TEXT("7.0.3300.0")
#define OFFICE_ASSEMBLY_VERSION_IL                                                7:0:3300:0
#define OFFICE_ASSEMBLY_PUBLIC_KEY                                               002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define OFFICE_ASSEMBLY_PUBLIC_KEY_A                                            "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define OFFICE_ASSEMBLY_PUBLIC_KEY_W                                           L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define OFFICE_ASSEMBLY_PUBLIC_KEY_S                                           S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define OFFICE_ASSEMBLY_PUBLIC_KEY_T                                       TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define OFFICE_ASSEMBLY_PUBLIC_KEY_IL                                            (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define OFFICE_ASSEMBLY_PUBLIC_KEY_TOKEN                                         b03f5f7f11d50a3a
#define OFFICE_ASSEMBLY_PUBLIC_KEY_TOKEN_A                                      "b03f5f7f11d50a3a"
#define OFFICE_ASSEMBLY_PUBLIC_KEY_TOKEN_W                                     L"b03f5f7f11d50a3a"
#define OFFICE_ASSEMBLY_PUBLIC_KEY_TOKEN_S                                     S"b03f5f7f11d50a3a"
#define OFFICE_ASSEMBLY_PUBLIC_KEY_TOKEN_T                                 TEXT("b03f5f7f11d50a3a")
#define OFFICE_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                                      (b0 3f 5f 7f 11 d5 0a 3a )
#define OFFICE_ASSEMBLY_CULTURE                                                  neutral
#define OFFICE_ASSEMBLY_CULTURE_A                                               "neutral"
#define OFFICE_ASSEMBLY_CULTURE_W                                              L"neutral"
#define OFFICE_ASSEMBLY_CULTURE_S                                              S"neutral"
#define OFFICE_ASSEMBLY_CULTURE_T                                          TEXT("neutral")
#define REGCODE_ASSEMBLY_IDENTITY_DEF                                            Regcode,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define REGCODE_ASSEMBLY_IDENTITY_DEF_A                                         "Regcode,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define REGCODE_ASSEMBLY_IDENTITY_DEF_W                                        L"Regcode,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define REGCODE_ASSEMBLY_IDENTITY_DEF_S                                        S"Regcode,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define REGCODE_ASSEMBLY_IDENTITY_DEF_T                                    TEXT("Regcode,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define REGCODE_ASSEMBLY_IDENTITY_REF                                            Regcode,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define REGCODE_ASSEMBLY_IDENTITY_REF_A                                         "Regcode,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define REGCODE_ASSEMBLY_IDENTITY_REF_W                                        L"Regcode,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define REGCODE_ASSEMBLY_IDENTITY_REF_S                                        S"Regcode,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define REGCODE_ASSEMBLY_IDENTITY_REF_T                                    TEXT("Regcode,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define REGCODE_ASSEMBLY_IDENTITY_FRIEND_REF                                     Regcode,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define REGCODE_ASSEMBLY_IDENTITY_FRIEND_REF_A                                  "Regcode,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define REGCODE_ASSEMBLY_IDENTITY_FRIEND_REF_W                                 L"Regcode,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define REGCODE_ASSEMBLY_IDENTITY_FRIEND_REF_S                                 S"Regcode,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define REGCODE_ASSEMBLY_IDENTITY_FRIEND_REF_T                             TEXT("Regcode,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define REGCODE_ASSEMBLY_IDENTITY_EXACT_REF                                      Regcode,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define REGCODE_ASSEMBLY_IDENTITY_EXACT_REF_A                                   "Regcode,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define REGCODE_ASSEMBLY_IDENTITY_EXACT_REF_W                                  L"Regcode,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define REGCODE_ASSEMBLY_IDENTITY_EXACT_REF_S                                  S"Regcode,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define REGCODE_ASSEMBLY_IDENTITY_EXACT_REF_T                              TEXT("Regcode,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define REGCODE_ASSEMBLY_NAME                                                    Regcode
#define REGCODE_ASSEMBLY_NAME_A                                                 "Regcode"
#define REGCODE_ASSEMBLY_NAME_W                                                L"Regcode"
#define REGCODE_ASSEMBLY_NAME_S                                                S"Regcode"
#define REGCODE_ASSEMBLY_NAME_T                                            TEXT("Regcode")
#define REGCODE_ASSEMBLY_VERSION                                                 1.0.3300.0
#define REGCODE_ASSEMBLY_VERSION_A                                              "1.0.3300.0"
#define REGCODE_ASSEMBLY_VERSION_W                                             L"1.0.3300.0"
#define REGCODE_ASSEMBLY_VERSION_S                                             S"1.0.3300.0"
#define REGCODE_ASSEMBLY_VERSION_T                                         TEXT("1.0.3300.0")
#define REGCODE_ASSEMBLY_VERSION_IL                                               1:0:3300:0
#define REGCODE_ASSEMBLY_PUBLIC_KEY                                              002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define REGCODE_ASSEMBLY_PUBLIC_KEY_A                                           "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define REGCODE_ASSEMBLY_PUBLIC_KEY_W                                          L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define REGCODE_ASSEMBLY_PUBLIC_KEY_S                                          S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define REGCODE_ASSEMBLY_PUBLIC_KEY_T                                      TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define REGCODE_ASSEMBLY_PUBLIC_KEY_IL                                           (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define REGCODE_ASSEMBLY_PUBLIC_KEY_TOKEN                                        b03f5f7f11d50a3a
#define REGCODE_ASSEMBLY_PUBLIC_KEY_TOKEN_A                                     "b03f5f7f11d50a3a"
#define REGCODE_ASSEMBLY_PUBLIC_KEY_TOKEN_W                                    L"b03f5f7f11d50a3a"
#define REGCODE_ASSEMBLY_PUBLIC_KEY_TOKEN_S                                    S"b03f5f7f11d50a3a"
#define REGCODE_ASSEMBLY_PUBLIC_KEY_TOKEN_T                                TEXT("b03f5f7f11d50a3a")
#define REGCODE_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                                     (b0 3f 5f 7f 11 d5 0a 3a )
#define REGCODE_ASSEMBLY_CULTURE                                                 neutral
#define REGCODE_ASSEMBLY_CULTURE_A                                              "neutral"
#define REGCODE_ASSEMBLY_CULTURE_W                                             L"neutral"
#define REGCODE_ASSEMBLY_CULTURE_S                                             S"neutral"
#define REGCODE_ASSEMBLY_CULTURE_T                                         TEXT("neutral")
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_DEF                       System.Configuration.Install,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_DEF_A                    "System.Configuration.Install,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_DEF_W                   L"System.Configuration.Install,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_DEF_S                   S"System.Configuration.Install,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_DEF_T               TEXT("System.Configuration.Install,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_REF                       System.Configuration.Install,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_REF_A                    "System.Configuration.Install,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_REF_W                   L"System.Configuration.Install,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_REF_S                   S"System.Configuration.Install,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_REF_T               TEXT("System.Configuration.Install,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_FRIEND_REF                System.Configuration.Install,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_FRIEND_REF_A             "System.Configuration.Install,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_FRIEND_REF_W            L"System.Configuration.Install,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_FRIEND_REF_S            S"System.Configuration.Install,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_FRIEND_REF_T        TEXT("System.Configuration.Install,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_EXACT_REF                 System.Configuration.Install,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_EXACT_REF_A              "System.Configuration.Install,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_EXACT_REF_W             L"System.Configuration.Install,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_EXACT_REF_S             S"System.Configuration.Install,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_EXACT_REF_T         TEXT("System.Configuration.Install,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_NAME                               System.Configuration.Install
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_NAME_A                            "System.Configuration.Install"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_NAME_W                           L"System.Configuration.Install"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_NAME_S                           S"System.Configuration.Install"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_NAME_T                       TEXT("System.Configuration.Install")
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_VERSION                            1.0.3300.0
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_VERSION_A                         "1.0.3300.0"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_VERSION_W                        L"1.0.3300.0"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_VERSION_S                        S"1.0.3300.0"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_VERSION_T                    TEXT("1.0.3300.0")
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_VERSION_IL                          1:0:3300:0
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_PUBLIC_KEY                         002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_PUBLIC_KEY_A                      "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_PUBLIC_KEY_W                     L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_PUBLIC_KEY_S                     S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_PUBLIC_KEY_T                 TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_PUBLIC_KEY_IL                      (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_PUBLIC_KEY_TOKEN                   b03f5f7f11d50a3a
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_PUBLIC_KEY_TOKEN_A                "b03f5f7f11d50a3a"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_PUBLIC_KEY_TOKEN_W               L"b03f5f7f11d50a3a"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_PUBLIC_KEY_TOKEN_S               S"b03f5f7f11d50a3a"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_PUBLIC_KEY_TOKEN_T           TEXT("b03f5f7f11d50a3a")
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                (b0 3f 5f 7f 11 d5 0a 3a )
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_CULTURE                            neutral
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_CULTURE_A                         "neutral"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_CULTURE_W                        L"neutral"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_CULTURE_S                        S"neutral"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_CULTURE_T                    TEXT("neutral")
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_DEF                                        System.Data,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_DEF_A                                     "System.Data,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_DEF_W                                    L"System.Data,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_DEF_S                                    S"System.Data,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_DEF_T                                TEXT("System.Data,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_REF                                        System.Data,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_REF_A                                     "System.Data,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_REF_W                                    L"System.Data,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_REF_S                                    S"System.Data,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_REF_T                                TEXT("System.Data,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_FRIEND_REF                                 System.Data,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_FRIEND_REF_A                              "System.Data,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_FRIEND_REF_W                             L"System.Data,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_FRIEND_REF_S                             S"System.Data,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_FRIEND_REF_T                         TEXT("System.Data,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_EXACT_REF                                  System.Data,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_EXACT_REF_A                               "System.Data,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_EXACT_REF_W                              L"System.Data,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_EXACT_REF_S                              S"System.Data,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_EXACT_REF_T                          TEXT("System.Data,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_DATA_ASSEMBLY_NAME                                                System.Data
#define SYSTEM_DATA_ASSEMBLY_NAME_A                                             "System.Data"
#define SYSTEM_DATA_ASSEMBLY_NAME_W                                            L"System.Data"
#define SYSTEM_DATA_ASSEMBLY_NAME_S                                            S"System.Data"
#define SYSTEM_DATA_ASSEMBLY_NAME_T                                        TEXT("System.Data")
#define SYSTEM_DATA_ASSEMBLY_VERSION                                             1.0.3300.0
#define SYSTEM_DATA_ASSEMBLY_VERSION_A                                          "1.0.3300.0"
#define SYSTEM_DATA_ASSEMBLY_VERSION_W                                         L"1.0.3300.0"
#define SYSTEM_DATA_ASSEMBLY_VERSION_S                                         S"1.0.3300.0"
#define SYSTEM_DATA_ASSEMBLY_VERSION_T                                     TEXT("1.0.3300.0")
#define SYSTEM_DATA_ASSEMBLY_VERSION_IL                                           1:0:3300:0
#define SYSTEM_DATA_ASSEMBLY_PUBLIC_KEY                                          00000000000000000400000000000000
#define SYSTEM_DATA_ASSEMBLY_PUBLIC_KEY_A                                       "00000000000000000400000000000000"
#define SYSTEM_DATA_ASSEMBLY_PUBLIC_KEY_W                                      L"00000000000000000400000000000000"
#define SYSTEM_DATA_ASSEMBLY_PUBLIC_KEY_S                                      S"00000000000000000400000000000000"
#define SYSTEM_DATA_ASSEMBLY_PUBLIC_KEY_T                                  TEXT("00000000000000000400000000000000")
#define SYSTEM_DATA_ASSEMBLY_PUBLIC_KEY_IL                                       (00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00 )
#define SYSTEM_DATA_ASSEMBLY_PUBLIC_KEY_TOKEN                                    b77a5c561934e089
#define SYSTEM_DATA_ASSEMBLY_PUBLIC_KEY_TOKEN_A                                 "b77a5c561934e089"
#define SYSTEM_DATA_ASSEMBLY_PUBLIC_KEY_TOKEN_W                                L"b77a5c561934e089"
#define SYSTEM_DATA_ASSEMBLY_PUBLIC_KEY_TOKEN_S                                S"b77a5c561934e089"
#define SYSTEM_DATA_ASSEMBLY_PUBLIC_KEY_TOKEN_T                            TEXT("b77a5c561934e089")
#define SYSTEM_DATA_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                                 (b7 7a 5c 56 19 34 e0 89 )
#define SYSTEM_DATA_ASSEMBLY_CULTURE                                             neutral
#define SYSTEM_DATA_ASSEMBLY_CULTURE_A                                          "neutral"
#define SYSTEM_DATA_ASSEMBLY_CULTURE_W                                         L"neutral"
#define SYSTEM_DATA_ASSEMBLY_CULTURE_S                                         S"neutral"
#define SYSTEM_DATA_ASSEMBLY_CULTURE_T                                     TEXT("neutral")
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_DEF                                      System.Design,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_DEF_A                                   "System.Design,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_DEF_W                                  L"System.Design,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_DEF_S                                  S"System.Design,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_DEF_T                              TEXT("System.Design,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_REF                                      System.Design,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_REF_A                                   "System.Design,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_REF_W                                  L"System.Design,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_REF_S                                  S"System.Design,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_REF_T                              TEXT("System.Design,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_FRIEND_REF                               System.Design,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_FRIEND_REF_A                            "System.Design,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_FRIEND_REF_W                           L"System.Design,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_FRIEND_REF_S                           S"System.Design,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_FRIEND_REF_T                       TEXT("System.Design,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_EXACT_REF                                System.Design,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_EXACT_REF_A                             "System.Design,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_EXACT_REF_W                            L"System.Design,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_EXACT_REF_S                            S"System.Design,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_EXACT_REF_T                        TEXT("System.Design,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DESIGN_ASSEMBLY_NAME                                              System.Design
#define SYSTEM_DESIGN_ASSEMBLY_NAME_A                                           "System.Design"
#define SYSTEM_DESIGN_ASSEMBLY_NAME_W                                          L"System.Design"
#define SYSTEM_DESIGN_ASSEMBLY_NAME_S                                          S"System.Design"
#define SYSTEM_DESIGN_ASSEMBLY_NAME_T                                      TEXT("System.Design")
#define SYSTEM_DESIGN_ASSEMBLY_VERSION                                           1.0.3300.0
#define SYSTEM_DESIGN_ASSEMBLY_VERSION_A                                        "1.0.3300.0"
#define SYSTEM_DESIGN_ASSEMBLY_VERSION_W                                       L"1.0.3300.0"
#define SYSTEM_DESIGN_ASSEMBLY_VERSION_S                                       S"1.0.3300.0"
#define SYSTEM_DESIGN_ASSEMBLY_VERSION_T                                   TEXT("1.0.3300.0")
#define SYSTEM_DESIGN_ASSEMBLY_VERSION_IL                                         1:0:3300:0
#define SYSTEM_DESIGN_ASSEMBLY_PUBLIC_KEY                                        002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define SYSTEM_DESIGN_ASSEMBLY_PUBLIC_KEY_A                                     "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_DESIGN_ASSEMBLY_PUBLIC_KEY_W                                    L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_DESIGN_ASSEMBLY_PUBLIC_KEY_S                                    S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_DESIGN_ASSEMBLY_PUBLIC_KEY_T                                TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define SYSTEM_DESIGN_ASSEMBLY_PUBLIC_KEY_IL                                     (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define SYSTEM_DESIGN_ASSEMBLY_PUBLIC_KEY_TOKEN                                  b03f5f7f11d50a3a
#define SYSTEM_DESIGN_ASSEMBLY_PUBLIC_KEY_TOKEN_A                               "b03f5f7f11d50a3a"
#define SYSTEM_DESIGN_ASSEMBLY_PUBLIC_KEY_TOKEN_W                              L"b03f5f7f11d50a3a"
#define SYSTEM_DESIGN_ASSEMBLY_PUBLIC_KEY_TOKEN_S                              S"b03f5f7f11d50a3a"
#define SYSTEM_DESIGN_ASSEMBLY_PUBLIC_KEY_TOKEN_T                          TEXT("b03f5f7f11d50a3a")
#define SYSTEM_DESIGN_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                               (b0 3f 5f 7f 11 d5 0a 3a )
#define SYSTEM_DESIGN_ASSEMBLY_CULTURE                                           neutral
#define SYSTEM_DESIGN_ASSEMBLY_CULTURE_A                                        "neutral"
#define SYSTEM_DESIGN_ASSEMBLY_CULTURE_W                                       L"neutral"
#define SYSTEM_DESIGN_ASSEMBLY_CULTURE_S                                       S"neutral"
#define SYSTEM_DESIGN_ASSEMBLY_CULTURE_T                                   TEXT("neutral")
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_DEF                           System.DirectoryServices,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_DEF_A                        "System.DirectoryServices,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_DEF_W                       L"System.DirectoryServices,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_DEF_S                       S"System.DirectoryServices,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_DEF_T                   TEXT("System.DirectoryServices,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_REF                           System.DirectoryServices,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_REF_A                        "System.DirectoryServices,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_REF_W                       L"System.DirectoryServices,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_REF_S                       S"System.DirectoryServices,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_REF_T                   TEXT("System.DirectoryServices,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_FRIEND_REF                    System.DirectoryServices,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_FRIEND_REF_A                 "System.DirectoryServices,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_FRIEND_REF_W                L"System.DirectoryServices,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_FRIEND_REF_S                S"System.DirectoryServices,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_FRIEND_REF_T            TEXT("System.DirectoryServices,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_EXACT_REF                     System.DirectoryServices,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_EXACT_REF_A                  "System.DirectoryServices,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_EXACT_REF_W                 L"System.DirectoryServices,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_EXACT_REF_S                 S"System.DirectoryServices,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_EXACT_REF_T             TEXT("System.DirectoryServices,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_NAME                                   System.DirectoryServices
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_NAME_A                                "System.DirectoryServices"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_NAME_W                               L"System.DirectoryServices"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_NAME_S                               S"System.DirectoryServices"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_NAME_T                           TEXT("System.DirectoryServices")
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_VERSION                                1.0.3300.0
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_VERSION_A                             "1.0.3300.0"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_VERSION_W                            L"1.0.3300.0"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_VERSION_S                            S"1.0.3300.0"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_VERSION_T                        TEXT("1.0.3300.0")
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_VERSION_IL                              1:0:3300:0
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_PUBLIC_KEY                             002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_PUBLIC_KEY_A                          "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_PUBLIC_KEY_W                         L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_PUBLIC_KEY_S                         S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_PUBLIC_KEY_T                     TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_PUBLIC_KEY_IL                          (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN                       b03f5f7f11d50a3a
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN_A                    "b03f5f7f11d50a3a"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN_W                   L"b03f5f7f11d50a3a"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN_S                   S"b03f5f7f11d50a3a"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN_T               TEXT("b03f5f7f11d50a3a")
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                    (b0 3f 5f 7f 11 d5 0a 3a )
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_CULTURE                                neutral
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_CULTURE_A                             "neutral"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_CULTURE_W                            L"neutral"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_CULTURE_S                            S"neutral"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_CULTURE_T                        TEXT("neutral")
#define SYSTEM_ASSEMBLY_IDENTITY_DEF                                             System,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_ASSEMBLY_IDENTITY_DEF_A                                          "System,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_ASSEMBLY_IDENTITY_DEF_W                                         L"System,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_ASSEMBLY_IDENTITY_DEF_S                                         S"System,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_ASSEMBLY_IDENTITY_DEF_T                                     TEXT("System,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_ASSEMBLY_IDENTITY_REF                                             System,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_ASSEMBLY_IDENTITY_REF_A                                          "System,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_ASSEMBLY_IDENTITY_REF_W                                         L"System,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_ASSEMBLY_IDENTITY_REF_S                                         S"System,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_ASSEMBLY_IDENTITY_REF_T                                     TEXT("System,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_ASSEMBLY_IDENTITY_FRIEND_REF                                      System,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_ASSEMBLY_IDENTITY_FRIEND_REF_A                                   "System,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_ASSEMBLY_IDENTITY_FRIEND_REF_W                                  L"System,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_ASSEMBLY_IDENTITY_FRIEND_REF_S                                  S"System,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_ASSEMBLY_IDENTITY_FRIEND_REF_T                              TEXT("System,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_ASSEMBLY_IDENTITY_EXACT_REF                                       System,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_ASSEMBLY_IDENTITY_EXACT_REF_A                                    "System,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_ASSEMBLY_IDENTITY_EXACT_REF_W                                   L"System,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_ASSEMBLY_IDENTITY_EXACT_REF_S                                   S"System,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_ASSEMBLY_IDENTITY_EXACT_REF_T                               TEXT("System,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_ASSEMBLY_NAME                                                     System
#define SYSTEM_ASSEMBLY_NAME_A                                                  "System"
#define SYSTEM_ASSEMBLY_NAME_W                                                 L"System"
#define SYSTEM_ASSEMBLY_NAME_S                                                 S"System"
#define SYSTEM_ASSEMBLY_NAME_T                                             TEXT("System")
#define SYSTEM_ASSEMBLY_VERSION                                                  1.0.3300.0
#define SYSTEM_ASSEMBLY_VERSION_A                                               "1.0.3300.0"
#define SYSTEM_ASSEMBLY_VERSION_W                                              L"1.0.3300.0"
#define SYSTEM_ASSEMBLY_VERSION_S                                              S"1.0.3300.0"
#define SYSTEM_ASSEMBLY_VERSION_T                                          TEXT("1.0.3300.0")
#define SYSTEM_ASSEMBLY_VERSION_IL                                                1:0:3300:0
#define SYSTEM_ASSEMBLY_PUBLIC_KEY                                               00000000000000000400000000000000
#define SYSTEM_ASSEMBLY_PUBLIC_KEY_A                                            "00000000000000000400000000000000"
#define SYSTEM_ASSEMBLY_PUBLIC_KEY_W                                           L"00000000000000000400000000000000"
#define SYSTEM_ASSEMBLY_PUBLIC_KEY_S                                           S"00000000000000000400000000000000"
#define SYSTEM_ASSEMBLY_PUBLIC_KEY_T                                       TEXT("00000000000000000400000000000000")
#define SYSTEM_ASSEMBLY_PUBLIC_KEY_IL                                            (00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00 )
#define SYSTEM_ASSEMBLY_PUBLIC_KEY_TOKEN                                         b77a5c561934e089
#define SYSTEM_ASSEMBLY_PUBLIC_KEY_TOKEN_A                                      "b77a5c561934e089"
#define SYSTEM_ASSEMBLY_PUBLIC_KEY_TOKEN_W                                     L"b77a5c561934e089"
#define SYSTEM_ASSEMBLY_PUBLIC_KEY_TOKEN_S                                     S"b77a5c561934e089"
#define SYSTEM_ASSEMBLY_PUBLIC_KEY_TOKEN_T                                 TEXT("b77a5c561934e089")
#define SYSTEM_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                                      (b7 7a 5c 56 19 34 e0 89 )
#define SYSTEM_ASSEMBLY_CULTURE                                                  neutral
#define SYSTEM_ASSEMBLY_CULTURE_A                                               "neutral"
#define SYSTEM_ASSEMBLY_CULTURE_W                                              L"neutral"
#define SYSTEM_ASSEMBLY_CULTURE_S                                              S"neutral"
#define SYSTEM_ASSEMBLY_CULTURE_T                                          TEXT("neutral")
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_DEF                              System.Drawing.Design,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_DEF_A                           "System.Drawing.Design,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_DEF_W                          L"System.Drawing.Design,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_DEF_S                          S"System.Drawing.Design,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_DEF_T                      TEXT("System.Drawing.Design,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_REF                              System.Drawing.Design,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_REF_A                           "System.Drawing.Design,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_REF_W                          L"System.Drawing.Design,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_REF_S                          S"System.Drawing.Design,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_REF_T                      TEXT("System.Drawing.Design,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_FRIEND_REF                       System.Drawing.Design,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_FRIEND_REF_A                    "System.Drawing.Design,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_FRIEND_REF_W                   L"System.Drawing.Design,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_FRIEND_REF_S                   S"System.Drawing.Design,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_FRIEND_REF_T               TEXT("System.Drawing.Design,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_EXACT_REF                        System.Drawing.Design,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_EXACT_REF_A                     "System.Drawing.Design,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_EXACT_REF_W                    L"System.Drawing.Design,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_EXACT_REF_S                    S"System.Drawing.Design,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_EXACT_REF_T                TEXT("System.Drawing.Design,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_NAME                                      System.Drawing.Design
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_NAME_A                                   "System.Drawing.Design"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_NAME_W                                  L"System.Drawing.Design"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_NAME_S                                  S"System.Drawing.Design"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_NAME_T                              TEXT("System.Drawing.Design")
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_VERSION                                   1.0.3300.0
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_VERSION_A                                "1.0.3300.0"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_VERSION_W                               L"1.0.3300.0"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_VERSION_S                               S"1.0.3300.0"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_VERSION_T                           TEXT("1.0.3300.0")
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_VERSION_IL                                 1:0:3300:0
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_PUBLIC_KEY                                002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_PUBLIC_KEY_A                             "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_PUBLIC_KEY_W                            L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_PUBLIC_KEY_S                            S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_PUBLIC_KEY_T                        TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_PUBLIC_KEY_IL                             (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_PUBLIC_KEY_TOKEN                          b03f5f7f11d50a3a
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_PUBLIC_KEY_TOKEN_A                       "b03f5f7f11d50a3a"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_PUBLIC_KEY_TOKEN_W                      L"b03f5f7f11d50a3a"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_PUBLIC_KEY_TOKEN_S                      S"b03f5f7f11d50a3a"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_PUBLIC_KEY_TOKEN_T                  TEXT("b03f5f7f11d50a3a")
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                       (b0 3f 5f 7f 11 d5 0a 3a )
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_CULTURE                                   neutral
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_CULTURE_A                                "neutral"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_CULTURE_W                               L"neutral"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_CULTURE_S                               S"neutral"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_CULTURE_T                           TEXT("neutral")
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_DEF                                     System.Drawing,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_DEF_A                                  "System.Drawing,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_DEF_W                                 L"System.Drawing,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_DEF_S                                 S"System.Drawing,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_DEF_T                             TEXT("System.Drawing,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_REF                                     System.Drawing,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_REF_A                                  "System.Drawing,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_REF_W                                 L"System.Drawing,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_REF_S                                 S"System.Drawing,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_REF_T                             TEXT("System.Drawing,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_FRIEND_REF                              System.Drawing,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_FRIEND_REF_A                           "System.Drawing,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_FRIEND_REF_W                          L"System.Drawing,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_FRIEND_REF_S                          S"System.Drawing,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_FRIEND_REF_T                      TEXT("System.Drawing,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_EXACT_REF                               System.Drawing,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_EXACT_REF_A                            "System.Drawing,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_EXACT_REF_W                           L"System.Drawing,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_EXACT_REF_S                           S"System.Drawing,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_EXACT_REF_T                       TEXT("System.Drawing,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DRAWING_ASSEMBLY_NAME                                             System.Drawing
#define SYSTEM_DRAWING_ASSEMBLY_NAME_A                                          "System.Drawing"
#define SYSTEM_DRAWING_ASSEMBLY_NAME_W                                         L"System.Drawing"
#define SYSTEM_DRAWING_ASSEMBLY_NAME_S                                         S"System.Drawing"
#define SYSTEM_DRAWING_ASSEMBLY_NAME_T                                     TEXT("System.Drawing")
#define SYSTEM_DRAWING_ASSEMBLY_VERSION                                          1.0.3300.0
#define SYSTEM_DRAWING_ASSEMBLY_VERSION_A                                       "1.0.3300.0"
#define SYSTEM_DRAWING_ASSEMBLY_VERSION_W                                      L"1.0.3300.0"
#define SYSTEM_DRAWING_ASSEMBLY_VERSION_S                                      S"1.0.3300.0"
#define SYSTEM_DRAWING_ASSEMBLY_VERSION_T                                  TEXT("1.0.3300.0")
#define SYSTEM_DRAWING_ASSEMBLY_VERSION_IL                                        1:0:3300:0
#define SYSTEM_DRAWING_ASSEMBLY_PUBLIC_KEY                                       002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define SYSTEM_DRAWING_ASSEMBLY_PUBLIC_KEY_A                                    "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_DRAWING_ASSEMBLY_PUBLIC_KEY_W                                   L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_DRAWING_ASSEMBLY_PUBLIC_KEY_S                                   S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_DRAWING_ASSEMBLY_PUBLIC_KEY_T                               TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define SYSTEM_DRAWING_ASSEMBLY_PUBLIC_KEY_IL                                    (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define SYSTEM_DRAWING_ASSEMBLY_PUBLIC_KEY_TOKEN                                 b03f5f7f11d50a3a
#define SYSTEM_DRAWING_ASSEMBLY_PUBLIC_KEY_TOKEN_A                              "b03f5f7f11d50a3a"
#define SYSTEM_DRAWING_ASSEMBLY_PUBLIC_KEY_TOKEN_W                             L"b03f5f7f11d50a3a"
#define SYSTEM_DRAWING_ASSEMBLY_PUBLIC_KEY_TOKEN_S                             S"b03f5f7f11d50a3a"
#define SYSTEM_DRAWING_ASSEMBLY_PUBLIC_KEY_TOKEN_T                         TEXT("b03f5f7f11d50a3a")
#define SYSTEM_DRAWING_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                              (b0 3f 5f 7f 11 d5 0a 3a )
#define SYSTEM_DRAWING_ASSEMBLY_CULTURE                                          neutral
#define SYSTEM_DRAWING_ASSEMBLY_CULTURE_A                                       "neutral"
#define SYSTEM_DRAWING_ASSEMBLY_CULTURE_W                                      L"neutral"
#define SYSTEM_DRAWING_ASSEMBLY_CULTURE_S                                      S"neutral"
#define SYSTEM_DRAWING_ASSEMBLY_CULTURE_T                                  TEXT("neutral")
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_DEF                          System.EnterpriseServices,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_DEF_A                       "System.EnterpriseServices,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_DEF_W                      L"System.EnterpriseServices,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_DEF_S                      S"System.EnterpriseServices,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_DEF_T                  TEXT("System.EnterpriseServices,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_REF                          System.EnterpriseServices,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_REF_A                       "System.EnterpriseServices,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_REF_W                      L"System.EnterpriseServices,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_REF_S                      S"System.EnterpriseServices,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_REF_T                  TEXT("System.EnterpriseServices,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_FRIEND_REF                   System.EnterpriseServices,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_FRIEND_REF_A                "System.EnterpriseServices,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_FRIEND_REF_W               L"System.EnterpriseServices,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_FRIEND_REF_S               S"System.EnterpriseServices,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_FRIEND_REF_T           TEXT("System.EnterpriseServices,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_EXACT_REF                    System.EnterpriseServices,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_EXACT_REF_A                 "System.EnterpriseServices,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_EXACT_REF_W                L"System.EnterpriseServices,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_EXACT_REF_S                S"System.EnterpriseServices,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_EXACT_REF_T            TEXT("System.EnterpriseServices,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_NAME                                  System.EnterpriseServices
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_NAME_A                               "System.EnterpriseServices"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_NAME_W                              L"System.EnterpriseServices"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_NAME_S                              S"System.EnterpriseServices"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_NAME_T                          TEXT("System.EnterpriseServices")
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_VERSION                               1.0.3300.0
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_VERSION_A                            "1.0.3300.0"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_VERSION_W                           L"1.0.3300.0"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_VERSION_S                           S"1.0.3300.0"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_VERSION_T                       TEXT("1.0.3300.0")
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_VERSION_IL                             1:0:3300:0
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_PUBLIC_KEY                            002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_PUBLIC_KEY_A                         "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_PUBLIC_KEY_W                        L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_PUBLIC_KEY_S                        S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_PUBLIC_KEY_T                    TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_PUBLIC_KEY_IL                         (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN                      b03f5f7f11d50a3a
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN_A                   "b03f5f7f11d50a3a"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN_W                  L"b03f5f7f11d50a3a"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN_S                  S"b03f5f7f11d50a3a"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN_T              TEXT("b03f5f7f11d50a3a")
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                   (b0 3f 5f 7f 11 d5 0a 3a )
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_CULTURE                               neutral
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_CULTURE_A                            "neutral"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_CULTURE_W                           L"neutral"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_CULTURE_S                           S"neutral"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_CULTURE_T                       TEXT("neutral")
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_DEF                                  System.Management,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_DEF_A                               "System.Management,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_DEF_W                              L"System.Management,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_DEF_S                              S"System.Management,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_DEF_T                          TEXT("System.Management,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_REF                                  System.Management,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_REF_A                               "System.Management,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_REF_W                              L"System.Management,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_REF_S                              S"System.Management,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_REF_T                          TEXT("System.Management,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_FRIEND_REF                           System.Management,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_FRIEND_REF_A                        "System.Management,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_FRIEND_REF_W                       L"System.Management,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_FRIEND_REF_S                       S"System.Management,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_FRIEND_REF_T                   TEXT("System.Management,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_EXACT_REF                            System.Management,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_EXACT_REF_A                         "System.Management,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_EXACT_REF_W                        L"System.Management,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_EXACT_REF_S                        S"System.Management,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_EXACT_REF_T                    TEXT("System.Management,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_MANAGEMENT_ASSEMBLY_NAME                                          System.Management
#define SYSTEM_MANAGEMENT_ASSEMBLY_NAME_A                                       "System.Management"
#define SYSTEM_MANAGEMENT_ASSEMBLY_NAME_W                                      L"System.Management"
#define SYSTEM_MANAGEMENT_ASSEMBLY_NAME_S                                      S"System.Management"
#define SYSTEM_MANAGEMENT_ASSEMBLY_NAME_T                                  TEXT("System.Management")
#define SYSTEM_MANAGEMENT_ASSEMBLY_VERSION                                       1.0.3300.0
#define SYSTEM_MANAGEMENT_ASSEMBLY_VERSION_A                                    "1.0.3300.0"
#define SYSTEM_MANAGEMENT_ASSEMBLY_VERSION_W                                   L"1.0.3300.0"
#define SYSTEM_MANAGEMENT_ASSEMBLY_VERSION_S                                   S"1.0.3300.0"
#define SYSTEM_MANAGEMENT_ASSEMBLY_VERSION_T                               TEXT("1.0.3300.0")
#define SYSTEM_MANAGEMENT_ASSEMBLY_VERSION_IL                                     1:0:3300:0
#define SYSTEM_MANAGEMENT_ASSEMBLY_PUBLIC_KEY                                    002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define SYSTEM_MANAGEMENT_ASSEMBLY_PUBLIC_KEY_A                                 "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_MANAGEMENT_ASSEMBLY_PUBLIC_KEY_W                                L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_MANAGEMENT_ASSEMBLY_PUBLIC_KEY_S                                S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_MANAGEMENT_ASSEMBLY_PUBLIC_KEY_T                            TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define SYSTEM_MANAGEMENT_ASSEMBLY_PUBLIC_KEY_IL                                 (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define SYSTEM_MANAGEMENT_ASSEMBLY_PUBLIC_KEY_TOKEN                              b03f5f7f11d50a3a
#define SYSTEM_MANAGEMENT_ASSEMBLY_PUBLIC_KEY_TOKEN_A                           "b03f5f7f11d50a3a"
#define SYSTEM_MANAGEMENT_ASSEMBLY_PUBLIC_KEY_TOKEN_W                          L"b03f5f7f11d50a3a"
#define SYSTEM_MANAGEMENT_ASSEMBLY_PUBLIC_KEY_TOKEN_S                          S"b03f5f7f11d50a3a"
#define SYSTEM_MANAGEMENT_ASSEMBLY_PUBLIC_KEY_TOKEN_T                      TEXT("b03f5f7f11d50a3a")
#define SYSTEM_MANAGEMENT_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                           (b0 3f 5f 7f 11 d5 0a 3a )
#define SYSTEM_MANAGEMENT_ASSEMBLY_CULTURE                                       neutral
#define SYSTEM_MANAGEMENT_ASSEMBLY_CULTURE_A                                    "neutral"
#define SYSTEM_MANAGEMENT_ASSEMBLY_CULTURE_W                                   L"neutral"
#define SYSTEM_MANAGEMENT_ASSEMBLY_CULTURE_S                                   S"neutral"
#define SYSTEM_MANAGEMENT_ASSEMBLY_CULTURE_T                               TEXT("neutral")
#define SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_DEF                                   System.Messaging,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_DEF_A                                "System.Messaging,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_DEF_W                               L"System.Messaging,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_DEF_S                               S"System.Messaging,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_DEF_T                           TEXT("System.Messaging,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_REF                                   System.Messaging,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_REF_A                                "System.Messaging,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_REF_W                               L"System.Messaging,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_REF_S                               S"System.Messaging,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_REF_T                           TEXT("System.Messaging,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_FRIEND_REF                            System.Messaging,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_FRIEND_REF_A                         "System.Messaging,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_FRIEND_REF_W                        L"System.Messaging,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_FRIEND_REF_S                        S"System.Messaging,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_FRIEND_REF_T                    TEXT("System.Messaging,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_EXACT_REF                             System.Messaging,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_EXACT_REF_A                          "System.Messaging,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_EXACT_REF_W                         L"System.Messaging,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_EXACT_REF_S                         S"System.Messaging,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_EXACT_REF_T                     TEXT("System.Messaging,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_MESSAGING_ASSEMBLY_NAME                                           System.Messaging
#define SYSTEM_MESSAGING_ASSEMBLY_NAME_A                                        "System.Messaging"
#define SYSTEM_MESSAGING_ASSEMBLY_NAME_W                                       L"System.Messaging"
#define SYSTEM_MESSAGING_ASSEMBLY_NAME_S                                       S"System.Messaging"
#define SYSTEM_MESSAGING_ASSEMBLY_NAME_T                                   TEXT("System.Messaging")
#define SYSTEM_MESSAGING_ASSEMBLY_VERSION                                        1.0.3300.0
#define SYSTEM_MESSAGING_ASSEMBLY_VERSION_A                                     "1.0.3300.0"
#define SYSTEM_MESSAGING_ASSEMBLY_VERSION_W                                    L"1.0.3300.0"
#define SYSTEM_MESSAGING_ASSEMBLY_VERSION_S                                    S"1.0.3300.0"
#define SYSTEM_MESSAGING_ASSEMBLY_VERSION_T                                TEXT("1.0.3300.0")
#define SYSTEM_MESSAGING_ASSEMBLY_VERSION_IL                                      1:0:3300:0
#define SYSTEM_MESSAGING_ASSEMBLY_PUBLIC_KEY                                     002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define SYSTEM_MESSAGING_ASSEMBLY_PUBLIC_KEY_A                                  "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_MESSAGING_ASSEMBLY_PUBLIC_KEY_W                                 L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_MESSAGING_ASSEMBLY_PUBLIC_KEY_S                                 S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_MESSAGING_ASSEMBLY_PUBLIC_KEY_T                             TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define SYSTEM_MESSAGING_ASSEMBLY_PUBLIC_KEY_IL                                  (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define SYSTEM_MESSAGING_ASSEMBLY_PUBLIC_KEY_TOKEN                               b03f5f7f11d50a3a
#define SYSTEM_MESSAGING_ASSEMBLY_PUBLIC_KEY_TOKEN_A                            "b03f5f7f11d50a3a"
#define SYSTEM_MESSAGING_ASSEMBLY_PUBLIC_KEY_TOKEN_W                           L"b03f5f7f11d50a3a"
#define SYSTEM_MESSAGING_ASSEMBLY_PUBLIC_KEY_TOKEN_S                           S"b03f5f7f11d50a3a"
#define SYSTEM_MESSAGING_ASSEMBLY_PUBLIC_KEY_TOKEN_T                       TEXT("b03f5f7f11d50a3a")
#define SYSTEM_MESSAGING_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                            (b0 3f 5f 7f 11 d5 0a 3a )
#define SYSTEM_MESSAGING_ASSEMBLY_CULTURE                                        neutral
#define SYSTEM_MESSAGING_ASSEMBLY_CULTURE_A                                     "neutral"
#define SYSTEM_MESSAGING_ASSEMBLY_CULTURE_W                                    L"neutral"
#define SYSTEM_MESSAGING_ASSEMBLY_CULTURE_S                                    S"neutral"
#define SYSTEM_MESSAGING_ASSEMBLY_CULTURE_T                                TEXT("neutral")
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_DEF                            System.Runtime.Remoting,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_DEF_A                         "System.Runtime.Remoting,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_DEF_W                        L"System.Runtime.Remoting,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_DEF_S                        S"System.Runtime.Remoting,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_DEF_T                    TEXT("System.Runtime.Remoting,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_REF                            System.Runtime.Remoting,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_REF_A                         "System.Runtime.Remoting,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_REF_W                        L"System.Runtime.Remoting,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_REF_S                        S"System.Runtime.Remoting,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_REF_T                    TEXT("System.Runtime.Remoting,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_FRIEND_REF                     System.Runtime.Remoting,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_FRIEND_REF_A                  "System.Runtime.Remoting,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_FRIEND_REF_W                 L"System.Runtime.Remoting,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_FRIEND_REF_S                 S"System.Runtime.Remoting,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_FRIEND_REF_T             TEXT("System.Runtime.Remoting,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_EXACT_REF                      System.Runtime.Remoting,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_EXACT_REF_A                   "System.Runtime.Remoting,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_EXACT_REF_W                  L"System.Runtime.Remoting,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_EXACT_REF_S                  S"System.Runtime.Remoting,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_EXACT_REF_T              TEXT("System.Runtime.Remoting,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_NAME                                    System.Runtime.Remoting
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_NAME_A                                 "System.Runtime.Remoting"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_NAME_W                                L"System.Runtime.Remoting"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_NAME_S                                S"System.Runtime.Remoting"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_NAME_T                            TEXT("System.Runtime.Remoting")
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_VERSION                                 1.0.3300.0
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_VERSION_A                              "1.0.3300.0"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_VERSION_W                             L"1.0.3300.0"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_VERSION_S                             S"1.0.3300.0"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_VERSION_T                         TEXT("1.0.3300.0")
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_VERSION_IL                               1:0:3300:0
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_PUBLIC_KEY                              00000000000000000400000000000000
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_PUBLIC_KEY_A                           "00000000000000000400000000000000"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_PUBLIC_KEY_W                          L"00000000000000000400000000000000"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_PUBLIC_KEY_S                          S"00000000000000000400000000000000"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_PUBLIC_KEY_T                      TEXT("00000000000000000400000000000000")
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_PUBLIC_KEY_IL                           (00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00 )
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_PUBLIC_KEY_TOKEN                        b77a5c561934e089
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_PUBLIC_KEY_TOKEN_A                     "b77a5c561934e089"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_PUBLIC_KEY_TOKEN_W                    L"b77a5c561934e089"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_PUBLIC_KEY_TOKEN_S                    S"b77a5c561934e089"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_PUBLIC_KEY_TOKEN_T                TEXT("b77a5c561934e089")
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                     (b7 7a 5c 56 19 34 e0 89 )
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_CULTURE                                 neutral
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_CULTURE_A                              "neutral"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_CULTURE_W                             L"neutral"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_CULTURE_S                             S"neutral"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_CULTURE_T                         TEXT("neutral")
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_DEF          System.Runtime.Serialization.Formatters.Soap,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_DEF_A       "System.Runtime.Serialization.Formatters.Soap,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_DEF_W      L"System.Runtime.Serialization.Formatters.Soap,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_DEF_S      S"System.Runtime.Serialization.Formatters.Soap,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_DEF_T  TEXT("System.Runtime.Serialization.Formatters.Soap,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_REF          System.Runtime.Serialization.Formatters.Soap,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_REF_A       "System.Runtime.Serialization.Formatters.Soap,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_REF_W      L"System.Runtime.Serialization.Formatters.Soap,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_REF_S      S"System.Runtime.Serialization.Formatters.Soap,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_REF_T  TEXT("System.Runtime.Serialization.Formatters.Soap,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_FRIEND_REF          System.Runtime.Serialization.Formatters.Soap,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_FRIEND_REF_A       "System.Runtime.Serialization.Formatters.Soap,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_FRIEND_REF_W      L"System.Runtime.Serialization.Formatters.Soap,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_FRIEND_REF_S      S"System.Runtime.Serialization.Formatters.Soap,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_FRIEND_REF_T  TEXT("System.Runtime.Serialization.Formatters.Soap,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_EXACT_REF          System.Runtime.Serialization.Formatters.Soap,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_EXACT_REF_A       "System.Runtime.Serialization.Formatters.Soap,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_EXACT_REF_W      L"System.Runtime.Serialization.Formatters.Soap,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_EXACT_REF_S      S"System.Runtime.Serialization.Formatters.Soap,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_EXACT_REF_T  TEXT("System.Runtime.Serialization.Formatters.Soap,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_NAME               System.Runtime.Serialization.Formatters.Soap
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_NAME_A            "System.Runtime.Serialization.Formatters.Soap"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_NAME_W           L"System.Runtime.Serialization.Formatters.Soap"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_NAME_S           S"System.Runtime.Serialization.Formatters.Soap"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_NAME_T       TEXT("System.Runtime.Serialization.Formatters.Soap")
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_VERSION            1.0.3300.0
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_VERSION_A         "1.0.3300.0"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_VERSION_W        L"1.0.3300.0"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_VERSION_S        S"1.0.3300.0"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_VERSION_T    TEXT("1.0.3300.0")
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_VERSION_IL          1:0:3300:0
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_PUBLIC_KEY          002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_PUBLIC_KEY_A       "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_PUBLIC_KEY_W      L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_PUBLIC_KEY_S      S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_PUBLIC_KEY_T  TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_PUBLIC_KEY_IL       (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_PUBLIC_KEY_TOKEN          b03f5f7f11d50a3a
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_PUBLIC_KEY_TOKEN_A       "b03f5f7f11d50a3a"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_PUBLIC_KEY_TOKEN_W      L"b03f5f7f11d50a3a"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_PUBLIC_KEY_TOKEN_S      S"b03f5f7f11d50a3a"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_PUBLIC_KEY_TOKEN_T  TEXT("b03f5f7f11d50a3a")
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_PUBLIC_KEY_TOKEN_IL       (b0 3f 5f 7f 11 d5 0a 3a )
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_CULTURE            neutral
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_CULTURE_A         "neutral"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_CULTURE_W        L"neutral"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_CULTURE_S        S"neutral"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_CULTURE_T    TEXT("neutral")
#define SYSTEM_SECURITY_ASSEMBLY_IDENTITY_DEF                                    System.Security,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_SECURITY_ASSEMBLY_IDENTITY_DEF_A                                 "System.Security,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_SECURITY_ASSEMBLY_IDENTITY_DEF_W                                L"System.Security,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_SECURITY_ASSEMBLY_IDENTITY_DEF_S                                S"System.Security,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_SECURITY_ASSEMBLY_IDENTITY_DEF_T                            TEXT("System.Security,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_SECURITY_ASSEMBLY_IDENTITY_REF                                    System.Security,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_SECURITY_ASSEMBLY_IDENTITY_REF_A                                 "System.Security,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_SECURITY_ASSEMBLY_IDENTITY_REF_W                                L"System.Security,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_SECURITY_ASSEMBLY_IDENTITY_REF_S                                S"System.Security,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_SECURITY_ASSEMBLY_IDENTITY_REF_T                            TEXT("System.Security,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_SECURITY_ASSEMBLY_IDENTITY_FRIEND_REF                             System.Security,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_SECURITY_ASSEMBLY_IDENTITY_FRIEND_REF_A                          "System.Security,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_SECURITY_ASSEMBLY_IDENTITY_FRIEND_REF_W                         L"System.Security,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_SECURITY_ASSEMBLY_IDENTITY_FRIEND_REF_S                         S"System.Security,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_SECURITY_ASSEMBLY_IDENTITY_FRIEND_REF_T                     TEXT("System.Security,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_SECURITY_ASSEMBLY_IDENTITY_EXACT_REF                              System.Security,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_SECURITY_ASSEMBLY_IDENTITY_EXACT_REF_A                           "System.Security,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_SECURITY_ASSEMBLY_IDENTITY_EXACT_REF_W                          L"System.Security,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_SECURITY_ASSEMBLY_IDENTITY_EXACT_REF_S                          S"System.Security,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_SECURITY_ASSEMBLY_IDENTITY_EXACT_REF_T                      TEXT("System.Security,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_SECURITY_ASSEMBLY_NAME                                            System.Security
#define SYSTEM_SECURITY_ASSEMBLY_NAME_A                                         "System.Security"
#define SYSTEM_SECURITY_ASSEMBLY_NAME_W                                        L"System.Security"
#define SYSTEM_SECURITY_ASSEMBLY_NAME_S                                        S"System.Security"
#define SYSTEM_SECURITY_ASSEMBLY_NAME_T                                    TEXT("System.Security")
#define SYSTEM_SECURITY_ASSEMBLY_VERSION                                         1.0.3300.0
#define SYSTEM_SECURITY_ASSEMBLY_VERSION_A                                      "1.0.3300.0"
#define SYSTEM_SECURITY_ASSEMBLY_VERSION_W                                     L"1.0.3300.0"
#define SYSTEM_SECURITY_ASSEMBLY_VERSION_S                                     S"1.0.3300.0"
#define SYSTEM_SECURITY_ASSEMBLY_VERSION_T                                 TEXT("1.0.3300.0")
#define SYSTEM_SECURITY_ASSEMBLY_VERSION_IL                                       1:0:3300:0
#define SYSTEM_SECURITY_ASSEMBLY_PUBLIC_KEY                                      002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define SYSTEM_SECURITY_ASSEMBLY_PUBLIC_KEY_A                                   "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_SECURITY_ASSEMBLY_PUBLIC_KEY_W                                  L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_SECURITY_ASSEMBLY_PUBLIC_KEY_S                                  S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_SECURITY_ASSEMBLY_PUBLIC_KEY_T                              TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define SYSTEM_SECURITY_ASSEMBLY_PUBLIC_KEY_IL                                   (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define SYSTEM_SECURITY_ASSEMBLY_PUBLIC_KEY_TOKEN                                b03f5f7f11d50a3a
#define SYSTEM_SECURITY_ASSEMBLY_PUBLIC_KEY_TOKEN_A                             "b03f5f7f11d50a3a"
#define SYSTEM_SECURITY_ASSEMBLY_PUBLIC_KEY_TOKEN_W                            L"b03f5f7f11d50a3a"
#define SYSTEM_SECURITY_ASSEMBLY_PUBLIC_KEY_TOKEN_S                            S"b03f5f7f11d50a3a"
#define SYSTEM_SECURITY_ASSEMBLY_PUBLIC_KEY_TOKEN_T                        TEXT("b03f5f7f11d50a3a")
#define SYSTEM_SECURITY_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                             (b0 3f 5f 7f 11 d5 0a 3a )
#define SYSTEM_SECURITY_ASSEMBLY_CULTURE                                         neutral
#define SYSTEM_SECURITY_ASSEMBLY_CULTURE_A                                      "neutral"
#define SYSTEM_SECURITY_ASSEMBLY_CULTURE_W                                     L"neutral"
#define SYSTEM_SECURITY_ASSEMBLY_CULTURE_S                                     S"neutral"
#define SYSTEM_SECURITY_ASSEMBLY_CULTURE_T                                 TEXT("neutral")
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_DEF                              System.ServiceProcess,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_DEF_A                           "System.ServiceProcess,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_DEF_W                          L"System.ServiceProcess,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_DEF_S                          S"System.ServiceProcess,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_DEF_T                      TEXT("System.ServiceProcess,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_REF                              System.ServiceProcess,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_REF_A                           "System.ServiceProcess,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_REF_W                          L"System.ServiceProcess,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_REF_S                          S"System.ServiceProcess,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_REF_T                      TEXT("System.ServiceProcess,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_FRIEND_REF                       System.ServiceProcess,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_FRIEND_REF_A                    "System.ServiceProcess,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_FRIEND_REF_W                   L"System.ServiceProcess,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_FRIEND_REF_S                   S"System.ServiceProcess,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_FRIEND_REF_T               TEXT("System.ServiceProcess,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_EXACT_REF                        System.ServiceProcess,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_EXACT_REF_A                     "System.ServiceProcess,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_EXACT_REF_W                    L"System.ServiceProcess,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_EXACT_REF_S                    S"System.ServiceProcess,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_EXACT_REF_T                TEXT("System.ServiceProcess,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_NAME                                      System.ServiceProcess
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_NAME_A                                   "System.ServiceProcess"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_NAME_W                                  L"System.ServiceProcess"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_NAME_S                                  S"System.ServiceProcess"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_NAME_T                              TEXT("System.ServiceProcess")
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_VERSION                                   1.0.3300.0
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_VERSION_A                                "1.0.3300.0"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_VERSION_W                               L"1.0.3300.0"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_VERSION_S                               S"1.0.3300.0"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_VERSION_T                           TEXT("1.0.3300.0")
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_VERSION_IL                                 1:0:3300:0
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_PUBLIC_KEY                                002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_PUBLIC_KEY_A                             "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_PUBLIC_KEY_W                            L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_PUBLIC_KEY_S                            S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_PUBLIC_KEY_T                        TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_PUBLIC_KEY_IL                             (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_PUBLIC_KEY_TOKEN                          b03f5f7f11d50a3a
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_PUBLIC_KEY_TOKEN_A                       "b03f5f7f11d50a3a"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_PUBLIC_KEY_TOKEN_W                      L"b03f5f7f11d50a3a"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_PUBLIC_KEY_TOKEN_S                      S"b03f5f7f11d50a3a"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_PUBLIC_KEY_TOKEN_T                  TEXT("b03f5f7f11d50a3a")
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                       (b0 3f 5f 7f 11 d5 0a 3a )
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_CULTURE                                   neutral
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_CULTURE_A                                "neutral"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_CULTURE_W                               L"neutral"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_CULTURE_S                               S"neutral"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_CULTURE_T                           TEXT("neutral")
#define SYSTEM_WEB_ASSEMBLY_IDENTITY_DEF                                         System.Web,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_WEB_ASSEMBLY_IDENTITY_DEF_A                                      "System.Web,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_ASSEMBLY_IDENTITY_DEF_W                                     L"System.Web,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_ASSEMBLY_IDENTITY_DEF_S                                     S"System.Web,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_ASSEMBLY_IDENTITY_DEF_T                                 TEXT("System.Web,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_WEB_ASSEMBLY_IDENTITY_REF                                         System.Web,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_WEB_ASSEMBLY_IDENTITY_REF_A                                      "System.Web,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_ASSEMBLY_IDENTITY_REF_W                                     L"System.Web,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_ASSEMBLY_IDENTITY_REF_S                                     S"System.Web,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_ASSEMBLY_IDENTITY_REF_T                                 TEXT("System.Web,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_WEB_ASSEMBLY_IDENTITY_FRIEND_REF                                  System.Web,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_WEB_ASSEMBLY_IDENTITY_FRIEND_REF_A                               "System.Web,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_ASSEMBLY_IDENTITY_FRIEND_REF_W                              L"System.Web,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_ASSEMBLY_IDENTITY_FRIEND_REF_S                              S"System.Web,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_ASSEMBLY_IDENTITY_FRIEND_REF_T                          TEXT("System.Web,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_WEB_ASSEMBLY_IDENTITY_EXACT_REF                                   System.Web,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_WEB_ASSEMBLY_IDENTITY_EXACT_REF_A                                "System.Web,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_ASSEMBLY_IDENTITY_EXACT_REF_W                               L"System.Web,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_ASSEMBLY_IDENTITY_EXACT_REF_S                               S"System.Web,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_ASSEMBLY_IDENTITY_EXACT_REF_T                           TEXT("System.Web,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_WEB_ASSEMBLY_NAME                                                 System.Web
#define SYSTEM_WEB_ASSEMBLY_NAME_A                                              "System.Web"
#define SYSTEM_WEB_ASSEMBLY_NAME_W                                             L"System.Web"
#define SYSTEM_WEB_ASSEMBLY_NAME_S                                             S"System.Web"
#define SYSTEM_WEB_ASSEMBLY_NAME_T                                         TEXT("System.Web")
#define SYSTEM_WEB_ASSEMBLY_VERSION                                              1.0.3300.0
#define SYSTEM_WEB_ASSEMBLY_VERSION_A                                           "1.0.3300.0"
#define SYSTEM_WEB_ASSEMBLY_VERSION_W                                          L"1.0.3300.0"
#define SYSTEM_WEB_ASSEMBLY_VERSION_S                                          S"1.0.3300.0"
#define SYSTEM_WEB_ASSEMBLY_VERSION_T                                      TEXT("1.0.3300.0")
#define SYSTEM_WEB_ASSEMBLY_VERSION_IL                                            1:0:3300:0
#define SYSTEM_WEB_ASSEMBLY_PUBLIC_KEY                                           002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define SYSTEM_WEB_ASSEMBLY_PUBLIC_KEY_A                                        "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_WEB_ASSEMBLY_PUBLIC_KEY_W                                       L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_WEB_ASSEMBLY_PUBLIC_KEY_S                                       S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_WEB_ASSEMBLY_PUBLIC_KEY_T                                   TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define SYSTEM_WEB_ASSEMBLY_PUBLIC_KEY_IL                                        (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define SYSTEM_WEB_ASSEMBLY_PUBLIC_KEY_TOKEN                                     b03f5f7f11d50a3a
#define SYSTEM_WEB_ASSEMBLY_PUBLIC_KEY_TOKEN_A                                  "b03f5f7f11d50a3a"
#define SYSTEM_WEB_ASSEMBLY_PUBLIC_KEY_TOKEN_W                                 L"b03f5f7f11d50a3a"
#define SYSTEM_WEB_ASSEMBLY_PUBLIC_KEY_TOKEN_S                                 S"b03f5f7f11d50a3a"
#define SYSTEM_WEB_ASSEMBLY_PUBLIC_KEY_TOKEN_T                             TEXT("b03f5f7f11d50a3a")
#define SYSTEM_WEB_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                                  (b0 3f 5f 7f 11 d5 0a 3a )
#define SYSTEM_WEB_ASSEMBLY_CULTURE                                              neutral
#define SYSTEM_WEB_ASSEMBLY_CULTURE_A                                           "neutral"
#define SYSTEM_WEB_ASSEMBLY_CULTURE_W                                          L"neutral"
#define SYSTEM_WEB_ASSEMBLY_CULTURE_S                                          S"neutral"
#define SYSTEM_WEB_ASSEMBLY_CULTURE_T                                      TEXT("neutral")
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_DEF                      System.Web.RegularExpressions,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_DEF_A                   "System.Web.RegularExpressions,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_DEF_W                  L"System.Web.RegularExpressions,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_DEF_S                  S"System.Web.RegularExpressions,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_DEF_T              TEXT("System.Web.RegularExpressions,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_REF                      System.Web.RegularExpressions,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_REF_A                   "System.Web.RegularExpressions,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_REF_W                  L"System.Web.RegularExpressions,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_REF_S                  S"System.Web.RegularExpressions,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_REF_T              TEXT("System.Web.RegularExpressions,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_FRIEND_REF               System.Web.RegularExpressions,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_FRIEND_REF_A            "System.Web.RegularExpressions,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_FRIEND_REF_W           L"System.Web.RegularExpressions,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_FRIEND_REF_S           S"System.Web.RegularExpressions,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_FRIEND_REF_T       TEXT("System.Web.RegularExpressions,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_EXACT_REF                System.Web.RegularExpressions,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_EXACT_REF_A             "System.Web.RegularExpressions,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_EXACT_REF_W            L"System.Web.RegularExpressions,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_EXACT_REF_S            S"System.Web.RegularExpressions,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_EXACT_REF_T        TEXT("System.Web.RegularExpressions,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_NAME                              System.Web.RegularExpressions
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_NAME_A                           "System.Web.RegularExpressions"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_NAME_W                          L"System.Web.RegularExpressions"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_NAME_S                          S"System.Web.RegularExpressions"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_NAME_T                      TEXT("System.Web.RegularExpressions")
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_VERSION                           1.0.3300.0
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_VERSION_A                        "1.0.3300.0"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_VERSION_W                       L"1.0.3300.0"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_VERSION_S                       S"1.0.3300.0"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_VERSION_T                   TEXT("1.0.3300.0")
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_VERSION_IL                         1:0:3300:0
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_PUBLIC_KEY                        002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_PUBLIC_KEY_A                     "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_PUBLIC_KEY_W                    L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_PUBLIC_KEY_S                    S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_PUBLIC_KEY_T                TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_PUBLIC_KEY_IL                     (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_PUBLIC_KEY_TOKEN                  b03f5f7f11d50a3a
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_PUBLIC_KEY_TOKEN_A               "b03f5f7f11d50a3a"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_PUBLIC_KEY_TOKEN_W              L"b03f5f7f11d50a3a"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_PUBLIC_KEY_TOKEN_S              S"b03f5f7f11d50a3a"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_PUBLIC_KEY_TOKEN_T          TEXT("b03f5f7f11d50a3a")
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_PUBLIC_KEY_TOKEN_IL               (b0 3f 5f 7f 11 d5 0a 3a )
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_CULTURE                           neutral
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_CULTURE_A                        "neutral"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_CULTURE_W                       L"neutral"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_CULTURE_S                       S"neutral"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_CULTURE_T                   TEXT("neutral")
#define SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_DEF                                System.Web.Services,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_DEF_A                             "System.Web.Services,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_DEF_W                            L"System.Web.Services,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_DEF_S                            S"System.Web.Services,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_DEF_T                        TEXT("System.Web.Services,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_REF                                System.Web.Services,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_REF_A                             "System.Web.Services,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_REF_W                            L"System.Web.Services,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_REF_S                            S"System.Web.Services,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_REF_T                        TEXT("System.Web.Services,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_FRIEND_REF                         System.Web.Services,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_FRIEND_REF_A                      "System.Web.Services,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_FRIEND_REF_W                     L"System.Web.Services,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_FRIEND_REF_S                     S"System.Web.Services,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_FRIEND_REF_T                 TEXT("System.Web.Services,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_EXACT_REF                          System.Web.Services,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_EXACT_REF_A                       "System.Web.Services,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_EXACT_REF_W                      L"System.Web.Services,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_EXACT_REF_S                      S"System.Web.Services,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_EXACT_REF_T                  TEXT("System.Web.Services,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_WEB_SERVICES_ASSEMBLY_NAME                                        System.Web.Services
#define SYSTEM_WEB_SERVICES_ASSEMBLY_NAME_A                                     "System.Web.Services"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_NAME_W                                    L"System.Web.Services"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_NAME_S                                    S"System.Web.Services"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_NAME_T                                TEXT("System.Web.Services")
#define SYSTEM_WEB_SERVICES_ASSEMBLY_VERSION                                     1.0.3300.0
#define SYSTEM_WEB_SERVICES_ASSEMBLY_VERSION_A                                  "1.0.3300.0"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_VERSION_W                                 L"1.0.3300.0"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_VERSION_S                                 S"1.0.3300.0"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_VERSION_T                             TEXT("1.0.3300.0")
#define SYSTEM_WEB_SERVICES_ASSEMBLY_VERSION_IL                                   1:0:3300:0
#define SYSTEM_WEB_SERVICES_ASSEMBLY_PUBLIC_KEY                                  002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define SYSTEM_WEB_SERVICES_ASSEMBLY_PUBLIC_KEY_A                               "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_PUBLIC_KEY_W                              L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_PUBLIC_KEY_S                              S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_PUBLIC_KEY_T                          TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define SYSTEM_WEB_SERVICES_ASSEMBLY_PUBLIC_KEY_IL                               (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define SYSTEM_WEB_SERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN                            b03f5f7f11d50a3a
#define SYSTEM_WEB_SERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN_A                         "b03f5f7f11d50a3a"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN_W                        L"b03f5f7f11d50a3a"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN_S                        S"b03f5f7f11d50a3a"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN_T                    TEXT("b03f5f7f11d50a3a")
#define SYSTEM_WEB_SERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                         (b0 3f 5f 7f 11 d5 0a 3a )
#define SYSTEM_WEB_SERVICES_ASSEMBLY_CULTURE                                     neutral
#define SYSTEM_WEB_SERVICES_ASSEMBLY_CULTURE_A                                  "neutral"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_CULTURE_W                                 L"neutral"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_CULTURE_S                                 S"neutral"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_CULTURE_T                             TEXT("neutral")
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_DEF                               System.Windows.Forms,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_DEF_A                            "System.Windows.Forms,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_DEF_W                           L"System.Windows.Forms,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_DEF_S                           S"System.Windows.Forms,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_DEF_T                       TEXT("System.Windows.Forms,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_REF                               System.Windows.Forms,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_REF_A                            "System.Windows.Forms,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_REF_W                           L"System.Windows.Forms,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_REF_S                           S"System.Windows.Forms,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_REF_T                       TEXT("System.Windows.Forms,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_FRIEND_REF                        System.Windows.Forms,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_FRIEND_REF_A                     "System.Windows.Forms,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_FRIEND_REF_W                    L"System.Windows.Forms,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_FRIEND_REF_S                    S"System.Windows.Forms,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_FRIEND_REF_T                TEXT("System.Windows.Forms,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_EXACT_REF                         System.Windows.Forms,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_EXACT_REF_A                      "System.Windows.Forms,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_EXACT_REF_W                     L"System.Windows.Forms,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_EXACT_REF_S                     S"System.Windows.Forms,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_EXACT_REF_T                 TEXT("System.Windows.Forms,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_NAME                                       System.Windows.Forms
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_NAME_A                                    "System.Windows.Forms"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_NAME_W                                   L"System.Windows.Forms"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_NAME_S                                   S"System.Windows.Forms"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_NAME_T                               TEXT("System.Windows.Forms")
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_VERSION                                    1.0.3300.0
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_VERSION_A                                 "1.0.3300.0"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_VERSION_W                                L"1.0.3300.0"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_VERSION_S                                S"1.0.3300.0"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_VERSION_T                            TEXT("1.0.3300.0")
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_VERSION_IL                                  1:0:3300:0
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_PUBLIC_KEY                                 00000000000000000400000000000000
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_PUBLIC_KEY_A                              "00000000000000000400000000000000"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_PUBLIC_KEY_W                             L"00000000000000000400000000000000"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_PUBLIC_KEY_S                             S"00000000000000000400000000000000"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_PUBLIC_KEY_T                         TEXT("00000000000000000400000000000000")
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_PUBLIC_KEY_IL                              (00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00 )
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_PUBLIC_KEY_TOKEN                           b77a5c561934e089
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_PUBLIC_KEY_TOKEN_A                        "b77a5c561934e089"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_PUBLIC_KEY_TOKEN_W                       L"b77a5c561934e089"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_PUBLIC_KEY_TOKEN_S                       S"b77a5c561934e089"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_PUBLIC_KEY_TOKEN_T                   TEXT("b77a5c561934e089")
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                        (b7 7a 5c 56 19 34 e0 89 )
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_CULTURE                                    neutral
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_CULTURE_A                                 "neutral"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_CULTURE_W                                L"neutral"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_CULTURE_S                                S"neutral"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_CULTURE_T                            TEXT("neutral")
#define SYSTEM_XML_ASSEMBLY_IDENTITY_DEF                                         System.Xml,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_XML_ASSEMBLY_IDENTITY_DEF_A                                      "System.Xml,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_XML_ASSEMBLY_IDENTITY_DEF_W                                     L"System.Xml,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_XML_ASSEMBLY_IDENTITY_DEF_S                                     S"System.Xml,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_XML_ASSEMBLY_IDENTITY_DEF_T                                 TEXT("System.Xml,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_XML_ASSEMBLY_IDENTITY_REF                                         System.Xml,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_XML_ASSEMBLY_IDENTITY_REF_A                                      "System.Xml,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_XML_ASSEMBLY_IDENTITY_REF_W                                     L"System.Xml,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_XML_ASSEMBLY_IDENTITY_REF_S                                     S"System.Xml,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_XML_ASSEMBLY_IDENTITY_REF_T                                 TEXT("System.Xml,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_XML_ASSEMBLY_IDENTITY_FRIEND_REF                                  System.Xml,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_XML_ASSEMBLY_IDENTITY_FRIEND_REF_A                               "System.Xml,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_XML_ASSEMBLY_IDENTITY_FRIEND_REF_W                              L"System.Xml,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_XML_ASSEMBLY_IDENTITY_FRIEND_REF_S                              S"System.Xml,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_XML_ASSEMBLY_IDENTITY_FRIEND_REF_T                          TEXT("System.Xml,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_XML_ASSEMBLY_IDENTITY_EXACT_REF                                   System.Xml,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_XML_ASSEMBLY_IDENTITY_EXACT_REF_A                                "System.Xml,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_XML_ASSEMBLY_IDENTITY_EXACT_REF_W                               L"System.Xml,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_XML_ASSEMBLY_IDENTITY_EXACT_REF_S                               S"System.Xml,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_XML_ASSEMBLY_IDENTITY_EXACT_REF_T                           TEXT("System.Xml,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_XML_ASSEMBLY_NAME                                                 System.Xml
#define SYSTEM_XML_ASSEMBLY_NAME_A                                              "System.Xml"
#define SYSTEM_XML_ASSEMBLY_NAME_W                                             L"System.Xml"
#define SYSTEM_XML_ASSEMBLY_NAME_S                                             S"System.Xml"
#define SYSTEM_XML_ASSEMBLY_NAME_T                                         TEXT("System.Xml")
#define SYSTEM_XML_ASSEMBLY_VERSION                                              1.0.3300.0
#define SYSTEM_XML_ASSEMBLY_VERSION_A                                           "1.0.3300.0"
#define SYSTEM_XML_ASSEMBLY_VERSION_W                                          L"1.0.3300.0"
#define SYSTEM_XML_ASSEMBLY_VERSION_S                                          S"1.0.3300.0"
#define SYSTEM_XML_ASSEMBLY_VERSION_T                                      TEXT("1.0.3300.0")
#define SYSTEM_XML_ASSEMBLY_VERSION_IL                                            1:0:3300:0
#define SYSTEM_XML_ASSEMBLY_PUBLIC_KEY                                           00000000000000000400000000000000
#define SYSTEM_XML_ASSEMBLY_PUBLIC_KEY_A                                        "00000000000000000400000000000000"
#define SYSTEM_XML_ASSEMBLY_PUBLIC_KEY_W                                       L"00000000000000000400000000000000"
#define SYSTEM_XML_ASSEMBLY_PUBLIC_KEY_S                                       S"00000000000000000400000000000000"
#define SYSTEM_XML_ASSEMBLY_PUBLIC_KEY_T                                   TEXT("00000000000000000400000000000000")
#define SYSTEM_XML_ASSEMBLY_PUBLIC_KEY_IL                                        (00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00 )
#define SYSTEM_XML_ASSEMBLY_PUBLIC_KEY_TOKEN                                     b77a5c561934e089
#define SYSTEM_XML_ASSEMBLY_PUBLIC_KEY_TOKEN_A                                  "b77a5c561934e089"
#define SYSTEM_XML_ASSEMBLY_PUBLIC_KEY_TOKEN_W                                 L"b77a5c561934e089"
#define SYSTEM_XML_ASSEMBLY_PUBLIC_KEY_TOKEN_S                                 S"b77a5c561934e089"
#define SYSTEM_XML_ASSEMBLY_PUBLIC_KEY_TOKEN_T                             TEXT("b77a5c561934e089")
#define SYSTEM_XML_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                                  (b7 7a 5c 56 19 34 e0 89 )
#define SYSTEM_XML_ASSEMBLY_CULTURE                                              neutral
#define SYSTEM_XML_ASSEMBLY_CULTURE_A                                           "neutral"
#define SYSTEM_XML_ASSEMBLY_CULTURE_W                                          L"neutral"
#define SYSTEM_XML_ASSEMBLY_CULTURE_S                                          S"neutral"
#define SYSTEM_XML_ASSEMBLY_CULTURE_T                                      TEXT("neutral")
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\internal\SdkTools\Inc\testcode.h ===
/* Including this headerfile will mark the binary as non-shipping test code */

#ifndef __TESTCODE_DOT_H_
#define __TESTCODE_DOT_H_

#if defined _PREFAST_
    #pragma prefast (disable: 5445, "not relevant for test code")
    #pragma prefast (disable: 8718, "not relevant for test code")
    #pragma prefast (disable: __WARNING_BANNED_API_USAGE, "not relevant for test code")
#endif

static const char* __CODETYPE__ = "__TESTCODE__";

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\internal\Base\lib\i386\ndp10.versionsmk.inc ===
#
# Copyright (c) Microsoft Corporation
#

WINDOWS_ASSEMBLY_VERSION=5.2.3668.0
CLR10_VERSION=1.0.3300.0
VS70_VERSION=7.0.3300.0
CLR10_PUBLIC_KEY_TOKEN=b77a5c561934e089
CLR10_PUBLIC_KEY_STRING=00000000000000000400000000000000
CLR10_KEY_FILE=%SDXROOT%\\public\\internal\\strongnamekeys\\fake\\MyKeyFile.snk
CLR10_2_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
CLR10_2_PUBLIC_KEY_STRING=002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
CLR10_2_KEY_FILE=%SDXROOT%\\public\\internal\\strongnamekeys\\fake\\MyKeyFile.snk
ACCESSIBILITY_ASSEMBLY_IDENTITY_REF=Accessibility,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
ACCESSIBILITY_ASSEMBLY_IDENTITY_DEF=Accessibility,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
ACCESSIBILITY_ASSEMBLY_IDENTITY_FRIEND_REF=Accessibility,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
ACCESSIBILITY_ASSEMBLY_IDENTITY_EXACT_REF=Accessibility,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
ACCESSIBILITY_ASSEMBLY_NAME=Accessibility
ACCESSIBILITY_ASSEMBLY_VERSION=1.0.3300.0
ACCESSIBILITY_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
ACCESSIBILITY_ASSEMBLY_CULTURE=neutral
CSCOMPMGD_ASSEMBLY_IDENTITY_REF=cscompmgd,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
CSCOMPMGD_ASSEMBLY_IDENTITY_DEF=cscompmgd,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
CSCOMPMGD_ASSEMBLY_IDENTITY_FRIEND_REF=cscompmgd,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
CSCOMPMGD_ASSEMBLY_IDENTITY_EXACT_REF=cscompmgd,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
CSCOMPMGD_ASSEMBLY_NAME=cscompmgd
CSCOMPMGD_ASSEMBLY_VERSION=7.0.3300.0
CSCOMPMGD_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
CSCOMPMGD_ASSEMBLY_CULTURE=neutral
CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_REF=CustomMarshalers,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_DEF=CustomMarshalers,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_FRIEND_REF=CustomMarshalers,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_EXACT_REF=CustomMarshalers,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
CUSTOMMARSHALERS_ASSEMBLY_NAME=CustomMarshalers
CUSTOMMARSHALERS_ASSEMBLY_VERSION=1.0.3300.0
CUSTOMMARSHALERS_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
CUSTOMMARSHALERS_ASSEMBLY_CULTURE=neutral
ENVDTE_ASSEMBLY_IDENTITY_REF=EnvDTE,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
ENVDTE_ASSEMBLY_IDENTITY_DEF=EnvDTE,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
ENVDTE_ASSEMBLY_IDENTITY_FRIEND_REF=EnvDTE,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
ENVDTE_ASSEMBLY_IDENTITY_EXACT_REF=EnvDTE,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
ENVDTE_ASSEMBLY_NAME=EnvDTE
ENVDTE_ASSEMBLY_VERSION=7.0.3300.0
ENVDTE_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
ENVDTE_ASSEMBLY_CULTURE=neutral
IEEXECREMOTE_ASSEMBLY_IDENTITY_REF=IEExecRemote,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
IEEXECREMOTE_ASSEMBLY_IDENTITY_DEF=IEExecRemote,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
IEEXECREMOTE_ASSEMBLY_IDENTITY_FRIEND_REF=IEExecRemote,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
IEEXECREMOTE_ASSEMBLY_IDENTITY_EXACT_REF=IEExecRemote,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
IEEXECREMOTE_ASSEMBLY_NAME=IEExecRemote
IEEXECREMOTE_ASSEMBLY_VERSION=1.0.3300.0
IEEXECREMOTE_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
IEEXECREMOTE_ASSEMBLY_CULTURE=neutral
IEHOST_ASSEMBLY_IDENTITY_REF=IEHost,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
IEHOST_ASSEMBLY_IDENTITY_DEF=IEHost,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
IEHOST_ASSEMBLY_IDENTITY_FRIEND_REF=IEHost,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
IEHOST_ASSEMBLY_IDENTITY_EXACT_REF=IEHost,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
IEHOST_ASSEMBLY_NAME=IEHost
IEHOST_ASSEMBLY_VERSION=1.0.3300.0
IEHOST_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
IEHOST_ASSEMBLY_CULTURE=neutral
IIEHOST_ASSEMBLY_IDENTITY_REF=IIEHost,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
IIEHOST_ASSEMBLY_IDENTITY_DEF=IIEHost,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
IIEHOST_ASSEMBLY_IDENTITY_FRIEND_REF=IIEHost,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
IIEHOST_ASSEMBLY_IDENTITY_EXACT_REF=IIEHost,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
IIEHOST_ASSEMBLY_NAME=IIEHost
IIEHOST_ASSEMBLY_VERSION=1.0.3300.0
IIEHOST_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
IIEHOST_ASSEMBLY_CULTURE=neutral
ISYMWRAPPER_ASSEMBLY_IDENTITY_REF=ISymWrapper,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
ISYMWRAPPER_ASSEMBLY_IDENTITY_DEF=ISymWrapper,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
ISYMWRAPPER_ASSEMBLY_IDENTITY_FRIEND_REF=ISymWrapper,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
ISYMWRAPPER_ASSEMBLY_IDENTITY_EXACT_REF=ISymWrapper,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
ISYMWRAPPER_ASSEMBLY_NAME=ISymWrapper
ISYMWRAPPER_ASSEMBLY_VERSION=1.0.3300.0
ISYMWRAPPER_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
ISYMWRAPPER_ASSEMBLY_CULTURE=neutral
MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_REF=Microsoft.JScript,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_DEF=Microsoft.JScript,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_FRIEND_REF=Microsoft.JScript,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_EXACT_REF=Microsoft.JScript,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_JSCRIPT_ASSEMBLY_NAME=Microsoft.JScript
MICROSOFT_JSCRIPT_ASSEMBLY_VERSION=7.0.3300.0
MICROSOFT_JSCRIPT_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MICROSOFT_JSCRIPT_ASSEMBLY_CULTURE=neutral
MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_REF=Microsoft.VisualBasic.Compatibility.Data,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_DEF=Microsoft.VisualBasic.Compatibility.Data,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_FRIEND_REF=Microsoft.VisualBasic.Compatibility.Data,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_EXACT_REF=Microsoft.VisualBasic.Compatibility.Data,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_NAME=Microsoft.VisualBasic.Compatibility.Data
MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_VERSION=7.0.3300.0
MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_CULTURE=neutral
MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_REF=Microsoft.VisualBasic.Compatibility,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_DEF=Microsoft.VisualBasic.Compatibility,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_FRIEND_REF=Microsoft.VisualBasic.Compatibility,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_EXACT_REF=Microsoft.VisualBasic.Compatibility,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_NAME=Microsoft.VisualBasic.Compatibility
MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_VERSION=7.0.3300.0
MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_CULTURE=neutral
MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_REF=Microsoft.VisualBasic,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_DEF=Microsoft.VisualBasic,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_FRIEND_REF=Microsoft.VisualBasic,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_EXACT_REF=Microsoft.VisualBasic,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_ASSEMBLY_NAME=Microsoft.VisualBasic
MICROSOFT_VISUALBASIC_ASSEMBLY_VERSION=7.0.3300.0
MICROSOFT_VISUALBASIC_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MICROSOFT_VISUALBASIC_ASSEMBLY_CULTURE=neutral
MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_REF=Microsoft.VisualBasic.Vsa,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_DEF=Microsoft.VisualBasic.Vsa,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_FRIEND_REF=Microsoft.VisualBasic.Vsa,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_EXACT_REF=Microsoft.VisualBasic.Vsa,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_NAME=Microsoft.VisualBasic.Vsa
MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_VERSION=7.0.3300.0
MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_CULTURE=neutral
MICROSOFT_VSA_ASSEMBLY_IDENTITY_REF=Microsoft.Vsa,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VSA_ASSEMBLY_IDENTITY_DEF=Microsoft.Vsa,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VSA_ASSEMBLY_IDENTITY_FRIEND_REF=Microsoft.Vsa,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VSA_ASSEMBLY_IDENTITY_EXACT_REF=Microsoft.Vsa,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VSA_ASSEMBLY_NAME=Microsoft.Vsa
MICROSOFT_VSA_ASSEMBLY_VERSION=7.0.3300.0
MICROSOFT_VSA_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MICROSOFT_VSA_ASSEMBLY_CULTURE=neutral
MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_REF=Microsoft.Vsa.Vb.CodeDOMProcessor,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_DEF=Microsoft.Vsa.Vb.CodeDOMProcessor,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_FRIEND_REF=Microsoft.Vsa.Vb.CodeDOMProcessor,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_EXACT_REF=Microsoft.Vsa.Vb.CodeDOMProcessor,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_NAME=Microsoft.Vsa.Vb.CodeDOMProcessor
MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_VERSION=7.0.3300.0
MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_CULTURE=neutral
MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_REF=Microsoft_VsaVb,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_DEF=Microsoft_VsaVb,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_FRIEND_REF=Microsoft_VsaVb,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_EXACT_REF=Microsoft_VsaVb,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VSAVB_ASSEMBLY_NAME=Microsoft_VsaVb
MICROSOFT_VSAVB_ASSEMBLY_VERSION=7.0.3300.0
MICROSOFT_VSAVB_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MICROSOFT_VSAVB_ASSEMBLY_CULTURE=neutral
MSCORCFG_ASSEMBLY_IDENTITY_REF=mscorcfg,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MSCORCFG_ASSEMBLY_IDENTITY_DEF=mscorcfg,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MSCORCFG_ASSEMBLY_IDENTITY_FRIEND_REF=mscorcfg,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MSCORCFG_ASSEMBLY_IDENTITY_EXACT_REF=mscorcfg,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MSCORCFG_ASSEMBLY_NAME=mscorcfg
MSCORCFG_ASSEMBLY_VERSION=1.0.3300.0
MSCORCFG_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MSCORCFG_ASSEMBLY_CULTURE=neutral
MSCORLIB_ASSEMBLY_IDENTITY_REF=mscorlib,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral
MSCORLIB_ASSEMBLY_IDENTITY_DEF=mscorlib,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral
MSCORLIB_ASSEMBLY_IDENTITY_FRIEND_REF=mscorlib,publicKeyToken=b77a5c561934e089,culture=neutral
MSCORLIB_ASSEMBLY_IDENTITY_EXACT_REF=mscorlib,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral
MSCORLIB_ASSEMBLY_NAME=mscorlib
MSCORLIB_ASSEMBLY_VERSION=1.0.3300.0
MSCORLIB_ASSEMBLY_PUBLIC_KEY_TOKEN=b77a5c561934e089
MSCORLIB_ASSEMBLY_CULTURE=neutral
OFFICE_ASSEMBLY_IDENTITY_REF=Office,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
OFFICE_ASSEMBLY_IDENTITY_DEF=Office,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
OFFICE_ASSEMBLY_IDENTITY_FRIEND_REF=Office,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
OFFICE_ASSEMBLY_IDENTITY_EXACT_REF=Office,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
OFFICE_ASSEMBLY_NAME=Office
OFFICE_ASSEMBLY_VERSION=7.0.3300.0
OFFICE_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
OFFICE_ASSEMBLY_CULTURE=neutral
REGCODE_ASSEMBLY_IDENTITY_REF=Regcode,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
REGCODE_ASSEMBLY_IDENTITY_DEF=Regcode,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
REGCODE_ASSEMBLY_IDENTITY_FRIEND_REF=Regcode,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
REGCODE_ASSEMBLY_IDENTITY_EXACT_REF=Regcode,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
REGCODE_ASSEMBLY_NAME=Regcode
REGCODE_ASSEMBLY_VERSION=1.0.3300.0
REGCODE_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
REGCODE_ASSEMBLY_CULTURE=neutral
SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_REF=System.Configuration.Install,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_DEF=System.Configuration.Install,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_FRIEND_REF=System.Configuration.Install,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_EXACT_REF=System.Configuration.Install,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_NAME=System.Configuration.Install
SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_VERSION=1.0.3300.0
SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_CULTURE=neutral
SYSTEM_DATA_ASSEMBLY_IDENTITY_REF=System.Data,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_DATA_ASSEMBLY_IDENTITY_DEF=System.Data,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_DATA_ASSEMBLY_IDENTITY_FRIEND_REF=System.Data,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_DATA_ASSEMBLY_IDENTITY_EXACT_REF=System.Data,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_DATA_ASSEMBLY_NAME=System.Data
SYSTEM_DATA_ASSEMBLY_VERSION=1.0.3300.0
SYSTEM_DATA_ASSEMBLY_PUBLIC_KEY_TOKEN=b77a5c561934e089
SYSTEM_DATA_ASSEMBLY_CULTURE=neutral
SYSTEM_DESIGN_ASSEMBLY_IDENTITY_REF=System.Design,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DESIGN_ASSEMBLY_IDENTITY_DEF=System.Design,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DESIGN_ASSEMBLY_IDENTITY_FRIEND_REF=System.Design,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DESIGN_ASSEMBLY_IDENTITY_EXACT_REF=System.Design,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DESIGN_ASSEMBLY_NAME=System.Design
SYSTEM_DESIGN_ASSEMBLY_VERSION=1.0.3300.0
SYSTEM_DESIGN_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_DESIGN_ASSEMBLY_CULTURE=neutral
SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_REF=System.DirectoryServices,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_DEF=System.DirectoryServices,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_FRIEND_REF=System.DirectoryServices,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_EXACT_REF=System.DirectoryServices,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DIRECTORYSERVICES_ASSEMBLY_NAME=System.DirectoryServices
SYSTEM_DIRECTORYSERVICES_ASSEMBLY_VERSION=1.0.3300.0
SYSTEM_DIRECTORYSERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_DIRECTORYSERVICES_ASSEMBLY_CULTURE=neutral
SYSTEM_ASSEMBLY_IDENTITY_REF=System,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_ASSEMBLY_IDENTITY_DEF=System,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_ASSEMBLY_IDENTITY_FRIEND_REF=System,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_ASSEMBLY_IDENTITY_EXACT_REF=System,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_ASSEMBLY_NAME=System
SYSTEM_ASSEMBLY_VERSION=1.0.3300.0
SYSTEM_ASSEMBLY_PUBLIC_KEY_TOKEN=b77a5c561934e089
SYSTEM_ASSEMBLY_CULTURE=neutral
SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_REF=System.Drawing.Design,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_DEF=System.Drawing.Design,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_FRIEND_REF=System.Drawing.Design,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_EXACT_REF=System.Drawing.Design,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DRAWING_DESIGN_ASSEMBLY_NAME=System.Drawing.Design
SYSTEM_DRAWING_DESIGN_ASSEMBLY_VERSION=1.0.3300.0
SYSTEM_DRAWING_DESIGN_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_DRAWING_DESIGN_ASSEMBLY_CULTURE=neutral
SYSTEM_DRAWING_ASSEMBLY_IDENTITY_REF=System.Drawing,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DRAWING_ASSEMBLY_IDENTITY_DEF=System.Drawing,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DRAWING_ASSEMBLY_IDENTITY_FRIEND_REF=System.Drawing,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DRAWING_ASSEMBLY_IDENTITY_EXACT_REF=System.Drawing,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DRAWING_ASSEMBLY_NAME=System.Drawing
SYSTEM_DRAWING_ASSEMBLY_VERSION=1.0.3300.0
SYSTEM_DRAWING_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_DRAWING_ASSEMBLY_CULTURE=neutral
SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_REF=System.EnterpriseServices,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_DEF=System.EnterpriseServices,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_FRIEND_REF=System.EnterpriseServices,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_EXACT_REF=System.EnterpriseServices,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_ENTERPRISESERVICES_ASSEMBLY_NAME=System.EnterpriseServices
SYSTEM_ENTERPRISESERVICES_ASSEMBLY_VERSION=1.0.3300.0
SYSTEM_ENTERPRISESERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_ENTERPRISESERVICES_ASSEMBLY_CULTURE=neutral
SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_REF=System.Management,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_DEF=System.Management,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_FRIEND_REF=System.Management,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_EXACT_REF=System.Management,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_MANAGEMENT_ASSEMBLY_NAME=System.Management
SYSTEM_MANAGEMENT_ASSEMBLY_VERSION=1.0.3300.0
SYSTEM_MANAGEMENT_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_MANAGEMENT_ASSEMBLY_CULTURE=neutral
SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_REF=System.Messaging,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_DEF=System.Messaging,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_FRIEND_REF=System.Messaging,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_EXACT_REF=System.Messaging,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_MESSAGING_ASSEMBLY_NAME=System.Messaging
SYSTEM_MESSAGING_ASSEMBLY_VERSION=1.0.3300.0
SYSTEM_MESSAGING_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_MESSAGING_ASSEMBLY_CULTURE=neutral
SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_REF=System.Runtime.Remoting,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_DEF=System.Runtime.Remoting,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_FRIEND_REF=System.Runtime.Remoting,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_EXACT_REF=System.Runtime.Remoting,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_RUNTIME_REMOTING_ASSEMBLY_NAME=System.Runtime.Remoting
SYSTEM_RUNTIME_REMOTING_ASSEMBLY_VERSION=1.0.3300.0
SYSTEM_RUNTIME_REMOTING_ASSEMBLY_PUBLIC_KEY_TOKEN=b77a5c561934e089
SYSTEM_RUNTIME_REMOTING_ASSEMBLY_CULTURE=neutral
SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_REF=System.Runtime.Serialization.Formatters.Soap,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_DEF=System.Runtime.Serialization.Formatters.Soap,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_FRIEND_REF=System.Runtime.Serialization.Formatters.Soap,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_EXACT_REF=System.Runtime.Serialization.Formatters.Soap,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_NAME=System.Runtime.Serialization.Formatters.Soap
SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_VERSION=1.0.3300.0
SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_CULTURE=neutral
SYSTEM_SECURITY_ASSEMBLY_IDENTITY_REF=System.Security,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_SECURITY_ASSEMBLY_IDENTITY_DEF=System.Security,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_SECURITY_ASSEMBLY_IDENTITY_FRIEND_REF=System.Security,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_SECURITY_ASSEMBLY_IDENTITY_EXACT_REF=System.Security,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_SECURITY_ASSEMBLY_NAME=System.Security
SYSTEM_SECURITY_ASSEMBLY_VERSION=1.0.3300.0
SYSTEM_SECURITY_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_SECURITY_ASSEMBLY_CULTURE=neutral
SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_REF=System.ServiceProcess,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_DEF=System.ServiceProcess,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_FRIEND_REF=System.ServiceProcess,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_EXACT_REF=System.ServiceProcess,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_SERVICEPROCESS_ASSEMBLY_NAME=System.ServiceProcess
SYSTEM_SERVICEPROCESS_ASSEMBLY_VERSION=1.0.3300.0
SYSTEM_SERVICEPROCESS_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_SERVICEPROCESS_ASSEMBLY_CULTURE=neutral
SYSTEM_WEB_ASSEMBLY_IDENTITY_REF=System.Web,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_ASSEMBLY_IDENTITY_DEF=System.Web,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_ASSEMBLY_IDENTITY_FRIEND_REF=System.Web,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_ASSEMBLY_IDENTITY_EXACT_REF=System.Web,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_ASSEMBLY_NAME=System.Web
SYSTEM_WEB_ASSEMBLY_VERSION=1.0.3300.0
SYSTEM_WEB_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_WEB_ASSEMBLY_CULTURE=neutral
SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_REF=System.Web.RegularExpressions,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_DEF=System.Web.RegularExpressions,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_FRIEND_REF=System.Web.RegularExpressions,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_EXACT_REF=System.Web.RegularExpressions,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_NAME=System.Web.RegularExpressions
SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_VERSION=1.0.3300.0
SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_CULTURE=neutral
SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_REF=System.Web.Services,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_DEF=System.Web.Services,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_FRIEND_REF=System.Web.Services,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_EXACT_REF=System.Web.Services,version=1.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_SERVICES_ASSEMBLY_NAME=System.Web.Services
SYSTEM_WEB_SERVICES_ASSEMBLY_VERSION=1.0.3300.0
SYSTEM_WEB_SERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_WEB_SERVICES_ASSEMBLY_CULTURE=neutral
SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_REF=System.Windows.Forms,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_DEF=System.Windows.Forms,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_FRIEND_REF=System.Windows.Forms,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_EXACT_REF=System.Windows.Forms,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_WINDOWS_FORMS_ASSEMBLY_NAME=System.Windows.Forms
SYSTEM_WINDOWS_FORMS_ASSEMBLY_VERSION=1.0.3300.0
SYSTEM_WINDOWS_FORMS_ASSEMBLY_PUBLIC_KEY_TOKEN=b77a5c561934e089
SYSTEM_WINDOWS_FORMS_ASSEMBLY_CULTURE=neutral
SYSTEM_XML_ASSEMBLY_IDENTITY_REF=System.Xml,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_XML_ASSEMBLY_IDENTITY_DEF=System.Xml,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_XML_ASSEMBLY_IDENTITY_FRIEND_REF=System.Xml,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_XML_ASSEMBLY_IDENTITY_EXACT_REF=System.Xml,version=1.0.3300.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_XML_ASSEMBLY_NAME=System.Xml
SYSTEM_XML_ASSEMBLY_VERSION=1.0.3300.0
SYSTEM_XML_ASSEMBLY_PUBLIC_KEY_TOKEN=b77a5c561934e089
SYSTEM_XML_ASSEMBLY_CULTURE=neutral
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\internal\Base\lib\i386\ndp20.versionsmk.inc ===
#
# Copyright (c) Microsoft Corporation
#

WINDOWS_ASSEMBLY_VERSION=5.2.3668.0
CLR11_VERSION=1.0.5000.0
CLR20_VERSION=2.0.3600.0
VS70_VERSION=7.0.3300.0
VS71_VERSION=7.0.5000.0
VS80_VERSION=8.0.1200.0
VS71A_VERSION=7.1.3300.0
VS80A_VERSION=8.0.0.0
CLR20_PUBLIC_KEY_TOKEN=b77a5c561934e089
CLR20_PUBLIC_KEY_STRING=00000000000000000400000000000000
CLR20_KEY_FILE=%SDXROOT%\\public\\internal\\strongnamekeys\\fake\\MyKeyFile.snk
CLR20_2_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
CLR20_2_PUBLIC_KEY_STRING=002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
CLR20_2_KEY_FILE=%SDXROOT%\\public\\internal\\strongnamekeys\\fake\\MyKeyFile.snk
ACCESSIBILITY_ASSEMBLY_IDENTITY_REF=Accessibility,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
ACCESSIBILITY_ASSEMBLY_IDENTITY_DEF=Accessibility,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
ACCESSIBILITY_ASSEMBLY_IDENTITY_FRIEND_REF=Accessibility,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
ACCESSIBILITY_ASSEMBLY_IDENTITY_EXACT_REF=Accessibility,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
ACCESSIBILITY_ASSEMBLY_NAME=Accessibility
ACCESSIBILITY_ASSEMBLY_VERSION=2.0.3600.0
ACCESSIBILITY_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
ACCESSIBILITY_ASSEMBLY_CULTURE=neutral
ADODB_ASSEMBLY_IDENTITY_REF=ADODB,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
ADODB_ASSEMBLY_IDENTITY_DEF=ADODB,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
ADODB_ASSEMBLY_IDENTITY_FRIEND_REF=ADODB,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
ADODB_ASSEMBLY_IDENTITY_EXACT_REF=ADODB,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
ADODB_ASSEMBLY_NAME=ADODB
ADODB_ASSEMBLY_VERSION=7.0.3300.0
ADODB_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
ADODB_ASSEMBLY_CULTURE=neutral
ASPNETMMCEXT_ASSEMBLY_IDENTITY_REF=AspNetMMCExt,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
ASPNETMMCEXT_ASSEMBLY_IDENTITY_DEF=AspNetMMCExt,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
ASPNETMMCEXT_ASSEMBLY_IDENTITY_FRIEND_REF=AspNetMMCExt,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
ASPNETMMCEXT_ASSEMBLY_IDENTITY_EXACT_REF=AspNetMMCExt,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
ASPNETMMCEXT_ASSEMBLY_NAME=AspNetMMCExt
ASPNETMMCEXT_ASSEMBLY_VERSION=2.0.3600.0
ASPNETMMCEXT_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
ASPNETMMCEXT_ASSEMBLY_CULTURE=neutral
CPPCODEPROVIDER_ASSEMBLY_IDENTITY_REF=CppCodeProvider,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
CPPCODEPROVIDER_ASSEMBLY_IDENTITY_DEF=CppCodeProvider,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
CPPCODEPROVIDER_ASSEMBLY_IDENTITY_FRIEND_REF=CppCodeProvider,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
CPPCODEPROVIDER_ASSEMBLY_IDENTITY_EXACT_REF=CppCodeProvider,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
CPPCODEPROVIDER_ASSEMBLY_NAME=CppCodeProvider
CPPCODEPROVIDER_ASSEMBLY_VERSION=8.0.1200.0
CPPCODEPROVIDER_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
CPPCODEPROVIDER_ASSEMBLY_CULTURE=neutral
CSCOMPMGD_ASSEMBLY_IDENTITY_REF=cscompmgd,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
CSCOMPMGD_ASSEMBLY_IDENTITY_DEF=cscompmgd,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
CSCOMPMGD_ASSEMBLY_IDENTITY_FRIEND_REF=cscompmgd,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
CSCOMPMGD_ASSEMBLY_IDENTITY_EXACT_REF=cscompmgd,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
CSCOMPMGD_ASSEMBLY_NAME=cscompmgd
CSCOMPMGD_ASSEMBLY_VERSION=8.0.1200.0
CSCOMPMGD_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
CSCOMPMGD_ASSEMBLY_CULTURE=neutral
CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_REF=CustomMarshalers,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_DEF=CustomMarshalers,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_FRIEND_REF=CustomMarshalers,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_EXACT_REF=CustomMarshalers,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
CUSTOMMARSHALERS_ASSEMBLY_NAME=CustomMarshalers
CUSTOMMARSHALERS_ASSEMBLY_VERSION=2.0.3600.0
CUSTOMMARSHALERS_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
CUSTOMMARSHALERS_ASSEMBLY_CULTURE=neutral
ENVDTE_ASSEMBLY_IDENTITY_REF=EnvDTE,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
ENVDTE_ASSEMBLY_IDENTITY_DEF=EnvDTE,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
ENVDTE_ASSEMBLY_IDENTITY_FRIEND_REF=EnvDTE,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
ENVDTE_ASSEMBLY_IDENTITY_EXACT_REF=EnvDTE,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
ENVDTE_ASSEMBLY_NAME=EnvDTE
ENVDTE_ASSEMBLY_VERSION=7.0.3300.0
ENVDTE_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
ENVDTE_ASSEMBLY_CULTURE=neutral
ENVDTE80_ASSEMBLY_IDENTITY_REF=EnvDTE80,version=8.0.0.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
ENVDTE80_ASSEMBLY_IDENTITY_DEF=EnvDTE80,version=8.0.0.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
ENVDTE80_ASSEMBLY_IDENTITY_FRIEND_REF=EnvDTE80,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
ENVDTE80_ASSEMBLY_IDENTITY_EXACT_REF=EnvDTE80,version=8.0.0.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
ENVDTE80_ASSEMBLY_NAME=EnvDTE80
ENVDTE80_ASSEMBLY_VERSION=8.0.0.0
ENVDTE80_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
ENVDTE80_ASSEMBLY_CULTURE=neutral
EXTENSIBILITY_ASSEMBLY_IDENTITY_REF=Extensibility,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
EXTENSIBILITY_ASSEMBLY_IDENTITY_DEF=Extensibility,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
EXTENSIBILITY_ASSEMBLY_IDENTITY_FRIEND_REF=Extensibility,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
EXTENSIBILITY_ASSEMBLY_IDENTITY_EXACT_REF=Extensibility,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
EXTENSIBILITY_ASSEMBLY_NAME=Extensibility
EXTENSIBILITY_ASSEMBLY_VERSION=7.0.3300.0
EXTENSIBILITY_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
EXTENSIBILITY_ASSEMBLY_CULTURE=neutral
IEEXECREMOTE_ASSEMBLY_IDENTITY_REF=IEExecRemote,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
IEEXECREMOTE_ASSEMBLY_IDENTITY_DEF=IEExecRemote,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
IEEXECREMOTE_ASSEMBLY_IDENTITY_FRIEND_REF=IEExecRemote,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
IEEXECREMOTE_ASSEMBLY_IDENTITY_EXACT_REF=IEExecRemote,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
IEEXECREMOTE_ASSEMBLY_NAME=IEExecRemote
IEEXECREMOTE_ASSEMBLY_VERSION=2.0.3600.0
IEEXECREMOTE_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
IEEXECREMOTE_ASSEMBLY_CULTURE=neutral
IEHOST_ASSEMBLY_IDENTITY_REF=IEHost,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
IEHOST_ASSEMBLY_IDENTITY_DEF=IEHost,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
IEHOST_ASSEMBLY_IDENTITY_FRIEND_REF=IEHost,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
IEHOST_ASSEMBLY_IDENTITY_EXACT_REF=IEHost,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
IEHOST_ASSEMBLY_NAME=IEHost
IEHOST_ASSEMBLY_VERSION=2.0.3600.0
IEHOST_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
IEHOST_ASSEMBLY_CULTURE=neutral
IIEHOST_ASSEMBLY_IDENTITY_REF=IIEHost,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
IIEHOST_ASSEMBLY_IDENTITY_DEF=IIEHost,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
IIEHOST_ASSEMBLY_IDENTITY_FRIEND_REF=IIEHost,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
IIEHOST_ASSEMBLY_IDENTITY_EXACT_REF=IIEHost,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
IIEHOST_ASSEMBLY_NAME=IIEHost
IIEHOST_ASSEMBLY_VERSION=2.0.3600.0
IIEHOST_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
IIEHOST_ASSEMBLY_CULTURE=neutral
INTEROP_CERTCLI_ASSEMBLY_IDENTITY_REF=Interop.CertCli,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
INTEROP_CERTCLI_ASSEMBLY_IDENTITY_DEF=Interop.CertCli,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
INTEROP_CERTCLI_ASSEMBLY_IDENTITY_FRIEND_REF=Interop.CertCli,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
INTEROP_CERTCLI_ASSEMBLY_IDENTITY_EXACT_REF=Interop.CertCli,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
INTEROP_CERTCLI_ASSEMBLY_NAME=Interop.CertCli
INTEROP_CERTCLI_ASSEMBLY_VERSION=2.0.3600.0
INTEROP_CERTCLI_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
INTEROP_CERTCLI_ASSEMBLY_CULTURE=neutral
INTEROP_XENROLL_ASSEMBLY_IDENTITY_REF=Interop.XEnroll,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
INTEROP_XENROLL_ASSEMBLY_IDENTITY_DEF=Interop.XEnroll,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
INTEROP_XENROLL_ASSEMBLY_IDENTITY_FRIEND_REF=Interop.XEnroll,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
INTEROP_XENROLL_ASSEMBLY_IDENTITY_EXACT_REF=Interop.XEnroll,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
INTEROP_XENROLL_ASSEMBLY_NAME=Interop.XEnroll
INTEROP_XENROLL_ASSEMBLY_VERSION=2.0.3600.0
INTEROP_XENROLL_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
INTEROP_XENROLL_ASSEMBLY_CULTURE=neutral
ISYMWRAPPER_ASSEMBLY_IDENTITY_REF=ISymWrapper,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
ISYMWRAPPER_ASSEMBLY_IDENTITY_DEF=ISymWrapper,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
ISYMWRAPPER_ASSEMBLY_IDENTITY_FRIEND_REF=ISymWrapper,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
ISYMWRAPPER_ASSEMBLY_IDENTITY_EXACT_REF=ISymWrapper,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
ISYMWRAPPER_ASSEMBLY_NAME=ISymWrapper
ISYMWRAPPER_ASSEMBLY_VERSION=2.0.3600.0
ISYMWRAPPER_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
ISYMWRAPPER_ASSEMBLY_CULTURE=neutral
MESSAGEBUSINSTALLER_ASSEMBLY_IDENTITY_REF=MessageBusInstaller,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MESSAGEBUSINSTALLER_ASSEMBLY_IDENTITY_DEF=MessageBusInstaller,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MESSAGEBUSINSTALLER_ASSEMBLY_IDENTITY_FRIEND_REF=MessageBusInstaller,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MESSAGEBUSINSTALLER_ASSEMBLY_IDENTITY_EXACT_REF=MessageBusInstaller,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MESSAGEBUSINSTALLER_ASSEMBLY_NAME=MessageBusInstaller
MESSAGEBUSINSTALLER_ASSEMBLY_VERSION=2.0.3600.0
MESSAGEBUSINSTALLER_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MESSAGEBUSINSTALLER_ASSEMBLY_CULTURE=neutral
MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_REF=Microsoft.JScript,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_DEF=Microsoft.JScript,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_FRIEND_REF=Microsoft.JScript,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_EXACT_REF=Microsoft.JScript,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_JSCRIPT_ASSEMBLY_NAME=Microsoft.JScript
MICROSOFT_JSCRIPT_ASSEMBLY_VERSION=8.0.1200.0
MICROSOFT_JSCRIPT_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MICROSOFT_JSCRIPT_ASSEMBLY_CULTURE=neutral
MICROSOFT_MSHTML_ASSEMBLY_IDENTITY_REF=Microsoft.mshtml,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_MSHTML_ASSEMBLY_IDENTITY_DEF=Microsoft.mshtml,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_MSHTML_ASSEMBLY_IDENTITY_FRIEND_REF=Microsoft.mshtml,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_MSHTML_ASSEMBLY_IDENTITY_EXACT_REF=Microsoft.mshtml,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_MSHTML_ASSEMBLY_NAME=Microsoft.mshtml
MICROSOFT_MSHTML_ASSEMBLY_VERSION=7.0.3300.0
MICROSOFT_MSHTML_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MICROSOFT_MSHTML_ASSEMBLY_CULTURE=neutral
MICROSOFT_STDFORMAT_ASSEMBLY_IDENTITY_REF=Microsoft.StdFormat,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_STDFORMAT_ASSEMBLY_IDENTITY_DEF=Microsoft.StdFormat,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_STDFORMAT_ASSEMBLY_IDENTITY_FRIEND_REF=Microsoft.StdFormat,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_STDFORMAT_ASSEMBLY_IDENTITY_EXACT_REF=Microsoft.StdFormat,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_STDFORMAT_ASSEMBLY_NAME=Microsoft.StdFormat
MICROSOFT_STDFORMAT_ASSEMBLY_VERSION=7.0.3300.0
MICROSOFT_STDFORMAT_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MICROSOFT_STDFORMAT_ASSEMBLY_CULTURE=neutral
MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_IDENTITY_REF=Microsoft.Transactions.Bridge,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_IDENTITY_DEF=Microsoft.Transactions.Bridge,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_IDENTITY_FRIEND_REF=Microsoft.Transactions.Bridge,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_IDENTITY_EXACT_REF=Microsoft.Transactions.Bridge,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_NAME=Microsoft.Transactions.Bridge
MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_VERSION=2.0.3600.0
MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_CULTURE=neutral
MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_IDENTITY_REF=Microsoft.Transactions.Bridge.Dtc,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_IDENTITY_DEF=Microsoft.Transactions.Bridge.Dtc,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_IDENTITY_FRIEND_REF=Microsoft.Transactions.Bridge.Dtc,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_IDENTITY_EXACT_REF=Microsoft.Transactions.Bridge.Dtc,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_NAME=Microsoft.Transactions.Bridge.Dtc
MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_VERSION=2.0.3600.0
MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_CULTURE=neutral
MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_IDENTITY_REF=Microsoft.Transactions.Protocols.WSTransaction,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_IDENTITY_DEF=Microsoft.Transactions.Protocols.WSTransaction,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_IDENTITY_FRIEND_REF=Microsoft.Transactions.Protocols.WSTransaction,publicKeyToken=b77a5c561934e089,culture=neutral
MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_IDENTITY_EXACT_REF=Microsoft.Transactions.Protocols.WSTransaction,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_NAME=Microsoft.Transactions.Protocols.WSTransaction
MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_VERSION=2.0.3600.0
MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_PUBLIC_KEY_TOKEN=b77a5c561934e089
MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_CULTURE=neutral
MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_IDENTITY_REF=Microsoft.Transactions.Protocols.WSTransaction.Messaging,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_IDENTITY_DEF=Microsoft.Transactions.Protocols.WSTransaction.Messaging,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_IDENTITY_FRIEND_REF=Microsoft.Transactions.Protocols.WSTransaction.Messaging,publicKeyToken=b77a5c561934e089,culture=neutral
MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_IDENTITY_EXACT_REF=Microsoft.Transactions.Protocols.WSTransaction.Messaging,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_NAME=Microsoft.Transactions.Protocols.WSTransaction.Messaging
MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_VERSION=2.0.3600.0
MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_PUBLIC_KEY_TOKEN=b77a5c561934e089
MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_CULTURE=neutral
MICROSOFT_TRINITY_EXCEL_ASSEMBLY_IDENTITY_REF=Microsoft.Trinity.Excel,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_TRINITY_EXCEL_ASSEMBLY_IDENTITY_DEF=Microsoft.Trinity.Excel,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_TRINITY_EXCEL_ASSEMBLY_IDENTITY_FRIEND_REF=Microsoft.Trinity.Excel,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_TRINITY_EXCEL_ASSEMBLY_IDENTITY_EXACT_REF=Microsoft.Trinity.Excel,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_TRINITY_EXCEL_ASSEMBLY_NAME=Microsoft.Trinity.Excel
MICROSOFT_TRINITY_EXCEL_ASSEMBLY_VERSION=8.0.1200.0
MICROSOFT_TRINITY_EXCEL_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MICROSOFT_TRINITY_EXCEL_ASSEMBLY_CULTURE=neutral
MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_IDENTITY_REF=Microsoft.Trinity.Runtime,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_IDENTITY_DEF=Microsoft.Trinity.Runtime,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_IDENTITY_FRIEND_REF=Microsoft.Trinity.Runtime,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_IDENTITY_EXACT_REF=Microsoft.Trinity.Runtime,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_NAME=Microsoft.Trinity.Runtime
MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_VERSION=8.0.1200.0
MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_CULTURE=neutral
MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_IDENTITY_REF=Microsoft.Trinity.SmartDocs,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_IDENTITY_DEF=Microsoft.Trinity.SmartDocs,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_IDENTITY_FRIEND_REF=Microsoft.Trinity.SmartDocs,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_IDENTITY_EXACT_REF=Microsoft.Trinity.SmartDocs,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_NAME=Microsoft.Trinity.SmartDocs
MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_VERSION=8.0.1200.0
MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_CULTURE=neutral
MICROSOFT_TRINITY_WORD_ASSEMBLY_IDENTITY_REF=Microsoft.Trinity.Word,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_TRINITY_WORD_ASSEMBLY_IDENTITY_DEF=Microsoft.Trinity.Word,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_TRINITY_WORD_ASSEMBLY_IDENTITY_FRIEND_REF=Microsoft.Trinity.Word,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_TRINITY_WORD_ASSEMBLY_IDENTITY_EXACT_REF=Microsoft.Trinity.Word,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_TRINITY_WORD_ASSEMBLY_NAME=Microsoft.Trinity.Word
MICROSOFT_TRINITY_WORD_ASSEMBLY_VERSION=8.0.1200.0
MICROSOFT_TRINITY_WORD_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MICROSOFT_TRINITY_WORD_ASSEMBLY_CULTURE=neutral
MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_REF=Microsoft.VisualBasic.Compatibility.Data,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_DEF=Microsoft.VisualBasic.Compatibility.Data,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_FRIEND_REF=Microsoft.VisualBasic.Compatibility.Data,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_EXACT_REF=Microsoft.VisualBasic.Compatibility.Data,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_NAME=Microsoft.VisualBasic.Compatibility.Data
MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_VERSION=8.0.1200.0
MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_CULTURE=neutral
MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_REF=Microsoft.VisualBasic.Compatibility,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_DEF=Microsoft.VisualBasic.Compatibility,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_FRIEND_REF=Microsoft.VisualBasic.Compatibility,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_EXACT_REF=Microsoft.VisualBasic.Compatibility,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_NAME=Microsoft.VisualBasic.Compatibility
MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_VERSION=8.0.1200.0
MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_CULTURE=neutral
MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_REF=Microsoft.VisualBasic,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_DEF=Microsoft.VisualBasic,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_FRIEND_REF=Microsoft.VisualBasic,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_EXACT_REF=Microsoft.VisualBasic,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_ASSEMBLY_NAME=Microsoft.VisualBasic
MICROSOFT_VISUALBASIC_ASSEMBLY_VERSION=8.0.1200.0
MICROSOFT_VISUALBASIC_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MICROSOFT_VISUALBASIC_ASSEMBLY_CULTURE=neutral
MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_REF=Microsoft.VisualBasic.Vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_DEF=Microsoft.VisualBasic.Vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_FRIEND_REF=Microsoft.VisualBasic.Vsa,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_EXACT_REF=Microsoft.VisualBasic.Vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_NAME=Microsoft.VisualBasic.Vsa
MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_VERSION=8.0.1200.0
MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_CULTURE=neutral
MICROSOFT_VISUALC_ASSEMBLY_IDENTITY_REF=Microsoft.VisualC,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALC_ASSEMBLY_IDENTITY_DEF=Microsoft.VisualC,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALC_ASSEMBLY_IDENTITY_FRIEND_REF=Microsoft.VisualC,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALC_ASSEMBLY_IDENTITY_EXACT_REF=Microsoft.VisualC,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALC_ASSEMBLY_NAME=Microsoft.VisualC
MICROSOFT_VISUALC_ASSEMBLY_VERSION=8.0.1200.0
MICROSOFT_VISUALC_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MICROSOFT_VISUALC_ASSEMBLY_CULTURE=neutral
MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_IDENTITY_REF=Microsoft.VisualC.VSCodeProvider,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_IDENTITY_DEF=Microsoft.VisualC.VSCodeProvider,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_IDENTITY_FRIEND_REF=Microsoft.VisualC.VSCodeProvider,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_IDENTITY_EXACT_REF=Microsoft.VisualC.VSCodeProvider,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_NAME=Microsoft.VisualC.VSCodeProvider
MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_VERSION=8.0.1200.0
MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_CULTURE=neutral
MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_IDENTITY_REF=Microsoft.VisualStudio.VCCodeModel,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_IDENTITY_DEF=Microsoft.VisualStudio.VCCodeModel,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_IDENTITY_FRIEND_REF=Microsoft.VisualStudio.VCCodeModel,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_IDENTITY_EXACT_REF=Microsoft.VisualStudio.VCCodeModel,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_NAME=Microsoft.VisualStudio.VCCodeModel
MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_VERSION=8.0.1200.0
MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_CULTURE=neutral
MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_IDENTITY_REF=Microsoft.VisualStudio.VCProject,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_IDENTITY_DEF=Microsoft.VisualStudio.VCProject,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_IDENTITY_FRIEND_REF=Microsoft.VisualStudio.VCProject,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_IDENTITY_EXACT_REF=Microsoft.VisualStudio.VCProject,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_NAME=Microsoft.VisualStudio.VCProject
MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_VERSION=8.0.1200.0
MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_CULTURE=neutral
MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_IDENTITY_REF=Microsoft.VisualStudio.VCProjectEngine,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_IDENTITY_DEF=Microsoft.VisualStudio.VCProjectEngine,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_IDENTITY_FRIEND_REF=Microsoft.VisualStudio.VCProjectEngine,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_IDENTITY_EXACT_REF=Microsoft.VisualStudio.VCProjectEngine,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_NAME=Microsoft.VisualStudio.VCProjectEngine
MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_VERSION=8.0.1200.0
MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_CULTURE=neutral
MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_IDENTITY_REF=Microsoft.VisualStudio.VSHelp,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_IDENTITY_DEF=Microsoft.VisualStudio.VSHelp,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_IDENTITY_FRIEND_REF=Microsoft.VisualStudio.VSHelp,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_IDENTITY_EXACT_REF=Microsoft.VisualStudio.VSHelp,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_NAME=Microsoft.VisualStudio.VSHelp
MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_VERSION=7.0.3300.0
MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_CULTURE=neutral
MICROSOFT_VSA_ASSEMBLY_IDENTITY_REF=Microsoft.Vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VSA_ASSEMBLY_IDENTITY_DEF=Microsoft.Vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VSA_ASSEMBLY_IDENTITY_FRIEND_REF=Microsoft.Vsa,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VSA_ASSEMBLY_IDENTITY_EXACT_REF=Microsoft.Vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VSA_ASSEMBLY_NAME=Microsoft.Vsa
MICROSOFT_VSA_ASSEMBLY_VERSION=8.0.1200.0
MICROSOFT_VSA_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MICROSOFT_VSA_ASSEMBLY_CULTURE=neutral
MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_REF=Microsoft_VsaVb,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_DEF=Microsoft_VsaVb,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_FRIEND_REF=Microsoft_VsaVb,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_EXACT_REF=Microsoft_VsaVb,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VSAVB_ASSEMBLY_NAME=Microsoft_VsaVb
MICROSOFT_VSAVB_ASSEMBLY_VERSION=8.0.1200.0
MICROSOFT_VSAVB_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MICROSOFT_VSAVB_ASSEMBLY_CULTURE=neutral
MSBUILDENGINE_ASSEMBLY_IDENTITY_REF=MSBuildEngine,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MSBUILDENGINE_ASSEMBLY_IDENTITY_DEF=MSBuildEngine,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MSBUILDENGINE_ASSEMBLY_IDENTITY_FRIEND_REF=MSBuildEngine,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MSBUILDENGINE_ASSEMBLY_IDENTITY_EXACT_REF=MSBuildEngine,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MSBUILDENGINE_ASSEMBLY_NAME=MSBuildEngine
MSBUILDENGINE_ASSEMBLY_VERSION=2.0.3600.0
MSBUILDENGINE_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MSBUILDENGINE_ASSEMBLY_CULTURE=neutral
MSBUILDFRAMEWORK_ASSEMBLY_IDENTITY_REF=MSBuildFramework,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MSBUILDFRAMEWORK_ASSEMBLY_IDENTITY_DEF=MSBuildFramework,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MSBUILDFRAMEWORK_ASSEMBLY_IDENTITY_FRIEND_REF=MSBuildFramework,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MSBUILDFRAMEWORK_ASSEMBLY_IDENTITY_EXACT_REF=MSBuildFramework,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MSBUILDFRAMEWORK_ASSEMBLY_NAME=MSBuildFramework
MSBUILDFRAMEWORK_ASSEMBLY_VERSION=2.0.3600.0
MSBUILDFRAMEWORK_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MSBUILDFRAMEWORK_ASSEMBLY_CULTURE=neutral
MSBUILDTASKS_ASSEMBLY_IDENTITY_REF=MSBuildTasks,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MSBUILDTASKS_ASSEMBLY_IDENTITY_DEF=MSBuildTasks,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MSBUILDTASKS_ASSEMBLY_IDENTITY_FRIEND_REF=MSBuildTasks,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MSBUILDTASKS_ASSEMBLY_IDENTITY_EXACT_REF=MSBuildTasks,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MSBUILDTASKS_ASSEMBLY_NAME=MSBuildTasks
MSBUILDTASKS_ASSEMBLY_VERSION=2.0.3600.0
MSBUILDTASKS_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MSBUILDTASKS_ASSEMBLY_CULTURE=neutral
MSBUILDUTILITIES_ASSEMBLY_IDENTITY_REF=MSBuildUtilities,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MSBUILDUTILITIES_ASSEMBLY_IDENTITY_DEF=MSBuildUtilities,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MSBUILDUTILITIES_ASSEMBLY_IDENTITY_FRIEND_REF=MSBuildUtilities,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MSBUILDUTILITIES_ASSEMBLY_IDENTITY_EXACT_REF=MSBuildUtilities,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MSBUILDUTILITIES_ASSEMBLY_NAME=MSBuildUtilities
MSBUILDUTILITIES_ASSEMBLY_VERSION=2.0.3600.0
MSBUILDUTILITIES_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MSBUILDUTILITIES_ASSEMBLY_CULTURE=neutral
MSCORCFG_ASSEMBLY_IDENTITY_REF=mscorcfg,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MSCORCFG_ASSEMBLY_IDENTITY_DEF=mscorcfg,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MSCORCFG_ASSEMBLY_IDENTITY_FRIEND_REF=mscorcfg,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MSCORCFG_ASSEMBLY_IDENTITY_EXACT_REF=mscorcfg,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MSCORCFG_ASSEMBLY_NAME=mscorcfg
MSCORCFG_ASSEMBLY_VERSION=2.0.3600.0
MSCORCFG_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MSCORCFG_ASSEMBLY_CULTURE=neutral
MSCORLIB_ASSEMBLY_IDENTITY_REF=mscorlib,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
MSCORLIB_ASSEMBLY_IDENTITY_DEF=mscorlib,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
MSCORLIB_ASSEMBLY_IDENTITY_FRIEND_REF=mscorlib,publicKeyToken=b77a5c561934e089,culture=neutral
MSCORLIB_ASSEMBLY_IDENTITY_EXACT_REF=mscorlib,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
MSCORLIB_ASSEMBLY_NAME=mscorlib
MSCORLIB_ASSEMBLY_VERSION=2.0.3600.0
MSCORLIB_ASSEMBLY_PUBLIC_KEY_TOKEN=b77a5c561934e089
MSCORLIB_ASSEMBLY_CULTURE=neutral
MSDATASRC_ASSEMBLY_IDENTITY_REF=MSDATASRC,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MSDATASRC_ASSEMBLY_IDENTITY_DEF=MSDATASRC,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MSDATASRC_ASSEMBLY_IDENTITY_FRIEND_REF=MSDATASRC,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MSDATASRC_ASSEMBLY_IDENTITY_EXACT_REF=MSDATASRC,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MSDATASRC_ASSEMBLY_NAME=MSDATASRC
MSDATASRC_ASSEMBLY_VERSION=7.0.3300.0
MSDATASRC_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MSDATASRC_ASSEMBLY_CULTURE=neutral
MSDDSLMP_ASSEMBLY_IDENTITY_REF=MSDDSLMP,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MSDDSLMP_ASSEMBLY_IDENTITY_DEF=MSDDSLMP,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MSDDSLMP_ASSEMBLY_IDENTITY_FRIEND_REF=MSDDSLMP,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MSDDSLMP_ASSEMBLY_IDENTITY_EXACT_REF=MSDDSLMP,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MSDDSLMP_ASSEMBLY_NAME=MSDDSLMP
MSDDSLMP_ASSEMBLY_VERSION=7.0.3300.0
MSDDSLMP_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MSDDSLMP_ASSEMBLY_CULTURE=neutral
MSDDSP_ASSEMBLY_IDENTITY_REF=MSDDSP,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MSDDSP_ASSEMBLY_IDENTITY_DEF=MSDDSP,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MSDDSP_ASSEMBLY_IDENTITY_FRIEND_REF=MSDDSP,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MSDDSP_ASSEMBLY_IDENTITY_EXACT_REF=MSDDSP,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MSDDSP_ASSEMBLY_NAME=MSDDSP
MSDDSP_ASSEMBLY_VERSION=7.0.3300.0
MSDDSP_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MSDDSP_ASSEMBLY_CULTURE=neutral
OFFICE_ASSEMBLY_IDENTITY_REF=Office,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
OFFICE_ASSEMBLY_IDENTITY_DEF=Office,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
OFFICE_ASSEMBLY_IDENTITY_FRIEND_REF=Office,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
OFFICE_ASSEMBLY_IDENTITY_EXACT_REF=Office,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
OFFICE_ASSEMBLY_NAME=Office
OFFICE_ASSEMBLY_VERSION=7.0.3300.0
OFFICE_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
OFFICE_ASSEMBLY_CULTURE=neutral
STDOLE_ASSEMBLY_IDENTITY_REF=stdole,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
STDOLE_ASSEMBLY_IDENTITY_DEF=stdole,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
STDOLE_ASSEMBLY_IDENTITY_FRIEND_REF=stdole,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
STDOLE_ASSEMBLY_IDENTITY_EXACT_REF=stdole,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
STDOLE_ASSEMBLY_NAME=stdole
STDOLE_ASSEMBLY_VERSION=7.0.3300.0
STDOLE_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
STDOLE_ASSEMBLY_CULTURE=neutral
SYSGLOBL_ASSEMBLY_IDENTITY_REF=sysglobl,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSGLOBL_ASSEMBLY_IDENTITY_DEF=sysglobl,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSGLOBL_ASSEMBLY_IDENTITY_FRIEND_REF=sysglobl,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSGLOBL_ASSEMBLY_IDENTITY_EXACT_REF=sysglobl,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSGLOBL_ASSEMBLY_NAME=sysglobl
SYSGLOBL_ASSEMBLY_VERSION=2.0.3600.0
SYSGLOBL_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSGLOBL_ASSEMBLY_CULTURE=neutral
SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_REF=System.Configuration.Install,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_DEF=System.Configuration.Install,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_FRIEND_REF=System.Configuration.Install,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_EXACT_REF=System.Configuration.Install,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_NAME=System.Configuration.Install
SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_CULTURE=neutral
SYSTEM_DATA_ASSEMBLY_IDENTITY_REF=System.Data,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_DATA_ASSEMBLY_IDENTITY_DEF=System.Data,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_DATA_ASSEMBLY_IDENTITY_FRIEND_REF=System.Data,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_DATA_ASSEMBLY_IDENTITY_EXACT_REF=System.Data,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_DATA_ASSEMBLY_NAME=System.Data
SYSTEM_DATA_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_DATA_ASSEMBLY_PUBLIC_KEY_TOKEN=b77a5c561934e089
SYSTEM_DATA_ASSEMBLY_CULTURE=neutral
SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_IDENTITY_REF=System.Data.ObjectSpaces,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_IDENTITY_DEF=System.Data.ObjectSpaces,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_IDENTITY_FRIEND_REF=System.Data.ObjectSpaces,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_IDENTITY_EXACT_REF=System.Data.ObjectSpaces,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_NAME=System.Data.ObjectSpaces
SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_PUBLIC_KEY_TOKEN=b77a5c561934e089
SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_CULTURE=neutral
SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_REF=System.Data.OracleClient,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_DEF=System.Data.OracleClient,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_FRIEND_REF=System.Data.OracleClient,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_EXACT_REF=System.Data.OracleClient,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_NAME=System.Data.OracleClient
SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_PUBLIC_KEY_TOKEN=b77a5c561934e089
SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_CULTURE=neutral
SYSTEM_DATA_SQLXML_ASSEMBLY_IDENTITY_REF=System.Data.SqlXml,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DATA_SQLXML_ASSEMBLY_IDENTITY_DEF=System.Data.SqlXml,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DATA_SQLXML_ASSEMBLY_IDENTITY_FRIEND_REF=System.Data.SqlXml,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DATA_SQLXML_ASSEMBLY_IDENTITY_EXACT_REF=System.Data.SqlXml,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DATA_SQLXML_ASSEMBLY_NAME=System.Data.SqlXml
SYSTEM_DATA_SQLXML_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_DATA_SQLXML_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_DATA_SQLXML_ASSEMBLY_CULTURE=neutral
SYSTEM_DEPLOYMENT_ASSEMBLY_IDENTITY_REF=System.Deployment,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DEPLOYMENT_ASSEMBLY_IDENTITY_DEF=System.Deployment,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DEPLOYMENT_ASSEMBLY_IDENTITY_FRIEND_REF=System.Deployment,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DEPLOYMENT_ASSEMBLY_IDENTITY_EXACT_REF=System.Deployment,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DEPLOYMENT_ASSEMBLY_NAME=System.Deployment
SYSTEM_DEPLOYMENT_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_DEPLOYMENT_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_DEPLOYMENT_ASSEMBLY_CULTURE=neutral
SYSTEM_DESIGN_ASSEMBLY_IDENTITY_REF=System.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DESIGN_ASSEMBLY_IDENTITY_DEF=System.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DESIGN_ASSEMBLY_IDENTITY_FRIEND_REF=System.Design,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DESIGN_ASSEMBLY_IDENTITY_EXACT_REF=System.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DESIGN_ASSEMBLY_NAME=System.Design
SYSTEM_DESIGN_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_DESIGN_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_DESIGN_ASSEMBLY_CULTURE=neutral
SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_REF=System.DirectoryServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_DEF=System.DirectoryServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_FRIEND_REF=System.DirectoryServices,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_EXACT_REF=System.DirectoryServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DIRECTORYSERVICES_ASSEMBLY_NAME=System.DirectoryServices
SYSTEM_DIRECTORYSERVICES_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_DIRECTORYSERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_DIRECTORYSERVICES_ASSEMBLY_CULTURE=neutral
SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_IDENTITY_REF=System.DirectoryServices.Protocols,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_IDENTITY_DEF=System.DirectoryServices.Protocols,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_IDENTITY_FRIEND_REF=System.DirectoryServices.Protocols,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_IDENTITY_EXACT_REF=System.DirectoryServices.Protocols,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_NAME=System.DirectoryServices.Protocols
SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_CULTURE=neutral
SYSTEM_ASSEMBLY_IDENTITY_REF=System,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_ASSEMBLY_IDENTITY_DEF=System,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_ASSEMBLY_IDENTITY_FRIEND_REF=System,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_ASSEMBLY_IDENTITY_EXACT_REF=System,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_ASSEMBLY_NAME=System
SYSTEM_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_ASSEMBLY_PUBLIC_KEY_TOKEN=b77a5c561934e089
SYSTEM_ASSEMBLY_CULTURE=neutral
SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_REF=System.Drawing.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_DEF=System.Drawing.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_FRIEND_REF=System.Drawing.Design,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_EXACT_REF=System.Drawing.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DRAWING_DESIGN_ASSEMBLY_NAME=System.Drawing.Design
SYSTEM_DRAWING_DESIGN_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_DRAWING_DESIGN_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_DRAWING_DESIGN_ASSEMBLY_CULTURE=neutral
SYSTEM_DRAWING_ASSEMBLY_IDENTITY_REF=System.Drawing,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DRAWING_ASSEMBLY_IDENTITY_DEF=System.Drawing,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DRAWING_ASSEMBLY_IDENTITY_FRIEND_REF=System.Drawing,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DRAWING_ASSEMBLY_IDENTITY_EXACT_REF=System.Drawing,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DRAWING_ASSEMBLY_NAME=System.Drawing
SYSTEM_DRAWING_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_DRAWING_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_DRAWING_ASSEMBLY_CULTURE=neutral
SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_REF=System.EnterpriseServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_DEF=System.EnterpriseServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_FRIEND_REF=System.EnterpriseServices,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_EXACT_REF=System.EnterpriseServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_ENTERPRISESERVICES_ASSEMBLY_NAME=System.EnterpriseServices
SYSTEM_ENTERPRISESERVICES_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_ENTERPRISESERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_ENTERPRISESERVICES_ASSEMBLY_CULTURE=neutral
SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_REF=System.Management,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_DEF=System.Management,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_FRIEND_REF=System.Management,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_EXACT_REF=System.Management,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_MANAGEMENT_ASSEMBLY_NAME=System.Management
SYSTEM_MANAGEMENT_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_MANAGEMENT_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_MANAGEMENT_ASSEMBLY_CULTURE=neutral
SYSTEM_MESSAGEBUS_ASSEMBLY_IDENTITY_REF=System.MessageBus,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_MESSAGEBUS_ASSEMBLY_IDENTITY_DEF=System.MessageBus,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_MESSAGEBUS_ASSEMBLY_IDENTITY_FRIEND_REF=System.MessageBus,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_MESSAGEBUS_ASSEMBLY_IDENTITY_EXACT_REF=System.MessageBus,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_MESSAGEBUS_ASSEMBLY_NAME=System.MessageBus
SYSTEM_MESSAGEBUS_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_MESSAGEBUS_ASSEMBLY_PUBLIC_KEY_TOKEN=b77a5c561934e089
SYSTEM_MESSAGEBUS_ASSEMBLY_CULTURE=neutral
SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_IDENTITY_REF=System.MessageBus.Tools,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_IDENTITY_DEF=System.MessageBus.Tools,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_IDENTITY_FRIEND_REF=System.MessageBus.Tools,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_IDENTITY_EXACT_REF=System.MessageBus.Tools,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_NAME=System.MessageBus.Tools
SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_PUBLIC_KEY_TOKEN=b77a5c561934e089
SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_CULTURE=neutral
SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_REF=System.Messaging,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_DEF=System.Messaging,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_FRIEND_REF=System.Messaging,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_EXACT_REF=System.Messaging,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_MESSAGING_ASSEMBLY_NAME=System.Messaging
SYSTEM_MESSAGING_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_MESSAGING_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_MESSAGING_ASSEMBLY_CULTURE=neutral
SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_REF=System.Runtime.Remoting,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_DEF=System.Runtime.Remoting,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_FRIEND_REF=System.Runtime.Remoting,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_EXACT_REF=System.Runtime.Remoting,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_RUNTIME_REMOTING_ASSEMBLY_NAME=System.Runtime.Remoting
SYSTEM_RUNTIME_REMOTING_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_RUNTIME_REMOTING_ASSEMBLY_PUBLIC_KEY_TOKEN=b77a5c561934e089
SYSTEM_RUNTIME_REMOTING_ASSEMBLY_CULTURE=neutral
SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_REF=System.Runtime.Serialization.Formatters.Soap,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_DEF=System.Runtime.Serialization.Formatters.Soap,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_FRIEND_REF=System.Runtime.Serialization.Formatters.Soap,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_EXACT_REF=System.Runtime.Serialization.Formatters.Soap,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_NAME=System.Runtime.Serialization.Formatters.Soap
SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_CULTURE=neutral
SYSTEM_SECURITY_ASSEMBLY_IDENTITY_REF=System.Security,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_SECURITY_ASSEMBLY_IDENTITY_DEF=System.Security,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_SECURITY_ASSEMBLY_IDENTITY_FRIEND_REF=System.Security,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_SECURITY_ASSEMBLY_IDENTITY_EXACT_REF=System.Security,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_SECURITY_ASSEMBLY_NAME=System.Security
SYSTEM_SECURITY_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_SECURITY_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_SECURITY_ASSEMBLY_CULTURE=neutral
SYSTEM_SERIALIZATION_ASSEMBLY_IDENTITY_REF=System.Serialization,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_SERIALIZATION_ASSEMBLY_IDENTITY_DEF=System.Serialization,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_SERIALIZATION_ASSEMBLY_IDENTITY_FRIEND_REF=System.Serialization,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_SERIALIZATION_ASSEMBLY_IDENTITY_EXACT_REF=System.Serialization,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_SERIALIZATION_ASSEMBLY_NAME=System.Serialization
SYSTEM_SERIALIZATION_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_SERIALIZATION_ASSEMBLY_PUBLIC_KEY_TOKEN=b77a5c561934e089
SYSTEM_SERIALIZATION_ASSEMBLY_CULTURE=neutral
SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_REF=System.ServiceProcess,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_DEF=System.ServiceProcess,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_FRIEND_REF=System.ServiceProcess,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_EXACT_REF=System.ServiceProcess,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_SERVICEPROCESS_ASSEMBLY_NAME=System.ServiceProcess
SYSTEM_SERVICEPROCESS_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_SERVICEPROCESS_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_SERVICEPROCESS_ASSEMBLY_CULTURE=neutral
SYSTEM_TRANSACTIONS_ASSEMBLY_IDENTITY_REF=System.Transactions,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_TRANSACTIONS_ASSEMBLY_IDENTITY_DEF=System.Transactions,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_TRANSACTIONS_ASSEMBLY_IDENTITY_FRIEND_REF=System.Transactions,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_TRANSACTIONS_ASSEMBLY_IDENTITY_EXACT_REF=System.Transactions,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_TRANSACTIONS_ASSEMBLY_NAME=System.Transactions
SYSTEM_TRANSACTIONS_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_TRANSACTIONS_ASSEMBLY_PUBLIC_KEY_TOKEN=b77a5c561934e089
SYSTEM_TRANSACTIONS_ASSEMBLY_CULTURE=neutral
SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_IDENTITY_REF=System.Transactions.Wstx,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_IDENTITY_DEF=System.Transactions.Wstx,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_IDENTITY_FRIEND_REF=System.Transactions.Wstx,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_IDENTITY_EXACT_REF=System.Transactions.Wstx,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_NAME=System.Transactions.Wstx
SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_PUBLIC_KEY_TOKEN=b77a5c561934e089
SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_CULTURE=neutral
SYSTEM_WEB_ASSEMBLY_IDENTITY_REF=System.Web,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_ASSEMBLY_IDENTITY_DEF=System.Web,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_ASSEMBLY_IDENTITY_FRIEND_REF=System.Web,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_ASSEMBLY_IDENTITY_EXACT_REF=System.Web,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_ASSEMBLY_NAME=System.Web
SYSTEM_WEB_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_WEB_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_WEB_ASSEMBLY_CULTURE=neutral
SYSTEM_WEB_MANAGEMENT_ASSEMBLY_IDENTITY_REF=System.Web.Management,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_MANAGEMENT_ASSEMBLY_IDENTITY_DEF=System.Web.Management,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_MANAGEMENT_ASSEMBLY_IDENTITY_FRIEND_REF=System.Web.Management,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_MANAGEMENT_ASSEMBLY_IDENTITY_EXACT_REF=System.Web.Management,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_MANAGEMENT_ASSEMBLY_NAME=System.Web.Management
SYSTEM_WEB_MANAGEMENT_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_WEB_MANAGEMENT_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_WEB_MANAGEMENT_ASSEMBLY_CULTURE=neutral
SYSTEM_WEB_MOBILE_ASSEMBLY_IDENTITY_REF=System.Web.Mobile,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_MOBILE_ASSEMBLY_IDENTITY_DEF=System.Web.Mobile,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_MOBILE_ASSEMBLY_IDENTITY_FRIEND_REF=System.Web.Mobile,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_MOBILE_ASSEMBLY_IDENTITY_EXACT_REF=System.Web.Mobile,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_MOBILE_ASSEMBLY_NAME=System.Web.Mobile
SYSTEM_WEB_MOBILE_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_WEB_MOBILE_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_WEB_MOBILE_ASSEMBLY_CULTURE=neutral
SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_REF=System.Web.RegularExpressions,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_DEF=System.Web.RegularExpressions,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_FRIEND_REF=System.Web.RegularExpressions,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_EXACT_REF=System.Web.RegularExpressions,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_NAME=System.Web.RegularExpressions
SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_CULTURE=neutral
SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_REF=System.Web.Services,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_DEF=System.Web.Services,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_FRIEND_REF=System.Web.Services,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_EXACT_REF=System.Web.Services,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_SERVICES_ASSEMBLY_NAME=System.Web.Services
SYSTEM_WEB_SERVICES_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_WEB_SERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_WEB_SERVICES_ASSEMBLY_CULTURE=neutral
SYSTEM_WEB_UI_MOBILECONTROLS_ADAPTERS_ASSEMBLY_IDENTITY_REF=System.Web.UI.MobileControls.Adapters,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_UI_MOBILECONTROLS_ADAPTERS_ASSEMBLY_IDENTITY_DEF=System.Web.UI.MobileControls.Adapters,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_UI_MOBILECONTROLS_ADAPTERS_ASSEMBLY_IDENTITY_FRIEND_REF=System.Web.UI.MobileControls.Adapters,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_UI_MOBILECONTROLS_ADAPTERS_ASSEMBLY_IDENTITY_EXACT_REF=System.Web.UI.MobileControls.Adapters,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_UI_MOBILECONTROLS_ADAPTERS_ASSEMBLY_NAME=System.Web.UI.MobileControls.Adapters
SYSTEM_WEB_UI_MOBILECONTROLS_ADAPTERS_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_WEB_UI_MOBILECONTROLS_ADAPTERS_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_WEB_UI_MOBILECONTROLS_ADAPTERS_ASSEMBLY_CULTURE=neutral
SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_REF=System.Windows.Forms,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_DEF=System.Windows.Forms,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_FRIEND_REF=System.Windows.Forms,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_EXACT_REF=System.Windows.Forms,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_WINDOWS_FORMS_ASSEMBLY_NAME=System.Windows.Forms
SYSTEM_WINDOWS_FORMS_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_WINDOWS_FORMS_ASSEMBLY_PUBLIC_KEY_TOKEN=b77a5c561934e089
SYSTEM_WINDOWS_FORMS_ASSEMBLY_CULTURE=neutral
SYSTEM_XML_ASSEMBLY_IDENTITY_REF=System.Xml,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_XML_ASSEMBLY_IDENTITY_DEF=System.Xml,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_XML_ASSEMBLY_IDENTITY_FRIEND_REF=System.Xml,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_XML_ASSEMBLY_IDENTITY_EXACT_REF=System.Xml,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_XML_ASSEMBLY_NAME=System.Xml
SYSTEM_XML_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_XML_ASSEMBLY_PUBLIC_KEY_TOKEN=b77a5c561934e089
SYSTEM_XML_ASSEMBLY_CULTURE=neutral
VJSCOR_ASSEMBLY_IDENTITY_REF=vjscor,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSCOR_ASSEMBLY_IDENTITY_DEF=vjscor,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSCOR_ASSEMBLY_IDENTITY_FRIEND_REF=vjscor,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSCOR_ASSEMBLY_IDENTITY_EXACT_REF=vjscor,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSCOR_ASSEMBLY_NAME=vjscor
VJSCOR_ASSEMBLY_VERSION=2.0.3600.0
VJSCOR_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
VJSCOR_ASSEMBLY_CULTURE=neutral
VJSHARPCODEPROVIDER_ASSEMBLY_IDENTITY_REF=VJSharpCodeProvider,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSHARPCODEPROVIDER_ASSEMBLY_IDENTITY_DEF=VJSharpCodeProvider,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSHARPCODEPROVIDER_ASSEMBLY_IDENTITY_FRIEND_REF=VJSharpCodeProvider,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSHARPCODEPROVIDER_ASSEMBLY_IDENTITY_EXACT_REF=VJSharpCodeProvider,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSHARPCODEPROVIDER_ASSEMBLY_NAME=VJSharpCodeProvider
VJSHARPCODEPROVIDER_ASSEMBLY_VERSION=2.0.3600.0
VJSHARPCODEPROVIDER_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
VJSHARPCODEPROVIDER_ASSEMBLY_CULTURE=neutral
VJSLIB_ASSEMBLY_IDENTITY_REF=vjslib,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSLIB_ASSEMBLY_IDENTITY_DEF=vjslib,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSLIB_ASSEMBLY_IDENTITY_FRIEND_REF=vjslib,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSLIB_ASSEMBLY_IDENTITY_EXACT_REF=vjslib,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSLIB_ASSEMBLY_NAME=vjslib
VJSLIB_ASSEMBLY_VERSION=2.0.3600.0
VJSLIB_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
VJSLIB_ASSEMBLY_CULTURE=neutral
VJSLIBCW_ASSEMBLY_IDENTITY_REF=vjslibcw,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSLIBCW_ASSEMBLY_IDENTITY_DEF=vjslibcw,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSLIBCW_ASSEMBLY_IDENTITY_FRIEND_REF=vjslibcw,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSLIBCW_ASSEMBLY_IDENTITY_EXACT_REF=vjslibcw,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSLIBCW_ASSEMBLY_NAME=vjslibcw
VJSLIBCW_ASSEMBLY_VERSION=2.0.3600.0
VJSLIBCW_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
VJSLIBCW_ASSEMBLY_CULTURE=neutral
VJSSUPUILIB_ASSEMBLY_IDENTITY_REF=VJSSupUILib,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSSUPUILIB_ASSEMBLY_IDENTITY_DEF=VJSSupUILib,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSSUPUILIB_ASSEMBLY_IDENTITY_FRIEND_REF=VJSSupUILib,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSSUPUILIB_ASSEMBLY_IDENTITY_EXACT_REF=VJSSupUILib,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSSUPUILIB_ASSEMBLY_NAME=VJSSupUILib
VJSSUPUILIB_ASSEMBLY_VERSION=2.0.3600.0
VJSSUPUILIB_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
VJSSUPUILIB_ASSEMBLY_CULTURE=neutral
VJSVWAUX_ASSEMBLY_IDENTITY_REF=vjsvwaux,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSVWAUX_ASSEMBLY_IDENTITY_DEF=vjsvwaux,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSVWAUX_ASSEMBLY_IDENTITY_FRIEND_REF=vjsvwaux,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSVWAUX_ASSEMBLY_IDENTITY_EXACT_REF=vjsvwaux,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSVWAUX_ASSEMBLY_NAME=vjsvwaux
VJSVWAUX_ASSEMBLY_VERSION=2.0.3600.0
VJSVWAUX_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
VJSVWAUX_ASSEMBLY_CULTURE=neutral
VJSWFC_ASSEMBLY_IDENTITY_REF=vjswfc,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSWFC_ASSEMBLY_IDENTITY_DEF=vjswfc,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSWFC_ASSEMBLY_IDENTITY_FRIEND_REF=vjswfc,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSWFC_ASSEMBLY_IDENTITY_EXACT_REF=vjswfc,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSWFC_ASSEMBLY_NAME=vjswfc
VJSWFC_ASSEMBLY_VERSION=2.0.3600.0
VJSWFC_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
VJSWFC_ASSEMBLY_CULTURE=neutral
VJSWFCBROWSERSTUBLIB_ASSEMBLY_IDENTITY_REF=VjsWfcBrowserStubLib,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSWFCBROWSERSTUBLIB_ASSEMBLY_IDENTITY_DEF=VjsWfcBrowserStubLib,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSWFCBROWSERSTUBLIB_ASSEMBLY_IDENTITY_FRIEND_REF=VjsWfcBrowserStubLib,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSWFCBROWSERSTUBLIB_ASSEMBLY_IDENTITY_EXACT_REF=VjsWfcBrowserStubLib,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSWFCBROWSERSTUBLIB_ASSEMBLY_NAME=VjsWfcBrowserStubLib
VJSWFCBROWSERSTUBLIB_ASSEMBLY_VERSION=2.0.3600.0
VJSWFCBROWSERSTUBLIB_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
VJSWFCBROWSERSTUBLIB_ASSEMBLY_CULTURE=neutral
VJSWFCCW_ASSEMBLY_IDENTITY_REF=vjswfccw,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSWFCCW_ASSEMBLY_IDENTITY_DEF=vjswfccw,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSWFCCW_ASSEMBLY_IDENTITY_FRIEND_REF=vjswfccw,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSWFCCW_ASSEMBLY_IDENTITY_EXACT_REF=vjswfccw,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSWFCCW_ASSEMBLY_NAME=vjswfccw
VJSWFCCW_ASSEMBLY_VERSION=2.0.3600.0
VJSWFCCW_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
VJSWFCCW_ASSEMBLY_CULTURE=neutral
VJSWFCHTML_ASSEMBLY_IDENTITY_REF=vjswfchtml,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSWFCHTML_ASSEMBLY_IDENTITY_DEF=vjswfchtml,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSWFCHTML_ASSEMBLY_IDENTITY_FRIEND_REF=vjswfchtml,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSWFCHTML_ASSEMBLY_IDENTITY_EXACT_REF=vjswfchtml,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSWFCHTML_ASSEMBLY_NAME=vjswfchtml
VJSWFCHTML_ASSEMBLY_VERSION=2.0.3600.0
VJSWFCHTML_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
VJSWFCHTML_ASSEMBLY_CULTURE=neutral
VSHOSTUTIL_ASSEMBLY_IDENTITY_REF=vshostutil,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VSHOSTUTIL_ASSEMBLY_IDENTITY_DEF=vshostutil,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VSHOSTUTIL_ASSEMBLY_IDENTITY_FRIEND_REF=vshostutil,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VSHOSTUTIL_ASSEMBLY_IDENTITY_EXACT_REF=vshostutil,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VSHOSTUTIL_ASSEMBLY_NAME=vshostutil
VSHOSTUTIL_ASSEMBLY_VERSION=8.0.1200.0
VSHOSTUTIL_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
VSHOSTUTIL_ASSEMBLY_CULTURE=neutral
VSLANGPROJ_ASSEMBLY_IDENTITY_REF=VSLangProj,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VSLANGPROJ_ASSEMBLY_IDENTITY_DEF=VSLangProj,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VSLANGPROJ_ASSEMBLY_IDENTITY_FRIEND_REF=VSLangProj,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VSLANGPROJ_ASSEMBLY_IDENTITY_EXACT_REF=VSLangProj,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VSLANGPROJ_ASSEMBLY_NAME=VSLangProj
VSLANGPROJ_ASSEMBLY_VERSION=7.0.3300.0
VSLANGPROJ_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
VSLANGPROJ_ASSEMBLY_CULTURE=neutral
VSWEBSITE_INTEROP_ASSEMBLY_IDENTITY_REF=VsWebSite.Interop,version=7.1.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VSWEBSITE_INTEROP_ASSEMBLY_IDENTITY_DEF=VsWebSite.Interop,version=7.1.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VSWEBSITE_INTEROP_ASSEMBLY_IDENTITY_FRIEND_REF=VsWebSite.Interop,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VSWEBSITE_INTEROP_ASSEMBLY_IDENTITY_EXACT_REF=VsWebSite.Interop,version=7.1.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VSWEBSITE_INTEROP_ASSEMBLY_NAME=VsWebSite.Interop
VSWEBSITE_INTEROP_ASSEMBLY_VERSION=7.1.3300.0
VSWEBSITE_INTEROP_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
VSWEBSITE_INTEROP_ASSEMBLY_CULTURE=neutral
WEBDEV_WEBHOST_ASSEMBLY_IDENTITY_REF=WebDev.WebHost,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
WEBDEV_WEBHOST_ASSEMBLY_IDENTITY_DEF=WebDev.WebHost,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
WEBDEV_WEBHOST_ASSEMBLY_IDENTITY_FRIEND_REF=WebDev.WebHost,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
WEBDEV_WEBHOST_ASSEMBLY_IDENTITY_EXACT_REF=WebDev.WebHost,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
WEBDEV_WEBHOST_ASSEMBLY_NAME=WebDev.WebHost
WEBDEV_WEBHOST_ASSEMBLY_VERSION=8.0.1200.0
WEBDEV_WEBHOST_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
WEBDEV_WEBHOST_ASSEMBLY_CULTURE=neutral
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\internal\Base\lib\i386\ndp11.versionsmk.inc ===
#
# Copyright (c) Microsoft Corporation
#

WINDOWS_ASSEMBLY_VERSION=5.2.3668.0
CLR11_VERSION=1.0.5000.0
VS70_VERSION=7.0.3300.0
VS71_VERSION=7.0.5000.0
CLR11_PUBLIC_KEY_TOKEN=b77a5c561934e089
CLR11_PUBLIC_KEY_STRING=00000000000000000400000000000000
CLR11_KEY_FILE=%SDXROOT%\\public\\internal\\strongnamekeys\\fake\\MyKeyFile.snk
CLR11_2_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
CLR11_2_PUBLIC_KEY_STRING=002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
CLR11_2_KEY_FILE=%SDXROOT%\\public\\internal\\strongnamekeys\\fake\\MyKeyFile.snk
ACCESSIBILITY_ASSEMBLY_IDENTITY_REF=Accessibility,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
ACCESSIBILITY_ASSEMBLY_IDENTITY_DEF=Accessibility,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
ACCESSIBILITY_ASSEMBLY_IDENTITY_FRIEND_REF=Accessibility,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
ACCESSIBILITY_ASSEMBLY_IDENTITY_EXACT_REF=Accessibility,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
ACCESSIBILITY_ASSEMBLY_NAME=Accessibility
ACCESSIBILITY_ASSEMBLY_VERSION=1.0.5000.0
ACCESSIBILITY_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
ACCESSIBILITY_ASSEMBLY_CULTURE=neutral
CSCOMPMGD_ASSEMBLY_IDENTITY_REF=cscompmgd,version=7.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
CSCOMPMGD_ASSEMBLY_IDENTITY_DEF=cscompmgd,version=7.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
CSCOMPMGD_ASSEMBLY_IDENTITY_FRIEND_REF=cscompmgd,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
CSCOMPMGD_ASSEMBLY_IDENTITY_EXACT_REF=cscompmgd,version=7.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
CSCOMPMGD_ASSEMBLY_NAME=cscompmgd
CSCOMPMGD_ASSEMBLY_VERSION=7.0.5000.0
CSCOMPMGD_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
CSCOMPMGD_ASSEMBLY_CULTURE=neutral
CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_REF=CustomMarshalers,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_DEF=CustomMarshalers,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_FRIEND_REF=CustomMarshalers,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_EXACT_REF=CustomMarshalers,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
CUSTOMMARSHALERS_ASSEMBLY_NAME=CustomMarshalers
CUSTOMMARSHALERS_ASSEMBLY_VERSION=1.0.5000.0
CUSTOMMARSHALERS_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
CUSTOMMARSHALERS_ASSEMBLY_CULTURE=neutral
ENVDTE_ASSEMBLY_IDENTITY_REF=EnvDTE,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
ENVDTE_ASSEMBLY_IDENTITY_DEF=EnvDTE,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
ENVDTE_ASSEMBLY_IDENTITY_FRIEND_REF=EnvDTE,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
ENVDTE_ASSEMBLY_IDENTITY_EXACT_REF=EnvDTE,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
ENVDTE_ASSEMBLY_NAME=EnvDTE
ENVDTE_ASSEMBLY_VERSION=7.0.3300.0
ENVDTE_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
ENVDTE_ASSEMBLY_CULTURE=neutral
IEEXECREMOTE_ASSEMBLY_IDENTITY_REF=IEExecRemote,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
IEEXECREMOTE_ASSEMBLY_IDENTITY_DEF=IEExecRemote,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
IEEXECREMOTE_ASSEMBLY_IDENTITY_FRIEND_REF=IEExecRemote,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
IEEXECREMOTE_ASSEMBLY_IDENTITY_EXACT_REF=IEExecRemote,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
IEEXECREMOTE_ASSEMBLY_NAME=IEExecRemote
IEEXECREMOTE_ASSEMBLY_VERSION=1.0.5000.0
IEEXECREMOTE_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
IEEXECREMOTE_ASSEMBLY_CULTURE=neutral
IEHOST_ASSEMBLY_IDENTITY_REF=IEHost,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
IEHOST_ASSEMBLY_IDENTITY_DEF=IEHost,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
IEHOST_ASSEMBLY_IDENTITY_FRIEND_REF=IEHost,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
IEHOST_ASSEMBLY_IDENTITY_EXACT_REF=IEHost,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
IEHOST_ASSEMBLY_NAME=IEHost
IEHOST_ASSEMBLY_VERSION=1.0.5000.0
IEHOST_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
IEHOST_ASSEMBLY_CULTURE=neutral
IIEHOST_ASSEMBLY_IDENTITY_REF=IIEHost,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
IIEHOST_ASSEMBLY_IDENTITY_DEF=IIEHost,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
IIEHOST_ASSEMBLY_IDENTITY_FRIEND_REF=IIEHost,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
IIEHOST_ASSEMBLY_IDENTITY_EXACT_REF=IIEHost,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
IIEHOST_ASSEMBLY_NAME=IIEHost
IIEHOST_ASSEMBLY_VERSION=1.0.5000.0
IIEHOST_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
IIEHOST_ASSEMBLY_CULTURE=neutral
ISYMWRAPPER_ASSEMBLY_IDENTITY_REF=ISymWrapper,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
ISYMWRAPPER_ASSEMBLY_IDENTITY_DEF=ISymWrapper,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
ISYMWRAPPER_ASSEMBLY_IDENTITY_FRIEND_REF=ISymWrapper,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
ISYMWRAPPER_ASSEMBLY_IDENTITY_EXACT_REF=ISymWrapper,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
ISYMWRAPPER_ASSEMBLY_NAME=ISymWrapper
ISYMWRAPPER_ASSEMBLY_VERSION=1.0.5000.0
ISYMWRAPPER_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
ISYMWRAPPER_ASSEMBLY_CULTURE=neutral
MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_REF=Microsoft.JScript,version=7.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_DEF=Microsoft.JScript,version=7.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_FRIEND_REF=Microsoft.JScript,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_EXACT_REF=Microsoft.JScript,version=7.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_JSCRIPT_ASSEMBLY_NAME=Microsoft.JScript
MICROSOFT_JSCRIPT_ASSEMBLY_VERSION=7.0.5000.0
MICROSOFT_JSCRIPT_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MICROSOFT_JSCRIPT_ASSEMBLY_CULTURE=neutral
MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_REF=Microsoft.VisualBasic.Compatibility.Data,version=7.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_DEF=Microsoft.VisualBasic.Compatibility.Data,version=7.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_FRIEND_REF=Microsoft.VisualBasic.Compatibility.Data,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_EXACT_REF=Microsoft.VisualBasic.Compatibility.Data,version=7.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_NAME=Microsoft.VisualBasic.Compatibility.Data
MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_VERSION=7.0.5000.0
MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_CULTURE=neutral
MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_REF=Microsoft.VisualBasic.Compatibility,version=7.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_DEF=Microsoft.VisualBasic.Compatibility,version=7.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_FRIEND_REF=Microsoft.VisualBasic.Compatibility,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_EXACT_REF=Microsoft.VisualBasic.Compatibility,version=7.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_NAME=Microsoft.VisualBasic.Compatibility
MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_VERSION=7.0.5000.0
MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_CULTURE=neutral
MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_REF=Microsoft.VisualBasic,version=7.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_DEF=Microsoft.VisualBasic,version=7.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_FRIEND_REF=Microsoft.VisualBasic,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_EXACT_REF=Microsoft.VisualBasic,version=7.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_ASSEMBLY_NAME=Microsoft.VisualBasic
MICROSOFT_VISUALBASIC_ASSEMBLY_VERSION=7.0.5000.0
MICROSOFT_VISUALBASIC_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MICROSOFT_VISUALBASIC_ASSEMBLY_CULTURE=neutral
MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_REF=Microsoft.VisualBasic.Vsa,version=7.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_DEF=Microsoft.VisualBasic.Vsa,version=7.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_FRIEND_REF=Microsoft.VisualBasic.Vsa,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_EXACT_REF=Microsoft.VisualBasic.Vsa,version=7.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_NAME=Microsoft.VisualBasic.Vsa
MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_VERSION=7.0.5000.0
MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_CULTURE=neutral
MICROSOFT_VSA_ASSEMBLY_IDENTITY_REF=Microsoft.Vsa,version=7.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VSA_ASSEMBLY_IDENTITY_DEF=Microsoft.Vsa,version=7.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VSA_ASSEMBLY_IDENTITY_FRIEND_REF=Microsoft.Vsa,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VSA_ASSEMBLY_IDENTITY_EXACT_REF=Microsoft.Vsa,version=7.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VSA_ASSEMBLY_NAME=Microsoft.Vsa
MICROSOFT_VSA_ASSEMBLY_VERSION=7.0.5000.0
MICROSOFT_VSA_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MICROSOFT_VSA_ASSEMBLY_CULTURE=neutral
MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_REF=Microsoft.Vsa.Vb.CodeDOMProcessor,version=7.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_DEF=Microsoft.Vsa.Vb.CodeDOMProcessor,version=7.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_FRIEND_REF=Microsoft.Vsa.Vb.CodeDOMProcessor,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_EXACT_REF=Microsoft.Vsa.Vb.CodeDOMProcessor,version=7.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_NAME=Microsoft.Vsa.Vb.CodeDOMProcessor
MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_VERSION=7.0.5000.0
MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_CULTURE=neutral
MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_REF=Microsoft_VsaVb,version=7.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_DEF=Microsoft_VsaVb,version=7.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_FRIEND_REF=Microsoft_VsaVb,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_EXACT_REF=Microsoft_VsaVb,version=7.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VSAVB_ASSEMBLY_NAME=Microsoft_VsaVb
MICROSOFT_VSAVB_ASSEMBLY_VERSION=7.0.5000.0
MICROSOFT_VSAVB_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MICROSOFT_VSAVB_ASSEMBLY_CULTURE=neutral
MSCORCFG_ASSEMBLY_IDENTITY_REF=mscorcfg,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MSCORCFG_ASSEMBLY_IDENTITY_DEF=mscorcfg,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MSCORCFG_ASSEMBLY_IDENTITY_FRIEND_REF=mscorcfg,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MSCORCFG_ASSEMBLY_IDENTITY_EXACT_REF=mscorcfg,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MSCORCFG_ASSEMBLY_NAME=mscorcfg
MSCORCFG_ASSEMBLY_VERSION=1.0.5000.0
MSCORCFG_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MSCORCFG_ASSEMBLY_CULTURE=neutral
MSCORLIB_ASSEMBLY_IDENTITY_REF=mscorlib,version=1.0.5000.0,publicKeyToken=b77a5c561934e089,culture=neutral
MSCORLIB_ASSEMBLY_IDENTITY_DEF=mscorlib,version=1.0.5000.0,publicKeyToken=b77a5c561934e089,culture=neutral
MSCORLIB_ASSEMBLY_IDENTITY_FRIEND_REF=mscorlib,publicKeyToken=b77a5c561934e089,culture=neutral
MSCORLIB_ASSEMBLY_IDENTITY_EXACT_REF=mscorlib,version=1.0.5000.0,publicKeyToken=b77a5c561934e089,culture=neutral
MSCORLIB_ASSEMBLY_NAME=mscorlib
MSCORLIB_ASSEMBLY_VERSION=1.0.5000.0
MSCORLIB_ASSEMBLY_PUBLIC_KEY_TOKEN=b77a5c561934e089
MSCORLIB_ASSEMBLY_CULTURE=neutral
OFFICE_ASSEMBLY_IDENTITY_REF=Office,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
OFFICE_ASSEMBLY_IDENTITY_DEF=Office,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
OFFICE_ASSEMBLY_IDENTITY_FRIEND_REF=Office,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
OFFICE_ASSEMBLY_IDENTITY_EXACT_REF=Office,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
OFFICE_ASSEMBLY_NAME=Office
OFFICE_ASSEMBLY_VERSION=7.0.3300.0
OFFICE_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
OFFICE_ASSEMBLY_CULTURE=neutral
REGCODE_ASSEMBLY_IDENTITY_REF=Regcode,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
REGCODE_ASSEMBLY_IDENTITY_DEF=Regcode,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
REGCODE_ASSEMBLY_IDENTITY_FRIEND_REF=Regcode,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
REGCODE_ASSEMBLY_IDENTITY_EXACT_REF=Regcode,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
REGCODE_ASSEMBLY_NAME=Regcode
REGCODE_ASSEMBLY_VERSION=1.0.5000.0
REGCODE_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
REGCODE_ASSEMBLY_CULTURE=neutral
SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_REF=System.Configuration.Install,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_DEF=System.Configuration.Install,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_FRIEND_REF=System.Configuration.Install,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_EXACT_REF=System.Configuration.Install,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_NAME=System.Configuration.Install
SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_VERSION=1.0.5000.0
SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_CULTURE=neutral
SYSTEM_DATA_ASSEMBLY_IDENTITY_REF=System.Data,version=1.0.5000.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_DATA_ASSEMBLY_IDENTITY_DEF=System.Data,version=1.0.5000.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_DATA_ASSEMBLY_IDENTITY_FRIEND_REF=System.Data,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_DATA_ASSEMBLY_IDENTITY_EXACT_REF=System.Data,version=1.0.5000.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_DATA_ASSEMBLY_NAME=System.Data
SYSTEM_DATA_ASSEMBLY_VERSION=1.0.5000.0
SYSTEM_DATA_ASSEMBLY_PUBLIC_KEY_TOKEN=b77a5c561934e089
SYSTEM_DATA_ASSEMBLY_CULTURE=neutral
SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_REF=System.Data.OracleClient,version=1.0.5000.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_DEF=System.Data.OracleClient,version=1.0.5000.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_FRIEND_REF=System.Data.OracleClient,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_EXACT_REF=System.Data.OracleClient,version=1.0.5000.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_NAME=System.Data.OracleClient
SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_VERSION=1.0.5000.0
SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_PUBLIC_KEY_TOKEN=b77a5c561934e089
SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_CULTURE=neutral
SYSTEM_DESIGN_ASSEMBLY_IDENTITY_REF=System.Design,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DESIGN_ASSEMBLY_IDENTITY_DEF=System.Design,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DESIGN_ASSEMBLY_IDENTITY_FRIEND_REF=System.Design,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DESIGN_ASSEMBLY_IDENTITY_EXACT_REF=System.Design,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DESIGN_ASSEMBLY_NAME=System.Design
SYSTEM_DESIGN_ASSEMBLY_VERSION=1.0.5000.0
SYSTEM_DESIGN_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_DESIGN_ASSEMBLY_CULTURE=neutral
SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_REF=System.DirectoryServices,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_DEF=System.DirectoryServices,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_FRIEND_REF=System.DirectoryServices,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_EXACT_REF=System.DirectoryServices,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DIRECTORYSERVICES_ASSEMBLY_NAME=System.DirectoryServices
SYSTEM_DIRECTORYSERVICES_ASSEMBLY_VERSION=1.0.5000.0
SYSTEM_DIRECTORYSERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_DIRECTORYSERVICES_ASSEMBLY_CULTURE=neutral
SYSTEM_ASSEMBLY_IDENTITY_REF=System,version=1.0.5000.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_ASSEMBLY_IDENTITY_DEF=System,version=1.0.5000.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_ASSEMBLY_IDENTITY_FRIEND_REF=System,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_ASSEMBLY_IDENTITY_EXACT_REF=System,version=1.0.5000.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_ASSEMBLY_NAME=System
SYSTEM_ASSEMBLY_VERSION=1.0.5000.0
SYSTEM_ASSEMBLY_PUBLIC_KEY_TOKEN=b77a5c561934e089
SYSTEM_ASSEMBLY_CULTURE=neutral
SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_REF=System.Drawing.Design,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_DEF=System.Drawing.Design,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_FRIEND_REF=System.Drawing.Design,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_EXACT_REF=System.Drawing.Design,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DRAWING_DESIGN_ASSEMBLY_NAME=System.Drawing.Design
SYSTEM_DRAWING_DESIGN_ASSEMBLY_VERSION=1.0.5000.0
SYSTEM_DRAWING_DESIGN_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_DRAWING_DESIGN_ASSEMBLY_CULTURE=neutral
SYSTEM_DRAWING_ASSEMBLY_IDENTITY_REF=System.Drawing,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DRAWING_ASSEMBLY_IDENTITY_DEF=System.Drawing,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DRAWING_ASSEMBLY_IDENTITY_FRIEND_REF=System.Drawing,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DRAWING_ASSEMBLY_IDENTITY_EXACT_REF=System.Drawing,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DRAWING_ASSEMBLY_NAME=System.Drawing
SYSTEM_DRAWING_ASSEMBLY_VERSION=1.0.5000.0
SYSTEM_DRAWING_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_DRAWING_ASSEMBLY_CULTURE=neutral
SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_REF=System.EnterpriseServices,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_DEF=System.EnterpriseServices,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_FRIEND_REF=System.EnterpriseServices,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_EXACT_REF=System.EnterpriseServices,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_ENTERPRISESERVICES_ASSEMBLY_NAME=System.EnterpriseServices
SYSTEM_ENTERPRISESERVICES_ASSEMBLY_VERSION=1.0.5000.0
SYSTEM_ENTERPRISESERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_ENTERPRISESERVICES_ASSEMBLY_CULTURE=neutral
SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_REF=System.Management,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_DEF=System.Management,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_FRIEND_REF=System.Management,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_EXACT_REF=System.Management,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_MANAGEMENT_ASSEMBLY_NAME=System.Management
SYSTEM_MANAGEMENT_ASSEMBLY_VERSION=1.0.5000.0
SYSTEM_MANAGEMENT_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_MANAGEMENT_ASSEMBLY_CULTURE=neutral
SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_REF=System.Messaging,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_DEF=System.Messaging,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_FRIEND_REF=System.Messaging,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_EXACT_REF=System.Messaging,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_MESSAGING_ASSEMBLY_NAME=System.Messaging
SYSTEM_MESSAGING_ASSEMBLY_VERSION=1.0.5000.0
SYSTEM_MESSAGING_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_MESSAGING_ASSEMBLY_CULTURE=neutral
SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_REF=System.Runtime.Remoting,version=1.0.5000.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_DEF=System.Runtime.Remoting,version=1.0.5000.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_FRIEND_REF=System.Runtime.Remoting,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_EXACT_REF=System.Runtime.Remoting,version=1.0.5000.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_RUNTIME_REMOTING_ASSEMBLY_NAME=System.Runtime.Remoting
SYSTEM_RUNTIME_REMOTING_ASSEMBLY_VERSION=1.0.5000.0
SYSTEM_RUNTIME_REMOTING_ASSEMBLY_PUBLIC_KEY_TOKEN=b77a5c561934e089
SYSTEM_RUNTIME_REMOTING_ASSEMBLY_CULTURE=neutral
SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_REF=System.Runtime.Serialization.Formatters.Soap,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_DEF=System.Runtime.Serialization.Formatters.Soap,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_FRIEND_REF=System.Runtime.Serialization.Formatters.Soap,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_EXACT_REF=System.Runtime.Serialization.Formatters.Soap,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_NAME=System.Runtime.Serialization.Formatters.Soap
SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_VERSION=1.0.5000.0
SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_CULTURE=neutral
SYSTEM_SECURITY_ASSEMBLY_IDENTITY_REF=System.Security,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_SECURITY_ASSEMBLY_IDENTITY_DEF=System.Security,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_SECURITY_ASSEMBLY_IDENTITY_FRIEND_REF=System.Security,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_SECURITY_ASSEMBLY_IDENTITY_EXACT_REF=System.Security,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_SECURITY_ASSEMBLY_NAME=System.Security
SYSTEM_SECURITY_ASSEMBLY_VERSION=1.0.5000.0
SYSTEM_SECURITY_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_SECURITY_ASSEMBLY_CULTURE=neutral
SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_REF=System.ServiceProcess,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_DEF=System.ServiceProcess,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_FRIEND_REF=System.ServiceProcess,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_EXACT_REF=System.ServiceProcess,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_SERVICEPROCESS_ASSEMBLY_NAME=System.ServiceProcess
SYSTEM_SERVICEPROCESS_ASSEMBLY_VERSION=1.0.5000.0
SYSTEM_SERVICEPROCESS_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_SERVICEPROCESS_ASSEMBLY_CULTURE=neutral
SYSTEM_WEB_ASSEMBLY_IDENTITY_REF=System.Web,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_ASSEMBLY_IDENTITY_DEF=System.Web,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_ASSEMBLY_IDENTITY_FRIEND_REF=System.Web,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_ASSEMBLY_IDENTITY_EXACT_REF=System.Web,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_ASSEMBLY_NAME=System.Web
SYSTEM_WEB_ASSEMBLY_VERSION=1.0.5000.0
SYSTEM_WEB_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_WEB_ASSEMBLY_CULTURE=neutral
SYSTEM_WEB_MOBILE_ASSEMBLY_IDENTITY_REF=System.Web.Mobile,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_MOBILE_ASSEMBLY_IDENTITY_DEF=System.Web.Mobile,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_MOBILE_ASSEMBLY_IDENTITY_FRIEND_REF=System.Web.Mobile,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_MOBILE_ASSEMBLY_IDENTITY_EXACT_REF=System.Web.Mobile,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_MOBILE_ASSEMBLY_NAME=System.Web.Mobile
SYSTEM_WEB_MOBILE_ASSEMBLY_VERSION=1.0.5000.0
SYSTEM_WEB_MOBILE_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_WEB_MOBILE_ASSEMBLY_CULTURE=neutral
SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_REF=System.Web.RegularExpressions,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_DEF=System.Web.RegularExpressions,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_FRIEND_REF=System.Web.RegularExpressions,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_EXACT_REF=System.Web.RegularExpressions,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_NAME=System.Web.RegularExpressions
SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_VERSION=1.0.5000.0
SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_CULTURE=neutral
SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_REF=System.Web.Services,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_DEF=System.Web.Services,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_FRIEND_REF=System.Web.Services,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_EXACT_REF=System.Web.Services,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_SERVICES_ASSEMBLY_NAME=System.Web.Services
SYSTEM_WEB_SERVICES_ASSEMBLY_VERSION=1.0.5000.0
SYSTEM_WEB_SERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_WEB_SERVICES_ASSEMBLY_CULTURE=neutral
SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_REF=System.Windows.Forms,version=1.0.5000.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_DEF=System.Windows.Forms,version=1.0.5000.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_FRIEND_REF=System.Windows.Forms,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_EXACT_REF=System.Windows.Forms,version=1.0.5000.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_WINDOWS_FORMS_ASSEMBLY_NAME=System.Windows.Forms
SYSTEM_WINDOWS_FORMS_ASSEMBLY_VERSION=1.0.5000.0
SYSTEM_WINDOWS_FORMS_ASSEMBLY_PUBLIC_KEY_TOKEN=b77a5c561934e089
SYSTEM_WINDOWS_FORMS_ASSEMBLY_CULTURE=neutral
SYSTEM_XML_ASSEMBLY_IDENTITY_REF=System.Xml,version=1.0.5000.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_XML_ASSEMBLY_IDENTITY_DEF=System.Xml,version=1.0.5000.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_XML_ASSEMBLY_IDENTITY_FRIEND_REF=System.Xml,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_XML_ASSEMBLY_IDENTITY_EXACT_REF=System.Xml,version=1.0.5000.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_XML_ASSEMBLY_NAME=System.Xml
SYSTEM_XML_ASSEMBLY_VERSION=1.0.5000.0
SYSTEM_XML_ASSEMBLY_PUBLIC_KEY_TOKEN=b77a5c561934e089
SYSTEM_XML_ASSEMBLY_CULTURE=neutral
VJSCOR_ASSEMBLY_IDENTITY_REF=vjscor,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSCOR_ASSEMBLY_IDENTITY_DEF=vjscor,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSCOR_ASSEMBLY_IDENTITY_FRIEND_REF=vjscor,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSCOR_ASSEMBLY_IDENTITY_EXACT_REF=vjscor,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSCOR_ASSEMBLY_NAME=vjscor
VJSCOR_ASSEMBLY_VERSION=1.0.5000.0
VJSCOR_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
VJSCOR_ASSEMBLY_CULTURE=neutral
VJSLIB_ASSEMBLY_IDENTITY_REF=vjslib,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSLIB_ASSEMBLY_IDENTITY_DEF=vjslib,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSLIB_ASSEMBLY_IDENTITY_FRIEND_REF=vjslib,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSLIB_ASSEMBLY_IDENTITY_EXACT_REF=vjslib,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSLIB_ASSEMBLY_NAME=vjslib
VJSLIB_ASSEMBLY_VERSION=1.0.5000.0
VJSLIB_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
VJSLIB_ASSEMBLY_CULTURE=neutral
VJSLIBCW_ASSEMBLY_IDENTITY_REF=vjslibcw,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSLIBCW_ASSEMBLY_IDENTITY_DEF=vjslibcw,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSLIBCW_ASSEMBLY_IDENTITY_FRIEND_REF=vjslibcw,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSLIBCW_ASSEMBLY_IDENTITY_EXACT_REF=vjslibcw,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSLIBCW_ASSEMBLY_NAME=vjslibcw
VJSLIBCW_ASSEMBLY_VERSION=1.0.5000.0
VJSLIBCW_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
VJSLIBCW_ASSEMBLY_CULTURE=neutral
VJSWFC_ASSEMBLY_IDENTITY_REF=vjswfc,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSWFC_ASSEMBLY_IDENTITY_DEF=vjswfc,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSWFC_ASSEMBLY_IDENTITY_FRIEND_REF=vjswfc,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSWFC_ASSEMBLY_IDENTITY_EXACT_REF=vjswfc,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSWFC_ASSEMBLY_NAME=vjswfc
VJSWFC_ASSEMBLY_VERSION=1.0.5000.0
VJSWFC_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
VJSWFC_ASSEMBLY_CULTURE=neutral
VJSWFCBROWSERSTUBLIB_ASSEMBLY_IDENTITY_REF=VJSWfcBrowserStubLib,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSWFCBROWSERSTUBLIB_ASSEMBLY_IDENTITY_DEF=VJSWfcBrowserStubLib,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSWFCBROWSERSTUBLIB_ASSEMBLY_IDENTITY_FRIEND_REF=VJSWfcBrowserStubLib,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSWFCBROWSERSTUBLIB_ASSEMBLY_IDENTITY_EXACT_REF=VJSWfcBrowserStubLib,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSWFCBROWSERSTUBLIB_ASSEMBLY_NAME=VJSWfcBrowserStubLib
VJSWFCBROWSERSTUBLIB_ASSEMBLY_VERSION=1.0.5000.0
VJSWFCBROWSERSTUBLIB_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
VJSWFCBROWSERSTUBLIB_ASSEMBLY_CULTURE=neutral
VJSWFCCW_ASSEMBLY_IDENTITY_REF=vjswfccw,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSWFCCW_ASSEMBLY_IDENTITY_DEF=vjswfccw,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSWFCCW_ASSEMBLY_IDENTITY_FRIEND_REF=vjswfccw,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSWFCCW_ASSEMBLY_IDENTITY_EXACT_REF=vjswfccw,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSWFCCW_ASSEMBLY_NAME=vjswfccw
VJSWFCCW_ASSEMBLY_VERSION=1.0.5000.0
VJSWFCCW_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
VJSWFCCW_ASSEMBLY_CULTURE=neutral
VJSWFCHTML_ASSEMBLY_IDENTITY_REF=vjswfchtml,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSWFCHTML_ASSEMBLY_IDENTITY_DEF=vjswfchtml,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSWFCHTML_ASSEMBLY_IDENTITY_FRIEND_REF=vjswfchtml,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSWFCHTML_ASSEMBLY_IDENTITY_EXACT_REF=vjswfchtml,version=1.0.5000.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
VJSWFCHTML_ASSEMBLY_NAME=vjswfchtml
VJSWFCHTML_ASSEMBLY_VERSION=1.0.5000.0
VJSWFCHTML_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
VJSWFCHTML_ASSEMBLY_CULTURE=neutral
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\internal\Base\lib\i386\versions.h ===
/*
 * Copyright (c) Microsoft Corporation
 */

/* This file was generated by genid.bat. */

#define WINDOWS_ASSEMBLY_VERSION_A       "5.2.3668.0"
#define WINDOWS_ASSEMBLY_VERSION_W      L"5.2.3668.0"
#define WINDOWS_ASSEMBLY_VERSION_T  TEXT("5.2.3668.0")
#define WINDOWS_ASSEMBLY_VERSION_S      S"5.2.3668.0"
#define CLR10_VERSION_A       "1.0.3300.0"
#define CLR10_VERSION_W      L"1.0.3300.0"
#define CLR10_VERSION_T  TEXT("1.0.3300.0")
#define CLR10_VERSION_S      S"1.0.3300.0"
#define CLR11_VERSION_A       "1.0.5000.0"
#define CLR11_VERSION_W      L"1.0.5000.0"
#define CLR11_VERSION_T  TEXT("1.0.5000.0")
#define CLR11_VERSION_S      S"1.0.5000.0"
#define CLR12_VERSION_A       "2.0.3600.0"
#define CLR12_VERSION_W      L"2.0.3600.0"
#define CLR12_VERSION_T  TEXT("2.0.3600.0")
#define CLR12_VERSION_S      S"2.0.3600.0"
#define CLR_VERSION_A       "2.0.3600.0"
#define CLR_VERSION_W      L"2.0.3600.0"
#define CLR_VERSION_T  TEXT("2.0.3600.0")
#define CLR_VERSION_S      S"2.0.3600.0"
#define VS_VERSION_A       "8.0.1200.0"
#define VS_VERSION_W      L"8.0.1200.0"
#define VS_VERSION_T  TEXT("8.0.1200.0")
#define VS_VERSION_S      S"8.0.1200.0"
#define COREXT_VERSION_A       "1.0.1017.1"
#define COREXT_VERSION_W      L"1.0.1017.1"
#define COREXT_VERSION_T  TEXT("1.0.1017.1")
#define COREXT_VERSION_S      S"1.0.1017.1"
#define CLR_PUBLIC_KEY_TOKEN_A       "b77a5c561934e089"
#define CLR_PUBLIC_KEY_TOKEN_W      L"b77a5c561934e089"
#define CLR_PUBLIC_KEY_TOKEN_T  TEXT("b77a5c561934e089")
#define CLR_PUBLIC_KEY_TOKEN_S      S"b77a5c561934e089"
#define CLR_PUBLIC_KEY_STRING_A       "00000000000000000400000000000000"
#define CLR_PUBLIC_KEY_STRING_W      L"00000000000000000400000000000000"
#define CLR_PUBLIC_KEY_STRING_T  TEXT("00000000000000000400000000000000")
#define CLR_PUBLIC_KEY_STRING_S      S"00000000000000000400000000000000"
#define CLR_KEY_FILE_A       "%SDXROOT%\\public\\internal\\strongnamekeys\\fake\\MyKeyFile.snk"
#define CLR_KEY_FILE_W      L"%SDXROOT%\\public\\internal\\strongnamekeys\\fake\\MyKeyFile.snk"
#define CLR_KEY_FILE_T  TEXT("%SDXROOT%\\public\\internal\\strongnamekeys\\fake\\MyKeyFile.snk")
#define CLR_KEY_FILE_S      S"%SDXROOT%\\public\\internal\\strongnamekeys\\fake\\MyKeyFile.snk"
#define CLR2_PUBLIC_KEY_TOKEN_A       "b03f5f7f11d50a3a"
#define CLR2_PUBLIC_KEY_TOKEN_W      L"b03f5f7f11d50a3a"
#define CLR2_PUBLIC_KEY_TOKEN_T  TEXT("b03f5f7f11d50a3a")
#define CLR2_PUBLIC_KEY_TOKEN_S      S"b03f5f7f11d50a3a"
#define CLR2_PUBLIC_KEY_STRING_A       "2411111111111111111111111111111111111112"
#define CLR2_PUBLIC_KEY_STRING_W      L"2411111111111111111111111111111111111112"
#define CLR2_PUBLIC_KEY_STRING_T  TEXT("2411111111111111111111111111111111111112")
#define CLR2_PUBLIC_KEY_STRING_S      S"2411111111111111111111111111111111111112"
#define CLR2_KEY_FILE_A       "%SDXROOT%\\public\\internal\\strongnamekeys\\fake\\MyKeyFile.snk"
#define CLR2_KEY_FILE_W      L"%SDXROOT%\\public\\internal\\strongnamekeys\\fake\\MyKeyFile.snk"
#define CLR2_KEY_FILE_T  TEXT("%SDXROOT%\\public\\internal\\strongnamekeys\\fake\\MyKeyFile.snk")
#define CLR2_KEY_FILE_S      S"%SDXROOT%\\public\\internal\\strongnamekeys\\fake\\MyKeyFile.snk"
#define COREXT_PUBLIC_KEY_TOKEN_A       "1a5b963c6f0fbeab"
#define COREXT_PUBLIC_KEY_TOKEN_W      L"1a5b963c6f0fbeab"
#define COREXT_PUBLIC_KEY_TOKEN_T  TEXT("1a5b963c6f0fbeab")
#define COREXT_PUBLIC_KEY_TOKEN_S      S"1a5b963c6f0fbeab"
#define COREXT_PUBLIC_KEY_STRING_A       "002400000480000094000000060200000024000052534131000400000100010027a5d41f8f8fa9a5a20c0233929672c5e66e7f1a1d83ac6e63ae017b7a3df14a5dfe9630da0b45f95aca9aff0aee36a18f3fda3552bdfb5285094083b1f7ce394e933e0713116fedad3120f4e8e6ba9bfecdc75953eef205448d91bf46c72cec6e013921ecf57a729045d95822a6c331d31899374cb27172109bdc920d9814c0"
#define COREXT_PUBLIC_KEY_STRING_W      L"002400000480000094000000060200000024000052534131000400000100010027a5d41f8f8fa9a5a20c0233929672c5e66e7f1a1d83ac6e63ae017b7a3df14a5dfe9630da0b45f95aca9aff0aee36a18f3fda3552bdfb5285094083b1f7ce394e933e0713116fedad3120f4e8e6ba9bfecdc75953eef205448d91bf46c72cec6e013921ecf57a729045d95822a6c331d31899374cb27172109bdc920d9814c0"
#define COREXT_PUBLIC_KEY_STRING_T  TEXT("002400000480000094000000060200000024000052534131000400000100010027a5d41f8f8fa9a5a20c0233929672c5e66e7f1a1d83ac6e63ae017b7a3df14a5dfe9630da0b45f95aca9aff0aee36a18f3fda3552bdfb5285094083b1f7ce394e933e0713116fedad3120f4e8e6ba9bfecdc75953eef205448d91bf46c72cec6e013921ecf57a729045d95822a6c331d31899374cb27172109bdc920d9814c0")
#define COREXT_PUBLIC_KEY_STRING_S      S"002400000480000094000000060200000024000052534131000400000100010027a5d41f8f8fa9a5a20c0233929672c5e66e7f1a1d83ac6e63ae017b7a3df14a5dfe9630da0b45f95aca9aff0aee36a18f3fda3552bdfb5285094083b1f7ce394e933e0713116fedad3120f4e8e6ba9bfecdc75953eef205448d91bf46c72cec6e013921ecf57a729045d95822a6c331d31899374cb27172109bdc920d9814c0"
#define COREXT_KEY_FILE_A       "%SDXROOT%\\public\\internal\\strongnamekeys\\fake\\CoreXTTestKey.snk"
#define COREXT_KEY_FILE_W      L"%SDXROOT%\\public\\internal\\strongnamekeys\\fake\\CoreXTTestKey.snk"
#define COREXT_KEY_FILE_T  TEXT("%SDXROOT%\\public\\internal\\strongnamekeys\\fake\\CoreXTTestKey.snk")
#define COREXT_KEY_FILE_S      S"%SDXROOT%\\public\\internal\\strongnamekeys\\fake\\CoreXTTestKey.snk"
#define SYSTEM_ASSEMBLY_IDENTITY_DEF                                             System,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
#define SYSTEM_ASSEMBLY_IDENTITY_DEF_A                                          "System,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_ASSEMBLY_IDENTITY_DEF_W                                         L"System,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_ASSEMBLY_IDENTITY_DEF_S                                         S"System,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_ASSEMBLY_IDENTITY_DEF_T                                     TEXT("System,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil")
#define SYSTEM_ASSEMBLY_IDENTITY_REF                                             System,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_ASSEMBLY_IDENTITY_REF_A                                          "System,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_ASSEMBLY_IDENTITY_REF_W                                         L"System,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_ASSEMBLY_IDENTITY_REF_S                                         S"System,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_ASSEMBLY_IDENTITY_REF_T                                     TEXT("System,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_ASSEMBLY_IDENTITY_FRIEND_REF                                      System,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_ASSEMBLY_IDENTITY_FRIEND_REF_A                                   "System,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_ASSEMBLY_IDENTITY_FRIEND_REF_W                                  L"System,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_ASSEMBLY_IDENTITY_FRIEND_REF_S                                  S"System,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_ASSEMBLY_IDENTITY_FRIEND_REF_T                              TEXT("System,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_ASSEMBLY_IDENTITY_EXACT_REF                                       System,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
#define SYSTEM_ASSEMBLY_IDENTITY_EXACT_REF_A                                    "System,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_ASSEMBLY_IDENTITY_EXACT_REF_W                                   L"System,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_ASSEMBLY_IDENTITY_EXACT_REF_S                                   S"System,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_ASSEMBLY_IDENTITY_EXACT_REF_T                               TEXT("System,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil")
#define SYSTEM_ASSEMBLY_NAME                                                     System
#define SYSTEM_ASSEMBLY_NAME_A                                                  "System"
#define SYSTEM_ASSEMBLY_NAME_W                                                 L"System"
#define SYSTEM_ASSEMBLY_NAME_S                                                 S"System"
#define SYSTEM_ASSEMBLY_NAME_T                                             TEXT("System")
#define SYSTEM_ASSEMBLY_VERSION                                                  2.0.3600.0
#define SYSTEM_ASSEMBLY_VERSION_A                                               "2.0.3600.0"
#define SYSTEM_ASSEMBLY_VERSION_W                                              L"2.0.3600.0"
#define SYSTEM_ASSEMBLY_VERSION_S                                              S"2.0.3600.0"
#define SYSTEM_ASSEMBLY_VERSION_T                                          TEXT("2.0.3600.0")
#define SYSTEM_ASSEMBLY_VERSION_IL                                                2:0:3600:0
#define SYSTEM_ASSEMBLY_PUBLIC_KEY                                               00000000000000000400000000000000
#define SYSTEM_ASSEMBLY_PUBLIC_KEY_A                                            "00000000000000000400000000000000"
#define SYSTEM_ASSEMBLY_PUBLIC_KEY_W                                           L"00000000000000000400000000000000"
#define SYSTEM_ASSEMBLY_PUBLIC_KEY_S                                           S"00000000000000000400000000000000"
#define SYSTEM_ASSEMBLY_PUBLIC_KEY_T                                       TEXT("00000000000000000400000000000000")
#define SYSTEM_ASSEMBLY_PUBLIC_KEY_IL                                            (00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00 )
#define SYSTEM_ASSEMBLY_PUBLIC_KEY_TOKEN                                         b77a5c561934e089
#define SYSTEM_ASSEMBLY_PUBLIC_KEY_TOKEN_A                                      "b77a5c561934e089"
#define SYSTEM_ASSEMBLY_PUBLIC_KEY_TOKEN_W                                     L"b77a5c561934e089"
#define SYSTEM_ASSEMBLY_PUBLIC_KEY_TOKEN_S                                     S"b77a5c561934e089"
#define SYSTEM_ASSEMBLY_PUBLIC_KEY_TOKEN_T                                 TEXT("b77a5c561934e089")
#define SYSTEM_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                                      (b7 7a 5c 56 19 34 e0 89 )
#define SYSTEM_ASSEMBLY_CULTURE                                                  neutral
#define SYSTEM_ASSEMBLY_CULTURE_A                                               "neutral"
#define SYSTEM_ASSEMBLY_CULTURE_W                                              L"neutral"
#define SYSTEM_ASSEMBLY_CULTURE_S                                              S"neutral"
#define SYSTEM_ASSEMBLY_CULTURE_T                                          TEXT("neutral")
#define SYSTEM_ASSEMBLY_PROCESSOR_ARCHITECTURE                                   msil
#define SYSTEM_ASSEMBLY_PROCESSOR_ARCHITECTURE_A                                "msil"
#define SYSTEM_ASSEMBLY_PROCESSOR_ARCHITECTURE_W                               L"msil"
#define SYSTEM_ASSEMBLY_PROCESSOR_ARCHITECTURE_S                               S"msil"
#define SYSTEM_ASSEMBLY_PROCESSOR_ARCHITECTURE_T                           TEXT("msil")
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_DEF                                     System.Drawing,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_DEF_A                                  "System.Drawing,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_DEF_W                                 L"System.Drawing,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_DEF_S                                 S"System.Drawing,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_DEF_T                             TEXT("System.Drawing,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil")
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_REF                                     System.Drawing,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_REF_A                                  "System.Drawing,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_REF_W                                 L"System.Drawing,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_REF_S                                 S"System.Drawing,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_REF_T                             TEXT("System.Drawing,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_FRIEND_REF                              System.Drawing,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_FRIEND_REF_A                           "System.Drawing,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_FRIEND_REF_W                          L"System.Drawing,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_FRIEND_REF_S                          S"System.Drawing,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_FRIEND_REF_T                      TEXT("System.Drawing,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_EXACT_REF                               System.Drawing,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_EXACT_REF_A                            "System.Drawing,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_EXACT_REF_W                           L"System.Drawing,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_EXACT_REF_S                           S"System.Drawing,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_EXACT_REF_T                       TEXT("System.Drawing,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil")
#define SYSTEM_DRAWING_ASSEMBLY_NAME                                             System.Drawing
#define SYSTEM_DRAWING_ASSEMBLY_NAME_A                                          "System.Drawing"
#define SYSTEM_DRAWING_ASSEMBLY_NAME_W                                         L"System.Drawing"
#define SYSTEM_DRAWING_ASSEMBLY_NAME_S                                         S"System.Drawing"
#define SYSTEM_DRAWING_ASSEMBLY_NAME_T                                     TEXT("System.Drawing")
#define SYSTEM_DRAWING_ASSEMBLY_VERSION                                          2.0.3600.0
#define SYSTEM_DRAWING_ASSEMBLY_VERSION_A                                       "2.0.3600.0"
#define SYSTEM_DRAWING_ASSEMBLY_VERSION_W                                      L"2.0.3600.0"
#define SYSTEM_DRAWING_ASSEMBLY_VERSION_S                                      S"2.0.3600.0"
#define SYSTEM_DRAWING_ASSEMBLY_VERSION_T                                  TEXT("2.0.3600.0")
#define SYSTEM_DRAWING_ASSEMBLY_VERSION_IL                                        2:0:3600:0
#define SYSTEM_DRAWING_ASSEMBLY_PUBLIC_KEY                                       2411111111111111111111111111111111111112
#define SYSTEM_DRAWING_ASSEMBLY_PUBLIC_KEY_A                                    "2411111111111111111111111111111111111112"
#define SYSTEM_DRAWING_ASSEMBLY_PUBLIC_KEY_W                                   L"2411111111111111111111111111111111111112"
#define SYSTEM_DRAWING_ASSEMBLY_PUBLIC_KEY_S                                   S"2411111111111111111111111111111111111112"
#define SYSTEM_DRAWING_ASSEMBLY_PUBLIC_KEY_T                               TEXT("2411111111111111111111111111111111111112")
#define SYSTEM_DRAWING_ASSEMBLY_PUBLIC_KEY_IL                                    (24 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 12 )
#define SYSTEM_DRAWING_ASSEMBLY_PUBLIC_KEY_TOKEN                                 b03f5f7f11d50a3a
#define SYSTEM_DRAWING_ASSEMBLY_PUBLIC_KEY_TOKEN_A                              "b03f5f7f11d50a3a"
#define SYSTEM_DRAWING_ASSEMBLY_PUBLIC_KEY_TOKEN_W                             L"b03f5f7f11d50a3a"
#define SYSTEM_DRAWING_ASSEMBLY_PUBLIC_KEY_TOKEN_S                             S"b03f5f7f11d50a3a"
#define SYSTEM_DRAWING_ASSEMBLY_PUBLIC_KEY_TOKEN_T                         TEXT("b03f5f7f11d50a3a")
#define SYSTEM_DRAWING_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                              (b0 3f 5f 7f 11 d5 0a 3a )
#define SYSTEM_DRAWING_ASSEMBLY_CULTURE                                          neutral
#define SYSTEM_DRAWING_ASSEMBLY_CULTURE_A                                       "neutral"
#define SYSTEM_DRAWING_ASSEMBLY_CULTURE_W                                      L"neutral"
#define SYSTEM_DRAWING_ASSEMBLY_CULTURE_S                                      S"neutral"
#define SYSTEM_DRAWING_ASSEMBLY_CULTURE_T                                  TEXT("neutral")
#define SYSTEM_DRAWING_ASSEMBLY_PROCESSOR_ARCHITECTURE                           msil
#define SYSTEM_DRAWING_ASSEMBLY_PROCESSOR_ARCHITECTURE_A                        "msil"
#define SYSTEM_DRAWING_ASSEMBLY_PROCESSOR_ARCHITECTURE_W                       L"msil"
#define SYSTEM_DRAWING_ASSEMBLY_PROCESSOR_ARCHITECTURE_S                       S"msil"
#define SYSTEM_DRAWING_ASSEMBLY_PROCESSOR_ARCHITECTURE_T                   TEXT("msil")
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_DEF                                        System.Data,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_DEF_A                                     "System.Data,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_DEF_W                                    L"System.Data,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_DEF_S                                    S"System.Data,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_DEF_T                                TEXT("System.Data,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil")
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_REF                                        System.Data,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_REF_A                                     "System.Data,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_REF_W                                    L"System.Data,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_REF_S                                    S"System.Data,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_REF_T                                TEXT("System.Data,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_FRIEND_REF                                 System.Data,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_FRIEND_REF_A                              "System.Data,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_FRIEND_REF_W                             L"System.Data,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_FRIEND_REF_S                             S"System.Data,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_FRIEND_REF_T                         TEXT("System.Data,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_EXACT_REF                                  System.Data,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_EXACT_REF_A                               "System.Data,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_EXACT_REF_W                              L"System.Data,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_EXACT_REF_S                              S"System.Data,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_EXACT_REF_T                          TEXT("System.Data,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil")
#define SYSTEM_DATA_ASSEMBLY_NAME                                                System.Data
#define SYSTEM_DATA_ASSEMBLY_NAME_A                                             "System.Data"
#define SYSTEM_DATA_ASSEMBLY_NAME_W                                            L"System.Data"
#define SYSTEM_DATA_ASSEMBLY_NAME_S                                            S"System.Data"
#define SYSTEM_DATA_ASSEMBLY_NAME_T                                        TEXT("System.Data")
#define SYSTEM_DATA_ASSEMBLY_VERSION                                             2.0.3600.0
#define SYSTEM_DATA_ASSEMBLY_VERSION_A                                          "2.0.3600.0"
#define SYSTEM_DATA_ASSEMBLY_VERSION_W                                         L"2.0.3600.0"
#define SYSTEM_DATA_ASSEMBLY_VERSION_S                                         S"2.0.3600.0"
#define SYSTEM_DATA_ASSEMBLY_VERSION_T                                     TEXT("2.0.3600.0")
#define SYSTEM_DATA_ASSEMBLY_VERSION_IL                                           2:0:3600:0
#define SYSTEM_DATA_ASSEMBLY_PUBLIC_KEY                                          00000000000000000400000000000000
#define SYSTEM_DATA_ASSEMBLY_PUBLIC_KEY_A                                       "00000000000000000400000000000000"
#define SYSTEM_DATA_ASSEMBLY_PUBLIC_KEY_W                                      L"00000000000000000400000000000000"
#define SYSTEM_DATA_ASSEMBLY_PUBLIC_KEY_S                                      S"00000000000000000400000000000000"
#define SYSTEM_DATA_ASSEMBLY_PUBLIC_KEY_T                                  TEXT("00000000000000000400000000000000")
#define SYSTEM_DATA_ASSEMBLY_PUBLIC_KEY_IL                                       (00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00 )
#define SYSTEM_DATA_ASSEMBLY_PUBLIC_KEY_TOKEN                                    b77a5c561934e089
#define SYSTEM_DATA_ASSEMBLY_PUBLIC_KEY_TOKEN_A                                 "b77a5c561934e089"
#define SYSTEM_DATA_ASSEMBLY_PUBLIC_KEY_TOKEN_W                                L"b77a5c561934e089"
#define SYSTEM_DATA_ASSEMBLY_PUBLIC_KEY_TOKEN_S                                S"b77a5c561934e089"
#define SYSTEM_DATA_ASSEMBLY_PUBLIC_KEY_TOKEN_T                            TEXT("b77a5c561934e089")
#define SYSTEM_DATA_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                                 (b7 7a 5c 56 19 34 e0 89 )
#define SYSTEM_DATA_ASSEMBLY_CULTURE                                             neutral
#define SYSTEM_DATA_ASSEMBLY_CULTURE_A                                          "neutral"
#define SYSTEM_DATA_ASSEMBLY_CULTURE_W                                         L"neutral"
#define SYSTEM_DATA_ASSEMBLY_CULTURE_S                                         S"neutral"
#define SYSTEM_DATA_ASSEMBLY_CULTURE_T                                     TEXT("neutral")
#define SYSTEM_DATA_ASSEMBLY_PROCESSOR_ARCHITECTURE                              msil
#define SYSTEM_DATA_ASSEMBLY_PROCESSOR_ARCHITECTURE_A                           "msil"
#define SYSTEM_DATA_ASSEMBLY_PROCESSOR_ARCHITECTURE_W                          L"msil"
#define SYSTEM_DATA_ASSEMBLY_PROCESSOR_ARCHITECTURE_S                          S"msil"
#define SYSTEM_DATA_ASSEMBLY_PROCESSOR_ARCHITECTURE_T                      TEXT("msil")
#define SYSTEM_WEB_ASSEMBLY_IDENTITY_DEF                                         System.Web,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
#define SYSTEM_WEB_ASSEMBLY_IDENTITY_DEF_A                                      "System.Web,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_WEB_ASSEMBLY_IDENTITY_DEF_W                                     L"System.Web,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_WEB_ASSEMBLY_IDENTITY_DEF_S                                     S"System.Web,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_WEB_ASSEMBLY_IDENTITY_DEF_T                                 TEXT("System.Web,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil")
#define SYSTEM_WEB_ASSEMBLY_IDENTITY_REF                                         System.Web,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_WEB_ASSEMBLY_IDENTITY_REF_A                                      "System.Web,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_ASSEMBLY_IDENTITY_REF_W                                     L"System.Web,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_ASSEMBLY_IDENTITY_REF_S                                     S"System.Web,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_ASSEMBLY_IDENTITY_REF_T                                 TEXT("System.Web,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_WEB_ASSEMBLY_IDENTITY_FRIEND_REF                                  System.Web,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_WEB_ASSEMBLY_IDENTITY_FRIEND_REF_A                               "System.Web,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_ASSEMBLY_IDENTITY_FRIEND_REF_W                              L"System.Web,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_ASSEMBLY_IDENTITY_FRIEND_REF_S                              S"System.Web,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_ASSEMBLY_IDENTITY_FRIEND_REF_T                          TEXT("System.Web,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_WEB_ASSEMBLY_IDENTITY_EXACT_REF                                   System.Web,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
#define SYSTEM_WEB_ASSEMBLY_IDENTITY_EXACT_REF_A                                "System.Web,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_WEB_ASSEMBLY_IDENTITY_EXACT_REF_W                               L"System.Web,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_WEB_ASSEMBLY_IDENTITY_EXACT_REF_S                               S"System.Web,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_WEB_ASSEMBLY_IDENTITY_EXACT_REF_T                           TEXT("System.Web,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil")
#define SYSTEM_WEB_ASSEMBLY_NAME                                                 System.Web
#define SYSTEM_WEB_ASSEMBLY_NAME_A                                              "System.Web"
#define SYSTEM_WEB_ASSEMBLY_NAME_W                                             L"System.Web"
#define SYSTEM_WEB_ASSEMBLY_NAME_S                                             S"System.Web"
#define SYSTEM_WEB_ASSEMBLY_NAME_T                                         TEXT("System.Web")
#define SYSTEM_WEB_ASSEMBLY_VERSION                                              2.0.3600.0
#define SYSTEM_WEB_ASSEMBLY_VERSION_A                                           "2.0.3600.0"
#define SYSTEM_WEB_ASSEMBLY_VERSION_W                                          L"2.0.3600.0"
#define SYSTEM_WEB_ASSEMBLY_VERSION_S                                          S"2.0.3600.0"
#define SYSTEM_WEB_ASSEMBLY_VERSION_T                                      TEXT("2.0.3600.0")
#define SYSTEM_WEB_ASSEMBLY_VERSION_IL                                            2:0:3600:0
#define SYSTEM_WEB_ASSEMBLY_PUBLIC_KEY                                           2411111111111111111111111111111111111112
#define SYSTEM_WEB_ASSEMBLY_PUBLIC_KEY_A                                        "2411111111111111111111111111111111111112"
#define SYSTEM_WEB_ASSEMBLY_PUBLIC_KEY_W                                       L"2411111111111111111111111111111111111112"
#define SYSTEM_WEB_ASSEMBLY_PUBLIC_KEY_S                                       S"2411111111111111111111111111111111111112"
#define SYSTEM_WEB_ASSEMBLY_PUBLIC_KEY_T                                   TEXT("2411111111111111111111111111111111111112")
#define SYSTEM_WEB_ASSEMBLY_PUBLIC_KEY_IL                                        (24 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 12 )
#define SYSTEM_WEB_ASSEMBLY_PUBLIC_KEY_TOKEN                                     b03f5f7f11d50a3a
#define SYSTEM_WEB_ASSEMBLY_PUBLIC_KEY_TOKEN_A                                  "b03f5f7f11d50a3a"
#define SYSTEM_WEB_ASSEMBLY_PUBLIC_KEY_TOKEN_W                                 L"b03f5f7f11d50a3a"
#define SYSTEM_WEB_ASSEMBLY_PUBLIC_KEY_TOKEN_S                                 S"b03f5f7f11d50a3a"
#define SYSTEM_WEB_ASSEMBLY_PUBLIC_KEY_TOKEN_T                             TEXT("b03f5f7f11d50a3a")
#define SYSTEM_WEB_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                                  (b0 3f 5f 7f 11 d5 0a 3a )
#define SYSTEM_WEB_ASSEMBLY_CULTURE                                              neutral
#define SYSTEM_WEB_ASSEMBLY_CULTURE_A                                           "neutral"
#define SYSTEM_WEB_ASSEMBLY_CULTURE_W                                          L"neutral"
#define SYSTEM_WEB_ASSEMBLY_CULTURE_S                                          S"neutral"
#define SYSTEM_WEB_ASSEMBLY_CULTURE_T                                      TEXT("neutral")
#define SYSTEM_WEB_ASSEMBLY_PROCESSOR_ARCHITECTURE                               msil
#define SYSTEM_WEB_ASSEMBLY_PROCESSOR_ARCHITECTURE_A                            "msil"
#define SYSTEM_WEB_ASSEMBLY_PROCESSOR_ARCHITECTURE_W                           L"msil"
#define SYSTEM_WEB_ASSEMBLY_PROCESSOR_ARCHITECTURE_S                           S"msil"
#define SYSTEM_WEB_ASSEMBLY_PROCESSOR_ARCHITECTURE_T                       TEXT("msil")
#define SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_DEF                                System.Web.Services,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
#define SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_DEF_A                             "System.Web.Services,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_DEF_W                            L"System.Web.Services,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_DEF_S                            S"System.Web.Services,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_DEF_T                        TEXT("System.Web.Services,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil")
#define SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_REF                                System.Web.Services,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_REF_A                             "System.Web.Services,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_REF_W                            L"System.Web.Services,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_REF_S                            S"System.Web.Services,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_REF_T                        TEXT("System.Web.Services,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_FRIEND_REF                         System.Web.Services,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_FRIEND_REF_A                      "System.Web.Services,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_FRIEND_REF_W                     L"System.Web.Services,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_FRIEND_REF_S                     S"System.Web.Services,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_FRIEND_REF_T                 TEXT("System.Web.Services,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_EXACT_REF                          System.Web.Services,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
#define SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_EXACT_REF_A                       "System.Web.Services,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_EXACT_REF_W                      L"System.Web.Services,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_EXACT_REF_S                      S"System.Web.Services,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_EXACT_REF_T                  TEXT("System.Web.Services,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil")
#define SYSTEM_WEB_SERVICES_ASSEMBLY_NAME                                        System.Web.Services
#define SYSTEM_WEB_SERVICES_ASSEMBLY_NAME_A                                     "System.Web.Services"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_NAME_W                                    L"System.Web.Services"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_NAME_S                                    S"System.Web.Services"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_NAME_T                                TEXT("System.Web.Services")
#define SYSTEM_WEB_SERVICES_ASSEMBLY_VERSION                                     2.0.3600.0
#define SYSTEM_WEB_SERVICES_ASSEMBLY_VERSION_A                                  "2.0.3600.0"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_VERSION_W                                 L"2.0.3600.0"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_VERSION_S                                 S"2.0.3600.0"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_VERSION_T                             TEXT("2.0.3600.0")
#define SYSTEM_WEB_SERVICES_ASSEMBLY_VERSION_IL                                   2:0:3600:0
#define SYSTEM_WEB_SERVICES_ASSEMBLY_PUBLIC_KEY                                  2411111111111111111111111111111111111112
#define SYSTEM_WEB_SERVICES_ASSEMBLY_PUBLIC_KEY_A                               "2411111111111111111111111111111111111112"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_PUBLIC_KEY_W                              L"2411111111111111111111111111111111111112"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_PUBLIC_KEY_S                              S"2411111111111111111111111111111111111112"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_PUBLIC_KEY_T                          TEXT("2411111111111111111111111111111111111112")
#define SYSTEM_WEB_SERVICES_ASSEMBLY_PUBLIC_KEY_IL                               (24 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 12 )
#define SYSTEM_WEB_SERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN                            b03f5f7f11d50a3a
#define SYSTEM_WEB_SERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN_A                         "b03f5f7f11d50a3a"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN_W                        L"b03f5f7f11d50a3a"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN_S                        S"b03f5f7f11d50a3a"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN_T                    TEXT("b03f5f7f11d50a3a")
#define SYSTEM_WEB_SERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                         (b0 3f 5f 7f 11 d5 0a 3a )
#define SYSTEM_WEB_SERVICES_ASSEMBLY_CULTURE                                     neutral
#define SYSTEM_WEB_SERVICES_ASSEMBLY_CULTURE_A                                  "neutral"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_CULTURE_W                                 L"neutral"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_CULTURE_S                                 S"neutral"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_CULTURE_T                             TEXT("neutral")
#define SYSTEM_WEB_SERVICES_ASSEMBLY_PROCESSOR_ARCHITECTURE                      msil
#define SYSTEM_WEB_SERVICES_ASSEMBLY_PROCESSOR_ARCHITECTURE_A                   "msil"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_PROCESSOR_ARCHITECTURE_W                  L"msil"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_PROCESSOR_ARCHITECTURE_S                  S"msil"
#define SYSTEM_WEB_SERVICES_ASSEMBLY_PROCESSOR_ARCHITECTURE_T              TEXT("msil")
#define SYSTEM_XML_ASSEMBLY_IDENTITY_DEF                                         System.Xml,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
#define SYSTEM_XML_ASSEMBLY_IDENTITY_DEF_A                                      "System.Xml,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_XML_ASSEMBLY_IDENTITY_DEF_W                                     L"System.Xml,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_XML_ASSEMBLY_IDENTITY_DEF_S                                     S"System.Xml,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_XML_ASSEMBLY_IDENTITY_DEF_T                                 TEXT("System.Xml,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil")
#define SYSTEM_XML_ASSEMBLY_IDENTITY_REF                                         System.Xml,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_XML_ASSEMBLY_IDENTITY_REF_A                                      "System.Xml,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_XML_ASSEMBLY_IDENTITY_REF_W                                     L"System.Xml,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_XML_ASSEMBLY_IDENTITY_REF_S                                     S"System.Xml,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_XML_ASSEMBLY_IDENTITY_REF_T                                 TEXT("System.Xml,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_XML_ASSEMBLY_IDENTITY_FRIEND_REF                                  System.Xml,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_XML_ASSEMBLY_IDENTITY_FRIEND_REF_A                               "System.Xml,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_XML_ASSEMBLY_IDENTITY_FRIEND_REF_W                              L"System.Xml,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_XML_ASSEMBLY_IDENTITY_FRIEND_REF_S                              S"System.Xml,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_XML_ASSEMBLY_IDENTITY_FRIEND_REF_T                          TEXT("System.Xml,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_XML_ASSEMBLY_IDENTITY_EXACT_REF                                   System.Xml,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
#define SYSTEM_XML_ASSEMBLY_IDENTITY_EXACT_REF_A                                "System.Xml,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_XML_ASSEMBLY_IDENTITY_EXACT_REF_W                               L"System.Xml,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_XML_ASSEMBLY_IDENTITY_EXACT_REF_S                               S"System.Xml,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_XML_ASSEMBLY_IDENTITY_EXACT_REF_T                           TEXT("System.Xml,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil")
#define SYSTEM_XML_ASSEMBLY_NAME                                                 System.Xml
#define SYSTEM_XML_ASSEMBLY_NAME_A                                              "System.Xml"
#define SYSTEM_XML_ASSEMBLY_NAME_W                                             L"System.Xml"
#define SYSTEM_XML_ASSEMBLY_NAME_S                                             S"System.Xml"
#define SYSTEM_XML_ASSEMBLY_NAME_T                                         TEXT("System.Xml")
#define SYSTEM_XML_ASSEMBLY_VERSION                                              2.0.3600.0
#define SYSTEM_XML_ASSEMBLY_VERSION_A                                           "2.0.3600.0"
#define SYSTEM_XML_ASSEMBLY_VERSION_W                                          L"2.0.3600.0"
#define SYSTEM_XML_ASSEMBLY_VERSION_S                                          S"2.0.3600.0"
#define SYSTEM_XML_ASSEMBLY_VERSION_T                                      TEXT("2.0.3600.0")
#define SYSTEM_XML_ASSEMBLY_VERSION_IL                                            2:0:3600:0
#define SYSTEM_XML_ASSEMBLY_PUBLIC_KEY                                           00000000000000000400000000000000
#define SYSTEM_XML_ASSEMBLY_PUBLIC_KEY_A                                        "00000000000000000400000000000000"
#define SYSTEM_XML_ASSEMBLY_PUBLIC_KEY_W                                       L"00000000000000000400000000000000"
#define SYSTEM_XML_ASSEMBLY_PUBLIC_KEY_S                                       S"00000000000000000400000000000000"
#define SYSTEM_XML_ASSEMBLY_PUBLIC_KEY_T                                   TEXT("00000000000000000400000000000000")
#define SYSTEM_XML_ASSEMBLY_PUBLIC_KEY_IL                                        (00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00 )
#define SYSTEM_XML_ASSEMBLY_PUBLIC_KEY_TOKEN                                     b77a5c561934e089
#define SYSTEM_XML_ASSEMBLY_PUBLIC_KEY_TOKEN_A                                  "b77a5c561934e089"
#define SYSTEM_XML_ASSEMBLY_PUBLIC_KEY_TOKEN_W                                 L"b77a5c561934e089"
#define SYSTEM_XML_ASSEMBLY_PUBLIC_KEY_TOKEN_S                                 S"b77a5c561934e089"
#define SYSTEM_XML_ASSEMBLY_PUBLIC_KEY_TOKEN_T                             TEXT("b77a5c561934e089")
#define SYSTEM_XML_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                                  (b7 7a 5c 56 19 34 e0 89 )
#define SYSTEM_XML_ASSEMBLY_CULTURE                                              neutral
#define SYSTEM_XML_ASSEMBLY_CULTURE_A                                           "neutral"
#define SYSTEM_XML_ASSEMBLY_CULTURE_W                                          L"neutral"
#define SYSTEM_XML_ASSEMBLY_CULTURE_S                                          S"neutral"
#define SYSTEM_XML_ASSEMBLY_CULTURE_T                                      TEXT("neutral")
#define SYSTEM_XML_ASSEMBLY_PROCESSOR_ARCHITECTURE                               msil
#define SYSTEM_XML_ASSEMBLY_PROCESSOR_ARCHITECTURE_A                            "msil"
#define SYSTEM_XML_ASSEMBLY_PROCESSOR_ARCHITECTURE_W                           L"msil"
#define SYSTEM_XML_ASSEMBLY_PROCESSOR_ARCHITECTURE_S                           S"msil"
#define SYSTEM_XML_ASSEMBLY_PROCESSOR_ARCHITECTURE_T                       TEXT("msil")
#define MSCORLIB_ASSEMBLY_IDENTITY_DEF                                           mscorlib,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
#define MSCORLIB_ASSEMBLY_IDENTITY_DEF_A                                        "mscorlib,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define MSCORLIB_ASSEMBLY_IDENTITY_DEF_W                                       L"mscorlib,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define MSCORLIB_ASSEMBLY_IDENTITY_DEF_S                                       S"mscorlib,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define MSCORLIB_ASSEMBLY_IDENTITY_DEF_T                                   TEXT("mscorlib,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil")
#define MSCORLIB_ASSEMBLY_IDENTITY_REF                                           mscorlib,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define MSCORLIB_ASSEMBLY_IDENTITY_REF_A                                        "mscorlib,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MSCORLIB_ASSEMBLY_IDENTITY_REF_W                                       L"mscorlib,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MSCORLIB_ASSEMBLY_IDENTITY_REF_S                                       S"mscorlib,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MSCORLIB_ASSEMBLY_IDENTITY_REF_T                                   TEXT("mscorlib,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define MSCORLIB_ASSEMBLY_IDENTITY_FRIEND_REF                                    mscorlib,publicKeyToken=b77a5c561934e089,culture=neutral
#define MSCORLIB_ASSEMBLY_IDENTITY_FRIEND_REF_A                                 "mscorlib,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MSCORLIB_ASSEMBLY_IDENTITY_FRIEND_REF_W                                L"mscorlib,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MSCORLIB_ASSEMBLY_IDENTITY_FRIEND_REF_S                                S"mscorlib,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MSCORLIB_ASSEMBLY_IDENTITY_FRIEND_REF_T                            TEXT("mscorlib,publicKeyToken=b77a5c561934e089,culture=neutral")
#define MSCORLIB_ASSEMBLY_IDENTITY_EXACT_REF                                     mscorlib,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
#define MSCORLIB_ASSEMBLY_IDENTITY_EXACT_REF_A                                  "mscorlib,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define MSCORLIB_ASSEMBLY_IDENTITY_EXACT_REF_W                                 L"mscorlib,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define MSCORLIB_ASSEMBLY_IDENTITY_EXACT_REF_S                                 S"mscorlib,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define MSCORLIB_ASSEMBLY_IDENTITY_EXACT_REF_T                             TEXT("mscorlib,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil")
#define MSCORLIB_ASSEMBLY_NAME                                                   mscorlib
#define MSCORLIB_ASSEMBLY_NAME_A                                                "mscorlib"
#define MSCORLIB_ASSEMBLY_NAME_W                                               L"mscorlib"
#define MSCORLIB_ASSEMBLY_NAME_S                                               S"mscorlib"
#define MSCORLIB_ASSEMBLY_NAME_T                                           TEXT("mscorlib")
#define MSCORLIB_ASSEMBLY_VERSION                                                2.0.3600.0
#define MSCORLIB_ASSEMBLY_VERSION_A                                             "2.0.3600.0"
#define MSCORLIB_ASSEMBLY_VERSION_W                                            L"2.0.3600.0"
#define MSCORLIB_ASSEMBLY_VERSION_S                                            S"2.0.3600.0"
#define MSCORLIB_ASSEMBLY_VERSION_T                                        TEXT("2.0.3600.0")
#define MSCORLIB_ASSEMBLY_VERSION_IL                                              2:0:3600:0
#define MSCORLIB_ASSEMBLY_PUBLIC_KEY                                             00000000000000000400000000000000
#define MSCORLIB_ASSEMBLY_PUBLIC_KEY_A                                          "00000000000000000400000000000000"
#define MSCORLIB_ASSEMBLY_PUBLIC_KEY_W                                         L"00000000000000000400000000000000"
#define MSCORLIB_ASSEMBLY_PUBLIC_KEY_S                                         S"00000000000000000400000000000000"
#define MSCORLIB_ASSEMBLY_PUBLIC_KEY_T                                     TEXT("00000000000000000400000000000000")
#define MSCORLIB_ASSEMBLY_PUBLIC_KEY_IL                                          (00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00 )
#define MSCORLIB_ASSEMBLY_PUBLIC_KEY_TOKEN                                       b77a5c561934e089
#define MSCORLIB_ASSEMBLY_PUBLIC_KEY_TOKEN_A                                    "b77a5c561934e089"
#define MSCORLIB_ASSEMBLY_PUBLIC_KEY_TOKEN_W                                   L"b77a5c561934e089"
#define MSCORLIB_ASSEMBLY_PUBLIC_KEY_TOKEN_S                                   S"b77a5c561934e089"
#define MSCORLIB_ASSEMBLY_PUBLIC_KEY_TOKEN_T                               TEXT("b77a5c561934e089")
#define MSCORLIB_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                                    (b7 7a 5c 56 19 34 e0 89 )
#define MSCORLIB_ASSEMBLY_CULTURE                                                neutral
#define MSCORLIB_ASSEMBLY_CULTURE_A                                             "neutral"
#define MSCORLIB_ASSEMBLY_CULTURE_W                                            L"neutral"
#define MSCORLIB_ASSEMBLY_CULTURE_S                                            S"neutral"
#define MSCORLIB_ASSEMBLY_CULTURE_T                                        TEXT("neutral")
#define MSCORLIB_ASSEMBLY_PROCESSOR_ARCHITECTURE                                 msil
#define MSCORLIB_ASSEMBLY_PROCESSOR_ARCHITECTURE_A                              "msil"
#define MSCORLIB_ASSEMBLY_PROCESSOR_ARCHITECTURE_W                             L"msil"
#define MSCORLIB_ASSEMBLY_PROCESSOR_ARCHITECTURE_S                             S"msil"
#define MSCORLIB_ASSEMBLY_PROCESSOR_ARCHITECTURE_T                         TEXT("msil")
#define MICROSOFT_VISUALC_ASSEMBLY_IDENTITY_DEF                                  Microsoft.VisualC,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=x86
#define MICROSOFT_VISUALC_ASSEMBLY_IDENTITY_DEF_A                               "Microsoft.VisualC,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=x86"
#define MICROSOFT_VISUALC_ASSEMBLY_IDENTITY_DEF_W                              L"Microsoft.VisualC,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=x86"
#define MICROSOFT_VISUALC_ASSEMBLY_IDENTITY_DEF_S                              S"Microsoft.VisualC,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=x86"
#define MICROSOFT_VISUALC_ASSEMBLY_IDENTITY_DEF_T                          TEXT("Microsoft.VisualC,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=x86")
#define MICROSOFT_VISUALC_ASSEMBLY_IDENTITY_REF                                  Microsoft.VisualC,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALC_ASSEMBLY_IDENTITY_REF_A                               "Microsoft.VisualC,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALC_ASSEMBLY_IDENTITY_REF_W                              L"Microsoft.VisualC,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALC_ASSEMBLY_IDENTITY_REF_S                              S"Microsoft.VisualC,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALC_ASSEMBLY_IDENTITY_REF_T                          TEXT("Microsoft.VisualC,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALC_ASSEMBLY_IDENTITY_FRIEND_REF                           Microsoft.VisualC,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALC_ASSEMBLY_IDENTITY_FRIEND_REF_A                        "Microsoft.VisualC,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALC_ASSEMBLY_IDENTITY_FRIEND_REF_W                       L"Microsoft.VisualC,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALC_ASSEMBLY_IDENTITY_FRIEND_REF_S                       S"Microsoft.VisualC,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALC_ASSEMBLY_IDENTITY_FRIEND_REF_T                   TEXT("Microsoft.VisualC,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALC_ASSEMBLY_IDENTITY_EXACT_REF                            Microsoft.VisualC,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=x86
#define MICROSOFT_VISUALC_ASSEMBLY_IDENTITY_EXACT_REF_A                         "Microsoft.VisualC,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=x86"
#define MICROSOFT_VISUALC_ASSEMBLY_IDENTITY_EXACT_REF_W                        L"Microsoft.VisualC,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=x86"
#define MICROSOFT_VISUALC_ASSEMBLY_IDENTITY_EXACT_REF_S                        S"Microsoft.VisualC,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=x86"
#define MICROSOFT_VISUALC_ASSEMBLY_IDENTITY_EXACT_REF_T                    TEXT("Microsoft.VisualC,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=x86")
#define MICROSOFT_VISUALC_ASSEMBLY_NAME                                          Microsoft.VisualC
#define MICROSOFT_VISUALC_ASSEMBLY_NAME_A                                       "Microsoft.VisualC"
#define MICROSOFT_VISUALC_ASSEMBLY_NAME_W                                      L"Microsoft.VisualC"
#define MICROSOFT_VISUALC_ASSEMBLY_NAME_S                                      S"Microsoft.VisualC"
#define MICROSOFT_VISUALC_ASSEMBLY_NAME_T                                  TEXT("Microsoft.VisualC")
#define MICROSOFT_VISUALC_ASSEMBLY_VERSION                                       8.0.1200.0
#define MICROSOFT_VISUALC_ASSEMBLY_VERSION_A                                    "8.0.1200.0"
#define MICROSOFT_VISUALC_ASSEMBLY_VERSION_W                                   L"8.0.1200.0"
#define MICROSOFT_VISUALC_ASSEMBLY_VERSION_S                                   S"8.0.1200.0"
#define MICROSOFT_VISUALC_ASSEMBLY_VERSION_T                               TEXT("8.0.1200.0")
#define MICROSOFT_VISUALC_ASSEMBLY_VERSION_IL                                     8:0:1200:0
#define MICROSOFT_VISUALC_ASSEMBLY_PUBLIC_KEY                                    2411111111111111111111111111111111111112
#define MICROSOFT_VISUALC_ASSEMBLY_PUBLIC_KEY_A                                 "2411111111111111111111111111111111111112"
#define MICROSOFT_VISUALC_ASSEMBLY_PUBLIC_KEY_W                                L"2411111111111111111111111111111111111112"
#define MICROSOFT_VISUALC_ASSEMBLY_PUBLIC_KEY_S                                S"2411111111111111111111111111111111111112"
#define MICROSOFT_VISUALC_ASSEMBLY_PUBLIC_KEY_T                            TEXT("2411111111111111111111111111111111111112")
#define MICROSOFT_VISUALC_ASSEMBLY_PUBLIC_KEY_IL                                 (24 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 12 )
#define MICROSOFT_VISUALC_ASSEMBLY_PUBLIC_KEY_TOKEN                              b03f5f7f11d50a3a
#define MICROSOFT_VISUALC_ASSEMBLY_PUBLIC_KEY_TOKEN_A                           "b03f5f7f11d50a3a"
#define MICROSOFT_VISUALC_ASSEMBLY_PUBLIC_KEY_TOKEN_W                          L"b03f5f7f11d50a3a"
#define MICROSOFT_VISUALC_ASSEMBLY_PUBLIC_KEY_TOKEN_S                          S"b03f5f7f11d50a3a"
#define MICROSOFT_VISUALC_ASSEMBLY_PUBLIC_KEY_TOKEN_T                      TEXT("b03f5f7f11d50a3a")
#define MICROSOFT_VISUALC_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                           (b0 3f 5f 7f 11 d5 0a 3a )
#define MICROSOFT_VISUALC_ASSEMBLY_CULTURE                                       neutral
#define MICROSOFT_VISUALC_ASSEMBLY_CULTURE_A                                    "neutral"
#define MICROSOFT_VISUALC_ASSEMBLY_CULTURE_W                                   L"neutral"
#define MICROSOFT_VISUALC_ASSEMBLY_CULTURE_S                                   S"neutral"
#define MICROSOFT_VISUALC_ASSEMBLY_CULTURE_T                               TEXT("neutral")
#define MICROSOFT_VISUALC_ASSEMBLY_PROCESSOR_ARCHITECTURE                        x86
#define MICROSOFT_VISUALC_ASSEMBLY_PROCESSOR_ARCHITECTURE_A                     "x86"
#define MICROSOFT_VISUALC_ASSEMBLY_PROCESSOR_ARCHITECTURE_W                    L"x86"
#define MICROSOFT_VISUALC_ASSEMBLY_PROCESSOR_ARCHITECTURE_S                    S"x86"
#define MICROSOFT_VISUALC_ASSEMBLY_PROCESSOR_ARCHITECTURE_T                TEXT("x86")
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_DEF                              Microsoft.VisualBasic,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_DEF_A                           "Microsoft.VisualBasic,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_DEF_W                          L"Microsoft.VisualBasic,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_DEF_S                          S"Microsoft.VisualBasic,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_DEF_T                      TEXT("Microsoft.VisualBasic,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil")
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_REF                              Microsoft.VisualBasic,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_REF_A                           "Microsoft.VisualBasic,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_REF_W                          L"Microsoft.VisualBasic,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_REF_S                          S"Microsoft.VisualBasic,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_REF_T                      TEXT("Microsoft.VisualBasic,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_FRIEND_REF                       Microsoft.VisualBasic,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_FRIEND_REF_A                    "Microsoft.VisualBasic,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_FRIEND_REF_W                   L"Microsoft.VisualBasic,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_FRIEND_REF_S                   S"Microsoft.VisualBasic,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_FRIEND_REF_T               TEXT("Microsoft.VisualBasic,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_EXACT_REF                        Microsoft.VisualBasic,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_EXACT_REF_A                     "Microsoft.VisualBasic,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_EXACT_REF_W                    L"Microsoft.VisualBasic,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_EXACT_REF_S                    S"Microsoft.VisualBasic,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_EXACT_REF_T                TEXT("Microsoft.VisualBasic,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil")
#define MICROSOFT_VISUALBASIC_ASSEMBLY_NAME                                      Microsoft.VisualBasic
#define MICROSOFT_VISUALBASIC_ASSEMBLY_NAME_A                                   "Microsoft.VisualBasic"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_NAME_W                                  L"Microsoft.VisualBasic"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_NAME_S                                  S"Microsoft.VisualBasic"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_NAME_T                              TEXT("Microsoft.VisualBasic")
#define MICROSOFT_VISUALBASIC_ASSEMBLY_VERSION                                   8.0.1200.0
#define MICROSOFT_VISUALBASIC_ASSEMBLY_VERSION_A                                "8.0.1200.0"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_VERSION_W                               L"8.0.1200.0"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_VERSION_S                               S"8.0.1200.0"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_VERSION_T                           TEXT("8.0.1200.0")
#define MICROSOFT_VISUALBASIC_ASSEMBLY_VERSION_IL                                 8:0:1200:0
#define MICROSOFT_VISUALBASIC_ASSEMBLY_PUBLIC_KEY                                2411111111111111111111111111111111111112
#define MICROSOFT_VISUALBASIC_ASSEMBLY_PUBLIC_KEY_A                             "2411111111111111111111111111111111111112"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_PUBLIC_KEY_W                            L"2411111111111111111111111111111111111112"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_PUBLIC_KEY_S                            S"2411111111111111111111111111111111111112"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_PUBLIC_KEY_T                        TEXT("2411111111111111111111111111111111111112")
#define MICROSOFT_VISUALBASIC_ASSEMBLY_PUBLIC_KEY_IL                             (24 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 12 )
#define MICROSOFT_VISUALBASIC_ASSEMBLY_PUBLIC_KEY_TOKEN                          b03f5f7f11d50a3a
#define MICROSOFT_VISUALBASIC_ASSEMBLY_PUBLIC_KEY_TOKEN_A                       "b03f5f7f11d50a3a"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_PUBLIC_KEY_TOKEN_W                      L"b03f5f7f11d50a3a"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_PUBLIC_KEY_TOKEN_S                      S"b03f5f7f11d50a3a"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_PUBLIC_KEY_TOKEN_T                  TEXT("b03f5f7f11d50a3a")
#define MICROSOFT_VISUALBASIC_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                       (b0 3f 5f 7f 11 d5 0a 3a )
#define MICROSOFT_VISUALBASIC_ASSEMBLY_CULTURE                                   neutral
#define MICROSOFT_VISUALBASIC_ASSEMBLY_CULTURE_A                                "neutral"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_CULTURE_W                               L"neutral"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_CULTURE_S                               S"neutral"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_CULTURE_T                           TEXT("neutral")
#define MICROSOFT_VISUALBASIC_ASSEMBLY_PROCESSOR_ARCHITECTURE                    msil
#define MICROSOFT_VISUALBASIC_ASSEMBLY_PROCESSOR_ARCHITECTURE_A                 "msil"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_PROCESSOR_ARCHITECTURE_W                L"msil"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_PROCESSOR_ARCHITECTURE_S                S"msil"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_PROCESSOR_ARCHITECTURE_T            TEXT("msil")
#define CSCOMPMGD_ASSEMBLY_IDENTITY_DEF                                          cscompmgd,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
#define CSCOMPMGD_ASSEMBLY_IDENTITY_DEF_A                                       "cscompmgd,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define CSCOMPMGD_ASSEMBLY_IDENTITY_DEF_W                                      L"cscompmgd,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define CSCOMPMGD_ASSEMBLY_IDENTITY_DEF_S                                      S"cscompmgd,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define CSCOMPMGD_ASSEMBLY_IDENTITY_DEF_T                                  TEXT("cscompmgd,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil")
#define CSCOMPMGD_ASSEMBLY_IDENTITY_REF                                          cscompmgd,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define CSCOMPMGD_ASSEMBLY_IDENTITY_REF_A                                       "cscompmgd,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CSCOMPMGD_ASSEMBLY_IDENTITY_REF_W                                      L"cscompmgd,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CSCOMPMGD_ASSEMBLY_IDENTITY_REF_S                                      S"cscompmgd,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CSCOMPMGD_ASSEMBLY_IDENTITY_REF_T                                  TEXT("cscompmgd,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define CSCOMPMGD_ASSEMBLY_IDENTITY_FRIEND_REF                                   cscompmgd,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define CSCOMPMGD_ASSEMBLY_IDENTITY_FRIEND_REF_A                                "cscompmgd,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CSCOMPMGD_ASSEMBLY_IDENTITY_FRIEND_REF_W                               L"cscompmgd,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CSCOMPMGD_ASSEMBLY_IDENTITY_FRIEND_REF_S                               S"cscompmgd,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CSCOMPMGD_ASSEMBLY_IDENTITY_FRIEND_REF_T                           TEXT("cscompmgd,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define CSCOMPMGD_ASSEMBLY_IDENTITY_EXACT_REF                                    cscompmgd,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
#define CSCOMPMGD_ASSEMBLY_IDENTITY_EXACT_REF_A                                 "cscompmgd,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define CSCOMPMGD_ASSEMBLY_IDENTITY_EXACT_REF_W                                L"cscompmgd,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define CSCOMPMGD_ASSEMBLY_IDENTITY_EXACT_REF_S                                S"cscompmgd,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define CSCOMPMGD_ASSEMBLY_IDENTITY_EXACT_REF_T                            TEXT("cscompmgd,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil")
#define CSCOMPMGD_ASSEMBLY_NAME                                                  cscompmgd
#define CSCOMPMGD_ASSEMBLY_NAME_A                                               "cscompmgd"
#define CSCOMPMGD_ASSEMBLY_NAME_W                                              L"cscompmgd"
#define CSCOMPMGD_ASSEMBLY_NAME_S                                              S"cscompmgd"
#define CSCOMPMGD_ASSEMBLY_NAME_T                                          TEXT("cscompmgd")
#define CSCOMPMGD_ASSEMBLY_VERSION                                               8.0.1200.0
#define CSCOMPMGD_ASSEMBLY_VERSION_A                                            "8.0.1200.0"
#define CSCOMPMGD_ASSEMBLY_VERSION_W                                           L"8.0.1200.0"
#define CSCOMPMGD_ASSEMBLY_VERSION_S                                           S"8.0.1200.0"
#define CSCOMPMGD_ASSEMBLY_VERSION_T                                       TEXT("8.0.1200.0")
#define CSCOMPMGD_ASSEMBLY_VERSION_IL                                             8:0:1200:0
#define CSCOMPMGD_ASSEMBLY_PUBLIC_KEY                                            2411111111111111111111111111111111111112
#define CSCOMPMGD_ASSEMBLY_PUBLIC_KEY_A                                         "2411111111111111111111111111111111111112"
#define CSCOMPMGD_ASSEMBLY_PUBLIC_KEY_W                                        L"2411111111111111111111111111111111111112"
#define CSCOMPMGD_ASSEMBLY_PUBLIC_KEY_S                                        S"2411111111111111111111111111111111111112"
#define CSCOMPMGD_ASSEMBLY_PUBLIC_KEY_T                                    TEXT("2411111111111111111111111111111111111112")
#define CSCOMPMGD_ASSEMBLY_PUBLIC_KEY_IL                                         (24 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 12 )
#define CSCOMPMGD_ASSEMBLY_PUBLIC_KEY_TOKEN                                      b03f5f7f11d50a3a
#define CSCOMPMGD_ASSEMBLY_PUBLIC_KEY_TOKEN_A                                   "b03f5f7f11d50a3a"
#define CSCOMPMGD_ASSEMBLY_PUBLIC_KEY_TOKEN_W                                  L"b03f5f7f11d50a3a"
#define CSCOMPMGD_ASSEMBLY_PUBLIC_KEY_TOKEN_S                                  S"b03f5f7f11d50a3a"
#define CSCOMPMGD_ASSEMBLY_PUBLIC_KEY_TOKEN_T                              TEXT("b03f5f7f11d50a3a")
#define CSCOMPMGD_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                                   (b0 3f 5f 7f 11 d5 0a 3a )
#define CSCOMPMGD_ASSEMBLY_CULTURE                                               neutral
#define CSCOMPMGD_ASSEMBLY_CULTURE_A                                            "neutral"
#define CSCOMPMGD_ASSEMBLY_CULTURE_W                                           L"neutral"
#define CSCOMPMGD_ASSEMBLY_CULTURE_S                                           S"neutral"
#define CSCOMPMGD_ASSEMBLY_CULTURE_T                                       TEXT("neutral")
#define CSCOMPMGD_ASSEMBLY_PROCESSOR_ARCHITECTURE                                msil
#define CSCOMPMGD_ASSEMBLY_PROCESSOR_ARCHITECTURE_A                             "msil"
#define CSCOMPMGD_ASSEMBLY_PROCESSOR_ARCHITECTURE_W                            L"msil"
#define CSCOMPMGD_ASSEMBLY_PROCESSOR_ARCHITECTURE_S                            S"msil"
#define CSCOMPMGD_ASSEMBLY_PROCESSOR_ARCHITECTURE_T                        TEXT("msil")
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_DEF                                  microsoft.jscript,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_DEF_A                               "microsoft.jscript,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_DEF_W                              L"microsoft.jscript,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_DEF_S                              S"microsoft.jscript,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_DEF_T                          TEXT("microsoft.jscript,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil")
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_REF                                  microsoft.jscript,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_REF_A                               "microsoft.jscript,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_REF_W                              L"microsoft.jscript,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_REF_S                              S"microsoft.jscript,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_REF_T                          TEXT("microsoft.jscript,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_FRIEND_REF                           microsoft.jscript,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_FRIEND_REF_A                        "microsoft.jscript,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_FRIEND_REF_W                       L"microsoft.jscript,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_FRIEND_REF_S                       S"microsoft.jscript,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_FRIEND_REF_T                   TEXT("microsoft.jscript,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_EXACT_REF                            microsoft.jscript,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_EXACT_REF_A                         "microsoft.jscript,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_EXACT_REF_W                        L"microsoft.jscript,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_EXACT_REF_S                        S"microsoft.jscript,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_EXACT_REF_T                    TEXT("microsoft.jscript,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil")
#define MICROSOFT_JSCRIPT_ASSEMBLY_NAME                                          microsoft.jscript
#define MICROSOFT_JSCRIPT_ASSEMBLY_NAME_A                                       "microsoft.jscript"
#define MICROSOFT_JSCRIPT_ASSEMBLY_NAME_W                                      L"microsoft.jscript"
#define MICROSOFT_JSCRIPT_ASSEMBLY_NAME_S                                      S"microsoft.jscript"
#define MICROSOFT_JSCRIPT_ASSEMBLY_NAME_T                                  TEXT("microsoft.jscript")
#define MICROSOFT_JSCRIPT_ASSEMBLY_VERSION                                       8.0.1200.0
#define MICROSOFT_JSCRIPT_ASSEMBLY_VERSION_A                                    "8.0.1200.0"
#define MICROSOFT_JSCRIPT_ASSEMBLY_VERSION_W                                   L"8.0.1200.0"
#define MICROSOFT_JSCRIPT_ASSEMBLY_VERSION_S                                   S"8.0.1200.0"
#define MICROSOFT_JSCRIPT_ASSEMBLY_VERSION_T                               TEXT("8.0.1200.0")
#define MICROSOFT_JSCRIPT_ASSEMBLY_VERSION_IL                                     8:0:1200:0
#define MICROSOFT_JSCRIPT_ASSEMBLY_PUBLIC_KEY                                    2411111111111111111111111111111111111112
#define MICROSOFT_JSCRIPT_ASSEMBLY_PUBLIC_KEY_A                                 "2411111111111111111111111111111111111112"
#define MICROSOFT_JSCRIPT_ASSEMBLY_PUBLIC_KEY_W                                L"2411111111111111111111111111111111111112"
#define MICROSOFT_JSCRIPT_ASSEMBLY_PUBLIC_KEY_S                                S"2411111111111111111111111111111111111112"
#define MICROSOFT_JSCRIPT_ASSEMBLY_PUBLIC_KEY_T                            TEXT("2411111111111111111111111111111111111112")
#define MICROSOFT_JSCRIPT_ASSEMBLY_PUBLIC_KEY_IL                                 (24 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 12 )
#define MICROSOFT_JSCRIPT_ASSEMBLY_PUBLIC_KEY_TOKEN                              b03f5f7f11d50a3a
#define MICROSOFT_JSCRIPT_ASSEMBLY_PUBLIC_KEY_TOKEN_A                           "b03f5f7f11d50a3a"
#define MICROSOFT_JSCRIPT_ASSEMBLY_PUBLIC_KEY_TOKEN_W                          L"b03f5f7f11d50a3a"
#define MICROSOFT_JSCRIPT_ASSEMBLY_PUBLIC_KEY_TOKEN_S                          S"b03f5f7f11d50a3a"
#define MICROSOFT_JSCRIPT_ASSEMBLY_PUBLIC_KEY_TOKEN_T                      TEXT("b03f5f7f11d50a3a")
#define MICROSOFT_JSCRIPT_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                           (b0 3f 5f 7f 11 d5 0a 3a )
#define MICROSOFT_JSCRIPT_ASSEMBLY_CULTURE                                       neutral
#define MICROSOFT_JSCRIPT_ASSEMBLY_CULTURE_A                                    "neutral"
#define MICROSOFT_JSCRIPT_ASSEMBLY_CULTURE_W                                   L"neutral"
#define MICROSOFT_JSCRIPT_ASSEMBLY_CULTURE_S                                   S"neutral"
#define MICROSOFT_JSCRIPT_ASSEMBLY_CULTURE_T                               TEXT("neutral")
#define MICROSOFT_JSCRIPT_ASSEMBLY_PROCESSOR_ARCHITECTURE                        msil
#define MICROSOFT_JSCRIPT_ASSEMBLY_PROCESSOR_ARCHITECTURE_A                     "msil"
#define MICROSOFT_JSCRIPT_ASSEMBLY_PROCESSOR_ARCHITECTURE_W                    L"msil"
#define MICROSOFT_JSCRIPT_ASSEMBLY_PROCESSOR_ARCHITECTURE_S                    S"msil"
#define MICROSOFT_JSCRIPT_ASSEMBLY_PROCESSOR_ARCHITECTURE_T                TEXT("msil")
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_DEF                          microsoft.visualbasic.vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_DEF_A                       "microsoft.visualbasic.vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_DEF_W                      L"microsoft.visualbasic.vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_DEF_S                      S"microsoft.visualbasic.vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_DEF_T                  TEXT("microsoft.visualbasic.vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil")
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_REF                          microsoft.visualbasic.vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_REF_A                       "microsoft.visualbasic.vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_REF_W                      L"microsoft.visualbasic.vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_REF_S                      S"microsoft.visualbasic.vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_REF_T                  TEXT("microsoft.visualbasic.vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_FRIEND_REF                   microsoft.visualbasic.vsa,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_FRIEND_REF_A                "microsoft.visualbasic.vsa,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_FRIEND_REF_W               L"microsoft.visualbasic.vsa,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_FRIEND_REF_S               S"microsoft.visualbasic.vsa,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_FRIEND_REF_T           TEXT("microsoft.visualbasic.vsa,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_EXACT_REF                    microsoft.visualbasic.vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_EXACT_REF_A                 "microsoft.visualbasic.vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_EXACT_REF_W                L"microsoft.visualbasic.vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_EXACT_REF_S                S"microsoft.visualbasic.vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_EXACT_REF_T            TEXT("microsoft.visualbasic.vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil")
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_NAME                                  microsoft.visualbasic.vsa
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_NAME_A                               "microsoft.visualbasic.vsa"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_NAME_W                              L"microsoft.visualbasic.vsa"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_NAME_S                              S"microsoft.visualbasic.vsa"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_NAME_T                          TEXT("microsoft.visualbasic.vsa")
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_VERSION                               8.0.1200.0
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_VERSION_A                            "8.0.1200.0"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_VERSION_W                           L"8.0.1200.0"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_VERSION_S                           S"8.0.1200.0"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_VERSION_T                       TEXT("8.0.1200.0")
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_VERSION_IL                             8:0:1200:0
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_PUBLIC_KEY                            2411111111111111111111111111111111111112
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_PUBLIC_KEY_A                         "2411111111111111111111111111111111111112"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_PUBLIC_KEY_W                        L"2411111111111111111111111111111111111112"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_PUBLIC_KEY_S                        S"2411111111111111111111111111111111111112"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_PUBLIC_KEY_T                    TEXT("2411111111111111111111111111111111111112")
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_PUBLIC_KEY_IL                         (24 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 12 )
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_PUBLIC_KEY_TOKEN                      b03f5f7f11d50a3a
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_PUBLIC_KEY_TOKEN_A                   "b03f5f7f11d50a3a"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_PUBLIC_KEY_TOKEN_W                  L"b03f5f7f11d50a3a"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_PUBLIC_KEY_TOKEN_S                  S"b03f5f7f11d50a3a"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_PUBLIC_KEY_TOKEN_T              TEXT("b03f5f7f11d50a3a")
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                   (b0 3f 5f 7f 11 d5 0a 3a )
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_CULTURE                               neutral
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_CULTURE_A                            "neutral"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_CULTURE_W                           L"neutral"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_CULTURE_S                           S"neutral"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_CULTURE_T                       TEXT("neutral")
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_PROCESSOR_ARCHITECTURE                msil
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_PROCESSOR_ARCHITECTURE_A             "msil"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_PROCESSOR_ARCHITECTURE_W            L"msil"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_PROCESSOR_ARCHITECTURE_S            S"msil"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_PROCESSOR_ARCHITECTURE_T        TEXT("msil")
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_DEF                                      microsoft.vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_DEF_A                                   "microsoft.vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_DEF_W                                  L"microsoft.vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_DEF_S                                  S"microsoft.vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_DEF_T                              TEXT("microsoft.vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil")
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_REF                                      microsoft.vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_REF_A                                   "microsoft.vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_REF_W                                  L"microsoft.vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_REF_S                                  S"microsoft.vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_REF_T                              TEXT("microsoft.vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_FRIEND_REF                               microsoft.vsa,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_FRIEND_REF_A                            "microsoft.vsa,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_FRIEND_REF_W                           L"microsoft.vsa,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_FRIEND_REF_S                           S"microsoft.vsa,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_FRIEND_REF_T                       TEXT("microsoft.vsa,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_EXACT_REF                                microsoft.vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_EXACT_REF_A                             "microsoft.vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_EXACT_REF_W                            L"microsoft.vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_EXACT_REF_S                            S"microsoft.vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_EXACT_REF_T                        TEXT("microsoft.vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil")
#define MICROSOFT_VSA_ASSEMBLY_NAME                                              microsoft.vsa
#define MICROSOFT_VSA_ASSEMBLY_NAME_A                                           "microsoft.vsa"
#define MICROSOFT_VSA_ASSEMBLY_NAME_W                                          L"microsoft.vsa"
#define MICROSOFT_VSA_ASSEMBLY_NAME_S                                          S"microsoft.vsa"
#define MICROSOFT_VSA_ASSEMBLY_NAME_T                                      TEXT("microsoft.vsa")
#define MICROSOFT_VSA_ASSEMBLY_VERSION                                           8.0.1200.0
#define MICROSOFT_VSA_ASSEMBLY_VERSION_A                                        "8.0.1200.0"
#define MICROSOFT_VSA_ASSEMBLY_VERSION_W                                       L"8.0.1200.0"
#define MICROSOFT_VSA_ASSEMBLY_VERSION_S                                       S"8.0.1200.0"
#define MICROSOFT_VSA_ASSEMBLY_VERSION_T                                   TEXT("8.0.1200.0")
#define MICROSOFT_VSA_ASSEMBLY_VERSION_IL                                         8:0:1200:0
#define MICROSOFT_VSA_ASSEMBLY_PUBLIC_KEY                                        2411111111111111111111111111111111111112
#define MICROSOFT_VSA_ASSEMBLY_PUBLIC_KEY_A                                     "2411111111111111111111111111111111111112"
#define MICROSOFT_VSA_ASSEMBLY_PUBLIC_KEY_W                                    L"2411111111111111111111111111111111111112"
#define MICROSOFT_VSA_ASSEMBLY_PUBLIC_KEY_S                                    S"2411111111111111111111111111111111111112"
#define MICROSOFT_VSA_ASSEMBLY_PUBLIC_KEY_T                                TEXT("2411111111111111111111111111111111111112")
#define MICROSOFT_VSA_ASSEMBLY_PUBLIC_KEY_IL                                     (24 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 12 )
#define MICROSOFT_VSA_ASSEMBLY_PUBLIC_KEY_TOKEN                                  b03f5f7f11d50a3a
#define MICROSOFT_VSA_ASSEMBLY_PUBLIC_KEY_TOKEN_A                               "b03f5f7f11d50a3a"
#define MICROSOFT_VSA_ASSEMBLY_PUBLIC_KEY_TOKEN_W                              L"b03f5f7f11d50a3a"
#define MICROSOFT_VSA_ASSEMBLY_PUBLIC_KEY_TOKEN_S                              S"b03f5f7f11d50a3a"
#define MICROSOFT_VSA_ASSEMBLY_PUBLIC_KEY_TOKEN_T                          TEXT("b03f5f7f11d50a3a")
#define MICROSOFT_VSA_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                               (b0 3f 5f 7f 11 d5 0a 3a )
#define MICROSOFT_VSA_ASSEMBLY_CULTURE                                           neutral
#define MICROSOFT_VSA_ASSEMBLY_CULTURE_A                                        "neutral"
#define MICROSOFT_VSA_ASSEMBLY_CULTURE_W                                       L"neutral"
#define MICROSOFT_VSA_ASSEMBLY_CULTURE_S                                       S"neutral"
#define MICROSOFT_VSA_ASSEMBLY_CULTURE_T                                   TEXT("neutral")
#define MICROSOFT_VSA_ASSEMBLY_PROCESSOR_ARCHITECTURE                            msil
#define MICROSOFT_VSA_ASSEMBLY_PROCESSOR_ARCHITECTURE_A                         "msil"
#define MICROSOFT_VSA_ASSEMBLY_PROCESSOR_ARCHITECTURE_W                        L"msil"
#define MICROSOFT_VSA_ASSEMBLY_PROCESSOR_ARCHITECTURE_S                        S"msil"
#define MICROSOFT_VSA_ASSEMBLY_PROCESSOR_ARCHITECTURE_T                    TEXT("msil")
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_DEF                  microsoft.vsa.vb.codedomprocessor,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_DEF_A               "microsoft.vsa.vb.codedomprocessor,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_DEF_W              L"microsoft.vsa.vb.codedomprocessor,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_DEF_S              S"microsoft.vsa.vb.codedomprocessor,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_DEF_T          TEXT("microsoft.vsa.vb.codedomprocessor,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil")
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_REF                  microsoft.vsa.vb.codedomprocessor,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_REF_A               "microsoft.vsa.vb.codedomprocessor,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_REF_W              L"microsoft.vsa.vb.codedomprocessor,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_REF_S              S"microsoft.vsa.vb.codedomprocessor,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_REF_T          TEXT("microsoft.vsa.vb.codedomprocessor,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_FRIEND_REF           microsoft.vsa.vb.codedomprocessor,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_FRIEND_REF_A        "microsoft.vsa.vb.codedomprocessor,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_FRIEND_REF_W       L"microsoft.vsa.vb.codedomprocessor,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_FRIEND_REF_S       S"microsoft.vsa.vb.codedomprocessor,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_FRIEND_REF_T   TEXT("microsoft.vsa.vb.codedomprocessor,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_EXACT_REF            microsoft.vsa.vb.codedomprocessor,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_EXACT_REF_A         "microsoft.vsa.vb.codedomprocessor,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_EXACT_REF_W        L"microsoft.vsa.vb.codedomprocessor,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_EXACT_REF_S        S"microsoft.vsa.vb.codedomprocessor,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_EXACT_REF_T    TEXT("microsoft.vsa.vb.codedomprocessor,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil")
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_NAME                          microsoft.vsa.vb.codedomprocessor
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_NAME_A                       "microsoft.vsa.vb.codedomprocessor"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_NAME_W                      L"microsoft.vsa.vb.codedomprocessor"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_NAME_S                      S"microsoft.vsa.vb.codedomprocessor"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_NAME_T                  TEXT("microsoft.vsa.vb.codedomprocessor")
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_VERSION                       8.0.1200.0
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_VERSION_A                    "8.0.1200.0"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_VERSION_W                   L"8.0.1200.0"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_VERSION_S                   S"8.0.1200.0"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_VERSION_T               TEXT("8.0.1200.0")
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_VERSION_IL                     8:0:1200:0
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_PUBLIC_KEY                    2411111111111111111111111111111111111112
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_PUBLIC_KEY_A                 "2411111111111111111111111111111111111112"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_PUBLIC_KEY_W                L"2411111111111111111111111111111111111112"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_PUBLIC_KEY_S                S"2411111111111111111111111111111111111112"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_PUBLIC_KEY_T            TEXT("2411111111111111111111111111111111111112")
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_PUBLIC_KEY_IL                 (24 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 12 )
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_PUBLIC_KEY_TOKEN              b03f5f7f11d50a3a
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_PUBLIC_KEY_TOKEN_A           "b03f5f7f11d50a3a"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_PUBLIC_KEY_TOKEN_W          L"b03f5f7f11d50a3a"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_PUBLIC_KEY_TOKEN_S          S"b03f5f7f11d50a3a"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_PUBLIC_KEY_TOKEN_T      TEXT("b03f5f7f11d50a3a")
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_PUBLIC_KEY_TOKEN_IL           (b0 3f 5f 7f 11 d5 0a 3a )
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_CULTURE                       neutral
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_CULTURE_A                    "neutral"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_CULTURE_W                   L"neutral"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_CULTURE_S                   S"neutral"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_CULTURE_T               TEXT("neutral")
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_PROCESSOR_ARCHITECTURE          msil
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_PROCESSOR_ARCHITECTURE_A       "msil"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_PROCESSOR_ARCHITECTURE_W      L"msil"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_PROCESSOR_ARCHITECTURE_S      S"msil"
#define MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_PROCESSOR_ARCHITECTURE_T  TEXT("msil")
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_DEF                               System.Windows.Forms,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_DEF_A                            "System.Windows.Forms,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_DEF_W                           L"System.Windows.Forms,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_DEF_S                           S"System.Windows.Forms,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_DEF_T                       TEXT("System.Windows.Forms,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil")
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_REF                               System.Windows.Forms,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_REF_A                            "System.Windows.Forms,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_REF_W                           L"System.Windows.Forms,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_REF_S                           S"System.Windows.Forms,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_REF_T                       TEXT("System.Windows.Forms,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_FRIEND_REF                        System.Windows.Forms,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_FRIEND_REF_A                     "System.Windows.Forms,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_FRIEND_REF_W                    L"System.Windows.Forms,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_FRIEND_REF_S                    S"System.Windows.Forms,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_FRIEND_REF_T                TEXT("System.Windows.Forms,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_EXACT_REF                         System.Windows.Forms,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_EXACT_REF_A                      "System.Windows.Forms,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_EXACT_REF_W                     L"System.Windows.Forms,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_EXACT_REF_S                     S"System.Windows.Forms,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_EXACT_REF_T                 TEXT("System.Windows.Forms,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil")
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_NAME                                       System.Windows.Forms
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_NAME_A                                    "System.Windows.Forms"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_NAME_W                                   L"System.Windows.Forms"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_NAME_S                                   S"System.Windows.Forms"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_NAME_T                               TEXT("System.Windows.Forms")
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_VERSION                                    2.0.3600.0
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_VERSION_A                                 "2.0.3600.0"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_VERSION_W                                L"2.0.3600.0"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_VERSION_S                                S"2.0.3600.0"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_VERSION_T                            TEXT("2.0.3600.0")
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_VERSION_IL                                  2:0:3600:0
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_PUBLIC_KEY                                 00000000000000000400000000000000
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_PUBLIC_KEY_A                              "00000000000000000400000000000000"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_PUBLIC_KEY_W                             L"00000000000000000400000000000000"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_PUBLIC_KEY_S                             S"00000000000000000400000000000000"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_PUBLIC_KEY_T                         TEXT("00000000000000000400000000000000")
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_PUBLIC_KEY_IL                              (00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00 )
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_PUBLIC_KEY_TOKEN                           b77a5c561934e089
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_PUBLIC_KEY_TOKEN_A                        "b77a5c561934e089"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_PUBLIC_KEY_TOKEN_W                       L"b77a5c561934e089"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_PUBLIC_KEY_TOKEN_S                       S"b77a5c561934e089"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_PUBLIC_KEY_TOKEN_T                   TEXT("b77a5c561934e089")
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                        (b7 7a 5c 56 19 34 e0 89 )
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_CULTURE                                    neutral
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_CULTURE_A                                 "neutral"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_CULTURE_W                                L"neutral"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_CULTURE_S                                S"neutral"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_CULTURE_T                            TEXT("neutral")
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_PROCESSOR_ARCHITECTURE                     msil
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_PROCESSOR_ARCHITECTURE_A                  "msil"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_PROCESSOR_ARCHITECTURE_W                 L"msil"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_PROCESSOR_ARCHITECTURE_S                 S"msil"
#define SYSTEM_WINDOWS_FORMS_ASSEMBLY_PROCESSOR_ARCHITECTURE_T             TEXT("msil")
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_DEF                       System.Configuration.Install,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_DEF_A                    "System.Configuration.Install,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_DEF_W                   L"System.Configuration.Install,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_DEF_S                   S"System.Configuration.Install,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_DEF_T               TEXT("System.Configuration.Install,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil")
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_REF                       System.Configuration.Install,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_REF_A                    "System.Configuration.Install,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_REF_W                   L"System.Configuration.Install,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_REF_S                   S"System.Configuration.Install,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_REF_T               TEXT("System.Configuration.Install,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_FRIEND_REF                System.Configuration.Install,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_FRIEND_REF_A             "System.Configuration.Install,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_FRIEND_REF_W            L"System.Configuration.Install,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_FRIEND_REF_S            S"System.Configuration.Install,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_FRIEND_REF_T        TEXT("System.Configuration.Install,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_EXACT_REF                 System.Configuration.Install,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_EXACT_REF_A              "System.Configuration.Install,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_EXACT_REF_W             L"System.Configuration.Install,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_EXACT_REF_S             S"System.Configuration.Install,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_EXACT_REF_T         TEXT("System.Configuration.Install,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil")
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_NAME                               System.Configuration.Install
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_NAME_A                            "System.Configuration.Install"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_NAME_W                           L"System.Configuration.Install"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_NAME_S                           S"System.Configuration.Install"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_NAME_T                       TEXT("System.Configuration.Install")
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_VERSION                            2.0.3600.0
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_VERSION_A                         "2.0.3600.0"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_VERSION_W                        L"2.0.3600.0"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_VERSION_S                        S"2.0.3600.0"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_VERSION_T                    TEXT("2.0.3600.0")
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_VERSION_IL                          2:0:3600:0
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_PUBLIC_KEY                         2411111111111111111111111111111111111112
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_PUBLIC_KEY_A                      "2411111111111111111111111111111111111112"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_PUBLIC_KEY_W                     L"2411111111111111111111111111111111111112"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_PUBLIC_KEY_S                     S"2411111111111111111111111111111111111112"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_PUBLIC_KEY_T                 TEXT("2411111111111111111111111111111111111112")
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_PUBLIC_KEY_IL                      (24 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 12 )
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_PUBLIC_KEY_TOKEN                   b03f5f7f11d50a3a
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_PUBLIC_KEY_TOKEN_A                "b03f5f7f11d50a3a"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_PUBLIC_KEY_TOKEN_W               L"b03f5f7f11d50a3a"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_PUBLIC_KEY_TOKEN_S               S"b03f5f7f11d50a3a"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_PUBLIC_KEY_TOKEN_T           TEXT("b03f5f7f11d50a3a")
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                (b0 3f 5f 7f 11 d5 0a 3a )
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_CULTURE                            neutral
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_CULTURE_A                         "neutral"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_CULTURE_W                        L"neutral"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_CULTURE_S                        S"neutral"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_CULTURE_T                    TEXT("neutral")
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_PROCESSOR_ARCHITECTURE             msil
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_PROCESSOR_ARCHITECTURE_A          "msil"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_PROCESSOR_ARCHITECTURE_W         L"msil"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_PROCESSOR_ARCHITECTURE_S         S"msil"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_PROCESSOR_ARCHITECTURE_T     TEXT("msil")
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_DEF                                      System.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_DEF_A                                   "System.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_DEF_W                                  L"System.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_DEF_S                                  S"System.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_DEF_T                              TEXT("System.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil")
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_REF                                      System.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_REF_A                                   "System.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_REF_W                                  L"System.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_REF_S                                  S"System.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_REF_T                              TEXT("System.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_FRIEND_REF                               System.Design,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_FRIEND_REF_A                            "System.Design,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_FRIEND_REF_W                           L"System.Design,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_FRIEND_REF_S                           S"System.Design,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_FRIEND_REF_T                       TEXT("System.Design,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_EXACT_REF                                System.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_EXACT_REF_A                             "System.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_EXACT_REF_W                            L"System.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_EXACT_REF_S                            S"System.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_EXACT_REF_T                        TEXT("System.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil")
#define SYSTEM_DESIGN_ASSEMBLY_NAME                                              System.Design
#define SYSTEM_DESIGN_ASSEMBLY_NAME_A                                           "System.Design"
#define SYSTEM_DESIGN_ASSEMBLY_NAME_W                                          L"System.Design"
#define SYSTEM_DESIGN_ASSEMBLY_NAME_S                                          S"System.Design"
#define SYSTEM_DESIGN_ASSEMBLY_NAME_T                                      TEXT("System.Design")
#define SYSTEM_DESIGN_ASSEMBLY_VERSION                                           2.0.3600.0
#define SYSTEM_DESIGN_ASSEMBLY_VERSION_A                                        "2.0.3600.0"
#define SYSTEM_DESIGN_ASSEMBLY_VERSION_W                                       L"2.0.3600.0"
#define SYSTEM_DESIGN_ASSEMBLY_VERSION_S                                       S"2.0.3600.0"
#define SYSTEM_DESIGN_ASSEMBLY_VERSION_T                                   TEXT("2.0.3600.0")
#define SYSTEM_DESIGN_ASSEMBLY_VERSION_IL                                         2:0:3600:0
#define SYSTEM_DESIGN_ASSEMBLY_PUBLIC_KEY                                        2411111111111111111111111111111111111112
#define SYSTEM_DESIGN_ASSEMBLY_PUBLIC_KEY_A                                     "2411111111111111111111111111111111111112"
#define SYSTEM_DESIGN_ASSEMBLY_PUBLIC_KEY_W                                    L"2411111111111111111111111111111111111112"
#define SYSTEM_DESIGN_ASSEMBLY_PUBLIC_KEY_S                                    S"2411111111111111111111111111111111111112"
#define SYSTEM_DESIGN_ASSEMBLY_PUBLIC_KEY_T                                TEXT("2411111111111111111111111111111111111112")
#define SYSTEM_DESIGN_ASSEMBLY_PUBLIC_KEY_IL                                     (24 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 12 )
#define SYSTEM_DESIGN_ASSEMBLY_PUBLIC_KEY_TOKEN                                  b03f5f7f11d50a3a
#define SYSTEM_DESIGN_ASSEMBLY_PUBLIC_KEY_TOKEN_A                               "b03f5f7f11d50a3a"
#define SYSTEM_DESIGN_ASSEMBLY_PUBLIC_KEY_TOKEN_W                              L"b03f5f7f11d50a3a"
#define SYSTEM_DESIGN_ASSEMBLY_PUBLIC_KEY_TOKEN_S                              S"b03f5f7f11d50a3a"
#define SYSTEM_DESIGN_ASSEMBLY_PUBLIC_KEY_TOKEN_T                          TEXT("b03f5f7f11d50a3a")
#define SYSTEM_DESIGN_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                               (b0 3f 5f 7f 11 d5 0a 3a )
#define SYSTEM_DESIGN_ASSEMBLY_CULTURE                                           neutral
#define SYSTEM_DESIGN_ASSEMBLY_CULTURE_A                                        "neutral"
#define SYSTEM_DESIGN_ASSEMBLY_CULTURE_W                                       L"neutral"
#define SYSTEM_DESIGN_ASSEMBLY_CULTURE_S                                       S"neutral"
#define SYSTEM_DESIGN_ASSEMBLY_CULTURE_T                                   TEXT("neutral")
#define SYSTEM_DESIGN_ASSEMBLY_PROCESSOR_ARCHITECTURE                            msil
#define SYSTEM_DESIGN_ASSEMBLY_PROCESSOR_ARCHITECTURE_A                         "msil"
#define SYSTEM_DESIGN_ASSEMBLY_PROCESSOR_ARCHITECTURE_W                        L"msil"
#define SYSTEM_DESIGN_ASSEMBLY_PROCESSOR_ARCHITECTURE_S                        S"msil"
#define SYSTEM_DESIGN_ASSEMBLY_PROCESSOR_ARCHITECTURE_T                    TEXT("msil")
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_DEF                              System.ServiceProcess,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_DEF_A                           "System.ServiceProcess,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_DEF_W                          L"System.ServiceProcess,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_DEF_S                          S"System.ServiceProcess,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_DEF_T                      TEXT("System.ServiceProcess,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil")
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_REF                              System.ServiceProcess,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_REF_A                           "System.ServiceProcess,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_REF_W                          L"System.ServiceProcess,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_REF_S                          S"System.ServiceProcess,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_REF_T                      TEXT("System.ServiceProcess,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_FRIEND_REF                       System.ServiceProcess,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_FRIEND_REF_A                    "System.ServiceProcess,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_FRIEND_REF_W                   L"System.ServiceProcess,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_FRIEND_REF_S                   S"System.ServiceProcess,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_FRIEND_REF_T               TEXT("System.ServiceProcess,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_EXACT_REF                        System.ServiceProcess,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_EXACT_REF_A                     "System.ServiceProcess,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_EXACT_REF_W                    L"System.ServiceProcess,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_EXACT_REF_S                    S"System.ServiceProcess,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_EXACT_REF_T                TEXT("System.ServiceProcess,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil")
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_NAME                                      System.ServiceProcess
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_NAME_A                                   "System.ServiceProcess"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_NAME_W                                  L"System.ServiceProcess"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_NAME_S                                  S"System.ServiceProcess"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_NAME_T                              TEXT("System.ServiceProcess")
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_VERSION                                   2.0.3600.0
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_VERSION_A                                "2.0.3600.0"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_VERSION_W                               L"2.0.3600.0"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_VERSION_S                               S"2.0.3600.0"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_VERSION_T                           TEXT("2.0.3600.0")
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_VERSION_IL                                 2:0:3600:0
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_PUBLIC_KEY                                2411111111111111111111111111111111111112
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_PUBLIC_KEY_A                             "2411111111111111111111111111111111111112"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_PUBLIC_KEY_W                            L"2411111111111111111111111111111111111112"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_PUBLIC_KEY_S                            S"2411111111111111111111111111111111111112"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_PUBLIC_KEY_T                        TEXT("2411111111111111111111111111111111111112")
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_PUBLIC_KEY_IL                             (24 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 12 )
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_PUBLIC_KEY_TOKEN                          b03f5f7f11d50a3a
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_PUBLIC_KEY_TOKEN_A                       "b03f5f7f11d50a3a"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_PUBLIC_KEY_TOKEN_W                      L"b03f5f7f11d50a3a"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_PUBLIC_KEY_TOKEN_S                      S"b03f5f7f11d50a3a"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_PUBLIC_KEY_TOKEN_T                  TEXT("b03f5f7f11d50a3a")
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                       (b0 3f 5f 7f 11 d5 0a 3a )
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_CULTURE                                   neutral
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_CULTURE_A                                "neutral"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_CULTURE_W                               L"neutral"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_CULTURE_S                               S"neutral"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_CULTURE_T                           TEXT("neutral")
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_PROCESSOR_ARCHITECTURE                    msil
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_PROCESSOR_ARCHITECTURE_A                 "msil"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_PROCESSOR_ARCHITECTURE_W                L"msil"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_PROCESSOR_ARCHITECTURE_S                S"msil"
#define SYSTEM_SERVICEPROCESS_ASSEMBLY_PROCESSOR_ARCHITECTURE_T            TEXT("msil")
#define SYSTEM_SECURITY_ASSEMBLY_IDENTITY_DEF                                    System.Security,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
#define SYSTEM_SECURITY_ASSEMBLY_IDENTITY_DEF_A                                 "System.Security,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_SECURITY_ASSEMBLY_IDENTITY_DEF_W                                L"System.Security,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_SECURITY_ASSEMBLY_IDENTITY_DEF_S                                S"System.Security,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_SECURITY_ASSEMBLY_IDENTITY_DEF_T                            TEXT("System.Security,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil")
#define SYSTEM_SECURITY_ASSEMBLY_IDENTITY_REF                                    System.Security,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_SECURITY_ASSEMBLY_IDENTITY_REF_A                                 "System.Security,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_SECURITY_ASSEMBLY_IDENTITY_REF_W                                L"System.Security,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_SECURITY_ASSEMBLY_IDENTITY_REF_S                                S"System.Security,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_SECURITY_ASSEMBLY_IDENTITY_REF_T                            TEXT("System.Security,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_SECURITY_ASSEMBLY_IDENTITY_FRIEND_REF                             System.Security,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_SECURITY_ASSEMBLY_IDENTITY_FRIEND_REF_A                          "System.Security,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_SECURITY_ASSEMBLY_IDENTITY_FRIEND_REF_W                         L"System.Security,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_SECURITY_ASSEMBLY_IDENTITY_FRIEND_REF_S                         S"System.Security,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_SECURITY_ASSEMBLY_IDENTITY_FRIEND_REF_T                     TEXT("System.Security,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_SECURITY_ASSEMBLY_IDENTITY_EXACT_REF                              System.Security,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
#define SYSTEM_SECURITY_ASSEMBLY_IDENTITY_EXACT_REF_A                           "System.Security,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_SECURITY_ASSEMBLY_IDENTITY_EXACT_REF_W                          L"System.Security,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_SECURITY_ASSEMBLY_IDENTITY_EXACT_REF_S                          S"System.Security,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_SECURITY_ASSEMBLY_IDENTITY_EXACT_REF_T                      TEXT("System.Security,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil")
#define SYSTEM_SECURITY_ASSEMBLY_NAME                                            System.Security
#define SYSTEM_SECURITY_ASSEMBLY_NAME_A                                         "System.Security"
#define SYSTEM_SECURITY_ASSEMBLY_NAME_W                                        L"System.Security"
#define SYSTEM_SECURITY_ASSEMBLY_NAME_S                                        S"System.Security"
#define SYSTEM_SECURITY_ASSEMBLY_NAME_T                                    TEXT("System.Security")
#define SYSTEM_SECURITY_ASSEMBLY_VERSION                                         2.0.3600.0
#define SYSTEM_SECURITY_ASSEMBLY_VERSION_A                                      "2.0.3600.0"
#define SYSTEM_SECURITY_ASSEMBLY_VERSION_W                                     L"2.0.3600.0"
#define SYSTEM_SECURITY_ASSEMBLY_VERSION_S                                     S"2.0.3600.0"
#define SYSTEM_SECURITY_ASSEMBLY_VERSION_T                                 TEXT("2.0.3600.0")
#define SYSTEM_SECURITY_ASSEMBLY_VERSION_IL                                       2:0:3600:0
#define SYSTEM_SECURITY_ASSEMBLY_PUBLIC_KEY                                      2411111111111111111111111111111111111112
#define SYSTEM_SECURITY_ASSEMBLY_PUBLIC_KEY_A                                   "2411111111111111111111111111111111111112"
#define SYSTEM_SECURITY_ASSEMBLY_PUBLIC_KEY_W                                  L"2411111111111111111111111111111111111112"
#define SYSTEM_SECURITY_ASSEMBLY_PUBLIC_KEY_S                                  S"2411111111111111111111111111111111111112"
#define SYSTEM_SECURITY_ASSEMBLY_PUBLIC_KEY_T                              TEXT("2411111111111111111111111111111111111112")
#define SYSTEM_SECURITY_ASSEMBLY_PUBLIC_KEY_IL                                   (24 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 12 )
#define SYSTEM_SECURITY_ASSEMBLY_PUBLIC_KEY_TOKEN                                b03f5f7f11d50a3a
#define SYSTEM_SECURITY_ASSEMBLY_PUBLIC_KEY_TOKEN_A                             "b03f5f7f11d50a3a"
#define SYSTEM_SECURITY_ASSEMBLY_PUBLIC_KEY_TOKEN_W                            L"b03f5f7f11d50a3a"
#define SYSTEM_SECURITY_ASSEMBLY_PUBLIC_KEY_TOKEN_S                            S"b03f5f7f11d50a3a"
#define SYSTEM_SECURITY_ASSEMBLY_PUBLIC_KEY_TOKEN_T                        TEXT("b03f5f7f11d50a3a")
#define SYSTEM_SECURITY_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                             (b0 3f 5f 7f 11 d5 0a 3a )
#define SYSTEM_SECURITY_ASSEMBLY_CULTURE                                         neutral
#define SYSTEM_SECURITY_ASSEMBLY_CULTURE_A                                      "neutral"
#define SYSTEM_SECURITY_ASSEMBLY_CULTURE_W                                     L"neutral"
#define SYSTEM_SECURITY_ASSEMBLY_CULTURE_S                                     S"neutral"
#define SYSTEM_SECURITY_ASSEMBLY_CULTURE_T                                 TEXT("neutral")
#define SYSTEM_SECURITY_ASSEMBLY_PROCESSOR_ARCHITECTURE                          msil
#define SYSTEM_SECURITY_ASSEMBLY_PROCESSOR_ARCHITECTURE_A                       "msil"
#define SYSTEM_SECURITY_ASSEMBLY_PROCESSOR_ARCHITECTURE_W                      L"msil"
#define SYSTEM_SECURITY_ASSEMBLY_PROCESSOR_ARCHITECTURE_S                      S"msil"
#define SYSTEM_SECURITY_ASSEMBLY_PROCESSOR_ARCHITECTURE_T                  TEXT("msil")
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_DEF                          System.EnterpriseServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_DEF_A                       "System.EnterpriseServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_DEF_W                      L"System.EnterpriseServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_DEF_S                      S"System.EnterpriseServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_DEF_T                  TEXT("System.EnterpriseServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil")
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_REF                          System.EnterpriseServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_REF_A                       "System.EnterpriseServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_REF_W                      L"System.EnterpriseServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_REF_S                      S"System.EnterpriseServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_REF_T                  TEXT("System.EnterpriseServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_FRIEND_REF                   System.EnterpriseServices,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_FRIEND_REF_A                "System.EnterpriseServices,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_FRIEND_REF_W               L"System.EnterpriseServices,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_FRIEND_REF_S               S"System.EnterpriseServices,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_FRIEND_REF_T           TEXT("System.EnterpriseServices,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_EXACT_REF                    System.EnterpriseServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_EXACT_REF_A                 "System.EnterpriseServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_EXACT_REF_W                L"System.EnterpriseServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_EXACT_REF_S                S"System.EnterpriseServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_EXACT_REF_T            TEXT("System.EnterpriseServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil")
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_NAME                                  System.EnterpriseServices
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_NAME_A                               "System.EnterpriseServices"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_NAME_W                              L"System.EnterpriseServices"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_NAME_S                              S"System.EnterpriseServices"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_NAME_T                          TEXT("System.EnterpriseServices")
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_VERSION                               2.0.3600.0
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_VERSION_A                            "2.0.3600.0"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_VERSION_W                           L"2.0.3600.0"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_VERSION_S                           S"2.0.3600.0"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_VERSION_T                       TEXT("2.0.3600.0")
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_VERSION_IL                             2:0:3600:0
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_PUBLIC_KEY                            2411111111111111111111111111111111111112
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_PUBLIC_KEY_A                         "2411111111111111111111111111111111111112"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_PUBLIC_KEY_W                        L"2411111111111111111111111111111111111112"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_PUBLIC_KEY_S                        S"2411111111111111111111111111111111111112"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_PUBLIC_KEY_T                    TEXT("2411111111111111111111111111111111111112")
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_PUBLIC_KEY_IL                         (24 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 12 )
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN                      b03f5f7f11d50a3a
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN_A                   "b03f5f7f11d50a3a"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN_W                  L"b03f5f7f11d50a3a"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN_S                  S"b03f5f7f11d50a3a"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN_T              TEXT("b03f5f7f11d50a3a")
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                   (b0 3f 5f 7f 11 d5 0a 3a )
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_CULTURE                               neutral
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_CULTURE_A                            "neutral"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_CULTURE_W                           L"neutral"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_CULTURE_S                           S"neutral"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_CULTURE_T                       TEXT("neutral")
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_PROCESSOR_ARCHITECTURE                msil
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_PROCESSOR_ARCHITECTURE_A             "msil"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_PROCESSOR_ARCHITECTURE_W            L"msil"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_PROCESSOR_ARCHITECTURE_S            S"msil"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_PROCESSOR_ARCHITECTURE_T        TEXT("msil")
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_DEF                                  System.Management,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_DEF_A                               "System.Management,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_DEF_W                              L"System.Management,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_DEF_S                              S"System.Management,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_DEF_T                          TEXT("System.Management,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil")
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_REF                                  System.Management,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_REF_A                               "System.Management,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_REF_W                              L"System.Management,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_REF_S                              S"System.Management,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_REF_T                          TEXT("System.Management,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_FRIEND_REF                           System.Management,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_FRIEND_REF_A                        "System.Management,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_FRIEND_REF_W                       L"System.Management,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_FRIEND_REF_S                       S"System.Management,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_FRIEND_REF_T                   TEXT("System.Management,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_EXACT_REF                            System.Management,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_EXACT_REF_A                         "System.Management,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_EXACT_REF_W                        L"System.Management,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_EXACT_REF_S                        S"System.Management,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_EXACT_REF_T                    TEXT("System.Management,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil")
#define SYSTEM_MANAGEMENT_ASSEMBLY_NAME                                          System.Management
#define SYSTEM_MANAGEMENT_ASSEMBLY_NAME_A                                       "System.Management"
#define SYSTEM_MANAGEMENT_ASSEMBLY_NAME_W                                      L"System.Management"
#define SYSTEM_MANAGEMENT_ASSEMBLY_NAME_S                                      S"System.Management"
#define SYSTEM_MANAGEMENT_ASSEMBLY_NAME_T                                  TEXT("System.Management")
#define SYSTEM_MANAGEMENT_ASSEMBLY_VERSION                                       2.0.3600.0
#define SYSTEM_MANAGEMENT_ASSEMBLY_VERSION_A                                    "2.0.3600.0"
#define SYSTEM_MANAGEMENT_ASSEMBLY_VERSION_W                                   L"2.0.3600.0"
#define SYSTEM_MANAGEMENT_ASSEMBLY_VERSION_S                                   S"2.0.3600.0"
#define SYSTEM_MANAGEMENT_ASSEMBLY_VERSION_T                               TEXT("2.0.3600.0")
#define SYSTEM_MANAGEMENT_ASSEMBLY_VERSION_IL                                     2:0:3600:0
#define SYSTEM_MANAGEMENT_ASSEMBLY_PUBLIC_KEY                                    2411111111111111111111111111111111111112
#define SYSTEM_MANAGEMENT_ASSEMBLY_PUBLIC_KEY_A                                 "2411111111111111111111111111111111111112"
#define SYSTEM_MANAGEMENT_ASSEMBLY_PUBLIC_KEY_W                                L"2411111111111111111111111111111111111112"
#define SYSTEM_MANAGEMENT_ASSEMBLY_PUBLIC_KEY_S                                S"2411111111111111111111111111111111111112"
#define SYSTEM_MANAGEMENT_ASSEMBLY_PUBLIC_KEY_T                            TEXT("2411111111111111111111111111111111111112")
#define SYSTEM_MANAGEMENT_ASSEMBLY_PUBLIC_KEY_IL                                 (24 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 12 )
#define SYSTEM_MANAGEMENT_ASSEMBLY_PUBLIC_KEY_TOKEN                              b03f5f7f11d50a3a
#define SYSTEM_MANAGEMENT_ASSEMBLY_PUBLIC_KEY_TOKEN_A                           "b03f5f7f11d50a3a"
#define SYSTEM_MANAGEMENT_ASSEMBLY_PUBLIC_KEY_TOKEN_W                          L"b03f5f7f11d50a3a"
#define SYSTEM_MANAGEMENT_ASSEMBLY_PUBLIC_KEY_TOKEN_S                          S"b03f5f7f11d50a3a"
#define SYSTEM_MANAGEMENT_ASSEMBLY_PUBLIC_KEY_TOKEN_T                      TEXT("b03f5f7f11d50a3a")
#define SYSTEM_MANAGEMENT_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                           (b0 3f 5f 7f 11 d5 0a 3a )
#define SYSTEM_MANAGEMENT_ASSEMBLY_CULTURE                                       neutral
#define SYSTEM_MANAGEMENT_ASSEMBLY_CULTURE_A                                    "neutral"
#define SYSTEM_MANAGEMENT_ASSEMBLY_CULTURE_W                                   L"neutral"
#define SYSTEM_MANAGEMENT_ASSEMBLY_CULTURE_S                                   S"neutral"
#define SYSTEM_MANAGEMENT_ASSEMBLY_CULTURE_T                               TEXT("neutral")
#define SYSTEM_MANAGEMENT_ASSEMBLY_PROCESSOR_ARCHITECTURE                        msil
#define SYSTEM_MANAGEMENT_ASSEMBLY_PROCESSOR_ARCHITECTURE_A                     "msil"
#define SYSTEM_MANAGEMENT_ASSEMBLY_PROCESSOR_ARCHITECTURE_W                    L"msil"
#define SYSTEM_MANAGEMENT_ASSEMBLY_PROCESSOR_ARCHITECTURE_S                    S"msil"
#define SYSTEM_MANAGEMENT_ASSEMBLY_PROCESSOR_ARCHITECTURE_T                TEXT("msil")
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_DEF                           System.DirectoryServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_DEF_A                        "System.DirectoryServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_DEF_W                       L"System.DirectoryServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_DEF_S                       S"System.DirectoryServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_DEF_T                   TEXT("System.DirectoryServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil")
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_REF                           System.DirectoryServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_REF_A                        "System.DirectoryServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_REF_W                       L"System.DirectoryServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_REF_S                       S"System.DirectoryServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_REF_T                   TEXT("System.DirectoryServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_FRIEND_REF                    System.DirectoryServices,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_FRIEND_REF_A                 "System.DirectoryServices,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_FRIEND_REF_W                L"System.DirectoryServices,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_FRIEND_REF_S                S"System.DirectoryServices,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_FRIEND_REF_T            TEXT("System.DirectoryServices,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_EXACT_REF                     System.DirectoryServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_EXACT_REF_A                  "System.DirectoryServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_EXACT_REF_W                 L"System.DirectoryServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_EXACT_REF_S                 S"System.DirectoryServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_EXACT_REF_T             TEXT("System.DirectoryServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil")
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_NAME                                   System.DirectoryServices
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_NAME_A                                "System.DirectoryServices"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_NAME_W                               L"System.DirectoryServices"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_NAME_S                               S"System.DirectoryServices"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_NAME_T                           TEXT("System.DirectoryServices")
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_VERSION                                2.0.3600.0
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_VERSION_A                             "2.0.3600.0"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_VERSION_W                            L"2.0.3600.0"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_VERSION_S                            S"2.0.3600.0"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_VERSION_T                        TEXT("2.0.3600.0")
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_VERSION_IL                              2:0:3600:0
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_PUBLIC_KEY                             2411111111111111111111111111111111111112
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_PUBLIC_KEY_A                          "2411111111111111111111111111111111111112"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_PUBLIC_KEY_W                         L"2411111111111111111111111111111111111112"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_PUBLIC_KEY_S                         S"2411111111111111111111111111111111111112"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_PUBLIC_KEY_T                     TEXT("2411111111111111111111111111111111111112")
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_PUBLIC_KEY_IL                          (24 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 12 )
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN                       b03f5f7f11d50a3a
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN_A                    "b03f5f7f11d50a3a"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN_W                   L"b03f5f7f11d50a3a"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN_S                   S"b03f5f7f11d50a3a"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN_T               TEXT("b03f5f7f11d50a3a")
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                    (b0 3f 5f 7f 11 d5 0a 3a )
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_CULTURE                                neutral
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_CULTURE_A                             "neutral"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_CULTURE_W                            L"neutral"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_CULTURE_S                            S"neutral"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_CULTURE_T                        TEXT("neutral")
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_PROCESSOR_ARCHITECTURE                 msil
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_PROCESSOR_ARCHITECTURE_A              "msil"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_PROCESSOR_ARCHITECTURE_W             L"msil"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_PROCESSOR_ARCHITECTURE_S             S"msil"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_PROCESSOR_ARCHITECTURE_T         TEXT("msil")
#define SYSTEM_DATA_SQLXML_ASSEMBLY_IDENTITY_DEF                                 System.Data.SqlXml,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
#define SYSTEM_DATA_SQLXML_ASSEMBLY_IDENTITY_DEF_A                              "System.Data.SqlXml,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_IDENTITY_DEF_W                             L"System.Data.SqlXml,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_IDENTITY_DEF_S                             S"System.Data.SqlXml,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_IDENTITY_DEF_T                         TEXT("System.Data.SqlXml,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil")
#define SYSTEM_DATA_SQLXML_ASSEMBLY_IDENTITY_REF                                 System.Data.SqlXml,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DATA_SQLXML_ASSEMBLY_IDENTITY_REF_A                              "System.Data.SqlXml,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_IDENTITY_REF_W                             L"System.Data.SqlXml,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_IDENTITY_REF_S                             S"System.Data.SqlXml,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_IDENTITY_REF_T                         TEXT("System.Data.SqlXml,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DATA_SQLXML_ASSEMBLY_IDENTITY_FRIEND_REF                          System.Data.SqlXml,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DATA_SQLXML_ASSEMBLY_IDENTITY_FRIEND_REF_A                       "System.Data.SqlXml,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_IDENTITY_FRIEND_REF_W                      L"System.Data.SqlXml,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_IDENTITY_FRIEND_REF_S                      S"System.Data.SqlXml,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_IDENTITY_FRIEND_REF_T                  TEXT("System.Data.SqlXml,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DATA_SQLXML_ASSEMBLY_IDENTITY_EXACT_REF                           System.Data.SqlXml,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
#define SYSTEM_DATA_SQLXML_ASSEMBLY_IDENTITY_EXACT_REF_A                        "System.Data.SqlXml,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_IDENTITY_EXACT_REF_W                       L"System.Data.SqlXml,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_IDENTITY_EXACT_REF_S                       S"System.Data.SqlXml,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_IDENTITY_EXACT_REF_T                   TEXT("System.Data.SqlXml,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil")
#define SYSTEM_DATA_SQLXML_ASSEMBLY_NAME                                         System.Data.SqlXml
#define SYSTEM_DATA_SQLXML_ASSEMBLY_NAME_A                                      "System.Data.SqlXml"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_NAME_W                                     L"System.Data.SqlXml"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_NAME_S                                     S"System.Data.SqlXml"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_NAME_T                                 TEXT("System.Data.SqlXml")
#define SYSTEM_DATA_SQLXML_ASSEMBLY_VERSION                                      2.0.3600.0
#define SYSTEM_DATA_SQLXML_ASSEMBLY_VERSION_A                                   "2.0.3600.0"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_VERSION_W                                  L"2.0.3600.0"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_VERSION_S                                  S"2.0.3600.0"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_VERSION_T                              TEXT("2.0.3600.0")
#define SYSTEM_DATA_SQLXML_ASSEMBLY_VERSION_IL                                    2:0:3600:0
#define SYSTEM_DATA_SQLXML_ASSEMBLY_PUBLIC_KEY                                   2411111111111111111111111111111111111112
#define SYSTEM_DATA_SQLXML_ASSEMBLY_PUBLIC_KEY_A                                "2411111111111111111111111111111111111112"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_PUBLIC_KEY_W                               L"2411111111111111111111111111111111111112"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_PUBLIC_KEY_S                               S"2411111111111111111111111111111111111112"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_PUBLIC_KEY_T                           TEXT("2411111111111111111111111111111111111112")
#define SYSTEM_DATA_SQLXML_ASSEMBLY_PUBLIC_KEY_IL                                (24 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 12 )
#define SYSTEM_DATA_SQLXML_ASSEMBLY_PUBLIC_KEY_TOKEN                             b03f5f7f11d50a3a
#define SYSTEM_DATA_SQLXML_ASSEMBLY_PUBLIC_KEY_TOKEN_A                          "b03f5f7f11d50a3a"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_PUBLIC_KEY_TOKEN_W                         L"b03f5f7f11d50a3a"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_PUBLIC_KEY_TOKEN_S                         S"b03f5f7f11d50a3a"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_PUBLIC_KEY_TOKEN_T                     TEXT("b03f5f7f11d50a3a")
#define SYSTEM_DATA_SQLXML_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                          (b0 3f 5f 7f 11 d5 0a 3a )
#define SYSTEM_DATA_SQLXML_ASSEMBLY_CULTURE                                      neutral
#define SYSTEM_DATA_SQLXML_ASSEMBLY_CULTURE_A                                   "neutral"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_CULTURE_W                                  L"neutral"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_CULTURE_S                                  S"neutral"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_CULTURE_T                              TEXT("neutral")
#define SYSTEM_DATA_SQLXML_ASSEMBLY_PROCESSOR_ARCHITECTURE                       msil
#define SYSTEM_DATA_SQLXML_ASSEMBLY_PROCESSOR_ARCHITECTURE_A                    "msil"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_PROCESSOR_ARCHITECTURE_W                   L"msil"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_PROCESSOR_ARCHITECTURE_S                   S"msil"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_PROCESSOR_ARCHITECTURE_T               TEXT("msil")
#define SYSTEM_MESSAGEBUS_ASSEMBLY_IDENTITY_DEF                                  System.MessageBus,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
#define SYSTEM_MESSAGEBUS_ASSEMBLY_IDENTITY_DEF_A                               "System.MessageBus,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_MESSAGEBUS_ASSEMBLY_IDENTITY_DEF_W                              L"System.MessageBus,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_MESSAGEBUS_ASSEMBLY_IDENTITY_DEF_S                              S"System.MessageBus,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_MESSAGEBUS_ASSEMBLY_IDENTITY_DEF_T                          TEXT("System.MessageBus,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil")
#define SYSTEM_MESSAGEBUS_ASSEMBLY_IDENTITY_REF                                  System.MessageBus,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_MESSAGEBUS_ASSEMBLY_IDENTITY_REF_A                               "System.MessageBus,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_MESSAGEBUS_ASSEMBLY_IDENTITY_REF_W                              L"System.MessageBus,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_MESSAGEBUS_ASSEMBLY_IDENTITY_REF_S                              S"System.MessageBus,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_MESSAGEBUS_ASSEMBLY_IDENTITY_REF_T                          TEXT("System.MessageBus,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_MESSAGEBUS_ASSEMBLY_IDENTITY_FRIEND_REF                           System.MessageBus,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_MESSAGEBUS_ASSEMBLY_IDENTITY_FRIEND_REF_A                        "System.MessageBus,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_MESSAGEBUS_ASSEMBLY_IDENTITY_FRIEND_REF_W                       L"System.MessageBus,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_MESSAGEBUS_ASSEMBLY_IDENTITY_FRIEND_REF_S                       S"System.MessageBus,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_MESSAGEBUS_ASSEMBLY_IDENTITY_FRIEND_REF_T                   TEXT("System.MessageBus,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_MESSAGEBUS_ASSEMBLY_IDENTITY_EXACT_REF                            System.MessageBus,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
#define SYSTEM_MESSAGEBUS_ASSEMBLY_IDENTITY_EXACT_REF_A                         "System.MessageBus,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_MESSAGEBUS_ASSEMBLY_IDENTITY_EXACT_REF_W                        L"System.MessageBus,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_MESSAGEBUS_ASSEMBLY_IDENTITY_EXACT_REF_S                        S"System.MessageBus,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_MESSAGEBUS_ASSEMBLY_IDENTITY_EXACT_REF_T                    TEXT("System.MessageBus,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil")
#define SYSTEM_MESSAGEBUS_ASSEMBLY_NAME                                          System.MessageBus
#define SYSTEM_MESSAGEBUS_ASSEMBLY_NAME_A                                       "System.MessageBus"
#define SYSTEM_MESSAGEBUS_ASSEMBLY_NAME_W                                      L"System.MessageBus"
#define SYSTEM_MESSAGEBUS_ASSEMBLY_NAME_S                                      S"System.MessageBus"
#define SYSTEM_MESSAGEBUS_ASSEMBLY_NAME_T                                  TEXT("System.MessageBus")
#define SYSTEM_MESSAGEBUS_ASSEMBLY_VERSION                                       2.0.3600.0
#define SYSTEM_MESSAGEBUS_ASSEMBLY_VERSION_A                                    "2.0.3600.0"
#define SYSTEM_MESSAGEBUS_ASSEMBLY_VERSION_W                                   L"2.0.3600.0"
#define SYSTEM_MESSAGEBUS_ASSEMBLY_VERSION_S                                   S"2.0.3600.0"
#define SYSTEM_MESSAGEBUS_ASSEMBLY_VERSION_T                               TEXT("2.0.3600.0")
#define SYSTEM_MESSAGEBUS_ASSEMBLY_VERSION_IL                                     2:0:3600:0
#define SYSTEM_MESSAGEBUS_ASSEMBLY_PUBLIC_KEY                                    00000000000000000400000000000000
#define SYSTEM_MESSAGEBUS_ASSEMBLY_PUBLIC_KEY_A                                 "00000000000000000400000000000000"
#define SYSTEM_MESSAGEBUS_ASSEMBLY_PUBLIC_KEY_W                                L"00000000000000000400000000000000"
#define SYSTEM_MESSAGEBUS_ASSEMBLY_PUBLIC_KEY_S                                S"00000000000000000400000000000000"
#define SYSTEM_MESSAGEBUS_ASSEMBLY_PUBLIC_KEY_T                            TEXT("00000000000000000400000000000000")
#define SYSTEM_MESSAGEBUS_ASSEMBLY_PUBLIC_KEY_IL                                 (00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00 )
#define SYSTEM_MESSAGEBUS_ASSEMBLY_PUBLIC_KEY_TOKEN                              b77a5c561934e089
#define SYSTEM_MESSAGEBUS_ASSEMBLY_PUBLIC_KEY_TOKEN_A                           "b77a5c561934e089"
#define SYSTEM_MESSAGEBUS_ASSEMBLY_PUBLIC_KEY_TOKEN_W                          L"b77a5c561934e089"
#define SYSTEM_MESSAGEBUS_ASSEMBLY_PUBLIC_KEY_TOKEN_S                          S"b77a5c561934e089"
#define SYSTEM_MESSAGEBUS_ASSEMBLY_PUBLIC_KEY_TOKEN_T                      TEXT("b77a5c561934e089")
#define SYSTEM_MESSAGEBUS_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                           (b7 7a 5c 56 19 34 e0 89 )
#define SYSTEM_MESSAGEBUS_ASSEMBLY_CULTURE                                       neutral
#define SYSTEM_MESSAGEBUS_ASSEMBLY_CULTURE_A                                    "neutral"
#define SYSTEM_MESSAGEBUS_ASSEMBLY_CULTURE_W                                   L"neutral"
#define SYSTEM_MESSAGEBUS_ASSEMBLY_CULTURE_S                                   S"neutral"
#define SYSTEM_MESSAGEBUS_ASSEMBLY_CULTURE_T                               TEXT("neutral")
#define SYSTEM_MESSAGEBUS_ASSEMBLY_PROCESSOR_ARCHITECTURE                        msil
#define SYSTEM_MESSAGEBUS_ASSEMBLY_PROCESSOR_ARCHITECTURE_A                     "msil"
#define SYSTEM_MESSAGEBUS_ASSEMBLY_PROCESSOR_ARCHITECTURE_W                    L"msil"
#define SYSTEM_MESSAGEBUS_ASSEMBLY_PROCESSOR_ARCHITECTURE_S                    S"msil"
#define SYSTEM_MESSAGEBUS_ASSEMBLY_PROCESSOR_ARCHITECTURE_T                TEXT("msil")
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_IDENTITY_DEF                           System.Data.ObjectSpaces,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_IDENTITY_DEF_A                        "System.Data.ObjectSpaces,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_IDENTITY_DEF_W                       L"System.Data.ObjectSpaces,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_IDENTITY_DEF_S                       S"System.Data.ObjectSpaces,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_IDENTITY_DEF_T                   TEXT("System.Data.ObjectSpaces,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil")
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_IDENTITY_REF                           System.Data.ObjectSpaces,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_IDENTITY_REF_A                        "System.Data.ObjectSpaces,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_IDENTITY_REF_W                       L"System.Data.ObjectSpaces,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_IDENTITY_REF_S                       S"System.Data.ObjectSpaces,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_IDENTITY_REF_T                   TEXT("System.Data.ObjectSpaces,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_IDENTITY_FRIEND_REF                    System.Data.ObjectSpaces,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_IDENTITY_FRIEND_REF_A                 "System.Data.ObjectSpaces,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_IDENTITY_FRIEND_REF_W                L"System.Data.ObjectSpaces,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_IDENTITY_FRIEND_REF_S                S"System.Data.ObjectSpaces,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_IDENTITY_FRIEND_REF_T            TEXT("System.Data.ObjectSpaces,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_IDENTITY_EXACT_REF                     System.Data.ObjectSpaces,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_IDENTITY_EXACT_REF_A                  "System.Data.ObjectSpaces,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_IDENTITY_EXACT_REF_W                 L"System.Data.ObjectSpaces,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_IDENTITY_EXACT_REF_S                 S"System.Data.ObjectSpaces,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_IDENTITY_EXACT_REF_T             TEXT("System.Data.ObjectSpaces,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil")
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_NAME                                   System.Data.ObjectSpaces
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_NAME_A                                "System.Data.ObjectSpaces"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_NAME_W                               L"System.Data.ObjectSpaces"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_NAME_S                               S"System.Data.ObjectSpaces"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_NAME_T                           TEXT("System.Data.ObjectSpaces")
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_VERSION                                2.0.3600.0
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_VERSION_A                             "2.0.3600.0"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_VERSION_W                            L"2.0.3600.0"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_VERSION_S                            S"2.0.3600.0"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_VERSION_T                        TEXT("2.0.3600.0")
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_VERSION_IL                              2:0:3600:0
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_PUBLIC_KEY                             00000000000000000400000000000000
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_PUBLIC_KEY_A                          "00000000000000000400000000000000"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_PUBLIC_KEY_W                         L"00000000000000000400000000000000"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_PUBLIC_KEY_S                         S"00000000000000000400000000000000"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_PUBLIC_KEY_T                     TEXT("00000000000000000400000000000000")
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_PUBLIC_KEY_IL                          (00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00 )
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_PUBLIC_KEY_TOKEN                       b77a5c561934e089
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_PUBLIC_KEY_TOKEN_A                    "b77a5c561934e089"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_PUBLIC_KEY_TOKEN_W                   L"b77a5c561934e089"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_PUBLIC_KEY_TOKEN_S                   S"b77a5c561934e089"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_PUBLIC_KEY_TOKEN_T               TEXT("b77a5c561934e089")
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                    (b7 7a 5c 56 19 34 e0 89 )
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_CULTURE                                neutral
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_CULTURE_A                             "neutral"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_CULTURE_W                            L"neutral"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_CULTURE_S                            S"neutral"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_CULTURE_T                        TEXT("neutral")
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_PROCESSOR_ARCHITECTURE                 msil
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_PROCESSOR_ARCHITECTURE_A              "msil"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_PROCESSOR_ARCHITECTURE_W             L"msil"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_PROCESSOR_ARCHITECTURE_S             S"msil"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_PROCESSOR_ARCHITECTURE_T         TEXT("msil")
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_DEF                           System.Data.OracleClient,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_DEF_A                        "System.Data.OracleClient,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_DEF_W                       L"System.Data.OracleClient,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_DEF_S                       S"System.Data.OracleClient,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_DEF_T                   TEXT("System.Data.OracleClient,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil")
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_REF                           System.Data.OracleClient,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_REF_A                        "System.Data.OracleClient,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_REF_W                       L"System.Data.OracleClient,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_REF_S                       S"System.Data.OracleClient,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_REF_T                   TEXT("System.Data.OracleClient,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_FRIEND_REF                    System.Data.OracleClient,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_FRIEND_REF_A                 "System.Data.OracleClient,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_FRIEND_REF_W                L"System.Data.OracleClient,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_FRIEND_REF_S                S"System.Data.OracleClient,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_FRIEND_REF_T            TEXT("System.Data.OracleClient,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_EXACT_REF                     System.Data.OracleClient,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_EXACT_REF_A                  "System.Data.OracleClient,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_EXACT_REF_W                 L"System.Data.OracleClient,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_EXACT_REF_S                 S"System.Data.OracleClient,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_EXACT_REF_T             TEXT("System.Data.OracleClient,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil")
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_NAME                                   System.Data.OracleClient
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_NAME_A                                "System.Data.OracleClient"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_NAME_W                               L"System.Data.OracleClient"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_NAME_S                               S"System.Data.OracleClient"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_NAME_T                           TEXT("System.Data.OracleClient")
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_VERSION                                2.0.3600.0
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_VERSION_A                             "2.0.3600.0"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_VERSION_W                            L"2.0.3600.0"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_VERSION_S                            S"2.0.3600.0"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_VERSION_T                        TEXT("2.0.3600.0")
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_VERSION_IL                              2:0:3600:0
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_PUBLIC_KEY                             00000000000000000400000000000000
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_PUBLIC_KEY_A                          "00000000000000000400000000000000"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_PUBLIC_KEY_W                         L"00000000000000000400000000000000"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_PUBLIC_KEY_S                         S"00000000000000000400000000000000"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_PUBLIC_KEY_T                     TEXT("00000000000000000400000000000000")
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_PUBLIC_KEY_IL                          (00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00 )
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_PUBLIC_KEY_TOKEN                       b77a5c561934e089
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_PUBLIC_KEY_TOKEN_A                    "b77a5c561934e089"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_PUBLIC_KEY_TOKEN_W                   L"b77a5c561934e089"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_PUBLIC_KEY_TOKEN_S                   S"b77a5c561934e089"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_PUBLIC_KEY_TOKEN_T               TEXT("b77a5c561934e089")
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                    (b7 7a 5c 56 19 34 e0 89 )
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_CULTURE                                neutral
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_CULTURE_A                             "neutral"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_CULTURE_W                            L"neutral"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_CULTURE_S                            S"neutral"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_CULTURE_T                        TEXT("neutral")
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_PROCESSOR_ARCHITECTURE                 msil
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_PROCESSOR_ARCHITECTURE_A              "msil"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_PROCESSOR_ARCHITECTURE_W             L"msil"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_PROCESSOR_ARCHITECTURE_S             S"msil"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_PROCESSOR_ARCHITECTURE_T         TEXT("msil")
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_IDENTITY_DEF                         System.DeploymentFramework,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_IDENTITY_DEF_A                      "System.DeploymentFramework,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_IDENTITY_DEF_W                     L"System.DeploymentFramework,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_IDENTITY_DEF_S                     S"System.DeploymentFramework,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_IDENTITY_DEF_T                 TEXT("System.DeploymentFramework,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil")
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_IDENTITY_REF                         System.DeploymentFramework,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_IDENTITY_REF_A                      "System.DeploymentFramework,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_IDENTITY_REF_W                     L"System.DeploymentFramework,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_IDENTITY_REF_S                     S"System.DeploymentFramework,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_IDENTITY_REF_T                 TEXT("System.DeploymentFramework,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_IDENTITY_FRIEND_REF                  System.DeploymentFramework,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_IDENTITY_FRIEND_REF_A               "System.DeploymentFramework,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_IDENTITY_FRIEND_REF_W              L"System.DeploymentFramework,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_IDENTITY_FRIEND_REF_S              S"System.DeploymentFramework,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_IDENTITY_FRIEND_REF_T          TEXT("System.DeploymentFramework,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_IDENTITY_EXACT_REF                   System.DeploymentFramework,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_IDENTITY_EXACT_REF_A                "System.DeploymentFramework,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_IDENTITY_EXACT_REF_W               L"System.DeploymentFramework,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_IDENTITY_EXACT_REF_S               S"System.DeploymentFramework,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_IDENTITY_EXACT_REF_T           TEXT("System.DeploymentFramework,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil")
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_NAME                                 System.DeploymentFramework
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_NAME_A                              "System.DeploymentFramework"
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_NAME_W                             L"System.DeploymentFramework"
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_NAME_S                             S"System.DeploymentFramework"
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_NAME_T                         TEXT("System.DeploymentFramework")
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_VERSION                              2.0.3600.0
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_VERSION_A                           "2.0.3600.0"
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_VERSION_W                          L"2.0.3600.0"
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_VERSION_S                          S"2.0.3600.0"
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_VERSION_T                      TEXT("2.0.3600.0")
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_VERSION_IL                            2:0:3600:0
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_PUBLIC_KEY                           2411111111111111111111111111111111111112
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_PUBLIC_KEY_A                        "2411111111111111111111111111111111111112"
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_PUBLIC_KEY_W                       L"2411111111111111111111111111111111111112"
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_PUBLIC_KEY_S                       S"2411111111111111111111111111111111111112"
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_PUBLIC_KEY_T                   TEXT("2411111111111111111111111111111111111112")
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_PUBLIC_KEY_IL                        (24 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 12 )
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_PUBLIC_KEY_TOKEN                     b03f5f7f11d50a3a
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_PUBLIC_KEY_TOKEN_A                  "b03f5f7f11d50a3a"
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_PUBLIC_KEY_TOKEN_W                 L"b03f5f7f11d50a3a"
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_PUBLIC_KEY_TOKEN_S                 S"b03f5f7f11d50a3a"
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_PUBLIC_KEY_TOKEN_T             TEXT("b03f5f7f11d50a3a")
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                  (b0 3f 5f 7f 11 d5 0a 3a )
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_CULTURE                              neutral
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_CULTURE_A                           "neutral"
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_CULTURE_W                          L"neutral"
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_CULTURE_S                          S"neutral"
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_CULTURE_T                      TEXT("neutral")
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_PROCESSOR_ARCHITECTURE               msil
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_PROCESSOR_ARCHITECTURE_A            "msil"
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_PROCESSOR_ARCHITECTURE_W           L"msil"
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_PROCESSOR_ARCHITECTURE_S           S"msil"
#define SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_PROCESSOR_ARCHITECTURE_T       TEXT("msil")
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_DEF                              System.Drawing.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_DEF_A                           "System.Drawing.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_DEF_W                          L"System.Drawing.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_DEF_S                          S"System.Drawing.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_DEF_T                      TEXT("System.Drawing.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil")
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_REF                              System.Drawing.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_REF_A                           "System.Drawing.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_REF_W                          L"System.Drawing.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_REF_S                          S"System.Drawing.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_REF_T                      TEXT("System.Drawing.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_FRIEND_REF                       System.Drawing.Design,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_FRIEND_REF_A                    "System.Drawing.Design,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_FRIEND_REF_W                   L"System.Drawing.Design,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_FRIEND_REF_S                   S"System.Drawing.Design,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_FRIEND_REF_T               TEXT("System.Drawing.Design,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_EXACT_REF                        System.Drawing.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_EXACT_REF_A                     "System.Drawing.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_EXACT_REF_W                    L"System.Drawing.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_EXACT_REF_S                    S"System.Drawing.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_EXACT_REF_T                TEXT("System.Drawing.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil")
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_NAME                                      System.Drawing.Design
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_NAME_A                                   "System.Drawing.Design"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_NAME_W                                  L"System.Drawing.Design"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_NAME_S                                  S"System.Drawing.Design"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_NAME_T                              TEXT("System.Drawing.Design")
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_VERSION                                   2.0.3600.0
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_VERSION_A                                "2.0.3600.0"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_VERSION_W                               L"2.0.3600.0"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_VERSION_S                               S"2.0.3600.0"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_VERSION_T                           TEXT("2.0.3600.0")
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_VERSION_IL                                 2:0:3600:0
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_PUBLIC_KEY                                2411111111111111111111111111111111111112
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_PUBLIC_KEY_A                             "2411111111111111111111111111111111111112"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_PUBLIC_KEY_W                            L"2411111111111111111111111111111111111112"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_PUBLIC_KEY_S                            S"2411111111111111111111111111111111111112"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_PUBLIC_KEY_T                        TEXT("2411111111111111111111111111111111111112")
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_PUBLIC_KEY_IL                             (24 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 12 )
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_PUBLIC_KEY_TOKEN                          b03f5f7f11d50a3a
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_PUBLIC_KEY_TOKEN_A                       "b03f5f7f11d50a3a"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_PUBLIC_KEY_TOKEN_W                      L"b03f5f7f11d50a3a"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_PUBLIC_KEY_TOKEN_S                      S"b03f5f7f11d50a3a"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_PUBLIC_KEY_TOKEN_T                  TEXT("b03f5f7f11d50a3a")
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                       (b0 3f 5f 7f 11 d5 0a 3a )
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_CULTURE                                   neutral
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_CULTURE_A                                "neutral"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_CULTURE_W                               L"neutral"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_CULTURE_S                               S"neutral"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_CULTURE_T                           TEXT("neutral")
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_PROCESSOR_ARCHITECTURE                    msil
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_PROCESSOR_ARCHITECTURE_A                 "msil"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_PROCESSOR_ARCHITECTURE_W                L"msil"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_PROCESSOR_ARCHITECTURE_S                S"msil"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_PROCESSOR_ARCHITECTURE_T            TEXT("msil")
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_IDENTITY_DEF                            System.MessageBus.Tools,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_IDENTITY_DEF_A                         "System.MessageBus.Tools,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_IDENTITY_DEF_W                        L"System.MessageBus.Tools,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_IDENTITY_DEF_S                        S"System.MessageBus.Tools,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_IDENTITY_DEF_T                    TEXT("System.MessageBus.Tools,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil")
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_IDENTITY_REF                            System.MessageBus.Tools,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_IDENTITY_REF_A                         "System.MessageBus.Tools,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_IDENTITY_REF_W                        L"System.MessageBus.Tools,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_IDENTITY_REF_S                        S"System.MessageBus.Tools,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_IDENTITY_REF_T                    TEXT("System.MessageBus.Tools,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_IDENTITY_FRIEND_REF                     System.MessageBus.Tools,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_IDENTITY_FRIEND_REF_A                  "System.MessageBus.Tools,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_IDENTITY_FRIEND_REF_W                 L"System.MessageBus.Tools,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_IDENTITY_FRIEND_REF_S                 S"System.MessageBus.Tools,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_IDENTITY_FRIEND_REF_T             TEXT("System.MessageBus.Tools,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_IDENTITY_EXACT_REF                      System.MessageBus.Tools,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_IDENTITY_EXACT_REF_A                   "System.MessageBus.Tools,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_IDENTITY_EXACT_REF_W                  L"System.MessageBus.Tools,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_IDENTITY_EXACT_REF_S                  S"System.MessageBus.Tools,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_IDENTITY_EXACT_REF_T              TEXT("System.MessageBus.Tools,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil")
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_NAME                                    System.MessageBus.Tools
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_NAME_A                                 "System.MessageBus.Tools"
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_NAME_W                                L"System.MessageBus.Tools"
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_NAME_S                                S"System.MessageBus.Tools"
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_NAME_T                            TEXT("System.MessageBus.Tools")
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_VERSION                                 2.0.3600.0
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_VERSION_A                              "2.0.3600.0"
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_VERSION_W                             L"2.0.3600.0"
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_VERSION_S                             S"2.0.3600.0"
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_VERSION_T                         TEXT("2.0.3600.0")
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_VERSION_IL                               2:0:3600:0
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_PUBLIC_KEY                              00000000000000000400000000000000
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_PUBLIC_KEY_A                           "00000000000000000400000000000000"
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_PUBLIC_KEY_W                          L"00000000000000000400000000000000"
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_PUBLIC_KEY_S                          S"00000000000000000400000000000000"
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_PUBLIC_KEY_T                      TEXT("00000000000000000400000000000000")
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_PUBLIC_KEY_IL                           (00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00 )
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_PUBLIC_KEY_TOKEN                        b77a5c561934e089
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_PUBLIC_KEY_TOKEN_A                     "b77a5c561934e089"
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_PUBLIC_KEY_TOKEN_W                    L"b77a5c561934e089"
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_PUBLIC_KEY_TOKEN_S                    S"b77a5c561934e089"
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_PUBLIC_KEY_TOKEN_T                TEXT("b77a5c561934e089")
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                     (b7 7a 5c 56 19 34 e0 89 )
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_CULTURE                                 neutral
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_CULTURE_A                              "neutral"
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_CULTURE_W                             L"neutral"
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_CULTURE_S                             S"neutral"
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_CULTURE_T                         TEXT("neutral")
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_PROCESSOR_ARCHITECTURE                  msil
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_PROCESSOR_ARCHITECTURE_A               "msil"
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_PROCESSOR_ARCHITECTURE_W              L"msil"
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_PROCESSOR_ARCHITECTURE_S              S"msil"
#define SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_PROCESSOR_ARCHITECTURE_T          TEXT("msil")
#define SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_DEF                                   System.Messaging,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
#define SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_DEF_A                                "System.Messaging,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_DEF_W                               L"System.Messaging,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_DEF_S                               S"System.Messaging,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_DEF_T                           TEXT("System.Messaging,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil")
#define SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_REF                                   System.Messaging,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_REF_A                                "System.Messaging,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_REF_W                               L"System.Messaging,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_REF_S                               S"System.Messaging,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_REF_T                           TEXT("System.Messaging,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_FRIEND_REF                            System.Messaging,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_FRIEND_REF_A                         "System.Messaging,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_FRIEND_REF_W                        L"System.Messaging,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_FRIEND_REF_S                        S"System.Messaging,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_FRIEND_REF_T                    TEXT("System.Messaging,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_EXACT_REF                             System.Messaging,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
#define SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_EXACT_REF_A                          "System.Messaging,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_EXACT_REF_W                         L"System.Messaging,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_EXACT_REF_S                         S"System.Messaging,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_EXACT_REF_T                     TEXT("System.Messaging,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil")
#define SYSTEM_MESSAGING_ASSEMBLY_NAME                                           System.Messaging
#define SYSTEM_MESSAGING_ASSEMBLY_NAME_A                                        "System.Messaging"
#define SYSTEM_MESSAGING_ASSEMBLY_NAME_W                                       L"System.Messaging"
#define SYSTEM_MESSAGING_ASSEMBLY_NAME_S                                       S"System.Messaging"
#define SYSTEM_MESSAGING_ASSEMBLY_NAME_T                                   TEXT("System.Messaging")
#define SYSTEM_MESSAGING_ASSEMBLY_VERSION                                        2.0.3600.0
#define SYSTEM_MESSAGING_ASSEMBLY_VERSION_A                                     "2.0.3600.0"
#define SYSTEM_MESSAGING_ASSEMBLY_VERSION_W                                    L"2.0.3600.0"
#define SYSTEM_MESSAGING_ASSEMBLY_VERSION_S                                    S"2.0.3600.0"
#define SYSTEM_MESSAGING_ASSEMBLY_VERSION_T                                TEXT("2.0.3600.0")
#define SYSTEM_MESSAGING_ASSEMBLY_VERSION_IL                                      2:0:3600:0
#define SYSTEM_MESSAGING_ASSEMBLY_PUBLIC_KEY                                     2411111111111111111111111111111111111112
#define SYSTEM_MESSAGING_ASSEMBLY_PUBLIC_KEY_A                                  "2411111111111111111111111111111111111112"
#define SYSTEM_MESSAGING_ASSEMBLY_PUBLIC_KEY_W                                 L"2411111111111111111111111111111111111112"
#define SYSTEM_MESSAGING_ASSEMBLY_PUBLIC_KEY_S                                 S"2411111111111111111111111111111111111112"
#define SYSTEM_MESSAGING_ASSEMBLY_PUBLIC_KEY_T                             TEXT("2411111111111111111111111111111111111112")
#define SYSTEM_MESSAGING_ASSEMBLY_PUBLIC_KEY_IL                                  (24 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 12 )
#define SYSTEM_MESSAGING_ASSEMBLY_PUBLIC_KEY_TOKEN                               b03f5f7f11d50a3a
#define SYSTEM_MESSAGING_ASSEMBLY_PUBLIC_KEY_TOKEN_A                            "b03f5f7f11d50a3a"
#define SYSTEM_MESSAGING_ASSEMBLY_PUBLIC_KEY_TOKEN_W                           L"b03f5f7f11d50a3a"
#define SYSTEM_MESSAGING_ASSEMBLY_PUBLIC_KEY_TOKEN_S                           S"b03f5f7f11d50a3a"
#define SYSTEM_MESSAGING_ASSEMBLY_PUBLIC_KEY_TOKEN_T                       TEXT("b03f5f7f11d50a3a")
#define SYSTEM_MESSAGING_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                            (b0 3f 5f 7f 11 d5 0a 3a )
#define SYSTEM_MESSAGING_ASSEMBLY_CULTURE                                        neutral
#define SYSTEM_MESSAGING_ASSEMBLY_CULTURE_A                                     "neutral"
#define SYSTEM_MESSAGING_ASSEMBLY_CULTURE_W                                    L"neutral"
#define SYSTEM_MESSAGING_ASSEMBLY_CULTURE_S                                    S"neutral"
#define SYSTEM_MESSAGING_ASSEMBLY_CULTURE_T                                TEXT("neutral")
#define SYSTEM_MESSAGING_ASSEMBLY_PROCESSOR_ARCHITECTURE                         msil
#define SYSTEM_MESSAGING_ASSEMBLY_PROCESSOR_ARCHITECTURE_A                      "msil"
#define SYSTEM_MESSAGING_ASSEMBLY_PROCESSOR_ARCHITECTURE_W                     L"msil"
#define SYSTEM_MESSAGING_ASSEMBLY_PROCESSOR_ARCHITECTURE_S                     S"msil"
#define SYSTEM_MESSAGING_ASSEMBLY_PROCESSOR_ARCHITECTURE_T                 TEXT("msil")
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_DEF                            System.Runtime.Remoting,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_DEF_A                         "System.Runtime.Remoting,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_DEF_W                        L"System.Runtime.Remoting,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_DEF_S                        S"System.Runtime.Remoting,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_DEF_T                    TEXT("System.Runtime.Remoting,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil")
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_REF                            System.Runtime.Remoting,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_REF_A                         "System.Runtime.Remoting,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_REF_W                        L"System.Runtime.Remoting,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_REF_S                        S"System.Runtime.Remoting,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_REF_T                    TEXT("System.Runtime.Remoting,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_FRIEND_REF                     System.Runtime.Remoting,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_FRIEND_REF_A                  "System.Runtime.Remoting,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_FRIEND_REF_W                 L"System.Runtime.Remoting,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_FRIEND_REF_S                 S"System.Runtime.Remoting,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_FRIEND_REF_T             TEXT("System.Runtime.Remoting,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_EXACT_REF                      System.Runtime.Remoting,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_EXACT_REF_A                   "System.Runtime.Remoting,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_EXACT_REF_W                  L"System.Runtime.Remoting,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_EXACT_REF_S                  S"System.Runtime.Remoting,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_EXACT_REF_T              TEXT("System.Runtime.Remoting,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil")
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_NAME                                    System.Runtime.Remoting
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_NAME_A                                 "System.Runtime.Remoting"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_NAME_W                                L"System.Runtime.Remoting"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_NAME_S                                S"System.Runtime.Remoting"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_NAME_T                            TEXT("System.Runtime.Remoting")
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_VERSION                                 2.0.3600.0
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_VERSION_A                              "2.0.3600.0"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_VERSION_W                             L"2.0.3600.0"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_VERSION_S                             S"2.0.3600.0"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_VERSION_T                         TEXT("2.0.3600.0")
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_VERSION_IL                               2:0:3600:0
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_PUBLIC_KEY                              00000000000000000400000000000000
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_PUBLIC_KEY_A                           "00000000000000000400000000000000"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_PUBLIC_KEY_W                          L"00000000000000000400000000000000"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_PUBLIC_KEY_S                          S"00000000000000000400000000000000"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_PUBLIC_KEY_T                      TEXT("00000000000000000400000000000000")
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_PUBLIC_KEY_IL                           (00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00 )
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_PUBLIC_KEY_TOKEN                        b77a5c561934e089
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_PUBLIC_KEY_TOKEN_A                     "b77a5c561934e089"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_PUBLIC_KEY_TOKEN_W                    L"b77a5c561934e089"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_PUBLIC_KEY_TOKEN_S                    S"b77a5c561934e089"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_PUBLIC_KEY_TOKEN_T                TEXT("b77a5c561934e089")
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                     (b7 7a 5c 56 19 34 e0 89 )
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_CULTURE                                 neutral
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_CULTURE_A                              "neutral"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_CULTURE_W                             L"neutral"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_CULTURE_S                             S"neutral"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_CULTURE_T                         TEXT("neutral")
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_PROCESSOR_ARCHITECTURE                  msil
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_PROCESSOR_ARCHITECTURE_A               "msil"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_PROCESSOR_ARCHITECTURE_W              L"msil"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_PROCESSOR_ARCHITECTURE_S              S"msil"
#define SYSTEM_RUNTIME_REMOTING_ASSEMBLY_PROCESSOR_ARCHITECTURE_T          TEXT("msil")
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_DEF          System.Runtime.Serialization.Formatters.Soap,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_DEF_A       "System.Runtime.Serialization.Formatters.Soap,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_DEF_W      L"System.Runtime.Serialization.Formatters.Soap,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_DEF_S      S"System.Runtime.Serialization.Formatters.Soap,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_DEF_T  TEXT("System.Runtime.Serialization.Formatters.Soap,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil")
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_REF          System.Runtime.Serialization.Formatters.Soap,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_REF_A       "System.Runtime.Serialization.Formatters.Soap,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_REF_W      L"System.Runtime.Serialization.Formatters.Soap,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_REF_S      S"System.Runtime.Serialization.Formatters.Soap,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_REF_T  TEXT("System.Runtime.Serialization.Formatters.Soap,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_FRIEND_REF          System.Runtime.Serialization.Formatters.Soap,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_FRIEND_REF_A       "System.Runtime.Serialization.Formatters.Soap,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_FRIEND_REF_W      L"System.Runtime.Serialization.Formatters.Soap,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_FRIEND_REF_S      S"System.Runtime.Serialization.Formatters.Soap,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_FRIEND_REF_T  TEXT("System.Runtime.Serialization.Formatters.Soap,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_EXACT_REF          System.Runtime.Serialization.Formatters.Soap,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_EXACT_REF_A       "System.Runtime.Serialization.Formatters.Soap,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_EXACT_REF_W      L"System.Runtime.Serialization.Formatters.Soap,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_EXACT_REF_S      S"System.Runtime.Serialization.Formatters.Soap,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_EXACT_REF_T  TEXT("System.Runtime.Serialization.Formatters.Soap,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil")
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_NAME               System.Runtime.Serialization.Formatters.Soap
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_NAME_A            "System.Runtime.Serialization.Formatters.Soap"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_NAME_W           L"System.Runtime.Serialization.Formatters.Soap"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_NAME_S           S"System.Runtime.Serialization.Formatters.Soap"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_NAME_T       TEXT("System.Runtime.Serialization.Formatters.Soap")
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_VERSION            2.0.3600.0
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_VERSION_A         "2.0.3600.0"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_VERSION_W        L"2.0.3600.0"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_VERSION_S        S"2.0.3600.0"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_VERSION_T    TEXT("2.0.3600.0")
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_VERSION_IL          2:0:3600:0
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_PUBLIC_KEY          2411111111111111111111111111111111111112
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_PUBLIC_KEY_A       "2411111111111111111111111111111111111112"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_PUBLIC_KEY_W      L"2411111111111111111111111111111111111112"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_PUBLIC_KEY_S      S"2411111111111111111111111111111111111112"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_PUBLIC_KEY_T  TEXT("2411111111111111111111111111111111111112")
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_PUBLIC_KEY_IL       (24 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 12 )
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_PUBLIC_KEY_TOKEN          b03f5f7f11d50a3a
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_PUBLIC_KEY_TOKEN_A       "b03f5f7f11d50a3a"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_PUBLIC_KEY_TOKEN_W      L"b03f5f7f11d50a3a"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_PUBLIC_KEY_TOKEN_S      S"b03f5f7f11d50a3a"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_PUBLIC_KEY_TOKEN_T  TEXT("b03f5f7f11d50a3a")
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_PUBLIC_KEY_TOKEN_IL       (b0 3f 5f 7f 11 d5 0a 3a )
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_CULTURE            neutral
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_CULTURE_A         "neutral"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_CULTURE_W        L"neutral"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_CULTURE_S        S"neutral"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_CULTURE_T    TEXT("neutral")
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_PROCESSOR_ARCHITECTURE          msil
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_PROCESSOR_ARCHITECTURE_A       "msil"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_PROCESSOR_ARCHITECTURE_W      L"msil"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_PROCESSOR_ARCHITECTURE_S      S"msil"
#define SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_PROCESSOR_ARCHITECTURE_T  TEXT("msil")
#define SYSTEM_SERIALIZATION_ASSEMBLY_IDENTITY_DEF                               System.Serialization,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
#define SYSTEM_SERIALIZATION_ASSEMBLY_IDENTITY_DEF_A                            "System.Serialization,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_SERIALIZATION_ASSEMBLY_IDENTITY_DEF_W                           L"System.Serialization,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_SERIALIZATION_ASSEMBLY_IDENTITY_DEF_S                           S"System.Serialization,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_SERIALIZATION_ASSEMBLY_IDENTITY_DEF_T                       TEXT("System.Serialization,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil")
#define SYSTEM_SERIALIZATION_ASSEMBLY_IDENTITY_REF                               System.Serialization,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_SERIALIZATION_ASSEMBLY_IDENTITY_REF_A                            "System.Serialization,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_SERIALIZATION_ASSEMBLY_IDENTITY_REF_W                           L"System.Serialization,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_SERIALIZATION_ASSEMBLY_IDENTITY_REF_S                           S"System.Serialization,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_SERIALIZATION_ASSEMBLY_IDENTITY_REF_T                       TEXT("System.Serialization,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_SERIALIZATION_ASSEMBLY_IDENTITY_FRIEND_REF                        System.Serialization,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_SERIALIZATION_ASSEMBLY_IDENTITY_FRIEND_REF_A                     "System.Serialization,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_SERIALIZATION_ASSEMBLY_IDENTITY_FRIEND_REF_W                    L"System.Serialization,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_SERIALIZATION_ASSEMBLY_IDENTITY_FRIEND_REF_S                    S"System.Serialization,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_SERIALIZATION_ASSEMBLY_IDENTITY_FRIEND_REF_T                TEXT("System.Serialization,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_SERIALIZATION_ASSEMBLY_IDENTITY_EXACT_REF                         System.Serialization,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
#define SYSTEM_SERIALIZATION_ASSEMBLY_IDENTITY_EXACT_REF_A                      "System.Serialization,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_SERIALIZATION_ASSEMBLY_IDENTITY_EXACT_REF_W                     L"System.Serialization,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_SERIALIZATION_ASSEMBLY_IDENTITY_EXACT_REF_S                     S"System.Serialization,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_SERIALIZATION_ASSEMBLY_IDENTITY_EXACT_REF_T                 TEXT("System.Serialization,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil")
#define SYSTEM_SERIALIZATION_ASSEMBLY_NAME                                       System.Serialization
#define SYSTEM_SERIALIZATION_ASSEMBLY_NAME_A                                    "System.Serialization"
#define SYSTEM_SERIALIZATION_ASSEMBLY_NAME_W                                   L"System.Serialization"
#define SYSTEM_SERIALIZATION_ASSEMBLY_NAME_S                                   S"System.Serialization"
#define SYSTEM_SERIALIZATION_ASSEMBLY_NAME_T                               TEXT("System.Serialization")
#define SYSTEM_SERIALIZATION_ASSEMBLY_VERSION                                    2.0.3600.0
#define SYSTEM_SERIALIZATION_ASSEMBLY_VERSION_A                                 "2.0.3600.0"
#define SYSTEM_SERIALIZATION_ASSEMBLY_VERSION_W                                L"2.0.3600.0"
#define SYSTEM_SERIALIZATION_ASSEMBLY_VERSION_S                                S"2.0.3600.0"
#define SYSTEM_SERIALIZATION_ASSEMBLY_VERSION_T                            TEXT("2.0.3600.0")
#define SYSTEM_SERIALIZATION_ASSEMBLY_VERSION_IL                                  2:0:3600:0
#define SYSTEM_SERIALIZATION_ASSEMBLY_PUBLIC_KEY                                 00000000000000000400000000000000
#define SYSTEM_SERIALIZATION_ASSEMBLY_PUBLIC_KEY_A                              "00000000000000000400000000000000"
#define SYSTEM_SERIALIZATION_ASSEMBLY_PUBLIC_KEY_W                             L"00000000000000000400000000000000"
#define SYSTEM_SERIALIZATION_ASSEMBLY_PUBLIC_KEY_S                             S"00000000000000000400000000000000"
#define SYSTEM_SERIALIZATION_ASSEMBLY_PUBLIC_KEY_T                         TEXT("00000000000000000400000000000000")
#define SYSTEM_SERIALIZATION_ASSEMBLY_PUBLIC_KEY_IL                              (00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00 )
#define SYSTEM_SERIALIZATION_ASSEMBLY_PUBLIC_KEY_TOKEN                           b77a5c561934e089
#define SYSTEM_SERIALIZATION_ASSEMBLY_PUBLIC_KEY_TOKEN_A                        "b77a5c561934e089"
#define SYSTEM_SERIALIZATION_ASSEMBLY_PUBLIC_KEY_TOKEN_W                       L"b77a5c561934e089"
#define SYSTEM_SERIALIZATION_ASSEMBLY_PUBLIC_KEY_TOKEN_S                       S"b77a5c561934e089"
#define SYSTEM_SERIALIZATION_ASSEMBLY_PUBLIC_KEY_TOKEN_T                   TEXT("b77a5c561934e089")
#define SYSTEM_SERIALIZATION_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                        (b7 7a 5c 56 19 34 e0 89 )
#define SYSTEM_SERIALIZATION_ASSEMBLY_CULTURE                                    neutral
#define SYSTEM_SERIALIZATION_ASSEMBLY_CULTURE_A                                 "neutral"
#define SYSTEM_SERIALIZATION_ASSEMBLY_CULTURE_W                                L"neutral"
#define SYSTEM_SERIALIZATION_ASSEMBLY_CULTURE_S                                S"neutral"
#define SYSTEM_SERIALIZATION_ASSEMBLY_CULTURE_T                            TEXT("neutral")
#define SYSTEM_SERIALIZATION_ASSEMBLY_PROCESSOR_ARCHITECTURE                     msil
#define SYSTEM_SERIALIZATION_ASSEMBLY_PROCESSOR_ARCHITECTURE_A                  "msil"
#define SYSTEM_SERIALIZATION_ASSEMBLY_PROCESSOR_ARCHITECTURE_W                 L"msil"
#define SYSTEM_SERIALIZATION_ASSEMBLY_PROCESSOR_ARCHITECTURE_S                 S"msil"
#define SYSTEM_SERIALIZATION_ASSEMBLY_PROCESSOR_ARCHITECTURE_T             TEXT("msil")
#define SYSTEM_TRANSACTIONS_ASSEMBLY_IDENTITY_DEF                                System.Transactions,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
#define SYSTEM_TRANSACTIONS_ASSEMBLY_IDENTITY_DEF_A                             "System.Transactions,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_TRANSACTIONS_ASSEMBLY_IDENTITY_DEF_W                            L"System.Transactions,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_TRANSACTIONS_ASSEMBLY_IDENTITY_DEF_S                            S"System.Transactions,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_TRANSACTIONS_ASSEMBLY_IDENTITY_DEF_T                        TEXT("System.Transactions,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil")
#define SYSTEM_TRANSACTIONS_ASSEMBLY_IDENTITY_REF                                System.Transactions,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_TRANSACTIONS_ASSEMBLY_IDENTITY_REF_A                             "System.Transactions,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_TRANSACTIONS_ASSEMBLY_IDENTITY_REF_W                            L"System.Transactions,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_TRANSACTIONS_ASSEMBLY_IDENTITY_REF_S                            S"System.Transactions,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_TRANSACTIONS_ASSEMBLY_IDENTITY_REF_T                        TEXT("System.Transactions,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_TRANSACTIONS_ASSEMBLY_IDENTITY_FRIEND_REF                         System.Transactions,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_TRANSACTIONS_ASSEMBLY_IDENTITY_FRIEND_REF_A                      "System.Transactions,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_TRANSACTIONS_ASSEMBLY_IDENTITY_FRIEND_REF_W                     L"System.Transactions,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_TRANSACTIONS_ASSEMBLY_IDENTITY_FRIEND_REF_S                     S"System.Transactions,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_TRANSACTIONS_ASSEMBLY_IDENTITY_FRIEND_REF_T                 TEXT("System.Transactions,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_TRANSACTIONS_ASSEMBLY_IDENTITY_EXACT_REF                          System.Transactions,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
#define SYSTEM_TRANSACTIONS_ASSEMBLY_IDENTITY_EXACT_REF_A                       "System.Transactions,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_TRANSACTIONS_ASSEMBLY_IDENTITY_EXACT_REF_W                      L"System.Transactions,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_TRANSACTIONS_ASSEMBLY_IDENTITY_EXACT_REF_S                      S"System.Transactions,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_TRANSACTIONS_ASSEMBLY_IDENTITY_EXACT_REF_T                  TEXT("System.Transactions,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil")
#define SYSTEM_TRANSACTIONS_ASSEMBLY_NAME                                        System.Transactions
#define SYSTEM_TRANSACTIONS_ASSEMBLY_NAME_A                                     "System.Transactions"
#define SYSTEM_TRANSACTIONS_ASSEMBLY_NAME_W                                    L"System.Transactions"
#define SYSTEM_TRANSACTIONS_ASSEMBLY_NAME_S                                    S"System.Transactions"
#define SYSTEM_TRANSACTIONS_ASSEMBLY_NAME_T                                TEXT("System.Transactions")
#define SYSTEM_TRANSACTIONS_ASSEMBLY_VERSION                                     2.0.3600.0
#define SYSTEM_TRANSACTIONS_ASSEMBLY_VERSION_A                                  "2.0.3600.0"
#define SYSTEM_TRANSACTIONS_ASSEMBLY_VERSION_W                                 L"2.0.3600.0"
#define SYSTEM_TRANSACTIONS_ASSEMBLY_VERSION_S                                 S"2.0.3600.0"
#define SYSTEM_TRANSACTIONS_ASSEMBLY_VERSION_T                             TEXT("2.0.3600.0")
#define SYSTEM_TRANSACTIONS_ASSEMBLY_VERSION_IL                                   2:0:3600:0
#define SYSTEM_TRANSACTIONS_ASSEMBLY_PUBLIC_KEY                                  00000000000000000400000000000000
#define SYSTEM_TRANSACTIONS_ASSEMBLY_PUBLIC_KEY_A                               "00000000000000000400000000000000"
#define SYSTEM_TRANSACTIONS_ASSEMBLY_PUBLIC_KEY_W                              L"00000000000000000400000000000000"
#define SYSTEM_TRANSACTIONS_ASSEMBLY_PUBLIC_KEY_S                              S"00000000000000000400000000000000"
#define SYSTEM_TRANSACTIONS_ASSEMBLY_PUBLIC_KEY_T                          TEXT("00000000000000000400000000000000")
#define SYSTEM_TRANSACTIONS_ASSEMBLY_PUBLIC_KEY_IL                               (00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00 )
#define SYSTEM_TRANSACTIONS_ASSEMBLY_PUBLIC_KEY_TOKEN                            b77a5c561934e089
#define SYSTEM_TRANSACTIONS_ASSEMBLY_PUBLIC_KEY_TOKEN_A                         "b77a5c561934e089"
#define SYSTEM_TRANSACTIONS_ASSEMBLY_PUBLIC_KEY_TOKEN_W                        L"b77a5c561934e089"
#define SYSTEM_TRANSACTIONS_ASSEMBLY_PUBLIC_KEY_TOKEN_S                        S"b77a5c561934e089"
#define SYSTEM_TRANSACTIONS_ASSEMBLY_PUBLIC_KEY_TOKEN_T                    TEXT("b77a5c561934e089")
#define SYSTEM_TRANSACTIONS_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                         (b7 7a 5c 56 19 34 e0 89 )
#define SYSTEM_TRANSACTIONS_ASSEMBLY_CULTURE                                     neutral
#define SYSTEM_TRANSACTIONS_ASSEMBLY_CULTURE_A                                  "neutral"
#define SYSTEM_TRANSACTIONS_ASSEMBLY_CULTURE_W                                 L"neutral"
#define SYSTEM_TRANSACTIONS_ASSEMBLY_CULTURE_S                                 S"neutral"
#define SYSTEM_TRANSACTIONS_ASSEMBLY_CULTURE_T                             TEXT("neutral")
#define SYSTEM_TRANSACTIONS_ASSEMBLY_PROCESSOR_ARCHITECTURE                      msil
#define SYSTEM_TRANSACTIONS_ASSEMBLY_PROCESSOR_ARCHITECTURE_A                   "msil"
#define SYSTEM_TRANSACTIONS_ASSEMBLY_PROCESSOR_ARCHITECTURE_W                  L"msil"
#define SYSTEM_TRANSACTIONS_ASSEMBLY_PROCESSOR_ARCHITECTURE_S                  S"msil"
#define SYSTEM_TRANSACTIONS_ASSEMBLY_PROCESSOR_ARCHITECTURE_T              TEXT("msil")
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_IDENTITY_DEF                          System.Transactions.Oletx,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_IDENTITY_DEF_A                       "System.Transactions.Oletx,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_IDENTITY_DEF_W                      L"System.Transactions.Oletx,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_IDENTITY_DEF_S                      S"System.Transactions.Oletx,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_IDENTITY_DEF_T                  TEXT("System.Transactions.Oletx,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil")
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_IDENTITY_REF                          System.Transactions.Oletx,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_IDENTITY_REF_A                       "System.Transactions.Oletx,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_IDENTITY_REF_W                      L"System.Transactions.Oletx,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_IDENTITY_REF_S                      S"System.Transactions.Oletx,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_IDENTITY_REF_T                  TEXT("System.Transactions.Oletx,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_IDENTITY_FRIEND_REF                   System.Transactions.Oletx,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_IDENTITY_FRIEND_REF_A                "System.Transactions.Oletx,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_IDENTITY_FRIEND_REF_W               L"System.Transactions.Oletx,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_IDENTITY_FRIEND_REF_S               S"System.Transactions.Oletx,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_IDENTITY_FRIEND_REF_T           TEXT("System.Transactions.Oletx,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_IDENTITY_EXACT_REF                    System.Transactions.Oletx,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_IDENTITY_EXACT_REF_A                 "System.Transactions.Oletx,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_IDENTITY_EXACT_REF_W                L"System.Transactions.Oletx,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_IDENTITY_EXACT_REF_S                S"System.Transactions.Oletx,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_IDENTITY_EXACT_REF_T            TEXT("System.Transactions.Oletx,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil")
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_NAME                                  System.Transactions.Oletx
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_NAME_A                               "System.Transactions.Oletx"
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_NAME_W                              L"System.Transactions.Oletx"
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_NAME_S                              S"System.Transactions.Oletx"
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_NAME_T                          TEXT("System.Transactions.Oletx")
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_VERSION                               2.0.3600.0
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_VERSION_A                            "2.0.3600.0"
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_VERSION_W                           L"2.0.3600.0"
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_VERSION_S                           S"2.0.3600.0"
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_VERSION_T                       TEXT("2.0.3600.0")
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_VERSION_IL                             2:0:3600:0
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_PUBLIC_KEY                            00000000000000000400000000000000
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_PUBLIC_KEY_A                         "00000000000000000400000000000000"
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_PUBLIC_KEY_W                        L"00000000000000000400000000000000"
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_PUBLIC_KEY_S                        S"00000000000000000400000000000000"
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_PUBLIC_KEY_T                    TEXT("00000000000000000400000000000000")
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_PUBLIC_KEY_IL                         (00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00 )
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_PUBLIC_KEY_TOKEN                      b77a5c561934e089
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_PUBLIC_KEY_TOKEN_A                   "b77a5c561934e089"
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_PUBLIC_KEY_TOKEN_W                  L"b77a5c561934e089"
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_PUBLIC_KEY_TOKEN_S                  S"b77a5c561934e089"
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_PUBLIC_KEY_TOKEN_T              TEXT("b77a5c561934e089")
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                   (b7 7a 5c 56 19 34 e0 89 )
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_CULTURE                               neutral
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_CULTURE_A                            "neutral"
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_CULTURE_W                           L"neutral"
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_CULTURE_S                           S"neutral"
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_CULTURE_T                       TEXT("neutral")
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_PROCESSOR_ARCHITECTURE                msil
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_PROCESSOR_ARCHITECTURE_A             "msil"
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_PROCESSOR_ARCHITECTURE_W            L"msil"
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_PROCESSOR_ARCHITECTURE_S            S"msil"
#define SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_PROCESSOR_ARCHITECTURE_T        TEXT("msil")
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_IDENTITY_DEF                           System.Transactions.WsTx,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_IDENTITY_DEF_A                        "System.Transactions.WsTx,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_IDENTITY_DEF_W                       L"System.Transactions.WsTx,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_IDENTITY_DEF_S                       S"System.Transactions.WsTx,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_IDENTITY_DEF_T                   TEXT("System.Transactions.WsTx,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil")
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_IDENTITY_REF                           System.Transactions.WsTx,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_IDENTITY_REF_A                        "System.Transactions.WsTx,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_IDENTITY_REF_W                       L"System.Transactions.WsTx,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_IDENTITY_REF_S                       S"System.Transactions.WsTx,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_IDENTITY_REF_T                   TEXT("System.Transactions.WsTx,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_IDENTITY_FRIEND_REF                    System.Transactions.WsTx,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_IDENTITY_FRIEND_REF_A                 "System.Transactions.WsTx,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_IDENTITY_FRIEND_REF_W                L"System.Transactions.WsTx,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_IDENTITY_FRIEND_REF_S                S"System.Transactions.WsTx,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_IDENTITY_FRIEND_REF_T            TEXT("System.Transactions.WsTx,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_IDENTITY_EXACT_REF                     System.Transactions.WsTx,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_IDENTITY_EXACT_REF_A                  "System.Transactions.WsTx,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_IDENTITY_EXACT_REF_W                 L"System.Transactions.WsTx,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_IDENTITY_EXACT_REF_S                 S"System.Transactions.WsTx,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil"
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_IDENTITY_EXACT_REF_T             TEXT("System.Transactions.WsTx,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil")
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_NAME                                   System.Transactions.WsTx
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_NAME_A                                "System.Transactions.WsTx"
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_NAME_W                               L"System.Transactions.WsTx"
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_NAME_S                               S"System.Transactions.WsTx"
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_NAME_T                           TEXT("System.Transactions.WsTx")
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_VERSION                                2.0.3600.0
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_VERSION_A                             "2.0.3600.0"
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_VERSION_W                            L"2.0.3600.0"
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_VERSION_S                            S"2.0.3600.0"
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_VERSION_T                        TEXT("2.0.3600.0")
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_VERSION_IL                              2:0:3600:0
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_PUBLIC_KEY                             00000000000000000400000000000000
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_PUBLIC_KEY_A                          "00000000000000000400000000000000"
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_PUBLIC_KEY_W                         L"00000000000000000400000000000000"
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_PUBLIC_KEY_S                         S"00000000000000000400000000000000"
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_PUBLIC_KEY_T                     TEXT("00000000000000000400000000000000")
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_PUBLIC_KEY_IL                          (00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00 )
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_PUBLIC_KEY_TOKEN                       b77a5c561934e089
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_PUBLIC_KEY_TOKEN_A                    "b77a5c561934e089"
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_PUBLIC_KEY_TOKEN_W                   L"b77a5c561934e089"
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_PUBLIC_KEY_TOKEN_S                   S"b77a5c561934e089"
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_PUBLIC_KEY_TOKEN_T               TEXT("b77a5c561934e089")
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                    (b7 7a 5c 56 19 34 e0 89 )
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_CULTURE                                neutral
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_CULTURE_A                             "neutral"
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_CULTURE_W                            L"neutral"
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_CULTURE_S                            S"neutral"
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_CULTURE_T                        TEXT("neutral")
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_PROCESSOR_ARCHITECTURE                 msil
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_PROCESSOR_ARCHITECTURE_A              "msil"
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_PROCESSOR_ARCHITECTURE_W             L"msil"
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_PROCESSOR_ARCHITECTURE_S             S"msil"
#define SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_PROCESSOR_ARCHITECTURE_T         TEXT("msil")
#define SYSTEM_WEB_MOBILE_ASSEMBLY_IDENTITY_DEF                                  System.Web.Mobile,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
#define SYSTEM_WEB_MOBILE_ASSEMBLY_IDENTITY_DEF_A                               "System.Web.Mobile,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_WEB_MOBILE_ASSEMBLY_IDENTITY_DEF_W                              L"System.Web.Mobile,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_WEB_MOBILE_ASSEMBLY_IDENTITY_DEF_S                              S"System.Web.Mobile,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_WEB_MOBILE_ASSEMBLY_IDENTITY_DEF_T                          TEXT("System.Web.Mobile,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil")
#define SYSTEM_WEB_MOBILE_ASSEMBLY_IDENTITY_REF                                  System.Web.Mobile,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_WEB_MOBILE_ASSEMBLY_IDENTITY_REF_A                               "System.Web.Mobile,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_MOBILE_ASSEMBLY_IDENTITY_REF_W                              L"System.Web.Mobile,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_MOBILE_ASSEMBLY_IDENTITY_REF_S                              S"System.Web.Mobile,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_MOBILE_ASSEMBLY_IDENTITY_REF_T                          TEXT("System.Web.Mobile,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_WEB_MOBILE_ASSEMBLY_IDENTITY_FRIEND_REF                           System.Web.Mobile,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_WEB_MOBILE_ASSEMBLY_IDENTITY_FRIEND_REF_A                        "System.Web.Mobile,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_MOBILE_ASSEMBLY_IDENTITY_FRIEND_REF_W                       L"System.Web.Mobile,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_MOBILE_ASSEMBLY_IDENTITY_FRIEND_REF_S                       S"System.Web.Mobile,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_MOBILE_ASSEMBLY_IDENTITY_FRIEND_REF_T                   TEXT("System.Web.Mobile,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_WEB_MOBILE_ASSEMBLY_IDENTITY_EXACT_REF                            System.Web.Mobile,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
#define SYSTEM_WEB_MOBILE_ASSEMBLY_IDENTITY_EXACT_REF_A                         "System.Web.Mobile,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_WEB_MOBILE_ASSEMBLY_IDENTITY_EXACT_REF_W                        L"System.Web.Mobile,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_WEB_MOBILE_ASSEMBLY_IDENTITY_EXACT_REF_S                        S"System.Web.Mobile,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_WEB_MOBILE_ASSEMBLY_IDENTITY_EXACT_REF_T                    TEXT("System.Web.Mobile,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil")
#define SYSTEM_WEB_MOBILE_ASSEMBLY_NAME                                          System.Web.Mobile
#define SYSTEM_WEB_MOBILE_ASSEMBLY_NAME_A                                       "System.Web.Mobile"
#define SYSTEM_WEB_MOBILE_ASSEMBLY_NAME_W                                      L"System.Web.Mobile"
#define SYSTEM_WEB_MOBILE_ASSEMBLY_NAME_S                                      S"System.Web.Mobile"
#define SYSTEM_WEB_MOBILE_ASSEMBLY_NAME_T                                  TEXT("System.Web.Mobile")
#define SYSTEM_WEB_MOBILE_ASSEMBLY_VERSION                                       2.0.3600.0
#define SYSTEM_WEB_MOBILE_ASSEMBLY_VERSION_A                                    "2.0.3600.0"
#define SYSTEM_WEB_MOBILE_ASSEMBLY_VERSION_W                                   L"2.0.3600.0"
#define SYSTEM_WEB_MOBILE_ASSEMBLY_VERSION_S                                   S"2.0.3600.0"
#define SYSTEM_WEB_MOBILE_ASSEMBLY_VERSION_T                               TEXT("2.0.3600.0")
#define SYSTEM_WEB_MOBILE_ASSEMBLY_VERSION_IL                                     2:0:3600:0
#define SYSTEM_WEB_MOBILE_ASSEMBLY_PUBLIC_KEY                                    2411111111111111111111111111111111111112
#define SYSTEM_WEB_MOBILE_ASSEMBLY_PUBLIC_KEY_A                                 "2411111111111111111111111111111111111112"
#define SYSTEM_WEB_MOBILE_ASSEMBLY_PUBLIC_KEY_W                                L"2411111111111111111111111111111111111112"
#define SYSTEM_WEB_MOBILE_ASSEMBLY_PUBLIC_KEY_S                                S"2411111111111111111111111111111111111112"
#define SYSTEM_WEB_MOBILE_ASSEMBLY_PUBLIC_KEY_T                            TEXT("2411111111111111111111111111111111111112")
#define SYSTEM_WEB_MOBILE_ASSEMBLY_PUBLIC_KEY_IL                                 (24 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 12 )
#define SYSTEM_WEB_MOBILE_ASSEMBLY_PUBLIC_KEY_TOKEN                              b03f5f7f11d50a3a
#define SYSTEM_WEB_MOBILE_ASSEMBLY_PUBLIC_KEY_TOKEN_A                           "b03f5f7f11d50a3a"
#define SYSTEM_WEB_MOBILE_ASSEMBLY_PUBLIC_KEY_TOKEN_W                          L"b03f5f7f11d50a3a"
#define SYSTEM_WEB_MOBILE_ASSEMBLY_PUBLIC_KEY_TOKEN_S                          S"b03f5f7f11d50a3a"
#define SYSTEM_WEB_MOBILE_ASSEMBLY_PUBLIC_KEY_TOKEN_T                      TEXT("b03f5f7f11d50a3a")
#define SYSTEM_WEB_MOBILE_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                           (b0 3f 5f 7f 11 d5 0a 3a )
#define SYSTEM_WEB_MOBILE_ASSEMBLY_CULTURE                                       neutral
#define SYSTEM_WEB_MOBILE_ASSEMBLY_CULTURE_A                                    "neutral"
#define SYSTEM_WEB_MOBILE_ASSEMBLY_CULTURE_W                                   L"neutral"
#define SYSTEM_WEB_MOBILE_ASSEMBLY_CULTURE_S                                   S"neutral"
#define SYSTEM_WEB_MOBILE_ASSEMBLY_CULTURE_T                               TEXT("neutral")
#define SYSTEM_WEB_MOBILE_ASSEMBLY_PROCESSOR_ARCHITECTURE                        msil
#define SYSTEM_WEB_MOBILE_ASSEMBLY_PROCESSOR_ARCHITECTURE_A                     "msil"
#define SYSTEM_WEB_MOBILE_ASSEMBLY_PROCESSOR_ARCHITECTURE_W                    L"msil"
#define SYSTEM_WEB_MOBILE_ASSEMBLY_PROCESSOR_ARCHITECTURE_S                    S"msil"
#define SYSTEM_WEB_MOBILE_ASSEMBLY_PROCESSOR_ARCHITECTURE_T                TEXT("msil")
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_DEF                      System.Web.RegularExpressions,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_DEF_A                   "System.Web.RegularExpressions,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_DEF_W                  L"System.Web.RegularExpressions,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_DEF_S                  S"System.Web.RegularExpressions,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_DEF_T              TEXT("System.Web.RegularExpressions,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil")
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_REF                      System.Web.RegularExpressions,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_REF_A                   "System.Web.RegularExpressions,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_REF_W                  L"System.Web.RegularExpressions,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_REF_S                  S"System.Web.RegularExpressions,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_REF_T              TEXT("System.Web.RegularExpressions,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_FRIEND_REF               System.Web.RegularExpressions,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_FRIEND_REF_A            "System.Web.RegularExpressions,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_FRIEND_REF_W           L"System.Web.RegularExpressions,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_FRIEND_REF_S           S"System.Web.RegularExpressions,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_FRIEND_REF_T       TEXT("System.Web.RegularExpressions,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_EXACT_REF                System.Web.RegularExpressions,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_EXACT_REF_A             "System.Web.RegularExpressions,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_EXACT_REF_W            L"System.Web.RegularExpressions,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_EXACT_REF_S            S"System.Web.RegularExpressions,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_EXACT_REF_T        TEXT("System.Web.RegularExpressions,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil")
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_NAME                              System.Web.RegularExpressions
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_NAME_A                           "System.Web.RegularExpressions"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_NAME_W                          L"System.Web.RegularExpressions"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_NAME_S                          S"System.Web.RegularExpressions"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_NAME_T                      TEXT("System.Web.RegularExpressions")
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_VERSION                           2.0.3600.0
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_VERSION_A                        "2.0.3600.0"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_VERSION_W                       L"2.0.3600.0"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_VERSION_S                       S"2.0.3600.0"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_VERSION_T                   TEXT("2.0.3600.0")
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_VERSION_IL                         2:0:3600:0
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_PUBLIC_KEY                        2411111111111111111111111111111111111112
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_PUBLIC_KEY_A                     "2411111111111111111111111111111111111112"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_PUBLIC_KEY_W                    L"2411111111111111111111111111111111111112"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_PUBLIC_KEY_S                    S"2411111111111111111111111111111111111112"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_PUBLIC_KEY_T                TEXT("2411111111111111111111111111111111111112")
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_PUBLIC_KEY_IL                     (24 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 12 )
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_PUBLIC_KEY_TOKEN                  b03f5f7f11d50a3a
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_PUBLIC_KEY_TOKEN_A               "b03f5f7f11d50a3a"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_PUBLIC_KEY_TOKEN_W              L"b03f5f7f11d50a3a"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_PUBLIC_KEY_TOKEN_S              S"b03f5f7f11d50a3a"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_PUBLIC_KEY_TOKEN_T          TEXT("b03f5f7f11d50a3a")
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_PUBLIC_KEY_TOKEN_IL               (b0 3f 5f 7f 11 d5 0a 3a )
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_CULTURE                           neutral
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_CULTURE_A                        "neutral"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_CULTURE_W                       L"neutral"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_CULTURE_S                       S"neutral"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_CULTURE_T                   TEXT("neutral")
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_PROCESSOR_ARCHITECTURE            msil
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_PROCESSOR_ARCHITECTURE_A         "msil"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_PROCESSOR_ARCHITECTURE_W        L"msil"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_PROCESSOR_ARCHITECTURE_S        S"msil"
#define SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_PROCESSOR_ARCHITECTURE_T    TEXT("msil")
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_IDENTITY_DEF                               ClassLibrary1.Class1,version=1.0.1017.1,publicKeyToken=1a5b963c6f0fbeab,culture=neutral,processorArchitecture=msil
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_IDENTITY_DEF_A                            "ClassLibrary1.Class1,version=1.0.1017.1,publicKeyToken=1a5b963c6f0fbeab,culture=neutral,processorArchitecture=msil"
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_IDENTITY_DEF_W                           L"ClassLibrary1.Class1,version=1.0.1017.1,publicKeyToken=1a5b963c6f0fbeab,culture=neutral,processorArchitecture=msil"
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_IDENTITY_DEF_S                           S"ClassLibrary1.Class1,version=1.0.1017.1,publicKeyToken=1a5b963c6f0fbeab,culture=neutral,processorArchitecture=msil"
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_IDENTITY_DEF_T                       TEXT("ClassLibrary1.Class1,version=1.0.1017.1,publicKeyToken=1a5b963c6f0fbeab,culture=neutral,processorArchitecture=msil")
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_IDENTITY_REF                               ClassLibrary1.Class1,version=1.0.1017.1,publicKeyToken=1a5b963c6f0fbeab,culture=neutral
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_IDENTITY_REF_A                            "ClassLibrary1.Class1,version=1.0.1017.1,publicKeyToken=1a5b963c6f0fbeab,culture=neutral"
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_IDENTITY_REF_W                           L"ClassLibrary1.Class1,version=1.0.1017.1,publicKeyToken=1a5b963c6f0fbeab,culture=neutral"
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_IDENTITY_REF_S                           S"ClassLibrary1.Class1,version=1.0.1017.1,publicKeyToken=1a5b963c6f0fbeab,culture=neutral"
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_IDENTITY_REF_T                       TEXT("ClassLibrary1.Class1,version=1.0.1017.1,publicKeyToken=1a5b963c6f0fbeab,culture=neutral")
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_IDENTITY_FRIEND_REF                        ClassLibrary1.Class1,publicKeyToken=1a5b963c6f0fbeab,culture=neutral
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_IDENTITY_FRIEND_REF_A                     "ClassLibrary1.Class1,publicKeyToken=1a5b963c6f0fbeab,culture=neutral"
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_IDENTITY_FRIEND_REF_W                    L"ClassLibrary1.Class1,publicKeyToken=1a5b963c6f0fbeab,culture=neutral"
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_IDENTITY_FRIEND_REF_S                    S"ClassLibrary1.Class1,publicKeyToken=1a5b963c6f0fbeab,culture=neutral"
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_IDENTITY_FRIEND_REF_T                TEXT("ClassLibrary1.Class1,publicKeyToken=1a5b963c6f0fbeab,culture=neutral")
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_IDENTITY_EXACT_REF                         ClassLibrary1.Class1,version=1.0.1017.1,publicKeyToken=1a5b963c6f0fbeab,culture=neutral,processorArchitecture=msil
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_IDENTITY_EXACT_REF_A                      "ClassLibrary1.Class1,version=1.0.1017.1,publicKeyToken=1a5b963c6f0fbeab,culture=neutral,processorArchitecture=msil"
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_IDENTITY_EXACT_REF_W                     L"ClassLibrary1.Class1,version=1.0.1017.1,publicKeyToken=1a5b963c6f0fbeab,culture=neutral,processorArchitecture=msil"
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_IDENTITY_EXACT_REF_S                     S"ClassLibrary1.Class1,version=1.0.1017.1,publicKeyToken=1a5b963c6f0fbeab,culture=neutral,processorArchitecture=msil"
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_IDENTITY_EXACT_REF_T                 TEXT("ClassLibrary1.Class1,version=1.0.1017.1,publicKeyToken=1a5b963c6f0fbeab,culture=neutral,processorArchitecture=msil")
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_NAME                                       ClassLibrary1.Class1
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_NAME_A                                    "ClassLibrary1.Class1"
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_NAME_W                                   L"ClassLibrary1.Class1"
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_NAME_S                                   S"ClassLibrary1.Class1"
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_NAME_T                               TEXT("ClassLibrary1.Class1")
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_VERSION                                    1.0.1017.1
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_VERSION_A                                 "1.0.1017.1"
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_VERSION_W                                L"1.0.1017.1"
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_VERSION_S                                S"1.0.1017.1"
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_VERSION_T                            TEXT("1.0.1017.1")
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_VERSION_IL                                  1:0:1017:1
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_PUBLIC_KEY                                 002400000480000094000000060200000024000052534131000400000100010027a5d41f8f8fa9a5a20c0233929672c5e66e7f1a1d83ac6e63ae017b7a3df14a5dfe9630da0b45f95aca9aff0aee36a18f3fda3552bdfb5285094083b1f7ce394e933e0713116fedad3120f4e8e6ba9bfecdc75953eef205448d91bf46c72cec6e013921ecf57a729045d95822a6c331d31899374cb27172109bdc920d9814c0
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_PUBLIC_KEY_A                              "002400000480000094000000060200000024000052534131000400000100010027a5d41f8f8fa9a5a20c0233929672c5e66e7f1a1d83ac6e63ae017b7a3df14a5dfe9630da0b45f95aca9aff0aee36a18f3fda3552bdfb5285094083b1f7ce394e933e0713116fedad3120f4e8e6ba9bfecdc75953eef205448d91bf46c72cec6e013921ecf57a729045d95822a6c331d31899374cb27172109bdc920d9814c0"
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_PUBLIC_KEY_W                             L"002400000480000094000000060200000024000052534131000400000100010027a5d41f8f8fa9a5a20c0233929672c5e66e7f1a1d83ac6e63ae017b7a3df14a5dfe9630da0b45f95aca9aff0aee36a18f3fda3552bdfb5285094083b1f7ce394e933e0713116fedad3120f4e8e6ba9bfecdc75953eef205448d91bf46c72cec6e013921ecf57a729045d95822a6c331d31899374cb27172109bdc920d9814c0"
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_PUBLIC_KEY_S                             S"002400000480000094000000060200000024000052534131000400000100010027a5d41f8f8fa9a5a20c0233929672c5e66e7f1a1d83ac6e63ae017b7a3df14a5dfe9630da0b45f95aca9aff0aee36a18f3fda3552bdfb5285094083b1f7ce394e933e0713116fedad3120f4e8e6ba9bfecdc75953eef205448d91bf46c72cec6e013921ecf57a729045d95822a6c331d31899374cb27172109bdc920d9814c0"
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_PUBLIC_KEY_T                         TEXT("002400000480000094000000060200000024000052534131000400000100010027a5d41f8f8fa9a5a20c0233929672c5e66e7f1a1d83ac6e63ae017b7a3df14a5dfe9630da0b45f95aca9aff0aee36a18f3fda3552bdfb5285094083b1f7ce394e933e0713116fedad3120f4e8e6ba9bfecdc75953eef205448d91bf46c72cec6e013921ecf57a729045d95822a6c331d31899374cb27172109bdc920d9814c0")
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_PUBLIC_KEY_IL                              (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 27 a5 d4 1f 8f 8f a9 a5 a2 0c 02 33 92 96 72 c5 e6 6e 7f 1a 1d 83 ac 6e 63 ae 01 7b 7a 3d f1 4a 5d fe 96 30 da 0b 45 f9 5a ca 9a ff 0a ee 36 a1 8f 3f da 35 52 bd fb 52 85 09 40 83 b1 f7 ce 39 4e 93 3e 07 13 11 6f ed ad 31 20 f4 e8 e6 ba 9b fe cd c7 59 53 ee f2 05 44 8d 91 bf 46 c7 2c ec 6e 01 39 21 ec f5 7a 72 90 45 d9 58 22 a6 c3 31 d3 18 99 37 4c b2 71 72 10 9b dc 92 0d 98 14 c0 )
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_PUBLIC_KEY_TOKEN                           1a5b963c6f0fbeab
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_PUBLIC_KEY_TOKEN_A                        "1a5b963c6f0fbeab"
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_PUBLIC_KEY_TOKEN_W                       L"1a5b963c6f0fbeab"
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_PUBLIC_KEY_TOKEN_S                       S"1a5b963c6f0fbeab"
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_PUBLIC_KEY_TOKEN_T                   TEXT("1a5b963c6f0fbeab")
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                        (1a 5b 96 3c 6f 0f be ab )
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_CULTURE                                    neutral
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_CULTURE_A                                 "neutral"
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_CULTURE_W                                L"neutral"
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_CULTURE_S                                S"neutral"
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_CULTURE_T                            TEXT("neutral")
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_PROCESSOR_ARCHITECTURE                     msil
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_PROCESSOR_ARCHITECTURE_A                  "msil"
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_PROCESSOR_ARCHITECTURE_W                 L"msil"
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_PROCESSOR_ARCHITECTURE_S                 S"msil"
#define CLASSLIBRARY1_CLASS1_ASSEMBLY_PROCESSOR_ARCHITECTURE_T             TEXT("msil")
#define CSTESTS_MCLASS_ASSEMBLY_IDENTITY_DEF                                     CSTests.MClass,version=1.0.1017.1,publicKeyToken=1a5b963c6f0fbeab,culture=neutral,processorArchitecture=msil
#define CSTESTS_MCLASS_ASSEMBLY_IDENTITY_DEF_A                                  "CSTests.MClass,version=1.0.1017.1,publicKeyToken=1a5b963c6f0fbeab,culture=neutral,processorArchitecture=msil"
#define CSTESTS_MCLASS_ASSEMBLY_IDENTITY_DEF_W                                 L"CSTests.MClass,version=1.0.1017.1,publicKeyToken=1a5b963c6f0fbeab,culture=neutral,processorArchitecture=msil"
#define CSTESTS_MCLASS_ASSEMBLY_IDENTITY_DEF_S                                 S"CSTests.MClass,version=1.0.1017.1,publicKeyToken=1a5b963c6f0fbeab,culture=neutral,processorArchitecture=msil"
#define CSTESTS_MCLASS_ASSEMBLY_IDENTITY_DEF_T                             TEXT("CSTests.MClass,version=1.0.1017.1,publicKeyToken=1a5b963c6f0fbeab,culture=neutral,processorArchitecture=msil")
#define CSTESTS_MCLASS_ASSEMBLY_IDENTITY_REF                                     CSTests.MClass,version=1.0.1017.1,publicKeyToken=1a5b963c6f0fbeab,culture=neutral
#define CSTESTS_MCLASS_ASSEMBLY_IDENTITY_REF_A                                  "CSTests.MClass,version=1.0.1017.1,publicKeyToken=1a5b963c6f0fbeab,culture=neutral"
#define CSTESTS_MCLASS_ASSEMBLY_IDENTITY_REF_W                                 L"CSTests.MClass,version=1.0.1017.1,publicKeyToken=1a5b963c6f0fbeab,culture=neutral"
#define CSTESTS_MCLASS_ASSEMBLY_IDENTITY_REF_S                                 S"CSTests.MClass,version=1.0.1017.1,publicKeyToken=1a5b963c6f0fbeab,culture=neutral"
#define CSTESTS_MCLASS_ASSEMBLY_IDENTITY_REF_T                             TEXT("CSTests.MClass,version=1.0.1017.1,publicKeyToken=1a5b963c6f0fbeab,culture=neutral")
#define CSTESTS_MCLASS_ASSEMBLY_IDENTITY_FRIEND_REF                              CSTests.MClass,publicKeyToken=1a5b963c6f0fbeab,culture=neutral
#define CSTESTS_MCLASS_ASSEMBLY_IDENTITY_FRIEND_REF_A                           "CSTests.MClass,publicKeyToken=1a5b963c6f0fbeab,culture=neutral"
#define CSTESTS_MCLASS_ASSEMBLY_IDENTITY_FRIEND_REF_W                          L"CSTests.MClass,publicKeyToken=1a5b963c6f0fbeab,culture=neutral"
#define CSTESTS_MCLASS_ASSEMBLY_IDENTITY_FRIEND_REF_S                          S"CSTests.MClass,publicKeyToken=1a5b963c6f0fbeab,culture=neutral"
#define CSTESTS_MCLASS_ASSEMBLY_IDENTITY_FRIEND_REF_T                      TEXT("CSTests.MClass,publicKeyToken=1a5b963c6f0fbeab,culture=neutral")
#define CSTESTS_MCLASS_ASSEMBLY_IDENTITY_EXACT_REF                               CSTests.MClass,version=1.0.1017.1,publicKeyToken=1a5b963c6f0fbeab,culture=neutral,processorArchitecture=msil
#define CSTESTS_MCLASS_ASSEMBLY_IDENTITY_EXACT_REF_A                            "CSTests.MClass,version=1.0.1017.1,publicKeyToken=1a5b963c6f0fbeab,culture=neutral,processorArchitecture=msil"
#define CSTESTS_MCLASS_ASSEMBLY_IDENTITY_EXACT_REF_W                           L"CSTests.MClass,version=1.0.1017.1,publicKeyToken=1a5b963c6f0fbeab,culture=neutral,processorArchitecture=msil"
#define CSTESTS_MCLASS_ASSEMBLY_IDENTITY_EXACT_REF_S                           S"CSTests.MClass,version=1.0.1017.1,publicKeyToken=1a5b963c6f0fbeab,culture=neutral,processorArchitecture=msil"
#define CSTESTS_MCLASS_ASSEMBLY_IDENTITY_EXACT_REF_T                       TEXT("CSTests.MClass,version=1.0.1017.1,publicKeyToken=1a5b963c6f0fbeab,culture=neutral,processorArchitecture=msil")
#define CSTESTS_MCLASS_ASSEMBLY_NAME                                             CSTests.MClass
#define CSTESTS_MCLASS_ASSEMBLY_NAME_A                                          "CSTests.MClass"
#define CSTESTS_MCLASS_ASSEMBLY_NAME_W                                         L"CSTests.MClass"
#define CSTESTS_MCLASS_ASSEMBLY_NAME_S                                         S"CSTests.MClass"
#define CSTESTS_MCLASS_ASSEMBLY_NAME_T                                     TEXT("CSTests.MClass")
#define CSTESTS_MCLASS_ASSEMBLY_VERSION                                          1.0.1017.1
#define CSTESTS_MCLASS_ASSEMBLY_VERSION_A                                       "1.0.1017.1"
#define CSTESTS_MCLASS_ASSEMBLY_VERSION_W                                      L"1.0.1017.1"
#define CSTESTS_MCLASS_ASSEMBLY_VERSION_S                                      S"1.0.1017.1"
#define CSTESTS_MCLASS_ASSEMBLY_VERSION_T                                  TEXT("1.0.1017.1")
#define CSTESTS_MCLASS_ASSEMBLY_VERSION_IL                                        1:0:1017:1
#define CSTESTS_MCLASS_ASSEMBLY_PUBLIC_KEY                                       002400000480000094000000060200000024000052534131000400000100010027a5d41f8f8fa9a5a20c0233929672c5e66e7f1a1d83ac6e63ae017b7a3df14a5dfe9630da0b45f95aca9aff0aee36a18f3fda3552bdfb5285094083b1f7ce394e933e0713116fedad3120f4e8e6ba9bfecdc75953eef205448d91bf46c72cec6e013921ecf57a729045d95822a6c331d31899374cb27172109bdc920d9814c0
#define CSTESTS_MCLASS_ASSEMBLY_PUBLIC_KEY_A                                    "002400000480000094000000060200000024000052534131000400000100010027a5d41f8f8fa9a5a20c0233929672c5e66e7f1a1d83ac6e63ae017b7a3df14a5dfe9630da0b45f95aca9aff0aee36a18f3fda3552bdfb5285094083b1f7ce394e933e0713116fedad3120f4e8e6ba9bfecdc75953eef205448d91bf46c72cec6e013921ecf57a729045d95822a6c331d31899374cb27172109bdc920d9814c0"
#define CSTESTS_MCLASS_ASSEMBLY_PUBLIC_KEY_W                                   L"002400000480000094000000060200000024000052534131000400000100010027a5d41f8f8fa9a5a20c0233929672c5e66e7f1a1d83ac6e63ae017b7a3df14a5dfe9630da0b45f95aca9aff0aee36a18f3fda3552bdfb5285094083b1f7ce394e933e0713116fedad3120f4e8e6ba9bfecdc75953eef205448d91bf46c72cec6e013921ecf57a729045d95822a6c331d31899374cb27172109bdc920d9814c0"
#define CSTESTS_MCLASS_ASSEMBLY_PUBLIC_KEY_S                                   S"002400000480000094000000060200000024000052534131000400000100010027a5d41f8f8fa9a5a20c0233929672c5e66e7f1a1d83ac6e63ae017b7a3df14a5dfe9630da0b45f95aca9aff0aee36a18f3fda3552bdfb5285094083b1f7ce394e933e0713116fedad3120f4e8e6ba9bfecdc75953eef205448d91bf46c72cec6e013921ecf57a729045d95822a6c331d31899374cb27172109bdc920d9814c0"
#define CSTESTS_MCLASS_ASSEMBLY_PUBLIC_KEY_T                               TEXT("002400000480000094000000060200000024000052534131000400000100010027a5d41f8f8fa9a5a20c0233929672c5e66e7f1a1d83ac6e63ae017b7a3df14a5dfe9630da0b45f95aca9aff0aee36a18f3fda3552bdfb5285094083b1f7ce394e933e0713116fedad3120f4e8e6ba9bfecdc75953eef205448d91bf46c72cec6e013921ecf57a729045d95822a6c331d31899374cb27172109bdc920d9814c0")
#define CSTESTS_MCLASS_ASSEMBLY_PUBLIC_KEY_IL                                    (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 27 a5 d4 1f 8f 8f a9 a5 a2 0c 02 33 92 96 72 c5 e6 6e 7f 1a 1d 83 ac 6e 63 ae 01 7b 7a 3d f1 4a 5d fe 96 30 da 0b 45 f9 5a ca 9a ff 0a ee 36 a1 8f 3f da 35 52 bd fb 52 85 09 40 83 b1 f7 ce 39 4e 93 3e 07 13 11 6f ed ad 31 20 f4 e8 e6 ba 9b fe cd c7 59 53 ee f2 05 44 8d 91 bf 46 c7 2c ec 6e 01 39 21 ec f5 7a 72 90 45 d9 58 22 a6 c3 31 d3 18 99 37 4c b2 71 72 10 9b dc 92 0d 98 14 c0 )
#define CSTESTS_MCLASS_ASSEMBLY_PUBLIC_KEY_TOKEN                                 1a5b963c6f0fbeab
#define CSTESTS_MCLASS_ASSEMBLY_PUBLIC_KEY_TOKEN_A                              "1a5b963c6f0fbeab"
#define CSTESTS_MCLASS_ASSEMBLY_PUBLIC_KEY_TOKEN_W                             L"1a5b963c6f0fbeab"
#define CSTESTS_MCLASS_ASSEMBLY_PUBLIC_KEY_TOKEN_S                             S"1a5b963c6f0fbeab"
#define CSTESTS_MCLASS_ASSEMBLY_PUBLIC_KEY_TOKEN_T                         TEXT("1a5b963c6f0fbeab")
#define CSTESTS_MCLASS_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                              (1a 5b 96 3c 6f 0f be ab )
#define CSTESTS_MCLASS_ASSEMBLY_CULTURE                                          neutral
#define CSTESTS_MCLASS_ASSEMBLY_CULTURE_A                                       "neutral"
#define CSTESTS_MCLASS_ASSEMBLY_CULTURE_W                                      L"neutral"
#define CSTESTS_MCLASS_ASSEMBLY_CULTURE_S                                      S"neutral"
#define CSTESTS_MCLASS_ASSEMBLY_CULTURE_T                                  TEXT("neutral")
#define CSTESTS_MCLASS_ASSEMBLY_PROCESSOR_ARCHITECTURE                           msil
#define CSTESTS_MCLASS_ASSEMBLY_PROCESSOR_ARCHITECTURE_A                        "msil"
#define CSTESTS_MCLASS_ASSEMBLY_PROCESSOR_ARCHITECTURE_W                       L"msil"
#define CSTESTS_MCLASS_ASSEMBLY_PROCESSOR_ARCHITECTURE_S                       S"msil"
#define CSTESTS_MCLASS_ASSEMBLY_PROCESSOR_ARCHITECTURE_T                   TEXT("msil")
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\internal\Base\lib\i386\versionsmk.inc ===
#
# Copyright (c) Microsoft Corporation
#

WINDOWS_ASSEMBLY_VERSION=5.2.3668.0
CLR10_VERSION=1.0.3300.0
CLR11_VERSION=1.0.5000.0
CLR12_VERSION=2.0.3600.0
CLR_VERSION=2.0.3600.0
VS_VERSION=8.0.1200.0
COREXT_VERSION=1.0.1017.1
CLR_PUBLIC_KEY_TOKEN=b77a5c561934e089
CLR_PUBLIC_KEY_STRING=00000000000000000400000000000000
CLR_KEY_FILE=%SDXROOT%\\public\\internal\\strongnamekeys\\fake\\MyKeyFile.snk
CLR2_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
CLR2_PUBLIC_KEY_STRING=2411111111111111111111111111111111111112
CLR2_KEY_FILE=%SDXROOT%\\public\\internal\\strongnamekeys\\fake\\MyKeyFile.snk
COREXT_PUBLIC_KEY_TOKEN=1a5b963c6f0fbeab
COREXT_PUBLIC_KEY_STRING=002400000480000094000000060200000024000052534131000400000100010027a5d41f8f8fa9a5a20c0233929672c5e66e7f1a1d83ac6e63ae017b7a3df14a5dfe9630da0b45f95aca9aff0aee36a18f3fda3552bdfb5285094083b1f7ce394e933e0713116fedad3120f4e8e6ba9bfecdc75953eef205448d91bf46c72cec6e013921ecf57a729045d95822a6c331d31899374cb27172109bdc920d9814c0
COREXT_KEY_FILE=%SDXROOT%\\public\\internal\\strongnamekeys\\fake\\CoreXTTestKey.snk
SYSTEM_ASSEMBLY_IDENTITY_REF=System,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_ASSEMBLY_IDENTITY_DEF=System,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
SYSTEM_ASSEMBLY_IDENTITY_FRIEND_REF=System,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_ASSEMBLY_IDENTITY_EXACT_REF=System,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
SYSTEM_ASSEMBLY_NAME=System
SYSTEM_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_ASSEMBLY_PUBLIC_KEY_TOKEN=b77a5c561934e089
SYSTEM_ASSEMBLY_CULTURE=neutral
SYSTEM_ASSEMBLY_PROCESS_ARCHITECTURE=msil
SYSTEM_DRAWING_ASSEMBLY_IDENTITY_REF=System.Drawing,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DRAWING_ASSEMBLY_IDENTITY_DEF=System.Drawing,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
SYSTEM_DRAWING_ASSEMBLY_IDENTITY_FRIEND_REF=System.Drawing,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DRAWING_ASSEMBLY_IDENTITY_EXACT_REF=System.Drawing,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
SYSTEM_DRAWING_ASSEMBLY_NAME=System.Drawing
SYSTEM_DRAWING_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_DRAWING_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_DRAWING_ASSEMBLY_CULTURE=neutral
SYSTEM_DRAWING_ASSEMBLY_PROCESS_ARCHITECTURE=msil
SYSTEM_DATA_ASSEMBLY_IDENTITY_REF=System.Data,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_DATA_ASSEMBLY_IDENTITY_DEF=System.Data,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
SYSTEM_DATA_ASSEMBLY_IDENTITY_FRIEND_REF=System.Data,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_DATA_ASSEMBLY_IDENTITY_EXACT_REF=System.Data,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
SYSTEM_DATA_ASSEMBLY_NAME=System.Data
SYSTEM_DATA_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_DATA_ASSEMBLY_PUBLIC_KEY_TOKEN=b77a5c561934e089
SYSTEM_DATA_ASSEMBLY_CULTURE=neutral
SYSTEM_DATA_ASSEMBLY_PROCESS_ARCHITECTURE=msil
SYSTEM_WEB_ASSEMBLY_IDENTITY_REF=System.Web,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_ASSEMBLY_IDENTITY_DEF=System.Web,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
SYSTEM_WEB_ASSEMBLY_IDENTITY_FRIEND_REF=System.Web,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_ASSEMBLY_IDENTITY_EXACT_REF=System.Web,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
SYSTEM_WEB_ASSEMBLY_NAME=System.Web
SYSTEM_WEB_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_WEB_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_WEB_ASSEMBLY_CULTURE=neutral
SYSTEM_WEB_ASSEMBLY_PROCESS_ARCHITECTURE=msil
SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_REF=System.Web.Services,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_DEF=System.Web.Services,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_FRIEND_REF=System.Web.Services,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_SERVICES_ASSEMBLY_IDENTITY_EXACT_REF=System.Web.Services,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
SYSTEM_WEB_SERVICES_ASSEMBLY_NAME=System.Web.Services
SYSTEM_WEB_SERVICES_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_WEB_SERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_WEB_SERVICES_ASSEMBLY_CULTURE=neutral
SYSTEM_WEB_SERVICES_ASSEMBLY_PROCESS_ARCHITECTURE=msil
SYSTEM_XML_ASSEMBLY_IDENTITY_REF=System.Xml,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_XML_ASSEMBLY_IDENTITY_DEF=System.Xml,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
SYSTEM_XML_ASSEMBLY_IDENTITY_FRIEND_REF=System.Xml,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_XML_ASSEMBLY_IDENTITY_EXACT_REF=System.Xml,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
SYSTEM_XML_ASSEMBLY_NAME=System.Xml
SYSTEM_XML_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_XML_ASSEMBLY_PUBLIC_KEY_TOKEN=b77a5c561934e089
SYSTEM_XML_ASSEMBLY_CULTURE=neutral
SYSTEM_XML_ASSEMBLY_PROCESS_ARCHITECTURE=msil
MSCORLIB_ASSEMBLY_IDENTITY_REF=mscorlib,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
MSCORLIB_ASSEMBLY_IDENTITY_DEF=mscorlib,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
MSCORLIB_ASSEMBLY_IDENTITY_FRIEND_REF=mscorlib,publicKeyToken=b77a5c561934e089,culture=neutral
MSCORLIB_ASSEMBLY_IDENTITY_EXACT_REF=mscorlib,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
MSCORLIB_ASSEMBLY_NAME=mscorlib
MSCORLIB_ASSEMBLY_VERSION=2.0.3600.0
MSCORLIB_ASSEMBLY_PUBLIC_KEY_TOKEN=b77a5c561934e089
MSCORLIB_ASSEMBLY_CULTURE=neutral
MSCORLIB_ASSEMBLY_PROCESS_ARCHITECTURE=msil
MICROSOFT_VISUALC_ASSEMBLY_IDENTITY_REF=Microsoft.VisualC,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALC_ASSEMBLY_IDENTITY_DEF=Microsoft.VisualC,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=x86
MICROSOFT_VISUALC_ASSEMBLY_IDENTITY_FRIEND_REF=Microsoft.VisualC,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALC_ASSEMBLY_IDENTITY_EXACT_REF=Microsoft.VisualC,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=x86
MICROSOFT_VISUALC_ASSEMBLY_NAME=Microsoft.VisualC
MICROSOFT_VISUALC_ASSEMBLY_VERSION=8.0.1200.0
MICROSOFT_VISUALC_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MICROSOFT_VISUALC_ASSEMBLY_CULTURE=neutral
MICROSOFT_VISUALC_ASSEMBLY_PROCESS_ARCHITECTURE=x86
MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_REF=Microsoft.VisualBasic,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_DEF=Microsoft.VisualBasic,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_FRIEND_REF=Microsoft.VisualBasic,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_EXACT_REF=Microsoft.VisualBasic,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
MICROSOFT_VISUALBASIC_ASSEMBLY_NAME=Microsoft.VisualBasic
MICROSOFT_VISUALBASIC_ASSEMBLY_VERSION=8.0.1200.0
MICROSOFT_VISUALBASIC_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MICROSOFT_VISUALBASIC_ASSEMBLY_CULTURE=neutral
MICROSOFT_VISUALBASIC_ASSEMBLY_PROCESS_ARCHITECTURE=msil
CSCOMPMGD_ASSEMBLY_IDENTITY_REF=cscompmgd,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
CSCOMPMGD_ASSEMBLY_IDENTITY_DEF=cscompmgd,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
CSCOMPMGD_ASSEMBLY_IDENTITY_FRIEND_REF=cscompmgd,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
CSCOMPMGD_ASSEMBLY_IDENTITY_EXACT_REF=cscompmgd,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
CSCOMPMGD_ASSEMBLY_NAME=cscompmgd
CSCOMPMGD_ASSEMBLY_VERSION=8.0.1200.0
CSCOMPMGD_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
CSCOMPMGD_ASSEMBLY_CULTURE=neutral
CSCOMPMGD_ASSEMBLY_PROCESS_ARCHITECTURE=msil
MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_REF=microsoft.jscript,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_DEF=microsoft.jscript,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_FRIEND_REF=microsoft.jscript,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_EXACT_REF=microsoft.jscript,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
MICROSOFT_JSCRIPT_ASSEMBLY_NAME=microsoft.jscript
MICROSOFT_JSCRIPT_ASSEMBLY_VERSION=8.0.1200.0
MICROSOFT_JSCRIPT_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MICROSOFT_JSCRIPT_ASSEMBLY_CULTURE=neutral
MICROSOFT_JSCRIPT_ASSEMBLY_PROCESS_ARCHITECTURE=msil
MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_REF=microsoft.visualbasic.vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_DEF=microsoft.visualbasic.vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_FRIEND_REF=microsoft.visualbasic.vsa,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_EXACT_REF=microsoft.visualbasic.vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_NAME=microsoft.visualbasic.vsa
MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_VERSION=8.0.1200.0
MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_CULTURE=neutral
MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_PROCESS_ARCHITECTURE=msil
MICROSOFT_VSA_ASSEMBLY_IDENTITY_REF=microsoft.vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VSA_ASSEMBLY_IDENTITY_DEF=microsoft.vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
MICROSOFT_VSA_ASSEMBLY_IDENTITY_FRIEND_REF=microsoft.vsa,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VSA_ASSEMBLY_IDENTITY_EXACT_REF=microsoft.vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
MICROSOFT_VSA_ASSEMBLY_NAME=microsoft.vsa
MICROSOFT_VSA_ASSEMBLY_VERSION=8.0.1200.0
MICROSOFT_VSA_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MICROSOFT_VSA_ASSEMBLY_CULTURE=neutral
MICROSOFT_VSA_ASSEMBLY_PROCESS_ARCHITECTURE=msil
MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_REF=microsoft.vsa.vb.codedomprocessor,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_DEF=microsoft.vsa.vb.codedomprocessor,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_FRIEND_REF=microsoft.vsa.vb.codedomprocessor,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_IDENTITY_EXACT_REF=microsoft.vsa.vb.codedomprocessor,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_NAME=microsoft.vsa.vb.codedomprocessor
MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_VERSION=8.0.1200.0
MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_CULTURE=neutral
MICROSOFT_VSA_VB_CODEDOMPROCESSOR_ASSEMBLY_PROCESS_ARCHITECTURE=msil
SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_REF=System.Windows.Forms,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_DEF=System.Windows.Forms,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_FRIEND_REF=System.Windows.Forms,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_WINDOWS_FORMS_ASSEMBLY_IDENTITY_EXACT_REF=System.Windows.Forms,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
SYSTEM_WINDOWS_FORMS_ASSEMBLY_NAME=System.Windows.Forms
SYSTEM_WINDOWS_FORMS_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_WINDOWS_FORMS_ASSEMBLY_PUBLIC_KEY_TOKEN=b77a5c561934e089
SYSTEM_WINDOWS_FORMS_ASSEMBLY_CULTURE=neutral
SYSTEM_WINDOWS_FORMS_ASSEMBLY_PROCESS_ARCHITECTURE=msil
SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_REF=System.Configuration.Install,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_DEF=System.Configuration.Install,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_FRIEND_REF=System.Configuration.Install,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_EXACT_REF=System.Configuration.Install,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_NAME=System.Configuration.Install
SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_CULTURE=neutral
SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_PROCESS_ARCHITECTURE=msil
SYSTEM_DESIGN_ASSEMBLY_IDENTITY_REF=System.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DESIGN_ASSEMBLY_IDENTITY_DEF=System.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
SYSTEM_DESIGN_ASSEMBLY_IDENTITY_FRIEND_REF=System.Design,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DESIGN_ASSEMBLY_IDENTITY_EXACT_REF=System.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
SYSTEM_DESIGN_ASSEMBLY_NAME=System.Design
SYSTEM_DESIGN_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_DESIGN_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_DESIGN_ASSEMBLY_CULTURE=neutral
SYSTEM_DESIGN_ASSEMBLY_PROCESS_ARCHITECTURE=msil
SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_REF=System.ServiceProcess,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_DEF=System.ServiceProcess,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_FRIEND_REF=System.ServiceProcess,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_SERVICEPROCESS_ASSEMBLY_IDENTITY_EXACT_REF=System.ServiceProcess,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
SYSTEM_SERVICEPROCESS_ASSEMBLY_NAME=System.ServiceProcess
SYSTEM_SERVICEPROCESS_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_SERVICEPROCESS_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_SERVICEPROCESS_ASSEMBLY_CULTURE=neutral
SYSTEM_SERVICEPROCESS_ASSEMBLY_PROCESS_ARCHITECTURE=msil
SYSTEM_SECURITY_ASSEMBLY_IDENTITY_REF=System.Security,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_SECURITY_ASSEMBLY_IDENTITY_DEF=System.Security,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
SYSTEM_SECURITY_ASSEMBLY_IDENTITY_FRIEND_REF=System.Security,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_SECURITY_ASSEMBLY_IDENTITY_EXACT_REF=System.Security,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
SYSTEM_SECURITY_ASSEMBLY_NAME=System.Security
SYSTEM_SECURITY_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_SECURITY_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_SECURITY_ASSEMBLY_CULTURE=neutral
SYSTEM_SECURITY_ASSEMBLY_PROCESS_ARCHITECTURE=msil
SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_REF=System.EnterpriseServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_DEF=System.EnterpriseServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_FRIEND_REF=System.EnterpriseServices,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_EXACT_REF=System.EnterpriseServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
SYSTEM_ENTERPRISESERVICES_ASSEMBLY_NAME=System.EnterpriseServices
SYSTEM_ENTERPRISESERVICES_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_ENTERPRISESERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_ENTERPRISESERVICES_ASSEMBLY_CULTURE=neutral
SYSTEM_ENTERPRISESERVICES_ASSEMBLY_PROCESS_ARCHITECTURE=msil
SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_REF=System.Management,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_DEF=System.Management,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_FRIEND_REF=System.Management,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_EXACT_REF=System.Management,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
SYSTEM_MANAGEMENT_ASSEMBLY_NAME=System.Management
SYSTEM_MANAGEMENT_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_MANAGEMENT_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_MANAGEMENT_ASSEMBLY_CULTURE=neutral
SYSTEM_MANAGEMENT_ASSEMBLY_PROCESS_ARCHITECTURE=msil
SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_REF=System.DirectoryServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_DEF=System.DirectoryServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_FRIEND_REF=System.DirectoryServices,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_EXACT_REF=System.DirectoryServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
SYSTEM_DIRECTORYSERVICES_ASSEMBLY_NAME=System.DirectoryServices
SYSTEM_DIRECTORYSERVICES_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_DIRECTORYSERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_DIRECTORYSERVICES_ASSEMBLY_CULTURE=neutral
SYSTEM_DIRECTORYSERVICES_ASSEMBLY_PROCESS_ARCHITECTURE=msil
SYSTEM_DATA_SQLXML_ASSEMBLY_IDENTITY_REF=System.Data.SqlXml,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DATA_SQLXML_ASSEMBLY_IDENTITY_DEF=System.Data.SqlXml,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
SYSTEM_DATA_SQLXML_ASSEMBLY_IDENTITY_FRIEND_REF=System.Data.SqlXml,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DATA_SQLXML_ASSEMBLY_IDENTITY_EXACT_REF=System.Data.SqlXml,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
SYSTEM_DATA_SQLXML_ASSEMBLY_NAME=System.Data.SqlXml
SYSTEM_DATA_SQLXML_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_DATA_SQLXML_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_DATA_SQLXML_ASSEMBLY_CULTURE=neutral
SYSTEM_DATA_SQLXML_ASSEMBLY_PROCESS_ARCHITECTURE=msil
SYSTEM_MESSAGEBUS_ASSEMBLY_IDENTITY_REF=System.MessageBus,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_MESSAGEBUS_ASSEMBLY_IDENTITY_DEF=System.MessageBus,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
SYSTEM_MESSAGEBUS_ASSEMBLY_IDENTITY_FRIEND_REF=System.MessageBus,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_MESSAGEBUS_ASSEMBLY_IDENTITY_EXACT_REF=System.MessageBus,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
SYSTEM_MESSAGEBUS_ASSEMBLY_NAME=System.MessageBus
SYSTEM_MESSAGEBUS_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_MESSAGEBUS_ASSEMBLY_PUBLIC_KEY_TOKEN=b77a5c561934e089
SYSTEM_MESSAGEBUS_ASSEMBLY_CULTURE=neutral
SYSTEM_MESSAGEBUS_ASSEMBLY_PROCESS_ARCHITECTURE=msil
SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_IDENTITY_REF=System.Data.ObjectSpaces,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_IDENTITY_DEF=System.Data.ObjectSpaces,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_IDENTITY_FRIEND_REF=System.Data.ObjectSpaces,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_IDENTITY_EXACT_REF=System.Data.ObjectSpaces,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_NAME=System.Data.ObjectSpaces
SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_PUBLIC_KEY_TOKEN=b77a5c561934e089
SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_CULTURE=neutral
SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_PROCESS_ARCHITECTURE=msil
SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_REF=System.Data.OracleClient,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_DEF=System.Data.OracleClient,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_FRIEND_REF=System.Data.OracleClient,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_EXACT_REF=System.Data.OracleClient,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_NAME=System.Data.OracleClient
SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_PUBLIC_KEY_TOKEN=b77a5c561934e089
SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_CULTURE=neutral
SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_PROCESS_ARCHITECTURE=msil
SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_IDENTITY_REF=System.DeploymentFramework,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_IDENTITY_DEF=System.DeploymentFramework,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_IDENTITY_FRIEND_REF=System.DeploymentFramework,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_IDENTITY_EXACT_REF=System.DeploymentFramework,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_NAME=System.DeploymentFramework
SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_CULTURE=neutral
SYSTEM_DEPLOYMENTFRAMEWORK_ASSEMBLY_PROCESS_ARCHITECTURE=msil
SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_REF=System.Drawing.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_DEF=System.Drawing.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_FRIEND_REF=System.Drawing.Design,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_EXACT_REF=System.Drawing.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
SYSTEM_DRAWING_DESIGN_ASSEMBLY_NAME=System.Drawing.Design
SYSTEM_DRAWING_DESIGN_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_DRAWING_DESIGN_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_DRAWING_DESIGN_ASSEMBLY_CULTURE=neutral
SYSTEM_DRAWING_DESIGN_ASSEMBLY_PROCESS_ARCHITECTURE=msil
SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_IDENTITY_REF=System.MessageBus.Tools,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_IDENTITY_DEF=System.MessageBus.Tools,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_IDENTITY_FRIEND_REF=System.MessageBus.Tools,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_IDENTITY_EXACT_REF=System.MessageBus.Tools,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_NAME=System.MessageBus.Tools
SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_PUBLIC_KEY_TOKEN=b77a5c561934e089
SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_CULTURE=neutral
SYSTEM_MESSAGEBUS_TOOLS_ASSEMBLY_PROCESS_ARCHITECTURE=msil
SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_REF=System.Messaging,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_DEF=System.Messaging,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_FRIEND_REF=System.Messaging,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_MESSAGING_ASSEMBLY_IDENTITY_EXACT_REF=System.Messaging,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
SYSTEM_MESSAGING_ASSEMBLY_NAME=System.Messaging
SYSTEM_MESSAGING_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_MESSAGING_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_MESSAGING_ASSEMBLY_CULTURE=neutral
SYSTEM_MESSAGING_ASSEMBLY_PROCESS_ARCHITECTURE=msil
SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_REF=System.Runtime.Remoting,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_DEF=System.Runtime.Remoting,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_FRIEND_REF=System.Runtime.Remoting,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_RUNTIME_REMOTING_ASSEMBLY_IDENTITY_EXACT_REF=System.Runtime.Remoting,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
SYSTEM_RUNTIME_REMOTING_ASSEMBLY_NAME=System.Runtime.Remoting
SYSTEM_RUNTIME_REMOTING_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_RUNTIME_REMOTING_ASSEMBLY_PUBLIC_KEY_TOKEN=b77a5c561934e089
SYSTEM_RUNTIME_REMOTING_ASSEMBLY_CULTURE=neutral
SYSTEM_RUNTIME_REMOTING_ASSEMBLY_PROCESS_ARCHITECTURE=msil
SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_REF=System.Runtime.Serialization.Formatters.Soap,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_DEF=System.Runtime.Serialization.Formatters.Soap,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_FRIEND_REF=System.Runtime.Serialization.Formatters.Soap,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_IDENTITY_EXACT_REF=System.Runtime.Serialization.Formatters.Soap,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_NAME=System.Runtime.Serialization.Formatters.Soap
SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_CULTURE=neutral
SYSTEM_RUNTIME_SERIALIZATION_FORMATTERS_SOAP_ASSEMBLY_PROCESS_ARCHITECTURE=msil
SYSTEM_SERIALIZATION_ASSEMBLY_IDENTITY_REF=System.Serialization,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_SERIALIZATION_ASSEMBLY_IDENTITY_DEF=System.Serialization,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
SYSTEM_SERIALIZATION_ASSEMBLY_IDENTITY_FRIEND_REF=System.Serialization,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_SERIALIZATION_ASSEMBLY_IDENTITY_EXACT_REF=System.Serialization,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
SYSTEM_SERIALIZATION_ASSEMBLY_NAME=System.Serialization
SYSTEM_SERIALIZATION_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_SERIALIZATION_ASSEMBLY_PUBLIC_KEY_TOKEN=b77a5c561934e089
SYSTEM_SERIALIZATION_ASSEMBLY_CULTURE=neutral
SYSTEM_SERIALIZATION_ASSEMBLY_PROCESS_ARCHITECTURE=msil
SYSTEM_TRANSACTIONS_ASSEMBLY_IDENTITY_REF=System.Transactions,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_TRANSACTIONS_ASSEMBLY_IDENTITY_DEF=System.Transactions,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
SYSTEM_TRANSACTIONS_ASSEMBLY_IDENTITY_FRIEND_REF=System.Transactions,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_TRANSACTIONS_ASSEMBLY_IDENTITY_EXACT_REF=System.Transactions,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
SYSTEM_TRANSACTIONS_ASSEMBLY_NAME=System.Transactions
SYSTEM_TRANSACTIONS_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_TRANSACTIONS_ASSEMBLY_PUBLIC_KEY_TOKEN=b77a5c561934e089
SYSTEM_TRANSACTIONS_ASSEMBLY_CULTURE=neutral
SYSTEM_TRANSACTIONS_ASSEMBLY_PROCESS_ARCHITECTURE=msil
SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_IDENTITY_REF=System.Transactions.Oletx,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_IDENTITY_DEF=System.Transactions.Oletx,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_IDENTITY_FRIEND_REF=System.Transactions.Oletx,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_IDENTITY_EXACT_REF=System.Transactions.Oletx,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_NAME=System.Transactions.Oletx
SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_PUBLIC_KEY_TOKEN=b77a5c561934e089
SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_CULTURE=neutral
SYSTEM_TRANSACTIONS_OLETX_ASSEMBLY_PROCESS_ARCHITECTURE=msil
SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_IDENTITY_REF=System.Transactions.WsTx,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_IDENTITY_DEF=System.Transactions.WsTx,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_IDENTITY_FRIEND_REF=System.Transactions.WsTx,publicKeyToken=b77a5c561934e089,culture=neutral
SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_IDENTITY_EXACT_REF=System.Transactions.WsTx,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral,processorArchitecture=msil
SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_NAME=System.Transactions.WsTx
SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_PUBLIC_KEY_TOKEN=b77a5c561934e089
SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_CULTURE=neutral
SYSTEM_TRANSACTIONS_WSTX_ASSEMBLY_PROCESS_ARCHITECTURE=msil
SYSTEM_WEB_MOBILE_ASSEMBLY_IDENTITY_REF=System.Web.Mobile,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_MOBILE_ASSEMBLY_IDENTITY_DEF=System.Web.Mobile,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
SYSTEM_WEB_MOBILE_ASSEMBLY_IDENTITY_FRIEND_REF=System.Web.Mobile,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_MOBILE_ASSEMBLY_IDENTITY_EXACT_REF=System.Web.Mobile,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
SYSTEM_WEB_MOBILE_ASSEMBLY_NAME=System.Web.Mobile
SYSTEM_WEB_MOBILE_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_WEB_MOBILE_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_WEB_MOBILE_ASSEMBLY_CULTURE=neutral
SYSTEM_WEB_MOBILE_ASSEMBLY_PROCESS_ARCHITECTURE=msil
SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_REF=System.Web.RegularExpressions,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_DEF=System.Web.RegularExpressions,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_FRIEND_REF=System.Web.RegularExpressions,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_IDENTITY_EXACT_REF=System.Web.RegularExpressions,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral,processorArchitecture=msil
SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_NAME=System.Web.RegularExpressions
SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_VERSION=2.0.3600.0
SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_PUBLIC_KEY_TOKEN=b03f5f7f11d50a3a
SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_CULTURE=neutral
SYSTEM_WEB_REGULAREXPRESSIONS_ASSEMBLY_PROCESS_ARCHITECTURE=msil
CLASSLIBRARY1_CLASS1_ASSEMBLY_IDENTITY_REF=ClassLibrary1.Class1,version=1.0.1017.1,publicKeyToken=1a5b963c6f0fbeab,culture=neutral
CLASSLIBRARY1_CLASS1_ASSEMBLY_IDENTITY_DEF=ClassLibrary1.Class1,version=1.0.1017.1,publicKeyToken=1a5b963c6f0fbeab,culture=neutral,processorArchitecture=msil
CLASSLIBRARY1_CLASS1_ASSEMBLY_IDENTITY_FRIEND_REF=ClassLibrary1.Class1,publicKeyToken=1a5b963c6f0fbeab,culture=neutral
CLASSLIBRARY1_CLASS1_ASSEMBLY_IDENTITY_EXACT_REF=ClassLibrary1.Class1,version=1.0.1017.1,publicKeyToken=1a5b963c6f0fbeab,culture=neutral,processorArchitecture=msil
CLASSLIBRARY1_CLASS1_ASSEMBLY_NAME=ClassLibrary1.Class1
CLASSLIBRARY1_CLASS1_ASSEMBLY_VERSION=1.0.1017.1
CLASSLIBRARY1_CLASS1_ASSEMBLY_PUBLIC_KEY_TOKEN=1a5b963c6f0fbeab
CLASSLIBRARY1_CLASS1_ASSEMBLY_CULTURE=neutral
CLASSLIBRARY1_CLASS1_ASSEMBLY_PROCESS_ARCHITECTURE=msil
CSTESTS_MCLASS_ASSEMBLY_IDENTITY_REF=CSTests.MClass,version=1.0.1017.1,publicKeyToken=1a5b963c6f0fbeab,culture=neutral
CSTESTS_MCLASS_ASSEMBLY_IDENTITY_DEF=CSTests.MClass,version=1.0.1017.1,publicKeyToken=1a5b963c6f0fbeab,culture=neutral,processorArchitecture=msil
CSTESTS_MCLASS_ASSEMBLY_IDENTITY_FRIEND_REF=CSTests.MClass,publicKeyToken=1a5b963c6f0fbeab,culture=neutral
CSTESTS_MCLASS_ASSEMBLY_IDENTITY_EXACT_REF=CSTests.MClass,version=1.0.1017.1,publicKeyToken=1a5b963c6f0fbeab,culture=neutral,processorArchitecture=msil
CSTESTS_MCLASS_ASSEMBLY_NAME=CSTests.MClass
CSTESTS_MCLASS_ASSEMBLY_VERSION=1.0.1017.1
CSTESTS_MCLASS_ASSEMBLY_PUBLIC_KEY_TOKEN=1a5b963c6f0fbeab
CSTESTS_MCLASS_ASSEMBLY_CULTURE=neutral
CSTESTS_MCLASS_ASSEMBLY_PROCESS_ARCHITECTURE=msil
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\internal\Base\lib\i386\ndp20.versions.h ===
/*
 * Copyright (c) Microsoft Corporation
 */

/* This file was generated by genid.bat. */

#define CLR11_VERSION_A       "1.0.5000.0"
#define CLR11_VERSION_W      L"1.0.5000.0"
#define CLR11_VERSION_T  TEXT("1.0.5000.0")
#define CLR11_VERSION_S      S"1.0.5000.0"
#define CLR20_VERSION_A       "2.0.3600.0"
#define CLR20_VERSION_W      L"2.0.3600.0"
#define CLR20_VERSION_T  TEXT("2.0.3600.0")
#define CLR20_VERSION_S      S"2.0.3600.0"
#define VS70_VERSION_A       "7.0.3300.0"
#define VS70_VERSION_W      L"7.0.3300.0"
#define VS70_VERSION_T  TEXT("7.0.3300.0")
#define VS70_VERSION_S      S"7.0.3300.0"
#define VS71_VERSION_A       "7.0.5000.0"
#define VS71_VERSION_W      L"7.0.5000.0"
#define VS71_VERSION_T  TEXT("7.0.5000.0")
#define VS71_VERSION_S      S"7.0.5000.0"
#define VS80_VERSION_A       "8.0.1200.0"
#define VS80_VERSION_W      L"8.0.1200.0"
#define VS80_VERSION_T  TEXT("8.0.1200.0")
#define VS80_VERSION_S      S"8.0.1200.0"
#define VS71A_VERSION_A       "7.1.3300.0"
#define VS71A_VERSION_W      L"7.1.3300.0"
#define VS71A_VERSION_T  TEXT("7.1.3300.0")
#define VS71A_VERSION_S      S"7.1.3300.0"
#define VS80A_VERSION_A       "8.0.0.0"
#define VS80A_VERSION_W      L"8.0.0.0"
#define VS80A_VERSION_T  TEXT("8.0.0.0")
#define VS80A_VERSION_S      S"8.0.0.0"
#define CLR20_PUBLIC_KEY_TOKEN_A       "b77a5c561934e089"
#define CLR20_PUBLIC_KEY_TOKEN_W      L"b77a5c561934e089"
#define CLR20_PUBLIC_KEY_TOKEN_T  TEXT("b77a5c561934e089")
#define CLR20_PUBLIC_KEY_TOKEN_S      S"b77a5c561934e089"
#define CLR20_PUBLIC_KEY_STRING_A       "00000000000000000400000000000000"
#define CLR20_PUBLIC_KEY_STRING_W      L"00000000000000000400000000000000"
#define CLR20_PUBLIC_KEY_STRING_T  TEXT("00000000000000000400000000000000")
#define CLR20_PUBLIC_KEY_STRING_S      S"00000000000000000400000000000000"
#define CLR20_KEY_FILE_A       "%SDXROOT%\\public\\internal\\strongnamekeys\\fake\\MyKeyFile.snk"
#define CLR20_KEY_FILE_W      L"%SDXROOT%\\public\\internal\\strongnamekeys\\fake\\MyKeyFile.snk"
#define CLR20_KEY_FILE_T  TEXT("%SDXROOT%\\public\\internal\\strongnamekeys\\fake\\MyKeyFile.snk")
#define CLR20_KEY_FILE_S      S"%SDXROOT%\\public\\internal\\strongnamekeys\\fake\\MyKeyFile.snk"
#define CLR20_2_PUBLIC_KEY_TOKEN_A       "b03f5f7f11d50a3a"
#define CLR20_2_PUBLIC_KEY_TOKEN_W      L"b03f5f7f11d50a3a"
#define CLR20_2_PUBLIC_KEY_TOKEN_T  TEXT("b03f5f7f11d50a3a")
#define CLR20_2_PUBLIC_KEY_TOKEN_S      S"b03f5f7f11d50a3a"
#define CLR20_2_PUBLIC_KEY_STRING_A       "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define CLR20_2_PUBLIC_KEY_STRING_W      L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define CLR20_2_PUBLIC_KEY_STRING_T  TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define CLR20_2_PUBLIC_KEY_STRING_S      S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define CLR20_2_KEY_FILE_A       "%SDXROOT%\\public\\internal\\strongnamekeys\\fake\\MyKeyFile.snk"
#define CLR20_2_KEY_FILE_W      L"%SDXROOT%\\public\\internal\\strongnamekeys\\fake\\MyKeyFile.snk"
#define CLR20_2_KEY_FILE_T  TEXT("%SDXROOT%\\public\\internal\\strongnamekeys\\fake\\MyKeyFile.snk")
#define CLR20_2_KEY_FILE_S      S"%SDXROOT%\\public\\internal\\strongnamekeys\\fake\\MyKeyFile.snk"
#define ACCESSIBILITY_ASSEMBLY_IDENTITY_DEF                                      Accessibility,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define ACCESSIBILITY_ASSEMBLY_IDENTITY_DEF_A                                   "Accessibility,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ACCESSIBILITY_ASSEMBLY_IDENTITY_DEF_W                                  L"Accessibility,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ACCESSIBILITY_ASSEMBLY_IDENTITY_DEF_S                                  S"Accessibility,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ACCESSIBILITY_ASSEMBLY_IDENTITY_DEF_T                              TEXT("Accessibility,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define ACCESSIBILITY_ASSEMBLY_IDENTITY_REF                                      Accessibility,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define ACCESSIBILITY_ASSEMBLY_IDENTITY_REF_A                                   "Accessibility,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ACCESSIBILITY_ASSEMBLY_IDENTITY_REF_W                                  L"Accessibility,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ACCESSIBILITY_ASSEMBLY_IDENTITY_REF_S                                  S"Accessibility,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ACCESSIBILITY_ASSEMBLY_IDENTITY_REF_T                              TEXT("Accessibility,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define ACCESSIBILITY_ASSEMBLY_IDENTITY_FRIEND_REF                               Accessibility,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define ACCESSIBILITY_ASSEMBLY_IDENTITY_FRIEND_REF_A                            "Accessibility,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ACCESSIBILITY_ASSEMBLY_IDENTITY_FRIEND_REF_W                           L"Accessibility,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ACCESSIBILITY_ASSEMBLY_IDENTITY_FRIEND_REF_S                           S"Accessibility,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ACCESSIBILITY_ASSEMBLY_IDENTITY_FRIEND_REF_T                       TEXT("Accessibility,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define ACCESSIBILITY_ASSEMBLY_IDENTITY_EXACT_REF                                Accessibility,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define ACCESSIBILITY_ASSEMBLY_IDENTITY_EXACT_REF_A                             "Accessibility,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ACCESSIBILITY_ASSEMBLY_IDENTITY_EXACT_REF_W                            L"Accessibility,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ACCESSIBILITY_ASSEMBLY_IDENTITY_EXACT_REF_S                            S"Accessibility,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ACCESSIBILITY_ASSEMBLY_IDENTITY_EXACT_REF_T                        TEXT("Accessibility,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define ACCESSIBILITY_ASSEMBLY_NAME                                              Accessibility
#define ACCESSIBILITY_ASSEMBLY_NAME_A                                           "Accessibility"
#define ACCESSIBILITY_ASSEMBLY_NAME_W                                          L"Accessibility"
#define ACCESSIBILITY_ASSEMBLY_NAME_S                                          S"Accessibility"
#define ACCESSIBILITY_ASSEMBLY_NAME_T                                      TEXT("Accessibility")
#define ACCESSIBILITY_ASSEMBLY_VERSION                                           2.0.3600.0
#define ACCESSIBILITY_ASSEMBLY_VERSION_A                                        "2.0.3600.0"
#define ACCESSIBILITY_ASSEMBLY_VERSION_W                                       L"2.0.3600.0"
#define ACCESSIBILITY_ASSEMBLY_VERSION_S                                       S"2.0.3600.0"
#define ACCESSIBILITY_ASSEMBLY_VERSION_T                                   TEXT("2.0.3600.0")
#define ACCESSIBILITY_ASSEMBLY_VERSION_IL                                         2:0:3600:0
#define ACCESSIBILITY_ASSEMBLY_PUBLIC_KEY                                        002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define ACCESSIBILITY_ASSEMBLY_PUBLIC_KEY_A                                     "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define ACCESSIBILITY_ASSEMBLY_PUBLIC_KEY_W                                    L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define ACCESSIBILITY_ASSEMBLY_PUBLIC_KEY_S                                    S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define ACCESSIBILITY_ASSEMBLY_PUBLIC_KEY_T                                TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define ACCESSIBILITY_ASSEMBLY_PUBLIC_KEY_IL                                     (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define ACCESSIBILITY_ASSEMBLY_PUBLIC_KEY_TOKEN                                  b03f5f7f11d50a3a
#define ACCESSIBILITY_ASSEMBLY_PUBLIC_KEY_TOKEN_A                               "b03f5f7f11d50a3a"
#define ACCESSIBILITY_ASSEMBLY_PUBLIC_KEY_TOKEN_W                              L"b03f5f7f11d50a3a"
#define ACCESSIBILITY_ASSEMBLY_PUBLIC_KEY_TOKEN_S                              S"b03f5f7f11d50a3a"
#define ACCESSIBILITY_ASSEMBLY_PUBLIC_KEY_TOKEN_T                          TEXT("b03f5f7f11d50a3a")
#define ACCESSIBILITY_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                               (b0 3f 5f 7f 11 d5 0a 3a )
#define ACCESSIBILITY_ASSEMBLY_CULTURE                                           neutral
#define ACCESSIBILITY_ASSEMBLY_CULTURE_A                                        "neutral"
#define ACCESSIBILITY_ASSEMBLY_CULTURE_W                                       L"neutral"
#define ACCESSIBILITY_ASSEMBLY_CULTURE_S                                       S"neutral"
#define ACCESSIBILITY_ASSEMBLY_CULTURE_T                                   TEXT("neutral")
#define ADODB_ASSEMBLY_IDENTITY_DEF                                              ADODB,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define ADODB_ASSEMBLY_IDENTITY_DEF_A                                           "ADODB,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ADODB_ASSEMBLY_IDENTITY_DEF_W                                          L"ADODB,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ADODB_ASSEMBLY_IDENTITY_DEF_S                                          S"ADODB,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ADODB_ASSEMBLY_IDENTITY_DEF_T                                      TEXT("ADODB,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define ADODB_ASSEMBLY_IDENTITY_REF                                              ADODB,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define ADODB_ASSEMBLY_IDENTITY_REF_A                                           "ADODB,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ADODB_ASSEMBLY_IDENTITY_REF_W                                          L"ADODB,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ADODB_ASSEMBLY_IDENTITY_REF_S                                          S"ADODB,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ADODB_ASSEMBLY_IDENTITY_REF_T                                      TEXT("ADODB,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define ADODB_ASSEMBLY_IDENTITY_FRIEND_REF                                       ADODB,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define ADODB_ASSEMBLY_IDENTITY_FRIEND_REF_A                                    "ADODB,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ADODB_ASSEMBLY_IDENTITY_FRIEND_REF_W                                   L"ADODB,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ADODB_ASSEMBLY_IDENTITY_FRIEND_REF_S                                   S"ADODB,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ADODB_ASSEMBLY_IDENTITY_FRIEND_REF_T                               TEXT("ADODB,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define ADODB_ASSEMBLY_IDENTITY_EXACT_REF                                        ADODB,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define ADODB_ASSEMBLY_IDENTITY_EXACT_REF_A                                     "ADODB,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ADODB_ASSEMBLY_IDENTITY_EXACT_REF_W                                    L"ADODB,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ADODB_ASSEMBLY_IDENTITY_EXACT_REF_S                                    S"ADODB,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ADODB_ASSEMBLY_IDENTITY_EXACT_REF_T                                TEXT("ADODB,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define ADODB_ASSEMBLY_NAME                                                      ADODB
#define ADODB_ASSEMBLY_NAME_A                                                   "ADODB"
#define ADODB_ASSEMBLY_NAME_W                                                  L"ADODB"
#define ADODB_ASSEMBLY_NAME_S                                                  S"ADODB"
#define ADODB_ASSEMBLY_NAME_T                                              TEXT("ADODB")
#define ADODB_ASSEMBLY_VERSION                                                   7.0.3300.0
#define ADODB_ASSEMBLY_VERSION_A                                                "7.0.3300.0"
#define ADODB_ASSEMBLY_VERSION_W                                               L"7.0.3300.0"
#define ADODB_ASSEMBLY_VERSION_S                                               S"7.0.3300.0"
#define ADODB_ASSEMBLY_VERSION_T                                           TEXT("7.0.3300.0")
#define ADODB_ASSEMBLY_VERSION_IL                                                 7:0:3300:0
#define ADODB_ASSEMBLY_PUBLIC_KEY                                                002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define ADODB_ASSEMBLY_PUBLIC_KEY_A                                             "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define ADODB_ASSEMBLY_PUBLIC_KEY_W                                            L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define ADODB_ASSEMBLY_PUBLIC_KEY_S                                            S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define ADODB_ASSEMBLY_PUBLIC_KEY_T                                        TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define ADODB_ASSEMBLY_PUBLIC_KEY_IL                                             (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define ADODB_ASSEMBLY_PUBLIC_KEY_TOKEN                                          b03f5f7f11d50a3a
#define ADODB_ASSEMBLY_PUBLIC_KEY_TOKEN_A                                       "b03f5f7f11d50a3a"
#define ADODB_ASSEMBLY_PUBLIC_KEY_TOKEN_W                                      L"b03f5f7f11d50a3a"
#define ADODB_ASSEMBLY_PUBLIC_KEY_TOKEN_S                                      S"b03f5f7f11d50a3a"
#define ADODB_ASSEMBLY_PUBLIC_KEY_TOKEN_T                                  TEXT("b03f5f7f11d50a3a")
#define ADODB_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                                       (b0 3f 5f 7f 11 d5 0a 3a )
#define ADODB_ASSEMBLY_CULTURE                                                   neutral
#define ADODB_ASSEMBLY_CULTURE_A                                                "neutral"
#define ADODB_ASSEMBLY_CULTURE_W                                               L"neutral"
#define ADODB_ASSEMBLY_CULTURE_S                                               S"neutral"
#define ADODB_ASSEMBLY_CULTURE_T                                           TEXT("neutral")
#define ASPNETMMCEXT_ASSEMBLY_IDENTITY_DEF                                       AspNetMMCExt,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define ASPNETMMCEXT_ASSEMBLY_IDENTITY_DEF_A                                    "AspNetMMCExt,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ASPNETMMCEXT_ASSEMBLY_IDENTITY_DEF_W                                   L"AspNetMMCExt,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ASPNETMMCEXT_ASSEMBLY_IDENTITY_DEF_S                                   S"AspNetMMCExt,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ASPNETMMCEXT_ASSEMBLY_IDENTITY_DEF_T                               TEXT("AspNetMMCExt,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define ASPNETMMCEXT_ASSEMBLY_IDENTITY_REF                                       AspNetMMCExt,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define ASPNETMMCEXT_ASSEMBLY_IDENTITY_REF_A                                    "AspNetMMCExt,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ASPNETMMCEXT_ASSEMBLY_IDENTITY_REF_W                                   L"AspNetMMCExt,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ASPNETMMCEXT_ASSEMBLY_IDENTITY_REF_S                                   S"AspNetMMCExt,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ASPNETMMCEXT_ASSEMBLY_IDENTITY_REF_T                               TEXT("AspNetMMCExt,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define ASPNETMMCEXT_ASSEMBLY_IDENTITY_FRIEND_REF                                AspNetMMCExt,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define ASPNETMMCEXT_ASSEMBLY_IDENTITY_FRIEND_REF_A                             "AspNetMMCExt,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ASPNETMMCEXT_ASSEMBLY_IDENTITY_FRIEND_REF_W                            L"AspNetMMCExt,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ASPNETMMCEXT_ASSEMBLY_IDENTITY_FRIEND_REF_S                            S"AspNetMMCExt,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ASPNETMMCEXT_ASSEMBLY_IDENTITY_FRIEND_REF_T                        TEXT("AspNetMMCExt,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define ASPNETMMCEXT_ASSEMBLY_IDENTITY_EXACT_REF                                 AspNetMMCExt,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define ASPNETMMCEXT_ASSEMBLY_IDENTITY_EXACT_REF_A                              "AspNetMMCExt,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ASPNETMMCEXT_ASSEMBLY_IDENTITY_EXACT_REF_W                             L"AspNetMMCExt,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ASPNETMMCEXT_ASSEMBLY_IDENTITY_EXACT_REF_S                             S"AspNetMMCExt,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ASPNETMMCEXT_ASSEMBLY_IDENTITY_EXACT_REF_T                         TEXT("AspNetMMCExt,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define ASPNETMMCEXT_ASSEMBLY_NAME                                               AspNetMMCExt
#define ASPNETMMCEXT_ASSEMBLY_NAME_A                                            "AspNetMMCExt"
#define ASPNETMMCEXT_ASSEMBLY_NAME_W                                           L"AspNetMMCExt"
#define ASPNETMMCEXT_ASSEMBLY_NAME_S                                           S"AspNetMMCExt"
#define ASPNETMMCEXT_ASSEMBLY_NAME_T                                       TEXT("AspNetMMCExt")
#define ASPNETMMCEXT_ASSEMBLY_VERSION                                            2.0.3600.0
#define ASPNETMMCEXT_ASSEMBLY_VERSION_A                                         "2.0.3600.0"
#define ASPNETMMCEXT_ASSEMBLY_VERSION_W                                        L"2.0.3600.0"
#define ASPNETMMCEXT_ASSEMBLY_VERSION_S                                        S"2.0.3600.0"
#define ASPNETMMCEXT_ASSEMBLY_VERSION_T                                    TEXT("2.0.3600.0")
#define ASPNETMMCEXT_ASSEMBLY_VERSION_IL                                          2:0:3600:0
#define ASPNETMMCEXT_ASSEMBLY_PUBLIC_KEY                                         002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define ASPNETMMCEXT_ASSEMBLY_PUBLIC_KEY_A                                      "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define ASPNETMMCEXT_ASSEMBLY_PUBLIC_KEY_W                                     L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define ASPNETMMCEXT_ASSEMBLY_PUBLIC_KEY_S                                     S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define ASPNETMMCEXT_ASSEMBLY_PUBLIC_KEY_T                                 TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define ASPNETMMCEXT_ASSEMBLY_PUBLIC_KEY_IL                                      (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define ASPNETMMCEXT_ASSEMBLY_PUBLIC_KEY_TOKEN                                   b03f5f7f11d50a3a
#define ASPNETMMCEXT_ASSEMBLY_PUBLIC_KEY_TOKEN_A                                "b03f5f7f11d50a3a"
#define ASPNETMMCEXT_ASSEMBLY_PUBLIC_KEY_TOKEN_W                               L"b03f5f7f11d50a3a"
#define ASPNETMMCEXT_ASSEMBLY_PUBLIC_KEY_TOKEN_S                               S"b03f5f7f11d50a3a"
#define ASPNETMMCEXT_ASSEMBLY_PUBLIC_KEY_TOKEN_T                           TEXT("b03f5f7f11d50a3a")
#define ASPNETMMCEXT_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                                (b0 3f 5f 7f 11 d5 0a 3a )
#define ASPNETMMCEXT_ASSEMBLY_CULTURE                                            neutral
#define ASPNETMMCEXT_ASSEMBLY_CULTURE_A                                         "neutral"
#define ASPNETMMCEXT_ASSEMBLY_CULTURE_W                                        L"neutral"
#define ASPNETMMCEXT_ASSEMBLY_CULTURE_S                                        S"neutral"
#define ASPNETMMCEXT_ASSEMBLY_CULTURE_T                                    TEXT("neutral")
#define CPPCODEPROVIDER_ASSEMBLY_IDENTITY_DEF                                    CppCodeProvider,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define CPPCODEPROVIDER_ASSEMBLY_IDENTITY_DEF_A                                 "CppCodeProvider,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CPPCODEPROVIDER_ASSEMBLY_IDENTITY_DEF_W                                L"CppCodeProvider,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CPPCODEPROVIDER_ASSEMBLY_IDENTITY_DEF_S                                S"CppCodeProvider,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CPPCODEPROVIDER_ASSEMBLY_IDENTITY_DEF_T                            TEXT("CppCodeProvider,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define CPPCODEPROVIDER_ASSEMBLY_IDENTITY_REF                                    CppCodeProvider,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define CPPCODEPROVIDER_ASSEMBLY_IDENTITY_REF_A                                 "CppCodeProvider,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CPPCODEPROVIDER_ASSEMBLY_IDENTITY_REF_W                                L"CppCodeProvider,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CPPCODEPROVIDER_ASSEMBLY_IDENTITY_REF_S                                S"CppCodeProvider,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CPPCODEPROVIDER_ASSEMBLY_IDENTITY_REF_T                            TEXT("CppCodeProvider,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define CPPCODEPROVIDER_ASSEMBLY_IDENTITY_FRIEND_REF                             CppCodeProvider,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define CPPCODEPROVIDER_ASSEMBLY_IDENTITY_FRIEND_REF_A                          "CppCodeProvider,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CPPCODEPROVIDER_ASSEMBLY_IDENTITY_FRIEND_REF_W                         L"CppCodeProvider,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CPPCODEPROVIDER_ASSEMBLY_IDENTITY_FRIEND_REF_S                         S"CppCodeProvider,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CPPCODEPROVIDER_ASSEMBLY_IDENTITY_FRIEND_REF_T                     TEXT("CppCodeProvider,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define CPPCODEPROVIDER_ASSEMBLY_IDENTITY_EXACT_REF                              CppCodeProvider,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define CPPCODEPROVIDER_ASSEMBLY_IDENTITY_EXACT_REF_A                           "CppCodeProvider,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CPPCODEPROVIDER_ASSEMBLY_IDENTITY_EXACT_REF_W                          L"CppCodeProvider,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CPPCODEPROVIDER_ASSEMBLY_IDENTITY_EXACT_REF_S                          S"CppCodeProvider,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CPPCODEPROVIDER_ASSEMBLY_IDENTITY_EXACT_REF_T                      TEXT("CppCodeProvider,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define CPPCODEPROVIDER_ASSEMBLY_NAME                                            CppCodeProvider
#define CPPCODEPROVIDER_ASSEMBLY_NAME_A                                         "CppCodeProvider"
#define CPPCODEPROVIDER_ASSEMBLY_NAME_W                                        L"CppCodeProvider"
#define CPPCODEPROVIDER_ASSEMBLY_NAME_S                                        S"CppCodeProvider"
#define CPPCODEPROVIDER_ASSEMBLY_NAME_T                                    TEXT("CppCodeProvider")
#define CPPCODEPROVIDER_ASSEMBLY_VERSION                                         8.0.1200.0
#define CPPCODEPROVIDER_ASSEMBLY_VERSION_A                                      "8.0.1200.0"
#define CPPCODEPROVIDER_ASSEMBLY_VERSION_W                                     L"8.0.1200.0"
#define CPPCODEPROVIDER_ASSEMBLY_VERSION_S                                     S"8.0.1200.0"
#define CPPCODEPROVIDER_ASSEMBLY_VERSION_T                                 TEXT("8.0.1200.0")
#define CPPCODEPROVIDER_ASSEMBLY_VERSION_IL                                       8:0:1200:0
#define CPPCODEPROVIDER_ASSEMBLY_PUBLIC_KEY                                      002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define CPPCODEPROVIDER_ASSEMBLY_PUBLIC_KEY_A                                   "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define CPPCODEPROVIDER_ASSEMBLY_PUBLIC_KEY_W                                  L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define CPPCODEPROVIDER_ASSEMBLY_PUBLIC_KEY_S                                  S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define CPPCODEPROVIDER_ASSEMBLY_PUBLIC_KEY_T                              TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define CPPCODEPROVIDER_ASSEMBLY_PUBLIC_KEY_IL                                   (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define CPPCODEPROVIDER_ASSEMBLY_PUBLIC_KEY_TOKEN                                b03f5f7f11d50a3a
#define CPPCODEPROVIDER_ASSEMBLY_PUBLIC_KEY_TOKEN_A                             "b03f5f7f11d50a3a"
#define CPPCODEPROVIDER_ASSEMBLY_PUBLIC_KEY_TOKEN_W                            L"b03f5f7f11d50a3a"
#define CPPCODEPROVIDER_ASSEMBLY_PUBLIC_KEY_TOKEN_S                            S"b03f5f7f11d50a3a"
#define CPPCODEPROVIDER_ASSEMBLY_PUBLIC_KEY_TOKEN_T                        TEXT("b03f5f7f11d50a3a")
#define CPPCODEPROVIDER_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                             (b0 3f 5f 7f 11 d5 0a 3a )
#define CPPCODEPROVIDER_ASSEMBLY_CULTURE                                         neutral
#define CPPCODEPROVIDER_ASSEMBLY_CULTURE_A                                      "neutral"
#define CPPCODEPROVIDER_ASSEMBLY_CULTURE_W                                     L"neutral"
#define CPPCODEPROVIDER_ASSEMBLY_CULTURE_S                                     S"neutral"
#define CPPCODEPROVIDER_ASSEMBLY_CULTURE_T                                 TEXT("neutral")
#define CSCOMPMGD_ASSEMBLY_IDENTITY_DEF                                          cscompmgd,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define CSCOMPMGD_ASSEMBLY_IDENTITY_DEF_A                                       "cscompmgd,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CSCOMPMGD_ASSEMBLY_IDENTITY_DEF_W                                      L"cscompmgd,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CSCOMPMGD_ASSEMBLY_IDENTITY_DEF_S                                      S"cscompmgd,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CSCOMPMGD_ASSEMBLY_IDENTITY_DEF_T                                  TEXT("cscompmgd,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define CSCOMPMGD_ASSEMBLY_IDENTITY_REF                                          cscompmgd,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define CSCOMPMGD_ASSEMBLY_IDENTITY_REF_A                                       "cscompmgd,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CSCOMPMGD_ASSEMBLY_IDENTITY_REF_W                                      L"cscompmgd,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CSCOMPMGD_ASSEMBLY_IDENTITY_REF_S                                      S"cscompmgd,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CSCOMPMGD_ASSEMBLY_IDENTITY_REF_T                                  TEXT("cscompmgd,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define CSCOMPMGD_ASSEMBLY_IDENTITY_FRIEND_REF                                   cscompmgd,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define CSCOMPMGD_ASSEMBLY_IDENTITY_FRIEND_REF_A                                "cscompmgd,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CSCOMPMGD_ASSEMBLY_IDENTITY_FRIEND_REF_W                               L"cscompmgd,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CSCOMPMGD_ASSEMBLY_IDENTITY_FRIEND_REF_S                               S"cscompmgd,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CSCOMPMGD_ASSEMBLY_IDENTITY_FRIEND_REF_T                           TEXT("cscompmgd,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define CSCOMPMGD_ASSEMBLY_IDENTITY_EXACT_REF                                    cscompmgd,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define CSCOMPMGD_ASSEMBLY_IDENTITY_EXACT_REF_A                                 "cscompmgd,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CSCOMPMGD_ASSEMBLY_IDENTITY_EXACT_REF_W                                L"cscompmgd,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CSCOMPMGD_ASSEMBLY_IDENTITY_EXACT_REF_S                                S"cscompmgd,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CSCOMPMGD_ASSEMBLY_IDENTITY_EXACT_REF_T                            TEXT("cscompmgd,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define CSCOMPMGD_ASSEMBLY_NAME                                                  cscompmgd
#define CSCOMPMGD_ASSEMBLY_NAME_A                                               "cscompmgd"
#define CSCOMPMGD_ASSEMBLY_NAME_W                                              L"cscompmgd"
#define CSCOMPMGD_ASSEMBLY_NAME_S                                              S"cscompmgd"
#define CSCOMPMGD_ASSEMBLY_NAME_T                                          TEXT("cscompmgd")
#define CSCOMPMGD_ASSEMBLY_VERSION                                               8.0.1200.0
#define CSCOMPMGD_ASSEMBLY_VERSION_A                                            "8.0.1200.0"
#define CSCOMPMGD_ASSEMBLY_VERSION_W                                           L"8.0.1200.0"
#define CSCOMPMGD_ASSEMBLY_VERSION_S                                           S"8.0.1200.0"
#define CSCOMPMGD_ASSEMBLY_VERSION_T                                       TEXT("8.0.1200.0")
#define CSCOMPMGD_ASSEMBLY_VERSION_IL                                             8:0:1200:0
#define CSCOMPMGD_ASSEMBLY_PUBLIC_KEY                                            002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define CSCOMPMGD_ASSEMBLY_PUBLIC_KEY_A                                         "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define CSCOMPMGD_ASSEMBLY_PUBLIC_KEY_W                                        L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define CSCOMPMGD_ASSEMBLY_PUBLIC_KEY_S                                        S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define CSCOMPMGD_ASSEMBLY_PUBLIC_KEY_T                                    TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define CSCOMPMGD_ASSEMBLY_PUBLIC_KEY_IL                                         (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define CSCOMPMGD_ASSEMBLY_PUBLIC_KEY_TOKEN                                      b03f5f7f11d50a3a
#define CSCOMPMGD_ASSEMBLY_PUBLIC_KEY_TOKEN_A                                   "b03f5f7f11d50a3a"
#define CSCOMPMGD_ASSEMBLY_PUBLIC_KEY_TOKEN_W                                  L"b03f5f7f11d50a3a"
#define CSCOMPMGD_ASSEMBLY_PUBLIC_KEY_TOKEN_S                                  S"b03f5f7f11d50a3a"
#define CSCOMPMGD_ASSEMBLY_PUBLIC_KEY_TOKEN_T                              TEXT("b03f5f7f11d50a3a")
#define CSCOMPMGD_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                                   (b0 3f 5f 7f 11 d5 0a 3a )
#define CSCOMPMGD_ASSEMBLY_CULTURE                                               neutral
#define CSCOMPMGD_ASSEMBLY_CULTURE_A                                            "neutral"
#define CSCOMPMGD_ASSEMBLY_CULTURE_W                                           L"neutral"
#define CSCOMPMGD_ASSEMBLY_CULTURE_S                                           S"neutral"
#define CSCOMPMGD_ASSEMBLY_CULTURE_T                                       TEXT("neutral")
#define CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_DEF                                   CustomMarshalers,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_DEF_A                                "CustomMarshalers,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_DEF_W                               L"CustomMarshalers,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_DEF_S                               S"CustomMarshalers,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_DEF_T                           TEXT("CustomMarshalers,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_REF                                   CustomMarshalers,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_REF_A                                "CustomMarshalers,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_REF_W                               L"CustomMarshalers,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_REF_S                               S"CustomMarshalers,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_REF_T                           TEXT("CustomMarshalers,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_FRIEND_REF                            CustomMarshalers,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_FRIEND_REF_A                         "CustomMarshalers,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_FRIEND_REF_W                        L"CustomMarshalers,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_FRIEND_REF_S                        S"CustomMarshalers,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_FRIEND_REF_T                    TEXT("CustomMarshalers,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_EXACT_REF                             CustomMarshalers,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_EXACT_REF_A                          "CustomMarshalers,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_EXACT_REF_W                         L"CustomMarshalers,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_EXACT_REF_S                         S"CustomMarshalers,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define CUSTOMMARSHALERS_ASSEMBLY_IDENTITY_EXACT_REF_T                     TEXT("CustomMarshalers,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define CUSTOMMARSHALERS_ASSEMBLY_NAME                                           CustomMarshalers
#define CUSTOMMARSHALERS_ASSEMBLY_NAME_A                                        "CustomMarshalers"
#define CUSTOMMARSHALERS_ASSEMBLY_NAME_W                                       L"CustomMarshalers"
#define CUSTOMMARSHALERS_ASSEMBLY_NAME_S                                       S"CustomMarshalers"
#define CUSTOMMARSHALERS_ASSEMBLY_NAME_T                                   TEXT("CustomMarshalers")
#define CUSTOMMARSHALERS_ASSEMBLY_VERSION                                        2.0.3600.0
#define CUSTOMMARSHALERS_ASSEMBLY_VERSION_A                                     "2.0.3600.0"
#define CUSTOMMARSHALERS_ASSEMBLY_VERSION_W                                    L"2.0.3600.0"
#define CUSTOMMARSHALERS_ASSEMBLY_VERSION_S                                    S"2.0.3600.0"
#define CUSTOMMARSHALERS_ASSEMBLY_VERSION_T                                TEXT("2.0.3600.0")
#define CUSTOMMARSHALERS_ASSEMBLY_VERSION_IL                                      2:0:3600:0
#define CUSTOMMARSHALERS_ASSEMBLY_PUBLIC_KEY                                     002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define CUSTOMMARSHALERS_ASSEMBLY_PUBLIC_KEY_A                                  "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define CUSTOMMARSHALERS_ASSEMBLY_PUBLIC_KEY_W                                 L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define CUSTOMMARSHALERS_ASSEMBLY_PUBLIC_KEY_S                                 S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define CUSTOMMARSHALERS_ASSEMBLY_PUBLIC_KEY_T                             TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define CUSTOMMARSHALERS_ASSEMBLY_PUBLIC_KEY_IL                                  (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define CUSTOMMARSHALERS_ASSEMBLY_PUBLIC_KEY_TOKEN                               b03f5f7f11d50a3a
#define CUSTOMMARSHALERS_ASSEMBLY_PUBLIC_KEY_TOKEN_A                            "b03f5f7f11d50a3a"
#define CUSTOMMARSHALERS_ASSEMBLY_PUBLIC_KEY_TOKEN_W                           L"b03f5f7f11d50a3a"
#define CUSTOMMARSHALERS_ASSEMBLY_PUBLIC_KEY_TOKEN_S                           S"b03f5f7f11d50a3a"
#define CUSTOMMARSHALERS_ASSEMBLY_PUBLIC_KEY_TOKEN_T                       TEXT("b03f5f7f11d50a3a")
#define CUSTOMMARSHALERS_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                            (b0 3f 5f 7f 11 d5 0a 3a )
#define CUSTOMMARSHALERS_ASSEMBLY_CULTURE                                        neutral
#define CUSTOMMARSHALERS_ASSEMBLY_CULTURE_A                                     "neutral"
#define CUSTOMMARSHALERS_ASSEMBLY_CULTURE_W                                    L"neutral"
#define CUSTOMMARSHALERS_ASSEMBLY_CULTURE_S                                    S"neutral"
#define CUSTOMMARSHALERS_ASSEMBLY_CULTURE_T                                TEXT("neutral")
#define ENVDTE_ASSEMBLY_IDENTITY_DEF                                             EnvDTE,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define ENVDTE_ASSEMBLY_IDENTITY_DEF_A                                          "EnvDTE,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ENVDTE_ASSEMBLY_IDENTITY_DEF_W                                         L"EnvDTE,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ENVDTE_ASSEMBLY_IDENTITY_DEF_S                                         S"EnvDTE,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ENVDTE_ASSEMBLY_IDENTITY_DEF_T                                     TEXT("EnvDTE,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define ENVDTE_ASSEMBLY_IDENTITY_REF                                             EnvDTE,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define ENVDTE_ASSEMBLY_IDENTITY_REF_A                                          "EnvDTE,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ENVDTE_ASSEMBLY_IDENTITY_REF_W                                         L"EnvDTE,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ENVDTE_ASSEMBLY_IDENTITY_REF_S                                         S"EnvDTE,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ENVDTE_ASSEMBLY_IDENTITY_REF_T                                     TEXT("EnvDTE,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define ENVDTE_ASSEMBLY_IDENTITY_FRIEND_REF                                      EnvDTE,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define ENVDTE_ASSEMBLY_IDENTITY_FRIEND_REF_A                                   "EnvDTE,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ENVDTE_ASSEMBLY_IDENTITY_FRIEND_REF_W                                  L"EnvDTE,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ENVDTE_ASSEMBLY_IDENTITY_FRIEND_REF_S                                  S"EnvDTE,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ENVDTE_ASSEMBLY_IDENTITY_FRIEND_REF_T                              TEXT("EnvDTE,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define ENVDTE_ASSEMBLY_IDENTITY_EXACT_REF                                       EnvDTE,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define ENVDTE_ASSEMBLY_IDENTITY_EXACT_REF_A                                    "EnvDTE,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ENVDTE_ASSEMBLY_IDENTITY_EXACT_REF_W                                   L"EnvDTE,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ENVDTE_ASSEMBLY_IDENTITY_EXACT_REF_S                                   S"EnvDTE,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ENVDTE_ASSEMBLY_IDENTITY_EXACT_REF_T                               TEXT("EnvDTE,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define ENVDTE_ASSEMBLY_NAME                                                     EnvDTE
#define ENVDTE_ASSEMBLY_NAME_A                                                  "EnvDTE"
#define ENVDTE_ASSEMBLY_NAME_W                                                 L"EnvDTE"
#define ENVDTE_ASSEMBLY_NAME_S                                                 S"EnvDTE"
#define ENVDTE_ASSEMBLY_NAME_T                                             TEXT("EnvDTE")
#define ENVDTE_ASSEMBLY_VERSION                                                  7.0.3300.0
#define ENVDTE_ASSEMBLY_VERSION_A                                               "7.0.3300.0"
#define ENVDTE_ASSEMBLY_VERSION_W                                              L"7.0.3300.0"
#define ENVDTE_ASSEMBLY_VERSION_S                                              S"7.0.3300.0"
#define ENVDTE_ASSEMBLY_VERSION_T                                          TEXT("7.0.3300.0")
#define ENVDTE_ASSEMBLY_VERSION_IL                                                7:0:3300:0
#define ENVDTE_ASSEMBLY_PUBLIC_KEY                                               002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define ENVDTE_ASSEMBLY_PUBLIC_KEY_A                                            "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define ENVDTE_ASSEMBLY_PUBLIC_KEY_W                                           L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define ENVDTE_ASSEMBLY_PUBLIC_KEY_S                                           S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define ENVDTE_ASSEMBLY_PUBLIC_KEY_T                                       TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define ENVDTE_ASSEMBLY_PUBLIC_KEY_IL                                            (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define ENVDTE_ASSEMBLY_PUBLIC_KEY_TOKEN                                         b03f5f7f11d50a3a
#define ENVDTE_ASSEMBLY_PUBLIC_KEY_TOKEN_A                                      "b03f5f7f11d50a3a"
#define ENVDTE_ASSEMBLY_PUBLIC_KEY_TOKEN_W                                     L"b03f5f7f11d50a3a"
#define ENVDTE_ASSEMBLY_PUBLIC_KEY_TOKEN_S                                     S"b03f5f7f11d50a3a"
#define ENVDTE_ASSEMBLY_PUBLIC_KEY_TOKEN_T                                 TEXT("b03f5f7f11d50a3a")
#define ENVDTE_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                                      (b0 3f 5f 7f 11 d5 0a 3a )
#define ENVDTE_ASSEMBLY_CULTURE                                                  neutral
#define ENVDTE_ASSEMBLY_CULTURE_A                                               "neutral"
#define ENVDTE_ASSEMBLY_CULTURE_W                                              L"neutral"
#define ENVDTE_ASSEMBLY_CULTURE_S                                              S"neutral"
#define ENVDTE_ASSEMBLY_CULTURE_T                                          TEXT("neutral")
#define ENVDTE80_ASSEMBLY_IDENTITY_DEF                                           EnvDTE80,version=8.0.0.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define ENVDTE80_ASSEMBLY_IDENTITY_DEF_A                                        "EnvDTE80,version=8.0.0.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ENVDTE80_ASSEMBLY_IDENTITY_DEF_W                                       L"EnvDTE80,version=8.0.0.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ENVDTE80_ASSEMBLY_IDENTITY_DEF_S                                       S"EnvDTE80,version=8.0.0.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ENVDTE80_ASSEMBLY_IDENTITY_DEF_T                                   TEXT("EnvDTE80,version=8.0.0.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define ENVDTE80_ASSEMBLY_IDENTITY_REF                                           EnvDTE80,version=8.0.0.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define ENVDTE80_ASSEMBLY_IDENTITY_REF_A                                        "EnvDTE80,version=8.0.0.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ENVDTE80_ASSEMBLY_IDENTITY_REF_W                                       L"EnvDTE80,version=8.0.0.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ENVDTE80_ASSEMBLY_IDENTITY_REF_S                                       S"EnvDTE80,version=8.0.0.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ENVDTE80_ASSEMBLY_IDENTITY_REF_T                                   TEXT("EnvDTE80,version=8.0.0.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define ENVDTE80_ASSEMBLY_IDENTITY_FRIEND_REF                                    EnvDTE80,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define ENVDTE80_ASSEMBLY_IDENTITY_FRIEND_REF_A                                 "EnvDTE80,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ENVDTE80_ASSEMBLY_IDENTITY_FRIEND_REF_W                                L"EnvDTE80,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ENVDTE80_ASSEMBLY_IDENTITY_FRIEND_REF_S                                S"EnvDTE80,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ENVDTE80_ASSEMBLY_IDENTITY_FRIEND_REF_T                            TEXT("EnvDTE80,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define ENVDTE80_ASSEMBLY_IDENTITY_EXACT_REF                                     EnvDTE80,version=8.0.0.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define ENVDTE80_ASSEMBLY_IDENTITY_EXACT_REF_A                                  "EnvDTE80,version=8.0.0.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ENVDTE80_ASSEMBLY_IDENTITY_EXACT_REF_W                                 L"EnvDTE80,version=8.0.0.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ENVDTE80_ASSEMBLY_IDENTITY_EXACT_REF_S                                 S"EnvDTE80,version=8.0.0.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ENVDTE80_ASSEMBLY_IDENTITY_EXACT_REF_T                             TEXT("EnvDTE80,version=8.0.0.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define ENVDTE80_ASSEMBLY_NAME                                                   EnvDTE80
#define ENVDTE80_ASSEMBLY_NAME_A                                                "EnvDTE80"
#define ENVDTE80_ASSEMBLY_NAME_W                                               L"EnvDTE80"
#define ENVDTE80_ASSEMBLY_NAME_S                                               S"EnvDTE80"
#define ENVDTE80_ASSEMBLY_NAME_T                                           TEXT("EnvDTE80")
#define ENVDTE80_ASSEMBLY_VERSION                                                8.0.0.0
#define ENVDTE80_ASSEMBLY_VERSION_A                                             "8.0.0.0"
#define ENVDTE80_ASSEMBLY_VERSION_W                                            L"8.0.0.0"
#define ENVDTE80_ASSEMBLY_VERSION_S                                            S"8.0.0.0"
#define ENVDTE80_ASSEMBLY_VERSION_T                                        TEXT("8.0.0.0")
#define ENVDTE80_ASSEMBLY_VERSION_IL                                              8:0:0:0
#define ENVDTE80_ASSEMBLY_PUBLIC_KEY                                             002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define ENVDTE80_ASSEMBLY_PUBLIC_KEY_A                                          "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define ENVDTE80_ASSEMBLY_PUBLIC_KEY_W                                         L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define ENVDTE80_ASSEMBLY_PUBLIC_KEY_S                                         S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define ENVDTE80_ASSEMBLY_PUBLIC_KEY_T                                     TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define ENVDTE80_ASSEMBLY_PUBLIC_KEY_IL                                          (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define ENVDTE80_ASSEMBLY_PUBLIC_KEY_TOKEN                                       b03f5f7f11d50a3a
#define ENVDTE80_ASSEMBLY_PUBLIC_KEY_TOKEN_A                                    "b03f5f7f11d50a3a"
#define ENVDTE80_ASSEMBLY_PUBLIC_KEY_TOKEN_W                                   L"b03f5f7f11d50a3a"
#define ENVDTE80_ASSEMBLY_PUBLIC_KEY_TOKEN_S                                   S"b03f5f7f11d50a3a"
#define ENVDTE80_ASSEMBLY_PUBLIC_KEY_TOKEN_T                               TEXT("b03f5f7f11d50a3a")
#define ENVDTE80_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                                    (b0 3f 5f 7f 11 d5 0a 3a )
#define ENVDTE80_ASSEMBLY_CULTURE                                                neutral
#define ENVDTE80_ASSEMBLY_CULTURE_A                                             "neutral"
#define ENVDTE80_ASSEMBLY_CULTURE_W                                            L"neutral"
#define ENVDTE80_ASSEMBLY_CULTURE_S                                            S"neutral"
#define ENVDTE80_ASSEMBLY_CULTURE_T                                        TEXT("neutral")
#define EXTENSIBILITY_ASSEMBLY_IDENTITY_DEF                                      Extensibility,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define EXTENSIBILITY_ASSEMBLY_IDENTITY_DEF_A                                   "Extensibility,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define EXTENSIBILITY_ASSEMBLY_IDENTITY_DEF_W                                  L"Extensibility,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define EXTENSIBILITY_ASSEMBLY_IDENTITY_DEF_S                                  S"Extensibility,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define EXTENSIBILITY_ASSEMBLY_IDENTITY_DEF_T                              TEXT("Extensibility,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define EXTENSIBILITY_ASSEMBLY_IDENTITY_REF                                      Extensibility,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define EXTENSIBILITY_ASSEMBLY_IDENTITY_REF_A                                   "Extensibility,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define EXTENSIBILITY_ASSEMBLY_IDENTITY_REF_W                                  L"Extensibility,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define EXTENSIBILITY_ASSEMBLY_IDENTITY_REF_S                                  S"Extensibility,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define EXTENSIBILITY_ASSEMBLY_IDENTITY_REF_T                              TEXT("Extensibility,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define EXTENSIBILITY_ASSEMBLY_IDENTITY_FRIEND_REF                               Extensibility,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define EXTENSIBILITY_ASSEMBLY_IDENTITY_FRIEND_REF_A                            "Extensibility,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define EXTENSIBILITY_ASSEMBLY_IDENTITY_FRIEND_REF_W                           L"Extensibility,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define EXTENSIBILITY_ASSEMBLY_IDENTITY_FRIEND_REF_S                           S"Extensibility,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define EXTENSIBILITY_ASSEMBLY_IDENTITY_FRIEND_REF_T                       TEXT("Extensibility,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define EXTENSIBILITY_ASSEMBLY_IDENTITY_EXACT_REF                                Extensibility,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define EXTENSIBILITY_ASSEMBLY_IDENTITY_EXACT_REF_A                             "Extensibility,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define EXTENSIBILITY_ASSEMBLY_IDENTITY_EXACT_REF_W                            L"Extensibility,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define EXTENSIBILITY_ASSEMBLY_IDENTITY_EXACT_REF_S                            S"Extensibility,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define EXTENSIBILITY_ASSEMBLY_IDENTITY_EXACT_REF_T                        TEXT("Extensibility,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define EXTENSIBILITY_ASSEMBLY_NAME                                              Extensibility
#define EXTENSIBILITY_ASSEMBLY_NAME_A                                           "Extensibility"
#define EXTENSIBILITY_ASSEMBLY_NAME_W                                          L"Extensibility"
#define EXTENSIBILITY_ASSEMBLY_NAME_S                                          S"Extensibility"
#define EXTENSIBILITY_ASSEMBLY_NAME_T                                      TEXT("Extensibility")
#define EXTENSIBILITY_ASSEMBLY_VERSION                                           7.0.3300.0
#define EXTENSIBILITY_ASSEMBLY_VERSION_A                                        "7.0.3300.0"
#define EXTENSIBILITY_ASSEMBLY_VERSION_W                                       L"7.0.3300.0"
#define EXTENSIBILITY_ASSEMBLY_VERSION_S                                       S"7.0.3300.0"
#define EXTENSIBILITY_ASSEMBLY_VERSION_T                                   TEXT("7.0.3300.0")
#define EXTENSIBILITY_ASSEMBLY_VERSION_IL                                         7:0:3300:0
#define EXTENSIBILITY_ASSEMBLY_PUBLIC_KEY                                        002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define EXTENSIBILITY_ASSEMBLY_PUBLIC_KEY_A                                     "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define EXTENSIBILITY_ASSEMBLY_PUBLIC_KEY_W                                    L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define EXTENSIBILITY_ASSEMBLY_PUBLIC_KEY_S                                    S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define EXTENSIBILITY_ASSEMBLY_PUBLIC_KEY_T                                TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define EXTENSIBILITY_ASSEMBLY_PUBLIC_KEY_IL                                     (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define EXTENSIBILITY_ASSEMBLY_PUBLIC_KEY_TOKEN                                  b03f5f7f11d50a3a
#define EXTENSIBILITY_ASSEMBLY_PUBLIC_KEY_TOKEN_A                               "b03f5f7f11d50a3a"
#define EXTENSIBILITY_ASSEMBLY_PUBLIC_KEY_TOKEN_W                              L"b03f5f7f11d50a3a"
#define EXTENSIBILITY_ASSEMBLY_PUBLIC_KEY_TOKEN_S                              S"b03f5f7f11d50a3a"
#define EXTENSIBILITY_ASSEMBLY_PUBLIC_KEY_TOKEN_T                          TEXT("b03f5f7f11d50a3a")
#define EXTENSIBILITY_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                               (b0 3f 5f 7f 11 d5 0a 3a )
#define EXTENSIBILITY_ASSEMBLY_CULTURE                                           neutral
#define EXTENSIBILITY_ASSEMBLY_CULTURE_A                                        "neutral"
#define EXTENSIBILITY_ASSEMBLY_CULTURE_W                                       L"neutral"
#define EXTENSIBILITY_ASSEMBLY_CULTURE_S                                       S"neutral"
#define EXTENSIBILITY_ASSEMBLY_CULTURE_T                                   TEXT("neutral")
#define IEEXECREMOTE_ASSEMBLY_IDENTITY_DEF                                       IEExecRemote,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define IEEXECREMOTE_ASSEMBLY_IDENTITY_DEF_A                                    "IEExecRemote,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IEEXECREMOTE_ASSEMBLY_IDENTITY_DEF_W                                   L"IEExecRemote,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IEEXECREMOTE_ASSEMBLY_IDENTITY_DEF_S                                   S"IEExecRemote,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IEEXECREMOTE_ASSEMBLY_IDENTITY_DEF_T                               TEXT("IEExecRemote,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define IEEXECREMOTE_ASSEMBLY_IDENTITY_REF                                       IEExecRemote,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define IEEXECREMOTE_ASSEMBLY_IDENTITY_REF_A                                    "IEExecRemote,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IEEXECREMOTE_ASSEMBLY_IDENTITY_REF_W                                   L"IEExecRemote,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IEEXECREMOTE_ASSEMBLY_IDENTITY_REF_S                                   S"IEExecRemote,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IEEXECREMOTE_ASSEMBLY_IDENTITY_REF_T                               TEXT("IEExecRemote,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define IEEXECREMOTE_ASSEMBLY_IDENTITY_FRIEND_REF                                IEExecRemote,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define IEEXECREMOTE_ASSEMBLY_IDENTITY_FRIEND_REF_A                             "IEExecRemote,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IEEXECREMOTE_ASSEMBLY_IDENTITY_FRIEND_REF_W                            L"IEExecRemote,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IEEXECREMOTE_ASSEMBLY_IDENTITY_FRIEND_REF_S                            S"IEExecRemote,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IEEXECREMOTE_ASSEMBLY_IDENTITY_FRIEND_REF_T                        TEXT("IEExecRemote,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define IEEXECREMOTE_ASSEMBLY_IDENTITY_EXACT_REF                                 IEExecRemote,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define IEEXECREMOTE_ASSEMBLY_IDENTITY_EXACT_REF_A                              "IEExecRemote,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IEEXECREMOTE_ASSEMBLY_IDENTITY_EXACT_REF_W                             L"IEExecRemote,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IEEXECREMOTE_ASSEMBLY_IDENTITY_EXACT_REF_S                             S"IEExecRemote,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IEEXECREMOTE_ASSEMBLY_IDENTITY_EXACT_REF_T                         TEXT("IEExecRemote,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define IEEXECREMOTE_ASSEMBLY_NAME                                               IEExecRemote
#define IEEXECREMOTE_ASSEMBLY_NAME_A                                            "IEExecRemote"
#define IEEXECREMOTE_ASSEMBLY_NAME_W                                           L"IEExecRemote"
#define IEEXECREMOTE_ASSEMBLY_NAME_S                                           S"IEExecRemote"
#define IEEXECREMOTE_ASSEMBLY_NAME_T                                       TEXT("IEExecRemote")
#define IEEXECREMOTE_ASSEMBLY_VERSION                                            2.0.3600.0
#define IEEXECREMOTE_ASSEMBLY_VERSION_A                                         "2.0.3600.0"
#define IEEXECREMOTE_ASSEMBLY_VERSION_W                                        L"2.0.3600.0"
#define IEEXECREMOTE_ASSEMBLY_VERSION_S                                        S"2.0.3600.0"
#define IEEXECREMOTE_ASSEMBLY_VERSION_T                                    TEXT("2.0.3600.0")
#define IEEXECREMOTE_ASSEMBLY_VERSION_IL                                          2:0:3600:0
#define IEEXECREMOTE_ASSEMBLY_PUBLIC_KEY                                         002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define IEEXECREMOTE_ASSEMBLY_PUBLIC_KEY_A                                      "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define IEEXECREMOTE_ASSEMBLY_PUBLIC_KEY_W                                     L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define IEEXECREMOTE_ASSEMBLY_PUBLIC_KEY_S                                     S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define IEEXECREMOTE_ASSEMBLY_PUBLIC_KEY_T                                 TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define IEEXECREMOTE_ASSEMBLY_PUBLIC_KEY_IL                                      (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define IEEXECREMOTE_ASSEMBLY_PUBLIC_KEY_TOKEN                                   b03f5f7f11d50a3a
#define IEEXECREMOTE_ASSEMBLY_PUBLIC_KEY_TOKEN_A                                "b03f5f7f11d50a3a"
#define IEEXECREMOTE_ASSEMBLY_PUBLIC_KEY_TOKEN_W                               L"b03f5f7f11d50a3a"
#define IEEXECREMOTE_ASSEMBLY_PUBLIC_KEY_TOKEN_S                               S"b03f5f7f11d50a3a"
#define IEEXECREMOTE_ASSEMBLY_PUBLIC_KEY_TOKEN_T                           TEXT("b03f5f7f11d50a3a")
#define IEEXECREMOTE_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                                (b0 3f 5f 7f 11 d5 0a 3a )
#define IEEXECREMOTE_ASSEMBLY_CULTURE                                            neutral
#define IEEXECREMOTE_ASSEMBLY_CULTURE_A                                         "neutral"
#define IEEXECREMOTE_ASSEMBLY_CULTURE_W                                        L"neutral"
#define IEEXECREMOTE_ASSEMBLY_CULTURE_S                                        S"neutral"
#define IEEXECREMOTE_ASSEMBLY_CULTURE_T                                    TEXT("neutral")
#define IEHOST_ASSEMBLY_IDENTITY_DEF                                             IEHost,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define IEHOST_ASSEMBLY_IDENTITY_DEF_A                                          "IEHost,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IEHOST_ASSEMBLY_IDENTITY_DEF_W                                         L"IEHost,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IEHOST_ASSEMBLY_IDENTITY_DEF_S                                         S"IEHost,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IEHOST_ASSEMBLY_IDENTITY_DEF_T                                     TEXT("IEHost,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define IEHOST_ASSEMBLY_IDENTITY_REF                                             IEHost,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define IEHOST_ASSEMBLY_IDENTITY_REF_A                                          "IEHost,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IEHOST_ASSEMBLY_IDENTITY_REF_W                                         L"IEHost,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IEHOST_ASSEMBLY_IDENTITY_REF_S                                         S"IEHost,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IEHOST_ASSEMBLY_IDENTITY_REF_T                                     TEXT("IEHost,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define IEHOST_ASSEMBLY_IDENTITY_FRIEND_REF                                      IEHost,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define IEHOST_ASSEMBLY_IDENTITY_FRIEND_REF_A                                   "IEHost,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IEHOST_ASSEMBLY_IDENTITY_FRIEND_REF_W                                  L"IEHost,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IEHOST_ASSEMBLY_IDENTITY_FRIEND_REF_S                                  S"IEHost,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IEHOST_ASSEMBLY_IDENTITY_FRIEND_REF_T                              TEXT("IEHost,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define IEHOST_ASSEMBLY_IDENTITY_EXACT_REF                                       IEHost,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define IEHOST_ASSEMBLY_IDENTITY_EXACT_REF_A                                    "IEHost,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IEHOST_ASSEMBLY_IDENTITY_EXACT_REF_W                                   L"IEHost,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IEHOST_ASSEMBLY_IDENTITY_EXACT_REF_S                                   S"IEHost,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IEHOST_ASSEMBLY_IDENTITY_EXACT_REF_T                               TEXT("IEHost,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define IEHOST_ASSEMBLY_NAME                                                     IEHost
#define IEHOST_ASSEMBLY_NAME_A                                                  "IEHost"
#define IEHOST_ASSEMBLY_NAME_W                                                 L"IEHost"
#define IEHOST_ASSEMBLY_NAME_S                                                 S"IEHost"
#define IEHOST_ASSEMBLY_NAME_T                                             TEXT("IEHost")
#define IEHOST_ASSEMBLY_VERSION                                                  2.0.3600.0
#define IEHOST_ASSEMBLY_VERSION_A                                               "2.0.3600.0"
#define IEHOST_ASSEMBLY_VERSION_W                                              L"2.0.3600.0"
#define IEHOST_ASSEMBLY_VERSION_S                                              S"2.0.3600.0"
#define IEHOST_ASSEMBLY_VERSION_T                                          TEXT("2.0.3600.0")
#define IEHOST_ASSEMBLY_VERSION_IL                                                2:0:3600:0
#define IEHOST_ASSEMBLY_PUBLIC_KEY                                               002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define IEHOST_ASSEMBLY_PUBLIC_KEY_A                                            "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define IEHOST_ASSEMBLY_PUBLIC_KEY_W                                           L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define IEHOST_ASSEMBLY_PUBLIC_KEY_S                                           S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define IEHOST_ASSEMBLY_PUBLIC_KEY_T                                       TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define IEHOST_ASSEMBLY_PUBLIC_KEY_IL                                            (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define IEHOST_ASSEMBLY_PUBLIC_KEY_TOKEN                                         b03f5f7f11d50a3a
#define IEHOST_ASSEMBLY_PUBLIC_KEY_TOKEN_A                                      "b03f5f7f11d50a3a"
#define IEHOST_ASSEMBLY_PUBLIC_KEY_TOKEN_W                                     L"b03f5f7f11d50a3a"
#define IEHOST_ASSEMBLY_PUBLIC_KEY_TOKEN_S                                     S"b03f5f7f11d50a3a"
#define IEHOST_ASSEMBLY_PUBLIC_KEY_TOKEN_T                                 TEXT("b03f5f7f11d50a3a")
#define IEHOST_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                                      (b0 3f 5f 7f 11 d5 0a 3a )
#define IEHOST_ASSEMBLY_CULTURE                                                  neutral
#define IEHOST_ASSEMBLY_CULTURE_A                                               "neutral"
#define IEHOST_ASSEMBLY_CULTURE_W                                              L"neutral"
#define IEHOST_ASSEMBLY_CULTURE_S                                              S"neutral"
#define IEHOST_ASSEMBLY_CULTURE_T                                          TEXT("neutral")
#define IIEHOST_ASSEMBLY_IDENTITY_DEF                                            IIEHost,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define IIEHOST_ASSEMBLY_IDENTITY_DEF_A                                         "IIEHost,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IIEHOST_ASSEMBLY_IDENTITY_DEF_W                                        L"IIEHost,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IIEHOST_ASSEMBLY_IDENTITY_DEF_S                                        S"IIEHost,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IIEHOST_ASSEMBLY_IDENTITY_DEF_T                                    TEXT("IIEHost,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define IIEHOST_ASSEMBLY_IDENTITY_REF                                            IIEHost,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define IIEHOST_ASSEMBLY_IDENTITY_REF_A                                         "IIEHost,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IIEHOST_ASSEMBLY_IDENTITY_REF_W                                        L"IIEHost,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IIEHOST_ASSEMBLY_IDENTITY_REF_S                                        S"IIEHost,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IIEHOST_ASSEMBLY_IDENTITY_REF_T                                    TEXT("IIEHost,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define IIEHOST_ASSEMBLY_IDENTITY_FRIEND_REF                                     IIEHost,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define IIEHOST_ASSEMBLY_IDENTITY_FRIEND_REF_A                                  "IIEHost,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IIEHOST_ASSEMBLY_IDENTITY_FRIEND_REF_W                                 L"IIEHost,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IIEHOST_ASSEMBLY_IDENTITY_FRIEND_REF_S                                 S"IIEHost,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IIEHOST_ASSEMBLY_IDENTITY_FRIEND_REF_T                             TEXT("IIEHost,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define IIEHOST_ASSEMBLY_IDENTITY_EXACT_REF                                      IIEHost,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define IIEHOST_ASSEMBLY_IDENTITY_EXACT_REF_A                                   "IIEHost,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IIEHOST_ASSEMBLY_IDENTITY_EXACT_REF_W                                  L"IIEHost,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IIEHOST_ASSEMBLY_IDENTITY_EXACT_REF_S                                  S"IIEHost,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define IIEHOST_ASSEMBLY_IDENTITY_EXACT_REF_T                              TEXT("IIEHost,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define IIEHOST_ASSEMBLY_NAME                                                    IIEHost
#define IIEHOST_ASSEMBLY_NAME_A                                                 "IIEHost"
#define IIEHOST_ASSEMBLY_NAME_W                                                L"IIEHost"
#define IIEHOST_ASSEMBLY_NAME_S                                                S"IIEHost"
#define IIEHOST_ASSEMBLY_NAME_T                                            TEXT("IIEHost")
#define IIEHOST_ASSEMBLY_VERSION                                                 2.0.3600.0
#define IIEHOST_ASSEMBLY_VERSION_A                                              "2.0.3600.0"
#define IIEHOST_ASSEMBLY_VERSION_W                                             L"2.0.3600.0"
#define IIEHOST_ASSEMBLY_VERSION_S                                             S"2.0.3600.0"
#define IIEHOST_ASSEMBLY_VERSION_T                                         TEXT("2.0.3600.0")
#define IIEHOST_ASSEMBLY_VERSION_IL                                               2:0:3600:0
#define IIEHOST_ASSEMBLY_PUBLIC_KEY                                              002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define IIEHOST_ASSEMBLY_PUBLIC_KEY_A                                           "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define IIEHOST_ASSEMBLY_PUBLIC_KEY_W                                          L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define IIEHOST_ASSEMBLY_PUBLIC_KEY_S                                          S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define IIEHOST_ASSEMBLY_PUBLIC_KEY_T                                      TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define IIEHOST_ASSEMBLY_PUBLIC_KEY_IL                                           (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define IIEHOST_ASSEMBLY_PUBLIC_KEY_TOKEN                                        b03f5f7f11d50a3a
#define IIEHOST_ASSEMBLY_PUBLIC_KEY_TOKEN_A                                     "b03f5f7f11d50a3a"
#define IIEHOST_ASSEMBLY_PUBLIC_KEY_TOKEN_W                                    L"b03f5f7f11d50a3a"
#define IIEHOST_ASSEMBLY_PUBLIC_KEY_TOKEN_S                                    S"b03f5f7f11d50a3a"
#define IIEHOST_ASSEMBLY_PUBLIC_KEY_TOKEN_T                                TEXT("b03f5f7f11d50a3a")
#define IIEHOST_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                                     (b0 3f 5f 7f 11 d5 0a 3a )
#define IIEHOST_ASSEMBLY_CULTURE                                                 neutral
#define IIEHOST_ASSEMBLY_CULTURE_A                                              "neutral"
#define IIEHOST_ASSEMBLY_CULTURE_W                                             L"neutral"
#define IIEHOST_ASSEMBLY_CULTURE_S                                             S"neutral"
#define IIEHOST_ASSEMBLY_CULTURE_T                                         TEXT("neutral")
#define INTEROP_CERTCLI_ASSEMBLY_IDENTITY_DEF                                    Interop.CertCli,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define INTEROP_CERTCLI_ASSEMBLY_IDENTITY_DEF_A                                 "Interop.CertCli,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define INTEROP_CERTCLI_ASSEMBLY_IDENTITY_DEF_W                                L"Interop.CertCli,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define INTEROP_CERTCLI_ASSEMBLY_IDENTITY_DEF_S                                S"Interop.CertCli,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define INTEROP_CERTCLI_ASSEMBLY_IDENTITY_DEF_T                            TEXT("Interop.CertCli,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define INTEROP_CERTCLI_ASSEMBLY_IDENTITY_REF                                    Interop.CertCli,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define INTEROP_CERTCLI_ASSEMBLY_IDENTITY_REF_A                                 "Interop.CertCli,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define INTEROP_CERTCLI_ASSEMBLY_IDENTITY_REF_W                                L"Interop.CertCli,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define INTEROP_CERTCLI_ASSEMBLY_IDENTITY_REF_S                                S"Interop.CertCli,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define INTEROP_CERTCLI_ASSEMBLY_IDENTITY_REF_T                            TEXT("Interop.CertCli,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define INTEROP_CERTCLI_ASSEMBLY_IDENTITY_FRIEND_REF                             Interop.CertCli,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define INTEROP_CERTCLI_ASSEMBLY_IDENTITY_FRIEND_REF_A                          "Interop.CertCli,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define INTEROP_CERTCLI_ASSEMBLY_IDENTITY_FRIEND_REF_W                         L"Interop.CertCli,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define INTEROP_CERTCLI_ASSEMBLY_IDENTITY_FRIEND_REF_S                         S"Interop.CertCli,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define INTEROP_CERTCLI_ASSEMBLY_IDENTITY_FRIEND_REF_T                     TEXT("Interop.CertCli,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define INTEROP_CERTCLI_ASSEMBLY_IDENTITY_EXACT_REF                              Interop.CertCli,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define INTEROP_CERTCLI_ASSEMBLY_IDENTITY_EXACT_REF_A                           "Interop.CertCli,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define INTEROP_CERTCLI_ASSEMBLY_IDENTITY_EXACT_REF_W                          L"Interop.CertCli,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define INTEROP_CERTCLI_ASSEMBLY_IDENTITY_EXACT_REF_S                          S"Interop.CertCli,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define INTEROP_CERTCLI_ASSEMBLY_IDENTITY_EXACT_REF_T                      TEXT("Interop.CertCli,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define INTEROP_CERTCLI_ASSEMBLY_NAME                                            Interop.CertCli
#define INTEROP_CERTCLI_ASSEMBLY_NAME_A                                         "Interop.CertCli"
#define INTEROP_CERTCLI_ASSEMBLY_NAME_W                                        L"Interop.CertCli"
#define INTEROP_CERTCLI_ASSEMBLY_NAME_S                                        S"Interop.CertCli"
#define INTEROP_CERTCLI_ASSEMBLY_NAME_T                                    TEXT("Interop.CertCli")
#define INTEROP_CERTCLI_ASSEMBLY_VERSION                                         2.0.3600.0
#define INTEROP_CERTCLI_ASSEMBLY_VERSION_A                                      "2.0.3600.0"
#define INTEROP_CERTCLI_ASSEMBLY_VERSION_W                                     L"2.0.3600.0"
#define INTEROP_CERTCLI_ASSEMBLY_VERSION_S                                     S"2.0.3600.0"
#define INTEROP_CERTCLI_ASSEMBLY_VERSION_T                                 TEXT("2.0.3600.0")
#define INTEROP_CERTCLI_ASSEMBLY_VERSION_IL                                       2:0:3600:0
#define INTEROP_CERTCLI_ASSEMBLY_PUBLIC_KEY                                      002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define INTEROP_CERTCLI_ASSEMBLY_PUBLIC_KEY_A                                   "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define INTEROP_CERTCLI_ASSEMBLY_PUBLIC_KEY_W                                  L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define INTEROP_CERTCLI_ASSEMBLY_PUBLIC_KEY_S                                  S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define INTEROP_CERTCLI_ASSEMBLY_PUBLIC_KEY_T                              TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define INTEROP_CERTCLI_ASSEMBLY_PUBLIC_KEY_IL                                   (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define INTEROP_CERTCLI_ASSEMBLY_PUBLIC_KEY_TOKEN                                b03f5f7f11d50a3a
#define INTEROP_CERTCLI_ASSEMBLY_PUBLIC_KEY_TOKEN_A                             "b03f5f7f11d50a3a"
#define INTEROP_CERTCLI_ASSEMBLY_PUBLIC_KEY_TOKEN_W                            L"b03f5f7f11d50a3a"
#define INTEROP_CERTCLI_ASSEMBLY_PUBLIC_KEY_TOKEN_S                            S"b03f5f7f11d50a3a"
#define INTEROP_CERTCLI_ASSEMBLY_PUBLIC_KEY_TOKEN_T                        TEXT("b03f5f7f11d50a3a")
#define INTEROP_CERTCLI_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                             (b0 3f 5f 7f 11 d5 0a 3a )
#define INTEROP_CERTCLI_ASSEMBLY_CULTURE                                         neutral
#define INTEROP_CERTCLI_ASSEMBLY_CULTURE_A                                      "neutral"
#define INTEROP_CERTCLI_ASSEMBLY_CULTURE_W                                     L"neutral"
#define INTEROP_CERTCLI_ASSEMBLY_CULTURE_S                                     S"neutral"
#define INTEROP_CERTCLI_ASSEMBLY_CULTURE_T                                 TEXT("neutral")
#define INTEROP_XENROLL_ASSEMBLY_IDENTITY_DEF                                    Interop.XEnroll,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define INTEROP_XENROLL_ASSEMBLY_IDENTITY_DEF_A                                 "Interop.XEnroll,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define INTEROP_XENROLL_ASSEMBLY_IDENTITY_DEF_W                                L"Interop.XEnroll,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define INTEROP_XENROLL_ASSEMBLY_IDENTITY_DEF_S                                S"Interop.XEnroll,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define INTEROP_XENROLL_ASSEMBLY_IDENTITY_DEF_T                            TEXT("Interop.XEnroll,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define INTEROP_XENROLL_ASSEMBLY_IDENTITY_REF                                    Interop.XEnroll,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define INTEROP_XENROLL_ASSEMBLY_IDENTITY_REF_A                                 "Interop.XEnroll,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define INTEROP_XENROLL_ASSEMBLY_IDENTITY_REF_W                                L"Interop.XEnroll,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define INTEROP_XENROLL_ASSEMBLY_IDENTITY_REF_S                                S"Interop.XEnroll,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define INTEROP_XENROLL_ASSEMBLY_IDENTITY_REF_T                            TEXT("Interop.XEnroll,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define INTEROP_XENROLL_ASSEMBLY_IDENTITY_FRIEND_REF                             Interop.XEnroll,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define INTEROP_XENROLL_ASSEMBLY_IDENTITY_FRIEND_REF_A                          "Interop.XEnroll,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define INTEROP_XENROLL_ASSEMBLY_IDENTITY_FRIEND_REF_W                         L"Interop.XEnroll,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define INTEROP_XENROLL_ASSEMBLY_IDENTITY_FRIEND_REF_S                         S"Interop.XEnroll,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define INTEROP_XENROLL_ASSEMBLY_IDENTITY_FRIEND_REF_T                     TEXT("Interop.XEnroll,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define INTEROP_XENROLL_ASSEMBLY_IDENTITY_EXACT_REF                              Interop.XEnroll,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define INTEROP_XENROLL_ASSEMBLY_IDENTITY_EXACT_REF_A                           "Interop.XEnroll,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define INTEROP_XENROLL_ASSEMBLY_IDENTITY_EXACT_REF_W                          L"Interop.XEnroll,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define INTEROP_XENROLL_ASSEMBLY_IDENTITY_EXACT_REF_S                          S"Interop.XEnroll,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define INTEROP_XENROLL_ASSEMBLY_IDENTITY_EXACT_REF_T                      TEXT("Interop.XEnroll,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define INTEROP_XENROLL_ASSEMBLY_NAME                                            Interop.XEnroll
#define INTEROP_XENROLL_ASSEMBLY_NAME_A                                         "Interop.XEnroll"
#define INTEROP_XENROLL_ASSEMBLY_NAME_W                                        L"Interop.XEnroll"
#define INTEROP_XENROLL_ASSEMBLY_NAME_S                                        S"Interop.XEnroll"
#define INTEROP_XENROLL_ASSEMBLY_NAME_T                                    TEXT("Interop.XEnroll")
#define INTEROP_XENROLL_ASSEMBLY_VERSION                                         2.0.3600.0
#define INTEROP_XENROLL_ASSEMBLY_VERSION_A                                      "2.0.3600.0"
#define INTEROP_XENROLL_ASSEMBLY_VERSION_W                                     L"2.0.3600.0"
#define INTEROP_XENROLL_ASSEMBLY_VERSION_S                                     S"2.0.3600.0"
#define INTEROP_XENROLL_ASSEMBLY_VERSION_T                                 TEXT("2.0.3600.0")
#define INTEROP_XENROLL_ASSEMBLY_VERSION_IL                                       2:0:3600:0
#define INTEROP_XENROLL_ASSEMBLY_PUBLIC_KEY                                      002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define INTEROP_XENROLL_ASSEMBLY_PUBLIC_KEY_A                                   "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define INTEROP_XENROLL_ASSEMBLY_PUBLIC_KEY_W                                  L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define INTEROP_XENROLL_ASSEMBLY_PUBLIC_KEY_S                                  S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define INTEROP_XENROLL_ASSEMBLY_PUBLIC_KEY_T                              TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define INTEROP_XENROLL_ASSEMBLY_PUBLIC_KEY_IL                                   (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define INTEROP_XENROLL_ASSEMBLY_PUBLIC_KEY_TOKEN                                b03f5f7f11d50a3a
#define INTEROP_XENROLL_ASSEMBLY_PUBLIC_KEY_TOKEN_A                             "b03f5f7f11d50a3a"
#define INTEROP_XENROLL_ASSEMBLY_PUBLIC_KEY_TOKEN_W                            L"b03f5f7f11d50a3a"
#define INTEROP_XENROLL_ASSEMBLY_PUBLIC_KEY_TOKEN_S                            S"b03f5f7f11d50a3a"
#define INTEROP_XENROLL_ASSEMBLY_PUBLIC_KEY_TOKEN_T                        TEXT("b03f5f7f11d50a3a")
#define INTEROP_XENROLL_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                             (b0 3f 5f 7f 11 d5 0a 3a )
#define INTEROP_XENROLL_ASSEMBLY_CULTURE                                         neutral
#define INTEROP_XENROLL_ASSEMBLY_CULTURE_A                                      "neutral"
#define INTEROP_XENROLL_ASSEMBLY_CULTURE_W                                     L"neutral"
#define INTEROP_XENROLL_ASSEMBLY_CULTURE_S                                     S"neutral"
#define INTEROP_XENROLL_ASSEMBLY_CULTURE_T                                 TEXT("neutral")
#define ISYMWRAPPER_ASSEMBLY_IDENTITY_DEF                                        ISymWrapper,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define ISYMWRAPPER_ASSEMBLY_IDENTITY_DEF_A                                     "ISymWrapper,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ISYMWRAPPER_ASSEMBLY_IDENTITY_DEF_W                                    L"ISymWrapper,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ISYMWRAPPER_ASSEMBLY_IDENTITY_DEF_S                                    S"ISymWrapper,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ISYMWRAPPER_ASSEMBLY_IDENTITY_DEF_T                                TEXT("ISymWrapper,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define ISYMWRAPPER_ASSEMBLY_IDENTITY_REF                                        ISymWrapper,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define ISYMWRAPPER_ASSEMBLY_IDENTITY_REF_A                                     "ISymWrapper,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ISYMWRAPPER_ASSEMBLY_IDENTITY_REF_W                                    L"ISymWrapper,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ISYMWRAPPER_ASSEMBLY_IDENTITY_REF_S                                    S"ISymWrapper,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ISYMWRAPPER_ASSEMBLY_IDENTITY_REF_T                                TEXT("ISymWrapper,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define ISYMWRAPPER_ASSEMBLY_IDENTITY_FRIEND_REF                                 ISymWrapper,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define ISYMWRAPPER_ASSEMBLY_IDENTITY_FRIEND_REF_A                              "ISymWrapper,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ISYMWRAPPER_ASSEMBLY_IDENTITY_FRIEND_REF_W                             L"ISymWrapper,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ISYMWRAPPER_ASSEMBLY_IDENTITY_FRIEND_REF_S                             S"ISymWrapper,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ISYMWRAPPER_ASSEMBLY_IDENTITY_FRIEND_REF_T                         TEXT("ISymWrapper,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define ISYMWRAPPER_ASSEMBLY_IDENTITY_EXACT_REF                                  ISymWrapper,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define ISYMWRAPPER_ASSEMBLY_IDENTITY_EXACT_REF_A                               "ISymWrapper,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ISYMWRAPPER_ASSEMBLY_IDENTITY_EXACT_REF_W                              L"ISymWrapper,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ISYMWRAPPER_ASSEMBLY_IDENTITY_EXACT_REF_S                              S"ISymWrapper,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define ISYMWRAPPER_ASSEMBLY_IDENTITY_EXACT_REF_T                          TEXT("ISymWrapper,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define ISYMWRAPPER_ASSEMBLY_NAME                                                ISymWrapper
#define ISYMWRAPPER_ASSEMBLY_NAME_A                                             "ISymWrapper"
#define ISYMWRAPPER_ASSEMBLY_NAME_W                                            L"ISymWrapper"
#define ISYMWRAPPER_ASSEMBLY_NAME_S                                            S"ISymWrapper"
#define ISYMWRAPPER_ASSEMBLY_NAME_T                                        TEXT("ISymWrapper")
#define ISYMWRAPPER_ASSEMBLY_VERSION                                             2.0.3600.0
#define ISYMWRAPPER_ASSEMBLY_VERSION_A                                          "2.0.3600.0"
#define ISYMWRAPPER_ASSEMBLY_VERSION_W                                         L"2.0.3600.0"
#define ISYMWRAPPER_ASSEMBLY_VERSION_S                                         S"2.0.3600.0"
#define ISYMWRAPPER_ASSEMBLY_VERSION_T                                     TEXT("2.0.3600.0")
#define ISYMWRAPPER_ASSEMBLY_VERSION_IL                                           2:0:3600:0
#define ISYMWRAPPER_ASSEMBLY_PUBLIC_KEY                                          002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define ISYMWRAPPER_ASSEMBLY_PUBLIC_KEY_A                                       "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define ISYMWRAPPER_ASSEMBLY_PUBLIC_KEY_W                                      L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define ISYMWRAPPER_ASSEMBLY_PUBLIC_KEY_S                                      S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define ISYMWRAPPER_ASSEMBLY_PUBLIC_KEY_T                                  TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define ISYMWRAPPER_ASSEMBLY_PUBLIC_KEY_IL                                       (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define ISYMWRAPPER_ASSEMBLY_PUBLIC_KEY_TOKEN                                    b03f5f7f11d50a3a
#define ISYMWRAPPER_ASSEMBLY_PUBLIC_KEY_TOKEN_A                                 "b03f5f7f11d50a3a"
#define ISYMWRAPPER_ASSEMBLY_PUBLIC_KEY_TOKEN_W                                L"b03f5f7f11d50a3a"
#define ISYMWRAPPER_ASSEMBLY_PUBLIC_KEY_TOKEN_S                                S"b03f5f7f11d50a3a"
#define ISYMWRAPPER_ASSEMBLY_PUBLIC_KEY_TOKEN_T                            TEXT("b03f5f7f11d50a3a")
#define ISYMWRAPPER_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                                 (b0 3f 5f 7f 11 d5 0a 3a )
#define ISYMWRAPPER_ASSEMBLY_CULTURE                                             neutral
#define ISYMWRAPPER_ASSEMBLY_CULTURE_A                                          "neutral"
#define ISYMWRAPPER_ASSEMBLY_CULTURE_W                                         L"neutral"
#define ISYMWRAPPER_ASSEMBLY_CULTURE_S                                         S"neutral"
#define ISYMWRAPPER_ASSEMBLY_CULTURE_T                                     TEXT("neutral")
#define MESSAGEBUSINSTALLER_ASSEMBLY_IDENTITY_DEF                                MessageBusInstaller,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MESSAGEBUSINSTALLER_ASSEMBLY_IDENTITY_DEF_A                             "MessageBusInstaller,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MESSAGEBUSINSTALLER_ASSEMBLY_IDENTITY_DEF_W                            L"MessageBusInstaller,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MESSAGEBUSINSTALLER_ASSEMBLY_IDENTITY_DEF_S                            S"MessageBusInstaller,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MESSAGEBUSINSTALLER_ASSEMBLY_IDENTITY_DEF_T                        TEXT("MessageBusInstaller,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MESSAGEBUSINSTALLER_ASSEMBLY_IDENTITY_REF                                MessageBusInstaller,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MESSAGEBUSINSTALLER_ASSEMBLY_IDENTITY_REF_A                             "MessageBusInstaller,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MESSAGEBUSINSTALLER_ASSEMBLY_IDENTITY_REF_W                            L"MessageBusInstaller,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MESSAGEBUSINSTALLER_ASSEMBLY_IDENTITY_REF_S                            S"MessageBusInstaller,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MESSAGEBUSINSTALLER_ASSEMBLY_IDENTITY_REF_T                        TEXT("MessageBusInstaller,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MESSAGEBUSINSTALLER_ASSEMBLY_IDENTITY_FRIEND_REF                         MessageBusInstaller,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MESSAGEBUSINSTALLER_ASSEMBLY_IDENTITY_FRIEND_REF_A                      "MessageBusInstaller,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MESSAGEBUSINSTALLER_ASSEMBLY_IDENTITY_FRIEND_REF_W                     L"MessageBusInstaller,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MESSAGEBUSINSTALLER_ASSEMBLY_IDENTITY_FRIEND_REF_S                     S"MessageBusInstaller,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MESSAGEBUSINSTALLER_ASSEMBLY_IDENTITY_FRIEND_REF_T                 TEXT("MessageBusInstaller,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MESSAGEBUSINSTALLER_ASSEMBLY_IDENTITY_EXACT_REF                          MessageBusInstaller,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MESSAGEBUSINSTALLER_ASSEMBLY_IDENTITY_EXACT_REF_A                       "MessageBusInstaller,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MESSAGEBUSINSTALLER_ASSEMBLY_IDENTITY_EXACT_REF_W                      L"MessageBusInstaller,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MESSAGEBUSINSTALLER_ASSEMBLY_IDENTITY_EXACT_REF_S                      S"MessageBusInstaller,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MESSAGEBUSINSTALLER_ASSEMBLY_IDENTITY_EXACT_REF_T                  TEXT("MessageBusInstaller,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MESSAGEBUSINSTALLER_ASSEMBLY_NAME                                        MessageBusInstaller
#define MESSAGEBUSINSTALLER_ASSEMBLY_NAME_A                                     "MessageBusInstaller"
#define MESSAGEBUSINSTALLER_ASSEMBLY_NAME_W                                    L"MessageBusInstaller"
#define MESSAGEBUSINSTALLER_ASSEMBLY_NAME_S                                    S"MessageBusInstaller"
#define MESSAGEBUSINSTALLER_ASSEMBLY_NAME_T                                TEXT("MessageBusInstaller")
#define MESSAGEBUSINSTALLER_ASSEMBLY_VERSION                                     2.0.3600.0
#define MESSAGEBUSINSTALLER_ASSEMBLY_VERSION_A                                  "2.0.3600.0"
#define MESSAGEBUSINSTALLER_ASSEMBLY_VERSION_W                                 L"2.0.3600.0"
#define MESSAGEBUSINSTALLER_ASSEMBLY_VERSION_S                                 S"2.0.3600.0"
#define MESSAGEBUSINSTALLER_ASSEMBLY_VERSION_T                             TEXT("2.0.3600.0")
#define MESSAGEBUSINSTALLER_ASSEMBLY_VERSION_IL                                   2:0:3600:0
#define MESSAGEBUSINSTALLER_ASSEMBLY_PUBLIC_KEY                                  002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define MESSAGEBUSINSTALLER_ASSEMBLY_PUBLIC_KEY_A                               "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MESSAGEBUSINSTALLER_ASSEMBLY_PUBLIC_KEY_W                              L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MESSAGEBUSINSTALLER_ASSEMBLY_PUBLIC_KEY_S                              S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MESSAGEBUSINSTALLER_ASSEMBLY_PUBLIC_KEY_T                          TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define MESSAGEBUSINSTALLER_ASSEMBLY_PUBLIC_KEY_IL                               (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define MESSAGEBUSINSTALLER_ASSEMBLY_PUBLIC_KEY_TOKEN                            b03f5f7f11d50a3a
#define MESSAGEBUSINSTALLER_ASSEMBLY_PUBLIC_KEY_TOKEN_A                         "b03f5f7f11d50a3a"
#define MESSAGEBUSINSTALLER_ASSEMBLY_PUBLIC_KEY_TOKEN_W                        L"b03f5f7f11d50a3a"
#define MESSAGEBUSINSTALLER_ASSEMBLY_PUBLIC_KEY_TOKEN_S                        S"b03f5f7f11d50a3a"
#define MESSAGEBUSINSTALLER_ASSEMBLY_PUBLIC_KEY_TOKEN_T                    TEXT("b03f5f7f11d50a3a")
#define MESSAGEBUSINSTALLER_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                         (b0 3f 5f 7f 11 d5 0a 3a )
#define MESSAGEBUSINSTALLER_ASSEMBLY_CULTURE                                     neutral
#define MESSAGEBUSINSTALLER_ASSEMBLY_CULTURE_A                                  "neutral"
#define MESSAGEBUSINSTALLER_ASSEMBLY_CULTURE_W                                 L"neutral"
#define MESSAGEBUSINSTALLER_ASSEMBLY_CULTURE_S                                 S"neutral"
#define MESSAGEBUSINSTALLER_ASSEMBLY_CULTURE_T                             TEXT("neutral")
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_DEF                                  Microsoft.JScript,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_DEF_A                               "Microsoft.JScript,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_DEF_W                              L"Microsoft.JScript,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_DEF_S                              S"Microsoft.JScript,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_DEF_T                          TEXT("Microsoft.JScript,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_REF                                  Microsoft.JScript,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_REF_A                               "Microsoft.JScript,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_REF_W                              L"Microsoft.JScript,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_REF_S                              S"Microsoft.JScript,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_REF_T                          TEXT("Microsoft.JScript,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_FRIEND_REF                           Microsoft.JScript,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_FRIEND_REF_A                        "Microsoft.JScript,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_FRIEND_REF_W                       L"Microsoft.JScript,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_FRIEND_REF_S                       S"Microsoft.JScript,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_FRIEND_REF_T                   TEXT("Microsoft.JScript,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_EXACT_REF                            Microsoft.JScript,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_EXACT_REF_A                         "Microsoft.JScript,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_EXACT_REF_W                        L"Microsoft.JScript,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_EXACT_REF_S                        S"Microsoft.JScript,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_JSCRIPT_ASSEMBLY_IDENTITY_EXACT_REF_T                    TEXT("Microsoft.JScript,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_JSCRIPT_ASSEMBLY_NAME                                          Microsoft.JScript
#define MICROSOFT_JSCRIPT_ASSEMBLY_NAME_A                                       "Microsoft.JScript"
#define MICROSOFT_JSCRIPT_ASSEMBLY_NAME_W                                      L"Microsoft.JScript"
#define MICROSOFT_JSCRIPT_ASSEMBLY_NAME_S                                      S"Microsoft.JScript"
#define MICROSOFT_JSCRIPT_ASSEMBLY_NAME_T                                  TEXT("Microsoft.JScript")
#define MICROSOFT_JSCRIPT_ASSEMBLY_VERSION                                       8.0.1200.0
#define MICROSOFT_JSCRIPT_ASSEMBLY_VERSION_A                                    "8.0.1200.0"
#define MICROSOFT_JSCRIPT_ASSEMBLY_VERSION_W                                   L"8.0.1200.0"
#define MICROSOFT_JSCRIPT_ASSEMBLY_VERSION_S                                   S"8.0.1200.0"
#define MICROSOFT_JSCRIPT_ASSEMBLY_VERSION_T                               TEXT("8.0.1200.0")
#define MICROSOFT_JSCRIPT_ASSEMBLY_VERSION_IL                                     8:0:1200:0
#define MICROSOFT_JSCRIPT_ASSEMBLY_PUBLIC_KEY                                    002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define MICROSOFT_JSCRIPT_ASSEMBLY_PUBLIC_KEY_A                                 "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_JSCRIPT_ASSEMBLY_PUBLIC_KEY_W                                L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_JSCRIPT_ASSEMBLY_PUBLIC_KEY_S                                S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_JSCRIPT_ASSEMBLY_PUBLIC_KEY_T                            TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define MICROSOFT_JSCRIPT_ASSEMBLY_PUBLIC_KEY_IL                                 (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define MICROSOFT_JSCRIPT_ASSEMBLY_PUBLIC_KEY_TOKEN                              b03f5f7f11d50a3a
#define MICROSOFT_JSCRIPT_ASSEMBLY_PUBLIC_KEY_TOKEN_A                           "b03f5f7f11d50a3a"
#define MICROSOFT_JSCRIPT_ASSEMBLY_PUBLIC_KEY_TOKEN_W                          L"b03f5f7f11d50a3a"
#define MICROSOFT_JSCRIPT_ASSEMBLY_PUBLIC_KEY_TOKEN_S                          S"b03f5f7f11d50a3a"
#define MICROSOFT_JSCRIPT_ASSEMBLY_PUBLIC_KEY_TOKEN_T                      TEXT("b03f5f7f11d50a3a")
#define MICROSOFT_JSCRIPT_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                           (b0 3f 5f 7f 11 d5 0a 3a )
#define MICROSOFT_JSCRIPT_ASSEMBLY_CULTURE                                       neutral
#define MICROSOFT_JSCRIPT_ASSEMBLY_CULTURE_A                                    "neutral"
#define MICROSOFT_JSCRIPT_ASSEMBLY_CULTURE_W                                   L"neutral"
#define MICROSOFT_JSCRIPT_ASSEMBLY_CULTURE_S                                   S"neutral"
#define MICROSOFT_JSCRIPT_ASSEMBLY_CULTURE_T                               TEXT("neutral")
#define MICROSOFT_MSHTML_ASSEMBLY_IDENTITY_DEF                                   Microsoft.mshtml,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_MSHTML_ASSEMBLY_IDENTITY_DEF_A                                "Microsoft.mshtml,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_MSHTML_ASSEMBLY_IDENTITY_DEF_W                               L"Microsoft.mshtml,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_MSHTML_ASSEMBLY_IDENTITY_DEF_S                               S"Microsoft.mshtml,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_MSHTML_ASSEMBLY_IDENTITY_DEF_T                           TEXT("Microsoft.mshtml,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_MSHTML_ASSEMBLY_IDENTITY_REF                                   Microsoft.mshtml,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_MSHTML_ASSEMBLY_IDENTITY_REF_A                                "Microsoft.mshtml,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_MSHTML_ASSEMBLY_IDENTITY_REF_W                               L"Microsoft.mshtml,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_MSHTML_ASSEMBLY_IDENTITY_REF_S                               S"Microsoft.mshtml,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_MSHTML_ASSEMBLY_IDENTITY_REF_T                           TEXT("Microsoft.mshtml,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_MSHTML_ASSEMBLY_IDENTITY_FRIEND_REF                            Microsoft.mshtml,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_MSHTML_ASSEMBLY_IDENTITY_FRIEND_REF_A                         "Microsoft.mshtml,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_MSHTML_ASSEMBLY_IDENTITY_FRIEND_REF_W                        L"Microsoft.mshtml,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_MSHTML_ASSEMBLY_IDENTITY_FRIEND_REF_S                        S"Microsoft.mshtml,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_MSHTML_ASSEMBLY_IDENTITY_FRIEND_REF_T                    TEXT("Microsoft.mshtml,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_MSHTML_ASSEMBLY_IDENTITY_EXACT_REF                             Microsoft.mshtml,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_MSHTML_ASSEMBLY_IDENTITY_EXACT_REF_A                          "Microsoft.mshtml,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_MSHTML_ASSEMBLY_IDENTITY_EXACT_REF_W                         L"Microsoft.mshtml,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_MSHTML_ASSEMBLY_IDENTITY_EXACT_REF_S                         S"Microsoft.mshtml,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_MSHTML_ASSEMBLY_IDENTITY_EXACT_REF_T                     TEXT("Microsoft.mshtml,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_MSHTML_ASSEMBLY_NAME                                           Microsoft.mshtml
#define MICROSOFT_MSHTML_ASSEMBLY_NAME_A                                        "Microsoft.mshtml"
#define MICROSOFT_MSHTML_ASSEMBLY_NAME_W                                       L"Microsoft.mshtml"
#define MICROSOFT_MSHTML_ASSEMBLY_NAME_S                                       S"Microsoft.mshtml"
#define MICROSOFT_MSHTML_ASSEMBLY_NAME_T                                   TEXT("Microsoft.mshtml")
#define MICROSOFT_MSHTML_ASSEMBLY_VERSION                                        7.0.3300.0
#define MICROSOFT_MSHTML_ASSEMBLY_VERSION_A                                     "7.0.3300.0"
#define MICROSOFT_MSHTML_ASSEMBLY_VERSION_W                                    L"7.0.3300.0"
#define MICROSOFT_MSHTML_ASSEMBLY_VERSION_S                                    S"7.0.3300.0"
#define MICROSOFT_MSHTML_ASSEMBLY_VERSION_T                                TEXT("7.0.3300.0")
#define MICROSOFT_MSHTML_ASSEMBLY_VERSION_IL                                      7:0:3300:0
#define MICROSOFT_MSHTML_ASSEMBLY_PUBLIC_KEY                                     002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define MICROSOFT_MSHTML_ASSEMBLY_PUBLIC_KEY_A                                  "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_MSHTML_ASSEMBLY_PUBLIC_KEY_W                                 L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_MSHTML_ASSEMBLY_PUBLIC_KEY_S                                 S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_MSHTML_ASSEMBLY_PUBLIC_KEY_T                             TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define MICROSOFT_MSHTML_ASSEMBLY_PUBLIC_KEY_IL                                  (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define MICROSOFT_MSHTML_ASSEMBLY_PUBLIC_KEY_TOKEN                               b03f5f7f11d50a3a
#define MICROSOFT_MSHTML_ASSEMBLY_PUBLIC_KEY_TOKEN_A                            "b03f5f7f11d50a3a"
#define MICROSOFT_MSHTML_ASSEMBLY_PUBLIC_KEY_TOKEN_W                           L"b03f5f7f11d50a3a"
#define MICROSOFT_MSHTML_ASSEMBLY_PUBLIC_KEY_TOKEN_S                           S"b03f5f7f11d50a3a"
#define MICROSOFT_MSHTML_ASSEMBLY_PUBLIC_KEY_TOKEN_T                       TEXT("b03f5f7f11d50a3a")
#define MICROSOFT_MSHTML_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                            (b0 3f 5f 7f 11 d5 0a 3a )
#define MICROSOFT_MSHTML_ASSEMBLY_CULTURE                                        neutral
#define MICROSOFT_MSHTML_ASSEMBLY_CULTURE_A                                     "neutral"
#define MICROSOFT_MSHTML_ASSEMBLY_CULTURE_W                                    L"neutral"
#define MICROSOFT_MSHTML_ASSEMBLY_CULTURE_S                                    S"neutral"
#define MICROSOFT_MSHTML_ASSEMBLY_CULTURE_T                                TEXT("neutral")
#define MICROSOFT_STDFORMAT_ASSEMBLY_IDENTITY_DEF                                Microsoft.StdFormat,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_STDFORMAT_ASSEMBLY_IDENTITY_DEF_A                             "Microsoft.StdFormat,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_STDFORMAT_ASSEMBLY_IDENTITY_DEF_W                            L"Microsoft.StdFormat,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_STDFORMAT_ASSEMBLY_IDENTITY_DEF_S                            S"Microsoft.StdFormat,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_STDFORMAT_ASSEMBLY_IDENTITY_DEF_T                        TEXT("Microsoft.StdFormat,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_STDFORMAT_ASSEMBLY_IDENTITY_REF                                Microsoft.StdFormat,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_STDFORMAT_ASSEMBLY_IDENTITY_REF_A                             "Microsoft.StdFormat,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_STDFORMAT_ASSEMBLY_IDENTITY_REF_W                            L"Microsoft.StdFormat,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_STDFORMAT_ASSEMBLY_IDENTITY_REF_S                            S"Microsoft.StdFormat,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_STDFORMAT_ASSEMBLY_IDENTITY_REF_T                        TEXT("Microsoft.StdFormat,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_STDFORMAT_ASSEMBLY_IDENTITY_FRIEND_REF                         Microsoft.StdFormat,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_STDFORMAT_ASSEMBLY_IDENTITY_FRIEND_REF_A                      "Microsoft.StdFormat,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_STDFORMAT_ASSEMBLY_IDENTITY_FRIEND_REF_W                     L"Microsoft.StdFormat,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_STDFORMAT_ASSEMBLY_IDENTITY_FRIEND_REF_S                     S"Microsoft.StdFormat,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_STDFORMAT_ASSEMBLY_IDENTITY_FRIEND_REF_T                 TEXT("Microsoft.StdFormat,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_STDFORMAT_ASSEMBLY_IDENTITY_EXACT_REF                          Microsoft.StdFormat,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_STDFORMAT_ASSEMBLY_IDENTITY_EXACT_REF_A                       "Microsoft.StdFormat,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_STDFORMAT_ASSEMBLY_IDENTITY_EXACT_REF_W                      L"Microsoft.StdFormat,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_STDFORMAT_ASSEMBLY_IDENTITY_EXACT_REF_S                      S"Microsoft.StdFormat,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_STDFORMAT_ASSEMBLY_IDENTITY_EXACT_REF_T                  TEXT("Microsoft.StdFormat,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_STDFORMAT_ASSEMBLY_NAME                                        Microsoft.StdFormat
#define MICROSOFT_STDFORMAT_ASSEMBLY_NAME_A                                     "Microsoft.StdFormat"
#define MICROSOFT_STDFORMAT_ASSEMBLY_NAME_W                                    L"Microsoft.StdFormat"
#define MICROSOFT_STDFORMAT_ASSEMBLY_NAME_S                                    S"Microsoft.StdFormat"
#define MICROSOFT_STDFORMAT_ASSEMBLY_NAME_T                                TEXT("Microsoft.StdFormat")
#define MICROSOFT_STDFORMAT_ASSEMBLY_VERSION                                     7.0.3300.0
#define MICROSOFT_STDFORMAT_ASSEMBLY_VERSION_A                                  "7.0.3300.0"
#define MICROSOFT_STDFORMAT_ASSEMBLY_VERSION_W                                 L"7.0.3300.0"
#define MICROSOFT_STDFORMAT_ASSEMBLY_VERSION_S                                 S"7.0.3300.0"
#define MICROSOFT_STDFORMAT_ASSEMBLY_VERSION_T                             TEXT("7.0.3300.0")
#define MICROSOFT_STDFORMAT_ASSEMBLY_VERSION_IL                                   7:0:3300:0
#define MICROSOFT_STDFORMAT_ASSEMBLY_PUBLIC_KEY                                  002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define MICROSOFT_STDFORMAT_ASSEMBLY_PUBLIC_KEY_A                               "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_STDFORMAT_ASSEMBLY_PUBLIC_KEY_W                              L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_STDFORMAT_ASSEMBLY_PUBLIC_KEY_S                              S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_STDFORMAT_ASSEMBLY_PUBLIC_KEY_T                          TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define MICROSOFT_STDFORMAT_ASSEMBLY_PUBLIC_KEY_IL                               (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define MICROSOFT_STDFORMAT_ASSEMBLY_PUBLIC_KEY_TOKEN                            b03f5f7f11d50a3a
#define MICROSOFT_STDFORMAT_ASSEMBLY_PUBLIC_KEY_TOKEN_A                         "b03f5f7f11d50a3a"
#define MICROSOFT_STDFORMAT_ASSEMBLY_PUBLIC_KEY_TOKEN_W                        L"b03f5f7f11d50a3a"
#define MICROSOFT_STDFORMAT_ASSEMBLY_PUBLIC_KEY_TOKEN_S                        S"b03f5f7f11d50a3a"
#define MICROSOFT_STDFORMAT_ASSEMBLY_PUBLIC_KEY_TOKEN_T                    TEXT("b03f5f7f11d50a3a")
#define MICROSOFT_STDFORMAT_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                         (b0 3f 5f 7f 11 d5 0a 3a )
#define MICROSOFT_STDFORMAT_ASSEMBLY_CULTURE                                     neutral
#define MICROSOFT_STDFORMAT_ASSEMBLY_CULTURE_A                                  "neutral"
#define MICROSOFT_STDFORMAT_ASSEMBLY_CULTURE_W                                 L"neutral"
#define MICROSOFT_STDFORMAT_ASSEMBLY_CULTURE_S                                 S"neutral"
#define MICROSOFT_STDFORMAT_ASSEMBLY_CULTURE_T                             TEXT("neutral")
#define MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_IDENTITY_DEF                      Microsoft.Transactions.Bridge,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_IDENTITY_DEF_A                   "Microsoft.Transactions.Bridge,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_IDENTITY_DEF_W                  L"Microsoft.Transactions.Bridge,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_IDENTITY_DEF_S                  S"Microsoft.Transactions.Bridge,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_IDENTITY_DEF_T              TEXT("Microsoft.Transactions.Bridge,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_IDENTITY_REF                      Microsoft.Transactions.Bridge,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_IDENTITY_REF_A                   "Microsoft.Transactions.Bridge,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_IDENTITY_REF_W                  L"Microsoft.Transactions.Bridge,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_IDENTITY_REF_S                  S"Microsoft.Transactions.Bridge,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_IDENTITY_REF_T              TEXT("Microsoft.Transactions.Bridge,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_IDENTITY_FRIEND_REF               Microsoft.Transactions.Bridge,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_IDENTITY_FRIEND_REF_A            "Microsoft.Transactions.Bridge,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_IDENTITY_FRIEND_REF_W           L"Microsoft.Transactions.Bridge,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_IDENTITY_FRIEND_REF_S           S"Microsoft.Transactions.Bridge,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_IDENTITY_FRIEND_REF_T       TEXT("Microsoft.Transactions.Bridge,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_IDENTITY_EXACT_REF                Microsoft.Transactions.Bridge,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_IDENTITY_EXACT_REF_A             "Microsoft.Transactions.Bridge,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_IDENTITY_EXACT_REF_W            L"Microsoft.Transactions.Bridge,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_IDENTITY_EXACT_REF_S            S"Microsoft.Transactions.Bridge,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_IDENTITY_EXACT_REF_T        TEXT("Microsoft.Transactions.Bridge,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_NAME                              Microsoft.Transactions.Bridge
#define MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_NAME_A                           "Microsoft.Transactions.Bridge"
#define MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_NAME_W                          L"Microsoft.Transactions.Bridge"
#define MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_NAME_S                          S"Microsoft.Transactions.Bridge"
#define MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_NAME_T                      TEXT("Microsoft.Transactions.Bridge")
#define MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_VERSION                           2.0.3600.0
#define MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_VERSION_A                        "2.0.3600.0"
#define MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_VERSION_W                       L"2.0.3600.0"
#define MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_VERSION_S                       S"2.0.3600.0"
#define MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_VERSION_T                   TEXT("2.0.3600.0")
#define MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_VERSION_IL                         2:0:3600:0
#define MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_PUBLIC_KEY                        002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_PUBLIC_KEY_A                     "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_PUBLIC_KEY_W                    L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_PUBLIC_KEY_S                    S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_PUBLIC_KEY_T                TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_PUBLIC_KEY_IL                     (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_PUBLIC_KEY_TOKEN                  b03f5f7f11d50a3a
#define MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_PUBLIC_KEY_TOKEN_A               "b03f5f7f11d50a3a"
#define MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_PUBLIC_KEY_TOKEN_W              L"b03f5f7f11d50a3a"
#define MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_PUBLIC_KEY_TOKEN_S              S"b03f5f7f11d50a3a"
#define MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_PUBLIC_KEY_TOKEN_T          TEXT("b03f5f7f11d50a3a")
#define MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_PUBLIC_KEY_TOKEN_IL               (b0 3f 5f 7f 11 d5 0a 3a )
#define MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_CULTURE                           neutral
#define MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_CULTURE_A                        "neutral"
#define MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_CULTURE_W                       L"neutral"
#define MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_CULTURE_S                       S"neutral"
#define MICROSOFT_TRANSACTIONS_BRIDGE_ASSEMBLY_CULTURE_T                   TEXT("neutral")
#define MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_IDENTITY_DEF                  Microsoft.Transactions.Bridge.Dtc,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_IDENTITY_DEF_A               "Microsoft.Transactions.Bridge.Dtc,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_IDENTITY_DEF_W              L"Microsoft.Transactions.Bridge.Dtc,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_IDENTITY_DEF_S              S"Microsoft.Transactions.Bridge.Dtc,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_IDENTITY_DEF_T          TEXT("Microsoft.Transactions.Bridge.Dtc,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_IDENTITY_REF                  Microsoft.Transactions.Bridge.Dtc,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_IDENTITY_REF_A               "Microsoft.Transactions.Bridge.Dtc,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_IDENTITY_REF_W              L"Microsoft.Transactions.Bridge.Dtc,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_IDENTITY_REF_S              S"Microsoft.Transactions.Bridge.Dtc,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_IDENTITY_REF_T          TEXT("Microsoft.Transactions.Bridge.Dtc,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_IDENTITY_FRIEND_REF           Microsoft.Transactions.Bridge.Dtc,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_IDENTITY_FRIEND_REF_A        "Microsoft.Transactions.Bridge.Dtc,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_IDENTITY_FRIEND_REF_W       L"Microsoft.Transactions.Bridge.Dtc,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_IDENTITY_FRIEND_REF_S       S"Microsoft.Transactions.Bridge.Dtc,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_IDENTITY_FRIEND_REF_T   TEXT("Microsoft.Transactions.Bridge.Dtc,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_IDENTITY_EXACT_REF            Microsoft.Transactions.Bridge.Dtc,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_IDENTITY_EXACT_REF_A         "Microsoft.Transactions.Bridge.Dtc,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_IDENTITY_EXACT_REF_W        L"Microsoft.Transactions.Bridge.Dtc,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_IDENTITY_EXACT_REF_S        S"Microsoft.Transactions.Bridge.Dtc,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_IDENTITY_EXACT_REF_T    TEXT("Microsoft.Transactions.Bridge.Dtc,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_NAME                          Microsoft.Transactions.Bridge.Dtc
#define MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_NAME_A                       "Microsoft.Transactions.Bridge.Dtc"
#define MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_NAME_W                      L"Microsoft.Transactions.Bridge.Dtc"
#define MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_NAME_S                      S"Microsoft.Transactions.Bridge.Dtc"
#define MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_NAME_T                  TEXT("Microsoft.Transactions.Bridge.Dtc")
#define MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_VERSION                       2.0.3600.0
#define MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_VERSION_A                    "2.0.3600.0"
#define MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_VERSION_W                   L"2.0.3600.0"
#define MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_VERSION_S                   S"2.0.3600.0"
#define MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_VERSION_T               TEXT("2.0.3600.0")
#define MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_VERSION_IL                     2:0:3600:0
#define MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_PUBLIC_KEY                    002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_PUBLIC_KEY_A                 "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_PUBLIC_KEY_W                L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_PUBLIC_KEY_S                S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_PUBLIC_KEY_T            TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_PUBLIC_KEY_IL                 (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_PUBLIC_KEY_TOKEN              b03f5f7f11d50a3a
#define MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_PUBLIC_KEY_TOKEN_A           "b03f5f7f11d50a3a"
#define MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_PUBLIC_KEY_TOKEN_W          L"b03f5f7f11d50a3a"
#define MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_PUBLIC_KEY_TOKEN_S          S"b03f5f7f11d50a3a"
#define MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_PUBLIC_KEY_TOKEN_T      TEXT("b03f5f7f11d50a3a")
#define MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_PUBLIC_KEY_TOKEN_IL           (b0 3f 5f 7f 11 d5 0a 3a )
#define MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_CULTURE                       neutral
#define MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_CULTURE_A                    "neutral"
#define MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_CULTURE_W                   L"neutral"
#define MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_CULTURE_S                   S"neutral"
#define MICROSOFT_TRANSACTIONS_BRIDGE_DTC_ASSEMBLY_CULTURE_T               TEXT("neutral")
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_IDENTITY_DEF          Microsoft.Transactions.Protocols.WSTransaction,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_IDENTITY_DEF_A       "Microsoft.Transactions.Protocols.WSTransaction,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_IDENTITY_DEF_W      L"Microsoft.Transactions.Protocols.WSTransaction,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_IDENTITY_DEF_S      S"Microsoft.Transactions.Protocols.WSTransaction,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_IDENTITY_DEF_T  TEXT("Microsoft.Transactions.Protocols.WSTransaction,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_IDENTITY_REF          Microsoft.Transactions.Protocols.WSTransaction,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_IDENTITY_REF_A       "Microsoft.Transactions.Protocols.WSTransaction,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_IDENTITY_REF_W      L"Microsoft.Transactions.Protocols.WSTransaction,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_IDENTITY_REF_S      S"Microsoft.Transactions.Protocols.WSTransaction,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_IDENTITY_REF_T  TEXT("Microsoft.Transactions.Protocols.WSTransaction,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_IDENTITY_FRIEND_REF          Microsoft.Transactions.Protocols.WSTransaction,publicKeyToken=b77a5c561934e089,culture=neutral
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_IDENTITY_FRIEND_REF_A       "Microsoft.Transactions.Protocols.WSTransaction,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_IDENTITY_FRIEND_REF_W      L"Microsoft.Transactions.Protocols.WSTransaction,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_IDENTITY_FRIEND_REF_S      S"Microsoft.Transactions.Protocols.WSTransaction,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_IDENTITY_FRIEND_REF_T  TEXT("Microsoft.Transactions.Protocols.WSTransaction,publicKeyToken=b77a5c561934e089,culture=neutral")
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_IDENTITY_EXACT_REF          Microsoft.Transactions.Protocols.WSTransaction,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_IDENTITY_EXACT_REF_A       "Microsoft.Transactions.Protocols.WSTransaction,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_IDENTITY_EXACT_REF_W      L"Microsoft.Transactions.Protocols.WSTransaction,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_IDENTITY_EXACT_REF_S      S"Microsoft.Transactions.Protocols.WSTransaction,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_IDENTITY_EXACT_REF_T  TEXT("Microsoft.Transactions.Protocols.WSTransaction,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_NAME             Microsoft.Transactions.Protocols.WSTransaction
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_NAME_A          "Microsoft.Transactions.Protocols.WSTransaction"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_NAME_W         L"Microsoft.Transactions.Protocols.WSTransaction"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_NAME_S         S"Microsoft.Transactions.Protocols.WSTransaction"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_NAME_T     TEXT("Microsoft.Transactions.Protocols.WSTransaction")
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_VERSION          2.0.3600.0
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_VERSION_A       "2.0.3600.0"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_VERSION_W      L"2.0.3600.0"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_VERSION_S      S"2.0.3600.0"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_VERSION_T  TEXT("2.0.3600.0")
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_VERSION_IL        2:0:3600:0
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_PUBLIC_KEY          00000000000000000400000000000000
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_PUBLIC_KEY_A       "00000000000000000400000000000000"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_PUBLIC_KEY_W      L"00000000000000000400000000000000"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_PUBLIC_KEY_S      S"00000000000000000400000000000000"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_PUBLIC_KEY_T  TEXT("00000000000000000400000000000000")
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_PUBLIC_KEY_IL       (00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00 )
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_PUBLIC_KEY_TOKEN          b77a5c561934e089
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_PUBLIC_KEY_TOKEN_A       "b77a5c561934e089"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_PUBLIC_KEY_TOKEN_W      L"b77a5c561934e089"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_PUBLIC_KEY_TOKEN_S      S"b77a5c561934e089"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_PUBLIC_KEY_TOKEN_T  TEXT("b77a5c561934e089")
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_PUBLIC_KEY_TOKEN_IL       (b7 7a 5c 56 19 34 e0 89 )
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_CULTURE          neutral
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_CULTURE_A       "neutral"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_CULTURE_W      L"neutral"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_CULTURE_S      S"neutral"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_ASSEMBLY_CULTURE_T  TEXT("neutral")
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_IDENTITY_DEF          Microsoft.Transactions.Protocols.WSTransaction.Messaging,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_IDENTITY_DEF_A       "Microsoft.Transactions.Protocols.WSTransaction.Messaging,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_IDENTITY_DEF_W      L"Microsoft.Transactions.Protocols.WSTransaction.Messaging,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_IDENTITY_DEF_S      S"Microsoft.Transactions.Protocols.WSTransaction.Messaging,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_IDENTITY_DEF_T  TEXT("Microsoft.Transactions.Protocols.WSTransaction.Messaging,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_IDENTITY_REF          Microsoft.Transactions.Protocols.WSTransaction.Messaging,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_IDENTITY_REF_A       "Microsoft.Transactions.Protocols.WSTransaction.Messaging,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_IDENTITY_REF_W      L"Microsoft.Transactions.Protocols.WSTransaction.Messaging,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_IDENTITY_REF_S      S"Microsoft.Transactions.Protocols.WSTransaction.Messaging,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_IDENTITY_REF_T  TEXT("Microsoft.Transactions.Protocols.WSTransaction.Messaging,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_IDENTITY_FRIEND_REF          Microsoft.Transactions.Protocols.WSTransaction.Messaging,publicKeyToken=b77a5c561934e089,culture=neutral
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_IDENTITY_FRIEND_REF_A       "Microsoft.Transactions.Protocols.WSTransaction.Messaging,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_IDENTITY_FRIEND_REF_W      L"Microsoft.Transactions.Protocols.WSTransaction.Messaging,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_IDENTITY_FRIEND_REF_S      S"Microsoft.Transactions.Protocols.WSTransaction.Messaging,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_IDENTITY_FRIEND_REF_T  TEXT("Microsoft.Transactions.Protocols.WSTransaction.Messaging,publicKeyToken=b77a5c561934e089,culture=neutral")
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_IDENTITY_EXACT_REF          Microsoft.Transactions.Protocols.WSTransaction.Messaging,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_IDENTITY_EXACT_REF_A       "Microsoft.Transactions.Protocols.WSTransaction.Messaging,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_IDENTITY_EXACT_REF_W      L"Microsoft.Transactions.Protocols.WSTransaction.Messaging,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_IDENTITY_EXACT_REF_S      S"Microsoft.Transactions.Protocols.WSTransaction.Messaging,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_IDENTITY_EXACT_REF_T  TEXT("Microsoft.Transactions.Protocols.WSTransaction.Messaging,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_NAME          Microsoft.Transactions.Protocols.WSTransaction.Messaging
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_NAME_A       "Microsoft.Transactions.Protocols.WSTransaction.Messaging"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_NAME_W      L"Microsoft.Transactions.Protocols.WSTransaction.Messaging"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_NAME_S      S"Microsoft.Transactions.Protocols.WSTransaction.Messaging"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_NAME_T  TEXT("Microsoft.Transactions.Protocols.WSTransaction.Messaging")
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_VERSION          2.0.3600.0
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_VERSION_A       "2.0.3600.0"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_VERSION_W      L"2.0.3600.0"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_VERSION_S      S"2.0.3600.0"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_VERSION_T  TEXT("2.0.3600.0")
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_VERSION_IL        2:0:3600:0
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_PUBLIC_KEY          00000000000000000400000000000000
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_PUBLIC_KEY_A       "00000000000000000400000000000000"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_PUBLIC_KEY_W      L"00000000000000000400000000000000"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_PUBLIC_KEY_S      S"00000000000000000400000000000000"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_PUBLIC_KEY_T  TEXT("00000000000000000400000000000000")
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_PUBLIC_KEY_IL       (00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00 )
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_PUBLIC_KEY_TOKEN          b77a5c561934e089
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_PUBLIC_KEY_TOKEN_A       "b77a5c561934e089"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_PUBLIC_KEY_TOKEN_W      L"b77a5c561934e089"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_PUBLIC_KEY_TOKEN_S      S"b77a5c561934e089"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_PUBLIC_KEY_TOKEN_T  TEXT("b77a5c561934e089")
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_PUBLIC_KEY_TOKEN_IL       (b7 7a 5c 56 19 34 e0 89 )
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_CULTURE          neutral
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_CULTURE_A       "neutral"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_CULTURE_W      L"neutral"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_CULTURE_S      S"neutral"
#define MICROSOFT_TRANSACTIONS_PROTOCOLS_WSTRANSACTION_MESSAGING_ASSEMBLY_CULTURE_T  TEXT("neutral")
#define MICROSOFT_TRINITY_EXCEL_ASSEMBLY_IDENTITY_DEF                            Microsoft.Trinity.Excel,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_TRINITY_EXCEL_ASSEMBLY_IDENTITY_DEF_A                         "Microsoft.Trinity.Excel,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRINITY_EXCEL_ASSEMBLY_IDENTITY_DEF_W                        L"Microsoft.Trinity.Excel,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRINITY_EXCEL_ASSEMBLY_IDENTITY_DEF_S                        S"Microsoft.Trinity.Excel,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRINITY_EXCEL_ASSEMBLY_IDENTITY_DEF_T                    TEXT("Microsoft.Trinity.Excel,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_TRINITY_EXCEL_ASSEMBLY_IDENTITY_REF                            Microsoft.Trinity.Excel,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_TRINITY_EXCEL_ASSEMBLY_IDENTITY_REF_A                         "Microsoft.Trinity.Excel,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRINITY_EXCEL_ASSEMBLY_IDENTITY_REF_W                        L"Microsoft.Trinity.Excel,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRINITY_EXCEL_ASSEMBLY_IDENTITY_REF_S                        S"Microsoft.Trinity.Excel,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRINITY_EXCEL_ASSEMBLY_IDENTITY_REF_T                    TEXT("Microsoft.Trinity.Excel,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_TRINITY_EXCEL_ASSEMBLY_IDENTITY_FRIEND_REF                     Microsoft.Trinity.Excel,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_TRINITY_EXCEL_ASSEMBLY_IDENTITY_FRIEND_REF_A                  "Microsoft.Trinity.Excel,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRINITY_EXCEL_ASSEMBLY_IDENTITY_FRIEND_REF_W                 L"Microsoft.Trinity.Excel,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRINITY_EXCEL_ASSEMBLY_IDENTITY_FRIEND_REF_S                 S"Microsoft.Trinity.Excel,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRINITY_EXCEL_ASSEMBLY_IDENTITY_FRIEND_REF_T             TEXT("Microsoft.Trinity.Excel,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_TRINITY_EXCEL_ASSEMBLY_IDENTITY_EXACT_REF                      Microsoft.Trinity.Excel,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_TRINITY_EXCEL_ASSEMBLY_IDENTITY_EXACT_REF_A                   "Microsoft.Trinity.Excel,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRINITY_EXCEL_ASSEMBLY_IDENTITY_EXACT_REF_W                  L"Microsoft.Trinity.Excel,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRINITY_EXCEL_ASSEMBLY_IDENTITY_EXACT_REF_S                  S"Microsoft.Trinity.Excel,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRINITY_EXCEL_ASSEMBLY_IDENTITY_EXACT_REF_T              TEXT("Microsoft.Trinity.Excel,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_TRINITY_EXCEL_ASSEMBLY_NAME                                    Microsoft.Trinity.Excel
#define MICROSOFT_TRINITY_EXCEL_ASSEMBLY_NAME_A                                 "Microsoft.Trinity.Excel"
#define MICROSOFT_TRINITY_EXCEL_ASSEMBLY_NAME_W                                L"Microsoft.Trinity.Excel"
#define MICROSOFT_TRINITY_EXCEL_ASSEMBLY_NAME_S                                S"Microsoft.Trinity.Excel"
#define MICROSOFT_TRINITY_EXCEL_ASSEMBLY_NAME_T                            TEXT("Microsoft.Trinity.Excel")
#define MICROSOFT_TRINITY_EXCEL_ASSEMBLY_VERSION                                 8.0.1200.0
#define MICROSOFT_TRINITY_EXCEL_ASSEMBLY_VERSION_A                              "8.0.1200.0"
#define MICROSOFT_TRINITY_EXCEL_ASSEMBLY_VERSION_W                             L"8.0.1200.0"
#define MICROSOFT_TRINITY_EXCEL_ASSEMBLY_VERSION_S                             S"8.0.1200.0"
#define MICROSOFT_TRINITY_EXCEL_ASSEMBLY_VERSION_T                         TEXT("8.0.1200.0")
#define MICROSOFT_TRINITY_EXCEL_ASSEMBLY_VERSION_IL                               8:0:1200:0
#define MICROSOFT_TRINITY_EXCEL_ASSEMBLY_PUBLIC_KEY                              002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define MICROSOFT_TRINITY_EXCEL_ASSEMBLY_PUBLIC_KEY_A                           "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_TRINITY_EXCEL_ASSEMBLY_PUBLIC_KEY_W                          L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_TRINITY_EXCEL_ASSEMBLY_PUBLIC_KEY_S                          S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_TRINITY_EXCEL_ASSEMBLY_PUBLIC_KEY_T                      TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define MICROSOFT_TRINITY_EXCEL_ASSEMBLY_PUBLIC_KEY_IL                           (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define MICROSOFT_TRINITY_EXCEL_ASSEMBLY_PUBLIC_KEY_TOKEN                        b03f5f7f11d50a3a
#define MICROSOFT_TRINITY_EXCEL_ASSEMBLY_PUBLIC_KEY_TOKEN_A                     "b03f5f7f11d50a3a"
#define MICROSOFT_TRINITY_EXCEL_ASSEMBLY_PUBLIC_KEY_TOKEN_W                    L"b03f5f7f11d50a3a"
#define MICROSOFT_TRINITY_EXCEL_ASSEMBLY_PUBLIC_KEY_TOKEN_S                    S"b03f5f7f11d50a3a"
#define MICROSOFT_TRINITY_EXCEL_ASSEMBLY_PUBLIC_KEY_TOKEN_T                TEXT("b03f5f7f11d50a3a")
#define MICROSOFT_TRINITY_EXCEL_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                     (b0 3f 5f 7f 11 d5 0a 3a )
#define MICROSOFT_TRINITY_EXCEL_ASSEMBLY_CULTURE                                 neutral
#define MICROSOFT_TRINITY_EXCEL_ASSEMBLY_CULTURE_A                              "neutral"
#define MICROSOFT_TRINITY_EXCEL_ASSEMBLY_CULTURE_W                             L"neutral"
#define MICROSOFT_TRINITY_EXCEL_ASSEMBLY_CULTURE_S                             S"neutral"
#define MICROSOFT_TRINITY_EXCEL_ASSEMBLY_CULTURE_T                         TEXT("neutral")
#define MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_IDENTITY_DEF                          Microsoft.Trinity.Runtime,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_IDENTITY_DEF_A                       "Microsoft.Trinity.Runtime,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_IDENTITY_DEF_W                      L"Microsoft.Trinity.Runtime,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_IDENTITY_DEF_S                      S"Microsoft.Trinity.Runtime,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_IDENTITY_DEF_T                  TEXT("Microsoft.Trinity.Runtime,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_IDENTITY_REF                          Microsoft.Trinity.Runtime,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_IDENTITY_REF_A                       "Microsoft.Trinity.Runtime,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_IDENTITY_REF_W                      L"Microsoft.Trinity.Runtime,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_IDENTITY_REF_S                      S"Microsoft.Trinity.Runtime,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_IDENTITY_REF_T                  TEXT("Microsoft.Trinity.Runtime,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_IDENTITY_FRIEND_REF                   Microsoft.Trinity.Runtime,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_IDENTITY_FRIEND_REF_A                "Microsoft.Trinity.Runtime,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_IDENTITY_FRIEND_REF_W               L"Microsoft.Trinity.Runtime,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_IDENTITY_FRIEND_REF_S               S"Microsoft.Trinity.Runtime,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_IDENTITY_FRIEND_REF_T           TEXT("Microsoft.Trinity.Runtime,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_IDENTITY_EXACT_REF                    Microsoft.Trinity.Runtime,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_IDENTITY_EXACT_REF_A                 "Microsoft.Trinity.Runtime,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_IDENTITY_EXACT_REF_W                L"Microsoft.Trinity.Runtime,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_IDENTITY_EXACT_REF_S                S"Microsoft.Trinity.Runtime,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_IDENTITY_EXACT_REF_T            TEXT("Microsoft.Trinity.Runtime,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_NAME                                  Microsoft.Trinity.Runtime
#define MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_NAME_A                               "Microsoft.Trinity.Runtime"
#define MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_NAME_W                              L"Microsoft.Trinity.Runtime"
#define MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_NAME_S                              S"Microsoft.Trinity.Runtime"
#define MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_NAME_T                          TEXT("Microsoft.Trinity.Runtime")
#define MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_VERSION                               8.0.1200.0
#define MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_VERSION_A                            "8.0.1200.0"
#define MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_VERSION_W                           L"8.0.1200.0"
#define MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_VERSION_S                           S"8.0.1200.0"
#define MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_VERSION_T                       TEXT("8.0.1200.0")
#define MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_VERSION_IL                             8:0:1200:0
#define MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_PUBLIC_KEY                            002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_PUBLIC_KEY_A                         "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_PUBLIC_KEY_W                        L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_PUBLIC_KEY_S                        S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_PUBLIC_KEY_T                    TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_PUBLIC_KEY_IL                         (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_PUBLIC_KEY_TOKEN                      b03f5f7f11d50a3a
#define MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_PUBLIC_KEY_TOKEN_A                   "b03f5f7f11d50a3a"
#define MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_PUBLIC_KEY_TOKEN_W                  L"b03f5f7f11d50a3a"
#define MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_PUBLIC_KEY_TOKEN_S                  S"b03f5f7f11d50a3a"
#define MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_PUBLIC_KEY_TOKEN_T              TEXT("b03f5f7f11d50a3a")
#define MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                   (b0 3f 5f 7f 11 d5 0a 3a )
#define MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_CULTURE                               neutral
#define MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_CULTURE_A                            "neutral"
#define MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_CULTURE_W                           L"neutral"
#define MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_CULTURE_S                           S"neutral"
#define MICROSOFT_TRINITY_RUNTIME_ASSEMBLY_CULTURE_T                       TEXT("neutral")
#define MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_IDENTITY_DEF                        Microsoft.Trinity.SmartDocs,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_IDENTITY_DEF_A                     "Microsoft.Trinity.SmartDocs,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_IDENTITY_DEF_W                    L"Microsoft.Trinity.SmartDocs,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_IDENTITY_DEF_S                    S"Microsoft.Trinity.SmartDocs,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_IDENTITY_DEF_T                TEXT("Microsoft.Trinity.SmartDocs,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_IDENTITY_REF                        Microsoft.Trinity.SmartDocs,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_IDENTITY_REF_A                     "Microsoft.Trinity.SmartDocs,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_IDENTITY_REF_W                    L"Microsoft.Trinity.SmartDocs,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_IDENTITY_REF_S                    S"Microsoft.Trinity.SmartDocs,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_IDENTITY_REF_T                TEXT("Microsoft.Trinity.SmartDocs,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_IDENTITY_FRIEND_REF                 Microsoft.Trinity.SmartDocs,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_IDENTITY_FRIEND_REF_A              "Microsoft.Trinity.SmartDocs,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_IDENTITY_FRIEND_REF_W             L"Microsoft.Trinity.SmartDocs,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_IDENTITY_FRIEND_REF_S             S"Microsoft.Trinity.SmartDocs,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_IDENTITY_FRIEND_REF_T         TEXT("Microsoft.Trinity.SmartDocs,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_IDENTITY_EXACT_REF                  Microsoft.Trinity.SmartDocs,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_IDENTITY_EXACT_REF_A               "Microsoft.Trinity.SmartDocs,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_IDENTITY_EXACT_REF_W              L"Microsoft.Trinity.SmartDocs,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_IDENTITY_EXACT_REF_S              S"Microsoft.Trinity.SmartDocs,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_IDENTITY_EXACT_REF_T          TEXT("Microsoft.Trinity.SmartDocs,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_NAME                                Microsoft.Trinity.SmartDocs
#define MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_NAME_A                             "Microsoft.Trinity.SmartDocs"
#define MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_NAME_W                            L"Microsoft.Trinity.SmartDocs"
#define MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_NAME_S                            S"Microsoft.Trinity.SmartDocs"
#define MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_NAME_T                        TEXT("Microsoft.Trinity.SmartDocs")
#define MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_VERSION                             8.0.1200.0
#define MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_VERSION_A                          "8.0.1200.0"
#define MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_VERSION_W                         L"8.0.1200.0"
#define MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_VERSION_S                         S"8.0.1200.0"
#define MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_VERSION_T                     TEXT("8.0.1200.0")
#define MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_VERSION_IL                           8:0:1200:0
#define MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_PUBLIC_KEY                          002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_PUBLIC_KEY_A                       "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_PUBLIC_KEY_W                      L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_PUBLIC_KEY_S                      S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_PUBLIC_KEY_T                  TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_PUBLIC_KEY_IL                       (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_PUBLIC_KEY_TOKEN                    b03f5f7f11d50a3a
#define MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_PUBLIC_KEY_TOKEN_A                 "b03f5f7f11d50a3a"
#define MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_PUBLIC_KEY_TOKEN_W                L"b03f5f7f11d50a3a"
#define MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_PUBLIC_KEY_TOKEN_S                S"b03f5f7f11d50a3a"
#define MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_PUBLIC_KEY_TOKEN_T            TEXT("b03f5f7f11d50a3a")
#define MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                 (b0 3f 5f 7f 11 d5 0a 3a )
#define MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_CULTURE                             neutral
#define MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_CULTURE_A                          "neutral"
#define MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_CULTURE_W                         L"neutral"
#define MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_CULTURE_S                         S"neutral"
#define MICROSOFT_TRINITY_SMARTDOCS_ASSEMBLY_CULTURE_T                     TEXT("neutral")
#define MICROSOFT_TRINITY_WORD_ASSEMBLY_IDENTITY_DEF                             Microsoft.Trinity.Word,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_TRINITY_WORD_ASSEMBLY_IDENTITY_DEF_A                          "Microsoft.Trinity.Word,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRINITY_WORD_ASSEMBLY_IDENTITY_DEF_W                         L"Microsoft.Trinity.Word,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRINITY_WORD_ASSEMBLY_IDENTITY_DEF_S                         S"Microsoft.Trinity.Word,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRINITY_WORD_ASSEMBLY_IDENTITY_DEF_T                     TEXT("Microsoft.Trinity.Word,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_TRINITY_WORD_ASSEMBLY_IDENTITY_REF                             Microsoft.Trinity.Word,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_TRINITY_WORD_ASSEMBLY_IDENTITY_REF_A                          "Microsoft.Trinity.Word,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRINITY_WORD_ASSEMBLY_IDENTITY_REF_W                         L"Microsoft.Trinity.Word,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRINITY_WORD_ASSEMBLY_IDENTITY_REF_S                         S"Microsoft.Trinity.Word,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRINITY_WORD_ASSEMBLY_IDENTITY_REF_T                     TEXT("Microsoft.Trinity.Word,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_TRINITY_WORD_ASSEMBLY_IDENTITY_FRIEND_REF                      Microsoft.Trinity.Word,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_TRINITY_WORD_ASSEMBLY_IDENTITY_FRIEND_REF_A                   "Microsoft.Trinity.Word,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRINITY_WORD_ASSEMBLY_IDENTITY_FRIEND_REF_W                  L"Microsoft.Trinity.Word,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRINITY_WORD_ASSEMBLY_IDENTITY_FRIEND_REF_S                  S"Microsoft.Trinity.Word,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRINITY_WORD_ASSEMBLY_IDENTITY_FRIEND_REF_T              TEXT("Microsoft.Trinity.Word,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_TRINITY_WORD_ASSEMBLY_IDENTITY_EXACT_REF                       Microsoft.Trinity.Word,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_TRINITY_WORD_ASSEMBLY_IDENTITY_EXACT_REF_A                    "Microsoft.Trinity.Word,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRINITY_WORD_ASSEMBLY_IDENTITY_EXACT_REF_W                   L"Microsoft.Trinity.Word,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRINITY_WORD_ASSEMBLY_IDENTITY_EXACT_REF_S                   S"Microsoft.Trinity.Word,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_TRINITY_WORD_ASSEMBLY_IDENTITY_EXACT_REF_T               TEXT("Microsoft.Trinity.Word,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_TRINITY_WORD_ASSEMBLY_NAME                                     Microsoft.Trinity.Word
#define MICROSOFT_TRINITY_WORD_ASSEMBLY_NAME_A                                  "Microsoft.Trinity.Word"
#define MICROSOFT_TRINITY_WORD_ASSEMBLY_NAME_W                                 L"Microsoft.Trinity.Word"
#define MICROSOFT_TRINITY_WORD_ASSEMBLY_NAME_S                                 S"Microsoft.Trinity.Word"
#define MICROSOFT_TRINITY_WORD_ASSEMBLY_NAME_T                             TEXT("Microsoft.Trinity.Word")
#define MICROSOFT_TRINITY_WORD_ASSEMBLY_VERSION                                  8.0.1200.0
#define MICROSOFT_TRINITY_WORD_ASSEMBLY_VERSION_A                               "8.0.1200.0"
#define MICROSOFT_TRINITY_WORD_ASSEMBLY_VERSION_W                              L"8.0.1200.0"
#define MICROSOFT_TRINITY_WORD_ASSEMBLY_VERSION_S                              S"8.0.1200.0"
#define MICROSOFT_TRINITY_WORD_ASSEMBLY_VERSION_T                          TEXT("8.0.1200.0")
#define MICROSOFT_TRINITY_WORD_ASSEMBLY_VERSION_IL                                8:0:1200:0
#define MICROSOFT_TRINITY_WORD_ASSEMBLY_PUBLIC_KEY                               002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define MICROSOFT_TRINITY_WORD_ASSEMBLY_PUBLIC_KEY_A                            "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_TRINITY_WORD_ASSEMBLY_PUBLIC_KEY_W                           L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_TRINITY_WORD_ASSEMBLY_PUBLIC_KEY_S                           S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_TRINITY_WORD_ASSEMBLY_PUBLIC_KEY_T                       TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define MICROSOFT_TRINITY_WORD_ASSEMBLY_PUBLIC_KEY_IL                            (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define MICROSOFT_TRINITY_WORD_ASSEMBLY_PUBLIC_KEY_TOKEN                         b03f5f7f11d50a3a
#define MICROSOFT_TRINITY_WORD_ASSEMBLY_PUBLIC_KEY_TOKEN_A                      "b03f5f7f11d50a3a"
#define MICROSOFT_TRINITY_WORD_ASSEMBLY_PUBLIC_KEY_TOKEN_W                     L"b03f5f7f11d50a3a"
#define MICROSOFT_TRINITY_WORD_ASSEMBLY_PUBLIC_KEY_TOKEN_S                     S"b03f5f7f11d50a3a"
#define MICROSOFT_TRINITY_WORD_ASSEMBLY_PUBLIC_KEY_TOKEN_T                 TEXT("b03f5f7f11d50a3a")
#define MICROSOFT_TRINITY_WORD_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                      (b0 3f 5f 7f 11 d5 0a 3a )
#define MICROSOFT_TRINITY_WORD_ASSEMBLY_CULTURE                                  neutral
#define MICROSOFT_TRINITY_WORD_ASSEMBLY_CULTURE_A                               "neutral"
#define MICROSOFT_TRINITY_WORD_ASSEMBLY_CULTURE_W                              L"neutral"
#define MICROSOFT_TRINITY_WORD_ASSEMBLY_CULTURE_S                              S"neutral"
#define MICROSOFT_TRINITY_WORD_ASSEMBLY_CULTURE_T                          TEXT("neutral")
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_DEF           Microsoft.VisualBasic.Compatibility.Data,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_DEF_A        "Microsoft.VisualBasic.Compatibility.Data,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_DEF_W       L"Microsoft.VisualBasic.Compatibility.Data,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_DEF_S       S"Microsoft.VisualBasic.Compatibility.Data,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_DEF_T   TEXT("Microsoft.VisualBasic.Compatibility.Data,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_REF           Microsoft.VisualBasic.Compatibility.Data,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_REF_A        "Microsoft.VisualBasic.Compatibility.Data,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_REF_W       L"Microsoft.VisualBasic.Compatibility.Data,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_REF_S       S"Microsoft.VisualBasic.Compatibility.Data,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_REF_T   TEXT("Microsoft.VisualBasic.Compatibility.Data,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_FRIEND_REF          Microsoft.VisualBasic.Compatibility.Data,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_FRIEND_REF_A       "Microsoft.VisualBasic.Compatibility.Data,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_FRIEND_REF_W      L"Microsoft.VisualBasic.Compatibility.Data,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_FRIEND_REF_S      S"Microsoft.VisualBasic.Compatibility.Data,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_FRIEND_REF_T  TEXT("Microsoft.VisualBasic.Compatibility.Data,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_EXACT_REF          Microsoft.VisualBasic.Compatibility.Data,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_EXACT_REF_A       "Microsoft.VisualBasic.Compatibility.Data,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_EXACT_REF_W      L"Microsoft.VisualBasic.Compatibility.Data,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_EXACT_REF_S      S"Microsoft.VisualBasic.Compatibility.Data,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_IDENTITY_EXACT_REF_T  TEXT("Microsoft.VisualBasic.Compatibility.Data,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_NAME                   Microsoft.VisualBasic.Compatibility.Data
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_NAME_A                "Microsoft.VisualBasic.Compatibility.Data"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_NAME_W               L"Microsoft.VisualBasic.Compatibility.Data"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_NAME_S               S"Microsoft.VisualBasic.Compatibility.Data"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_NAME_T           TEXT("Microsoft.VisualBasic.Compatibility.Data")
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_VERSION                8.0.1200.0
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_VERSION_A             "8.0.1200.0"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_VERSION_W            L"8.0.1200.0"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_VERSION_S            S"8.0.1200.0"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_VERSION_T        TEXT("8.0.1200.0")
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_VERSION_IL              8:0:1200:0
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_PUBLIC_KEY             002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_PUBLIC_KEY_A          "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_PUBLIC_KEY_W         L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_PUBLIC_KEY_S         S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_PUBLIC_KEY_T     TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_PUBLIC_KEY_IL          (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_PUBLIC_KEY_TOKEN          b03f5f7f11d50a3a
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_PUBLIC_KEY_TOKEN_A       "b03f5f7f11d50a3a"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_PUBLIC_KEY_TOKEN_W      L"b03f5f7f11d50a3a"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_PUBLIC_KEY_TOKEN_S      S"b03f5f7f11d50a3a"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_PUBLIC_KEY_TOKEN_T  TEXT("b03f5f7f11d50a3a")
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_PUBLIC_KEY_TOKEN_IL       (b0 3f 5f 7f 11 d5 0a 3a )
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_CULTURE                neutral
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_CULTURE_A             "neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_CULTURE_W            L"neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_CULTURE_S            S"neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_DATA_ASSEMBLY_CULTURE_T        TEXT("neutral")
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_DEF                Microsoft.VisualBasic.Compatibility,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_DEF_A             "Microsoft.VisualBasic.Compatibility,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_DEF_W            L"Microsoft.VisualBasic.Compatibility,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_DEF_S            S"Microsoft.VisualBasic.Compatibility,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_DEF_T        TEXT("Microsoft.VisualBasic.Compatibility,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_REF                Microsoft.VisualBasic.Compatibility,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_REF_A             "Microsoft.VisualBasic.Compatibility,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_REF_W            L"Microsoft.VisualBasic.Compatibility,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_REF_S            S"Microsoft.VisualBasic.Compatibility,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_REF_T        TEXT("Microsoft.VisualBasic.Compatibility,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_FRIEND_REF          Microsoft.VisualBasic.Compatibility,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_FRIEND_REF_A       "Microsoft.VisualBasic.Compatibility,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_FRIEND_REF_W      L"Microsoft.VisualBasic.Compatibility,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_FRIEND_REF_S      S"Microsoft.VisualBasic.Compatibility,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_FRIEND_REF_T  TEXT("Microsoft.VisualBasic.Compatibility,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_EXACT_REF          Microsoft.VisualBasic.Compatibility,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_EXACT_REF_A       "Microsoft.VisualBasic.Compatibility,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_EXACT_REF_W      L"Microsoft.VisualBasic.Compatibility,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_EXACT_REF_S      S"Microsoft.VisualBasic.Compatibility,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_IDENTITY_EXACT_REF_T  TEXT("Microsoft.VisualBasic.Compatibility,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_NAME                        Microsoft.VisualBasic.Compatibility
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_NAME_A                     "Microsoft.VisualBasic.Compatibility"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_NAME_W                    L"Microsoft.VisualBasic.Compatibility"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_NAME_S                    S"Microsoft.VisualBasic.Compatibility"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_NAME_T                TEXT("Microsoft.VisualBasic.Compatibility")
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_VERSION                     8.0.1200.0
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_VERSION_A                  "8.0.1200.0"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_VERSION_W                 L"8.0.1200.0"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_VERSION_S                 S"8.0.1200.0"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_VERSION_T             TEXT("8.0.1200.0")
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_VERSION_IL                   8:0:1200:0
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_PUBLIC_KEY                  002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_PUBLIC_KEY_A               "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_PUBLIC_KEY_W              L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_PUBLIC_KEY_S              S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_PUBLIC_KEY_T          TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_PUBLIC_KEY_IL               (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_PUBLIC_KEY_TOKEN            b03f5f7f11d50a3a
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_PUBLIC_KEY_TOKEN_A         "b03f5f7f11d50a3a"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_PUBLIC_KEY_TOKEN_W        L"b03f5f7f11d50a3a"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_PUBLIC_KEY_TOKEN_S        S"b03f5f7f11d50a3a"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_PUBLIC_KEY_TOKEN_T    TEXT("b03f5f7f11d50a3a")
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_PUBLIC_KEY_TOKEN_IL         (b0 3f 5f 7f 11 d5 0a 3a )
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_CULTURE                     neutral
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_CULTURE_A                  "neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_CULTURE_W                 L"neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_CULTURE_S                 S"neutral"
#define MICROSOFT_VISUALBASIC_COMPATIBILITY_ASSEMBLY_CULTURE_T             TEXT("neutral")
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_DEF                              Microsoft.VisualBasic,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_DEF_A                           "Microsoft.VisualBasic,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_DEF_W                          L"Microsoft.VisualBasic,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_DEF_S                          S"Microsoft.VisualBasic,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_DEF_T                      TEXT("Microsoft.VisualBasic,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_REF                              Microsoft.VisualBasic,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_REF_A                           "Microsoft.VisualBasic,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_REF_W                          L"Microsoft.VisualBasic,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_REF_S                          S"Microsoft.VisualBasic,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_REF_T                      TEXT("Microsoft.VisualBasic,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_FRIEND_REF                       Microsoft.VisualBasic,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_FRIEND_REF_A                    "Microsoft.VisualBasic,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_FRIEND_REF_W                   L"Microsoft.VisualBasic,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_FRIEND_REF_S                   S"Microsoft.VisualBasic,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_FRIEND_REF_T               TEXT("Microsoft.VisualBasic,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_EXACT_REF                        Microsoft.VisualBasic,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_EXACT_REF_A                     "Microsoft.VisualBasic,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_EXACT_REF_W                    L"Microsoft.VisualBasic,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_EXACT_REF_S                    S"Microsoft.VisualBasic,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_IDENTITY_EXACT_REF_T                TEXT("Microsoft.VisualBasic,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALBASIC_ASSEMBLY_NAME                                      Microsoft.VisualBasic
#define MICROSOFT_VISUALBASIC_ASSEMBLY_NAME_A                                   "Microsoft.VisualBasic"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_NAME_W                                  L"Microsoft.VisualBasic"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_NAME_S                                  S"Microsoft.VisualBasic"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_NAME_T                              TEXT("Microsoft.VisualBasic")
#define MICROSOFT_VISUALBASIC_ASSEMBLY_VERSION                                   8.0.1200.0
#define MICROSOFT_VISUALBASIC_ASSEMBLY_VERSION_A                                "8.0.1200.0"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_VERSION_W                               L"8.0.1200.0"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_VERSION_S                               S"8.0.1200.0"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_VERSION_T                           TEXT("8.0.1200.0")
#define MICROSOFT_VISUALBASIC_ASSEMBLY_VERSION_IL                                 8:0:1200:0
#define MICROSOFT_VISUALBASIC_ASSEMBLY_PUBLIC_KEY                                002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define MICROSOFT_VISUALBASIC_ASSEMBLY_PUBLIC_KEY_A                             "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_PUBLIC_KEY_W                            L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_PUBLIC_KEY_S                            S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_PUBLIC_KEY_T                        TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define MICROSOFT_VISUALBASIC_ASSEMBLY_PUBLIC_KEY_IL                             (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define MICROSOFT_VISUALBASIC_ASSEMBLY_PUBLIC_KEY_TOKEN                          b03f5f7f11d50a3a
#define MICROSOFT_VISUALBASIC_ASSEMBLY_PUBLIC_KEY_TOKEN_A                       "b03f5f7f11d50a3a"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_PUBLIC_KEY_TOKEN_W                      L"b03f5f7f11d50a3a"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_PUBLIC_KEY_TOKEN_S                      S"b03f5f7f11d50a3a"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_PUBLIC_KEY_TOKEN_T                  TEXT("b03f5f7f11d50a3a")
#define MICROSOFT_VISUALBASIC_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                       (b0 3f 5f 7f 11 d5 0a 3a )
#define MICROSOFT_VISUALBASIC_ASSEMBLY_CULTURE                                   neutral
#define MICROSOFT_VISUALBASIC_ASSEMBLY_CULTURE_A                                "neutral"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_CULTURE_W                               L"neutral"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_CULTURE_S                               S"neutral"
#define MICROSOFT_VISUALBASIC_ASSEMBLY_CULTURE_T                           TEXT("neutral")
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_DEF                          Microsoft.VisualBasic.Vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_DEF_A                       "Microsoft.VisualBasic.Vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_DEF_W                      L"Microsoft.VisualBasic.Vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_DEF_S                      S"Microsoft.VisualBasic.Vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_DEF_T                  TEXT("Microsoft.VisualBasic.Vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_REF                          Microsoft.VisualBasic.Vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_REF_A                       "Microsoft.VisualBasic.Vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_REF_W                      L"Microsoft.VisualBasic.Vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_REF_S                      S"Microsoft.VisualBasic.Vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_REF_T                  TEXT("Microsoft.VisualBasic.Vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_FRIEND_REF                   Microsoft.VisualBasic.Vsa,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_FRIEND_REF_A                "Microsoft.VisualBasic.Vsa,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_FRIEND_REF_W               L"Microsoft.VisualBasic.Vsa,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_FRIEND_REF_S               S"Microsoft.VisualBasic.Vsa,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_FRIEND_REF_T           TEXT("Microsoft.VisualBasic.Vsa,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_EXACT_REF                    Microsoft.VisualBasic.Vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_EXACT_REF_A                 "Microsoft.VisualBasic.Vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_EXACT_REF_W                L"Microsoft.VisualBasic.Vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_EXACT_REF_S                S"Microsoft.VisualBasic.Vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_IDENTITY_EXACT_REF_T            TEXT("Microsoft.VisualBasic.Vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_NAME                                  Microsoft.VisualBasic.Vsa
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_NAME_A                               "Microsoft.VisualBasic.Vsa"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_NAME_W                              L"Microsoft.VisualBasic.Vsa"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_NAME_S                              S"Microsoft.VisualBasic.Vsa"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_NAME_T                          TEXT("Microsoft.VisualBasic.Vsa")
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_VERSION                               8.0.1200.0
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_VERSION_A                            "8.0.1200.0"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_VERSION_W                           L"8.0.1200.0"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_VERSION_S                           S"8.0.1200.0"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_VERSION_T                       TEXT("8.0.1200.0")
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_VERSION_IL                             8:0:1200:0
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_PUBLIC_KEY                            002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_PUBLIC_KEY_A                         "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_PUBLIC_KEY_W                        L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_PUBLIC_KEY_S                        S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_PUBLIC_KEY_T                    TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_PUBLIC_KEY_IL                         (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_PUBLIC_KEY_TOKEN                      b03f5f7f11d50a3a
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_PUBLIC_KEY_TOKEN_A                   "b03f5f7f11d50a3a"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_PUBLIC_KEY_TOKEN_W                  L"b03f5f7f11d50a3a"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_PUBLIC_KEY_TOKEN_S                  S"b03f5f7f11d50a3a"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_PUBLIC_KEY_TOKEN_T              TEXT("b03f5f7f11d50a3a")
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                   (b0 3f 5f 7f 11 d5 0a 3a )
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_CULTURE                               neutral
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_CULTURE_A                            "neutral"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_CULTURE_W                           L"neutral"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_CULTURE_S                           S"neutral"
#define MICROSOFT_VISUALBASIC_VSA_ASSEMBLY_CULTURE_T                       TEXT("neutral")
#define MICROSOFT_VISUALC_ASSEMBLY_IDENTITY_DEF                                  Microsoft.VisualC,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALC_ASSEMBLY_IDENTITY_DEF_A                               "Microsoft.VisualC,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALC_ASSEMBLY_IDENTITY_DEF_W                              L"Microsoft.VisualC,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALC_ASSEMBLY_IDENTITY_DEF_S                              S"Microsoft.VisualC,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALC_ASSEMBLY_IDENTITY_DEF_T                          TEXT("Microsoft.VisualC,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALC_ASSEMBLY_IDENTITY_REF                                  Microsoft.VisualC,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALC_ASSEMBLY_IDENTITY_REF_A                               "Microsoft.VisualC,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALC_ASSEMBLY_IDENTITY_REF_W                              L"Microsoft.VisualC,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALC_ASSEMBLY_IDENTITY_REF_S                              S"Microsoft.VisualC,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALC_ASSEMBLY_IDENTITY_REF_T                          TEXT("Microsoft.VisualC,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALC_ASSEMBLY_IDENTITY_FRIEND_REF                           Microsoft.VisualC,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALC_ASSEMBLY_IDENTITY_FRIEND_REF_A                        "Microsoft.VisualC,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALC_ASSEMBLY_IDENTITY_FRIEND_REF_W                       L"Microsoft.VisualC,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALC_ASSEMBLY_IDENTITY_FRIEND_REF_S                       S"Microsoft.VisualC,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALC_ASSEMBLY_IDENTITY_FRIEND_REF_T                   TEXT("Microsoft.VisualC,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALC_ASSEMBLY_IDENTITY_EXACT_REF                            Microsoft.VisualC,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALC_ASSEMBLY_IDENTITY_EXACT_REF_A                         "Microsoft.VisualC,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALC_ASSEMBLY_IDENTITY_EXACT_REF_W                        L"Microsoft.VisualC,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALC_ASSEMBLY_IDENTITY_EXACT_REF_S                        S"Microsoft.VisualC,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALC_ASSEMBLY_IDENTITY_EXACT_REF_T                    TEXT("Microsoft.VisualC,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALC_ASSEMBLY_NAME                                          Microsoft.VisualC
#define MICROSOFT_VISUALC_ASSEMBLY_NAME_A                                       "Microsoft.VisualC"
#define MICROSOFT_VISUALC_ASSEMBLY_NAME_W                                      L"Microsoft.VisualC"
#define MICROSOFT_VISUALC_ASSEMBLY_NAME_S                                      S"Microsoft.VisualC"
#define MICROSOFT_VISUALC_ASSEMBLY_NAME_T                                  TEXT("Microsoft.VisualC")
#define MICROSOFT_VISUALC_ASSEMBLY_VERSION                                       8.0.1200.0
#define MICROSOFT_VISUALC_ASSEMBLY_VERSION_A                                    "8.0.1200.0"
#define MICROSOFT_VISUALC_ASSEMBLY_VERSION_W                                   L"8.0.1200.0"
#define MICROSOFT_VISUALC_ASSEMBLY_VERSION_S                                   S"8.0.1200.0"
#define MICROSOFT_VISUALC_ASSEMBLY_VERSION_T                               TEXT("8.0.1200.0")
#define MICROSOFT_VISUALC_ASSEMBLY_VERSION_IL                                     8:0:1200:0
#define MICROSOFT_VISUALC_ASSEMBLY_PUBLIC_KEY                                    002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define MICROSOFT_VISUALC_ASSEMBLY_PUBLIC_KEY_A                                 "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VISUALC_ASSEMBLY_PUBLIC_KEY_W                                L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VISUALC_ASSEMBLY_PUBLIC_KEY_S                                S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VISUALC_ASSEMBLY_PUBLIC_KEY_T                            TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define MICROSOFT_VISUALC_ASSEMBLY_PUBLIC_KEY_IL                                 (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define MICROSOFT_VISUALC_ASSEMBLY_PUBLIC_KEY_TOKEN                              b03f5f7f11d50a3a
#define MICROSOFT_VISUALC_ASSEMBLY_PUBLIC_KEY_TOKEN_A                           "b03f5f7f11d50a3a"
#define MICROSOFT_VISUALC_ASSEMBLY_PUBLIC_KEY_TOKEN_W                          L"b03f5f7f11d50a3a"
#define MICROSOFT_VISUALC_ASSEMBLY_PUBLIC_KEY_TOKEN_S                          S"b03f5f7f11d50a3a"
#define MICROSOFT_VISUALC_ASSEMBLY_PUBLIC_KEY_TOKEN_T                      TEXT("b03f5f7f11d50a3a")
#define MICROSOFT_VISUALC_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                           (b0 3f 5f 7f 11 d5 0a 3a )
#define MICROSOFT_VISUALC_ASSEMBLY_CULTURE                                       neutral
#define MICROSOFT_VISUALC_ASSEMBLY_CULTURE_A                                    "neutral"
#define MICROSOFT_VISUALC_ASSEMBLY_CULTURE_W                                   L"neutral"
#define MICROSOFT_VISUALC_ASSEMBLY_CULTURE_S                                   S"neutral"
#define MICROSOFT_VISUALC_ASSEMBLY_CULTURE_T                               TEXT("neutral")
#define MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_IDENTITY_DEF                   Microsoft.VisualC.VSCodeProvider,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_IDENTITY_DEF_A                "Microsoft.VisualC.VSCodeProvider,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_IDENTITY_DEF_W               L"Microsoft.VisualC.VSCodeProvider,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_IDENTITY_DEF_S               S"Microsoft.VisualC.VSCodeProvider,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_IDENTITY_DEF_T           TEXT("Microsoft.VisualC.VSCodeProvider,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_IDENTITY_REF                   Microsoft.VisualC.VSCodeProvider,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_IDENTITY_REF_A                "Microsoft.VisualC.VSCodeProvider,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_IDENTITY_REF_W               L"Microsoft.VisualC.VSCodeProvider,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_IDENTITY_REF_S               S"Microsoft.VisualC.VSCodeProvider,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_IDENTITY_REF_T           TEXT("Microsoft.VisualC.VSCodeProvider,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_IDENTITY_FRIEND_REF            Microsoft.VisualC.VSCodeProvider,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_IDENTITY_FRIEND_REF_A         "Microsoft.VisualC.VSCodeProvider,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_IDENTITY_FRIEND_REF_W        L"Microsoft.VisualC.VSCodeProvider,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_IDENTITY_FRIEND_REF_S        S"Microsoft.VisualC.VSCodeProvider,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_IDENTITY_FRIEND_REF_T    TEXT("Microsoft.VisualC.VSCodeProvider,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_IDENTITY_EXACT_REF             Microsoft.VisualC.VSCodeProvider,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_IDENTITY_EXACT_REF_A          "Microsoft.VisualC.VSCodeProvider,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_IDENTITY_EXACT_REF_W         L"Microsoft.VisualC.VSCodeProvider,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_IDENTITY_EXACT_REF_S         S"Microsoft.VisualC.VSCodeProvider,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_IDENTITY_EXACT_REF_T     TEXT("Microsoft.VisualC.VSCodeProvider,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_NAME                           Microsoft.VisualC.VSCodeProvider
#define MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_NAME_A                        "Microsoft.VisualC.VSCodeProvider"
#define MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_NAME_W                       L"Microsoft.VisualC.VSCodeProvider"
#define MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_NAME_S                       S"Microsoft.VisualC.VSCodeProvider"
#define MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_NAME_T                   TEXT("Microsoft.VisualC.VSCodeProvider")
#define MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_VERSION                        8.0.1200.0
#define MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_VERSION_A                     "8.0.1200.0"
#define MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_VERSION_W                    L"8.0.1200.0"
#define MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_VERSION_S                    S"8.0.1200.0"
#define MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_VERSION_T                TEXT("8.0.1200.0")
#define MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_VERSION_IL                      8:0:1200:0
#define MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_PUBLIC_KEY                     002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_PUBLIC_KEY_A                  "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_PUBLIC_KEY_W                 L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_PUBLIC_KEY_S                 S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_PUBLIC_KEY_T             TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_PUBLIC_KEY_IL                  (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_PUBLIC_KEY_TOKEN               b03f5f7f11d50a3a
#define MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_PUBLIC_KEY_TOKEN_A            "b03f5f7f11d50a3a"
#define MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_PUBLIC_KEY_TOKEN_W           L"b03f5f7f11d50a3a"
#define MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_PUBLIC_KEY_TOKEN_S           S"b03f5f7f11d50a3a"
#define MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_PUBLIC_KEY_TOKEN_T       TEXT("b03f5f7f11d50a3a")
#define MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_PUBLIC_KEY_TOKEN_IL            (b0 3f 5f 7f 11 d5 0a 3a )
#define MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_CULTURE                        neutral
#define MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_CULTURE_A                     "neutral"
#define MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_CULTURE_W                    L"neutral"
#define MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_CULTURE_S                    S"neutral"
#define MICROSOFT_VISUALC_VSCODEPROVIDER_ASSEMBLY_CULTURE_T                TEXT("neutral")
#define MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_IDENTITY_DEF                 Microsoft.VisualStudio.VCCodeModel,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_IDENTITY_DEF_A              "Microsoft.VisualStudio.VCCodeModel,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_IDENTITY_DEF_W             L"Microsoft.VisualStudio.VCCodeModel,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_IDENTITY_DEF_S             S"Microsoft.VisualStudio.VCCodeModel,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_IDENTITY_DEF_T         TEXT("Microsoft.VisualStudio.VCCodeModel,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_IDENTITY_REF                 Microsoft.VisualStudio.VCCodeModel,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_IDENTITY_REF_A              "Microsoft.VisualStudio.VCCodeModel,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_IDENTITY_REF_W             L"Microsoft.VisualStudio.VCCodeModel,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_IDENTITY_REF_S             S"Microsoft.VisualStudio.VCCodeModel,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_IDENTITY_REF_T         TEXT("Microsoft.VisualStudio.VCCodeModel,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_IDENTITY_FRIEND_REF          Microsoft.VisualStudio.VCCodeModel,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_IDENTITY_FRIEND_REF_A       "Microsoft.VisualStudio.VCCodeModel,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_IDENTITY_FRIEND_REF_W      L"Microsoft.VisualStudio.VCCodeModel,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_IDENTITY_FRIEND_REF_S      S"Microsoft.VisualStudio.VCCodeModel,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_IDENTITY_FRIEND_REF_T  TEXT("Microsoft.VisualStudio.VCCodeModel,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_IDENTITY_EXACT_REF           Microsoft.VisualStudio.VCCodeModel,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_IDENTITY_EXACT_REF_A        "Microsoft.VisualStudio.VCCodeModel,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_IDENTITY_EXACT_REF_W       L"Microsoft.VisualStudio.VCCodeModel,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_IDENTITY_EXACT_REF_S       S"Microsoft.VisualStudio.VCCodeModel,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_IDENTITY_EXACT_REF_T   TEXT("Microsoft.VisualStudio.VCCodeModel,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_NAME                         Microsoft.VisualStudio.VCCodeModel
#define MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_NAME_A                      "Microsoft.VisualStudio.VCCodeModel"
#define MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_NAME_W                     L"Microsoft.VisualStudio.VCCodeModel"
#define MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_NAME_S                     S"Microsoft.VisualStudio.VCCodeModel"
#define MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_NAME_T                 TEXT("Microsoft.VisualStudio.VCCodeModel")
#define MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_VERSION                      8.0.1200.0
#define MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_VERSION_A                   "8.0.1200.0"
#define MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_VERSION_W                  L"8.0.1200.0"
#define MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_VERSION_S                  S"8.0.1200.0"
#define MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_VERSION_T              TEXT("8.0.1200.0")
#define MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_VERSION_IL                    8:0:1200:0
#define MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_PUBLIC_KEY                   002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_PUBLIC_KEY_A                "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_PUBLIC_KEY_W               L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_PUBLIC_KEY_S               S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_PUBLIC_KEY_T           TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_PUBLIC_KEY_IL                (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_PUBLIC_KEY_TOKEN             b03f5f7f11d50a3a
#define MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_PUBLIC_KEY_TOKEN_A          "b03f5f7f11d50a3a"
#define MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_PUBLIC_KEY_TOKEN_W         L"b03f5f7f11d50a3a"
#define MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_PUBLIC_KEY_TOKEN_S         S"b03f5f7f11d50a3a"
#define MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_PUBLIC_KEY_TOKEN_T     TEXT("b03f5f7f11d50a3a")
#define MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_PUBLIC_KEY_TOKEN_IL          (b0 3f 5f 7f 11 d5 0a 3a )
#define MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_CULTURE                      neutral
#define MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_CULTURE_A                   "neutral"
#define MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_CULTURE_W                  L"neutral"
#define MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_CULTURE_S                  S"neutral"
#define MICROSOFT_VISUALSTUDIO_VCCODEMODEL_ASSEMBLY_CULTURE_T              TEXT("neutral")
#define MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_IDENTITY_DEF                   Microsoft.VisualStudio.VCProject,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_IDENTITY_DEF_A                "Microsoft.VisualStudio.VCProject,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_IDENTITY_DEF_W               L"Microsoft.VisualStudio.VCProject,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_IDENTITY_DEF_S               S"Microsoft.VisualStudio.VCProject,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_IDENTITY_DEF_T           TEXT("Microsoft.VisualStudio.VCProject,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_IDENTITY_REF                   Microsoft.VisualStudio.VCProject,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_IDENTITY_REF_A                "Microsoft.VisualStudio.VCProject,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_IDENTITY_REF_W               L"Microsoft.VisualStudio.VCProject,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_IDENTITY_REF_S               S"Microsoft.VisualStudio.VCProject,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_IDENTITY_REF_T           TEXT("Microsoft.VisualStudio.VCProject,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_IDENTITY_FRIEND_REF            Microsoft.VisualStudio.VCProject,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_IDENTITY_FRIEND_REF_A         "Microsoft.VisualStudio.VCProject,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_IDENTITY_FRIEND_REF_W        L"Microsoft.VisualStudio.VCProject,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_IDENTITY_FRIEND_REF_S        S"Microsoft.VisualStudio.VCProject,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_IDENTITY_FRIEND_REF_T    TEXT("Microsoft.VisualStudio.VCProject,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_IDENTITY_EXACT_REF             Microsoft.VisualStudio.VCProject,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_IDENTITY_EXACT_REF_A          "Microsoft.VisualStudio.VCProject,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_IDENTITY_EXACT_REF_W         L"Microsoft.VisualStudio.VCProject,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_IDENTITY_EXACT_REF_S         S"Microsoft.VisualStudio.VCProject,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_IDENTITY_EXACT_REF_T     TEXT("Microsoft.VisualStudio.VCProject,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_NAME                           Microsoft.VisualStudio.VCProject
#define MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_NAME_A                        "Microsoft.VisualStudio.VCProject"
#define MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_NAME_W                       L"Microsoft.VisualStudio.VCProject"
#define MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_NAME_S                       S"Microsoft.VisualStudio.VCProject"
#define MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_NAME_T                   TEXT("Microsoft.VisualStudio.VCProject")
#define MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_VERSION                        8.0.1200.0
#define MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_VERSION_A                     "8.0.1200.0"
#define MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_VERSION_W                    L"8.0.1200.0"
#define MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_VERSION_S                    S"8.0.1200.0"
#define MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_VERSION_T                TEXT("8.0.1200.0")
#define MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_VERSION_IL                      8:0:1200:0
#define MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_PUBLIC_KEY                     002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_PUBLIC_KEY_A                  "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_PUBLIC_KEY_W                 L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_PUBLIC_KEY_S                 S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_PUBLIC_KEY_T             TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_PUBLIC_KEY_IL                  (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_PUBLIC_KEY_TOKEN               b03f5f7f11d50a3a
#define MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_PUBLIC_KEY_TOKEN_A            "b03f5f7f11d50a3a"
#define MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_PUBLIC_KEY_TOKEN_W           L"b03f5f7f11d50a3a"
#define MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_PUBLIC_KEY_TOKEN_S           S"b03f5f7f11d50a3a"
#define MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_PUBLIC_KEY_TOKEN_T       TEXT("b03f5f7f11d50a3a")
#define MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_PUBLIC_KEY_TOKEN_IL            (b0 3f 5f 7f 11 d5 0a 3a )
#define MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_CULTURE                        neutral
#define MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_CULTURE_A                     "neutral"
#define MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_CULTURE_W                    L"neutral"
#define MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_CULTURE_S                    S"neutral"
#define MICROSOFT_VISUALSTUDIO_VCPROJECT_ASSEMBLY_CULTURE_T                TEXT("neutral")
#define MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_IDENTITY_DEF             Microsoft.VisualStudio.VCProjectEngine,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_IDENTITY_DEF_A          "Microsoft.VisualStudio.VCProjectEngine,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_IDENTITY_DEF_W         L"Microsoft.VisualStudio.VCProjectEngine,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_IDENTITY_DEF_S         S"Microsoft.VisualStudio.VCProjectEngine,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_IDENTITY_DEF_T     TEXT("Microsoft.VisualStudio.VCProjectEngine,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_IDENTITY_REF             Microsoft.VisualStudio.VCProjectEngine,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_IDENTITY_REF_A          "Microsoft.VisualStudio.VCProjectEngine,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_IDENTITY_REF_W         L"Microsoft.VisualStudio.VCProjectEngine,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_IDENTITY_REF_S         S"Microsoft.VisualStudio.VCProjectEngine,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_IDENTITY_REF_T     TEXT("Microsoft.VisualStudio.VCProjectEngine,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_IDENTITY_FRIEND_REF          Microsoft.VisualStudio.VCProjectEngine,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_IDENTITY_FRIEND_REF_A       "Microsoft.VisualStudio.VCProjectEngine,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_IDENTITY_FRIEND_REF_W      L"Microsoft.VisualStudio.VCProjectEngine,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_IDENTITY_FRIEND_REF_S      S"Microsoft.VisualStudio.VCProjectEngine,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_IDENTITY_FRIEND_REF_T  TEXT("Microsoft.VisualStudio.VCProjectEngine,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_IDENTITY_EXACT_REF          Microsoft.VisualStudio.VCProjectEngine,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_IDENTITY_EXACT_REF_A       "Microsoft.VisualStudio.VCProjectEngine,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_IDENTITY_EXACT_REF_W      L"Microsoft.VisualStudio.VCProjectEngine,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_IDENTITY_EXACT_REF_S      S"Microsoft.VisualStudio.VCProjectEngine,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_IDENTITY_EXACT_REF_T  TEXT("Microsoft.VisualStudio.VCProjectEngine,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_NAME                     Microsoft.VisualStudio.VCProjectEngine
#define MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_NAME_A                  "Microsoft.VisualStudio.VCProjectEngine"
#define MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_NAME_W                 L"Microsoft.VisualStudio.VCProjectEngine"
#define MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_NAME_S                 S"Microsoft.VisualStudio.VCProjectEngine"
#define MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_NAME_T             TEXT("Microsoft.VisualStudio.VCProjectEngine")
#define MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_VERSION                  8.0.1200.0
#define MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_VERSION_A               "8.0.1200.0"
#define MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_VERSION_W              L"8.0.1200.0"
#define MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_VERSION_S              S"8.0.1200.0"
#define MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_VERSION_T          TEXT("8.0.1200.0")
#define MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_VERSION_IL                8:0:1200:0
#define MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_PUBLIC_KEY               002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_PUBLIC_KEY_A            "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_PUBLIC_KEY_W           L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_PUBLIC_KEY_S           S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_PUBLIC_KEY_T       TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_PUBLIC_KEY_IL            (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_PUBLIC_KEY_TOKEN          b03f5f7f11d50a3a
#define MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_PUBLIC_KEY_TOKEN_A       "b03f5f7f11d50a3a"
#define MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_PUBLIC_KEY_TOKEN_W      L"b03f5f7f11d50a3a"
#define MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_PUBLIC_KEY_TOKEN_S      S"b03f5f7f11d50a3a"
#define MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_PUBLIC_KEY_TOKEN_T  TEXT("b03f5f7f11d50a3a")
#define MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_PUBLIC_KEY_TOKEN_IL       (b0 3f 5f 7f 11 d5 0a 3a )
#define MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_CULTURE                  neutral
#define MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_CULTURE_A               "neutral"
#define MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_CULTURE_W              L"neutral"
#define MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_CULTURE_S              S"neutral"
#define MICROSOFT_VISUALSTUDIO_VCPROJECTENGINE_ASSEMBLY_CULTURE_T          TEXT("neutral")
#define MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_IDENTITY_DEF                      Microsoft.VisualStudio.VSHelp,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_IDENTITY_DEF_A                   "Microsoft.VisualStudio.VSHelp,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_IDENTITY_DEF_W                  L"Microsoft.VisualStudio.VSHelp,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_IDENTITY_DEF_S                  S"Microsoft.VisualStudio.VSHelp,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_IDENTITY_DEF_T              TEXT("Microsoft.VisualStudio.VSHelp,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_IDENTITY_REF                      Microsoft.VisualStudio.VSHelp,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_IDENTITY_REF_A                   "Microsoft.VisualStudio.VSHelp,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_IDENTITY_REF_W                  L"Microsoft.VisualStudio.VSHelp,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_IDENTITY_REF_S                  S"Microsoft.VisualStudio.VSHelp,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_IDENTITY_REF_T              TEXT("Microsoft.VisualStudio.VSHelp,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_IDENTITY_FRIEND_REF               Microsoft.VisualStudio.VSHelp,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_IDENTITY_FRIEND_REF_A            "Microsoft.VisualStudio.VSHelp,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_IDENTITY_FRIEND_REF_W           L"Microsoft.VisualStudio.VSHelp,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_IDENTITY_FRIEND_REF_S           S"Microsoft.VisualStudio.VSHelp,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_IDENTITY_FRIEND_REF_T       TEXT("Microsoft.VisualStudio.VSHelp,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_IDENTITY_EXACT_REF                Microsoft.VisualStudio.VSHelp,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_IDENTITY_EXACT_REF_A             "Microsoft.VisualStudio.VSHelp,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_IDENTITY_EXACT_REF_W            L"Microsoft.VisualStudio.VSHelp,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_IDENTITY_EXACT_REF_S            S"Microsoft.VisualStudio.VSHelp,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_IDENTITY_EXACT_REF_T        TEXT("Microsoft.VisualStudio.VSHelp,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_NAME                              Microsoft.VisualStudio.VSHelp
#define MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_NAME_A                           "Microsoft.VisualStudio.VSHelp"
#define MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_NAME_W                          L"Microsoft.VisualStudio.VSHelp"
#define MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_NAME_S                          S"Microsoft.VisualStudio.VSHelp"
#define MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_NAME_T                      TEXT("Microsoft.VisualStudio.VSHelp")
#define MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_VERSION                           7.0.3300.0
#define MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_VERSION_A                        "7.0.3300.0"
#define MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_VERSION_W                       L"7.0.3300.0"
#define MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_VERSION_S                       S"7.0.3300.0"
#define MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_VERSION_T                   TEXT("7.0.3300.0")
#define MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_VERSION_IL                         7:0:3300:0
#define MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_PUBLIC_KEY                        002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_PUBLIC_KEY_A                     "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_PUBLIC_KEY_W                    L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_PUBLIC_KEY_S                    S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_PUBLIC_KEY_T                TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_PUBLIC_KEY_IL                     (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_PUBLIC_KEY_TOKEN                  b03f5f7f11d50a3a
#define MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_PUBLIC_KEY_TOKEN_A               "b03f5f7f11d50a3a"
#define MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_PUBLIC_KEY_TOKEN_W              L"b03f5f7f11d50a3a"
#define MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_PUBLIC_KEY_TOKEN_S              S"b03f5f7f11d50a3a"
#define MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_PUBLIC_KEY_TOKEN_T          TEXT("b03f5f7f11d50a3a")
#define MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_PUBLIC_KEY_TOKEN_IL               (b0 3f 5f 7f 11 d5 0a 3a )
#define MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_CULTURE                           neutral
#define MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_CULTURE_A                        "neutral"
#define MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_CULTURE_W                       L"neutral"
#define MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_CULTURE_S                       S"neutral"
#define MICROSOFT_VISUALSTUDIO_VSHELP_ASSEMBLY_CULTURE_T                   TEXT("neutral")
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_DEF                                      Microsoft.Vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_DEF_A                                   "Microsoft.Vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_DEF_W                                  L"Microsoft.Vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_DEF_S                                  S"Microsoft.Vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_DEF_T                              TEXT("Microsoft.Vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_REF                                      Microsoft.Vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_REF_A                                   "Microsoft.Vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_REF_W                                  L"Microsoft.Vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_REF_S                                  S"Microsoft.Vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_REF_T                              TEXT("Microsoft.Vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_FRIEND_REF                               Microsoft.Vsa,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_FRIEND_REF_A                            "Microsoft.Vsa,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_FRIEND_REF_W                           L"Microsoft.Vsa,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_FRIEND_REF_S                           S"Microsoft.Vsa,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_FRIEND_REF_T                       TEXT("Microsoft.Vsa,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_EXACT_REF                                Microsoft.Vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_EXACT_REF_A                             "Microsoft.Vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_EXACT_REF_W                            L"Microsoft.Vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_EXACT_REF_S                            S"Microsoft.Vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSA_ASSEMBLY_IDENTITY_EXACT_REF_T                        TEXT("Microsoft.Vsa,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VSA_ASSEMBLY_NAME                                              Microsoft.Vsa
#define MICROSOFT_VSA_ASSEMBLY_NAME_A                                           "Microsoft.Vsa"
#define MICROSOFT_VSA_ASSEMBLY_NAME_W                                          L"Microsoft.Vsa"
#define MICROSOFT_VSA_ASSEMBLY_NAME_S                                          S"Microsoft.Vsa"
#define MICROSOFT_VSA_ASSEMBLY_NAME_T                                      TEXT("Microsoft.Vsa")
#define MICROSOFT_VSA_ASSEMBLY_VERSION                                           8.0.1200.0
#define MICROSOFT_VSA_ASSEMBLY_VERSION_A                                        "8.0.1200.0"
#define MICROSOFT_VSA_ASSEMBLY_VERSION_W                                       L"8.0.1200.0"
#define MICROSOFT_VSA_ASSEMBLY_VERSION_S                                       S"8.0.1200.0"
#define MICROSOFT_VSA_ASSEMBLY_VERSION_T                                   TEXT("8.0.1200.0")
#define MICROSOFT_VSA_ASSEMBLY_VERSION_IL                                         8:0:1200:0
#define MICROSOFT_VSA_ASSEMBLY_PUBLIC_KEY                                        002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define MICROSOFT_VSA_ASSEMBLY_PUBLIC_KEY_A                                     "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VSA_ASSEMBLY_PUBLIC_KEY_W                                    L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VSA_ASSEMBLY_PUBLIC_KEY_S                                    S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VSA_ASSEMBLY_PUBLIC_KEY_T                                TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define MICROSOFT_VSA_ASSEMBLY_PUBLIC_KEY_IL                                     (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define MICROSOFT_VSA_ASSEMBLY_PUBLIC_KEY_TOKEN                                  b03f5f7f11d50a3a
#define MICROSOFT_VSA_ASSEMBLY_PUBLIC_KEY_TOKEN_A                               "b03f5f7f11d50a3a"
#define MICROSOFT_VSA_ASSEMBLY_PUBLIC_KEY_TOKEN_W                              L"b03f5f7f11d50a3a"
#define MICROSOFT_VSA_ASSEMBLY_PUBLIC_KEY_TOKEN_S                              S"b03f5f7f11d50a3a"
#define MICROSOFT_VSA_ASSEMBLY_PUBLIC_KEY_TOKEN_T                          TEXT("b03f5f7f11d50a3a")
#define MICROSOFT_VSA_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                               (b0 3f 5f 7f 11 d5 0a 3a )
#define MICROSOFT_VSA_ASSEMBLY_CULTURE                                           neutral
#define MICROSOFT_VSA_ASSEMBLY_CULTURE_A                                        "neutral"
#define MICROSOFT_VSA_ASSEMBLY_CULTURE_W                                       L"neutral"
#define MICROSOFT_VSA_ASSEMBLY_CULTURE_S                                       S"neutral"
#define MICROSOFT_VSA_ASSEMBLY_CULTURE_T                                   TEXT("neutral")
#define MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_DEF                                    Microsoft_VsaVb,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_DEF_A                                 "Microsoft_VsaVb,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_DEF_W                                L"Microsoft_VsaVb,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_DEF_S                                S"Microsoft_VsaVb,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_DEF_T                            TEXT("Microsoft_VsaVb,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_REF                                    Microsoft_VsaVb,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_REF_A                                 "Microsoft_VsaVb,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_REF_W                                L"Microsoft_VsaVb,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_REF_S                                S"Microsoft_VsaVb,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_REF_T                            TEXT("Microsoft_VsaVb,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_FRIEND_REF                             Microsoft_VsaVb,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_FRIEND_REF_A                          "Microsoft_VsaVb,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_FRIEND_REF_W                         L"Microsoft_VsaVb,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_FRIEND_REF_S                         S"Microsoft_VsaVb,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_FRIEND_REF_T                     TEXT("Microsoft_VsaVb,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_EXACT_REF                              Microsoft_VsaVb,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_EXACT_REF_A                           "Microsoft_VsaVb,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_EXACT_REF_W                          L"Microsoft_VsaVb,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_EXACT_REF_S                          S"Microsoft_VsaVb,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MICROSOFT_VSAVB_ASSEMBLY_IDENTITY_EXACT_REF_T                      TEXT("Microsoft_VsaVb,version=8.0.1200.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MICROSOFT_VSAVB_ASSEMBLY_NAME                                            Microsoft_VsaVb
#define MICROSOFT_VSAVB_ASSEMBLY_NAME_A                                         "Microsoft_VsaVb"
#define MICROSOFT_VSAVB_ASSEMBLY_NAME_W                                        L"Microsoft_VsaVb"
#define MICROSOFT_VSAVB_ASSEMBLY_NAME_S                                        S"Microsoft_VsaVb"
#define MICROSOFT_VSAVB_ASSEMBLY_NAME_T                                    TEXT("Microsoft_VsaVb")
#define MICROSOFT_VSAVB_ASSEMBLY_VERSION                                         8.0.1200.0
#define MICROSOFT_VSAVB_ASSEMBLY_VERSION_A                                      "8.0.1200.0"
#define MICROSOFT_VSAVB_ASSEMBLY_VERSION_W                                     L"8.0.1200.0"
#define MICROSOFT_VSAVB_ASSEMBLY_VERSION_S                                     S"8.0.1200.0"
#define MICROSOFT_VSAVB_ASSEMBLY_VERSION_T                                 TEXT("8.0.1200.0")
#define MICROSOFT_VSAVB_ASSEMBLY_VERSION_IL                                       8:0:1200:0
#define MICROSOFT_VSAVB_ASSEMBLY_PUBLIC_KEY                                      002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define MICROSOFT_VSAVB_ASSEMBLY_PUBLIC_KEY_A                                   "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VSAVB_ASSEMBLY_PUBLIC_KEY_W                                  L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VSAVB_ASSEMBLY_PUBLIC_KEY_S                                  S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MICROSOFT_VSAVB_ASSEMBLY_PUBLIC_KEY_T                              TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define MICROSOFT_VSAVB_ASSEMBLY_PUBLIC_KEY_IL                                   (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define MICROSOFT_VSAVB_ASSEMBLY_PUBLIC_KEY_TOKEN                                b03f5f7f11d50a3a
#define MICROSOFT_VSAVB_ASSEMBLY_PUBLIC_KEY_TOKEN_A                             "b03f5f7f11d50a3a"
#define MICROSOFT_VSAVB_ASSEMBLY_PUBLIC_KEY_TOKEN_W                            L"b03f5f7f11d50a3a"
#define MICROSOFT_VSAVB_ASSEMBLY_PUBLIC_KEY_TOKEN_S                            S"b03f5f7f11d50a3a"
#define MICROSOFT_VSAVB_ASSEMBLY_PUBLIC_KEY_TOKEN_T                        TEXT("b03f5f7f11d50a3a")
#define MICROSOFT_VSAVB_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                             (b0 3f 5f 7f 11 d5 0a 3a )
#define MICROSOFT_VSAVB_ASSEMBLY_CULTURE                                         neutral
#define MICROSOFT_VSAVB_ASSEMBLY_CULTURE_A                                      "neutral"
#define MICROSOFT_VSAVB_ASSEMBLY_CULTURE_W                                     L"neutral"
#define MICROSOFT_VSAVB_ASSEMBLY_CULTURE_S                                     S"neutral"
#define MICROSOFT_VSAVB_ASSEMBLY_CULTURE_T                                 TEXT("neutral")
#define MSBUILDENGINE_ASSEMBLY_IDENTITY_DEF                                      MSBuildEngine,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MSBUILDENGINE_ASSEMBLY_IDENTITY_DEF_A                                   "MSBuildEngine,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSBUILDENGINE_ASSEMBLY_IDENTITY_DEF_W                                  L"MSBuildEngine,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSBUILDENGINE_ASSEMBLY_IDENTITY_DEF_S                                  S"MSBuildEngine,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSBUILDENGINE_ASSEMBLY_IDENTITY_DEF_T                              TEXT("MSBuildEngine,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MSBUILDENGINE_ASSEMBLY_IDENTITY_REF                                      MSBuildEngine,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MSBUILDENGINE_ASSEMBLY_IDENTITY_REF_A                                   "MSBuildEngine,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSBUILDENGINE_ASSEMBLY_IDENTITY_REF_W                                  L"MSBuildEngine,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSBUILDENGINE_ASSEMBLY_IDENTITY_REF_S                                  S"MSBuildEngine,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSBUILDENGINE_ASSEMBLY_IDENTITY_REF_T                              TEXT("MSBuildEngine,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MSBUILDENGINE_ASSEMBLY_IDENTITY_FRIEND_REF                               MSBuildEngine,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MSBUILDENGINE_ASSEMBLY_IDENTITY_FRIEND_REF_A                            "MSBuildEngine,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSBUILDENGINE_ASSEMBLY_IDENTITY_FRIEND_REF_W                           L"MSBuildEngine,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSBUILDENGINE_ASSEMBLY_IDENTITY_FRIEND_REF_S                           S"MSBuildEngine,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSBUILDENGINE_ASSEMBLY_IDENTITY_FRIEND_REF_T                       TEXT("MSBuildEngine,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MSBUILDENGINE_ASSEMBLY_IDENTITY_EXACT_REF                                MSBuildEngine,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MSBUILDENGINE_ASSEMBLY_IDENTITY_EXACT_REF_A                             "MSBuildEngine,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSBUILDENGINE_ASSEMBLY_IDENTITY_EXACT_REF_W                            L"MSBuildEngine,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSBUILDENGINE_ASSEMBLY_IDENTITY_EXACT_REF_S                            S"MSBuildEngine,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSBUILDENGINE_ASSEMBLY_IDENTITY_EXACT_REF_T                        TEXT("MSBuildEngine,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MSBUILDENGINE_ASSEMBLY_NAME                                              MSBuildEngine
#define MSBUILDENGINE_ASSEMBLY_NAME_A                                           "MSBuildEngine"
#define MSBUILDENGINE_ASSEMBLY_NAME_W                                          L"MSBuildEngine"
#define MSBUILDENGINE_ASSEMBLY_NAME_S                                          S"MSBuildEngine"
#define MSBUILDENGINE_ASSEMBLY_NAME_T                                      TEXT("MSBuildEngine")
#define MSBUILDENGINE_ASSEMBLY_VERSION                                           2.0.3600.0
#define MSBUILDENGINE_ASSEMBLY_VERSION_A                                        "2.0.3600.0"
#define MSBUILDENGINE_ASSEMBLY_VERSION_W                                       L"2.0.3600.0"
#define MSBUILDENGINE_ASSEMBLY_VERSION_S                                       S"2.0.3600.0"
#define MSBUILDENGINE_ASSEMBLY_VERSION_T                                   TEXT("2.0.3600.0")
#define MSBUILDENGINE_ASSEMBLY_VERSION_IL                                         2:0:3600:0
#define MSBUILDENGINE_ASSEMBLY_PUBLIC_KEY                                        002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define MSBUILDENGINE_ASSEMBLY_PUBLIC_KEY_A                                     "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MSBUILDENGINE_ASSEMBLY_PUBLIC_KEY_W                                    L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MSBUILDENGINE_ASSEMBLY_PUBLIC_KEY_S                                    S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MSBUILDENGINE_ASSEMBLY_PUBLIC_KEY_T                                TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define MSBUILDENGINE_ASSEMBLY_PUBLIC_KEY_IL                                     (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define MSBUILDENGINE_ASSEMBLY_PUBLIC_KEY_TOKEN                                  b03f5f7f11d50a3a
#define MSBUILDENGINE_ASSEMBLY_PUBLIC_KEY_TOKEN_A                               "b03f5f7f11d50a3a"
#define MSBUILDENGINE_ASSEMBLY_PUBLIC_KEY_TOKEN_W                              L"b03f5f7f11d50a3a"
#define MSBUILDENGINE_ASSEMBLY_PUBLIC_KEY_TOKEN_S                              S"b03f5f7f11d50a3a"
#define MSBUILDENGINE_ASSEMBLY_PUBLIC_KEY_TOKEN_T                          TEXT("b03f5f7f11d50a3a")
#define MSBUILDENGINE_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                               (b0 3f 5f 7f 11 d5 0a 3a )
#define MSBUILDENGINE_ASSEMBLY_CULTURE                                           neutral
#define MSBUILDENGINE_ASSEMBLY_CULTURE_A                                        "neutral"
#define MSBUILDENGINE_ASSEMBLY_CULTURE_W                                       L"neutral"
#define MSBUILDENGINE_ASSEMBLY_CULTURE_S                                       S"neutral"
#define MSBUILDENGINE_ASSEMBLY_CULTURE_T                                   TEXT("neutral")
#define MSBUILDFRAMEWORK_ASSEMBLY_IDENTITY_DEF                                   MSBuildFramework,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MSBUILDFRAMEWORK_ASSEMBLY_IDENTITY_DEF_A                                "MSBuildFramework,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSBUILDFRAMEWORK_ASSEMBLY_IDENTITY_DEF_W                               L"MSBuildFramework,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSBUILDFRAMEWORK_ASSEMBLY_IDENTITY_DEF_S                               S"MSBuildFramework,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSBUILDFRAMEWORK_ASSEMBLY_IDENTITY_DEF_T                           TEXT("MSBuildFramework,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MSBUILDFRAMEWORK_ASSEMBLY_IDENTITY_REF                                   MSBuildFramework,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MSBUILDFRAMEWORK_ASSEMBLY_IDENTITY_REF_A                                "MSBuildFramework,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSBUILDFRAMEWORK_ASSEMBLY_IDENTITY_REF_W                               L"MSBuildFramework,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSBUILDFRAMEWORK_ASSEMBLY_IDENTITY_REF_S                               S"MSBuildFramework,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSBUILDFRAMEWORK_ASSEMBLY_IDENTITY_REF_T                           TEXT("MSBuildFramework,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MSBUILDFRAMEWORK_ASSEMBLY_IDENTITY_FRIEND_REF                            MSBuildFramework,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MSBUILDFRAMEWORK_ASSEMBLY_IDENTITY_FRIEND_REF_A                         "MSBuildFramework,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSBUILDFRAMEWORK_ASSEMBLY_IDENTITY_FRIEND_REF_W                        L"MSBuildFramework,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSBUILDFRAMEWORK_ASSEMBLY_IDENTITY_FRIEND_REF_S                        S"MSBuildFramework,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSBUILDFRAMEWORK_ASSEMBLY_IDENTITY_FRIEND_REF_T                    TEXT("MSBuildFramework,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MSBUILDFRAMEWORK_ASSEMBLY_IDENTITY_EXACT_REF                             MSBuildFramework,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MSBUILDFRAMEWORK_ASSEMBLY_IDENTITY_EXACT_REF_A                          "MSBuildFramework,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSBUILDFRAMEWORK_ASSEMBLY_IDENTITY_EXACT_REF_W                         L"MSBuildFramework,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSBUILDFRAMEWORK_ASSEMBLY_IDENTITY_EXACT_REF_S                         S"MSBuildFramework,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSBUILDFRAMEWORK_ASSEMBLY_IDENTITY_EXACT_REF_T                     TEXT("MSBuildFramework,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MSBUILDFRAMEWORK_ASSEMBLY_NAME                                           MSBuildFramework
#define MSBUILDFRAMEWORK_ASSEMBLY_NAME_A                                        "MSBuildFramework"
#define MSBUILDFRAMEWORK_ASSEMBLY_NAME_W                                       L"MSBuildFramework"
#define MSBUILDFRAMEWORK_ASSEMBLY_NAME_S                                       S"MSBuildFramework"
#define MSBUILDFRAMEWORK_ASSEMBLY_NAME_T                                   TEXT("MSBuildFramework")
#define MSBUILDFRAMEWORK_ASSEMBLY_VERSION                                        2.0.3600.0
#define MSBUILDFRAMEWORK_ASSEMBLY_VERSION_A                                     "2.0.3600.0"
#define MSBUILDFRAMEWORK_ASSEMBLY_VERSION_W                                    L"2.0.3600.0"
#define MSBUILDFRAMEWORK_ASSEMBLY_VERSION_S                                    S"2.0.3600.0"
#define MSBUILDFRAMEWORK_ASSEMBLY_VERSION_T                                TEXT("2.0.3600.0")
#define MSBUILDFRAMEWORK_ASSEMBLY_VERSION_IL                                      2:0:3600:0
#define MSBUILDFRAMEWORK_ASSEMBLY_PUBLIC_KEY                                     002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define MSBUILDFRAMEWORK_ASSEMBLY_PUBLIC_KEY_A                                  "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MSBUILDFRAMEWORK_ASSEMBLY_PUBLIC_KEY_W                                 L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MSBUILDFRAMEWORK_ASSEMBLY_PUBLIC_KEY_S                                 S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MSBUILDFRAMEWORK_ASSEMBLY_PUBLIC_KEY_T                             TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define MSBUILDFRAMEWORK_ASSEMBLY_PUBLIC_KEY_IL                                  (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define MSBUILDFRAMEWORK_ASSEMBLY_PUBLIC_KEY_TOKEN                               b03f5f7f11d50a3a
#define MSBUILDFRAMEWORK_ASSEMBLY_PUBLIC_KEY_TOKEN_A                            "b03f5f7f11d50a3a"
#define MSBUILDFRAMEWORK_ASSEMBLY_PUBLIC_KEY_TOKEN_W                           L"b03f5f7f11d50a3a"
#define MSBUILDFRAMEWORK_ASSEMBLY_PUBLIC_KEY_TOKEN_S                           S"b03f5f7f11d50a3a"
#define MSBUILDFRAMEWORK_ASSEMBLY_PUBLIC_KEY_TOKEN_T                       TEXT("b03f5f7f11d50a3a")
#define MSBUILDFRAMEWORK_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                            (b0 3f 5f 7f 11 d5 0a 3a )
#define MSBUILDFRAMEWORK_ASSEMBLY_CULTURE                                        neutral
#define MSBUILDFRAMEWORK_ASSEMBLY_CULTURE_A                                     "neutral"
#define MSBUILDFRAMEWORK_ASSEMBLY_CULTURE_W                                    L"neutral"
#define MSBUILDFRAMEWORK_ASSEMBLY_CULTURE_S                                    S"neutral"
#define MSBUILDFRAMEWORK_ASSEMBLY_CULTURE_T                                TEXT("neutral")
#define MSBUILDTASKS_ASSEMBLY_IDENTITY_DEF                                       MSBuildTasks,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MSBUILDTASKS_ASSEMBLY_IDENTITY_DEF_A                                    "MSBuildTasks,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSBUILDTASKS_ASSEMBLY_IDENTITY_DEF_W                                   L"MSBuildTasks,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSBUILDTASKS_ASSEMBLY_IDENTITY_DEF_S                                   S"MSBuildTasks,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSBUILDTASKS_ASSEMBLY_IDENTITY_DEF_T                               TEXT("MSBuildTasks,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MSBUILDTASKS_ASSEMBLY_IDENTITY_REF                                       MSBuildTasks,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MSBUILDTASKS_ASSEMBLY_IDENTITY_REF_A                                    "MSBuildTasks,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSBUILDTASKS_ASSEMBLY_IDENTITY_REF_W                                   L"MSBuildTasks,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSBUILDTASKS_ASSEMBLY_IDENTITY_REF_S                                   S"MSBuildTasks,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSBUILDTASKS_ASSEMBLY_IDENTITY_REF_T                               TEXT("MSBuildTasks,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MSBUILDTASKS_ASSEMBLY_IDENTITY_FRIEND_REF                                MSBuildTasks,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MSBUILDTASKS_ASSEMBLY_IDENTITY_FRIEND_REF_A                             "MSBuildTasks,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSBUILDTASKS_ASSEMBLY_IDENTITY_FRIEND_REF_W                            L"MSBuildTasks,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSBUILDTASKS_ASSEMBLY_IDENTITY_FRIEND_REF_S                            S"MSBuildTasks,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSBUILDTASKS_ASSEMBLY_IDENTITY_FRIEND_REF_T                        TEXT("MSBuildTasks,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MSBUILDTASKS_ASSEMBLY_IDENTITY_EXACT_REF                                 MSBuildTasks,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MSBUILDTASKS_ASSEMBLY_IDENTITY_EXACT_REF_A                              "MSBuildTasks,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSBUILDTASKS_ASSEMBLY_IDENTITY_EXACT_REF_W                             L"MSBuildTasks,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSBUILDTASKS_ASSEMBLY_IDENTITY_EXACT_REF_S                             S"MSBuildTasks,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSBUILDTASKS_ASSEMBLY_IDENTITY_EXACT_REF_T                         TEXT("MSBuildTasks,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MSBUILDTASKS_ASSEMBLY_NAME                                               MSBuildTasks
#define MSBUILDTASKS_ASSEMBLY_NAME_A                                            "MSBuildTasks"
#define MSBUILDTASKS_ASSEMBLY_NAME_W                                           L"MSBuildTasks"
#define MSBUILDTASKS_ASSEMBLY_NAME_S                                           S"MSBuildTasks"
#define MSBUILDTASKS_ASSEMBLY_NAME_T                                       TEXT("MSBuildTasks")
#define MSBUILDTASKS_ASSEMBLY_VERSION                                            2.0.3600.0
#define MSBUILDTASKS_ASSEMBLY_VERSION_A                                         "2.0.3600.0"
#define MSBUILDTASKS_ASSEMBLY_VERSION_W                                        L"2.0.3600.0"
#define MSBUILDTASKS_ASSEMBLY_VERSION_S                                        S"2.0.3600.0"
#define MSBUILDTASKS_ASSEMBLY_VERSION_T                                    TEXT("2.0.3600.0")
#define MSBUILDTASKS_ASSEMBLY_VERSION_IL                                          2:0:3600:0
#define MSBUILDTASKS_ASSEMBLY_PUBLIC_KEY                                         002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define MSBUILDTASKS_ASSEMBLY_PUBLIC_KEY_A                                      "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MSBUILDTASKS_ASSEMBLY_PUBLIC_KEY_W                                     L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MSBUILDTASKS_ASSEMBLY_PUBLIC_KEY_S                                     S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MSBUILDTASKS_ASSEMBLY_PUBLIC_KEY_T                                 TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define MSBUILDTASKS_ASSEMBLY_PUBLIC_KEY_IL                                      (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define MSBUILDTASKS_ASSEMBLY_PUBLIC_KEY_TOKEN                                   b03f5f7f11d50a3a
#define MSBUILDTASKS_ASSEMBLY_PUBLIC_KEY_TOKEN_A                                "b03f5f7f11d50a3a"
#define MSBUILDTASKS_ASSEMBLY_PUBLIC_KEY_TOKEN_W                               L"b03f5f7f11d50a3a"
#define MSBUILDTASKS_ASSEMBLY_PUBLIC_KEY_TOKEN_S                               S"b03f5f7f11d50a3a"
#define MSBUILDTASKS_ASSEMBLY_PUBLIC_KEY_TOKEN_T                           TEXT("b03f5f7f11d50a3a")
#define MSBUILDTASKS_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                                (b0 3f 5f 7f 11 d5 0a 3a )
#define MSBUILDTASKS_ASSEMBLY_CULTURE                                            neutral
#define MSBUILDTASKS_ASSEMBLY_CULTURE_A                                         "neutral"
#define MSBUILDTASKS_ASSEMBLY_CULTURE_W                                        L"neutral"
#define MSBUILDTASKS_ASSEMBLY_CULTURE_S                                        S"neutral"
#define MSBUILDTASKS_ASSEMBLY_CULTURE_T                                    TEXT("neutral")
#define MSBUILDUTILITIES_ASSEMBLY_IDENTITY_DEF                                   MSBuildUtilities,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MSBUILDUTILITIES_ASSEMBLY_IDENTITY_DEF_A                                "MSBuildUtilities,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSBUILDUTILITIES_ASSEMBLY_IDENTITY_DEF_W                               L"MSBuildUtilities,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSBUILDUTILITIES_ASSEMBLY_IDENTITY_DEF_S                               S"MSBuildUtilities,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSBUILDUTILITIES_ASSEMBLY_IDENTITY_DEF_T                           TEXT("MSBuildUtilities,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MSBUILDUTILITIES_ASSEMBLY_IDENTITY_REF                                   MSBuildUtilities,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MSBUILDUTILITIES_ASSEMBLY_IDENTITY_REF_A                                "MSBuildUtilities,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSBUILDUTILITIES_ASSEMBLY_IDENTITY_REF_W                               L"MSBuildUtilities,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSBUILDUTILITIES_ASSEMBLY_IDENTITY_REF_S                               S"MSBuildUtilities,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSBUILDUTILITIES_ASSEMBLY_IDENTITY_REF_T                           TEXT("MSBuildUtilities,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MSBUILDUTILITIES_ASSEMBLY_IDENTITY_FRIEND_REF                            MSBuildUtilities,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MSBUILDUTILITIES_ASSEMBLY_IDENTITY_FRIEND_REF_A                         "MSBuildUtilities,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSBUILDUTILITIES_ASSEMBLY_IDENTITY_FRIEND_REF_W                        L"MSBuildUtilities,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSBUILDUTILITIES_ASSEMBLY_IDENTITY_FRIEND_REF_S                        S"MSBuildUtilities,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSBUILDUTILITIES_ASSEMBLY_IDENTITY_FRIEND_REF_T                    TEXT("MSBuildUtilities,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MSBUILDUTILITIES_ASSEMBLY_IDENTITY_EXACT_REF                             MSBuildUtilities,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MSBUILDUTILITIES_ASSEMBLY_IDENTITY_EXACT_REF_A                          "MSBuildUtilities,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSBUILDUTILITIES_ASSEMBLY_IDENTITY_EXACT_REF_W                         L"MSBuildUtilities,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSBUILDUTILITIES_ASSEMBLY_IDENTITY_EXACT_REF_S                         S"MSBuildUtilities,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSBUILDUTILITIES_ASSEMBLY_IDENTITY_EXACT_REF_T                     TEXT("MSBuildUtilities,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MSBUILDUTILITIES_ASSEMBLY_NAME                                           MSBuildUtilities
#define MSBUILDUTILITIES_ASSEMBLY_NAME_A                                        "MSBuildUtilities"
#define MSBUILDUTILITIES_ASSEMBLY_NAME_W                                       L"MSBuildUtilities"
#define MSBUILDUTILITIES_ASSEMBLY_NAME_S                                       S"MSBuildUtilities"
#define MSBUILDUTILITIES_ASSEMBLY_NAME_T                                   TEXT("MSBuildUtilities")
#define MSBUILDUTILITIES_ASSEMBLY_VERSION                                        2.0.3600.0
#define MSBUILDUTILITIES_ASSEMBLY_VERSION_A                                     "2.0.3600.0"
#define MSBUILDUTILITIES_ASSEMBLY_VERSION_W                                    L"2.0.3600.0"
#define MSBUILDUTILITIES_ASSEMBLY_VERSION_S                                    S"2.0.3600.0"
#define MSBUILDUTILITIES_ASSEMBLY_VERSION_T                                TEXT("2.0.3600.0")
#define MSBUILDUTILITIES_ASSEMBLY_VERSION_IL                                      2:0:3600:0
#define MSBUILDUTILITIES_ASSEMBLY_PUBLIC_KEY                                     002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define MSBUILDUTILITIES_ASSEMBLY_PUBLIC_KEY_A                                  "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MSBUILDUTILITIES_ASSEMBLY_PUBLIC_KEY_W                                 L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MSBUILDUTILITIES_ASSEMBLY_PUBLIC_KEY_S                                 S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MSBUILDUTILITIES_ASSEMBLY_PUBLIC_KEY_T                             TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define MSBUILDUTILITIES_ASSEMBLY_PUBLIC_KEY_IL                                  (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define MSBUILDUTILITIES_ASSEMBLY_PUBLIC_KEY_TOKEN                               b03f5f7f11d50a3a
#define MSBUILDUTILITIES_ASSEMBLY_PUBLIC_KEY_TOKEN_A                            "b03f5f7f11d50a3a"
#define MSBUILDUTILITIES_ASSEMBLY_PUBLIC_KEY_TOKEN_W                           L"b03f5f7f11d50a3a"
#define MSBUILDUTILITIES_ASSEMBLY_PUBLIC_KEY_TOKEN_S                           S"b03f5f7f11d50a3a"
#define MSBUILDUTILITIES_ASSEMBLY_PUBLIC_KEY_TOKEN_T                       TEXT("b03f5f7f11d50a3a")
#define MSBUILDUTILITIES_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                            (b0 3f 5f 7f 11 d5 0a 3a )
#define MSBUILDUTILITIES_ASSEMBLY_CULTURE                                        neutral
#define MSBUILDUTILITIES_ASSEMBLY_CULTURE_A                                     "neutral"
#define MSBUILDUTILITIES_ASSEMBLY_CULTURE_W                                    L"neutral"
#define MSBUILDUTILITIES_ASSEMBLY_CULTURE_S                                    S"neutral"
#define MSBUILDUTILITIES_ASSEMBLY_CULTURE_T                                TEXT("neutral")
#define MSCORCFG_ASSEMBLY_IDENTITY_DEF                                           mscorcfg,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MSCORCFG_ASSEMBLY_IDENTITY_DEF_A                                        "mscorcfg,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSCORCFG_ASSEMBLY_IDENTITY_DEF_W                                       L"mscorcfg,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSCORCFG_ASSEMBLY_IDENTITY_DEF_S                                       S"mscorcfg,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSCORCFG_ASSEMBLY_IDENTITY_DEF_T                                   TEXT("mscorcfg,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MSCORCFG_ASSEMBLY_IDENTITY_REF                                           mscorcfg,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MSCORCFG_ASSEMBLY_IDENTITY_REF_A                                        "mscorcfg,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSCORCFG_ASSEMBLY_IDENTITY_REF_W                                       L"mscorcfg,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSCORCFG_ASSEMBLY_IDENTITY_REF_S                                       S"mscorcfg,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSCORCFG_ASSEMBLY_IDENTITY_REF_T                                   TEXT("mscorcfg,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MSCORCFG_ASSEMBLY_IDENTITY_FRIEND_REF                                    mscorcfg,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MSCORCFG_ASSEMBLY_IDENTITY_FRIEND_REF_A                                 "mscorcfg,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSCORCFG_ASSEMBLY_IDENTITY_FRIEND_REF_W                                L"mscorcfg,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSCORCFG_ASSEMBLY_IDENTITY_FRIEND_REF_S                                S"mscorcfg,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSCORCFG_ASSEMBLY_IDENTITY_FRIEND_REF_T                            TEXT("mscorcfg,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MSCORCFG_ASSEMBLY_IDENTITY_EXACT_REF                                     mscorcfg,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MSCORCFG_ASSEMBLY_IDENTITY_EXACT_REF_A                                  "mscorcfg,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSCORCFG_ASSEMBLY_IDENTITY_EXACT_REF_W                                 L"mscorcfg,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSCORCFG_ASSEMBLY_IDENTITY_EXACT_REF_S                                 S"mscorcfg,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSCORCFG_ASSEMBLY_IDENTITY_EXACT_REF_T                             TEXT("mscorcfg,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MSCORCFG_ASSEMBLY_NAME                                                   mscorcfg
#define MSCORCFG_ASSEMBLY_NAME_A                                                "mscorcfg"
#define MSCORCFG_ASSEMBLY_NAME_W                                               L"mscorcfg"
#define MSCORCFG_ASSEMBLY_NAME_S                                               S"mscorcfg"
#define MSCORCFG_ASSEMBLY_NAME_T                                           TEXT("mscorcfg")
#define MSCORCFG_ASSEMBLY_VERSION                                                2.0.3600.0
#define MSCORCFG_ASSEMBLY_VERSION_A                                             "2.0.3600.0"
#define MSCORCFG_ASSEMBLY_VERSION_W                                            L"2.0.3600.0"
#define MSCORCFG_ASSEMBLY_VERSION_S                                            S"2.0.3600.0"
#define MSCORCFG_ASSEMBLY_VERSION_T                                        TEXT("2.0.3600.0")
#define MSCORCFG_ASSEMBLY_VERSION_IL                                              2:0:3600:0
#define MSCORCFG_ASSEMBLY_PUBLIC_KEY                                             002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define MSCORCFG_ASSEMBLY_PUBLIC_KEY_A                                          "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MSCORCFG_ASSEMBLY_PUBLIC_KEY_W                                         L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MSCORCFG_ASSEMBLY_PUBLIC_KEY_S                                         S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MSCORCFG_ASSEMBLY_PUBLIC_KEY_T                                     TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define MSCORCFG_ASSEMBLY_PUBLIC_KEY_IL                                          (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define MSCORCFG_ASSEMBLY_PUBLIC_KEY_TOKEN                                       b03f5f7f11d50a3a
#define MSCORCFG_ASSEMBLY_PUBLIC_KEY_TOKEN_A                                    "b03f5f7f11d50a3a"
#define MSCORCFG_ASSEMBLY_PUBLIC_KEY_TOKEN_W                                   L"b03f5f7f11d50a3a"
#define MSCORCFG_ASSEMBLY_PUBLIC_KEY_TOKEN_S                                   S"b03f5f7f11d50a3a"
#define MSCORCFG_ASSEMBLY_PUBLIC_KEY_TOKEN_T                               TEXT("b03f5f7f11d50a3a")
#define MSCORCFG_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                                    (b0 3f 5f 7f 11 d5 0a 3a )
#define MSCORCFG_ASSEMBLY_CULTURE                                                neutral
#define MSCORCFG_ASSEMBLY_CULTURE_A                                             "neutral"
#define MSCORCFG_ASSEMBLY_CULTURE_W                                            L"neutral"
#define MSCORCFG_ASSEMBLY_CULTURE_S                                            S"neutral"
#define MSCORCFG_ASSEMBLY_CULTURE_T                                        TEXT("neutral")
#define MSCORLIB_ASSEMBLY_IDENTITY_DEF                                           mscorlib,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define MSCORLIB_ASSEMBLY_IDENTITY_DEF_A                                        "mscorlib,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MSCORLIB_ASSEMBLY_IDENTITY_DEF_W                                       L"mscorlib,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MSCORLIB_ASSEMBLY_IDENTITY_DEF_S                                       S"mscorlib,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MSCORLIB_ASSEMBLY_IDENTITY_DEF_T                                   TEXT("mscorlib,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define MSCORLIB_ASSEMBLY_IDENTITY_REF                                           mscorlib,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define MSCORLIB_ASSEMBLY_IDENTITY_REF_A                                        "mscorlib,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MSCORLIB_ASSEMBLY_IDENTITY_REF_W                                       L"mscorlib,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MSCORLIB_ASSEMBLY_IDENTITY_REF_S                                       S"mscorlib,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MSCORLIB_ASSEMBLY_IDENTITY_REF_T                                   TEXT("mscorlib,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define MSCORLIB_ASSEMBLY_IDENTITY_FRIEND_REF                                    mscorlib,publicKeyToken=b77a5c561934e089,culture=neutral
#define MSCORLIB_ASSEMBLY_IDENTITY_FRIEND_REF_A                                 "mscorlib,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MSCORLIB_ASSEMBLY_IDENTITY_FRIEND_REF_W                                L"mscorlib,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MSCORLIB_ASSEMBLY_IDENTITY_FRIEND_REF_S                                S"mscorlib,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MSCORLIB_ASSEMBLY_IDENTITY_FRIEND_REF_T                            TEXT("mscorlib,publicKeyToken=b77a5c561934e089,culture=neutral")
#define MSCORLIB_ASSEMBLY_IDENTITY_EXACT_REF                                     mscorlib,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define MSCORLIB_ASSEMBLY_IDENTITY_EXACT_REF_A                                  "mscorlib,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MSCORLIB_ASSEMBLY_IDENTITY_EXACT_REF_W                                 L"mscorlib,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MSCORLIB_ASSEMBLY_IDENTITY_EXACT_REF_S                                 S"mscorlib,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define MSCORLIB_ASSEMBLY_IDENTITY_EXACT_REF_T                             TEXT("mscorlib,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define MSCORLIB_ASSEMBLY_NAME                                                   mscorlib
#define MSCORLIB_ASSEMBLY_NAME_A                                                "mscorlib"
#define MSCORLIB_ASSEMBLY_NAME_W                                               L"mscorlib"
#define MSCORLIB_ASSEMBLY_NAME_S                                               S"mscorlib"
#define MSCORLIB_ASSEMBLY_NAME_T                                           TEXT("mscorlib")
#define MSCORLIB_ASSEMBLY_VERSION                                                2.0.3600.0
#define MSCORLIB_ASSEMBLY_VERSION_A                                             "2.0.3600.0"
#define MSCORLIB_ASSEMBLY_VERSION_W                                            L"2.0.3600.0"
#define MSCORLIB_ASSEMBLY_VERSION_S                                            S"2.0.3600.0"
#define MSCORLIB_ASSEMBLY_VERSION_T                                        TEXT("2.0.3600.0")
#define MSCORLIB_ASSEMBLY_VERSION_IL                                              2:0:3600:0
#define MSCORLIB_ASSEMBLY_PUBLIC_KEY                                             00000000000000000400000000000000
#define MSCORLIB_ASSEMBLY_PUBLIC_KEY_A                                          "00000000000000000400000000000000"
#define MSCORLIB_ASSEMBLY_PUBLIC_KEY_W                                         L"00000000000000000400000000000000"
#define MSCORLIB_ASSEMBLY_PUBLIC_KEY_S                                         S"00000000000000000400000000000000"
#define MSCORLIB_ASSEMBLY_PUBLIC_KEY_T                                     TEXT("00000000000000000400000000000000")
#define MSCORLIB_ASSEMBLY_PUBLIC_KEY_IL                                          (00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00 )
#define MSCORLIB_ASSEMBLY_PUBLIC_KEY_TOKEN                                       b77a5c561934e089
#define MSCORLIB_ASSEMBLY_PUBLIC_KEY_TOKEN_A                                    "b77a5c561934e089"
#define MSCORLIB_ASSEMBLY_PUBLIC_KEY_TOKEN_W                                   L"b77a5c561934e089"
#define MSCORLIB_ASSEMBLY_PUBLIC_KEY_TOKEN_S                                   S"b77a5c561934e089"
#define MSCORLIB_ASSEMBLY_PUBLIC_KEY_TOKEN_T                               TEXT("b77a5c561934e089")
#define MSCORLIB_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                                    (b7 7a 5c 56 19 34 e0 89 )
#define MSCORLIB_ASSEMBLY_CULTURE                                                neutral
#define MSCORLIB_ASSEMBLY_CULTURE_A                                             "neutral"
#define MSCORLIB_ASSEMBLY_CULTURE_W                                            L"neutral"
#define MSCORLIB_ASSEMBLY_CULTURE_S                                            S"neutral"
#define MSCORLIB_ASSEMBLY_CULTURE_T                                        TEXT("neutral")
#define MSDATASRC_ASSEMBLY_IDENTITY_DEF                                          MSDATASRC,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MSDATASRC_ASSEMBLY_IDENTITY_DEF_A                                       "MSDATASRC,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSDATASRC_ASSEMBLY_IDENTITY_DEF_W                                      L"MSDATASRC,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSDATASRC_ASSEMBLY_IDENTITY_DEF_S                                      S"MSDATASRC,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSDATASRC_ASSEMBLY_IDENTITY_DEF_T                                  TEXT("MSDATASRC,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MSDATASRC_ASSEMBLY_IDENTITY_REF                                          MSDATASRC,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MSDATASRC_ASSEMBLY_IDENTITY_REF_A                                       "MSDATASRC,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSDATASRC_ASSEMBLY_IDENTITY_REF_W                                      L"MSDATASRC,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSDATASRC_ASSEMBLY_IDENTITY_REF_S                                      S"MSDATASRC,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSDATASRC_ASSEMBLY_IDENTITY_REF_T                                  TEXT("MSDATASRC,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MSDATASRC_ASSEMBLY_IDENTITY_FRIEND_REF                                   MSDATASRC,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MSDATASRC_ASSEMBLY_IDENTITY_FRIEND_REF_A                                "MSDATASRC,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSDATASRC_ASSEMBLY_IDENTITY_FRIEND_REF_W                               L"MSDATASRC,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSDATASRC_ASSEMBLY_IDENTITY_FRIEND_REF_S                               S"MSDATASRC,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSDATASRC_ASSEMBLY_IDENTITY_FRIEND_REF_T                           TEXT("MSDATASRC,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MSDATASRC_ASSEMBLY_IDENTITY_EXACT_REF                                    MSDATASRC,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MSDATASRC_ASSEMBLY_IDENTITY_EXACT_REF_A                                 "MSDATASRC,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSDATASRC_ASSEMBLY_IDENTITY_EXACT_REF_W                                L"MSDATASRC,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSDATASRC_ASSEMBLY_IDENTITY_EXACT_REF_S                                S"MSDATASRC,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSDATASRC_ASSEMBLY_IDENTITY_EXACT_REF_T                            TEXT("MSDATASRC,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MSDATASRC_ASSEMBLY_NAME                                                  MSDATASRC
#define MSDATASRC_ASSEMBLY_NAME_A                                               "MSDATASRC"
#define MSDATASRC_ASSEMBLY_NAME_W                                              L"MSDATASRC"
#define MSDATASRC_ASSEMBLY_NAME_S                                              S"MSDATASRC"
#define MSDATASRC_ASSEMBLY_NAME_T                                          TEXT("MSDATASRC")
#define MSDATASRC_ASSEMBLY_VERSION                                               7.0.3300.0
#define MSDATASRC_ASSEMBLY_VERSION_A                                            "7.0.3300.0"
#define MSDATASRC_ASSEMBLY_VERSION_W                                           L"7.0.3300.0"
#define MSDATASRC_ASSEMBLY_VERSION_S                                           S"7.0.3300.0"
#define MSDATASRC_ASSEMBLY_VERSION_T                                       TEXT("7.0.3300.0")
#define MSDATASRC_ASSEMBLY_VERSION_IL                                             7:0:3300:0
#define MSDATASRC_ASSEMBLY_PUBLIC_KEY                                            002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define MSDATASRC_ASSEMBLY_PUBLIC_KEY_A                                         "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MSDATASRC_ASSEMBLY_PUBLIC_KEY_W                                        L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MSDATASRC_ASSEMBLY_PUBLIC_KEY_S                                        S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MSDATASRC_ASSEMBLY_PUBLIC_KEY_T                                    TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define MSDATASRC_ASSEMBLY_PUBLIC_KEY_IL                                         (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define MSDATASRC_ASSEMBLY_PUBLIC_KEY_TOKEN                                      b03f5f7f11d50a3a
#define MSDATASRC_ASSEMBLY_PUBLIC_KEY_TOKEN_A                                   "b03f5f7f11d50a3a"
#define MSDATASRC_ASSEMBLY_PUBLIC_KEY_TOKEN_W                                  L"b03f5f7f11d50a3a"
#define MSDATASRC_ASSEMBLY_PUBLIC_KEY_TOKEN_S                                  S"b03f5f7f11d50a3a"
#define MSDATASRC_ASSEMBLY_PUBLIC_KEY_TOKEN_T                              TEXT("b03f5f7f11d50a3a")
#define MSDATASRC_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                                   (b0 3f 5f 7f 11 d5 0a 3a )
#define MSDATASRC_ASSEMBLY_CULTURE                                               neutral
#define MSDATASRC_ASSEMBLY_CULTURE_A                                            "neutral"
#define MSDATASRC_ASSEMBLY_CULTURE_W                                           L"neutral"
#define MSDATASRC_ASSEMBLY_CULTURE_S                                           S"neutral"
#define MSDATASRC_ASSEMBLY_CULTURE_T                                       TEXT("neutral")
#define MSDDSLMP_ASSEMBLY_IDENTITY_DEF                                           MSDDSLMP,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MSDDSLMP_ASSEMBLY_IDENTITY_DEF_A                                        "MSDDSLMP,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSDDSLMP_ASSEMBLY_IDENTITY_DEF_W                                       L"MSDDSLMP,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSDDSLMP_ASSEMBLY_IDENTITY_DEF_S                                       S"MSDDSLMP,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSDDSLMP_ASSEMBLY_IDENTITY_DEF_T                                   TEXT("MSDDSLMP,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MSDDSLMP_ASSEMBLY_IDENTITY_REF                                           MSDDSLMP,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MSDDSLMP_ASSEMBLY_IDENTITY_REF_A                                        "MSDDSLMP,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSDDSLMP_ASSEMBLY_IDENTITY_REF_W                                       L"MSDDSLMP,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSDDSLMP_ASSEMBLY_IDENTITY_REF_S                                       S"MSDDSLMP,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSDDSLMP_ASSEMBLY_IDENTITY_REF_T                                   TEXT("MSDDSLMP,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MSDDSLMP_ASSEMBLY_IDENTITY_FRIEND_REF                                    MSDDSLMP,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MSDDSLMP_ASSEMBLY_IDENTITY_FRIEND_REF_A                                 "MSDDSLMP,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSDDSLMP_ASSEMBLY_IDENTITY_FRIEND_REF_W                                L"MSDDSLMP,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSDDSLMP_ASSEMBLY_IDENTITY_FRIEND_REF_S                                S"MSDDSLMP,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSDDSLMP_ASSEMBLY_IDENTITY_FRIEND_REF_T                            TEXT("MSDDSLMP,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MSDDSLMP_ASSEMBLY_IDENTITY_EXACT_REF                                     MSDDSLMP,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MSDDSLMP_ASSEMBLY_IDENTITY_EXACT_REF_A                                  "MSDDSLMP,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSDDSLMP_ASSEMBLY_IDENTITY_EXACT_REF_W                                 L"MSDDSLMP,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSDDSLMP_ASSEMBLY_IDENTITY_EXACT_REF_S                                 S"MSDDSLMP,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSDDSLMP_ASSEMBLY_IDENTITY_EXACT_REF_T                             TEXT("MSDDSLMP,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MSDDSLMP_ASSEMBLY_NAME                                                   MSDDSLMP
#define MSDDSLMP_ASSEMBLY_NAME_A                                                "MSDDSLMP"
#define MSDDSLMP_ASSEMBLY_NAME_W                                               L"MSDDSLMP"
#define MSDDSLMP_ASSEMBLY_NAME_S                                               S"MSDDSLMP"
#define MSDDSLMP_ASSEMBLY_NAME_T                                           TEXT("MSDDSLMP")
#define MSDDSLMP_ASSEMBLY_VERSION                                                7.0.3300.0
#define MSDDSLMP_ASSEMBLY_VERSION_A                                             "7.0.3300.0"
#define MSDDSLMP_ASSEMBLY_VERSION_W                                            L"7.0.3300.0"
#define MSDDSLMP_ASSEMBLY_VERSION_S                                            S"7.0.3300.0"
#define MSDDSLMP_ASSEMBLY_VERSION_T                                        TEXT("7.0.3300.0")
#define MSDDSLMP_ASSEMBLY_VERSION_IL                                              7:0:3300:0
#define MSDDSLMP_ASSEMBLY_PUBLIC_KEY                                             002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define MSDDSLMP_ASSEMBLY_PUBLIC_KEY_A                                          "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MSDDSLMP_ASSEMBLY_PUBLIC_KEY_W                                         L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MSDDSLMP_ASSEMBLY_PUBLIC_KEY_S                                         S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MSDDSLMP_ASSEMBLY_PUBLIC_KEY_T                                     TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define MSDDSLMP_ASSEMBLY_PUBLIC_KEY_IL                                          (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define MSDDSLMP_ASSEMBLY_PUBLIC_KEY_TOKEN                                       b03f5f7f11d50a3a
#define MSDDSLMP_ASSEMBLY_PUBLIC_KEY_TOKEN_A                                    "b03f5f7f11d50a3a"
#define MSDDSLMP_ASSEMBLY_PUBLIC_KEY_TOKEN_W                                   L"b03f5f7f11d50a3a"
#define MSDDSLMP_ASSEMBLY_PUBLIC_KEY_TOKEN_S                                   S"b03f5f7f11d50a3a"
#define MSDDSLMP_ASSEMBLY_PUBLIC_KEY_TOKEN_T                               TEXT("b03f5f7f11d50a3a")
#define MSDDSLMP_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                                    (b0 3f 5f 7f 11 d5 0a 3a )
#define MSDDSLMP_ASSEMBLY_CULTURE                                                neutral
#define MSDDSLMP_ASSEMBLY_CULTURE_A                                             "neutral"
#define MSDDSLMP_ASSEMBLY_CULTURE_W                                            L"neutral"
#define MSDDSLMP_ASSEMBLY_CULTURE_S                                            S"neutral"
#define MSDDSLMP_ASSEMBLY_CULTURE_T                                        TEXT("neutral")
#define MSDDSP_ASSEMBLY_IDENTITY_DEF                                             MSDDSP,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MSDDSP_ASSEMBLY_IDENTITY_DEF_A                                          "MSDDSP,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSDDSP_ASSEMBLY_IDENTITY_DEF_W                                         L"MSDDSP,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSDDSP_ASSEMBLY_IDENTITY_DEF_S                                         S"MSDDSP,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSDDSP_ASSEMBLY_IDENTITY_DEF_T                                     TEXT("MSDDSP,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MSDDSP_ASSEMBLY_IDENTITY_REF                                             MSDDSP,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MSDDSP_ASSEMBLY_IDENTITY_REF_A                                          "MSDDSP,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSDDSP_ASSEMBLY_IDENTITY_REF_W                                         L"MSDDSP,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSDDSP_ASSEMBLY_IDENTITY_REF_S                                         S"MSDDSP,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSDDSP_ASSEMBLY_IDENTITY_REF_T                                     TEXT("MSDDSP,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MSDDSP_ASSEMBLY_IDENTITY_FRIEND_REF                                      MSDDSP,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MSDDSP_ASSEMBLY_IDENTITY_FRIEND_REF_A                                   "MSDDSP,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSDDSP_ASSEMBLY_IDENTITY_FRIEND_REF_W                                  L"MSDDSP,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSDDSP_ASSEMBLY_IDENTITY_FRIEND_REF_S                                  S"MSDDSP,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSDDSP_ASSEMBLY_IDENTITY_FRIEND_REF_T                              TEXT("MSDDSP,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MSDDSP_ASSEMBLY_IDENTITY_EXACT_REF                                       MSDDSP,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define MSDDSP_ASSEMBLY_IDENTITY_EXACT_REF_A                                    "MSDDSP,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSDDSP_ASSEMBLY_IDENTITY_EXACT_REF_W                                   L"MSDDSP,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSDDSP_ASSEMBLY_IDENTITY_EXACT_REF_S                                   S"MSDDSP,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define MSDDSP_ASSEMBLY_IDENTITY_EXACT_REF_T                               TEXT("MSDDSP,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define MSDDSP_ASSEMBLY_NAME                                                     MSDDSP
#define MSDDSP_ASSEMBLY_NAME_A                                                  "MSDDSP"
#define MSDDSP_ASSEMBLY_NAME_W                                                 L"MSDDSP"
#define MSDDSP_ASSEMBLY_NAME_S                                                 S"MSDDSP"
#define MSDDSP_ASSEMBLY_NAME_T                                             TEXT("MSDDSP")
#define MSDDSP_ASSEMBLY_VERSION                                                  7.0.3300.0
#define MSDDSP_ASSEMBLY_VERSION_A                                               "7.0.3300.0"
#define MSDDSP_ASSEMBLY_VERSION_W                                              L"7.0.3300.0"
#define MSDDSP_ASSEMBLY_VERSION_S                                              S"7.0.3300.0"
#define MSDDSP_ASSEMBLY_VERSION_T                                          TEXT("7.0.3300.0")
#define MSDDSP_ASSEMBLY_VERSION_IL                                                7:0:3300:0
#define MSDDSP_ASSEMBLY_PUBLIC_KEY                                               002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define MSDDSP_ASSEMBLY_PUBLIC_KEY_A                                            "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MSDDSP_ASSEMBLY_PUBLIC_KEY_W                                           L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MSDDSP_ASSEMBLY_PUBLIC_KEY_S                                           S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define MSDDSP_ASSEMBLY_PUBLIC_KEY_T                                       TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define MSDDSP_ASSEMBLY_PUBLIC_KEY_IL                                            (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define MSDDSP_ASSEMBLY_PUBLIC_KEY_TOKEN                                         b03f5f7f11d50a3a
#define MSDDSP_ASSEMBLY_PUBLIC_KEY_TOKEN_A                                      "b03f5f7f11d50a3a"
#define MSDDSP_ASSEMBLY_PUBLIC_KEY_TOKEN_W                                     L"b03f5f7f11d50a3a"
#define MSDDSP_ASSEMBLY_PUBLIC_KEY_TOKEN_S                                     S"b03f5f7f11d50a3a"
#define MSDDSP_ASSEMBLY_PUBLIC_KEY_TOKEN_T                                 TEXT("b03f5f7f11d50a3a")
#define MSDDSP_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                                      (b0 3f 5f 7f 11 d5 0a 3a )
#define MSDDSP_ASSEMBLY_CULTURE                                                  neutral
#define MSDDSP_ASSEMBLY_CULTURE_A                                               "neutral"
#define MSDDSP_ASSEMBLY_CULTURE_W                                              L"neutral"
#define MSDDSP_ASSEMBLY_CULTURE_S                                              S"neutral"
#define MSDDSP_ASSEMBLY_CULTURE_T                                          TEXT("neutral")
#define OFFICE_ASSEMBLY_IDENTITY_DEF                                             Office,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define OFFICE_ASSEMBLY_IDENTITY_DEF_A                                          "Office,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define OFFICE_ASSEMBLY_IDENTITY_DEF_W                                         L"Office,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define OFFICE_ASSEMBLY_IDENTITY_DEF_S                                         S"Office,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define OFFICE_ASSEMBLY_IDENTITY_DEF_T                                     TEXT("Office,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define OFFICE_ASSEMBLY_IDENTITY_REF                                             Office,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define OFFICE_ASSEMBLY_IDENTITY_REF_A                                          "Office,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define OFFICE_ASSEMBLY_IDENTITY_REF_W                                         L"Office,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define OFFICE_ASSEMBLY_IDENTITY_REF_S                                         S"Office,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define OFFICE_ASSEMBLY_IDENTITY_REF_T                                     TEXT("Office,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define OFFICE_ASSEMBLY_IDENTITY_FRIEND_REF                                      Office,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define OFFICE_ASSEMBLY_IDENTITY_FRIEND_REF_A                                   "Office,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define OFFICE_ASSEMBLY_IDENTITY_FRIEND_REF_W                                  L"Office,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define OFFICE_ASSEMBLY_IDENTITY_FRIEND_REF_S                                  S"Office,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define OFFICE_ASSEMBLY_IDENTITY_FRIEND_REF_T                              TEXT("Office,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define OFFICE_ASSEMBLY_IDENTITY_EXACT_REF                                       Office,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define OFFICE_ASSEMBLY_IDENTITY_EXACT_REF_A                                    "Office,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define OFFICE_ASSEMBLY_IDENTITY_EXACT_REF_W                                   L"Office,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define OFFICE_ASSEMBLY_IDENTITY_EXACT_REF_S                                   S"Office,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define OFFICE_ASSEMBLY_IDENTITY_EXACT_REF_T                               TEXT("Office,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define OFFICE_ASSEMBLY_NAME                                                     Office
#define OFFICE_ASSEMBLY_NAME_A                                                  "Office"
#define OFFICE_ASSEMBLY_NAME_W                                                 L"Office"
#define OFFICE_ASSEMBLY_NAME_S                                                 S"Office"
#define OFFICE_ASSEMBLY_NAME_T                                             TEXT("Office")
#define OFFICE_ASSEMBLY_VERSION                                                  7.0.3300.0
#define OFFICE_ASSEMBLY_VERSION_A                                               "7.0.3300.0"
#define OFFICE_ASSEMBLY_VERSION_W                                              L"7.0.3300.0"
#define OFFICE_ASSEMBLY_VERSION_S                                              S"7.0.3300.0"
#define OFFICE_ASSEMBLY_VERSION_T                                          TEXT("7.0.3300.0")
#define OFFICE_ASSEMBLY_VERSION_IL                                                7:0:3300:0
#define OFFICE_ASSEMBLY_PUBLIC_KEY                                               002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define OFFICE_ASSEMBLY_PUBLIC_KEY_A                                            "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define OFFICE_ASSEMBLY_PUBLIC_KEY_W                                           L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define OFFICE_ASSEMBLY_PUBLIC_KEY_S                                           S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define OFFICE_ASSEMBLY_PUBLIC_KEY_T                                       TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define OFFICE_ASSEMBLY_PUBLIC_KEY_IL                                            (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define OFFICE_ASSEMBLY_PUBLIC_KEY_TOKEN                                         b03f5f7f11d50a3a
#define OFFICE_ASSEMBLY_PUBLIC_KEY_TOKEN_A                                      "b03f5f7f11d50a3a"
#define OFFICE_ASSEMBLY_PUBLIC_KEY_TOKEN_W                                     L"b03f5f7f11d50a3a"
#define OFFICE_ASSEMBLY_PUBLIC_KEY_TOKEN_S                                     S"b03f5f7f11d50a3a"
#define OFFICE_ASSEMBLY_PUBLIC_KEY_TOKEN_T                                 TEXT("b03f5f7f11d50a3a")
#define OFFICE_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                                      (b0 3f 5f 7f 11 d5 0a 3a )
#define OFFICE_ASSEMBLY_CULTURE                                                  neutral
#define OFFICE_ASSEMBLY_CULTURE_A                                               "neutral"
#define OFFICE_ASSEMBLY_CULTURE_W                                              L"neutral"
#define OFFICE_ASSEMBLY_CULTURE_S                                              S"neutral"
#define OFFICE_ASSEMBLY_CULTURE_T                                          TEXT("neutral")
#define STDOLE_ASSEMBLY_IDENTITY_DEF                                             stdole,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define STDOLE_ASSEMBLY_IDENTITY_DEF_A                                          "stdole,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define STDOLE_ASSEMBLY_IDENTITY_DEF_W                                         L"stdole,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define STDOLE_ASSEMBLY_IDENTITY_DEF_S                                         S"stdole,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define STDOLE_ASSEMBLY_IDENTITY_DEF_T                                     TEXT("stdole,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define STDOLE_ASSEMBLY_IDENTITY_REF                                             stdole,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define STDOLE_ASSEMBLY_IDENTITY_REF_A                                          "stdole,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define STDOLE_ASSEMBLY_IDENTITY_REF_W                                         L"stdole,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define STDOLE_ASSEMBLY_IDENTITY_REF_S                                         S"stdole,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define STDOLE_ASSEMBLY_IDENTITY_REF_T                                     TEXT("stdole,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define STDOLE_ASSEMBLY_IDENTITY_FRIEND_REF                                      stdole,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define STDOLE_ASSEMBLY_IDENTITY_FRIEND_REF_A                                   "stdole,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define STDOLE_ASSEMBLY_IDENTITY_FRIEND_REF_W                                  L"stdole,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define STDOLE_ASSEMBLY_IDENTITY_FRIEND_REF_S                                  S"stdole,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define STDOLE_ASSEMBLY_IDENTITY_FRIEND_REF_T                              TEXT("stdole,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define STDOLE_ASSEMBLY_IDENTITY_EXACT_REF                                       stdole,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define STDOLE_ASSEMBLY_IDENTITY_EXACT_REF_A                                    "stdole,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define STDOLE_ASSEMBLY_IDENTITY_EXACT_REF_W                                   L"stdole,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define STDOLE_ASSEMBLY_IDENTITY_EXACT_REF_S                                   S"stdole,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define STDOLE_ASSEMBLY_IDENTITY_EXACT_REF_T                               TEXT("stdole,version=7.0.3300.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define STDOLE_ASSEMBLY_NAME                                                     stdole
#define STDOLE_ASSEMBLY_NAME_A                                                  "stdole"
#define STDOLE_ASSEMBLY_NAME_W                                                 L"stdole"
#define STDOLE_ASSEMBLY_NAME_S                                                 S"stdole"
#define STDOLE_ASSEMBLY_NAME_T                                             TEXT("stdole")
#define STDOLE_ASSEMBLY_VERSION                                                  7.0.3300.0
#define STDOLE_ASSEMBLY_VERSION_A                                               "7.0.3300.0"
#define STDOLE_ASSEMBLY_VERSION_W                                              L"7.0.3300.0"
#define STDOLE_ASSEMBLY_VERSION_S                                              S"7.0.3300.0"
#define STDOLE_ASSEMBLY_VERSION_T                                          TEXT("7.0.3300.0")
#define STDOLE_ASSEMBLY_VERSION_IL                                                7:0:3300:0
#define STDOLE_ASSEMBLY_PUBLIC_KEY                                               002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define STDOLE_ASSEMBLY_PUBLIC_KEY_A                                            "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define STDOLE_ASSEMBLY_PUBLIC_KEY_W                                           L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define STDOLE_ASSEMBLY_PUBLIC_KEY_S                                           S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define STDOLE_ASSEMBLY_PUBLIC_KEY_T                                       TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define STDOLE_ASSEMBLY_PUBLIC_KEY_IL                                            (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define STDOLE_ASSEMBLY_PUBLIC_KEY_TOKEN                                         b03f5f7f11d50a3a
#define STDOLE_ASSEMBLY_PUBLIC_KEY_TOKEN_A                                      "b03f5f7f11d50a3a"
#define STDOLE_ASSEMBLY_PUBLIC_KEY_TOKEN_W                                     L"b03f5f7f11d50a3a"
#define STDOLE_ASSEMBLY_PUBLIC_KEY_TOKEN_S                                     S"b03f5f7f11d50a3a"
#define STDOLE_ASSEMBLY_PUBLIC_KEY_TOKEN_T                                 TEXT("b03f5f7f11d50a3a")
#define STDOLE_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                                      (b0 3f 5f 7f 11 d5 0a 3a )
#define STDOLE_ASSEMBLY_CULTURE                                                  neutral
#define STDOLE_ASSEMBLY_CULTURE_A                                               "neutral"
#define STDOLE_ASSEMBLY_CULTURE_W                                              L"neutral"
#define STDOLE_ASSEMBLY_CULTURE_S                                              S"neutral"
#define STDOLE_ASSEMBLY_CULTURE_T                                          TEXT("neutral")
#define SYSGLOBL_ASSEMBLY_IDENTITY_DEF                                           sysglobl,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSGLOBL_ASSEMBLY_IDENTITY_DEF_A                                        "sysglobl,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSGLOBL_ASSEMBLY_IDENTITY_DEF_W                                       L"sysglobl,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSGLOBL_ASSEMBLY_IDENTITY_DEF_S                                       S"sysglobl,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSGLOBL_ASSEMBLY_IDENTITY_DEF_T                                   TEXT("sysglobl,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSGLOBL_ASSEMBLY_IDENTITY_REF                                           sysglobl,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSGLOBL_ASSEMBLY_IDENTITY_REF_A                                        "sysglobl,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSGLOBL_ASSEMBLY_IDENTITY_REF_W                                       L"sysglobl,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSGLOBL_ASSEMBLY_IDENTITY_REF_S                                       S"sysglobl,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSGLOBL_ASSEMBLY_IDENTITY_REF_T                                   TEXT("sysglobl,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSGLOBL_ASSEMBLY_IDENTITY_FRIEND_REF                                    sysglobl,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSGLOBL_ASSEMBLY_IDENTITY_FRIEND_REF_A                                 "sysglobl,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSGLOBL_ASSEMBLY_IDENTITY_FRIEND_REF_W                                L"sysglobl,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSGLOBL_ASSEMBLY_IDENTITY_FRIEND_REF_S                                S"sysglobl,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSGLOBL_ASSEMBLY_IDENTITY_FRIEND_REF_T                            TEXT("sysglobl,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSGLOBL_ASSEMBLY_IDENTITY_EXACT_REF                                     sysglobl,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSGLOBL_ASSEMBLY_IDENTITY_EXACT_REF_A                                  "sysglobl,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSGLOBL_ASSEMBLY_IDENTITY_EXACT_REF_W                                 L"sysglobl,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSGLOBL_ASSEMBLY_IDENTITY_EXACT_REF_S                                 S"sysglobl,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSGLOBL_ASSEMBLY_IDENTITY_EXACT_REF_T                             TEXT("sysglobl,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSGLOBL_ASSEMBLY_NAME                                                   sysglobl
#define SYSGLOBL_ASSEMBLY_NAME_A                                                "sysglobl"
#define SYSGLOBL_ASSEMBLY_NAME_W                                               L"sysglobl"
#define SYSGLOBL_ASSEMBLY_NAME_S                                               S"sysglobl"
#define SYSGLOBL_ASSEMBLY_NAME_T                                           TEXT("sysglobl")
#define SYSGLOBL_ASSEMBLY_VERSION                                                2.0.3600.0
#define SYSGLOBL_ASSEMBLY_VERSION_A                                             "2.0.3600.0"
#define SYSGLOBL_ASSEMBLY_VERSION_W                                            L"2.0.3600.0"
#define SYSGLOBL_ASSEMBLY_VERSION_S                                            S"2.0.3600.0"
#define SYSGLOBL_ASSEMBLY_VERSION_T                                        TEXT("2.0.3600.0")
#define SYSGLOBL_ASSEMBLY_VERSION_IL                                              2:0:3600:0
#define SYSGLOBL_ASSEMBLY_PUBLIC_KEY                                             002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define SYSGLOBL_ASSEMBLY_PUBLIC_KEY_A                                          "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSGLOBL_ASSEMBLY_PUBLIC_KEY_W                                         L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSGLOBL_ASSEMBLY_PUBLIC_KEY_S                                         S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSGLOBL_ASSEMBLY_PUBLIC_KEY_T                                     TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define SYSGLOBL_ASSEMBLY_PUBLIC_KEY_IL                                          (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define SYSGLOBL_ASSEMBLY_PUBLIC_KEY_TOKEN                                       b03f5f7f11d50a3a
#define SYSGLOBL_ASSEMBLY_PUBLIC_KEY_TOKEN_A                                    "b03f5f7f11d50a3a"
#define SYSGLOBL_ASSEMBLY_PUBLIC_KEY_TOKEN_W                                   L"b03f5f7f11d50a3a"
#define SYSGLOBL_ASSEMBLY_PUBLIC_KEY_TOKEN_S                                   S"b03f5f7f11d50a3a"
#define SYSGLOBL_ASSEMBLY_PUBLIC_KEY_TOKEN_T                               TEXT("b03f5f7f11d50a3a")
#define SYSGLOBL_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                                    (b0 3f 5f 7f 11 d5 0a 3a )
#define SYSGLOBL_ASSEMBLY_CULTURE                                                neutral
#define SYSGLOBL_ASSEMBLY_CULTURE_A                                             "neutral"
#define SYSGLOBL_ASSEMBLY_CULTURE_W                                            L"neutral"
#define SYSGLOBL_ASSEMBLY_CULTURE_S                                            S"neutral"
#define SYSGLOBL_ASSEMBLY_CULTURE_T                                        TEXT("neutral")
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_DEF                       System.Configuration.Install,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_DEF_A                    "System.Configuration.Install,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_DEF_W                   L"System.Configuration.Install,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_DEF_S                   S"System.Configuration.Install,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_DEF_T               TEXT("System.Configuration.Install,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_REF                       System.Configuration.Install,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_REF_A                    "System.Configuration.Install,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_REF_W                   L"System.Configuration.Install,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_REF_S                   S"System.Configuration.Install,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_REF_T               TEXT("System.Configuration.Install,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_FRIEND_REF                System.Configuration.Install,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_FRIEND_REF_A             "System.Configuration.Install,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_FRIEND_REF_W            L"System.Configuration.Install,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_FRIEND_REF_S            S"System.Configuration.Install,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_FRIEND_REF_T        TEXT("System.Configuration.Install,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_EXACT_REF                 System.Configuration.Install,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_EXACT_REF_A              "System.Configuration.Install,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_EXACT_REF_W             L"System.Configuration.Install,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_EXACT_REF_S             S"System.Configuration.Install,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_IDENTITY_EXACT_REF_T         TEXT("System.Configuration.Install,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_NAME                               System.Configuration.Install
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_NAME_A                            "System.Configuration.Install"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_NAME_W                           L"System.Configuration.Install"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_NAME_S                           S"System.Configuration.Install"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_NAME_T                       TEXT("System.Configuration.Install")
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_VERSION                            2.0.3600.0
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_VERSION_A                         "2.0.3600.0"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_VERSION_W                        L"2.0.3600.0"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_VERSION_S                        S"2.0.3600.0"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_VERSION_T                    TEXT("2.0.3600.0")
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_VERSION_IL                          2:0:3600:0
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_PUBLIC_KEY                         002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_PUBLIC_KEY_A                      "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_PUBLIC_KEY_W                     L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_PUBLIC_KEY_S                     S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_PUBLIC_KEY_T                 TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_PUBLIC_KEY_IL                      (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_PUBLIC_KEY_TOKEN                   b03f5f7f11d50a3a
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_PUBLIC_KEY_TOKEN_A                "b03f5f7f11d50a3a"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_PUBLIC_KEY_TOKEN_W               L"b03f5f7f11d50a3a"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_PUBLIC_KEY_TOKEN_S               S"b03f5f7f11d50a3a"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_PUBLIC_KEY_TOKEN_T           TEXT("b03f5f7f11d50a3a")
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                (b0 3f 5f 7f 11 d5 0a 3a )
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_CULTURE                            neutral
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_CULTURE_A                         "neutral"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_CULTURE_W                        L"neutral"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_CULTURE_S                        S"neutral"
#define SYSTEM_CONFIGURATION_INSTALL_ASSEMBLY_CULTURE_T                    TEXT("neutral")
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_DEF                                        System.Data,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_DEF_A                                     "System.Data,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_DEF_W                                    L"System.Data,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_DEF_S                                    S"System.Data,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_DEF_T                                TEXT("System.Data,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_REF                                        System.Data,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_REF_A                                     "System.Data,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_REF_W                                    L"System.Data,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_REF_S                                    S"System.Data,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_REF_T                                TEXT("System.Data,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_FRIEND_REF                                 System.Data,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_FRIEND_REF_A                              "System.Data,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_FRIEND_REF_W                             L"System.Data,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_FRIEND_REF_S                             S"System.Data,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_FRIEND_REF_T                         TEXT("System.Data,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_EXACT_REF                                  System.Data,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_EXACT_REF_A                               "System.Data,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_EXACT_REF_W                              L"System.Data,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_EXACT_REF_S                              S"System.Data,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_ASSEMBLY_IDENTITY_EXACT_REF_T                          TEXT("System.Data,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_DATA_ASSEMBLY_NAME                                                System.Data
#define SYSTEM_DATA_ASSEMBLY_NAME_A                                             "System.Data"
#define SYSTEM_DATA_ASSEMBLY_NAME_W                                            L"System.Data"
#define SYSTEM_DATA_ASSEMBLY_NAME_S                                            S"System.Data"
#define SYSTEM_DATA_ASSEMBLY_NAME_T                                        TEXT("System.Data")
#define SYSTEM_DATA_ASSEMBLY_VERSION                                             2.0.3600.0
#define SYSTEM_DATA_ASSEMBLY_VERSION_A                                          "2.0.3600.0"
#define SYSTEM_DATA_ASSEMBLY_VERSION_W                                         L"2.0.3600.0"
#define SYSTEM_DATA_ASSEMBLY_VERSION_S                                         S"2.0.3600.0"
#define SYSTEM_DATA_ASSEMBLY_VERSION_T                                     TEXT("2.0.3600.0")
#define SYSTEM_DATA_ASSEMBLY_VERSION_IL                                           2:0:3600:0
#define SYSTEM_DATA_ASSEMBLY_PUBLIC_KEY                                          00000000000000000400000000000000
#define SYSTEM_DATA_ASSEMBLY_PUBLIC_KEY_A                                       "00000000000000000400000000000000"
#define SYSTEM_DATA_ASSEMBLY_PUBLIC_KEY_W                                      L"00000000000000000400000000000000"
#define SYSTEM_DATA_ASSEMBLY_PUBLIC_KEY_S                                      S"00000000000000000400000000000000"
#define SYSTEM_DATA_ASSEMBLY_PUBLIC_KEY_T                                  TEXT("00000000000000000400000000000000")
#define SYSTEM_DATA_ASSEMBLY_PUBLIC_KEY_IL                                       (00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00 )
#define SYSTEM_DATA_ASSEMBLY_PUBLIC_KEY_TOKEN                                    b77a5c561934e089
#define SYSTEM_DATA_ASSEMBLY_PUBLIC_KEY_TOKEN_A                                 "b77a5c561934e089"
#define SYSTEM_DATA_ASSEMBLY_PUBLIC_KEY_TOKEN_W                                L"b77a5c561934e089"
#define SYSTEM_DATA_ASSEMBLY_PUBLIC_KEY_TOKEN_S                                S"b77a5c561934e089"
#define SYSTEM_DATA_ASSEMBLY_PUBLIC_KEY_TOKEN_T                            TEXT("b77a5c561934e089")
#define SYSTEM_DATA_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                                 (b7 7a 5c 56 19 34 e0 89 )
#define SYSTEM_DATA_ASSEMBLY_CULTURE                                             neutral
#define SYSTEM_DATA_ASSEMBLY_CULTURE_A                                          "neutral"
#define SYSTEM_DATA_ASSEMBLY_CULTURE_W                                         L"neutral"
#define SYSTEM_DATA_ASSEMBLY_CULTURE_S                                         S"neutral"
#define SYSTEM_DATA_ASSEMBLY_CULTURE_T                                     TEXT("neutral")
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_IDENTITY_DEF                           System.Data.ObjectSpaces,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_IDENTITY_DEF_A                        "System.Data.ObjectSpaces,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_IDENTITY_DEF_W                       L"System.Data.ObjectSpaces,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_IDENTITY_DEF_S                       S"System.Data.ObjectSpaces,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_IDENTITY_DEF_T                   TEXT("System.Data.ObjectSpaces,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_IDENTITY_REF                           System.Data.ObjectSpaces,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_IDENTITY_REF_A                        "System.Data.ObjectSpaces,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_IDENTITY_REF_W                       L"System.Data.ObjectSpaces,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_IDENTITY_REF_S                       S"System.Data.ObjectSpaces,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_IDENTITY_REF_T                   TEXT("System.Data.ObjectSpaces,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_IDENTITY_FRIEND_REF                    System.Data.ObjectSpaces,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_IDENTITY_FRIEND_REF_A                 "System.Data.ObjectSpaces,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_IDENTITY_FRIEND_REF_W                L"System.Data.ObjectSpaces,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_IDENTITY_FRIEND_REF_S                S"System.Data.ObjectSpaces,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_IDENTITY_FRIEND_REF_T            TEXT("System.Data.ObjectSpaces,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_IDENTITY_EXACT_REF                     System.Data.ObjectSpaces,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_IDENTITY_EXACT_REF_A                  "System.Data.ObjectSpaces,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_IDENTITY_EXACT_REF_W                 L"System.Data.ObjectSpaces,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_IDENTITY_EXACT_REF_S                 S"System.Data.ObjectSpaces,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_IDENTITY_EXACT_REF_T             TEXT("System.Data.ObjectSpaces,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_NAME                                   System.Data.ObjectSpaces
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_NAME_A                                "System.Data.ObjectSpaces"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_NAME_W                               L"System.Data.ObjectSpaces"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_NAME_S                               S"System.Data.ObjectSpaces"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_NAME_T                           TEXT("System.Data.ObjectSpaces")
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_VERSION                                2.0.3600.0
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_VERSION_A                             "2.0.3600.0"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_VERSION_W                            L"2.0.3600.0"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_VERSION_S                            S"2.0.3600.0"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_VERSION_T                        TEXT("2.0.3600.0")
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_VERSION_IL                              2:0:3600:0
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_PUBLIC_KEY                             00000000000000000400000000000000
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_PUBLIC_KEY_A                          "00000000000000000400000000000000"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_PUBLIC_KEY_W                         L"00000000000000000400000000000000"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_PUBLIC_KEY_S                         S"00000000000000000400000000000000"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_PUBLIC_KEY_T                     TEXT("00000000000000000400000000000000")
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_PUBLIC_KEY_IL                          (00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00 )
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_PUBLIC_KEY_TOKEN                       b77a5c561934e089
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_PUBLIC_KEY_TOKEN_A                    "b77a5c561934e089"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_PUBLIC_KEY_TOKEN_W                   L"b77a5c561934e089"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_PUBLIC_KEY_TOKEN_S                   S"b77a5c561934e089"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_PUBLIC_KEY_TOKEN_T               TEXT("b77a5c561934e089")
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                    (b7 7a 5c 56 19 34 e0 89 )
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_CULTURE                                neutral
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_CULTURE_A                             "neutral"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_CULTURE_W                            L"neutral"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_CULTURE_S                            S"neutral"
#define SYSTEM_DATA_OBJECTSPACES_ASSEMBLY_CULTURE_T                        TEXT("neutral")
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_DEF                           System.Data.OracleClient,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_DEF_A                        "System.Data.OracleClient,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_DEF_W                       L"System.Data.OracleClient,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_DEF_S                       S"System.Data.OracleClient,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_DEF_T                   TEXT("System.Data.OracleClient,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_REF                           System.Data.OracleClient,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_REF_A                        "System.Data.OracleClient,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_REF_W                       L"System.Data.OracleClient,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_REF_S                       S"System.Data.OracleClient,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_REF_T                   TEXT("System.Data.OracleClient,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_FRIEND_REF                    System.Data.OracleClient,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_FRIEND_REF_A                 "System.Data.OracleClient,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_FRIEND_REF_W                L"System.Data.OracleClient,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_FRIEND_REF_S                S"System.Data.OracleClient,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_FRIEND_REF_T            TEXT("System.Data.OracleClient,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_EXACT_REF                     System.Data.OracleClient,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_EXACT_REF_A                  "System.Data.OracleClient,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_EXACT_REF_W                 L"System.Data.OracleClient,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_EXACT_REF_S                 S"System.Data.OracleClient,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_IDENTITY_EXACT_REF_T             TEXT("System.Data.OracleClient,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_NAME                                   System.Data.OracleClient
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_NAME_A                                "System.Data.OracleClient"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_NAME_W                               L"System.Data.OracleClient"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_NAME_S                               S"System.Data.OracleClient"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_NAME_T                           TEXT("System.Data.OracleClient")
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_VERSION                                2.0.3600.0
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_VERSION_A                             "2.0.3600.0"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_VERSION_W                            L"2.0.3600.0"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_VERSION_S                            S"2.0.3600.0"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_VERSION_T                        TEXT("2.0.3600.0")
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_VERSION_IL                              2:0:3600:0
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_PUBLIC_KEY                             00000000000000000400000000000000
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_PUBLIC_KEY_A                          "00000000000000000400000000000000"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_PUBLIC_KEY_W                         L"00000000000000000400000000000000"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_PUBLIC_KEY_S                         S"00000000000000000400000000000000"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_PUBLIC_KEY_T                     TEXT("00000000000000000400000000000000")
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_PUBLIC_KEY_IL                          (00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00 )
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_PUBLIC_KEY_TOKEN                       b77a5c561934e089
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_PUBLIC_KEY_TOKEN_A                    "b77a5c561934e089"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_PUBLIC_KEY_TOKEN_W                   L"b77a5c561934e089"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_PUBLIC_KEY_TOKEN_S                   S"b77a5c561934e089"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_PUBLIC_KEY_TOKEN_T               TEXT("b77a5c561934e089")
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                    (b7 7a 5c 56 19 34 e0 89 )
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_CULTURE                                neutral
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_CULTURE_A                             "neutral"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_CULTURE_W                            L"neutral"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_CULTURE_S                            S"neutral"
#define SYSTEM_DATA_ORACLECLIENT_ASSEMBLY_CULTURE_T                        TEXT("neutral")
#define SYSTEM_DATA_SQLXML_ASSEMBLY_IDENTITY_DEF                                 System.Data.SqlXml,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DATA_SQLXML_ASSEMBLY_IDENTITY_DEF_A                              "System.Data.SqlXml,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_IDENTITY_DEF_W                             L"System.Data.SqlXml,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_IDENTITY_DEF_S                             S"System.Data.SqlXml,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_IDENTITY_DEF_T                         TEXT("System.Data.SqlXml,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DATA_SQLXML_ASSEMBLY_IDENTITY_REF                                 System.Data.SqlXml,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DATA_SQLXML_ASSEMBLY_IDENTITY_REF_A                              "System.Data.SqlXml,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_IDENTITY_REF_W                             L"System.Data.SqlXml,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_IDENTITY_REF_S                             S"System.Data.SqlXml,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_IDENTITY_REF_T                         TEXT("System.Data.SqlXml,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DATA_SQLXML_ASSEMBLY_IDENTITY_FRIEND_REF                          System.Data.SqlXml,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DATA_SQLXML_ASSEMBLY_IDENTITY_FRIEND_REF_A                       "System.Data.SqlXml,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_IDENTITY_FRIEND_REF_W                      L"System.Data.SqlXml,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_IDENTITY_FRIEND_REF_S                      S"System.Data.SqlXml,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_IDENTITY_FRIEND_REF_T                  TEXT("System.Data.SqlXml,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DATA_SQLXML_ASSEMBLY_IDENTITY_EXACT_REF                           System.Data.SqlXml,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DATA_SQLXML_ASSEMBLY_IDENTITY_EXACT_REF_A                        "System.Data.SqlXml,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_IDENTITY_EXACT_REF_W                       L"System.Data.SqlXml,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_IDENTITY_EXACT_REF_S                       S"System.Data.SqlXml,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_IDENTITY_EXACT_REF_T                   TEXT("System.Data.SqlXml,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DATA_SQLXML_ASSEMBLY_NAME                                         System.Data.SqlXml
#define SYSTEM_DATA_SQLXML_ASSEMBLY_NAME_A                                      "System.Data.SqlXml"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_NAME_W                                     L"System.Data.SqlXml"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_NAME_S                                     S"System.Data.SqlXml"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_NAME_T                                 TEXT("System.Data.SqlXml")
#define SYSTEM_DATA_SQLXML_ASSEMBLY_VERSION                                      2.0.3600.0
#define SYSTEM_DATA_SQLXML_ASSEMBLY_VERSION_A                                   "2.0.3600.0"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_VERSION_W                                  L"2.0.3600.0"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_VERSION_S                                  S"2.0.3600.0"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_VERSION_T                              TEXT("2.0.3600.0")
#define SYSTEM_DATA_SQLXML_ASSEMBLY_VERSION_IL                                    2:0:3600:0
#define SYSTEM_DATA_SQLXML_ASSEMBLY_PUBLIC_KEY                                   002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define SYSTEM_DATA_SQLXML_ASSEMBLY_PUBLIC_KEY_A                                "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_PUBLIC_KEY_W                               L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_PUBLIC_KEY_S                               S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_PUBLIC_KEY_T                           TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define SYSTEM_DATA_SQLXML_ASSEMBLY_PUBLIC_KEY_IL                                (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define SYSTEM_DATA_SQLXML_ASSEMBLY_PUBLIC_KEY_TOKEN                             b03f5f7f11d50a3a
#define SYSTEM_DATA_SQLXML_ASSEMBLY_PUBLIC_KEY_TOKEN_A                          "b03f5f7f11d50a3a"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_PUBLIC_KEY_TOKEN_W                         L"b03f5f7f11d50a3a"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_PUBLIC_KEY_TOKEN_S                         S"b03f5f7f11d50a3a"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_PUBLIC_KEY_TOKEN_T                     TEXT("b03f5f7f11d50a3a")
#define SYSTEM_DATA_SQLXML_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                          (b0 3f 5f 7f 11 d5 0a 3a )
#define SYSTEM_DATA_SQLXML_ASSEMBLY_CULTURE                                      neutral
#define SYSTEM_DATA_SQLXML_ASSEMBLY_CULTURE_A                                   "neutral"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_CULTURE_W                                  L"neutral"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_CULTURE_S                                  S"neutral"
#define SYSTEM_DATA_SQLXML_ASSEMBLY_CULTURE_T                              TEXT("neutral")
#define SYSTEM_DEPLOYMENT_ASSEMBLY_IDENTITY_DEF                                  System.Deployment,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DEPLOYMENT_ASSEMBLY_IDENTITY_DEF_A                               "System.Deployment,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DEPLOYMENT_ASSEMBLY_IDENTITY_DEF_W                              L"System.Deployment,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DEPLOYMENT_ASSEMBLY_IDENTITY_DEF_S                              S"System.Deployment,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DEPLOYMENT_ASSEMBLY_IDENTITY_DEF_T                          TEXT("System.Deployment,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DEPLOYMENT_ASSEMBLY_IDENTITY_REF                                  System.Deployment,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DEPLOYMENT_ASSEMBLY_IDENTITY_REF_A                               "System.Deployment,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DEPLOYMENT_ASSEMBLY_IDENTITY_REF_W                              L"System.Deployment,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DEPLOYMENT_ASSEMBLY_IDENTITY_REF_S                              S"System.Deployment,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DEPLOYMENT_ASSEMBLY_IDENTITY_REF_T                          TEXT("System.Deployment,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DEPLOYMENT_ASSEMBLY_IDENTITY_FRIEND_REF                           System.Deployment,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DEPLOYMENT_ASSEMBLY_IDENTITY_FRIEND_REF_A                        "System.Deployment,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DEPLOYMENT_ASSEMBLY_IDENTITY_FRIEND_REF_W                       L"System.Deployment,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DEPLOYMENT_ASSEMBLY_IDENTITY_FRIEND_REF_S                       S"System.Deployment,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DEPLOYMENT_ASSEMBLY_IDENTITY_FRIEND_REF_T                   TEXT("System.Deployment,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DEPLOYMENT_ASSEMBLY_IDENTITY_EXACT_REF                            System.Deployment,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DEPLOYMENT_ASSEMBLY_IDENTITY_EXACT_REF_A                         "System.Deployment,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DEPLOYMENT_ASSEMBLY_IDENTITY_EXACT_REF_W                        L"System.Deployment,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DEPLOYMENT_ASSEMBLY_IDENTITY_EXACT_REF_S                        S"System.Deployment,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DEPLOYMENT_ASSEMBLY_IDENTITY_EXACT_REF_T                    TEXT("System.Deployment,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DEPLOYMENT_ASSEMBLY_NAME                                          System.Deployment
#define SYSTEM_DEPLOYMENT_ASSEMBLY_NAME_A                                       "System.Deployment"
#define SYSTEM_DEPLOYMENT_ASSEMBLY_NAME_W                                      L"System.Deployment"
#define SYSTEM_DEPLOYMENT_ASSEMBLY_NAME_S                                      S"System.Deployment"
#define SYSTEM_DEPLOYMENT_ASSEMBLY_NAME_T                                  TEXT("System.Deployment")
#define SYSTEM_DEPLOYMENT_ASSEMBLY_VERSION                                       2.0.3600.0
#define SYSTEM_DEPLOYMENT_ASSEMBLY_VERSION_A                                    "2.0.3600.0"
#define SYSTEM_DEPLOYMENT_ASSEMBLY_VERSION_W                                   L"2.0.3600.0"
#define SYSTEM_DEPLOYMENT_ASSEMBLY_VERSION_S                                   S"2.0.3600.0"
#define SYSTEM_DEPLOYMENT_ASSEMBLY_VERSION_T                               TEXT("2.0.3600.0")
#define SYSTEM_DEPLOYMENT_ASSEMBLY_VERSION_IL                                     2:0:3600:0
#define SYSTEM_DEPLOYMENT_ASSEMBLY_PUBLIC_KEY                                    002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define SYSTEM_DEPLOYMENT_ASSEMBLY_PUBLIC_KEY_A                                 "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_DEPLOYMENT_ASSEMBLY_PUBLIC_KEY_W                                L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_DEPLOYMENT_ASSEMBLY_PUBLIC_KEY_S                                S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_DEPLOYMENT_ASSEMBLY_PUBLIC_KEY_T                            TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define SYSTEM_DEPLOYMENT_ASSEMBLY_PUBLIC_KEY_IL                                 (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define SYSTEM_DEPLOYMENT_ASSEMBLY_PUBLIC_KEY_TOKEN                              b03f5f7f11d50a3a
#define SYSTEM_DEPLOYMENT_ASSEMBLY_PUBLIC_KEY_TOKEN_A                           "b03f5f7f11d50a3a"
#define SYSTEM_DEPLOYMENT_ASSEMBLY_PUBLIC_KEY_TOKEN_W                          L"b03f5f7f11d50a3a"
#define SYSTEM_DEPLOYMENT_ASSEMBLY_PUBLIC_KEY_TOKEN_S                          S"b03f5f7f11d50a3a"
#define SYSTEM_DEPLOYMENT_ASSEMBLY_PUBLIC_KEY_TOKEN_T                      TEXT("b03f5f7f11d50a3a")
#define SYSTEM_DEPLOYMENT_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                           (b0 3f 5f 7f 11 d5 0a 3a )
#define SYSTEM_DEPLOYMENT_ASSEMBLY_CULTURE                                       neutral
#define SYSTEM_DEPLOYMENT_ASSEMBLY_CULTURE_A                                    "neutral"
#define SYSTEM_DEPLOYMENT_ASSEMBLY_CULTURE_W                                   L"neutral"
#define SYSTEM_DEPLOYMENT_ASSEMBLY_CULTURE_S                                   S"neutral"
#define SYSTEM_DEPLOYMENT_ASSEMBLY_CULTURE_T                               TEXT("neutral")
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_DEF                                      System.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_DEF_A                                   "System.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_DEF_W                                  L"System.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_DEF_S                                  S"System.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_DEF_T                              TEXT("System.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_REF                                      System.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_REF_A                                   "System.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_REF_W                                  L"System.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_REF_S                                  S"System.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_REF_T                              TEXT("System.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_FRIEND_REF                               System.Design,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_FRIEND_REF_A                            "System.Design,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_FRIEND_REF_W                           L"System.Design,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_FRIEND_REF_S                           S"System.Design,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_FRIEND_REF_T                       TEXT("System.Design,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_EXACT_REF                                System.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_EXACT_REF_A                             "System.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_EXACT_REF_W                            L"System.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_EXACT_REF_S                            S"System.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DESIGN_ASSEMBLY_IDENTITY_EXACT_REF_T                        TEXT("System.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DESIGN_ASSEMBLY_NAME                                              System.Design
#define SYSTEM_DESIGN_ASSEMBLY_NAME_A                                           "System.Design"
#define SYSTEM_DESIGN_ASSEMBLY_NAME_W                                          L"System.Design"
#define SYSTEM_DESIGN_ASSEMBLY_NAME_S                                          S"System.Design"
#define SYSTEM_DESIGN_ASSEMBLY_NAME_T                                      TEXT("System.Design")
#define SYSTEM_DESIGN_ASSEMBLY_VERSION                                           2.0.3600.0
#define SYSTEM_DESIGN_ASSEMBLY_VERSION_A                                        "2.0.3600.0"
#define SYSTEM_DESIGN_ASSEMBLY_VERSION_W                                       L"2.0.3600.0"
#define SYSTEM_DESIGN_ASSEMBLY_VERSION_S                                       S"2.0.3600.0"
#define SYSTEM_DESIGN_ASSEMBLY_VERSION_T                                   TEXT("2.0.3600.0")
#define SYSTEM_DESIGN_ASSEMBLY_VERSION_IL                                         2:0:3600:0
#define SYSTEM_DESIGN_ASSEMBLY_PUBLIC_KEY                                        002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define SYSTEM_DESIGN_ASSEMBLY_PUBLIC_KEY_A                                     "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_DESIGN_ASSEMBLY_PUBLIC_KEY_W                                    L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_DESIGN_ASSEMBLY_PUBLIC_KEY_S                                    S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_DESIGN_ASSEMBLY_PUBLIC_KEY_T                                TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define SYSTEM_DESIGN_ASSEMBLY_PUBLIC_KEY_IL                                     (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define SYSTEM_DESIGN_ASSEMBLY_PUBLIC_KEY_TOKEN                                  b03f5f7f11d50a3a
#define SYSTEM_DESIGN_ASSEMBLY_PUBLIC_KEY_TOKEN_A                               "b03f5f7f11d50a3a"
#define SYSTEM_DESIGN_ASSEMBLY_PUBLIC_KEY_TOKEN_W                              L"b03f5f7f11d50a3a"
#define SYSTEM_DESIGN_ASSEMBLY_PUBLIC_KEY_TOKEN_S                              S"b03f5f7f11d50a3a"
#define SYSTEM_DESIGN_ASSEMBLY_PUBLIC_KEY_TOKEN_T                          TEXT("b03f5f7f11d50a3a")
#define SYSTEM_DESIGN_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                               (b0 3f 5f 7f 11 d5 0a 3a )
#define SYSTEM_DESIGN_ASSEMBLY_CULTURE                                           neutral
#define SYSTEM_DESIGN_ASSEMBLY_CULTURE_A                                        "neutral"
#define SYSTEM_DESIGN_ASSEMBLY_CULTURE_W                                       L"neutral"
#define SYSTEM_DESIGN_ASSEMBLY_CULTURE_S                                       S"neutral"
#define SYSTEM_DESIGN_ASSEMBLY_CULTURE_T                                   TEXT("neutral")
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_DEF                           System.DirectoryServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_DEF_A                        "System.DirectoryServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_DEF_W                       L"System.DirectoryServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_DEF_S                       S"System.DirectoryServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_DEF_T                   TEXT("System.DirectoryServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_REF                           System.DirectoryServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_REF_A                        "System.DirectoryServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_REF_W                       L"System.DirectoryServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_REF_S                       S"System.DirectoryServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_REF_T                   TEXT("System.DirectoryServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_FRIEND_REF                    System.DirectoryServices,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_FRIEND_REF_A                 "System.DirectoryServices,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_FRIEND_REF_W                L"System.DirectoryServices,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_FRIEND_REF_S                S"System.DirectoryServices,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_FRIEND_REF_T            TEXT("System.DirectoryServices,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_EXACT_REF                     System.DirectoryServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_EXACT_REF_A                  "System.DirectoryServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_EXACT_REF_W                 L"System.DirectoryServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_EXACT_REF_S                 S"System.DirectoryServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_IDENTITY_EXACT_REF_T             TEXT("System.DirectoryServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_NAME                                   System.DirectoryServices
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_NAME_A                                "System.DirectoryServices"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_NAME_W                               L"System.DirectoryServices"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_NAME_S                               S"System.DirectoryServices"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_NAME_T                           TEXT("System.DirectoryServices")
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_VERSION                                2.0.3600.0
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_VERSION_A                             "2.0.3600.0"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_VERSION_W                            L"2.0.3600.0"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_VERSION_S                            S"2.0.3600.0"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_VERSION_T                        TEXT("2.0.3600.0")
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_VERSION_IL                              2:0:3600:0
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_PUBLIC_KEY                             002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_PUBLIC_KEY_A                          "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_PUBLIC_KEY_W                         L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_PUBLIC_KEY_S                         S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_PUBLIC_KEY_T                     TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_PUBLIC_KEY_IL                          (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN                       b03f5f7f11d50a3a
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN_A                    "b03f5f7f11d50a3a"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN_W                   L"b03f5f7f11d50a3a"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN_S                   S"b03f5f7f11d50a3a"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN_T               TEXT("b03f5f7f11d50a3a")
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                    (b0 3f 5f 7f 11 d5 0a 3a )
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_CULTURE                                neutral
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_CULTURE_A                             "neutral"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_CULTURE_W                            L"neutral"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_CULTURE_S                            S"neutral"
#define SYSTEM_DIRECTORYSERVICES_ASSEMBLY_CULTURE_T                        TEXT("neutral")
#define SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_IDENTITY_DEF                 System.DirectoryServices.Protocols,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_IDENTITY_DEF_A              "System.DirectoryServices.Protocols,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_IDENTITY_DEF_W             L"System.DirectoryServices.Protocols,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_IDENTITY_DEF_S             S"System.DirectoryServices.Protocols,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_IDENTITY_DEF_T         TEXT("System.DirectoryServices.Protocols,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_IDENTITY_REF                 System.DirectoryServices.Protocols,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_IDENTITY_REF_A              "System.DirectoryServices.Protocols,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_IDENTITY_REF_W             L"System.DirectoryServices.Protocols,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_IDENTITY_REF_S             S"System.DirectoryServices.Protocols,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_IDENTITY_REF_T         TEXT("System.DirectoryServices.Protocols,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_IDENTITY_FRIEND_REF          System.DirectoryServices.Protocols,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_IDENTITY_FRIEND_REF_A       "System.DirectoryServices.Protocols,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_IDENTITY_FRIEND_REF_W      L"System.DirectoryServices.Protocols,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_IDENTITY_FRIEND_REF_S      S"System.DirectoryServices.Protocols,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_IDENTITY_FRIEND_REF_T  TEXT("System.DirectoryServices.Protocols,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_IDENTITY_EXACT_REF           System.DirectoryServices.Protocols,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_IDENTITY_EXACT_REF_A        "System.DirectoryServices.Protocols,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_IDENTITY_EXACT_REF_W       L"System.DirectoryServices.Protocols,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_IDENTITY_EXACT_REF_S       S"System.DirectoryServices.Protocols,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_IDENTITY_EXACT_REF_T   TEXT("System.DirectoryServices.Protocols,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_NAME                         System.DirectoryServices.Protocols
#define SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_NAME_A                      "System.DirectoryServices.Protocols"
#define SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_NAME_W                     L"System.DirectoryServices.Protocols"
#define SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_NAME_S                     S"System.DirectoryServices.Protocols"
#define SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_NAME_T                 TEXT("System.DirectoryServices.Protocols")
#define SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_VERSION                      2.0.3600.0
#define SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_VERSION_A                   "2.0.3600.0"
#define SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_VERSION_W                  L"2.0.3600.0"
#define SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_VERSION_S                  S"2.0.3600.0"
#define SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_VERSION_T              TEXT("2.0.3600.0")
#define SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_VERSION_IL                    2:0:3600:0
#define SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_PUBLIC_KEY                   002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_PUBLIC_KEY_A                "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_PUBLIC_KEY_W               L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_PUBLIC_KEY_S               S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_PUBLIC_KEY_T           TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_PUBLIC_KEY_IL                (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_PUBLIC_KEY_TOKEN             b03f5f7f11d50a3a
#define SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_PUBLIC_KEY_TOKEN_A          "b03f5f7f11d50a3a"
#define SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_PUBLIC_KEY_TOKEN_W         L"b03f5f7f11d50a3a"
#define SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_PUBLIC_KEY_TOKEN_S         S"b03f5f7f11d50a3a"
#define SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_PUBLIC_KEY_TOKEN_T     TEXT("b03f5f7f11d50a3a")
#define SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_PUBLIC_KEY_TOKEN_IL          (b0 3f 5f 7f 11 d5 0a 3a )
#define SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_CULTURE                      neutral
#define SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_CULTURE_A                   "neutral"
#define SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_CULTURE_W                  L"neutral"
#define SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_CULTURE_S                  S"neutral"
#define SYSTEM_DIRECTORYSERVICES_PROTOCOLS_ASSEMBLY_CULTURE_T              TEXT("neutral")
#define SYSTEM_ASSEMBLY_IDENTITY_DEF                                             System,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_ASSEMBLY_IDENTITY_DEF_A                                          "System,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_ASSEMBLY_IDENTITY_DEF_W                                         L"System,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_ASSEMBLY_IDENTITY_DEF_S                                         S"System,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_ASSEMBLY_IDENTITY_DEF_T                                     TEXT("System,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_ASSEMBLY_IDENTITY_REF                                             System,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_ASSEMBLY_IDENTITY_REF_A                                          "System,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_ASSEMBLY_IDENTITY_REF_W                                         L"System,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_ASSEMBLY_IDENTITY_REF_S                                         S"System,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_ASSEMBLY_IDENTITY_REF_T                                     TEXT("System,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_ASSEMBLY_IDENTITY_FRIEND_REF                                      System,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_ASSEMBLY_IDENTITY_FRIEND_REF_A                                   "System,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_ASSEMBLY_IDENTITY_FRIEND_REF_W                                  L"System,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_ASSEMBLY_IDENTITY_FRIEND_REF_S                                  S"System,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_ASSEMBLY_IDENTITY_FRIEND_REF_T                              TEXT("System,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_ASSEMBLY_IDENTITY_EXACT_REF                                       System,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_ASSEMBLY_IDENTITY_EXACT_REF_A                                    "System,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_ASSEMBLY_IDENTITY_EXACT_REF_W                                   L"System,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_ASSEMBLY_IDENTITY_EXACT_REF_S                                   S"System,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_ASSEMBLY_IDENTITY_EXACT_REF_T                               TEXT("System,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_ASSEMBLY_NAME                                                     System
#define SYSTEM_ASSEMBLY_NAME_A                                                  "System"
#define SYSTEM_ASSEMBLY_NAME_W                                                 L"System"
#define SYSTEM_ASSEMBLY_NAME_S                                                 S"System"
#define SYSTEM_ASSEMBLY_NAME_T                                             TEXT("System")
#define SYSTEM_ASSEMBLY_VERSION                                                  2.0.3600.0
#define SYSTEM_ASSEMBLY_VERSION_A                                               "2.0.3600.0"
#define SYSTEM_ASSEMBLY_VERSION_W                                              L"2.0.3600.0"
#define SYSTEM_ASSEMBLY_VERSION_S                                              S"2.0.3600.0"
#define SYSTEM_ASSEMBLY_VERSION_T                                          TEXT("2.0.3600.0")
#define SYSTEM_ASSEMBLY_VERSION_IL                                                2:0:3600:0
#define SYSTEM_ASSEMBLY_PUBLIC_KEY                                               00000000000000000400000000000000
#define SYSTEM_ASSEMBLY_PUBLIC_KEY_A                                            "00000000000000000400000000000000"
#define SYSTEM_ASSEMBLY_PUBLIC_KEY_W                                           L"00000000000000000400000000000000"
#define SYSTEM_ASSEMBLY_PUBLIC_KEY_S                                           S"00000000000000000400000000000000"
#define SYSTEM_ASSEMBLY_PUBLIC_KEY_T                                       TEXT("00000000000000000400000000000000")
#define SYSTEM_ASSEMBLY_PUBLIC_KEY_IL                                            (00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00 )
#define SYSTEM_ASSEMBLY_PUBLIC_KEY_TOKEN                                         b77a5c561934e089
#define SYSTEM_ASSEMBLY_PUBLIC_KEY_TOKEN_A                                      "b77a5c561934e089"
#define SYSTEM_ASSEMBLY_PUBLIC_KEY_TOKEN_W                                     L"b77a5c561934e089"
#define SYSTEM_ASSEMBLY_PUBLIC_KEY_TOKEN_S                                     S"b77a5c561934e089"
#define SYSTEM_ASSEMBLY_PUBLIC_KEY_TOKEN_T                                 TEXT("b77a5c561934e089")
#define SYSTEM_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                                      (b7 7a 5c 56 19 34 e0 89 )
#define SYSTEM_ASSEMBLY_CULTURE                                                  neutral
#define SYSTEM_ASSEMBLY_CULTURE_A                                               "neutral"
#define SYSTEM_ASSEMBLY_CULTURE_W                                              L"neutral"
#define SYSTEM_ASSEMBLY_CULTURE_S                                              S"neutral"
#define SYSTEM_ASSEMBLY_CULTURE_T                                          TEXT("neutral")
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_DEF                              System.Drawing.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_DEF_A                           "System.Drawing.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_DEF_W                          L"System.Drawing.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_DEF_S                          S"System.Drawing.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_DEF_T                      TEXT("System.Drawing.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_REF                              System.Drawing.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_REF_A                           "System.Drawing.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_REF_W                          L"System.Drawing.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_REF_S                          S"System.Drawing.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_REF_T                      TEXT("System.Drawing.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_FRIEND_REF                       System.Drawing.Design,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_FRIEND_REF_A                    "System.Drawing.Design,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_FRIEND_REF_W                   L"System.Drawing.Design,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_FRIEND_REF_S                   S"System.Drawing.Design,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_FRIEND_REF_T               TEXT("System.Drawing.Design,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_EXACT_REF                        System.Drawing.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_EXACT_REF_A                     "System.Drawing.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_EXACT_REF_W                    L"System.Drawing.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_EXACT_REF_S                    S"System.Drawing.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_IDENTITY_EXACT_REF_T                TEXT("System.Drawing.Design,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_NAME                                      System.Drawing.Design
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_NAME_A                                   "System.Drawing.Design"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_NAME_W                                  L"System.Drawing.Design"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_NAME_S                                  S"System.Drawing.Design"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_NAME_T                              TEXT("System.Drawing.Design")
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_VERSION                                   2.0.3600.0
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_VERSION_A                                "2.0.3600.0"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_VERSION_W                               L"2.0.3600.0"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_VERSION_S                               S"2.0.3600.0"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_VERSION_T                           TEXT("2.0.3600.0")
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_VERSION_IL                                 2:0:3600:0
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_PUBLIC_KEY                                002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_PUBLIC_KEY_A                             "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_PUBLIC_KEY_W                            L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_PUBLIC_KEY_S                            S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_PUBLIC_KEY_T                        TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_PUBLIC_KEY_IL                             (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_PUBLIC_KEY_TOKEN                          b03f5f7f11d50a3a
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_PUBLIC_KEY_TOKEN_A                       "b03f5f7f11d50a3a"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_PUBLIC_KEY_TOKEN_W                      L"b03f5f7f11d50a3a"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_PUBLIC_KEY_TOKEN_S                      S"b03f5f7f11d50a3a"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_PUBLIC_KEY_TOKEN_T                  TEXT("b03f5f7f11d50a3a")
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                       (b0 3f 5f 7f 11 d5 0a 3a )
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_CULTURE                                   neutral
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_CULTURE_A                                "neutral"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_CULTURE_W                               L"neutral"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_CULTURE_S                               S"neutral"
#define SYSTEM_DRAWING_DESIGN_ASSEMBLY_CULTURE_T                           TEXT("neutral")
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_DEF                                     System.Drawing,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_DEF_A                                  "System.Drawing,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_DEF_W                                 L"System.Drawing,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_DEF_S                                 S"System.Drawing,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_DEF_T                             TEXT("System.Drawing,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_REF                                     System.Drawing,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_REF_A                                  "System.Drawing,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_REF_W                                 L"System.Drawing,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_REF_S                                 S"System.Drawing,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_REF_T                             TEXT("System.Drawing,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_FRIEND_REF                              System.Drawing,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_FRIEND_REF_A                           "System.Drawing,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_FRIEND_REF_W                          L"System.Drawing,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_FRIEND_REF_S                          S"System.Drawing,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_FRIEND_REF_T                      TEXT("System.Drawing,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_EXACT_REF                               System.Drawing,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_EXACT_REF_A                            "System.Drawing,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_EXACT_REF_W                           L"System.Drawing,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_EXACT_REF_S                           S"System.Drawing,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_DRAWING_ASSEMBLY_IDENTITY_EXACT_REF_T                       TEXT("System.Drawing,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_DRAWING_ASSEMBLY_NAME                                             System.Drawing
#define SYSTEM_DRAWING_ASSEMBLY_NAME_A                                          "System.Drawing"
#define SYSTEM_DRAWING_ASSEMBLY_NAME_W                                         L"System.Drawing"
#define SYSTEM_DRAWING_ASSEMBLY_NAME_S                                         S"System.Drawing"
#define SYSTEM_DRAWING_ASSEMBLY_NAME_T                                     TEXT("System.Drawing")
#define SYSTEM_DRAWING_ASSEMBLY_VERSION                                          2.0.3600.0
#define SYSTEM_DRAWING_ASSEMBLY_VERSION_A                                       "2.0.3600.0"
#define SYSTEM_DRAWING_ASSEMBLY_VERSION_W                                      L"2.0.3600.0"
#define SYSTEM_DRAWING_ASSEMBLY_VERSION_S                                      S"2.0.3600.0"
#define SYSTEM_DRAWING_ASSEMBLY_VERSION_T                                  TEXT("2.0.3600.0")
#define SYSTEM_DRAWING_ASSEMBLY_VERSION_IL                                        2:0:3600:0
#define SYSTEM_DRAWING_ASSEMBLY_PUBLIC_KEY                                       002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define SYSTEM_DRAWING_ASSEMBLY_PUBLIC_KEY_A                                    "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_DRAWING_ASSEMBLY_PUBLIC_KEY_W                                   L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_DRAWING_ASSEMBLY_PUBLIC_KEY_S                                   S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_DRAWING_ASSEMBLY_PUBLIC_KEY_T                               TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define SYSTEM_DRAWING_ASSEMBLY_PUBLIC_KEY_IL                                    (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define SYSTEM_DRAWING_ASSEMBLY_PUBLIC_KEY_TOKEN                                 b03f5f7f11d50a3a
#define SYSTEM_DRAWING_ASSEMBLY_PUBLIC_KEY_TOKEN_A                              "b03f5f7f11d50a3a"
#define SYSTEM_DRAWING_ASSEMBLY_PUBLIC_KEY_TOKEN_W                             L"b03f5f7f11d50a3a"
#define SYSTEM_DRAWING_ASSEMBLY_PUBLIC_KEY_TOKEN_S                             S"b03f5f7f11d50a3a"
#define SYSTEM_DRAWING_ASSEMBLY_PUBLIC_KEY_TOKEN_T                         TEXT("b03f5f7f11d50a3a")
#define SYSTEM_DRAWING_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                              (b0 3f 5f 7f 11 d5 0a 3a )
#define SYSTEM_DRAWING_ASSEMBLY_CULTURE                                          neutral
#define SYSTEM_DRAWING_ASSEMBLY_CULTURE_A                                       "neutral"
#define SYSTEM_DRAWING_ASSEMBLY_CULTURE_W                                      L"neutral"
#define SYSTEM_DRAWING_ASSEMBLY_CULTURE_S                                      S"neutral"
#define SYSTEM_DRAWING_ASSEMBLY_CULTURE_T                                  TEXT("neutral")
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_DEF                          System.EnterpriseServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_DEF_A                       "System.EnterpriseServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_DEF_W                      L"System.EnterpriseServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_DEF_S                      S"System.EnterpriseServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_DEF_T                  TEXT("System.EnterpriseServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_REF                          System.EnterpriseServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_REF_A                       "System.EnterpriseServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_REF_W                      L"System.EnterpriseServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_REF_S                      S"System.EnterpriseServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_REF_T                  TEXT("System.EnterpriseServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_FRIEND_REF                   System.EnterpriseServices,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_FRIEND_REF_A                "System.EnterpriseServices,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_FRIEND_REF_W               L"System.EnterpriseServices,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_FRIEND_REF_S               S"System.EnterpriseServices,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_FRIEND_REF_T           TEXT("System.EnterpriseServices,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_EXACT_REF                    System.EnterpriseServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_EXACT_REF_A                 "System.EnterpriseServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_EXACT_REF_W                L"System.EnterpriseServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_EXACT_REF_S                S"System.EnterpriseServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_IDENTITY_EXACT_REF_T            TEXT("System.EnterpriseServices,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_NAME                                  System.EnterpriseServices
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_NAME_A                               "System.EnterpriseServices"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_NAME_W                              L"System.EnterpriseServices"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_NAME_S                              S"System.EnterpriseServices"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_NAME_T                          TEXT("System.EnterpriseServices")
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_VERSION                               2.0.3600.0
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_VERSION_A                            "2.0.3600.0"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_VERSION_W                           L"2.0.3600.0"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_VERSION_S                           S"2.0.3600.0"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_VERSION_T                       TEXT("2.0.3600.0")
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_VERSION_IL                             2:0:3600:0
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_PUBLIC_KEY                            002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_PUBLIC_KEY_A                         "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_PUBLIC_KEY_W                        L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_PUBLIC_KEY_S                        S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_PUBLIC_KEY_T                    TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_PUBLIC_KEY_IL                         (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN                      b03f5f7f11d50a3a
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN_A                   "b03f5f7f11d50a3a"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN_W                  L"b03f5f7f11d50a3a"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN_S                  S"b03f5f7f11d50a3a"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN_T              TEXT("b03f5f7f11d50a3a")
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                   (b0 3f 5f 7f 11 d5 0a 3a )
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_CULTURE                               neutral
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_CULTURE_A                            "neutral"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_CULTURE_W                           L"neutral"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_CULTURE_S                           S"neutral"
#define SYSTEM_ENTERPRISESERVICES_ASSEMBLY_CULTURE_T                       TEXT("neutral")
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_DEF                                  System.Management,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_DEF_A                               "System.Management,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_DEF_W                              L"System.Management,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_DEF_S                              S"System.Management,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_DEF_T                          TEXT("System.Management,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_REF                                  System.Management,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_REF_A                               "System.Management,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_REF_W                              L"System.Management,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_REF_S                              S"System.Management,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_REF_T                          TEXT("System.Management,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_FRIEND_REF                           System.Management,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_FRIEND_REF_A                        "System.Management,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_FRIEND_REF_W                       L"System.Management,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_FRIEND_REF_S                       S"System.Management,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_FRIEND_REF_T                   TEXT("System.Management,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_EXACT_REF                            System.Management,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_EXACT_REF_A                         "System.Management,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_EXACT_REF_W                        L"System.Management,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_EXACT_REF_S                        S"System.Management,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral"
#define SYSTEM_MANAGEMENT_ASSEMBLY_IDENTITY_EXACT_REF_T                    TEXT("System.Management,version=2.0.3600.0,publicKeyToken=b03f5f7f11d50a3a,culture=neutral")
#define SYSTEM_MANAGEMENT_ASSEMBLY_NAME                                          System.Management
#define SYSTEM_MANAGEMENT_ASSEMBLY_NAME_A                                       "System.Management"
#define SYSTEM_MANAGEMENT_ASSEMBLY_NAME_W                                      L"System.Management"
#define SYSTEM_MANAGEMENT_ASSEMBLY_NAME_S                                      S"System.Management"
#define SYSTEM_MANAGEMENT_ASSEMBLY_NAME_T                                  TEXT("System.Management")
#define SYSTEM_MANAGEMENT_ASSEMBLY_VERSION                                       2.0.3600.0
#define SYSTEM_MANAGEMENT_ASSEMBLY_VERSION_A                                    "2.0.3600.0"
#define SYSTEM_MANAGEMENT_ASSEMBLY_VERSION_W                                   L"2.0.3600.0"
#define SYSTEM_MANAGEMENT_ASSEMBLY_VERSION_S                                   S"2.0.3600.0"
#define SYSTEM_MANAGEMENT_ASSEMBLY_VERSION_T                               TEXT("2.0.3600.0")
#define SYSTEM_MANAGEMENT_ASSEMBLY_VERSION_IL                                     2:0:3600:0
#define SYSTEM_MANAGEMENT_ASSEMBLY_PUBLIC_KEY                                    002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
#define SYSTEM_MANAGEMENT_ASSEMBLY_PUBLIC_KEY_A                                 "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_MANAGEMENT_ASSEMBLY_PUBLIC_KEY_W                                L"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_MANAGEMENT_ASSEMBLY_PUBLIC_KEY_S                                S"002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"
#define SYSTEM_MANAGEMENT_ASSEMBLY_PUBLIC_KEY_T                            TEXT("002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293")
#define SYSTEM_MANAGEMENT_ASSEMBLY_PUBLIC_KEY_IL                                 (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 )
#define SYSTEM_MANAGEMENT_ASSEMBLY_PUBLIC_KEY_TOKEN                              b03f5f7f11d50a3a
#define SYSTEM_MANAGEMENT_ASSEMBLY_PUBLIC_KEY_TOKEN_A                           "b03f5f7f11d50a3a"
#define SYSTEM_MANAGEMENT_ASSEMBLY_PUBLIC_KEY_TOKEN_W                          L"b03f5f7f11d50a3a"
#define SYSTEM_MANAGEMENT_ASSEMBLY_PUBLIC_KEY_TOKEN_S                          S"b03f5f7f11d50a3a"
#define SYSTEM_MANAGEMENT_ASSEMBLY_PUBLIC_KEY_TOKEN_T                      TEXT("b03f5f7f11d50a3a")
#define SYSTEM_MANAGEMENT_ASSEMBLY_PUBLIC_KEY_TOKEN_IL                           (b0 3f 5f 7f 11 d5 0a 3a )
#define SYSTEM_MANAGEMENT_ASSEMBLY_CULTURE                                       neutral
#define SYSTEM_MANAGEMENT_ASSEMBLY_CULTURE_A                                    "neutral"
#define SYSTEM_MANAGEMENT_ASSEMBLY_CULTURE_W                                   L"neutral"
#define SYSTEM_MANAGEMENT_ASSEMBLY_CULTURE_S                                   S"neutral"
#define SYSTEM_MANAGEMENT_ASSEMBLY_CULTURE_T                               TEXT("neutral")
#define SYSTEM_MESSAGEBUS_ASSEMBLY_IDENTITY_DEF                                  System.MessageBus,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_MESSAGEBUS_ASSEMBLY_IDENTITY_DEF_A                               "System.MessageBus,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_MESSAGEBUS_ASSEMBLY_IDENTITY_DEF_W                              L"System.MessageBus,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_MESSAGEBUS_ASSEMBLY_IDENTITY_DEF_S                              S"System.MessageBus,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_MESSAGEBUS_ASSEMBLY_IDENTITY_DEF_T                          TEXT("System.MessageBus,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_MESSAGEBUS_ASSEMBLY_IDENTITY_REF                                  System.MessageBus,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_MESSAGEBUS_ASSEMBLY_IDENTITY_REF_A                               "System.MessageBus,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_MESSAGEBUS_ASSEMBLY_IDENTITY_REF_W                              L"System.MessageBus,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_MESSAGEBUS_ASSEMBLY_IDENTITY_REF_S                              S"System.MessageBus,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_MESSAGEBUS_ASSEMBLY_IDENTITY_REF_T                          TEXT("System.MessageBus,version=2.0.3600.0,publicKeyToken=b77a5c561934e089,culture=neutral")
#define SYSTEM_MESSAGEBUS_ASSEMBLY_IDENTITY_FRIEND_REF                           System.MessageBus,publicKeyToken=b77a5c561934e089,culture=neutral
#define SYSTEM_MESSAGEBUS_ASSEMBLY_IDENTITY_FRIEND_REF_A                        "System.MessageBus,publicKeyToken=b77a5c561934e089,culture=neutral"
#define SYSTEM_MESSAGEBUS_ASSEMBLY_IDENTITY_FRIEND_REF_W                     